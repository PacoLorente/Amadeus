# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              FRAME
  14  AA01
  15  AA01 08           	ex af,af'
  16  AA02 F5           	push af	;af'
  17  AA03 D9           	exx
  18  AA04 E5           	push hl	;hl'
  19  AA05 D5           	push de	;de'
  20  AA06 C5           	push bc	;bc'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl
  23  AA09 D5           	push de	;de
  24  AA0A C5           	push bc	;bc
  25  AA0B 08           	ex af,af'
  26  AA0C F5           	push af	;af
  27  AA0D DD E5        	push ix
  28  AA0F FD E5        	push iy
  29  AA11
  30  AA11 3E 02        	ld a,2
  31  AA13 D3 FE        	out ($fe),a
  32  AA15
  33  AA15 3A E1 89     	ld a,(Ctrl_3)
  34  AA18 CB 47        	bit 0,a
  35  AA1A 28 2C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  36  AA1C CB 57        	bit 2,a
  37  AA1E 28 28        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  38  AA20
  39  AA20              Borrando
  40  AA20
  41  AA20 2A DB 89     	ld hl,(Scanlines_album_SP)
  42  AA23 CD F6 8C     	call Extrae_address
  43  AA26
  44  AA26 24           	inc h
  45  AA27 25           	dec h
  46  AA28 28 05        	jr z,Pintando
  47  AA2A
  48  AA2A CD 19 91     	call Pinta_Sprites
  49  AA2D
  50  AA2D 18 F1        	jr Borrando
  51  AA2F
  52  AA2F              Pintando
  53  AA2F
  54  AA2F 2A DD 89     	ld hl,(India_SP)
  55  AA32 2C           	inc l
  56  AA33 CD F6 8C     	call Extrae_address
  57  AA36
  58  AA36 24           	inc h
  59  AA37 25           	dec h
  60  AA38 28 0E        	jr z,1F
  61  AA3A
  62  AA3A 1C           	inc e
  63  AA3B 1C           	inc e
  64  AA3C
  65  AA3C ED 53 DD 89  	ld (India_SP),de
  66  AA40
  67  AA40 CD F6 8C     	call Extrae_address
  68  AA43
  69  AA43 CD 19 91     	call Pinta_Sprites
  70  AA46
  71  AA46 18 E7        	jr Pintando
  72  AA48
  73  AA48              ; Posible colisión Entidad-Amadeus ???
  74  AA48
  75  AA48              ;	ld a,(Impacto2)
  76  AA48              ;	bit 2,a
  77  AA48              ;	jr z,1F
  78  AA48
  79  AA48              ;	call Detecta_colision_nave_entidad
  80  AA48
  81  AA48              ;1 ld a,4
  82  AA48              ;	out ($fe),a
  83  AA48              ;	call Gestiona_Amadeus
  84  AA48
  85  AA48              ;	ld a,7
  86  AA48              ;	out ($fe),a											; Borde blanco.
  87  AA48              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  88  AA48              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  89  AA48
  90  AA48              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  91  AA48
  92  AA48              ;	call Recupera_parametros_DRAW
  93  AA48
  94  AA48 3A E1 89     1 ld a,(Ctrl_3)
  95  AA4B CB 47        	bit 0,a
  96  AA4D 28 03        	jr z,2F 											; No actualizamos FRAMES si el último cuadro no se completó.
  97  AA4F
  98  AA4F CD 38 00     	call ROM_keyboard									; Actualiza FRAMES y ejecuta las rutinas de teclado de la ROM.
  99  AA52
 100  AA52 21 E1 89     2 ld hl,Ctrl_3
 101  AA55 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 102  AA57 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 103  AA59
 104  AA59              ;	call Recupera_todos_los_registros
 105  AA59
 106  AA59 FD E1            pop iy
 107  AA5B DD E1        	pop ix
 108  AA5D F1           	pop af
 109  AA5E C1           	pop bc
 110  AA5F D1           	pop de
 111  AA60 E1           	pop hl
 112  AA61 D9           	exx
 113  AA62 C1           	pop bc
 114  AA63 D1           	pop de
 115  AA64 E1           	pop hl
 116  AA65 08           	ex af,af'
 117  AA66 F1           	pop af
 118  AA67 08           	ex af,af'
 119  AA68 D9           	exx
 120  AA69
 121  AA69 FB           	ei
 122  AA6A
 123  AA6A 3E 01        	ld a,1												; Borde azul.
 124  AA6C D3 FE        	out ($fe),a
 125  AA6E
 126  AA6E C9           	ret
 127  AA6F
 128  AA6F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 129  AA6F
 130  AA6F              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6F              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6F              ;
   3+ AA6F              ;	17/02/23
   4+ AA6F              ;
   5+ AA6F              ;	Sprites e índices.
   6+ AA6F
   7+ AA6F              	org $8120
   8+ 8120
   9+ 8120              ; Disparo.
  10+ 8120
  11+ 8120 28 81        Indice_disparo defw Disparo_0
  12+ 8122 2E 81        	defw Disparo_f9
  13+ 8124 34 81        	defw Disparo_fb
  14+ 8126 3A 81        	defw Disparo_fd
  15+ 8128
  16+ 8128              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8128 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 812C 01 80
  18+ 812E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 812E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8132 00 60
  20+ 8134              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8134 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8138 18 00
  22+ 813A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 813A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 813E 06 00
  24+ 8140
  25+ 8140              ; ----------------------------------------------------------------------------------------
  26+ 8140
  27+ 8140              ; Badsat_izq. 2x2.
  28+ 8140
  29+ 8140 50 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8142 C0 82        	defw Badsat_izq_fe
  31+ 8144 90 82        	defw Badsat_izq_fd
  32+ 8146 60 82        	defw Badsat_izq_fc
  33+ 8148 30 82        	defw Badsat_izq_fb
  34+ 814A 00 82        	defw Badsat_izq_fa
  35+ 814C B0 81        	defw Badsat_izq_f9
  36+ 814E 80 81        	defw Badsat_izq_f8
  37+ 8150
  38+ 8150 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8153 02 14 00     	DEFB 	$02,$14,$00
  40+ 8156 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8159 02 55 00     	DEFB 	$02,$55,$00
  42+ 815C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 815F 02 54 00     	DEFB 	$02,$54,$00
  44+ 8162 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 8165 03 60 00     	DEFB 	$03,$60,$00
  46+ 8168 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 816B 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 816E 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 8171 54 40 00     	DEFB 	$54,$40,$00
  50+ 8174 AA 60 00     	DEFB	$AA,$60,$00
  51+ 8177 54 00 00     	DEFB 	$54,$00,$00
  52+ 817A 28 00 00     	DEFB 	$28,$00,$00
  53+ 817D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8180
  55+ 8180 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 8184 0A 00 01 15
  56+ 8188 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 818C 01 55 00 01
  57+ 8190 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 8194 00 01 B0 00
  58+ 8198 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 819C FC 00 15 F4
  59+ 81A0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81A4 55 30 00 2A
  60+ 81A8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81AC 00 08 00 00
  61+ 81B0
  62+ 81B0 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81B4 85 00 00 8A
  63+ 81B8 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81BC 00 AA 80 00
  64+ 81C0 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81C4 00 00 D8 00
  65+ 81C8 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81CC FE 00 0A FA
  66+ 81D0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81D4 2A 98 00 15
  67+ 81D8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81DC 00 04 00 00
  68+ 81E0
  69+ 81E0
  70+ 81E0              ;! 39 bytes libres aquí !!!!!
  71+ 81E0
  72+ 81E0              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 E0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 10 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 40 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 40 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 10 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC E0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 00     Amadeus DEFB $01,$80,0
 214+ 84B3 23 C4 00     	DEFB	$23,$C4,0
 215+ 84B6 26 64 00     	DEFB	$26,$64,0
 216+ 84B9 24 24 00     	DEFB	$24,$24,0
 217+ 84BC 2C 34 00     	DEFB	$2C,$34,0
 218+ 84BF 6D B6 00     	DEFB	$6D,$B6,0
 219+ 84C2 6F F6 00     	DEFB	$6F,$F6,0
 220+ 84C5 67 E6 00     	DEFB	$67,$E6,0
 221+ 84C8 E7 E7 00     	DEFB	$E7,$E7,0
 222+ 84CB F3 CF 00     	DEFB	$F3,$CF,0
 223+ 84CE F7 EF 00     	DEFB	$F7,$EF,0
 224+ 84D1 FF FF 00     	DEFB	$FF,$FF,0
 225+ 84D4 FB DF 00     	DEFB	$FB,$DF,0
 226+ 84D7 FB DF 00     	DEFB	$FB,$DF,0
 227+ 84DA 8B D1 00     	DEFB	$8B,$D1,0
 228+ 84DD 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 229+ 84E0
 230+ 84E0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 230+ 84E4 F1 00 09 99
 231+ 84E8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 231+ 84EC 0B 0D 00 1B
 232+ 84F0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 232+ 84F4 80 19 F9 80
 233+ 84F8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 233+ 84FC F3 C0 3D FB
 234+ 8500 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 234+ 8504 3E F7 C0 3E
 235+ 8508 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 235+ 850C 40 1C 63 80
 236+ 8510
 237+ 8510 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 237+ 8514 3C 40 02 66
 238+ 8518 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 238+ 851C 02 C3 40 06
 239+ 8520 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 239+ 8524 60 06 7E 60
 240+ 8528 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 240+ 852C 3C F0 0F 7E
 241+ 8530 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 241+ 8534 0F BD F0 0F
 242+ 8538 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 242+ 853C 10 07 18 E0
 243+ 8540
 244+ 8540 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 244+ 8544 8F 10 00 99
 245+ 8548 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 245+ 854C 00 B0 D0 01
 246+ 8550 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 246+ 8554 D8 01 9F 98
 247+ 8558 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 247+ 855C CF 3C 03 DF
 248+ 8560 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 248+ 8564 03 EF 7C 03
 249+ 8568 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 249+ 856C 44 01 C6 38
 250+ 8570
 251+ 8570              ; ----------------------------------------------------------------------------------------
 252+ 8570
 253+ 8570              ;	org $8690
 254+ 8570
 255+ 8570 76 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 256+ 8572 A6 85        	defw Explosion_2x3_2
 257+ 8574 D6 85        	defw Explosion_2x3_3
 258+ 8576
 259+ 8576 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 259+ 857A 10 00 04 38
 260+ 857E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 260+ 8582 02 E6 80 01
 261+ 8586 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 261+ 858A 00 03 DD 80
 262+ 858E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 262+ 8592 3B 80 01 9D
 263+ 8596 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 263+ 859A 02 FD 80 03
 264+ 859E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 264+ 85A2 00 08 00 00
 265+ 85A6
 266+ 85A6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 266+ 85AA 38 10 03 BC
 267+ 85AE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 267+ 85B2 04 06 C0 00
 268+ 85B6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 268+ 85BA 00 03 DD 80
 269+ 85BE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 269+ 85C2 3A 70 01 9C
 270+ 85C6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 270+ 85CA 04 F8 80 06
 271+ 85CE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 271+ 85D2 00 00 00 00
 272+ 85D6
 273+ 85D6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 273+ 85DA 00 20 08 00
 274+ 85DE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 274+ 85E2 00 06 00 00
 275+ 85E6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 275+ 85EA 00 00 14 30
 276+ 85EE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 276+ 85F2 38 00 01 08
 277+ 85F6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 277+ 85FA 00 80 00 04
 278+ 85FE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 278+ 8602 10 08 00 20
 279+ 8606
 280+ 8606              ; ------------------------------------------
 281+ 8606
 282+ 8606 0C 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 283+ 8608 2C 86        	defw Explosion_2x2_2
 284+ 860A 4C 86        	defw Explosion_2x2_3
 285+ 860C
 286+ 860C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 286+ 8610 43 84 37 D8
 287+ 8614 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 287+ 8618 17 F0 3D D8
 288+ 861C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 288+ 8620 19 D0 1F 60
 289+ 8624 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 289+ 8628 40 00 80 00
 290+ 862C
 291+ 862C
 292+ 862C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 292+ 8630 3B C2 60 0C
 293+ 8634 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 293+ 8638 07 F0 3D D8
 294+ 863C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 294+ 8640 19 C6 1F 64
 295+ 8644 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 295+ 8648 80 00 00 00
 296+ 864C
 297+ 864C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 297+ 8650 88 04 10 0C
 298+ 8654 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 298+ 8658 81 E0 01 43
 299+ 865C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 299+ 8660 10 80 18 00
 300+ 8664 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 300+ 8668 60 01 80 02
 301+ 866C
 302+ 866C
 303+ 866C
 304+ 866C
 305+ 866C
# file closed: Sprites_e_indices.asm
 131  866C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 866C              ; ---------------------------------------------------------------------
   2+ 866C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 866C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 866C              ; ---------------------------------------------------------------------
   5+ 866C
   6+ 866C              ; 27/03/24
   7+ 866C              ;
   8+ 866C              ;	En esta tabla iremos almacenando:
   9+ 866C              ;
  10+ 866C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 866C
  12+ 866C 00 00 00...  Numeros_aleatorios ds 7
  13+ 8673
  14+ 8673 00 00 00...  Tabla_de_pintado ds 24
  15+ 868B
  16+ 868B              ;	db 0, defw 0
  17+ 868B              ;	db 0, defw 0
  18+ 868B              ;	db 0, defw 0
  19+ 868B              ;	db 0, defw 0
  20+ 868B              ;	db 0, defw 0
  21+ 868B              ;	db 0, defw 0
  22+ 868B              ;	db 0, defw 0
  23+ 868B
  24+ 868B BD 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  25+ 868D              ;	defw ...
  26+ 868D              ; 	defw ...
  27+ 868D 00 00        	defw 0
  28+ 868F
  29+ 868F              ; Control. %00000001 00000001
  30+ 868F              ;
  31+ 868F              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  32+ 868F              ;                    _ hacen las entidades hacia abajo.
  33+ 868F              ;
  34+ 868F              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  35+ 868F
  36+ 868F 95 86        Indice_de_disparos_Amadeus defw Disparo_1A
  37+ 8691 9D 86        	defw Disparo_2A
  38+ 8693 A5 86        	defw Disparo_3A
  39+ 8695
  40+ 8695 00 00        Disparo_1A defw 0									; Control.
  41+ 8697 00 00        	defw 0											; Puntero objeto.
  42+ 8699 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  43+ 869B 00 00        	defw 0											; Rutina de impresión.
  44+ 869D
  45+ 869D 00 00        Disparo_2A defw 0									; Control.
  46+ 869F 00 00        	defw 0											; Puntero objeto.
  47+ 86A1 00 00        	defw 0											; Puntero de impresión.
  48+ 86A3 00 00        	defw 0											; Rutina de impresión.
  49+ 86A5
  50+ 86A5 00 00        Disparo_3A defw 0
  51+ 86A7
  52+ 86A7 BD 86        Indice_de_disparos_entidades defw Disparo_1
  53+ 86A9 C5 86        	defw Disparo_2
  54+ 86AB CD 86        	defw Disparo_3
  55+ 86AD D5 86        	defw Disparo_4
  56+ 86AF DD 86        	defw Disparo_5
  57+ 86B1 E5 86        	defw Disparo_6
  58+ 86B3 ED 86        	defw Disparo_7
  59+ 86B5 F5 86        	defw Disparo_8
  60+ 86B7 FD 86        	defw Disparo_9
  61+ 86B9 05 87        	defw Disparo_10
  62+ 86BB 0D 87        	defw Disparo_11
  63+ 86BD
  64+ 86BD 00 00        Disparo_1 defw 0									; Control.
  65+ 86BF 00 00        	defw 0											; Puntero objeto.
  66+ 86C1 00 00        	defw 0											; Puntero de impresión.
  67+ 86C3 00 00        	defw 0											; Rutina de impresión.
  68+ 86C5
  69+ 86C5 00 00        Disparo_2 defw 0									; Control.
  70+ 86C7 00 00        	defw 0											; Puntero objeto.
  71+ 86C9 00 00        	defw 0											; Puntero de impresión.
  72+ 86CB 00 00        	defw 0											; Rutina de impresión.
  73+ 86CD
  74+ 86CD 00 00        Disparo_3 defw 0									; Control.
  75+ 86CF 00 00        	defw 0											; Puntero objeto.
  76+ 86D1 00 00        	defw 0											; Puntero de impresión.
  77+ 86D3 00 00        	defw 0											; Rutina de impresión.
  78+ 86D5
  79+ 86D5 00 00        Disparo_4 defw 0									; Control.
  80+ 86D7 00 00        	defw 0											; Puntero objeto.
  81+ 86D9 00 00        	defw 0											; Puntero de impresión.
  82+ 86DB 00 00        	defw 0											; Rutina de impresión.
  83+ 86DD
  84+ 86DD 00 00        Disparo_5 defw 0									; Control.
  85+ 86DF 00 00        	defw 0											; Puntero objeto.
  86+ 86E1 00 00        	defw 0											; Puntero de impresión.
  87+ 86E3 00 00        	defw 0											; Rutina de impresión.
  88+ 86E5
  89+ 86E5 00 00        Disparo_6 defw 0									; Control.
  90+ 86E7 00 00        	defw 0											; Puntero objeto.
  91+ 86E9 00 00        	defw 0											; Puntero de impresión.
  92+ 86EB 00 00        	defw 0											; Rutina de impresión.
  93+ 86ED
  94+ 86ED 00 00        Disparo_7 defw 0									; Control.
  95+ 86EF 00 00        	defw 0											; Puntero objeto.
  96+ 86F1 00 00        	defw 0											; Puntero de impresión.
  97+ 86F3 00 00        	defw 0											; Rutina de impresión.
  98+ 86F5
  99+ 86F5 00 00        Disparo_8 defw 0									; Control.
 100+ 86F7 00 00        	defw 0											; Puntero objeto.
 101+ 86F9 00 00        	defw 0											; Puntero de impresión.
 102+ 86FB 00 00        	defw 0											; Rutina de impresión.
 103+ 86FD
 104+ 86FD 00 00        Disparo_9 defw 0									; Control.
 105+ 86FF 00 00        	defw 0											; Puntero objeto.
 106+ 8701 00 00        	defw 0											; Puntero de impresión.
 107+ 8703 00 00        	defw 0											; Rutina de impresión.
 108+ 8705
 109+ 8705 00 00        Disparo_10 defw 0									; Control.
 110+ 8707 00 00        	defw 0											; Puntero objeto.
 111+ 8709 00 00        	defw 0											; Puntero de impresión.
 112+ 870B 00 00        	defw 0											; Rutina de impresión.
 113+ 870D
 114+ 870D 00 00        Disparo_11 defw 0
 115+ 870F
 116+ 870F              ; -------------------------------------------------------------------------------------
 117+ 870F              ;
 118+ 870F              ;	Índice de cajas de entidades.
 119+ 870F              ;
 120+ 870F              ;	18/1/24
 121+ 870F              ;
 122+ 870F
 123+ 870F              Indice_de_cajas_de_entidades
 124+ 870F
 125+ 870F 30 87        	defw Caja_1
 126+ 8711 3E 87        	defw Caja_2
 127+ 8713 4C 87        	defw Caja_3
 128+ 8715 5A 87        	defw Caja_4
 129+ 8717 68 87        	defw Caja_5
 130+ 8719 76 87        	defw Caja_6
 131+ 871B 84 87        	defw Caja_7
 132+ 871D
 133+ 871D 00 00        	defw 0
 134+ 871F 00 00        	defw 0
 135+ 8721
 136+ 8721              ; -------------------------
 137+ 8721
 138+ 8721              ; Relleno para que no se corrompa el movimiento. ?????
 139+ 8721
 140+ 8721 00           	db 0
 141+ 8722
 142+ 8722              ; ---------- ---------- ---------- ---------- ----------
 143+ 8722              ;
 144+ 8722              ;	28/05/24
 145+ 8722              ;
 146+ 8722              ; 	Cada caja tiene 14 bytes !!!
 147+ 8722              ;
 148+ 8722              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante_
 149+ 8722              ;	_para otra función.
 150+ 8722
 151+ 8722 00 00 00     Amadeus_BOX db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 152+ 8725 00           	db 0												; (Contador_de_vueltas).
 153+ 8726 00           	db 0												; (Impacto).
 154+ 8727 00 00        	defw 0												; (Puntero_de_impresion).
 155+ 8729 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 156+ 872B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 157+ 872D 00           	db 0												; (Ctrl_0).
 158+ 872E 00           	db 0												; (Ctrl_2).
 159+ 872F 00           	db 0												; (Velocidad).
 160+ 8730
 161+ 8730              ; ---------- ---------- ---------- ---------- ----------
 162+ 8730              ;
 163+ 8730              ;	22/01/24
 164+ 8730              ;
 165+ 8730              ; 	Cada caja tiene 14 bytes !!!
 166+ 8730
 167+ 8730 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 168+ 8733 00           	db 0												; (Contador_de_vueltas).
 169+ 8734 00           	db 0												; (Impacto).
 170+ 8735 00 00        	defw 0												; (Puntero_de_impresion).
 171+ 8737 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 172+ 8739 00 00        	defw 0 												; (Contador_de_mov_masticados).
 173+ 873B 00           	db 0												; (Ctrl_0).
 174+ 873C 00           	db 0												; (Ctrl_2).
 175+ 873D 00           	db 0												; (Velocidad).
 176+ 873E
 177+ 873E              ; ---------- ---------- ---------- ---------- ----------
 178+ 873E
 179+ 873E 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 180+ 8741 00           	db 0 												; (Contador_de_vueltas).
 181+ 8742 00           	db 0												; (Impacto).
 182+ 8743 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 8745 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 8747 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 8749 00           	db 0												; (Ctrl_0).
 186+ 874A 00           	db 0												; (Ctrl_2).
 187+ 874B 00           	db 0												; (Velocidad).
 188+ 874C
 189+ 874C              ; ---------- ---------- ---------- ---------- ----------
 190+ 874C
 191+ 874C 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 192+ 874F 00           	db 0 												; (Contador_de_vueltas).
 193+ 8750 00           	db 0												; (Impacto).
 194+ 8751 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 8753 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 8755 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 8757 00           	db 0												; (Ctrl_0).
 198+ 8758 00           	db 0												; (Ctrl_2).
 199+ 8759 00           	db 0												; (Velocidad).
 200+ 875A
 201+ 875A              ; ---------- ---------- ---------- ---------- ----------
 202+ 875A
 203+ 875A 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 875D 00           	db 0 												; (Contador_de_vueltas).
 205+ 875E 00           	db 0												; (Impacto).
 206+ 875F 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 8761 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 8763 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 8765 00           	db 0												; (Ctrl_0).
 210+ 8766 00           	db 0												; (Ctrl_2).
 211+ 8767 00           	db 0												; (Velocidad).
 212+ 8768
 213+ 8768              ; ---------- ---------- ---------- ---------- ----------
 214+ 8768
 215+ 8768 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 216+ 876B 00           	db 0 												; (Contador_de_vueltas).
 217+ 876C 00           	db 0												; (Impacto).
 218+ 876D 00 00        	defw 0												; (Puntero_de_impresion).
 219+ 876F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 220+ 8771 00 00        	defw 0 												; (Contador_de_mov_masticados).
 221+ 8773 00           	db 0												; (Ctrl_0).
 222+ 8774 00           	db 0												; (Ctrl_2).
 223+ 8775 00           	db 0												; (Velocidad).
 224+ 8776
 225+ 8776              ; ---------- ---------- ---------- ---------- ----------
 226+ 8776
 227+ 8776 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 228+ 8779 00           	db 0 												; (Contador_de_vueltas).
 229+ 877A 00           	db 0												; (Impacto).
 230+ 877B 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 877D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 877F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 8781 00           	db 0												; (Ctrl_0).
 234+ 8782 00           	db 0												; (Ctrl_2).
 235+ 8783 00           	db 0												; (Velocidad).
 236+ 8784
 237+ 8784              ; ---------- ---------- ---------- ---------- ----------
 238+ 8784
 239+ 8784 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 240+ 8787 00           	db 0 												; (Contador_de_vueltas).
 241+ 8788 00           	db 0												; (Impacto).
 242+ 8789 00 00        	defw 0												; (Puntero_de_impresion).
 243+ 878B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 244+ 878D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 245+ 878F 00           	db 0												; (Ctrl_0).
 246+ 8790 00           	db 0												; (Ctrl_2).
 247+ 8791 00           	db 0												; (Velocidad).
 248+ 8792
 249+ 8792              ; -------------------------------------------------------------------------------------
 250+ 8792              ;
 251+ 8792              ;	11/1/24
 252+ 8792              ;
 253+ 8792              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 254+ 8792              ;
 255+ 8792              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 256+ 8792              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 257+ 8792              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 258+ 8792              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 259+ 8792
 260+ 8792              Indice_de_definiciones_de_entidades
 261+ 8792
 262+ 8792 96 87        	defw Entidad_1
 263+ 8794 A3 87        	defw Entidad_2
 264+ 8796
 265+ 8796              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 266+ 8796
 267+ 8796              ;	BADSAT, (Satélite malvado).
 268+ 8796
 269+ 8796 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 270+ 8799 01           	db 1												; (Contador_de_vueltas).
 271+ 879A F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 272+ 879C 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 273+ 879E 03 40        	defw $4003	                                     	; (Posicion_inicio).
 274+ 87A0 01           	db 1												; (Cuad_objeto).
 275+ 87A1 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 276+ 87A3
 277+ 87A3 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 278+ 87A6 01           	db 1												; (Contador_de_vueltas).
 279+ 87A7 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 280+ 87A9 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 281+ 87AB 40 50        	defw $5040                                      	; (Posicion_inicio).
 282+ 87AD 01           	db 1												; (Cuad_objeto).
 283+ 87AE 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 284+ 87B0
 285+ 87B0              ; -------------------------------------------------------------------------------------
 286+ 87B0              ;
 287+ 87B0              ;	28/05/24
 288+ 87B0              ;
 289+ 87B0              ;	Definición de Amadeus.
 290+ 87B0              ;
 291+ 87B0              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 292+ 87B0              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 293+ 87B0
 294+ 87B0 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 295+ 87B3 00           	db 0												; (Contador_de_vueltas).
 296+ 87B4 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 297+ 87B6 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 298+ 87B8 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 299+ 87BA 03           	db 3												; (Cuad_objeto).
 300+ 87BB 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 132  87BD              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87BD
   2+ 87BD
   3+ 87BD              ;   07/07/23
   4+ 87BD              ;
   5+ 87BD              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87BD              ;
   7+ 87BD              ;   Codificación:
   8+ 87BD              ;
   9+ 87BD              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87BD              ;
  11+ 87BD              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87BD              ;
  13+ 87BD              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87BD              ;
  15+ 87BD              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87BD              ;
  17+ 87BD              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87BD              ;                               ..... %01000010 Vel_up 4
  19+ 87BD              ;                                               Vel_down 2
  20+ 87BD              ;                               ..... $42
  21+ 87BD              ;
  22+ 87BD              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87BD              ;
  24+ 87BD              ;                               ..... %01000010 Vel_left 4
  25+ 87BD              ;                                               Vel_right 2
  26+ 87BD              ;                               ..... $42
  27+ 87BD              ;
  28+ 87BD              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87BD              ;
  30+ 87BD              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87BD              ;
  32+ 87BD              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87BD              ;
  34+ 87BD              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87BD              ;                                     $53
  36+ 87BD              ;
  37+ 87BD              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87BD              ;
  39+ 87BD              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87BD              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87BD              ;
  42+ 87BD              ;                       Arriba ..... $81
  43+ 87BD              ;                       Arriba - izquierda ..... $a1
  44+ 87BD              ;                       Arriba - derecha ..... $91
  45+ 87BD              ;
  46+ 87BD              ;                       Abajo ..... $41
  47+ 87BD              ;                       Abajo - izquierda ..... $61
  48+ 87BD              ;                       Abajo - derecha ..... $51
  49+ 87BD              ;
  50+ 87BD              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87BD              ;
  52+ 87BD              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87BD              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87BD              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87BD              ;
  56+ 87BD              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87BD              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87BD              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87BD              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87BD              ;
  61+ 87BD              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87BD              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87BD              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87BD              ;
  65+ 87BD              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87BD              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87BD              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87BD              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87BD
  70+ 87BD              ; ----- ----- ----- ----- -----
  71+ 87BD
  72+ 87BD E9 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87BF F1 87            defw F_1
  74+ 87C1 FB 87            defw F_2
  75+ 87C3 05 88            defw Codo_abajo_derecha
  76+ 87C5 39 88            defw Derecha_y_subiendo
  77+ 87C7 43 88            defw Derecha_y_subiendo_1
  78+ 87C9 4D 88            defw F_3
  79+ 87CB 57 88            defw F_4
  80+ 87CD 61 88            defw Derecha_y_bajando
  81+ 87CF 6B 88            defw Derecha_y_bajando_1
  82+ 87D1 75 88            defw Derecha_y_bajando_2
  83+ 87D3 7F 88            defw Codo_derecha_abajo
  84+ 87D5 AF 88            defw Codo_abajo_izq.
  85+ 87D7 E3 88            defw Izquierda_y_subiendo
  86+ 87D9 ED 88            defw Izquierda_y_subiendo_1
  87+ 87DB F7 88            defw F_5
  88+ 87DD 01 89            defw F_6
  89+ 87DF 0B 89            defw Izquierda_y_bajando
  90+ 87E1 15 89            defw Izquierda_y_bajando_1
  91+ 87E3 1F 89            defw Izquierda_y_bajando_2
  92+ 87E5 29 89            defw Codo_izquierda_abajo
  93+ 87E7 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87E9
  95+ 87E9 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87ED 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87F1
  98+ 87F1 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87F5 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87F9 08 00
 100+ 87FB
 101+ 87FB 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87FF 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8803 0F FE
 103+ 8805
 104+ 8805 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8809 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 880D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8811 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8815 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8819 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 881D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8821 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8825 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8829 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 882D 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8831 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8835 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8839
 118+ 8839 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 883D 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8841 06 00
 120+ 8843
 121+ 8843 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8847 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 884B 02 00
 123+ 884D
 124+ 884D 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8851 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8855 04 00
 126+ 8857
 127+ 8857 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 885B 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 885F 08 00
 129+ 8861
 130+ 8861 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8865 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8869 02 00
 132+ 886B
 133+ 886B 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 886F 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8873 06 00
 135+ 8875
 136+ 8875 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8879 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 887D 06 00
 138+ 887F
 139+ 887F              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 887F
 141+ 887F 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8883 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8887 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 888B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 888F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8893 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8897 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 889B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 889F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88A3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88A7 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88AB 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88AF
 154+ 88AF 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88B3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88B7 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88BB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88BF 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88C3 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88C7 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88CB 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88CF 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88D3 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88D7 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88DB 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88DF 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88E3
 168+ 88E3 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88E7 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88EB 06 00
 170+ 88ED
 171+ 88ED 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88F1 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88F5 02 00
 173+ 88F7
 174+ 88F7 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88FB 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88FF 04 00
 176+ 8901
 177+ 8901 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8905 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8909 08 00
 179+ 890B
 180+ 890B 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 890F 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8913 02 00
 182+ 8915
 183+ 8915 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8919 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 891D 06 00
 185+ 891F
 186+ 891F 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8923 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8927 06 00
 188+ 8929
 189+ 8929 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 892D 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8931 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8935 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8939 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 893D 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8941 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8945 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8949 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 894D 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8951 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8955 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8959
 202+ 8959
 203+ 8959
 204+ 8959
 205+ 8959
 206+ 8959
 207+ 8959
 208+ 8959
 209+ 8959
 210+ 8959
# file closed: Patrones_de_mov.asm
 133  8959              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8959              ; 19/1/24
   2+ 8959
   3+ 8959              Indice_de_niveles
   4+ 8959
   5+ 8959 61 89        	defw Nivel_1
   6+ 895B 6D 89        	defw Nivel_2
   7+ 895D
   8+ 895D              ;	...
   9+ 895D              ;	...
  10+ 895D              ;	+ Niveles ...
  11+ 895D
  12+ 895D 00 00        	defw 0
  13+ 895F 00 00        	defw 0
  14+ 8961
  15+ 8961 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8962 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8966 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 896A 01 01 01
  18+ 896D
  19+ 896D 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 896E 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8972 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8976 01 02
  22+ 8978 02 01 01 01  	db 2,1,1,1,1,2
  22+ 897C 01 02
  23+ 897E
# file closed: Niveles.asm
 134  897E
 135  897E              ; ******************************************************************************************************************************************************************************************
 136  897E              ; Constantes.
 137  897E              ; ******************************************************************************************************************************************************************************************
 138  897E              ;
 139  897E              ; 09/03/24
 140  897E
 141  897E              ;
 142  897E              ; Constantes.
 143  897E              ;
 144  897E
 145  897E              ROM_keyboard equ $0038 									; Rutina de ROM. Actualiza FRAMES y escanea el teclado.
 146  897E              FRAMES equ $5c78										; Variable de 16 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
 147  897E
 148  897E              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 149  897E
 150  897E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 151  897E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 152  897E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 153  897E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 154  897E
 155  897E              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb20 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 156  897E              Almacen_de_movimientos_masticados_Amadeus equ $e000		; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
 157  897E
 158  897E              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 159  897E
 160  897E              ;                                                       ; 35 bytes por entidad.
 161  897E              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 162  897E              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 163  897E              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 164  897E              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 165  897E
 166  897E              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 167  897E
 168  897E
 169  897E              ; ******************************************************************************************************************************************************************************************
 170  897E              ; Variables.
 171  897E              ; ******************************************************************************************************************************************************************************************
 172  897E
 173  897E              ;
 174  897E              ; 12/05/24
 175  897E              ;
 176  897E              ; Variables de DRAW. (Motor principal).	44 Bytes.
 177  897E              ;
 178  897E
 179  897E              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 180  897E
 181  897E 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 182  897F              ;															- Patrón de movimiento.
 183  897F              ;															- Aspecto
 184  897F 00           Filas db 0												; Filas. [DRAW]
 185  8980 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 186  8981 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 187  8983 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 188  8985 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 189  8986 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 190  8987
 191  8987              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 192  8987
 193  8987 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 194  8988              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 195  8988              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 196  8988 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 197  8989              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 198  8989
 199  8989              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 200  8989              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 201  8989              ; Ejemplos.
 202  8989
 203  8989              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 204  8989              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 205  8989              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 206  8989              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 207  8989              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 208  8989
 209  8989              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 210  8989
 211  8989              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 212  8989              ;
 213  8989              ;	COLORES: 0 ..... NEGRO
 214  8989              ;    		 1 ..... AZUL
 215  8989              ; 			 2 ..... ROJO
 216  8989              ;			 3 ..... MAGENTA
 217  8989              ; 			 4 ..... VERDE
 218  8989              ; 			 5 ..... CIAN
 219  8989              ;			 6 ..... AMARILLO
 220  8989              ; 			 7 ..... BLANCO
 221  8989
 222  8989 00 00        Indice_Sprite_der defw 0
 223  898B 00 00        Indice_Sprite_izq defw 0
 224  898D 00 00        Puntero_DESPLZ_der defw 0
 225  898F 00 00        Puntero_DESPLZ_izq defw 0
 226  8991
 227  8991 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 228  8993 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 229  8994
 230  8994              ; Variables de objeto. (Características).
 231  8994
 232  8994 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 233  8995              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 234  8995              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 235  8995              ; Variables_de_borrado ds 6
 236  8995
 237  8995 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 238  8997              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 239  8997
 240  8997 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 241  8999
 242  8999              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 243  8999              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 244  8999
 245  8999 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 246  899B              ;														; _palabras que componen el "movimiento_masticado".
 247  899B
 248  899B              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 249  899B
 250  899B 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 251  899C              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 252  899C              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 253  899C              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 254  899C              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 255  899C              ;
 256  899C              ; 														DESCRIPCIÖN:
 257  899C              ;
 258  899C              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 259  899C              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 260  899C              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 261  899C              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 262  899C              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 263  899C              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 264  899C              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 265  899C              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 266  899C              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 267  899C              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 268  899C              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 269  899C              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 270  899C              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 271  899C              ;
 272  899C              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 273  899C              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 274  899C              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 275  899C
 276  899C              ; Variables de funcionamiento. [DRAW].
 277  899C
 278  899C 00           Columnas db 0
 279  899D 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 280  899F              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 281  899F 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  89A0
 283  89A0              ; variables de control general.
 284  89A0
 285  89A0 00           Ctrl_2 db 0
 286  89A1              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 287  89A1              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 288  89A1              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 289  89A1              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 290  89A1              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 291  89A1              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 292  89A1              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 293  89A1              ;
 294  89A1              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 295  89A1              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 296  89A1              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 297  89A1              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 298  89A1              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 299  89A1              ;														BIT 4, ???
 300  89A1              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 301  89A1
 302  89A1 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 303  89A2              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 304  89A2              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 305  89A2              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 306  89A2              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 307  89A2
 308  89A2 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 309  89A3
 310  89A3              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 311  89A3
 312  89A3              ;					         		---------;      ;---------
 313  89A3
 314  89A3              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 315  89A3
 316  89A3              Perfiles_de_velocidad
 317  89A3
 318  89A3 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 319  89A4 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 320  89A5 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 321  89A6 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 322  89A7
 323  89A7              ; Contadores de 16 bits.
 324  89A7
 325  89A7 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 326  89A9 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 327  89AB 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 328  89AD 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 329  89AF
 330  89AF              ; Movimiento. ------------------------------------------------------------------------------------------------------
 331  89AF
 332  89AF 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 333  89B1 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 334  89B3 00 00        Puntero_indice_mov_bucle defw 0							;
 335  89B5              ;
 336  89B5              ;
 337  89B5 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 338  89B6              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 339  89B6              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 340  89B6 00           Incrementa_puntero_backup db 0
 341  89B7 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 342  89B8              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 343  89B8 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 344  89B9 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 345  89BA 00           Cola_de_desplazamiento db 0								; Este byte indica:
 346  89BB              ;
 347  89BB              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 348  89BB              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 349  89BB              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 350  89BB              ;
 351  89BB              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 352  89BB              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 353  89BB              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 354  89BB              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 355  89BB              ;
 356  89BB              ;														;	"$ff" ..... Bucle infinito de repetición.
 357  89BB              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 358  89BB              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 359  89BB              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 360  89BB
 361  89BB 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 362  89BC
 363  89BC              ;														DESCRIPCIÓN:
 364  89BC              ;
 365  89BC              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 366  89BC              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 367  89BC              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 368  89BC              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 369  89BC              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 370  89BC              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 371  89BC
 372  89BC              ;														BIT 3, Recarga de nueva oleada.
 373  89BC              ;														BIT 4, Recarga de nueva oleada.
 374  89BC              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 375  89BC              ;														BIT 6, **** Frame completo.
 376  89BC              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 377  89BC
 378  89BC 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 379  89BE              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 380  89BE              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 381  89BE              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 382  89BE
 383  89BE              ; Gestión de ENTIDADES y CAJAS.
 384  89BE
 385  89BE 00 00        Puntero_store_caja defw 0
 386  89C0 00 00        Puntero_restore_caja defw 0
 387  89C2 00 00        Indice_restore_caja defw 0
 388  89C4 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 389  89C5 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 390  89C6 00           Entidades_en_curso db 0									; ..... ..... .....
 391  89C7 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 392  89C8              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 393  89C8              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 394  89C8              ;														; _ (Numero_de_malotes)="0".
 395  89C8 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 396  89CA 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 397  89CC              ;														; _ puntero (Indice_entidades).
 398  89CC
 399  89CC              ;---------------------------------------------------------------------------------------------------------------
 400  89CC              ;
 401  89CC              ;	11/01/24
 402  89CC              ;
 403  89CC              ;	Álbumes.
 404  89CC
 405  89CC 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 406  89CE              ;														; _variable para almacenar lo posición del puntero_
 407  89CE              ; 														; _de pila, SP.
 408  89CE 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 409  89D0              ;														; La utiliza la rutina [Extrae_foto_registros].
 410  89D0
 411  89D0              ; Impresión. ----------------------------------------------------------------------------------------------------
 412  89D0
 413  89D0 00 00        Album_de_pintado defw 0
 414  89D2 00 00        Album_de_borrado defw 0
 415  89D4 00 00        Techo_Scanlines_album defw 0
 416  89D6 00 00        Techo_Scanlines_album_2 defw 0
 417  89D8 00           Switch db 0
 418  89D9 00 00        Techo defw 0
 419  89DB 00 00        Scanlines_album_SP defw 0
 420  89DD 73 86        India_SP defw Tabla_de_pintado
 421  89DF 76 86        India_2_SP defw Tabla_de_pintado+3
 422  89E1
 423  89E1 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 424  89E2              ;
 425  89E2              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 426  89E2              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 427  89E2              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 428  89E2              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 429  89E2              ;																Habilita el borrado/pintado de sprites.
 430  89E2              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 431  89E2              ;																_ a la baja.
 432  89E2              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 433  89E2
 434  89E2
 435  89E2
 436  89E2 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 437  89E3              ;
 438  89E3              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 439  89E3              ;
 440  89E3              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 441  89E3              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 442  89E3              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 443  89E3              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 444  89E3              ;
 445  89E3              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 446  89E3              ;															_ masticados ya generados.
 447  89E3              ;
 448  89E3              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 449  89E3              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 450  89E3              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 451  89E3              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 452  89E3
 453  89E3
 454  89E3              ; Gestión de Disparos.
 455  89E3
 456  89E3              ;;Numero_de_disparotes db 0
 457  89E3              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 458  89E3              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 459  89E3              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 460  89E3              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 461  89E3              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 462  89E3              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 463  89E3              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 464  89E3              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 465  89E3              ;														; _produzca colisión.
 466  89E3              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 467  89E3              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 468  89E3              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 469  89E3              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 470  89E3 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  89E6              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  89E6              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 473  89E6
 474  89E6              ;---------------------------------------------------------------------------------------------------------------
 475  89E6
 476  89E6              ; Relojes y temporizaciones.
 477  89E6
 478  89E6              ;Clock_explosion db 4
 479  89E6
 480  89E6 6C 86        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 481  89E8
 482  89E8 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 483  89EA 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 484  89EB              ;														; Repite la oleada de entidades.
 485  89EB              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 486  89EB              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 487  89EB              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 488  89EB
 489  89EB              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 490  89EB              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 491  89EB              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 492  89EB
 493  89EB              ;---------------------------------------------------------------------------------------------------------------
 494  89EB
 495  89EB              ; Gestión de NIVELES.
 496  89EB
 497  89EB 00           Nivel db 0												; Nivel actual del juego.
 498  89EC 00 00        Puntero_indice_NIVELES defw 0
 499  89EE 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  89F0              ; 														; _ que definen el NIVEL.
 501  89F0              ; Y todo comienza aquí .....
 502  89F0              ;
 503  89F0              ; 	INICIO  *************************************************************************************************************************************************************************
 504  89F0              ;
 505  89F0              ;	5/1/24
 506  89F0
 507  89F0              START
 508  89F0
 509  89F0 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  89F3 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 511  89F5 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  89F7 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  89F9 F3           	DI
 514  89FA
 515  89FA              ;	ld a,%00000111
 516  89FA              ;	call Cls
 517  89FA CD 6C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  89FD
 519  89FD              ; INICIALIZACIÓN.
 520  89FD
 521  89FD 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  89FF CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8A02 CD 0A 8B     	call Extrae_numero_aleatorio_y_avanza
 524  8A05
 525  8A05 6F           	ld l,a
 526  8A06 26 00        	ld h,0
 527  8A08 22 E8 89     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8A0B
 529  8A0B              ;	Inicializa 1er Nivel.
 530  8A0B
 531  8A0B 21 59 89     	ld hl,Indice_de_niveles
 532  8A0E 22 EC 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 533  8A11 CD AF AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 534  8A14              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 535  8A14              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 536  8A14              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 537  8A14              	;	Provisional, (para desarrollo).
 538  8A14              	;-
 539  8A14              ;	ld hl,Numero_parcial_de_entidades
 540  8A14              ;	ld b,(hl)
 541  8A14              ;	inc b
 542  8A14              ;	dec b
 543  8A14              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 544  8A14
 545  8A14 CD D0 8C     	call Inicia_albumes_de_lineas						 ; (Album_de_pintado) contiene $8000
 546  8A17              ;														 ; (Album_de_borrado) contiene $9000
 547  8A17
 548  8A17 CD F4 AA     4 call Inicia_Entidades
 549  8A1A CD 53 AB     	call Inicia_Amadeus
 550  8A1D
 551  8A1D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 552  8A1D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 553  8A1D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 554  8A1D
 555  8A1D 11 22 87     	ld de,Amadeus_BOX
 556  8A20 CD 95 AC     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 557  8A23
 558  8A23 CD A3 AB     	call Limpiamos_bandeja_DRAW
 559  8A26
 560  8A26              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 561  8A26
 562  8A26 CD E0 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 563  8A29              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 564  8A29              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 565  8A29              ; (Esto se dá cuando se inicia una nueva oleada).
 566  8A29
 567  8A29              ;	ld a,(Ctrl_1)
 568  8A29              ;	bit 3,a
 569  8A29              ;	jr nz,5F											 ; Loop
 570  8A29
 571  8A29              ;	ld de,Amadeus_db
 572  8A29              ;	call Store_Amadeus
 573  8A29
 574  8A29              ; 	INICIA DISPAROS !!!!!
 575  8A29
 576  8A29              ;	call Inicia_Puntero_Disparo_Entidades
 577  8A29              ;	call Inicia_Puntero_Disparo_Amadeus
 578  8A29
 579  8A29              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 580  8A29
 581  8A29              ;5 call Inicia_punteros_de_cajas
 582  8A29              ;	call Restore_entidad
 583  8A29
 584  8A29              ;	ld a,(Ctrl_1)
 585  8A29              ;	bit 3,a
 586  8A29              ;	jr z,6F
 587  8A29
 588  8A29              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 589  8A29
 590  8A29              ;	ld hl,Ctrl_1
 591  8A29              ;	res 3,(hl)
 592  8A29              ;	jr Main
 593  8A29
 594  8A29              ; Damos por concluida la construcción del FRAME.
 595  8A29              ;
 596  8A29
 597  8A29 2A DB 89     6 ld hl,(Scanlines_album_SP)
 598  8A2C 22 D4 89     	ld (Techo_Scanlines_album),hl
 599  8A2F
 600  8A2F 2A D2 89     	ld hl,(Album_de_borrado)
 601  8A32 22 DB 89     	ld (Scanlines_album_SP),hl
 602  8A35
 603  8A35 21 73 86     	ld hl,Tabla_de_pintado
 604  8A38 22 DD 89     	ld (India_SP),hl
 605  8A3B
 606  8A3B 21 E1 89     	ld hl,Ctrl_3
 607  8A3E CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 608  8A40 CB D6        	set 2,(hl)
 609  8A42
 610  8A42 FB           	ei
 611  8A43
 612  8A43 76           	halt
 613  8A44
 614  8A44              ; ------------------------------------
 615  8A44
 616  8A44              Main
 617  8A44              ;
 618  8A44              ; 13/05/24
 619  8A44
 620  8A44              ; Aparece nueva entidad ???
 621  8A44
 622  8A44              ; 														; (Clock_next_entity) define cuando aparecen las entidades en pantalla.
 623  8A44              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 624  8A44              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializará _;
 625  8A44              ;														; _un 2º bloque.
 626  8A44
 627  8A44 2A E8 89     	ld hl,(Clock_next_entity)
 628  8A47 ED 4B 78 5C  	ld bc,(FRAMES)
 629  8A4B A7           	and a
 630  8A4C ED 42        	sbc hl,bc
 631  8A4E 20 16        	jr nz,13F
 632  8A50
 633  8A50              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 634  8A50              ; _ (Clock_next_entity) para la siguiente entidad.
 635  8A50
 636  8A50 3A C5 89     21 ld a,(Numero_parcial_de_entidades)
 637  8A53 47           	ld b,a
 638  8A54 3A C6 89     	ld a,(Entidades_en_curso)
 639  8A57 B8           	cp b
 640  8A58 28 0C        	jr z,13F
 641  8A5A 30 0A        	jr nc,13F
 642  8A5C
 643  8A5C 3C           	inc a
 644  8A5D 32 C6 89     	ld (Entidades_en_curso),a
 645  8A60
 646  8A60              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 647  8A60
 648  8A60 CD 0A 8B     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 649  8A63 CD 26 8B     	call Define_Clock_next_entity
 650  8A66
 651  8A66              ; -------------------------------------------------------------------------------------------------------------
 652  8A66
 653  8A66              ; Habilita disparos.
 654  8A66
 655  8A66              13
 656  8A66
 657  8A66              ;	ld hl,Disparo_Amadeus
 658  8A66              ;	ld de,CLOCK_repone_disparo_Amadeus
 659  8A66              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 660  8A66
 661  8A66              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 662  8A66              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 663  8A66              ;	call Habilita_disparos
 664  8A66
 665  8A66              ; COLISIONES.
 666  8A66
 667  8A66              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 668  8A66
 669  8A66              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 670  8A66              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 671  8A66              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 672  8A66
 673  8A66              ;	xor a
 674  8A66              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 675  8A66
 676  8A66              ;	call Inicia_punteros_de_cajas
 677  8A66              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 678  8A66              ; 														; _ en DRAW.
 679  8A66
 680  8A66              ;	ld a,(Filas)
 681  8A66              ;	and a
 682  8A66              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 683  8A66              ;	call Incrementa_punteros_de_cajas
 684  8A66              ;	jr 12B
 685  8A66
 686  8A66              ; ---------------------------------------------------------------------------------------
 687  8A66
 688  8A66 3A C5 89     10 ld a,(Numero_parcial_de_entidades)
 689  8A69 47               ld b,a
 690  8A6A A7           	and a
 691  8A6B 20 00        	jr nz,11F
 692  8A6D
 693  8A6D              ;	ld hl,Ctrl_1;
 694  8A6D              ;	bit 4,(hl)
 695  8A6D              ;	jp nz,16F
 696  8A6D
 697  8A6D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 698  8A6D
 699  8A6D              ;	ld hl,Ctrl_1
 700  8A6D              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 701  8A6D
 702  8A6D              ;	ld a,(Contador_de_frames)
 703  8A6D              ;	inc a
 704  8A6D              ;	ld (Activa_recarga_cajas),a
 705  8A6D
 706  8A6D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 707  8A6D
 708  8A6D 3A C6 89     11 ld a,(Entidades_en_curso)
 709  8A70 A7           	and a
 710  8A71 28 45        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 711  8A73 47           	ld b,a												; No hay entidades que gestionar.
 712  8A74
 713  8A74              ; ( Código que ejecutamos con cada entidad: ).
 714  8A74
 715  8A74              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 716  8A74              ;
 717  8A74              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 718  8A74
 719  8A74 21 73 86     	ld hl,Tabla_de_pintado
 720  8A77 22 DD 89     	ld (India_SP),hl
 721  8A7A
 722  8A7A 21 E1 89     	ld hl,Ctrl_3
 723  8A7D CB D6        	set 2,(hl)
 724  8A7F CD EF 8A     	call Change
 725  8A82
 726  8A82 C5           15 push bc 												; Nº de entidades en curso.
 727  8A83
 728  8A83 CD 31 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 729  8A86 CD 6A 8B     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 730  8A89
 731  8A89              ; Existe "Entidad_guía" ???.
 732  8A89              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 733  8A89
 734  8A89              ;	ld a,(Ctrl_3)
 735  8A89              ;	bit 1,a
 736  8A89              ;	jr nz,22F
 737  8A89
 738  8A89              ; Almacén de "Movimientos_masticados" lleno ???
 739  8A89              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 740  8A89              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 741  8A89
 742  8A89              ;;	ld a,(Ctrl_3)
 743  8A89              ;;	bit 3,a
 744  8A89              ;;	jr nz,22F
 745  8A89
 746  8A89              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 747  8A89
 748  8A89              ;	ld hl,Ctrl_2
 749  8A89              ;	set 5,(hl)
 750  8A89              ;	ld hl,Ctrl_3
 751  8A89              ;	set 1,(hl)
 752  8A89
 753  8A89              ; Impacto ???
 754  8A89
 755  8A89              ;22 ld a,(Impacto)
 756  8A89              ;	and a
 757  8A89              ;	jr z,8F
 758  8A89
 759  8A89              ; Hay Impacto en esta entidad.
 760  8A89
 761  8A89              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 762  8A89              ;	dec (hl)
 763  8A89              ;	jp nz,17F
 764  8A89
 765  8A89              ;! Velocidad de la animación de la explosión.
 766  8A89
 767  8A89              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 768  8A89              ;														; _,(velocidad de la explosión).
 769  8A89              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 770  8A89
 771  8A89              ;	call Repone_datos_de_borrado
 772  8A89              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 773  8A89
 774  8A89              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 775  8A89
 776  8A89              ;	ld a,(Ctrl_2)
 777  8A89              ;	bit 1,a
 778  8A89              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 779  8A89
 780  8A89              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 781  8A89
 782  8A89              ;	ld a,(CTRL_DESPLZ)
 783  8A89              ;	and a
 784  8A89              ;	jr nz,18F
 785  8A89
 786  8A89              ;	ld hl,Indice_Explosion_2x2-2
 787  8A89              ;	ld (Puntero_DESPLZ_der),hl
 788  8A89              ;	jr 19F
 789  8A89
 790  8A89              ;18 ld hl,Indice_Explosion_2x3-2
 791  8A89              ;	ld (Puntero_DESPLZ_der),hl
 792  8A89
 793  8A89              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 794  8A89              ;	set 1,(hl)
 795  8A89              ;	jr 7F
 796  8A89
 797  8A89              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 798  8A89              ; _con las coordenadas de la entidad almacenada en DRAW.
 799  8A89
 800  8A89              ;8 ld a,(Ctrl_1)
 801  8A89              ;	bit 2,a
 802  8A89              ;	jr z,7F
 803  8A89
 804  8A89              ;	ld hl,(Coordenadas_disparo_certero)
 805  8A89              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 806  8A89              ;														; E contiene la coordenada_X del disparo.
 807  8A89              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 808  8A89              ;														; H FILA, (Coordenada_y de la entidad).
 809  8A89              ;	and a
 810  8A89              ;	sbc hl,de
 811  8A89
 812  8A89              ;	call Determina_resultado_comparativa
 813  8A89
 814  8A89              ;	ld a,b
 815  8A89              ;	and a
 816  8A89              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 817  8A89
 818  8A89              ; ----- ----- -----
 819  8A89
 820  8A89              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 821  8A89              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 822  8A89
 823  8A89              ;	ld hl,Ctrl_1
 824  8A89              ;	res 2,(hl)
 825  8A89
 826  8A89              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 827  8A89
 828  8A89              ;	ld a,(Ctrl_0)
 829  8A89              ;	bit 4,a
 830  8A89              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 831  8A89
 832  8A89              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 833  8A89              ; [[[
 834  8A89              ;	call Detecta_disparo_entidad
 835  8A89              ; ]]]
 836  8A89
 837  8A89              ; -------------------------------------------
 838  8A89
 839  8A89 CD CF 8A     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 840  8A8C CD 5A 8C     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 841  8A8F CD 46 AD     	call Genera_datos_de_impresion
 842  8A92              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 843  8A92              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 844  8A92              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 845  8A92              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 846  8A92
 847  8A92 CD AE AB     	call Decrementa_Contador_de_mov_masticados
 848  8A95
 849  8A95              ; -------------------------------------------
 850  8A95
 851  8A95              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 852  8A95
 853  8A95 2A 95 89     	ld hl,(Puntero_de_impresion)
 854  8A98 CD F3 AC     	call Genera_coordenadas
 855  8A9B
 856  8A9B              ;	ld hl,Ctrl_0
 857  8A9B              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 858  8A9B
 859  8A9B CD 95 AB     17 call Store_Restore_cajas
 860  8A9E
 861  8A9E C1           	pop bc
 862  8A9F
 863  8A9F 10 E1        	djnz 15B
 864  8AA1
 865  8AA1              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 866  8AA1
 867  8AA1 CD 7E 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 868  8AA4 CD 95 8B     	call Ordena_tabla_de_impresion
 869  8AA7 CD E0 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 870  8AAA
 871  8AAA              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 872  8AAA              ; Hemos gestionado todas las unidades.
 873  8AAA              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 874  8AAA
 875  8AAA              ;	ld hl,Ctrl_1
 876  8AAA              ;	res 2,(hl)
 877  8AAA
 878  8AAA CD 3B 8B     	call Borra_diferencia
 879  8AAD
 880  8AAD 3A E1 89     	ld a,(Ctrl_3)
 881  8AB0 CB 5F        	bit 3,a
 882  8AB2 20 04        	jr nz,16F
 883  8AB4
 884  8AB4 EB           	ex de,hl
 885  8AB5 71           	ld (hl),c
 886  8AB6 2C           	inc l
 887  8AB7 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 888  8AB8
 889  8AB8              ; Aquí situaremos la rutina que ordena el índice Masa.
 890  8AB8
 891  8AB8 2A D2 89     16 ld hl,(Album_de_borrado)
 892  8ABB 22 DB 89     	ld (Scanlines_album_SP),hl
 893  8ABE
 894  8ABE 21 E1 89     	ld hl,Ctrl_3
 895  8AC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 896  8AC3
 897  8AC3 CB 9E        	res 3,(hl)
 898  8AC5 CB A6        	res 4,(hl)
 899  8AC7
 900  8AC7 AF           	xor a
 901  8AC8 D3 FE        	out ($fe),a
 902  8ACA 76           	halt
 903  8ACB
 904  8ACB              ; ----------------------------------------
 905  8ACB
 906  8ACB              ;	ld a,(Ctrl_1) 										; Existe Loop?
 907  8ACB              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 908  8ACB CA 44 8A     	jp z,Main
 909  8ACE
 910  8ACE              ; RECARGA DE NUEVA OLEADA.
 911  8ACE
 912  8ACE              ;	ld a,(Contador_de_frames)
 913  8ACE              ;	ld b,a
 914  8ACE              ;	ld a,(Activa_recarga_cajas)
 915  8ACE              ;	cp b
 916  8ACE              ;	jr z,20F
 917  8ACE
 918  8ACE              ;	ld hl,Ctrl_1
 919  8ACE              ;	set 4,(hl)
 920  8ACE              ;	jp Main
 921  8ACE
 922  8ACE              ;20 ld hl,Ctrl_1
 923  8ACE              ;	res 4,(hl)
 924  8ACE
 925  8ACE              ;	ld a,(Contador_de_frames)
 926  8ACE
 927  8ACE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 928  8ACE              ;! _ IMPREDECIBLE !!!!
 929  8ACE
 930  8ACE              ;	add 10
 931  8ACE              ;	ld (Clock_next_entity),a
 932  8ACE
 933  8ACE              ;	jp 4B
 934  8ACE
 935  8ACE C9           	ret
 936  8ACF
 937  8ACF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 938  8ACF              ;
 939  8ACF              ;	16/11/23
 940  8ACF
 941  8ACF              ;;Gestiona_Amadeus
 942  8ACF
 943  8ACF              ;! Activa/desactiva impacto con Amadeus.
 944  8ACF
 945  8ACF              ;	ld a,(Impacto)
 946  8ACF              ;	and a
 947  8ACF              ;	jr nz,2F
 948  8ACF
 949  8ACF              ;;	call Mov_Amadeus
 950  8ACF
 951  8ACF              ;;2 ld a,(Ctrl_0)
 952  8ACF              ;;	bit 4,a
 953  8ACF              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 954  8ACF
 955  8ACF              ;;	call Guarda_foto_entidad_a_pintar
 956  8ACF              ;;	call Guarda_datos_de_borrado_Amadeus
 957  8ACF
 958  8ACF              ;;1 ld hl,Ctrl_0
 959  8ACF              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 960  8ACF
 961  8ACF              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 962  8ACF
 963  8ACF              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 964  8ACF
 965  8ACF              ;	call Calcula_numero_de_disparotes
 966  8ACF
 967  8ACF              ;;	ret
 968  8ACF
 969  8ACF              ; -----------------------------
 970  8ACF              ;
 971  8ACF              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 972  8ACF              ;
 973  8ACF              ;	INPUTS: B a de estar a "0".
 974  8ACF
 975  8ACF              ;Prepara_Borra_sprites
 976  8ACF
 977  8ACF              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 978  8ACF              ;	ld a,l
 979  8ACF              ;	ret z
 980  8ACF
 981  8ACF              ;	srl a
 982  8ACF
 983  8ACF              ;2 sub 16
 984  8ACF              ;	jr z,1F
 985  8ACF              ;	inc b
 986  8ACF              ;	jr 2B
 987  8ACF
 988  8ACF              ;1 inc b
 989  8ACF
 990  8ACF              ;	exx
 991  8ACF              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 992  8ACF              ;	exx
 993  8ACF
 994  8ACF              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 995  8ACF              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 996  8ACF
 997  8ACF              ;	ret
 998  8ACF
 999  8ACF              ; --------------------------------------------------------------------------------------------------------------
1000  8ACF              ;
1001  8ACF              ;	15/12/23
1002  8ACF
1003  8ACF              ;Mov_obj
1004  8ACF
1005  8ACF              ;	ld a,(Ctrl_2)
1006  8ACF              ;	bit 1,a
1007  8ACF              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1008  8ACF
1009  8ACF              ; Explosión:
1010  8ACF
1011  8ACF              ;	ld a,(Frames_explosion)
1012  8ACF              ;	and a
1013  8ACF              ;	jr nz,4F
1014  8ACF
1015  8ACF              ;!  Una alimaña menos!!!!!!!!!1
1016  8ACF
1017  8ACF              ; Se trataba de una Entidad_guía ???
1018  8ACF
1019  8ACF              ;	ld a,(Ctrl_2)
1020  8ACF              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1021  8ACF              ;	jr z,5F
1022  8ACF
1023  8ACF              ;	ld hl,Ctrl_3
1024  8ACF              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1025  8ACF
1026  8ACF              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1027  8ACF              ;!! _generado puede ser distinto, (aletoriedad).
1028  8ACF
1029  8ACF              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1030  8ACF              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1031  8ACF              ;	dec (hl)
1032  8ACF              ;	ld hl,Entidades_en_curso
1033  8ACF              ;	dec (hl)
1034  8ACF              ;	ld hl,Numero_de_entidades
1035  8ACF              ;	dec (hl)
1036  8ACF              ;	jr 3F
1037  8ACF
1038  8ACF              ; -----
1039  8ACF
1040  8ACF              ;	`Movemos´ la explosión.
1041  8ACF
1042  8ACF              ;4 ld hl,(Puntero_DESPLZ_der)
1043  8ACF              ;	inc hl
1044  8ACF              ;	inc hl
1045  8ACF              ;	call Extrae_address
1046  8ACF              ;;	ld (Puntero_objeto),hl
1047  8ACF
1048  8ACF              ;;	ld hl,Frames_explosion
1049  8ACF              ;;	dec (hl)
1050  8ACF
1051  8ACF              ;;	ld hl,Ctrl_0
1052  8ACF              ;;	set 4,(hl);;
1053  8ACF
1054  8ACF              ;;	jr 3F
1055  8ACF
1056  8ACF              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1057  8ACF
1058  8ACF              ;2 xor a
1059  8ACF              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1060  8ACF
1061  8ACF              ; Movemos Entidades malignas.
1062  8ACF              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1063  8ACF
1064  8ACF              ;	ld a,(Ctrl_2)
1065  8ACF              ;	bit 5,a
1066  8ACF              ;	jr nz,8F
1067  8ACF
1068  8ACF              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1069  8ACF              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1070  8ACF              ;	jr 7F
1071  8ACF
1072  8ACF              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1073  8ACF
1074  8ACF              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1075  8ACF              ;	bit 4,a
1076  8ACF              ;	ret z
1077  8ACF
1078  8ACF              ; Ha habido desplazamiento de la entidad maligna.
1079  8ACF              ; Ha llegado a zona de AMADEUS ???
1080  8ACF
1081  8ACF              ;7 ld a,(Coordenada_y)
1082  8ACF              ;	cp $14
1083  8ACF              ;	jr c,1F
1084  8ACF
1085  8ACF              ; ---------
1086  8ACF
1087  8ACF              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1088  8ACF              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1089  8ACF
1090  8ACF              ;	di
1091  8ACF              ;	call Genera_coordenadas_X
1092  8ACF              ;	call Compara_coordenadas_X
1093  8ACF              ;	ei
1094  8ACF
1095  8ACF              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1096  8ACF
1097  8ACF              ; ---------
1098  8ACF
1099  8ACF              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1100  8ACF              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1101  8ACF              ;	call Limpia_Variables_de_borrado
1102  8ACF
1103  8ACF              ;3 ret
1104  8ACF
1105  8ACF              ; --------------------------------------------------------------------------------------------------------------
1106  8ACF              ;
1107  8ACF              ;	29/1/23
1108  8ACF
1109  8ACF              ;Mov_Amadeus
1110  8ACF
1111  8ACF              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1112  8ACF
1113  8ACF              ;	call Mov_right
1114  8ACF
1115  8ACF              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1116  8ACF              ;	bit 4,a
1117  8ACF              ;	ret z
1118  8ACF
1119  8ACF              ; ---------
1120  8ACF
1121  8ACF              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1122  8ACF              ;	call Repone_datos_de_borrado_Amadeus
1123  8ACF              ;	call Limpia_Variables_de_borrado
1124  8ACF
1125  8ACF              ;	ret
1126  8ACF
1127  8ACF              ; --------------------------------------------------------------------------------------------------------------
1128  8ACF              ;
1129  8ACF              ;	12/05/24
1130  8ACF
1131  8ACF 3A A1 89     Ajusta_velocidad_entidad ld a,(Velocidad)
1132  8AD2 CB 27        	sla a
1133  8AD4 32 A1 89     	ld (Velocidad),a
1134  8AD7 E6 10        	and $10
1135  8AD9 C8           	ret z
1136  8ADA
1137  8ADA              ; Restaura (Velocidad) a razón del nº de vueltas.
1138  8ADA
1139  8ADA 3A 88 89     	ld a,(Contador_de_vueltas)
1140  8ADD CB 2F        	sra a
1141  8ADF CB 2F        	sra a
1142  8AE1 32 A1 89     	ld (Velocidad),a
1143  8AE4
1144  8AE4 2A 97 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1145  8AE7 23           	inc hl
1146  8AE8 23           	inc hl
1147  8AE9 23           	inc hl
1148  8AEA 23           	inc hl
1149  8AEB 22 97 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1150  8AEE
1151  8AEE C9           	ret
1152  8AEF
1153  8AEF              ; --------------------------------------------------------------------------------------------------------------
1154  8AEF              ;
1155  8AEF              ;	17/3/24
1156  8AEF
1157  8AEF              Change
1158  8AEF
1159  8AEF 3A D8 89     	ld a,(Switch)
1160  8AF2 EE 01        	xor 1
1161  8AF4 32 D8 89     	ld (Switch),a
1162  8AF7
1163  8AF7 2A D0 89     	ld hl,(Album_de_pintado)
1164  8AFA ED 5B D2 89  	ld de,(Album_de_borrado)
1165  8AFE EB           	ex de,hl
1166  8AFF 22 D0 89     	ld (Album_de_pintado),hl
1167  8B02 22 DB 89     	ld (Scanlines_album_SP),hl
1168  8B05
1169  8B05 ED 53 D2 89  	ld (Album_de_borrado),de
1170  8B09
1171  8B09 C9           	ret
1172  8B0A
1173  8B0A              ; ------------------------------------
1174  8B0A              ;
1175  8B0A              ; 1/05/24
1176  8B0A
1177  8B0A              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1178  8B0A              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1179  8B0A
1180  8B0A              ;	DESTRUYE: HL,DE,A
1181  8B0A              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1182  8B0A
1183  8B0A              ;	Variables implicadas: (RND_SP).
1184  8B0A
1185  8B0A              Extrae_numero_aleatorio_y_avanza
1186  8B0A
1187  8B0A 21 73 86     	ld hl,Tabla_de_pintado
1188  8B0D EB           	ex de,hl
1189  8B0E 2A E6 89     	ld hl,(RND_SP)
1190  8B11 EB           	ex de,hl
1191  8B12 A7           	and a
1192  8B13 ED 52        	sbc hl,de
1193  8B15
1194  8B15 2A E6 89     	ld hl,(RND_SP)
1195  8B18 20 06        	jr nz,1F
1196  8B1A
1197  8B1A              ; Sitúa HL al principio de la tabla de nº aleatorios.
1198  8B1A
1199  8B1A 21 6C 86     	ld hl,Numeros_aleatorios
1200  8B1D 22 E6 89     	ld (RND_SP),HL
1201  8B20
1202  8B20              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1203  8B20
1204  8B20 7E           1 ld a,(hl)
1205  8B21 23           	inc hl
1206  8B22 22 E6 89     	ld (RND_SP),hl
1207  8B25 C9           	ret
1208  8B26
1209  8B26              ; ------------------------------------
1210  8B26              ;
1211  8B26              ; 1/05/24
1212  8B26
1213  8B26              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1214  8B26              ; (1 a 4 segundos).
1215  8B26              ; Actualizamos (Clock_next_entity) con A.
1216  8B26
1217  8B26              ;	DESTRUYE: A y B.
1218  8B26              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1219  8B26              ;			 Actualiza (Clock_next_entity) con A.
1220  8B26
1221  8B26              ;	Variables implicadas: (Clock_next_entity).
1222  8B26
1223  8B26              ; Notas:
1224  8B26
1225  8B26              ; 	$32 1 seg.
1226  8B26              ; 	$64 2 seg.
1227  8B26              ; 	$96 3 seg.
1228  8B26              ; 	$c8 4 seg.
1229  8B26              ; 	$fa 5 seg.
1230  8B26
1231  8B26              ; $ffff 1310,7 seg, 22 minutos.
1232  8B26
1233  8B26              ;	$0100  5 seg. aproximadamente.
1234  8B26              ;	$0200 10 seg. aproximadamente.
1235  8B26              ;	$0300 15 seg. aproximadamente.
1236  8B26              ;	$0400 20 seg. aproximadamente.
1237  8B26              ;	$0500 25 seg. aproximadamente.
1238  8B26              ;	$0600 30 seg. aproximadamente.
1239  8B26
1240  8B26              Define_Clock_next_entity
1241  8B26
1242  8B26 FE 34        	cp $34
1243  8B28 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1244  8B2A
1245  8B2A              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1246  8B2A
1247  8B2A 4F           3 ld c,a
1248  8B2B 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1249  8B2D 2A 78 5C     	ld hl,(FRAMES)
1250  8B30 A7           	and a
1251  8B31 ED 4A        	adc hl,bc
1252  8B33 22 E8 89     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1253  8B36 C9           	ret
1254  8B37
1255  8B37 3E 34        1 ld a,$34
1256  8B39 18 EF        	jr 3B
1257  8B3B
1258  8B3B              ; ------------------------------------
1259  8B3B              ;
1260  8B3B              ; 18/03/24
1261  8B3B
1262  8B3B              Borra_diferencia
1263  8B3B
1264  8B3B ED 4B DB 89  	ld bc,(Scanlines_album_SP)
1265  8B3F
1266  8B3F 3A D8 89     	ld a,(Switch)
1267  8B42 A7           	and a
1268  8B43 28 08        	jr z,2F
1269  8B45
1270  8B45 2A D6 89     	ld hl,(Techo_Scanlines_album_2)
1271  8B48 11 D6 89     	ld de,Techo_Scanlines_album_2
1272  8B4B 18 06        	jr 3F
1273  8B4D
1274  8B4D 2A D4 89     2 ld hl,(Techo_Scanlines_album)
1275  8B50 11 D4 89     	ld de,Techo_Scanlines_album
1276  8B53
1277  8B53              ; Diferencia.
1278  8B53
1279  8B53 ED 42        3 sbc hl,bc
1280  8B55
1281  8B55 C8           	ret z
1282  8B56 D8           	ret c
1283  8B57
1284  8B57              ; Nuevo techo, (más bajo que el anterior).
1285  8B57              ; Fijamos nuevo techo y borramos bytes sobrantes.
1286  8B57
1287  8B57 EB           	ex de,hl
1288  8B58
1289  8B58 71           	ld (hl),c
1290  8B59 2C           	inc l
1291  8B5A 70           	ld (hl),b
1292  8B5B
1293  8B5B AF           	xor a
1294  8B5C 43           	ld b,e
1295  8B5D
1296  8B5D 2A DB 89     	ld hl,(Scanlines_album_SP)
1297  8B60
1298  8B60 77           1 ld (hl),a
1299  8B61 23           	inc hl
1300  8B62 10 FC        	djnz 1B
1301  8B64
1302  8B64              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1303  8B64
1304  8B64 21 E1 89     	ld hl,Ctrl_3
1305  8B67 CB DE        	set 3,(hl)
1306  8B69
1307  8B69 C9           	ret
1308  8B6A
1309  8B6A              ; --------------------------------------------------------------------------------------------------------------
1310  8B6A              ;
1311  8B6A              ;	26/3/24
1312  8B6A
1313  8B6A              Recauda_informacion_de_entidad_en_curso
1314  8B6A
1315  8B6A              ; Almacena la Coordenada Y de la entidad en curso.
1316  8B6A
1317  8B6A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1318  8B6A
1319  8B6A 3A 86 89     	ld a,(Coordenada_y)
1320  8B6D 2A DD 89     	ld hl,(India_SP)
1321  8B70 77           	ld (hl),a
1322  8B71 2C           	inc l
1323  8B72
1324  8B72              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1325  8B72
1326  8B72 ED 5B DB 89  	ld de,(Scanlines_album_SP)
1327  8B76
1328  8B76 73           	ld (hl),e
1329  8B77 2C           	inc l
1330  8B78 72           	ld (hl),d
1331  8B79 2C           	inc l
1332  8B7A
1333  8B7A 22 DD 89     	ld (India_SP),hl
1334  8B7D
1335  8B7D C9           	ret
1336  8B7E
1337  8B7E              ; --------------------------------------------------------------------------------------------------------------
1338  8B7E              ;
1339  8B7E              ;	27/03/24
1340  8B7E              ;
1341  8B7E
1342  8B7E              Inicializa_India_y_limpia_Tabla_de_impresion
1343  8B7E
1344  8B7E 2A DD 89     	ld hl,(India_SP)
1345  8B81 01 8B 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1346  8B84
1347  8B84 79           	ld a,c
1348  8B85 95           	sub l
1349  8B86 28 06        	jr z,2F
1350  8B88 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1351  8B89              ;														; _ y pasamos a inicializar (India_SP).
1352  8B89 AF           	xor a
1353  8B8A
1354  8B8A 77           1 ld (hl),a
1355  8B8B 2C           	inc l
1356  8B8C 10 FC        	djnz 1B												; Limpia Tabla.
1357  8B8E
1358  8B8E 21 73 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1359  8B91 22 DD 89     	ld (India_SP),hl
1360  8B94
1361  8B94 C9           	ret
1362  8B95
1363  8B95              ; --------------------------------------------------------------------------------------------------------------
1364  8B95              ;
1365  8B95              ;	31/3/24
1366  8B95
1367  8B95              Ordena_tabla_de_impresion
1368  8B95
1369  8B95              ; 5794 T/states.
1370  8B95              ; 6278 T/states.
1371  8B95              ; 5310 T/states.
1372  8B95
1373  8B95              ; Inicializamos punteros (India_SP) e (India_2_SP).
1374  8B95              ; Inicializamos contador de comparaciones, [C].
1375  8B95              ; Cargamos los registros A y B para efectuar comparación.
1376  8B95
1377  8B95 FD 2E 00     	ld iyl,0
1378  8B98
1379  8B98 3A C6 89     	ld a,(Entidades_en_curso)
1380  8B9B FE 04        	cp 4 	;	4
1381  8B9D D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1382  8B9E
1383  8B9E 3D           	dec a
1384  8B9F 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1385  8BA0 51           	ld d,c 										; Copia de respaldo.
1386  8BA1
1387  8BA1 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1388  8BA2
1389  8BA2 21 76 86     	ld hl,Tabla_de_pintado+3
1390  8BA5 46           	ld b,(hl)
1391  8BA6 22 DF 89     	ld (India_2_SP),hl
1392  8BA9
1393  8BA9 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1394  8BAA DC D2 8B     	call c, Avanza_India_2_SP
1395  8BAD CC D2 8B     	call z, Avanza_India_2_SP
1396  8BB0
1397  8BB0 FD 2D        	dec iyl
1398  8BB2 28 18        	jr z,2F
1399  8BB4
1400  8BB4
1401  8BB4              ; --------------------------------------------------------------------------------------------------------------
1402  8BB4              ;
1403  8BB4              ;	7/4/24
1404  8BB4
1405  8BB4              Trueque
1406  8BB4
1407  8BB4              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1408  8BB4              ;  			A contiene en nº de fila de (India_SP).
1409  8BB4              ;			HL contiene (India_2_SP).
1410  8BB4
1411  8BB4 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1412  8BB5 E5           	push hl										; Preservo (India_2_SP).
1413  8BB6
1414  8BB6 ED 5B DD 89  	ld de,(India_SP)
1415  8BBA EB           	ex de,hl
1416  8BBB 70           	ld (hl),b
1417  8BBC 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1418  8BBD
1419  8BBD CD FE 8B     	call Intercambia_1_byte
1420  8BC0 CD FE 8B     	call Intercambia_1_byte
1421  8BC3
1422  8BC3
1423  8BC3              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1424  8BC3              ; Recuperamos (India_2_SP) en HL.
1425  8BC3
1426  8BC3 2A DD 89     	ld hl,(India_SP)
1427  8BC6 7E           	ld a,(hl)
1428  8BC7
1429  8BC7 E1           	pop hl
1430  8BC8 D1           	pop de
1431  8BC9
1432  8BC9              ; --------------------------------------------------------------------------------------------------------------
1433  8BC9
1434  8BC9 CD D2 8B     	call Avanza_India_2_SP
1435  8BCC
1436  8BCC 14           2 inc d
1437  8BCD 15           	dec d
1438  8BCE C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1439  8BCF 18 D8        	jr 1B
1440  8BD1
1441  8BD1 C9           	ret
1442  8BD2
1443  8BD2              ; ----- ----- ----- ----- -----
1444  8BD2
1445  8BD2              Avanza_India_2_SP
1446  8BD2
1447  8BD2 0D           	dec c
1448  8BD3 28 0A        	jr z,Avanza_punteros_indios
1449  8BD5
1450  8BD5 FD 2C        	inc iyl
1451  8BD7
1452  8BD7 2C           	inc l
1453  8BD8 2C           	inc l
1454  8BD9 2C           	inc l
1455  8BDA
1456  8BDA 46           	ld b,(hl)
1457  8BDB 22 DF 89     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1458  8BDE
1459  8BDE C9           	ret
1460  8BDF
1461  8BDF              ; ----- ----- ----- ----- -----
1462  8BDF
1463  8BDF              Avanza_punteros_indios
1464  8BDF
1465  8BDF 15           	dec d
1466  8BE0 28 15        	jr z,Prepara_salida
1467  8BE2
1468  8BE2 4A           	ld c,d
1469  8BE3
1470  8BE3 2A DD 89     	ld hl,(India_SP)
1471  8BE6 2C           	inc l
1472  8BE7 2C           	inc l
1473  8BE8 2C           	inc l
1474  8BE9 7E           	ld a,(hl)
1475  8BEA 22 DD 89     	ld (India_SP),hl
1476  8BED
1477  8BED 2C           	inc l
1478  8BEE 2C           	inc l
1479  8BEF 2C           	inc l
1480  8BF0 46           	ld b,(hl)
1481  8BF1 22 DF 89     	ld (India_2_SP),hl
1482  8BF4
1483  8BF4 FD 2C        	inc iyl
1484  8BF6
1485  8BF6 C9           	ret
1486  8BF7
1487  8BF7              Prepara_salida
1488  8BF7
1489  8BF7 21 73 86     	ld hl,Tabla_de_pintado
1490  8BFA 22 DD 89     	ld (India_SP),hl
1491  8BFD C9           	ret
1492  8BFE
1493  8BFE
1494  8BFE 2C           Intercambia_1_byte inc l
1495  8BFF 1C           	inc e
1496  8C00 46           	ld b,(hl)
1497  8C01 1A           	ld a,(de)
1498  8C02 EB           	ex de,hl
1499  8C03 70           	ld (hl),b
1500  8C04 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1501  8C05 C9           	ret
1502  8C06
1503  8C06              ; -----------------------------------------------------------------------------------
1504  8C06              ;
1505  8C06              ;	20/01/24
1506  8C06              ;
1507  8C06              ;
1508  8C06
1509  8C06              Construye_movimientos_masticados_entidad
1510  8C06
1511  8C06 2A 97 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1512  8C09 E5           	push hl
1513  8C0A CD 4D 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1514  8C0D              ;															; _ el (Contador_de_mov_masticados).
1515  8C0D CD FC 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1516  8C10              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1517  8C10 CD 0C 95     	call Recompone_posicion_inicio
1518  8C13
1519  8C13 CD 3C 92     1 call Draw
1520  8C16 CD 32 8C     	call Guarda_movimiento_masticado
1521  8C19
1522  8C19 CD A1 98     	call Movimiento
1523  8C1C
1524  8C1C 3A E1 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1525  8C1F CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1526  8C21 28 F0        	jr z,1B
1527  8C23
1528  8C23              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1529  8C23              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1530  8C23
1531  8C23 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1532  8C24 22 97 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1533  8C27
1534  8C27              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1535  8C27
1536  8C27 CD 05 9A     	call Situa_en_contador_general_de_mov_masticados
1537  8C2A
1538  8C2A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1539  8C2A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1540  8C2A
1541  8C2A ED 4B 99 89  	ld bc,(Contador_de_mov_masticados)
1542  8C2E
1543  8C2E 71           	ld (hl),c
1544  8C2F 23           	inc hl
1545  8C30 70           	ld (hl),b
1546  8C31
1547  8C31 C9           	ret
1548  8C32
1549  8C32              ; -----------------------------------------------------------------------------------
1550  8C32              ;
1551  8C32              ;	28/12/23
1552  8C32              ;
1553  8C32              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1554  8C32              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1555  8C32
1556  8C32              Guarda_movimiento_masticado
1557  8C32
1558  8C32 ED 73 CC 89  	ld (Stack),sp
1559  8C36 ED 7B 97 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1560  8C3A
1561  8C3A              ;	push hl
1562  8C3A DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1563  8C3C FD E5            push iy 												; Pushea Puntero_objeto.
1564  8C3E
1565  8C3E ED 7B CC 89      ld sp,(Stack)
1566  8C42
1567  8C42 2A 99 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1568  8C45 23           	inc hl
1569  8C46 22 99 89     	ld (Contador_de_mov_masticados),hl
1570  8C49
1571  8C49 CD 4D 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1572  8C4C              ;															; _ el (Contador_de_mov_masticados).
1573  8C4C C9               ret
1574  8C4D
1575  8C4D              ; --------------------------------------------------------------------------------------------------------------
1576  8C4D              ;
1577  8C4D              ;	12/1/24
1578  8C4D              ;
1579  8C4D              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1580  8C4D
1581  8C4D              Actualiza_Puntero_de_almacen_de_mov_masticados
1582  8C4D
1583  8C4D 2A 97 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1584  8C50 01 04 00     	ld bc,4
1585  8C53 A7           	and a
1586  8C54 ED 4A        	adc hl,bc
1587  8C56 22 97 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1588  8C59 C9           	ret
1589  8C5A
1590  8C5A              ; --------------------------------------------------------------------------------------------------------------
1591  8C5A              ;
1592  8C5A              ;	24/03/24
1593  8C5A              ;
1594  8C5A              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1595  8C5A              ;
1596  8C5A              ;	IX contiene el puntero de impresión.
1597  8C5A              ;	DE contiene (Puntero_objeto).
1598  8C5A
1599  8C5A
1600  8C5A              Cargamos_registros_con_mov_masticado
1601  8C5A
1602  8C5A ED 73 CC 89  	ld (Stack),sp
1603  8C5E ED 7B 97 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1604  8C62
1605  8C62 D1           	pop de 															; DE contiene Puntero_objeto
1606  8C63 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1607  8C65
1608  8C65 ED 73 97 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1609  8C69 ED 7B CC 89  	ld sp,(Stack)
1610  8C6D
1611  8C6D 7B           	ld a,e
1612  8C6E 82           	add d															; Comprueba si ya no hay datos en el almacén.
1613  8C6F
1614  8C6F CC B6 AB     	call z,Reinicia_entidad_maliciosa
1615  8C72
1616  8C72 C9           	ret
1617  8C73
1618  8C73              ; --------------------------------------------------------------------------------------------------------------
1619  8C73              ;
1620  8C73              ;	27/5/24
1621  8C73              ;
1622  8C73              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1623  8C73              ;
1624  8C73              ;	IX contiene el puntero de impresión.
1625  8C73              ;	DE contiene (Puntero_objeto).
1626  8C73
1627  8C73
1628  8C73              Cargamos_registros_con_mov_masticado_Amadeus
1629  8C73
1630  8C73 ED 73 CC 89  	ld (Stack),sp
1631  8C77 ED 7B 97 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1632  8C7B D1           	pop de 															; DE contiene Puntero_objeto
1633  8C7C DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1634  8C7E ED 7B CC 89  	ld sp,(Stack)
1635  8C82 C9           	ret
1636  8C83
1637  8C83              ; --------------------------------------------------------------------------------------------------------------
1638  8C83              ;
1639  8C83              ;	28/12/23
1640  8C83              ;
1641  8C83              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1642  8C83              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1643  8C83
1644  8C83              Guarda_foto_entidad_a_pintar
1645  8C83
1646  8C83 3A 9B 89     	ld a,(Ctrl_0)
1647  8C86 CB 77        	bit 6,a
1648  8C88 28 04        	jr z,5F
1649  8C8A
1650  8C8A              ;	Guarda la foto de Amadeus.
1651  8C8A
1652  8C8A              ;	call Draw
1653  8C8A              ;	call Guarda_movimiento_masticado	;! Provisional
1654  8C8A CD 46 AD     	call Genera_datos_de_impresion
1655  8C8D C9           	ret
1656  8C8E
1657  8C8E              ; ENTIDADES!
1658  8C8E              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1659  8C8E
1660  8C8E 3A E1 89     5 ld a,(Ctrl_3)
1661  8C91 CB 5F        	bit 3,a
1662  8C93 28 01        	jr z,1F
1663  8C95
1664  8C95              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1665  8C95
1666  8C95              4
1667  8C95              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1668  8C95 C9           	ret
1669  8C96
1670  8C96              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1671  8C96
1672  8C96 3A E1 89     1 ld a,(Ctrl_3)
1673  8C99 CB 57        	bit 2,a
1674  8C9B 20 10        	jr nz,6F
1675  8C9D
1676  8C9D              ; Entidad guía o fantasma ???
1677  8C9D
1678  8C9D 3A A0 89     	ld a,(Ctrl_2)
1679  8CA0 CB 6F        	bit 5,a
1680  8CA2 20 10        	jr nz,3F
1681  8CA4
1682  8CA4              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1683  8CA4
1684  8CA4 18 EF        	jr 4B
1685  8CA6
1686  8CA6              ; ENTIDAD_GUÍA:
1687  8CA6              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1688  8CA6              ; _guardando "movimientos_masticados".
1689  8CA6
1690  8CA6 3A E1 89     2 ld a,(Ctrl_3)
1691  8CA9 CB 57        	bit 2,a
1692  8CAB 28 07        	jr z,3F
1693  8CAD
1694  8CAD              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1695  8CAD              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1696  8CAD
1697  8CAD CB 97        6 res 2,a
1698  8CAF CB DF        	set 3,a
1699  8CB1 32 E1 89     	ld (Ctrl_3),a
1700  8CB4
1701  8CB4
1702  8CB4              ;	Esto sólo lo ejecuta una entidad guía.
1703  8CB4
1704  8CB4 CD 3C 92     3 	call Draw
1705  8CB7 CD 32 8C     	call Guarda_movimiento_masticado
1706  8CBA CD 46 AD     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1707  8CBD
1708  8CBD              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1709  8CBD              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1710  8CBD
1711  8CBD              ;	call Convierte_guia_en_fantasma
1712  8CBD C9           	ret
1713  8CBE
1714  8CBE              ; ---------------------------------------------------------------------------------------------------------------------
1715  8CBE              ;
1716  8CBE              ;	28/05/24
1717  8CBE              ;
1718  8CBE
1719  8CBE CD 73 8C     Pinta_Amadeus call Cargamos_registros_con_mov_masticado_Amadeus
1720  8CC1 DD E5        	push ix
1721  8CC3 E1           	pop hl 																; (Puntero_de_impresion) en HL.
1722  8CC4
1723  8CC4 D5           	push de
1724  8CC5 CD F3 AC     	call Genera_coordenadas
1725  8CC8 CD 6A 8B     	call Recauda_informacion_de_entidad_en_curso						; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
1726  8CCB D1           	pop de
1727  8CCC
1728  8CCC CD 46 AD     	call Genera_datos_de_impresion
1729  8CCF
1730  8CCF C9           	ret
1731  8CD0
1732  8CD0              ; ---------------------------------------------------------------------------------------------------------------------
1733  8CD0              ;
1734  8CD0              ;	13/03/24
1735  8CD0              ;
1736  8CD0
1737  8CD0              Inicia_albumes_de_lineas
1738  8CD0
1739  8CD0 21 00 80     	ld hl,Scanlines_album
1740  8CD3 22 D0 89     	ld (Album_de_pintado),hl
1741  8CD6 22 DB 89     	ld (Scanlines_album_SP),hl
1742  8CD9
1743  8CD9 21 00 90     	ld hl,Scanlines_album_2
1744  8CDC 22 D2 89     	ld (Album_de_borrado),hl
1745  8CDF
1746  8CDF C9           	ret
1747  8CE0
1748  8CE0
1749  8CE0
1750  8CE0              ; ---------------------------------------------------------------------------------------------------------------------
1751  8CE0              ;
1752  8CE0              ; 8/1/23
1753  8CE0              ;
1754  8CE0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1755  8CE0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1756  8CE0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1757  8CE0
1758  8CE0              ; Destruye HL y DE !!!!!
1759  8CE0
1760  8CE0              Inicia_punteros_de_cajas
1761  8CE0
1762  8CE0 21 0F 87     	ld hl,Indice_de_cajas_de_entidades
1763  8CE3 CD F6 8C         call Extrae_address
1764  8CE6 22 BE 89         ld (Puntero_store_caja),hl
1765  8CE9 21 11 87     	ld hl,Indice_de_cajas_de_entidades+2
1766  8CEC 22 C2 89     	ld (Indice_restore_caja),hl
1767  8CEF CD F6 8C     	call Extrae_address
1768  8CF2 22 C0 89     	ld (Puntero_restore_caja),hl
1769  8CF5 C9               ret
1770  8CF6
1771  8CF6              ; *************************************************************************************************************************************************************
1772  8CF6              ;
1773  8CF6              ; 8/1/23
1774  8CF6              ;
1775  8CF6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1776  8CF6
1777  8CF6              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1778  8CF6              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1779  8CF6              ;	ret
1780  8CF6              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1781  8CF6              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1782  8CF6              ;	ret
1783  8CF6
1784  8CF6              ; -------------------------------------------------------------------------------------------------------------
1785  8CF6              ;
1786  8CF6              ; 21/9/23
1787  8CF6              ;
1788  8CF6
1789  8CF6              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1790  8CF6
1791  8CF6              ;;Limpia_album_Amadeus
1792  8CF6              ;
1793  8CF6              ;;	ld hl,Scanlines_album_Amadeus
1794  8CF6              ;;	ld a,(hl)
1795  8CF6              ;;	and a
1796  8CF6              ;;	ret z
1797  8CF6
1798  8CF6              ;;	ld hl,Scanlines_album_Amadeus;
1799  8CF6              ;;	ld de,Scanlines_album_Amadeus+1
1800  8CF6              ;;	ld bc,11
1801  8CF6              ;;	xor a
1802  8CF6              ;;	ld (hl),a
1803  8CF6              ;;	ldir
1804  8CF6
1805  8CF6              ;;	ld hl,Scanlines_album_Amadeus
1806  8CF6              ;;	ld (End_Snapshot_Amadeus),hl
1807  8CF6
1808  8CF6              ;;	ret
1809  8CF6
1810  8CF6              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1811  8CF6              ;	ld de,Variables_de_borrado+1
1812  8CF6              ;	ld bc,5
1813  8CF6              ;	xor a
1814  8CF6              ;	ld (hl),a
1815  8CF6              ;	ldir
1816  8CF6              ;	ret
1817  8CF6
1818  8CF6              ; *************************************************************************************************************************************************************
1819  8CF6              ;
1820  8CF6              ; 20/10/22
1821  8CF6              ;
1822  8CF6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1823  8CF6              ;
1824  8CF6              ; Destruye el puntero y DE !!!!!
1825  8CF6
1826  8CF6 5E           Extrae_address ld e,(hl)
1827  8CF7 23           	inc hl
1828  8CF8 56           	ld d,(hl)
1829  8CF9 2B           	dec hl
1830  8CFA EB           	ex de,hl
1831  8CFB C9           	ret
1832  8CFC
1833  8CFC              ; *************************************************************************************************************************************************************
1834  8CFC              ;
1835  8CFC              ;	20/1/24
1836  8CFC              ;
1837  8CFC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1838  8CFC              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1839  8CFC              ;
1840  8CFC              ;   Destruye HL y BC !!!!!,
1841  8CFC              ;
1842  8CFC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1843  8CFC              ;					"0" ..... Izquierda.
1844  8CFC
1845  8CFC              Inicia_Puntero_objeto
1846  8CFC
1847  8CFC 3A 93 89     	ld a,(Cuad_objeto)
1848  8CFF E6 01        	and 1
1849  8D01 F5           	push af
1850  8D02 CC 1E 8D     	call z,Inicia_puntero_objeto_izq
1851  8D05 F1           	pop af
1852  8D06 C8           	ret z
1853  8D07 CD 0B 8D     	call Inicia_puntero_objeto_der
1854  8D0A C9           	ret
1855  8D0B
1856  8D0B              ; Arrancamos desde la parte izquierda de la pantalla.
1857  8D0B              ; Iniciamos (Indice_Sprite_der).
1858  8D0B
1859  8D0B 2A 89 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1860  8D0E 22 8D 89     	ld (Puntero_DESPLZ_der),hl
1861  8D11 CD F6 8C     	call Extrae_address
1862  8D14 22 83 89     	ld (Puntero_objeto),hl
1863  8D17
1864  8D17 2A 8B 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1865  8D1A 22 8F 89     	ld (Puntero_DESPLZ_izq),hl
1866  8D1D C9           	ret
1867  8D1E
1868  8D1E              ; Arrancamos desde la parte derecha de la pantalla.
1869  8D1E              ; Iniciamos (Indice_Sprite_izq).
1870  8D1E
1871  8D1E 2A 8B 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1872  8D21 22 8F 89     	ld (Puntero_DESPLZ_izq),hl
1873  8D24 CD F6 8C     	call Extrae_address
1874  8D27 22 83 89     	ld (Puntero_objeto),hl
1875  8D2A
1876  8D2A 2A 89 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1877  8D2D 22 8D 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1878  8D30 C9           	ret
1879  8D31
1880  8D31              ; **************************************************************************************************
1881  8D31              ;
1882  8D31              ;	12/5/24
1883  8D31              ;
1884  8D31              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1885  8D31
1886  8D31              Restore_entidad
1887  8D31
1888  8D31 2A BE 89     	ld hl,(Puntero_store_caja)
1889  8D34 11 7E 89     	ld de,Bandeja_DRAW
1890  8D37 7E           	ld a,(hl)
1891  8D38 12           	ld (de),a
1892  8D39 23           	inc hl 											; (Tipo).
1893  8D3A
1894  8D3A 11 85 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1895  8D3D 01 02 00     	ld bc,2
1896  8D40 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1897  8D42
1898  8D42 13           	inc de
1899  8D43 7E           	ld a,(hl)
1900  8D44 12           	ld (de),a 										; Transferimos (Contador_de_vueltas).
1901  8D45 23           	inc hl
1902  8D46
1903  8D46 11 94 89     	ld de,Impacto
1904  8D49 01 08 00     	ld bc,8
1905  8D4C ED B0        	ldir 											; Transferimos (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1906  8D4E              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1907  8D4E 11 A0 89     	ld de,Ctrl_2
1908  8D51 01 02 00     	ld bc,2
1909  8D54 ED B0        	ldir											; Transferimos (Ctrl_2) y (Velocidad).
1910  8D56
1911  8D56 C9           	ret
1912  8D57
1913  8D57              ; **************************************************************************************************
1914  8D57              ;
1915  8D57              ;	08/05/23
1916  8D57              ;
1917  8D57              ;	Incrementamos los dos punteros de entidades. (+1).
1918  8D57
1919  8D57              Incrementa_punteros_de_cajas
1920  8D57
1921  8D57 2A C0 89     	ld hl,(Puntero_restore_caja)
1922  8D5A 22 BE 89     	ld (Puntero_store_caja),hl
1923  8D5D 2A C2 89     	ld hl,(Indice_restore_caja)
1924  8D60 23           	inc hl
1925  8D61 23           	inc hl
1926  8D62 22 C2 89     	ld (Indice_restore_caja),hl
1927  8D65 CD F6 8C         call Extrae_address
1928  8D68 22 C0 89         ld (Puntero_restore_caja),hl
1929  8D6B C9               ret
1930  8D6C
1931  8D6C              ; **************************************************************************************************
1932  8D6C              ;
1933  8D6C              ;	21/12/23
1934  8D6C              ;
1935  8D6C              ;	Restore_Amadeus
1936  8D6C              ;
1937  8D6C              ;	Cargamos en DRAW los parámetros de Amadeus.
1938  8D6C              ;
1939  8D6C
1940  8D6C              ;Restore_Amadeus	push hl
1941  8D6C              ;	push de
1942  8D6C              ; 	push bc
1943  8D6C              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1944  8D6C              ;	ld de,Bandeja_DRAW
1945  8D6C              ;	ld bc,42
1946  8D6C              ;	ldir
1947  8D6C              ;	pop bc
1948  8D6C              ;	pop de
1949  8D6C              ;	pop hl
1950  8D6C              ;	ret
1951  8D6C
1952  8D6C              ; *************************************************************************************************************************************************************
1953  8D6C              ;
1954  8D6C              ;	21/12/23
1955  8D6C              ;
1956  8D6C              ;	Store_Amadeus
1957  8D6C              ;
1958  8D6C              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1959  8D6C              ;
1960  8D6C              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1961  8D6C              ;
1962  8D6C              ;	DESTRUYE: HL y BC y DE.
1963  8D6C
1964  8D6C              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1965  8D6C              ;	ld bc,42
1966  8D6C              ;	ldir
1967  8D6C              ;	ret
1968  8D6C
1969  8D6C              ; -----------------------------------------------------------
1970  8D6C              ;
1971  8D6C              ;	21/12/23
1972  8D6C              ;
1973  8D6C              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1974  8D6C              ;
1975  8D6C              ;	Destruye: HL,BC,DE,A
1976  8D6C
1977  8D6C              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1978  8D6C              ;	ld bc,41
1979  8D6C              ;	xor a
1980  8D6C              ;	ld (hl),a;
1981  8D6C              ;	ld de,Bandeja_DRAW+1
1982  8D6C              ;	ldir
1983  8D6C              ;	ret
1984  8D6C
1985  8D6C              ; -----------------------------------------------------------
1986  8D6C
1987  8D6C              ; Teclado.
1988  8D6C
1989  8D6C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1990  8D6E DB FE        	in a,($fe)
1991  8D70 E6 01        	and $01
1992  8D72 28 02        	jr z,1f
1993  8D74 18 F6        	jr Pulsa_ENTER
1994  8D76 C9           1 ret
1995  8D77
1996  8D77              ; **************************************************************************************************
1997  8D77              ;
1998  8D77              ; Temporización.
1999  8D77
2000  8D77              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2001  8D77              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2002  8D77              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2003  8D77              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2004  8D77
2005  8D77              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2006  8D77              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2007  8D77              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2008  8D77
2009  8D77              ; A partir de $4f61 no hace falta DELAY.
2010  8D77
2011  8D77              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2012  8D77
2013  8D77 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2014  8D7A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2015  8D7B 78           	LD A,B
2016  8D7C A7           	AND A
2017  8D7D 20 FB        	JR NZ,wait
2018  8D7F C9           	RET
2019  8D80
2020  8D80              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2021  8D80              ;
2022  8D80              ;	5/3/23
2023  8D80              ;
2024  8D80              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
2025  8D80
2026  8D80              ;Movimiento_Amadeus
2027  8D80
2028  8D80              ; Disparo.
2029  8D80
2030  8D80              ;	ld a,(Disparo_Amadeus)
2031  8D80              ;	and a
2032  8D80              ;	jr nz,1F
2033  8D80              ;	jr 2F
2034  8D80
2035  8D80              ;1 ld a,$f7													; "5" para disparar.
2036  8D80              ;	in a,($fe)
2037  8D80              ;	and $10
2038  8D80
2039  8D80              ;	push af
2040  8D80              ;	call z,Genera_disparo
2041  8D80              ;	pop af
2042  8D80              ;	jr nz,2F
2043  8D80
2044  8D80              ;	ld a,(Disparo_Amadeus)
2045  8D80              ;	xor 1
2046  8D80              ;	ld (Disparo_Amadeus),a
2047  8D80              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2048  8D80              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2049  8D80              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2050  8D80              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
2051  8D80
2052  8D80              ;	ld a,$f7
2053  8D80              ;	in a,($fe)
2054  8D80              ;	and $01
2055  8D80              ;	ret z
2056  8D80
2057  8D80              ;	ld a,$f7
2058  8D80              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2059  8D80              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2060  8D80              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
2061  8D80              ;	ret
2062  8D80
2063  8D80              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2064  8D80              ;
2065  8D80              ;	Rutina provisional para que los malotes cagen balas.
2066  8D80
2067  8D80              ;Detecta_disparo_entidad
2068  8D80
2069  8D80              ;	ld a,(Disparo_entidad)
2070  8D80              ;	and a
2071  8D80              ;	ret z
2072  8D80
2073  8D80              ;! Aquí hemos de implementar la rutina/s que generan disparo...
2074  8D80
2075  8D80              ;	ld a,$7f				; Detecta SPACE.
2076  8D80              ;	in a,($fe)
2077  8D80              ;	and 1
2078  8D80              ;	ret nz
2079  8D80
2080  8D80              ;	call Genera_disparo
2081  8D80              ;	ret
2082  8D80
2083  8D80              ; ----------------------------------------------------------------------
2084  8D80              ;
2085  8D80              ;	8/9/23
2086  8D80
2087  8D80              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
2088  8D80              ; 	dec hl
2089  8D80              ;	ld a,(hl)
2090  8D80              ;	and a
2091  8D80              ;	ret z										; Salimos si es álbum está vacío.
2092  8D80
2093  8D80              ;	ld de,Variables_de_borrado+5
2094  8D80              ;	ld bc,6
2095  8D80              ;	lddr
2096  8D80              ;	ret
2097  8D80
2098  8D80              ; ----------------------------------------------------------------------
2099  8D80              ;
2100  8D80              ;	9/9/23
2101  8D80
2102  8D80              ;Repone_datos_de_borrado_Amadeus
2103  8D80
2104  8D80              ;	ld hl,Variables_de_borrado
2105  8D80              ;	ld de,Scanlines_album_Amadeus
2106  8D80              ;	ld bc,6
2107  8D80              ;	ldir
2108  8D80
2109  8D80              ;	ex de,hl
2110  8D80              ;	ld (End_Snapshot_Amadeus),hl
2111  8D80
2112  8D80              ;	ret
2113  8D80
2114  8D80              ; ----------------------------------------------------------------------
2115  8D80              ;
2116  8D80              ;	27/10/23
2117  8D80              ;
2118  8D80
2119  8D80              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
2120  8D80              ;	_ Scanlines_album correspondiente.
2121  8D80
2122  8D80              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
2123  8D80              ;	_ durante el proceso de escritura.
2124  8D80
2125  8D80              ;Repone_datos_de_borrado
2126  8D80
2127  8D80              ;	ld de,(Scanlines_album_SP)
2128  8D80              ;	ld hl,Variables_de_borrado
2129  8D80              ;	ld bc,6
2130  8D80              ;	ldir
2131  8D80
2132  8D80              ;	ex de,hl
2133  8D80              ;	ld (Scanlines_album_SP),hl
2134  8D80
2135  8D80              ;	ret
2136  8D80
2137  8D80              ; --------------------------------------------------------------------------------------
2138  8D80
2139  8D80              ;Pinta_Amadeus
2140  8D80
2141  8D80              ;   call Calcula_malotes_Amadeus
2142  8D80              ;	call Extrae_foto_Amadeus
2143  8D80              ;	call Limpia_album_Amadeus
2144  8D80
2145  8D80              ;	ret
2146  8D80
2147  8D80              ; ---------------------------------------------------------------
2148  8D80
2149  8D80              	org $aa7f
2150  AA7F
2151  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F              ;
   3+ AA7F              ;   21/04/24
   4+ AA7F              ;
   5+ AA7F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ AA7F              ;   (XOR) bit a bit.
   7+ AA7F              ;
   8+ AA7F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ AA7F
  10+ AA7F              Derivando_RND
  11+ AA7F
  12+ AA7F 21 6C 86         ld hl,Numeros_aleatorios
  13+ AA82
  14+ AA82 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ AA84 C5               push bc
  16+ AA85              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ AA85 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ AA88              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ AA88
  20+ AA88 A7           6 and a                                 ; Carry a "0".
  21+ AA89 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ AA8B 30 02            jr nc,1F
  23+ AA8D
  24+ AA8D CB C1            set 0,c
  25+ AA8F
  26+ AA8F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ AA90 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ AA92 5F               ld e,a
  29+ AA93
  30+ AA93 7A               ld a,d
  31+ AA94 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ AA96 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ AA98
  34+ AA98 CB 3F            srl a
  35+ AA9A
  36+ AA9A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ AA9B
  38+ AA9B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ AA9C 28 04            jr z,4F
  40+ AA9E
  41+ AA9E CB FF            set 7,a
  42+ AAA0 18 02            jr 5F
  43+ AAA2
  44+ AAA2 CB BF        4 res 7,a
  45+ AAA4
  46+ AAA4 CB 21        5 sla c
  47+ AAA6 10 E0            djnz 6B
  48+ AAA8
  49+ AAA8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ AAA9
  51+ AAA9 77               ld (hl),a
  52+ AAAA 23               inc hl
  53+ AAAB C1               pop bc
  54+ AAAC 10 D4            djnz 3B
  55+ AAAE
  56+ AAAE C9               ret
  57+ AAAF
  58+ AAAF
  59+ AAAF
# file closed: RND_Derivando.asm
2152  AAAF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAF              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAF              ;
   3+ AAAF              ;   8/3/24
   4+ AAAF              ;
   5+ AAAF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAF              ;	_ de la 1ª entidad del Nivel.
   9+ AAAF              ;
  10+ AAAF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAF
  12+ AAAF              ;	MODIFICA: HL,DE y A.
  13+ AAAF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAF
  15+ AAAF              Inicializa_Nivel
  16+ AAAF
  17+ AAAF 2A EC 89     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB2 CD F6 8C     	call Extrae_address
  19+ AAB5 7E           	ld a,(hl)
  20+ AAB6 32 C4 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB9 23           	inc hl
  22+ AABA CD C7 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABD 22 EE 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AAC0 CD D0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC3
  26+ AAC3 CD E1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC6 C9           	ret
  28+ AAC7
  29+ AAC7              ; ----------------------
  30+ AAC7
  31+ AAC7 11 A3 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AACA 01 04 00     	ld bc,4
  33+ AACD ED B0        	ldir
  34+ AACF C9           	ret
  35+ AAD0
  36+ AAD0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAD1 CD 5C AC         call Calcula_salto_en_BC
  38+ AAD4 21 8B 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD7 A7               and a
  40+ AAD8 ED 4A            adc hl,bc
  41+ AADA CD F6 8C         call Extrae_address
  42+ AADD 22 AF 89         ld (Puntero_indice_mov),hl
  43+ AAE0 C9               ret
  44+ AAE1
  45+ AAE1 3A 7E 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE4 CD 5C AC     	call Calcula_salto_en_BC
  47+ AAE7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAEA A7               and a
  49+ AAEB ED 4A            adc hl,bc
  50+ AAED CD F6 8C         call Extrae_address
  51+ AAF0 22 97 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF3 C9           	ret
  53+ AAF4
  54+ AAF4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF4              ;
  56+ AAF4              ;   5/1/24
  57+ AAF4              ;
  58+ AAF4              ;	Destruye A,BC,HL,DE
  59+ AAF4
  60+ AAF4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF4
  63+ AAF4              Inicia_Entidades
  64+ AAF4
  65+ AAF4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF4
  67+ AAF4 CD E0 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF7 CD B8 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAFA
  71+ AAFA 2A EE 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFD
  73+ AAFD 22 EE 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AB00
  75+ AB00 CD 0A AC     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB03
  77+ AB03 2A EE 89     	ld hl,(Datos_de_nivel)
  78+ AB06
  79+ AB06              ; En este punto:
  80+ AB06              ;
  81+ AB06              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB06              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB06
  84+ AB06 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB07
  86+ AB07 7E           	ld a,(hl)
  87+ AB08 CD 8B AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB0B
  89+ AB0B CD 6E AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0E
  91+ AB0E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0E
  93+ AB0E CD 2C AC     	call Busca_mov_masticados_segun_tipo
  94+ AB11
  95+ AB11 A7           	and a
  96+ AB12 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB14
  98+ AB14              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB14
 100+ AB14              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB14              ;	_ de este tipo de entidad.
 102+ AB14
 103+ AB14 CD 05 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ AB17 CD 12 9A     	call Transfiere_datos_de_contadores
 105+ AB1A
 106+ AB1A 18 06        	jr 4F
 107+ AB1C
 108+ AB1C CD 06 8C     3 call Construye_movimientos_masticados_entidad
 109+ AB1F
 110+ AB1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1F
 116+ AB1F CD EA AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB22              ;																; _ Mov_masticados ya generados.
 118+ AB22
 119+ AB22 CD 5A 8C     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB25
 121+ AB25 DD E5        	push ix
 122+ AB27 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB28
 124+ AB28 D5           	push de
 125+ AB29 CD F3 AC     	call Genera_coordenadas
 126+ AB2C CD 6A 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 127+ AB2F D1           	pop de
 128+ AB30
 129+ AB30 CD 46 AD     	call Genera_datos_de_impresion
 130+ AB33              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 131+ AB33              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 132+ AB33              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 133+ AB33              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 134+ AB33
 135+ AB33 CD AE AB     	call Decrementa_Contador_de_mov_masticados
 136+ AB36
 137+ AB36              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 138+ AB36
 139+ AB36 ED 5B BE 89  	ld de,(Puntero_store_caja)
 140+ AB3A CD 95 AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 141+ AB3D
 142+ AB3D CD A3 AB     	call Limpiamos_bandeja_DRAW
 143+ AB40 CD 57 8D     	call Incrementa_punteros_de_cajas
 144+ AB43
 145+ AB43              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 146+ AB43              ; _ entidad del Nivel.
 147+ AB43
 148+ AB43 3A E2 89     	ld a,(Ctrl_4)
 149+ AB46 E6 F0        	and $f0
 150+ AB48 32 E2 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 151+ AB4B
 152+ AB4B              ; Siguiente entidad del Nivel.
 153+ AB4B
 154+ AB4B 2A EE 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 155+ AB4E 23           	inc hl 														; _ entidad del Nivel.
 156+ AB4F
 157+ AB4F C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 158+ AB50
 159+ AB50 10 AB        	djnz 2B
 160+ AB52
 161+ AB52 C9           	ret
 162+ AB53
 163+ AB53              ; -------------------------------------------------------------------------------------------------------------------
 164+ AB53              ;
 165+ AB53              ;	27/5/24
 166+ AB53              ;
 167+ AB53              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 168+ AB53              ;
 169+ AB53
 170+ AB53              ; 	Cargamos la definición de Amadeus en DRAW.
 171+ AB53              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 172+ AB53
 173+ AB53 21 B0 87     Inicia_Amadeus ld hl,Definicion_Amadeus
 174+ AB56 CD 6E AC     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 175+ AB59
 176+ AB59
 177+ AB59              Construye_movimientos_masticados_Amadeus
 178+ AB59
 179+ AB59 2A 97 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 180+ AB5C CD 4D 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 181+ AB5F              ;															; _ el (Contador_de_mov_masticados).
 182+ AB5F CD FC 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 183+ AB62              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 184+ AB62
 185+ AB62              ; Generamos movimientos masticados de Amadeus.
 186+ AB62
 187+ AB62 06 79        	ld b,121												; $0079, 121d.
 188+ AB64
 189+ AB64 C5           1 push bc
 190+ AB65 CD 3C 92     	call Draw
 191+ AB68 CD 32 8C     	call Guarda_movimiento_masticado
 192+ AB6B
 193+ AB6B CD B0 95     	call Mov_right
 194+ AB6E CD B0 95     	call Mov_right											; Amadeus se mueve x2 pixel.
 195+ AB71
 196+ AB71 C1           	pop bc
 197+ AB72 10 F0        	djnz 1B
 198+ AB74
 199+ AB74              ; Todos los movimientos masticados de Amadeus se han creado.
 200+ AB74
 201+ AB74              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 202+ AB74              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 203+ AB74
 204+ AB74 2A 97 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 205+ AB77 01 08 00     	ld bc,8
 206+ AB7A A7           	and a
 207+ AB7B ED 42        	sbc hl,bc
 208+ AB7D 22 97 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 209+ AB80
 210+ AB80              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 211+ AB80
 212+ AB80 06 3C        	ld b,60
 213+ AB82 CD 86 98     2 call Amadeus_a_izquierda
 214+ AB85 10 FB        	djnz 2B
 215+ AB87
 216+ AB87 CD BE 8C     	call Pinta_Amadeus
 217+ AB8A
 218+ AB8A C9           	ret
 219+ AB8B
 220+ AB8B              ; ---------------------------------------------------------------------
 221+ AB8B              ;
 222+ AB8B              ;	10/02/24
 223+ AB8B              ;
 224+ AB8B              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 225+ AB8B              ;
 226+ AB8B              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 227+ AB8B
 228+ AB8B              Definicion_segun_tipo
 229+ AB8B
 230+ AB8B CD 5C AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 231+ AB8E 21 92 87     	ld hl,Indice_de_definiciones_de_entidades
 232+ AB91 CD 64 AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 233+ AB94 C9           	ret
 234+ AB95
 235+ AB95              ; ---------------------------------------------------------------------
 236+ AB95              ;
 237+ AB95              ;	27/03/24
 238+ AB95
 239+ AB95
 240+ AB95              Store_Restore_cajas
 241+ AB95
 242+ AB95 ED 5B BE 89  	ld de,(Puntero_store_caja)
 243+ AB99 CD 95 AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 244+ AB9C
 245+ AB9C CD A3 AB     	call Limpiamos_bandeja_DRAW
 246+ AB9F
 247+ AB9F              ; 	Entidad_sospechosa. 20/4/23
 248+ AB9F
 249+ AB9F              ;	ld a,(Impacto)
 250+ AB9F              ;	and a
 251+ AB9F              ;	jr z,1F
 252+ AB9F
 253+ AB9F              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 254+ AB9F              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 255+ AB9F              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 256+ AB9F              ;	adc hl,bc 											; _ "0" más adelante.
 257+ AB9F              ;	ld (Entidad_sospechosa_de_colision),hl
 258+ AB9F
 259+ AB9F
 260+ AB9F              ;1 ld hl,(Puntero_restore_caja)
 261+ AB9F              ;	ld a,(hl)
 262+ AB9F              ;	and a
 263+ AB9F              ;	push af
 264+ AB9F              ;	jr z,2F
 265+ AB9F
 266+ AB9F              ;	di
 267+ AB9F              ;	ld de,Bandeja_DRAW
 268+ AB9F              ;	ld bc,42
 269+ AB9F              ;	ldir
 270+ AB9F              ;	ei
 271+ AB9F
 272+ AB9F CD 57 8D     2 call Incrementa_punteros_de_cajas
 273+ ABA2 C9           	ret
 274+ ABA3
 275+ ABA3              ; ---------------------------------------------------------------------
 276+ ABA3              ;
 277+ ABA3              ;	12/05/24
 278+ ABA3
 279+ ABA3 21 7E 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 280+ ABA6 06 25        	ld b,37
 281+ ABA8 AF           	xor a
 282+ ABA9 77           1 ld (hl),a
 283+ ABAA 23           	inc hl
 284+ ABAB 10 FC        	djnz 1B
 285+ ABAD C9           	ret
 286+ ABAE
 287+ ABAE              ; ---------------------------------------------------------------------
 288+ ABAE              ;
 289+ ABAE              ;	24/03/24
 290+ ABAE
 291+ ABAE 2A 99 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 292+ ABB1 2B           	dec hl
 293+ ABB2
 294+ ABB2              ; debug 6/5/24
 295+ ABB2
 296+ ABB2
 297+ ABB2 22 99 89     	ld (Contador_de_mov_masticados),hl
 298+ ABB5 C9           	ret
 299+ ABB6
 300+ ABB6              ; ---------------------------------------------------------------------
 301+ ABB6              ;
 302+ ABB6              ;	8/5/24
 303+ ABB6
 304+ ABB6              Reinicia_entidad_maliciosa
 305+ ABB6
 306+ ABB6              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 307+ ABB6
 308+ ABB6 CD 05 9A     	call Situa_en_contador_general_de_mov_masticados
 309+ ABB9 CD 12 9A     	call Transfiere_datos_de_contadores
 310+ ABBC
 311+ ABBC              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 312+ ABBC
 313+ ABBC 3A 7E 89     	ld a,(Tipo)
 314+ ABBF CD 8B AB     	call Definicion_segun_tipo
 315+ ABC2
 316+ ABC2 E5           	push hl
 317+ ABC3 DD E1        	pop ix
 318+ ABC5
 319+ ABC5 DD 6E 0B     	ld l,(ix+11)
 320+ ABC8 DD 66 0C     	ld h,(ix+12)
 321+ ABCB
 322+ ABCB 22 97 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 323+ ABCE
 324+ ABCE CD 5A 8C     	call Cargamos_registros_con_mov_masticado
 325+ ABD1
 326+ ABD1              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 327+ ABD1              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 328+ ABD1              ; Ejemplos.
 329+ ABD1
 330+ ABD1              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 331+ ABD1              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 332+ ABD1              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 333+ ABD1              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 334+ ABD1              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 335+ ABD1
 336+ ABD1 21 88 89     	ld hl,Contador_de_vueltas
 337+ ABD4 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 338+ ABD6
 339+ ABD6 7E           	ld a,(hl)
 340+ ABD7 CB 2F        	sra a
 341+ ABD9 CB 2F        	sra a
 342+ ABDB
 343+ ABDB 32 A1 89     	ld (Velocidad),a
 344+ ABDE
 345+ ABDE 3E 40        	ld a,$40
 346+ ABE0 BE           	cp (hl)
 347+ ABE1 C0           	ret nz
 348+ ABE2
 349+ ABE2              ; Límitador.
 350+ ABE2
 351+ ABE2              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 352+ ABE2
 353+ ABE2 CB 2E        	sra (hl)
 354+ ABE4 21 A1 89     	ld hl,Velocidad
 355+ ABE7 CB 2E        	sra (hl)
 356+ ABE9
 357+ ABE9 C9           	ret
 358+ ABEA
 359+ ABEA              ; ---------------------------------------------------------------------
 360+ ABEA              ;
 361+ ABEA              ;	22/01/24
 362+ ABEA
 363+ ABEA 21 E2 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 364+ ABED CB 46        	bit 0,(hl)
 365+ ABEF 20 0D        	jr nz,1F
 366+ ABF1 CB 4E        	bit 1,(hl)
 367+ ABF3 20 0C        	jr nz,2F
 368+ ABF5 CB 56        	bit 2,(hl)
 369+ ABF7 20 0B        	jr nz,3F
 370+ ABF9 CB 5E        	bit 3,(hl)
 371+ ABFB 20 0A        	jr nz,4F
 372+ ABFD C9           	ret
 373+ ABFE
 374+ ABFE CB E6        1 set 4,(hl)
 375+ AC00 C9           	ret
 376+ AC01 CB EE        2 set 5,(hl)
 377+ AC03 C9           	ret
 378+ AC04 CB F6        3 set 6,(hl)
 379+ AC06 C9           	ret
 380+ AC07 CB FE        4 set 7,(hl)
 381+ AC09 C9           	ret
 382+ AC0A
 383+ AC0A              ; ---------------------------------------------------------------------
 384+ AC0A              ;
 385+ AC0A              ;	23/01/24
 386+ AC0A              ;
 387+ AC0A              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 388+ AC0A              ;
 389+ AC0A              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 390+ AC0A              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 391+ AC0A              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 392+ AC0A              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 393+ AC0A
 394+ AC0A              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 395+ AC0A
 396+ AC0A 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 397+ AC0B 3D           	dec a
 398+ AC0C 20 06        	jr nz,1F
 399+ AC0E
 400+ AC0E              ; --- Tipo_1
 401+ AC0E
 402+ AC0E 21 E2 89     	ld hl,Ctrl_4
 403+ AC11 CB C6        	set 0,(hl)
 404+ AC13 C9           	ret
 405+ AC14
 406+ AC14 3D           1 dec a
 407+ AC15 20 06        	jr nz,2F
 408+ AC17
 409+ AC17              ; --- Tipo_2
 410+ AC17
 411+ AC17 21 E2 89     	ld hl,Ctrl_4
 412+ AC1A CB CE        	set 1,(hl)
 413+ AC1C C9           	ret
 414+ AC1D
 415+ AC1D 3D           2 dec a
 416+ AC1E 20 06        	jr nz,3F
 417+ AC20
 418+ AC20              ; --- Tipo_3
 419+ AC20
 420+ AC20 21 E2 89     	ld hl,Ctrl_4
 421+ AC23 CB D6        	set 2,(hl)
 422+ AC25 C9           	ret
 423+ AC26
 424+ AC26              ; --- Tipo_3
 425+ AC26
 426+ AC26 21 E2 89     3 ld hl,Ctrl_4
 427+ AC29 CB D6        	set 2,(hl)
 428+ AC2B C9           	ret
 429+ AC2C
 430+ AC2C              ; ---------------------------------------------------------------------
 431+ AC2C              ;
 432+ AC2C              ;	22/01/24
 433+ AC2C
 434+ AC2C 21 E2 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 435+ AC2F CB 46        	bit 0,(hl)
 436+ AC31 20 0E        	jr nz,1F
 437+ AC33
 438+ AC33 CB 4E        	bit 1,(hl)
 439+ AC35 20 10        	jr nz,2F
 440+ AC37
 441+ AC37 CB 56        	bit 2,(hl)
 442+ AC39 20 12        	jr nz,3F
 443+ AC3B
 444+ AC3B CB 5E        	bit 3,(hl)
 445+ AC3D 20 14        	jr nz,4F
 446+ AC3F 18 19        	jr 6F
 447+ AC41
 448+ AC41              ; Entidad_de_Tipo_1.
 449+ AC41
 450+ AC41 CB 66        1 bit 4,(hl)
 451+ AC43 28 15        	jr z,6F
 452+ AC45 18 10        	jr 5F
 453+ AC47
 454+ AC47              ; Entidad_de_Tipo_2.
 455+ AC47
 456+ AC47 CB 6E        2 bit 5,(hl)
 457+ AC49 28 0F        	jr z,6F
 458+ AC4B 18 0A        	jr 5F
 459+ AC4D
 460+ AC4D              ; Entidad_de_Tipo_3.
 461+ AC4D
 462+ AC4D CB 76        3 bit 6,(hl)
 463+ AC4F 28 09        	jr z,6F
 464+ AC51 18 04        	jr 5F
 465+ AC53
 466+ AC53              ; Entidad_de_Tipo_4.
 467+ AC53
 468+ AC53 CB 7E        4 bit 7,(hl)
 469+ AC55 28 03        	jr z,6F
 470+ AC57
 471+ AC57              ; Esta entidad TIENE MOV_MASTICADOS.
 472+ AC57
 473+ AC57 AF           5 xor a
 474+ AC58 3C           	inc a
 475+ AC59 C9           	ret
 476+ AC5A
 477+ AC5A              ; Esta entidad NO TIENE MOV_MASTICADOS.
 478+ AC5A
 479+ AC5A AF           6 xor a
 480+ AC5B C9           	ret
 481+ AC5C
 482+ AC5C              ;	------------------------------------------------------------------------------------
 483+ AC5C              ;
 484+ AC5C              ;	12/01/24
 485+ AC5C              ;
 486+ AC5C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 487+ AC5C              ;
 488+ AC5C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 489+ AC5C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 490+ AC5C
 491+ AC5C CB 27        Calcula_salto_en_BC sla a
 492+ AC5E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 493+ AC60 4F           	ld c,a
 494+ AC61 06 00        	ld b,0
 495+ AC63 C9           	ret
 496+ AC64
 497+ AC64              ; ------------------------------------------------------------------
 498+ AC64              ;
 499+ AC64              ;	19/1/24
 500+ AC64              ;
 501+ AC64              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 502+ AC64              ;	Actualiza (Datos_de_entidad) con esa dirección.
 503+ AC64
 504+ AC64 A7           Situa_en_datos_de_definicion and a
 505+ AC65 ED 4A        	adc hl,bc
 506+ AC67 CD F6 8C     	call Extrae_address
 507+ AC6A 22 CA 89         ld (Datos_de_entidad),hl
 508+ AC6D C9           	ret
 509+ AC6E
 510+ AC6E              ; ------------------------------------------------------------------
 511+ AC6E
 512+ AC6E              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 513+ AC6E              ; 	inc de
 514+ AC6E              ; 	inc de
 515+ AC6E              ; 	ex de,hl
 516+ AC6E              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 517+ AC6E              ; 	ret
 518+ AC6E
 519+ AC6E              ; ----------------------------------------------------------------------------------------------------------
 520+ AC6E              ;
 521+ AC6E              ;	12/05/24
 522+ AC6E              ;
 523+ AC6E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 524+ AC6E              ;	_ de entidad.
 525+ AC6E              ;
 526+ AC6E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 527+ AC6E              ;
 528+ AC6E              ;
 529+ AC6E              ;	MODIFICA: HL,DE y BC
 530+ AC6E
 531+ AC6E
 532+ AC6E              Definicion_de_entidad_a_bandeja_DRAW
 533+ AC6E
 534+ AC6E 11 7E 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 535+ AC71 01 03 00     	ld bc,3
 536+ AC74 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 537+ AC76              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 538+ AC76 11 88 89     	ld de,Contador_de_vueltas					; DE en (Attr).
 539+ AC79 01 05 00     	ld bc,5
 540+ AC7C ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 541+ AC7E              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 542+ AC7E 11 91 89     	ld de,Posicion_inicio
 543+ AC81 01 03 00     	ld bc,3
 544+ AC84 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 545+ AC86              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 546+ AC86 11 97 89     	ld de,Puntero_de_almacen_de_mov_masticados
 547+ AC89 01 02 00     	ld bc,2
 548+ AC8C ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 549+ AC8E
 550+ AC8E 11 A2 89     	ld de,Frames_explosion
 551+ AC91 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 552+ AC93 12           	ld (de),a 									; Vuelco (Frames_explosion).
 553+ AC94
 554+ AC94 C9           	ret
 555+ AC95
 556+ AC95              ; ----------------------------------------------------------------------------------------------------------
 557+ AC95              ;
 558+ AC95              ;	12/5/24
 559+ AC95              ;
 560+ AC95              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 561+ AC95              ;
 562+ AC95              ;	Las cajas contienen entidades iniciadas:
 563+ AC95              ;
 564+ AC95              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 565+ AC95              ;
 566+ AC95              ;	INPUT:  DE debe contener la dirección del 1er byte de almacenamiento de la caja correspondiente:
 567+ AC95              ;
 568+ AC95              ;			- (Puntero_store_caja).
 569+ AC95              ;			_ Amadeus_BOX.
 570+ AC95
 571+ AC95              ;	OUTPUT: HL apunta al .db (Frames_explosion) de la bandeja DRAW.
 572+ AC95              ;			DE apunta al 1er .db (Tipo) de la siguiente caja de entidades.
 573+ AC95              ;
 574+ AC95              ;	MODIFICA: HL,DE y BC
 575+ AC95
 576+ AC95              Parametros_de_bandeja_DRAW_a_caja
 577+ AC95
 578+ AC95 21 7E 89     	ld hl,Bandeja_DRAW
 579+ AC98 7E           	ld a,(hl)
 580+ AC99 12           	ld (de),a
 581+ AC9A 13           	inc de 													; (Tipo).
 582+ AC9B
 583+ AC9B 21 85 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 584+ AC9E 01 02 00     	ld bc,2
 585+ ACA1 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 586+ ACA3              ;															; DE apunta ahora a (Contador_de_vueltas) de la caja de entidades. Hemos de recolocar HL.
 587+ ACA3 23           	inc hl
 588+ ACA4 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Contador_de_vueltas).
 589+ ACA5 12           	ld (de),a
 590+ ACA6 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 591+ ACA7
 592+ ACA7 21 94 89     	ld hl,Impacto
 593+ ACAA 01 08 00     	ld bc,8
 594+ ACAD ED B0        	ldir													; Hemos volcado (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 595+ ACAF              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 596+ ACAF              ;															; HL apunta ahora a (Columnas).
 597+ ACAF 21 A0 89     	ld hl,Ctrl_2
 598+ ACB2 01 02 00     	ld bc,2
 599+ ACB5 ED B0        	ldir													; Hemos volcado (Ctrl_2) y (Velocidad).
 600+ ACB7
 601+ ACB7 C9           	ret
 602+ ACB8
 603+ ACB8              ;---------------------------------------------------------------------------------------------------------------
 604+ ACB8              ;
 605+ ACB8              ;	5/1/24
 606+ ACB8              ;
 607+ ACB8              ;	INICIALIZA (Numero_parcial_de_entidades).
 608+ ACB8              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 609+ ACB8              ;
 610+ ACB8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 611+ ACB8              ;
 612+ ACB8              ;	(Numero_parcial_de_entidades)="7".
 613+ ACB8              ;
 614+ ACB8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 615+ ACB8              ;
 616+ ACB8              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 617+ ACB8              ;
 618+ ACB8              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 619+ ACB8              ;	MODIFICA: A y B.
 620+ ACB8              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 621+ ACB8
 622+ ACB8              Inicializa_Numero_parcial_de_entidades
 623+ ACB8
 624+ ACB8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 625+ ACB8
 626+ ACB8 3A C4 89     	ld a,(Numero_de_entidades)
 627+ ACBB A7           	and a
 628+ ACBC
 629+ ACBC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 630+ ACBC              ;	jr z,$
 631+ ACBC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 632+ ACBC
 633+ ACBC 20 03        	jr nz,3F
 634+ ACBE
 635+ ACBE              ; ---------- ---------- ----------
 636+ ACBE
 637+ ACBE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 638+ ACBE              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 639+ ACBE
 640+ ACBE CD AF AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 641+ ACC1
 642+ ACC1              ; ---------- ---------- ----------
 643+ ACC1
 644+ ACC1 3A C4 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 645+ ACC4 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 646+ ACC6 38 08        	jr c,1F
 647+ ACC8
 648+ ACC8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 649+ ACC8              ; Actualizamos variables.
 650+ ACC8
 651+ ACC8 3E 07        	ld a,7
 652+ ACCA 32 C5 89     	ld (Numero_parcial_de_entidades),a
 653+ ACCD 47           	ld b,a
 654+ ACCE 18 04        	jr 2F
 655+ ACD0
 656+ ACD0              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 657+ ACD0              ; (Numero_de_entidades)="0".
 658+ ACD0
 659+ ACD0 32 C5 89     1 ld (Numero_parcial_de_entidades),a
 660+ ACD3 47           	ld b,a
 661+ ACD4 C9           2 ret
 662+ ACD5
# file closed: Rutinas_de_inicio_y_niveles.asm
2153  ACD5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ ACD5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ ACD5              ;
   3+ ACD5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ ACD5              ;
   5+ ACD5              ; *****************************************************************************************************************************************************************************************
   6+ ACD5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ ACD5
   8+ ACD5 7C           calcula_tercio ld a,h
   9+ ACD6 E6 18        	and $18
  10+ ACD8 CB 2F        	sra a
  11+ ACDA CB 2F        	sra a
  12+ ACDC CB 2F        	sra a
  13+ ACDE C9           	ret
  14+ ACDF
# file closed: calcula_tercio.asm
2154  ACDF              	include "Cls.asm"
# file opened: Cls.asm
   1+ ACDF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ ACDF              ;
   3+ ACDF              ;
   4+ ACDF              ;	CLS.
   5+ ACDF              ;
   6+ ACDF              ;	Limpia la pantalla y define sus atributos.
   7+ ACDF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ ACDF              ;
   9+ ACDF              ;	COLORES: 0 ..... NEGRO
  10+ ACDF              ;    		 1 ..... AZUL
  11+ ACDF              ; 			 2 ..... ROJO
  12+ ACDF              ;			 3 ..... MAGENTA
  13+ ACDF              ; 			 4 ..... VERDE
  14+ ACDF              ; 			 5 ..... CIAN
  15+ ACDF              ;			 6 ..... AMARILLO
  16+ ACDF              ; 			 7 ..... BLANCO
  17+ ACDF              ;
  18+ ACDF              ;	INPUT: A contiene los atributos de pantalla.
  19+ ACDF              ;
  20+ ACDF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ ACDF
  22+ ACDF
  23+ ACDF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ ACE2 11 01 40     	LD DE,$4001
  25+ ACE5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ ACE8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ ACEA ED B0        	LDIR
  28+ ACEC 01 FF 02     	LD BC,767
  29+ ACEF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ ACF0 ED B0        	LDIR
  31+ ACF2 C9           	ret
  32+ ACF3
# file closed: Cls.asm
2155  ACF3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACF3              ; ------------------------------------------------------------------------
   2+ ACF3              ;
   3+ ACF3              ;	30/1/24
   4+ ACF3              ;
   5+ ACF3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACF3              ;	Fila superior "0", Columna izquierda "0".
   7+ ACF3              ;
   8+ ACF3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACF3              ;
  10+ ACF3              ;	Modifica: A,BC y DE.
  11+ ACF3
  12+ ACF3 7D           Genera_coordenadas ld a,l
  13+ ACF4 E6 1F        	and $1f
  14+ ACF6 32 85 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACF9
  16+ ACF9 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACFA FE 40        	cp $40
  18+ ACFC 38 1C        	jr c,4F
  19+ ACFE
  20+ ACFE CD D5 AC     	call calcula_tercio
  21+ AD01 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ AD02
  23+ AD02 1E 00        	ld e,0
  24+ AD04 7D           	ld a,l
  25+ AD05 E6 E0        	and $e0
  26+ AD07 28 01        	jr z,1F
  27+ AD09 04           	inc b
  28+ AD0A
  29+ AD0A 04           1 inc b
  30+ AD0B 05           	dec b
  31+ AD0C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ AD0E              ;														; _ , salimos.
  33+ AD0E 1C           3 inc e
  34+ AD0F D6 20        	sub 32
  35+ AD11 20 FB        	jr nz,3B
  36+ AD13 10 F5        	djnz 1B
  37+ AD15
  38+ AD15 7B           2 ld a,e
  39+ AD16 32 86 89     	ld (Coordenada_y),a
  40+ AD19 C9           	ret
  41+ AD1A
  42+ AD1A AF           4 xor a
  43+ AD1B 32 86 89     	ld (Coordenada_y),a
  44+ AD1E C9           	ret
  45+ AD1F
  46+ AD1F              ; ------------------------------------------------------------------------
  47+ AD1F              ;	28/05/23
  48+ AD1F              ;
  49+ AD1F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ AD1F              ;	Fila superior "0", Columna izquierda "0".
  51+ AD1F              ;
  52+ AD1F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ AD1F              ;	Output: DE contendrá las coordenadas del disparo:
  54+ AD1F              ;
  55+ AD1F              ;		DE="$120d"
  56+ AD1F              ;
  57+ AD1F              ;		D, (Coordenada_X), Columnas, $12
  58+ AD1F              ;		E, (Coordenada_y), Filas, $0d
  59+ AD1F              ;
  60+ AD1F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ AD1F
  62+ AD1F              ;	Modifica: A,BC y DE.
  63+ AD1F
  64+ AD1F
  65+ AD1F              Genera_coordenadas_disparo
  66+ AD1F
  67+ AD1F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ AD1F
  69+ AD1F 7D           	ld a,l
  70+ AD20 E6 1F        	and $1f
  71+ AD22 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ AD23 CD D5 AC     	call calcula_tercio
  73+ AD26 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ AD27 1E 00        	ld e,0
  75+ AD29 7D           	ld a,l
  76+ AD2A E6 E0        	and $e0
  77+ AD2C 28 01        	jr z,1F
  78+ AD2E 04           	inc b
  79+ AD2F 1C           1 inc e
  80+ AD30 D6 20        	sub 32
  81+ AD32 20 FB        	jr nz,1B
  82+ AD34 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ AD36 C9           	ret
  84+ AD37
# file closed: Genera_coordenadas.asm
2156  AD37              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ AD37              ; Relojes y temporizaciones.
   2+ AD37
   3+ AD37              ; ------------------------------------------------------
   4+ AD37              ;
   5+ AD37              ;	16/7/23
   6+ AD37              ;
   7+ AD37              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ AD37              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ AD37              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ AD37              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ AD37              ;
  12+ AD37              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ AD37              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ AD37
  15+ AD37              ; Disparo_entidad db 1
  16+ AD37              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ AD37              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ AD37
  19+ AD37              Habilita_disparos
  20+ AD37
  21+ AD37 7E           	ld a,(hl)
  22+ AD38 A7           	and a
  23+ AD39 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ AD3A
  25+ AD3A EB           	ex de,hl
  26+ AD3B
  27+ AD3B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ AD3C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ AD3D
  30+ AD3D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ AD3D
  32+ AD3D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ AD3E 7E           	ld a,(hl)
  34+ AD3F 23           	inc hl
  35+ AD40 77           	ld (hl),a
  36+ AD41
  37+ AD41 EB           	ex de,hl						; Habilitamos disparo.
  38+ AD42 3E 01        	ld a,1
  39+ AD44 77           	ld (hl),a
  40+ AD45 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2157  AD46              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ AD46              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AD46              ;
   3+ AD46              ;	11/03/24
   4+ AD46              ;
   5+ AD46              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ AD46              ;   DE contiene Puntero_objeto.
   7+ AD46              ;   IX contiene el Puntero de impresión.
   8+ AD46
   9+ AD46              Genera_datos_de_impresion
  10+ AD46
  11+ AD46 ED 73 CC 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ AD4A 31 97 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ AD4D DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ AD4F
  15+ AD4F 2A DB 89         ld hl,(Scanlines_album_SP)
  16+ AD52
  17+ AD52 3E 05            ld a,5
  18+ AD54 85               add l
  19+ AD55 6F               ld l,a
  20+ AD56
  21+ AD56 F9               ld sp,hl
  22+ AD57 22 DB 89         ld (Scanlines_album_SP),hl
  23+ AD5A
  24+ AD5A 21 00 00         ld hl,0
  25+ AD5D
  26+ AD5D DD E5            push ix
  27+ AD5F 3B               dec sp
  28+ AD60 ED 7A            adc hl,sp
  29+ AD62 D5               push de
  30+ AD63
  31+ AD63              ; Recuperamos SP.
  32+ AD63
  33+ AD63 ED 7B CC 89      ld sp,(Stack)
  34+ AD67
  35+ AD67 E5               push hl
  36+ AD68 F1               pop af
  37+ AD69 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ AD6A
  39+ AD6A              ; Tenemos el encabezado listo.
  40+ AD6A              ; Preparamos registros para generar los scanlines.
  41+ AD6A
  42+ AD6A DD E5            push ix
  43+ AD6C E1               pop hl                                          ; 1er scanline en HL.
  44+ AD6D
  45+ AD6D ED 5B DB 89      ld de,(Scanlines_album_SP)
  46+ AD71
  47+ AD71              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ AD71              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ AD71
  50+ AD71 7C               ld a,h
  51+ AD72 FE 50            cp $50
  52+ AD74 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ AD76
  54+ AD76 20 05            jr nz,2F
  55+ AD78
  56+ AD78 7D               ld a,l
  57+ AD79 FE E0            cp $e0
  58+ AD7B 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ AD7D
  60+ AD7D 7D           2 ld a,l
  61+ AD7E FE C0            cp $c0
  62+ AD80 D2 12 AE         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ AD83
  64+ AD83              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ AD83
  66+ AD83 CD EE 94         call NextScan
  67+ AD86 EB               ex de,hl
  68+ AD87
  69+ AD87 73               ld (hl),e
  70+ AD88 23               inc hl
  71+ AD89 72               ld (hl),d
  72+ AD8A 23               inc hl
  73+ AD8B
  74+ AD8B EB               ex de,hl
  75+ AD8C
  76+ AD8C CD EE 94         call NextScan
  77+ AD8F EB               ex de,hl
  78+ AD90
  79+ AD90 73               ld (hl),e
  80+ AD91 23               inc hl
  81+ AD92 72               ld (hl),d
  82+ AD93 23               inc hl
  83+ AD94
  84+ AD94 EB               ex de,hl
  85+ AD95
  86+ AD95 CD EE 94         call NextScan
  87+ AD98 EB               ex de,hl
  88+ AD99
  89+ AD99 73               ld (hl),e
  90+ AD9A 23               inc hl
  91+ AD9B 72               ld (hl),d
  92+ AD9C 23               inc hl
  93+ AD9D
  94+ AD9D EB               ex de,hl
  95+ AD9E
  96+ AD9E CD EE 94         call NextScan
  97+ ADA1 EB               ex de,hl
  98+ ADA2
  99+ ADA2 73               ld (hl),e
 100+ ADA3 23               inc hl
 101+ ADA4 72               ld (hl),d
 102+ ADA5 23               inc hl
 103+ ADA6
 104+ ADA6 EB               ex de,hl
 105+ ADA7
 106+ ADA7 CD EE 94         call NextScan
 107+ ADAA EB               ex de,hl
 108+ ADAB
 109+ ADAB 73               ld (hl),e
 110+ ADAC 23               inc hl
 111+ ADAD 72               ld (hl),d
 112+ ADAE 23               inc hl
 113+ ADAF
 114+ ADAF EB               ex de,hl
 115+ ADB0
 116+ ADB0 CD EE 94         call NextScan
 117+ ADB3 EB               ex de,hl
 118+ ADB4
 119+ ADB4 73               ld (hl),e
 120+ ADB5 23               inc hl
 121+ ADB6 72               ld (hl),d
 122+ ADB7 23               inc hl
 123+ ADB8
 124+ ADB8 EB               ex de,hl
 125+ ADB9
 126+ ADB9 CD EE 94         call NextScan
 127+ ADBC EB               ex de,hl
 128+ ADBD
 129+ ADBD 73               ld (hl),e
 130+ ADBE 23               inc hl
 131+ ADBF 72               ld (hl),d
 132+ ADC0 23               inc hl
 133+ ADC1
 134+ ADC1 EB               ex de,hl
 135+ ADC2
 136+ ADC2 CD EE 94         call NextScan
 137+ ADC5 EB               ex de,hl
 138+ ADC6
 139+ ADC6 73               ld (hl),e
 140+ ADC7 23               inc hl
 141+ ADC8 72               ld (hl),d
 142+ ADC9 23               inc hl
 143+ ADCA
 144+ ADCA EB               ex de,hl
 145+ ADCB
 146+ ADCB CD EE 94         call NextScan
 147+ ADCE EB               ex de,hl
 148+ ADCF
 149+ ADCF 73               ld (hl),e
 150+ ADD0 23               inc hl
 151+ ADD1 72               ld (hl),d
 152+ ADD2 23               inc hl
 153+ ADD3
 154+ ADD3 EB               ex de,hl
 155+ ADD4
 156+ ADD4 CD EE 94         call NextScan
 157+ ADD7 EB               ex de,hl
 158+ ADD8
 159+ ADD8 73               ld (hl),e
 160+ ADD9 23               inc hl
 161+ ADDA 72               ld (hl),d
 162+ ADDB 23               inc hl
 163+ ADDC
 164+ ADDC EB               ex de,hl
 165+ ADDD
 166+ ADDD CD EE 94         call NextScan
 167+ ADE0 EB               ex de,hl
 168+ ADE1
 169+ ADE1 73               ld (hl),e
 170+ ADE2 23               inc hl
 171+ ADE3 72               ld (hl),d
 172+ ADE4 23               inc hl
 173+ ADE5
 174+ ADE5 EB               ex de,hl
 175+ ADE6
 176+ ADE6 CD EE 94         call NextScan
 177+ ADE9 EB               ex de,hl
 178+ ADEA
 179+ ADEA 73               ld (hl),e
 180+ ADEB 23               inc hl
 181+ ADEC 72               ld (hl),d
 182+ ADED 23               inc hl
 183+ ADEE
 184+ ADEE EB               ex de,hl
 185+ ADEF
 186+ ADEF CD EE 94         call NextScan
 187+ ADF2 EB               ex de,hl
 188+ ADF3
 189+ ADF3 73               ld (hl),e
 190+ ADF4 23               inc hl
 191+ ADF5 72               ld (hl),d
 192+ ADF6 23               inc hl
 193+ ADF7
 194+ ADF7 EB               ex de,hl
 195+ ADF8
 196+ ADF8 CD EE 94         call NextScan
 197+ ADFB EB               ex de,hl
 198+ ADFC
 199+ ADFC 73               ld (hl),e
 200+ ADFD 23               inc hl
 201+ ADFE 72               ld (hl),d
 202+ ADFF 23               inc hl
 203+ AE00
 204+ AE00 EB               ex de,hl
 205+ AE01
 206+ AE01 CD EE 94         call NextScan
 207+ AE04 EB               ex de,hl
 208+ AE05
 209+ AE05 73               ld (hl),e
 210+ AE06 23               inc hl
 211+ AE07 72               ld (hl),d
 212+ AE08 23               inc hl
 213+ AE09
 214+ AE09              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ AE09
 216+ AE09 22 DB 89         ld (Scanlines_album_SP),hl
 217+ AE0C
 218+ AE0C              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ AE0C
 220+ AE0C 08               ex af,af
 221+ AE0D
 222+ AE0D F5               push af
 223+ AE0E E1               pop hl
 224+ AE0F
 225+ AE0F 36 10            ld (hl),16
 226+ AE11
 227+ AE11 C9               ret
 228+ AE12
 229+ AE12              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ AE12
 231+ AE12              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ AE12
 233+ AE12 3E 57            ld a,$57
 234+ AE14 94               sub h
 235+ AE15 47               ld b,a
 236+ AE16
 237+ AE16 3E DF            ld a,$df
 238+ AE18 BD               cp l
 239+ AE19 38 04            jr c,1F
 240+ AE1B
 241+ AE1B 3E 08            ld a,8
 242+ AE1D 80               add b
 243+ AE1E 47               ld b,a
 244+ AE1F
 245+ AE1F              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ AE1F              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ AE1F
 248+ AE1F 48           1 ld c,b
 249+ AE20 0C               inc c
 250+ AE21
 251+ AE21 04               inc b
 252+ AE22 05               dec b
 253+ AE23 20 02            jr nz,3F
 254+ AE25
 255+ AE25 18 0B            jr 6F
 256+ AE27
 257+ AE27 CD EE 94     3 call NextScan
 258+ AE2A EB               ex de,hl
 259+ AE2B
 260+ AE2B 73               ld (hl),e
 261+ AE2C 23               inc hl
 262+ AE2D 72               ld (hl),d
 263+ AE2E 23               inc hl
 264+ AE2F
 265+ AE2F EB               ex de,hl
 266+ AE30 10 F5            djnz 3B
 267+ AE32
 268+ AE32 ED 53 DB 89  6 ld (Scanlines_album_SP),de
 269+ AE36
 270+ AE36 08           5 ex af,af
 271+ AE37 F5               push af
 272+ AE38 E1               pop hl
 273+ AE39
 274+ AE39 71               ld (hl),c
 275+ AE3A
 276+ AE3A C9               ret
 277+ AE3B
# file closed: Genera_datos_de_impresion.asm
2158  AE3B
2159  AE3B              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ AE3B              ; -----------------------------------------------------------------------------
   2+ AE3B              ;
   3+ AE3B              ;   11/03/24
   4+ AE3B              ;
   5+ AE3B
   6+ AE3B                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 CC 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 DB 89      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B CC 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 DB 89      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B CC 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2160  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD E2 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A 93 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A 91 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 81 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 69 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A 9B 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A 9B 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 9B 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A 9B 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 9B 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 9B 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A 9D 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD D5 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD D5 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A 93 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD D5 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD D5 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD D5 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A 81 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A 9F 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A 93 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A 85 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A 85 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 80 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A 9B 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 81 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 81 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 9B 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A 9B 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 81 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 81 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 9B 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD FD 94     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 81 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD EE 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 81 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A 93 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD D5 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 93 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 9D 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 9F 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 93 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 9D 89     	ld (Limite_horizontal),hl
 381+ 940D 21 9F 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 93 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 9D 89     	ld (Limite_horizontal),hl
 392+ 9425 21 9F 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 93 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 9D 89     	ld (Limite_horizontal),hl
 401+ 9438 21 9F 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A 81 89     	ld hl,(Posicion_actual)
 410+ 9444 CD F3 AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 9B 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A 93 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A 85 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 9C 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 9C 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A 85 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 9C 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 9C 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A 93 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A 81 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD FD 94     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD D6 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD FD 94     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A 83 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5 C9           	ret
 545+ 94D6
 546+ 94D6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 94D6              ;
 548+ 94D6              ;	2/1/23
 549+ 94D6              ;
 550+ 94D6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 94D6              ;
 552+ 94D6              ;	Tras esta rutina tenemos:
 553+ 94D6              ;
 554+ 94D6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 94D6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 94D6              ;
 557+ 94D6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 94D6
 559+ 94D6 2A 81 89     Operandos ld hl,(Posicion_actual)
 560+ 94D9 3A 9C 89     	ld a,(Columnas)
 561+ 94DC 3D           	dec a
 562+ 94DD 20 01        	jr nz,1F
 563+ 94DF 3C           	inc a
 564+ 94E0 47           1 ld b,a
 565+ 94E1 C9           	ret
 566+ 94E2
 567+ 94E2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 94E2              ;
 569+ 94E2              ;	Prepara_draw
 570+ 94E2              ;
 571+ 94E2              ;	Es una rutina de carga.
 572+ 94E2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 94E2              ;
 574+ 94E2              ;	FUNCIONAMIENTO:
 575+ 94E2              ;
 576+ 94E2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 94E2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 94E2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 94E2              ;
 580+ 94E2              ;	DESTRUYE:
 581+ 94E2              ;
 582+ 94E2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 94E2
 584+ 94E2 21 7F 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 94E5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 94E6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 94E7 4E           	ld c,(hl)
 588+ 94E8 2A 81 89     	ld hl,(Posicion_actual)
 589+ 94EB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 94ED C9           	ret
 591+ 94EE
 592+ 94EE              ;----------------------------------------------------------------------------------------------------------------
 593+ 94EE              ;
 594+ 94EE              ;	5/08/22
 595+ 94EE              ;
 596+ 94EE              ;   NextScan.
 597+ 94EE              ;
 598+ 94EE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 94EE              ;
 600+ 94EE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 94EE              ;
 602+ 94EE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 94EE              ;
 604+ 94EE              ;       DESTRUIDOS: AF y HL !!!
 605+ 94EE              ;
 606+ 94EE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 94EE              ;
 608+ 94EE
 609+ 94EE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 94EF 7C               ld a,h
 611+ 94F0 E6 07            and 7
 612+ 94F2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 94F3
 614+ 94F3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 94F4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 94F6 6F               ld l,a
 617+ 94F7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 94F8
 619+ 94F8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 94F9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 94FB 67               ld h,a
 622+ 94FC C9               ret
 623+ 94FD
 624+ 94FD              ;----------------------------------------------------------------------------------------------------------------
 625+ 94FD              ;
 626+ 94FD              ;	5/08/22
 627+ 94FD              ;
 628+ 94FD              ;   PreviousScan.
 629+ 94FD              ;
 630+ 94FD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 94FD              ;
 632+ 94FD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 94FD              ;
 634+ 94FD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 94FD              ;
 636+ 94FD              ;       DESTRUIDOS: AF y HL !!!
 637+ 94FD              ;
 638+ 94FD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 94FD              ;
 640+ 94FD
 641+ 94FD 7C           PreviousScan ld a,h
 642+ 94FE 25               dec h               ; Dec H.
 643+ 94FF E6 07            and 7
 644+ 9501 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9502
 646+ 9502 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9503 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9505 6F               ld l,a
 649+ 9506 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9507
 651+ 9507 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9508 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 950A 67               ld h,a
 654+ 950B C9               ret
 655+ 950C
 656+ 950C
 657+ 950C
 658+ 950C
 659+ 950C
 660+ 950C
 661+ 950C
 662+ 950C
 663+ 950C
 664+ 950C
 665+ 950C
 666+ 950C
# file closed: Draw_XOR.asm
2161  950C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 950C
   2+ 950C              ; ******************************************************************************************************************************************************************************************
   3+ 950C              ;
   4+ 950C              ;   20/05/23
   5+ 950C              ;
   6+ 950C              ;	Recompone_posicion_inicio
   7+ 950C              ;
   8+ 950C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 950C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 950C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 950C              ;	_ a una u otra rutina.
  12+ 950C
  13+ 950C              Recompone_posicion_inicio
  14+ 950C
  15+ 950C 2A 91 89     	ld hl,(Posicion_inicio)
  16+ 950F 7D           	ld a,l
  17+ 9510 E6 1F        	and $1f
  18+ 9512 28 16        	jr z,1F
  19+ 9514
  20+ 9514 FE 1F        	cp $1f
  21+ 9516 28 0D        	jr z,3F
  22+ 9518
  23+ 9518 21 A0 89     	ld hl,Ctrl_2
  24+ 951B CB C6        	set 0,(hl)
  25+ 951D 2A 83 89     	ld hl,(Puntero_objeto)
  26+ 9520 22 BC 89     	ld (Repone_puntero_objeto),hl
  27+ 9523 18 08        	jr 2F
  28+ 9525
  29+ 9525 CD D3 96     3 call Mov_left
  30+ 9528 18 03        	jr 2F
  31+ 952A
  32+ 952A CD B0 95     1 call Mov_right
  33+ 952D 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9530 22 83 89     	ld (Puntero_objeto),hl
  35+ 9533 C9           	ret
  36+ 9534
  37+ 9534              ; ******************************************************************************************************************************************************************************************
  38+ 9534              ;
  39+ 9534              ;   27/05/23
  40+ 9534              ;
  41+ 9534              ;	Mov_down
  42+ 9534              ;
  43+ 9534              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9534              ;
  45+ 9534              ;
  46+ 9534              Mov_down
  47+ 9534
  48+ 9534 CD 9E 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9537              ;																	; _ repone (Puntero_objeto).
  50+ 9537 21 9B 89     	ld hl,Ctrl_0
  51+ 953A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 953C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 953C              ; 																	; _ en el caso de que no lo haya.
  54+ 953C 3A A6 89     	ld a,(Vel_down)
  55+ 953F 47           	ld b,a
  56+ 9540 2A 81 89         ld hl,(Posicion_actual)
  57+ 9543 CD D5 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9546 E6 02        	and 2
  59+ 9548 28 17        	jr z,1F
  60+ 954A
  61+ 954A              ; Nos encontramos en el último tercio de pantalla.
  62+ 954A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 954A
  64+ 954A 7C           	ld a,h
  65+ 954B FE 57        	cp $57
  66+ 954D 20 12        	jr nz,1F
  67+ 954F
  68+ 954F 7D           	ld a,l
  69+ 9550 C6 20        	add $20
  70+ 9552 30 0D        	jr nc,1F
  71+ 9554
  72+ 9554              ; ------------------------------
  73+ 9554              ;
  74+ 9554              ;	12/01/24
  75+ 9554
  76+ 9554              ;	call Reaparece_arriba
  77+ 9554 CD 60 98     	call Reinicio
  78+ 9557
  79+ 9557              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9557
  81+ 9557 3A E1 89     	ld a,(Ctrl_3)
  82+ 955A CB CF        	set 1,a
  83+ 955C 32 E1 89     	ld (Ctrl_3),a
  84+ 955F
  85+ 955F 18 08        	jr 3F
  86+ 9561              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9561              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9561              ; ------------------------------
  89+ 9561
  90+ 9561 CD EE 94     1 call NextScan
  91+ 9564 22 81 89     	ld (Posicion_actual),hl
  92+ 9567 10 DA            djnz 2B
  93+ 9569 CD F3 AC     3 call Genera_coordenadas
  94+ 956C C9           	ret
  95+ 956D
  96+ 956D              ; ******************************************************************************************************************************************************************************************
  97+ 956D              ;
  98+ 956D              ;   27/05/23
  99+ 956D              ;
 100+ 956D              ;	Mov_up
 101+ 956D              ;
 102+ 956D              ; 	Mueve el Sprite hacia arriba.
 103+ 956D              ;
 104+ 956D              ;
 105+ 956D              Mov_up
 106+ 956D
 107+ 956D CD 9E 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9570              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9570 21 9B 89     	ld hl,Ctrl_0
 110+ 9573 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9575              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9575              ; 																		; _ en el caso de que no lo haya.
 113+ 9575 3A A5 89     	ld a,(Vel_up)
 114+ 9578 47           	ld b,a
 115+ 9579 2A 81 89     	ld hl,(Posicion_actual)
 116+ 957C CD D5 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 957F A7           	and a
 118+ 9580 20 10        	jr nz,1F
 119+ 9582
 120+ 9582              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9582              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9582
 123+ 9582 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9583 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9585 20 0B            jr nz,1F
 126+ 9587 7D               ld a,l
 127+ 9588 D6 20            sub $20
 128+ 958A 30 06            jr nc,1F
 129+ 958C 25               dec h
 130+ 958D
 131+ 958D              ; -----------------------------
 132+ 958D CD 41 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9590              ;	call Reinicio
 134+ 9590              ; -----------------------------
 135+ 9590
 136+ 9590 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9592 CD FD 94     1 call PreviousScan
 138+ 9595 22 81 89     	ld (Posicion_actual),hl
 139+ 9598 10 E2            djnz 3B
 140+ 959A CD F3 AC     2 call Genera_coordenadas
 141+ 959D C9           	ret
 142+ 959E
 143+ 959E              ; -----------------------------
 144+ 959E              ;
 145+ 959E              ;	27/5/23
 146+ 959E              ;
 147+ 959E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 959E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 959E              ;
 150+ 959E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 959E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 959E              ;
 153+ 959E              ;	Modifica: A y (Puntero_objeto).
 154+ 959E
 155+ 959E 3A A0 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95A1 CB 47        	bit 0,a
 157+ 95A3 C8           	ret z
 158+ 95A4 CB 87        	res 0,a
 159+ 95A6 32 A0 89     	ld (Ctrl_2),a
 160+ 95A9 2A BC 89     	ld hl,(Repone_puntero_objeto)
 161+ 95AC 22 83 89     	ld (Puntero_objeto),hl
 162+ 95AF C9           	ret
 163+ 95B0
 164+ 95B0              ; ******************************************************************************************************************************************************************************************
 165+ 95B0              ;
 166+ 95B0              ;	19/10/22
 167+ 95B0              ;
 168+ 95B0              ;	Mov_right.
 169+ 95B0              ;
 170+ 95B0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95B0              ;
 172+ 95B0
 173+ 95B0 3A 9B 89     Mov_right ld a,(Ctrl_0)
 174+ 95B3 CB 77        	bit 6,a
 175+ 95B5 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95B7
 177+ 95B7 CD EF 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95BA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95BB
 180+ 95BB 21 9B 89     	ld hl,Ctrl_0
 181+ 95BE CB E6        	set 4,(hl)
 182+ 95C0 18 52        	jr 8F
 183+ 95C2
 184+ 95C2 21 9B 89     10 ld hl,Ctrl_0
 185+ 95C5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95C7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95C7              ; 																	; _ en el caso de que no lo haya.
 188+ 95C7 3A 85 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95CA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95CC 20 46        	jr nz,8F
 191+ 95CE
 192+ 95CE 3A 87 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95D1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95D2 28 40        	jr z,8F
 195+ 95D4
 196+ 95D4              ; ---------- ---------- ----------
 197+ 95D4              ;
 198+ 95D4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95D4
 200+ 95D4 3A A4 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95D7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95D9 28 11        	jr z,1F
 203+ 95DB 38 06        	jr c,6F
 204+ 95DD FE 04        	cp 4
 205+ 95DF 28 14        	jr z,7F
 206+ 95E1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95E3
 208+ 95E3              ; ---------- ---------- ----------
 209+ 95E3              ;
 210+ 95E3              ; Perfiles de velocidad
 211+ 95E3              ;
 212+ 95E3
 213+ 95E3 3A 87 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95E6 FE FE        	cp $fe
 215+ 95E8 20 2A        	jr nz,8F
 216+ 95EA 18 10        	jr 3F
 217+ 95EC 3A 87 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95EF FE FD        	cp $fd
 219+ 95F1 20 21        	jr nz,8F
 220+ 95F3 18 07        	jr 3F
 221+ 95F5 3A 87 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95F8 FE FB        	cp $fb
 223+ 95FA 20 18        	jr nz,8F
 224+ 95FC
 225+ 95FC              ; ---------- ---------- ----------
 226+ 95FC
 227+ 95FC              3
 228+ 95FC CD 2F 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95FF              ;	call Reinicio
 230+ 95FF
 231+ 95FF              ; ---------- ---------- ----------
 232+ 95FF              ;
 233+ 95FF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95FF
 235+ 95FF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9601 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9602 CD 1B 96     	call DESPLZ_DER
 238+ 9605 C1           	pop bc
 239+ 9606 10 F9        	djnz 5B
 240+ 9608 2A 81 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 960B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 960C 22 81 89     	ld (Posicion_actual),hl
 243+ 960F CD F3 AC     	call Genera_coordenadas
 244+ 9612 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9614
 246+ 9614              ; ---------- ---------- ----------
 247+ 9614
 248+ 9614 2A 81 89     8 ld hl,(Posicion_actual)
 249+ 9617 CD 1B 96     	call DESPLZ_DER
 250+ 961A C9           2 ret
 251+ 961B
 252+ 961B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 961B              ;
 254+ 961B              ;	22/9/22
 255+ 961B              ;
 256+ 961B
 257+ 961B CD 2A 96     DESPLZ_DER call Desplaza_derecha
 258+ 961E CD 76 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9621 CD 9F 96         call Ciclo_completo
 260+ 9624 21 9B 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9627 CB FE        	set 7,(hl)
 262+ 9629 C9           	ret
 263+ 962A
 264+ 962A              ; ******************************************************************************************************************************************************************************************
 265+ 962A              ;	15/02/23
 266+ 962A              ;
 267+ 962A
 268+ 962A 3A A4 89     Desplaza_derecha ld a,(Vel_right)
 269+ 962D 47           	ld b,a
 270+ 962E 2A 8D 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9631 23           1 inc hl
 272+ 9632 23           	inc hl
 273+ 9633 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9635 22 8D 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9638 CD F6 8C     	call Extrae_address
 276+ 963B 22 83 89     	ld (Puntero_objeto),hl
 277+ 963E
 278+ 963E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 963E
 280+ 963E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 963E              ; Cuántos movimientos hemos hecho ??
 282+ 963E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 963E
 284+ 963E 2A 89 89     7 ld hl,(Indice_Sprite_der)
 285+ 9641 EB           	ex de,hl
 286+ 9642 A7           	and a
 287+ 9643 ED 52        	sbc hl,de
 288+ 9645 CB 3D        	srl l
 289+ 9647 3E 08        6 ld a,8
 290+ 9649 95           	sub l
 291+ 964A 30 1E        	jr nc,3F
 292+ 964C
 293+ 964C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 964C              ; B="0".
 295+ 964C
 296+ 964C 04           4 inc b
 297+ 964D 3C           	inc a
 298+ 964E 20 FC        	jr nz,4B
 299+ 9650 78           	ld a,b
 300+ 9651 08           	ex af,af
 301+ 9652 2A 89 89     	ld hl,(Indice_Sprite_der)
 302+ 9655 23           5 inc hl
 303+ 9656 23           	inc hl
 304+ 9657 10 FC        	djnz 5B
 305+ 9659 22 8D 89     	ld (Puntero_DESPLZ_der),hl
 306+ 965C CD F6 8C     	call Extrae_address
 307+ 965F 22 83 89     	ld (Puntero_objeto),hl
 308+ 9662
 309+ 9662              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9662              ; _(Posicion_actual).
 311+ 9662
 312+ 9662 21 81 89     	ld hl,Posicion_actual
 313+ 9665 34           	inc (hl)
 314+ 9666 08               ex af,af
 315+ 9667 6F           	ld l,a
 316+ 9668 18 DD        	jr 6B
 317+ 966A
 318+ 966A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 966A
 320+ 966A 47           3 ld b,a
 321+ 966B 2A 8B 89     	ld hl,(Indice_Sprite_izq)
 322+ 966E 23           2 inc hl
 323+ 966F 23           	inc hl
 324+ 9670 10 FC        	djnz 2B
 325+ 9672 22 8F 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9675 C9           8 ret
 327+ 9676
 328+ 9676              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9676              ;
 330+ 9676              ;	24/7/22
 331+ 9676              ;
 332+ 9676              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9676              ;
 334+ 9676              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9676              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9676              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9676
 338+ 9676 3A 87 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9679 A7           	and a
 340+ 967A 20 1F        	jr nz,1F
 341+ 967C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 967E 32 87 89         ld (CTRL_DESPLZ),a
 343+ 9681
 344+ 9681 21 80 89     	ld hl,Columns
 345+ 9684 34           	inc (hl)
 346+ 9685 3A 93 89     	ld a,(Cuad_objeto)
 347+ 9688 E6 01        	and 1
 348+ 968A 28 0F        	jr z,1F
 349+ 968C 2A 81 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 968F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9690 22 81 89     	ld (Posicion_actual),hl
 352+ 9693 CD F3 AC     	call Genera_coordenadas
 353+ 9696 CD FB 97     	call Inc_CTRL_DESPLZ
 354+ 9699 18 03        	jr 2F
 355+ 969B CD FB 97     1 call Inc_CTRL_DESPLZ
 356+ 969E C9           2 ret
 357+ 969F
 358+ 969F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 969F              ;
 360+ 969F              ;	24/7/22
 361+ 969F              ;
 362+ 969F              ;	Ciclo_completo.
 363+ 969F              ;
 364+ 969F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 969F              ;
 366+ 969F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 969F              ; 	Decrementamos (Columns).
 368+ 969F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 969F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 969F
 371+ 969F
 372+ 969F 3A 87 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96A2 FE FF        	cp $ff
 374+ 96A4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96A6 E6 F0        	and $f0
 376+ 96A8 20 28        	jr nz,3F
 377+ 96AA
 378+ 96AA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96AA
 380+ 96AA 3A 87 89     	ld a,(CTRL_DESPLZ)
 381+ 96AD 47           	ld b,a
 382+ 96AE 3E F8        	ld a,$f8
 383+ 96B0 80           	add b
 384+ 96B1 32 87 89     	ld (CTRL_DESPLZ),a
 385+ 96B4 18 1C        	jr 3F
 386+ 96B6 21 80 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96B9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96BA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96BB 32 87 89     	ld (CTRL_DESPLZ),a
 390+ 96BE 3A 93 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96C1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96C3 20 0A        	jr nz,2F
 393+ 96C5 2A 81 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96C8 23           	inc hl
 395+ 96C9 22 81 89     	ld (Posicion_actual),hl
 396+ 96CC CD F3 AC     	call Genera_coordenadas
 397+ 96CF
 398+ 96CF              ; Inicia el puntero de Sprite.
 399+ 96CF
 400+ 96CF CD 0B 8D     2 call Inicia_puntero_objeto_der
 401+ 96D2 C9           3 ret
 402+ 96D3
 403+ 96D3              ; ******************************************************************************************************************************************************************************************
 404+ 96D3              ;
 405+ 96D3              ;	15/02/23
 406+ 96D3              ;
 407+ 96D3              ;	Mov_left.
 408+ 96D3              ;
 409+ 96D3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96D3              ;
 411+ 96D3              Mov_left
 412+ 96D3
 413+ 96D3 21 9B 89     	ld hl,Ctrl_0
 414+ 96D6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96D8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96D8              ; 																	; _ en el caso de que no lo haya.
 417+ 96D8 3A 9B 89     	ld a,(Ctrl_0)
 418+ 96DB CB 77        	bit 6,a
 419+ 96DD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96DF
 421+ 96DF CD F5 97     	call Stop_Amadeus_left
 422+ 96E2 C8           	ret z
 423+ 96E3 20 4A        	jr nz,8F
 424+ 96E5
 425+ 96E5 3A 85 89     11 ld a,(Coordenada_X)
 426+ 96E8 A7           	and a
 427+ 96E9 20 44        	jr nz,8F
 428+ 96EB
 429+ 96EB 3A 87 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96EE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96EF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96F1
 433+ 96F1              ; ---------- ---------- ----------
 434+ 96F1
 435+ 96F1 3A A3 89     	ld a,(Vel_left)
 436+ 96F4 FE 02        	cp 2
 437+ 96F6 28 0F        	jr z,1F
 438+ 96F8 38 04        	jr c,6F
 439+ 96FA FE 04        	cp 4
 440+ 96FC 28 12        	jr z,7F
 441+ 96FE
 442+ 96FE              ; ---------- ---------- ----------
 443+ 96FE
 444+ 96FE 3A 87 89     6 ld a,(CTRL_DESPLZ)
 445+ 9701 FE F8        	cp $f8
 446+ 9703 20 2A        	jr nz,8F
 447+ 9705 18 10        	jr 4F
 448+ 9707 3A 87 89     1 ld a,(CTRL_DESPLZ)
 449+ 970A FE F9        	cp $f9
 450+ 970C 20 21        	jr nz,8F
 451+ 970E 18 07        	jr 4F
 452+ 9710 3A 87 89     7 ld a,(CTRL_DESPLZ)
 453+ 9713 FE FB        	cp $fb
 454+ 9715 20 18        	jr nz,8F
 455+ 9717
 456+ 9717              ; ---------- ---------- ----------
 457+ 9717
 458+ 9717              4
 459+ 9717 CD 1D 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 971A              ;	call Reinicio
 461+ 971A
 462+ 971A              ; ---------- ---------- ----------
 463+ 971A
 464+ 971A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 971C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 971D
 467+ 971D              ;	ld hl,(Indice_Sprite_izq)
 468+ 971D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 971D
 470+ 971D CD 36 97     	call DESPLZ_IZQ
 471+ 9720 C1           	pop bc
 472+ 9721 10 F9        	djnz 5B
 473+ 9723 2A 81 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9726 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9727 22 81 89     	ld (Posicion_actual),hl
 476+ 972A CD F3 AC     	call Genera_coordenadas
 477+ 972D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 972F
 479+ 972F              ; ---------- ---------- ----------
 480+ 972F
 481+ 972F              ; Movemos, no hay recolocación.
 482+ 972F
 483+ 972F 2A 81 89     8 ld hl,(Posicion_actual)
 484+ 9732 CD 36 97     	call DESPLZ_IZQ
 485+ 9735 C9           2 ret
 486+ 9736
 487+ 9736              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9736              ;
 489+ 9736              ;	22/9/22
 490+ 9736
 491+ 9736              DESPLZ_IZQ
 492+ 9736
 493+ 9736 CD 45 97     	call Desplaza_izquierda
 494+ 9739 CD 91 97         call modifica_parametros_1er_DESPLZ
 495+ 973C CD B9 97     	call Ciclo_completo_2
 496+ 973F 21 9B 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9742 CB BE        	res 7,(hl)
 498+ 9744 C9           	ret
 499+ 9745
 500+ 9745              Desplaza_izquierda
 501+ 9745
 502+ 9745 3A A3 89     	ld a,(Vel_left)
 503+ 9748 47           	ld b,a
 504+ 9749 2A 8F 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 974C 23           1 inc hl
 506+ 974D 23           	inc hl
 507+ 974E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9750 22 8F 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9753 CD F6 8C     	call Extrae_address
 510+ 9756 22 83 89     	ld (Puntero_objeto),hl
 511+ 9759
 512+ 9759              ; Modifica (Puntero_DESPLZ_der).
 513+ 9759
 514+ 9759              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9759              ; Cuántos movimientos hemos hecho ??
 516+ 9759              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9759
 518+ 9759 2A 8B 89     7 ld hl,(Indice_Sprite_izq)
 519+ 975C EB           	ex de,hl
 520+ 975D A7           	and a
 521+ 975E ED 52        	sbc hl,de
 522+ 9760 CB 3D        	srl l
 523+ 9762 3E 08        6 ld a,8
 524+ 9764 95           	sub l
 525+ 9765 30 1E        	jr nc,3F
 526+ 9767
 527+ 9767              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9767              ; B="0".
 529+ 9767
 530+ 9767 04           4 inc b
 531+ 9768 3C           	inc a
 532+ 9769 20 FC        	jr nz,4B
 533+ 976B 78           	ld a,b
 534+ 976C 08           	ex af,af
 535+ 976D 2A 8B 89     	ld hl,(Indice_Sprite_izq)
 536+ 9770 23           5 inc hl
 537+ 9771 23           	inc hl
 538+ 9772 10 FC        	djnz 5B
 539+ 9774 22 8F 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9777 CD F6 8C     	call Extrae_address
 541+ 977A 22 83 89     	ld (Puntero_objeto),hl
 542+ 977D
 543+ 977D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 977D              ; _(Posicion_actual).
 545+ 977D
 546+ 977D 21 81 89     	ld hl,Posicion_actual
 547+ 9780 35           	dec (hl)
 548+ 9781 08           	ex af,af
 549+ 9782 6F           	ld l,a
 550+ 9783 18 DD        	jr 6B
 551+ 9785
 552+ 9785              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9785
 554+ 9785 47           3 ld b,a
 555+ 9786 2A 89 89     	ld hl,(Indice_Sprite_der)
 556+ 9789 23           2 inc hl
 557+ 978A 23           	inc hl
 558+ 978B 10 FC        	djnz 2B
 559+ 978D 22 8D 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9790 C9           8 ret
 561+ 9791
 562+ 9791              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9791              ;
 564+ 9791              ;	modifica_parametros_1er_DESPLZ
 565+ 9791              ;
 566+ 9791              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9791              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9791              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9791
 570+ 9791 3A 87 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9794 A7           	and a
 572+ 9795 20 1E        	jr nz,1F
 573+ 9797 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9798 32 87 89         ld (CTRL_DESPLZ),a
 575+ 979B 21 80 89     	ld hl,Columns
 576+ 979E 34           	inc (hl)
 577+ 979F 3A 93 89     	ld a,(Cuad_objeto)
 578+ 97A2 E6 01        	and 1
 579+ 97A4 20 0F        	jr nz,1F
 580+ 97A6 2A 81 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97A9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97AA 22 81 89     	ld (Posicion_actual),hl
 583+ 97AD CD F3 AC     	call Genera_coordenadas
 584+ 97B0 CD 0C 98     	call Dec_CTRL_DESPLZ
 585+ 97B3 18 03        	jr 2F
 586+ 97B5 CD 0C 98     1 call Dec_CTRL_DESPLZ
 587+ 97B8 C9           2 ret
 588+ 97B9
 589+ 97B9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97B9
 591+ 97B9 3A 87 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97BC FE F7        	cp $f7
 593+ 97BE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97C0 30 2C        	jr nc,3F
 595+ 97C2
 596+ 97C2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97C2
 598+ 97C2 06 00        	ld b,0
 599+ 97C4 04           4 inc b
 600+ 97C5 3C           	inc a
 601+ 97C6 FE F7        	cp $f7
 602+ 97C8 20 FA        	jr nz,4B
 603+ 97CA 3E FF        	ld a,$ff
 604+ 97CC 90           	sub b
 605+ 97CD 32 87 89     	ld (CTRL_DESPLZ),a
 606+ 97D0 18 1C        	jr 3F
 607+ 97D2
 608+ 97D2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97D2
 610+ 97D2 21 80 89     1 ld hl,Columns
 611+ 97D5 35           	dec (hl)
 612+ 97D6 AF           	xor a
 613+ 97D7 32 87 89     	ld (CTRL_DESPLZ),a
 614+ 97DA 3A 93 89     	ld a,(Cuad_objeto)
 615+ 97DD E6 01        	and 1
 616+ 97DF 28 0A        	jr z,2F
 617+ 97E1 2A 81 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97E4 2B           	dec hl
 619+ 97E5 22 81 89     	ld (Posicion_actual),hl
 620+ 97E8 CD F3 AC     	call Genera_coordenadas
 621+ 97EB
 622+ 97EB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97EB
 624+ 97EB CD 1E 8D     2 call Inicia_puntero_objeto_izq
 625+ 97EE C9           3 ret
 626+ 97EF
 627+ 97EF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97EF              ;
 629+ 97EF              ;	19/10/22
 630+ 97EF              ;
 631+ 97EF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97EF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97EF
 634+ 97EF 3A 85 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97F2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97F4 C9           	ret
 637+ 97F5
 638+ 97F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97F5              ;
 640+ 97F5              ;	19/10/22
 641+ 97F5              ;
 642+ 97F5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97F5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97F5
 645+ 97F5 3A 85 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97F8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97FA C9           	ret
 648+ 97FB
 649+ 97FB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97FB              ;
 651+ 97FB              ;	24/7/22
 652+ 97FB              ;
 653+ 97FB              ;	Inc_CTRL_DESPLZ
 654+ 97FB              ;
 655+ 97FB              ;
 656+ 97FB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97FB
 658+ 97FB 21 87 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97FE 3A A4 89     	ld a,(Vel_right)
 660+ 9801 A7           	and a
 661+ 9802 28 06        	jr z,1F
 662+ 9804 47           	ld b,a
 663+ 9805 34           3 inc (hl)
 664+ 9806 10 FD        	djnz 3B
 665+ 9808 18 01        	jr 2F
 666+ 980A 34           1 inc (hl)
 667+ 980B C9           2 ret
 668+ 980C
 669+ 980C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 980C              ;
 671+ 980C              ;	5/2/23
 672+ 980C              ;
 673+ 980C              ;	Dec_CTRL_DESPLZ
 674+ 980C              ;
 675+ 980C              ;
 676+ 980C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 980C
 678+ 980C 21 87 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 980F 3A A3 89     	ld a,(Vel_left)
 680+ 9812 A7           	and a
 681+ 9813 28 06        	jr z,1F
 682+ 9815 47           	ld b,a
 683+ 9816 35           3 dec (hl)
 684+ 9817 10 FD        	djnz 3B
 685+ 9819 18 01        	jr 2F
 686+ 981B 35           1 dec (hl)
 687+ 981C C9           2 ret
 688+ 981D
 689+ 981D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 981D
 691+ 981D 2A 81 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9820 01 1F 00     	ld bc,31
 693+ 9823 A7           	and a
 694+ 9824 ED 4A        	adc hl,bc
 695+ 9826 22 81 89     	ld (Posicion_actual),hl
 696+ 9829 21 9B 89     	ld hl,Ctrl_0														; $xxx1
 697+ 982C CB C6        	set 0,(hl)
 698+ 982E C9           	ret
 699+ 982F
 700+ 982F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 982F
 702+ 982F 2A 81 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9832 01 1F 00     	ld bc,31
 704+ 9835 A7           	and a
 705+ 9836 ED 42        	sbc hl,bc
 706+ 9838 22 81 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 983B 21 9B 89     	ld hl,Ctrl_0
 708+ 983E CB CE        	set 1,(hl)
 709+ 9840 C9           	ret
 710+ 9841
 711+ 9841              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9841
 713+ 9841 24           Reaparece_abajo inc h
 714+ 9842 01 E0 17     	ld bc,$17e0
 715+ 9845 A7           	and a
 716+ 9846 ED 4A        	adc hl,bc
 717+ 9848 22 81 89     	ld (Posicion_actual),hl
 718+ 984B 21 9B 89     	ld hl,Ctrl_0
 719+ 984E CB D6        	set 2,(hl)
 720+ 9850 C9           	ret
 721+ 9851
 722+ 9851              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9851
 724+ 9851 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9854 A7           	and a
 726+ 9855 ED 42        	sbc hl,bc
 727+ 9857 22 81 89     	ld (Posicion_actual),hl
 728+ 985A 21 9B 89     	ld hl,Ctrl_0
 729+ 985D CB DE        	set 3,(hl)
 730+ 985F C9           	ret
 731+ 9860
 732+ 9860              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9860              ;
 734+ 9860              ;	15/07/23
 735+ 9860
 736+ 9860              Reinicio
 737+ 9860
 738+ 9860              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9860
 740+ 9860 AF           	xor a
 741+ 9861 21 B3 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9864 CD 82 98     	call Limpia_contenido_hl
 743+ 9867
 744+ 9867 21 81 89     	ld hl,Posicion_actual
 745+ 986A CD 82 98     	call Limpia_contenido_hl
 746+ 986D
 747+ 986D CD D0 AA     	call Inicializa_Puntero_indice_mov
 748+ 9870 CD 69 99     	call Inicia_Puntero_mov
 749+ 9873
 750+ 9873 21 B5 89     	ld hl,Incrementa_puntero
 751+ 9876 06 05        	ld b,5
 752+ 9878 77           1 ld (hl),a
 753+ 9879 23           	inc hl
 754+ 987A 10 FC        	djnz 1B
 755+ 987C
 756+ 987C 21 A0 89     	ld hl,Ctrl_2
 757+ 987F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9881
 759+ 9881 C9           	ret
 760+ 9882
 761+ 9882 77           Limpia_contenido_hl	ld (hl),a
 762+ 9883 23           	inc hl
 763+ 9884 77           	ld (hl),a
 764+ 9885 C9           	ret
 765+ 9886
 766+ 9886              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9886              ;
 768+ 9886              ;	27/5/24
 769+ 9886              ;
 770+ 9886
 771+ 9886              ;	Actualiza movimiento.
 772+ 9886
 773+ 9886 2A 97 89     Amadeus_a_izquierda ld hl,(Puntero_de_almacen_de_mov_masticados)	;	Actualiza variable de 16 bits.
 774+ 9889 2B           	dec hl
 775+ 988A 2B           	dec hl
 776+ 988B 2B           	dec hl
 777+ 988C 2B           	dec hl
 778+ 988D 22 97 89     	ld (Puntero_de_almacen_de_mov_masticados),hl					;	Actualiza variable de 8 bits.
 779+ 9890
 780+ 9890              ;	Actualiza contador de movimientos.
 781+ 9890
 782+ 9890 21 99 89     	ld hl,Contador_de_mov_masticados
 783+ 9893 35           	dec (hl)
 784+ 9894
 785+ 9894 C9           	ret
 786+ 9895
 787+ 9895              ; ----------------------------------------------------------------------------------------------------------------
 788+ 9895              ;
 789+ 9895              ;	27/5/24
 790+ 9895              ;
 791+ 9895
 792+ 9895 21 97 89     Amadeus_a_derecha ld hl,Puntero_de_almacen_de_mov_masticados
 793+ 9898 34           	inc (hl)
 794+ 9899 34           	inc (hl)
 795+ 989A 34           	inc (hl)
 796+ 989B 34           	inc (hl)
 797+ 989C
 798+ 989C 21 99 89     	ld hl,Contador_de_mov_masticados
 799+ 989F 34           	inc (hl)
 800+ 98A0
 801+ 98A0 C9           	ret
 802+ 98A1
# file closed: Direcciones.asm
2162  98A1              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 98A1              ; ----- ----- ----- ----- -----
   2+ 98A1              ;
   3+ 98A1              ;   28/12/23
   4+ 98A1
   5+ 98A1              Movimiento
   6+ 98A1
   7+ 98A1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 98A1
   9+ 98A1 3A A0 89         ld a,(Ctrl_2)
  10+ 98A4 CB 57            bit 2,a
  11+ 98A6 20 1B            jr nz, Desplazamiento_iniciado
  12+ 98A8
  13+ 98A8 2A B1 89         ld hl,(Puntero_mov)
  14+ 98AB 7E               ld a,(hl)
  15+ 98AC
  16+ 98AC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 98AC
  18+ 98AC              Inicia_desplazamiento.
  19+ 98AC
  20+ 98AC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 98AC
  22+ 98AC CD 9F 99         call Ajusta_velocidad_desplazamiento
  23+ 98AF
  24+ 98AF              ; Iniciamos (Repetimos_mov).
  25+ 98AF
  26+ 98AF 7E               ld a,(hl)
  27+ 98B0 E6 0F            and $0f
  28+ 98B2 32 B7 89         ld (Repetimos_desplazamiento),a
  29+ 98B5 32 B8 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98B8
  31+ 98B8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98B8
  33+ 98B8 23               inc hl
  34+ 98B9 7E               ld a,(hl)
  35+ 98BA 32 BA 89         ld (Cola_de_desplazamiento),a
  36+ 98BD 2B               dec hl
  37+ 98BE
  38+ 98BE 21 A0 89         ld hl,Ctrl_2
  39+ 98C1 CB D6            set 2,(hl)
  40+ 98C3
  41+ 98C3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98C3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98C3
  44+ 98C3              Desplazamiento_iniciado
  45+ 98C3
  46+ 98C3 CD 73 99         call Aplica_desplazamiento
  47+ 98C6
  48+ 98C6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98C6
  50+ 98C6 3A E1 89         ld a,(Ctrl_3)
  51+ 98C9 CB 4F            bit 1,a
  52+ 98CB C0               ret nz
  53+ 98CC
  54+ 98CC 21 B7 89     3 ld hl,Repetimos_desplazamiento
  55+ 98CF 35               dec (hl)
  56+ 98D0 C0               ret nz
  57+ 98D1
  58+ 98D1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98D1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98D1              ; Analiza (Cola_de_desplazamiento).
  61+ 98D1
  62+ 98D1 3A BA 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98D4 A7               and a
  64+ 98D5 CC C8 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98D8 28 30            jr z,Reinicia_el_movimiento
  66+ 98DA
  67+ 98DA FE FF            cp $ff
  68+ 98DC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98DE
  70+ 98DE FE FE            cp $fe
  71+ 98E0 CC 4D 99         call z,Fijamos_bucle
  72+ 98E3 28 25            jr z,Reinicia_el_movimiento
  73+ 98E5
  74+ 98E5 FE FD            cp $fd
  75+ 98E7 20 11            jr nz,1F
  76+ 98E9
  77+ 98E9              ; ---
  78+ 98E9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98E9
  80+ 98E9 3A A0 89         ld a,(Ctrl_2)
  81+ 98EC CB 5F            bit 3,a
  82+ 98EE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98F0
  84+ 98F0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98F0
  86+ 98F0 21 A0 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98F3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98F5
  89+ 98F5 CD 5E 99         call Inicia_Repetimos_movimiento
  90+ 98F8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98FA              ; ---
  92+ 98FA
  93+ 98FA FE 01        1 cp 1
  94+ 98FC CA 37 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98FF
  96+ 98FF 3D               dec a
  97+ 9900 32 BA 89         ld (Cola_de_desplazamiento),a
  98+ 9903
  99+ 9903 3A B8 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9906 32 B7 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9909              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9909 C9               ret
 103+ 990A
 104+ 990A              Reinicia_el_movimiento
 105+ 990A
 106+ 990A 3A A0 89         ld a,(Ctrl_2)
 107+ 990D CB 5F            bit 3,a
 108+ 990F 28 1B            jr z,2F
 109+ 9911
 110+ 9911              ; (Cola_de_desplazamiento)="254".
 111+ 9911
 112+ 9911 21 B9 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9914 35               dec (hl)
 114+ 9915 20 15            jr nz,2F
 115+ 9917
 116+ 9917              ; Fin de las repeticiones del último movimiento.
 117+ 9917
 118+ 9917 21 A0 89         ld hl,Ctrl_2
 119+ 991A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 991C
 121+ 991C 2A B1 89         ld hl,(Puntero_mov)
 122+ 991F 23               inc hl
 123+ 9920 23               inc hl
 124+ 9921 23               inc hl
 125+ 9922 22 B1 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9925              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9925 7E               ld a,(hl)
 128+ 9926 32 BA 89         ld (Cola_de_desplazamiento),a
 129+ 9929
 130+ 9929 C3 D1 98         jp Cola
 131+ 992C
 132+ 992C CD 69 99     2 call Inicia_Puntero_mov
 133+ 992F
 134+ 992F 21 A0 89         ld hl,Ctrl_2
 135+ 9932 CB 96            res 2,(hl)
 136+ 9934
 137+ 9934 C3 A1 98         jp Movimiento
 138+ 9937
 139+ 9937              Siguiente_desplazamiento
 140+ 9937
 141+ 9937              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9937              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9937
 144+ 9937 21 A0 89         ld hl,Ctrl_2
 145+ 993A CB 96            res 2,(hl)
 146+ 993C
 147+ 993C 2A B1 89         ld hl,(Puntero_mov)
 148+ 993F 23               inc hl
 149+ 9940 23               inc hl
 150+ 9941 22 B1 89         ld (Puntero_mov),hl
 151+ 9944
 152+ 9944 7E               ld a,(hl)
 153+ 9945 A7               and a
 154+ 9946 CC C8 99         call z,Incrementa_Puntero_indice_mov
 155+ 9949 CA 0A 99         jp z,Reinicia_el_movimiento
 156+ 994C
 157+ 994C C9               ret
 158+ 994D
 159+ 994D              ; Subrutinas -----------------------------------------
 160+ 994D              ; ---------- --------- --------- ---------- ----------
 161+ 994D              ;
 162+ 994D              ;   24/07/23
 163+ 994D              ;
 164+ 994D              ;   Fijamos_bucle
 165+ 994D              ;
 166+ 994D              ;
 167+ 994D
 168+ 994D              Fijamos_bucle
 169+ 994D
 170+ 994D 3A B5 89         ld a,(Incrementa_puntero)
 171+ 9950 3C               inc a
 172+ 9951 32 B6 89         ld (Incrementa_puntero_backup),a
 173+ 9954
 174+ 9954 CD C8 99         call Incrementa_Puntero_indice_mov
 175+ 9957 2A AF 89         ld hl,(Puntero_indice_mov)
 176+ 995A 22 B3 89         ld (Puntero_indice_mov_bucle),hl
 177+ 995D C9               ret
 178+ 995E
 179+ 995E              ; ---------- --------- --------- ---------- ----------
 180+ 995E              ;
 181+ 995E              ;   07/7/23
 182+ 995E              ;
 183+ 995E              ;   Inicia_Repetimos_movimiento
 184+ 995E              ;
 185+ 995E              ;
 186+ 995E
 187+ 995E              Inicia_Repetimos_movimiento
 188+ 995E
 189+ 995E              ; Iniciamos (Repetimos_movimiento).
 190+ 995E
 191+ 995E DD 2A B1 89      ld ix,(Puntero_mov)
 192+ 9962 DD 7E 02         ld a,(ix+2)
 193+ 9965 32 B9 89         ld (Repetimos_movimiento),a
 194+ 9968
 195+ 9968 C9               ret
 196+ 9969
 197+ 9969              ; ---------- --------- --------- ---------- ----------
 198+ 9969              ;
 199+ 9969              ;   26/6/23
 200+ 9969              ;
 201+ 9969              ;   Inicia_Puntero_mov
 202+ 9969              ;
 203+ 9969              ;
 204+ 9969
 205+ 9969 2A AF 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 996C CD F6 8C         call Extrae_address
 207+ 996F 22 B1 89         ld (Puntero_mov),hl
 208+ 9972 C9               ret
 209+ 9973
 210+ 9973              ; ---------- --------- --------- ---------- ----------
 211+ 9973              ;
 212+ 9973              ;   27/06/23
 213+ 9973              ;
 214+ 9973              ;   Aplica_movimiento.
 215+ 9973
 216+ 9973              Aplica_desplazamiento
 217+ 9973
 218+ 9973              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9973
 220+ 9973 2A B1 89         ld hl, (Puntero_mov)
 221+ 9976
 222+ 9976 7E               ld a,(hl)
 223+ 9977 E6 F0            and $f0
 224+ 9979 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 997A
 226+ 997A CB 7E            bit 7,(hl)
 227+ 997C 28 03            jr z,1F
 228+ 997E CD 6D 95         call Mov_up
 229+ 9981 2A B1 89     1 ld hl, (Puntero_mov)
 230+ 9984 CB 76            bit 6,(hl)
 231+ 9986 28 03            jr z,2F
 232+ 9988 CD 34 95         call Mov_down
 233+ 998B
 234+ 998B              ; Se ha aplicado reinicio ???
 235+ 998B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 998B
 237+ 998B              ;    ld a,(Ctrl_3)
 238+ 998B              ;    bit 1,a
 239+ 998B              ;    ret nz
 240+ 998B
 241+ 998B 2A B1 89     2 ld hl, (Puntero_mov)
 242+ 998E CB 6E            bit 5,(hl)
 243+ 9990 28 03            jr z,3F
 244+ 9992 CD D3 96         call Mov_left
 245+ 9995 2A B1 89     3 ld hl, (Puntero_mov)
 246+ 9998 CB 66            bit 4,(hl)
 247+ 999A C8               ret z
 248+ 999B CD B0 95         call Mov_right
 249+ 999E C9               ret
 250+ 999F
 251+ 999F              ; ---------- --------- --------- ---------- ----------
 252+ 999F              ;
 253+ 999F              ;   26/06/23
 254+ 999F              ;
 255+ 999F              ;   Ajusta_velocidad_desplazamiento.
 256+ 999F
 257+ 999F              Ajusta_velocidad_desplazamiento
 258+ 999F
 259+ 999F              ; 1er byte de la cadena de movimiento.
 260+ 999F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 999F
 262+ 999F CD BD 99         call Extrae_nibble_alto
 263+ 99A2
 264+ 99A2 32 A5 89         ld (Vel_up),a
 265+ 99A5 79               ld a,c
 266+ 99A6 E6 0F            and $0f
 267+ 99A8 32 A6 89         ld (Vel_down),a
 268+ 99AB
 269+ 99AB              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 99AB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 99AB
 272+ 99AB 23               inc hl
 273+ 99AC CD BD 99         call Extrae_nibble_alto
 274+ 99AF
 275+ 99AF 32 A3 89         ld (Vel_left),a
 276+ 99B2 79               ld a,c
 277+ 99B3 E6 0F            and $0f
 278+ 99B5 32 A4 89         ld (Vel_right),a
 279+ 99B8
 280+ 99B8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99B8
 282+ 99B8 23               inc hl
 283+ 99B9 22 B1 89         ld (Puntero_mov),hl
 284+ 99BC C9               ret
 285+ 99BD
 286+ 99BD 06 04        Extrae_nibble_alto ld b,4
 287+ 99BF 7E               ld a,(hl)
 288+ 99C0 4F               ld c,a
 289+ 99C1 E6 F0            and $f0
 290+ 99C3 CB 3F        1 srl a
 291+ 99C5 10 FC            djnz 1B
 292+ 99C7 C9               ret
 293+ 99C8
 294+ 99C8              ; ---------- --------- --------- ---------- ----------
 295+ 99C8              ;
 296+ 99C8              ;   5/7/23
 297+ 99C8              ;
 298+ 99C8              ;   Incrementa_Puntero_indice_mov
 299+ 99C8
 300+ 99C8              Incrementa_Puntero_indice_mov
 301+ 99C8
 302+ 99C8 21 B5 89         ld hl,Incrementa_puntero
 303+ 99CB 34               inc (hl)
 304+ 99CC
 305+ 99CC 2A AF 89         ld hl,(Puntero_indice_mov)
 306+ 99CF 01 02 00         ld bc,2
 307+ 99D2 A7               and a
 308+ 99D3 09               add hl,bc
 309+ 99D4 22 AF 89         ld (Puntero_indice_mov),hl
 310+ 99D7
 311+ 99D7 7E               ld a,(hl)
 312+ 99D8 A7               and a
 313+ 99D9
 314+ 99D9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99D9
 316+ 99D9              ;    jr z,$
 317+ 99D9
 318+ 99D9              ;! Reinicia el Patrón de movimiento.
 319+ 99D9
 320+ 99D9 CC DE 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99DC
 322+ 99DC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99DD
 324+ 99DD C9               ret
 325+ 99DE
 326+ 99DE              ; ---------- --------- --------- ---------- ----------
 327+ 99DE              ;
 328+ 99DE              ;   15/01/24
 329+ 99DE              ;
 330+ 99DE              ;   Inicializa_Puntero_indice_mov
 331+ 99DE
 332+ 99DE              Inicializa_Puntero_indice_mov_2
 333+ 99DE
 334+ 99DE              ; Existe etiqueta de bucle principal???
 335+ 99DE
 336+ 99DE 2A B3 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99E1 24               inc h
 338+ 99E2 25               dec h
 339+ 99E3 28 05            jr z,2F
 340+ 99E5
 341+ 99E5 22 AF 89         ld (Puntero_indice_mov),hl
 342+ 99E8 18 14            jr 3F
 343+ 99EA
 344+ 99EA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99EA
 346+ 99EA 3A B5 89     2 ld a,(Incrementa_puntero)
 347+ 99ED 47               ld b,a
 348+ 99EE
 349+ 99EE 2A AF 89         ld hl,(Puntero_indice_mov)
 350+ 99F1 2B           1 dec hl
 351+ 99F2 2B               dec hl
 352+ 99F3 10 FC            djnz 1B
 353+ 99F5 22 AF 89         ld (Puntero_indice_mov),hl
 354+ 99F8
 355+ 99F8 AF               xor a
 356+ 99F9 32 B5 89         ld (Incrementa_puntero),a
 357+ 99FC 18 06            jr 4F
 358+ 99FE
 359+ 99FE 3A B6 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A01 32 B5 89         ld (Incrementa_puntero),a
 361+ 9A04 C9           4 ret
 362+ 9A05
 363+ 9A05              ; ----------------------------------------------------------------------
 364+ 9A05              ;
 365+ 9A05              ;   30/01/24
 366+ 9A05              ;
 367+ 9A05              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A05
 369+ 9A05 3A 7E 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A08 CD 5C AC         call Calcula_salto_en_BC
 371+ 9A0B 21 A7 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A0E A7               and a
 373+ 9A0F ED 4A            adc hl,bc
 374+ 9A11 C9               ret
 375+ 9A12
 376+ 9A12              ; ----------------------------------------------------------------------
 377+ 9A12              ;
 378+ 9A12              ;   30/01/24
 379+ 9A12              ;
 380+ 9A12              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A12              ;
 382+ 9A12              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A12
 384+ 9A12 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A13 23               inc hl
 386+ 9A14 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A15 69               ld l,c
 388+ 9A16 60               ld h,b
 389+ 9A17 22 99 89         ld (Contador_de_mov_masticados),hl
 390+ 9A1A C9               ret
 391+ 9A1B
# file closed: Movimiento.asm
2163  9A1B
2164  9A1B
2165  9A1B              ;	include "Disparo.asm"
2166  9A1B
2167  9A1B
2168  9A1B              	SAVESNA "Pruebas.sna", START
2169  9A1B
2170  9A1B
2171  9A1B
2172  9A1B
# file closed: Banco_de_pruebas.asm
