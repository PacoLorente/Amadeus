# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A4 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD DB 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD FE 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 AE 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B A4 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 3C 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8939 01 01 01
  18+ 893C
  19+ 893C 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893D 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8941 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8945 01 02
  22+ 8947 02 01 01 01  	db 2,1,1,1,1,2
  22+ 894B 01 02
  23+ 894D
# file closed: Niveles.asm
 108  894D
 109  894D              ; ******************************************************************************************************************************************************************************************
 110  894D              ; Constantes.
 111  894D              ; ******************************************************************************************************************************************************************************************
 112  894D              ;
 113  894D              ; 25/12/23
 114  894D
 115  894D              ;
 116  894D              ; Constantes.
 117  894D              ;
 118  894D
 119  894D              Sprite_vacio equ $eae0
 120  894D              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  894D              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  894D              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  894D              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  894D
 125  894D              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 126  894D
 127  894D              Almacen_de_movimientos_masticados_Amadeus equ $e700
 128  894D              ;
 129  894D              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 130  894D              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 131  894D              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 132  894D              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 133  894D              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 134  894D              ;														; 55 Bytes.
 135  894D
 136  894D              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 137  894D              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 138  894D
 139  894D              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 140  894D
 141  894D              ; ******************************************************************************************************************************************************************************************
 142  894D              ; Variables.
 143  894D              ; ******************************************************************************************************************************************************************************************
 144  894D              ;
 145  894D              ; 18/01/24
 146  894D              ;
 147  894D              ; Variables de DRAW. (Motor principal).	42 Bytes.
 148  894D              ;
 149  894D
 150  894D              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 151  894D
 152  894D 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 153  894E              ;															- Patrón de movimiento.
 154  894E              ;															- Aspecto
 155  894E 00           Filas db 0												; Filas. [DRAW]
 156  894F 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 157  8950 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 158  8952 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 159  8954 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 160  8955 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 161  8956
 162  8956              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 163  8956
 164  8956 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 165  8957              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 166  8957              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 167  8957 00           Attr db 0												; Atributos de la entidad:
 168  8958
 169  8958              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 170  8958              ;
 171  8958              ;	COLORES: 0 ..... NEGRO
 172  8958              ;    		 1 ..... AZUL
 173  8958              ; 			 2 ..... ROJO
 174  8958              ;			 3 ..... MAGENTA
 175  8958              ; 			 4 ..... VERDE
 176  8958              ; 			 5 ..... CIAN
 177  8958              ;			 6 ..... AMARILLO
 178  8958              ; 			 7 ..... BLANCO
 179  8958
 180  8958 00 00        Indice_Sprite_der defw 0
 181  895A 00 00        Indice_Sprite_izq defw 0
 182  895C 00 00        Puntero_DESPLZ_der defw 0
 183  895E 00 00        Puntero_DESPLZ_izq defw 0
 184  8960
 185  8960 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 186  8962 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 187  8963
 188  8963              ; Variables de objeto. (Características).
 189  8963
 190  8963 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  8964              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  8964              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  8964 00 00 00...  Variables_de_borrado ds 6
 194  896A
 195  896A 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 196  896C              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 197  896C
 198  896C 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 199  896E
 200  896E              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 201  896E              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 202  896E
 203  896E 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 204  8970              ;														; _palabras que componen el "movimiento_masticado".
 205  8970
 206  8970              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 207  8970
 208  8970 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  8971              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  8971              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  8971              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  8971              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  8971              ;
 214  8971              ; 														DESCRIPCIÖN:
 215  8971              ;
 216  8971              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  8971              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  8971              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  8971              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  8971              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  8971              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  8971              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  8971              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  8971              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  8971              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  8971              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  8971              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  8971              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  8971              ;
 230  8971              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  8971              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  8971              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  8971
 234  8971              ; Variables de funcionamiento. [DRAW].
 235  8971
 236  8971 00           Columnas db 0
 237  8972 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 238  8974              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8974 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 240  8975
 241  8975              ; variables de control general.
 242  8975
 243  8975 00           Ctrl_2 db 0
 244  8976              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 245  8976              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 246  8976              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 247  8976              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 248  8976              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 249  8976              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 250  8976              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 251  8976              ;
 252  8976              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 253  8976              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 254  8976              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 255  8976              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 256  8976              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 257  8976              ;														BIT 4, ???
 258  8976              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 259  8976
 260  8976 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 261  8977
 262  8977              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 263  8977
 264  8977              ;					         		---------;      ;---------
 265  8977
 266  8977              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 267  8977
 268  8977              Perfiles_de_velocidad
 269  8977
 270  8977 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 271  8978 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 272  8979 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 273  897A 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 274  897B
 275  897B              ; Contadores de 16 bits.
 276  897B
 277  897B 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 278  897D 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 279  897F 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 280  8981 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 281  8983
 282  8983              ; Movimiento. ------------------------------------------------------------------------------------------------------
 283  8983
 284  8983 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 285  8985 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 286  8987 00 00        Puntero_indice_mov_bucle defw 0							;
 287  8989              ;
 288  8989              ;
 289  8989 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 290  898A              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 291  898A              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 292  898A 00           Incrementa_puntero_backup db 0
 293  898B 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 294  898C              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 295  898C 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 296  898D 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 297  898E 00           Cola_de_desplazamiento db 0								; Este byte indica:
 298  898F              ;
 299  898F              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 300  898F              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 301  898F              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 302  898F              ;
 303  898F              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 304  898F              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 305  898F              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 306  898F              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 307  898F              ;
 308  898F              ;														;	"$ff" ..... Bucle infinito de repetición.
 309  898F              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 310  898F              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 311  898F              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  898F
 313  898F 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  8990
 315  8990              ;														DESCRIPCIÓN:
 316  8990              ;
 317  8990              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  8990              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  8990              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  8990              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  8990              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  8990              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  8990
 324  8990              ;														BIT 3, Recarga de nueva oleada.
 325  8990              ;														BIT 4, Recarga de nueva oleada.
 326  8990              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  8990              ;														BIT 6, **** Frame completo.
 328  8990              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  8990
 330  8990 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  8992              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  8992              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  8992              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  8992
 335  8992              ; Gestión de ENTIDADES y CAJAS.
 336  8992
 337  8992 00 00        Puntero_store_caja defw 0
 338  8994 00 00        Puntero_restore_caja defw 0
 339  8996 00 00        Indice_restore_caja defw 0
 340  8998 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  8999 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  899A 00           Entidades_en_curso db 0									; ..... ..... .....
 343  899B 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  899C              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  899C              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  899C              ;														; _ (Numero_de_malotes)="0".
 347  899C 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  899E 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  89A0              ;														; _ puntero (Indice_entidades).
 350  89A0
 351  89A0              ;---------------------------------------------------------------------------------------------------------------
 352  89A0              ;
 353  89A0              ;	11/01/24
 354  89A0              ;
 355  89A0              ;	Álbumes.
 356  89A0
 357  89A0 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  89A2              ;														; _variable para almacenar lo posición del puntero_
 359  89A2              ; 														; _de pila, SP.
 360  89A2 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  89A4              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  89A4 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  89A6 00 80        Stack_snapshot defw Album_de_fotos
 364  89A8 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  89AA
 366  89AA              ;End_Snapshot defw Album_de_fotos
 367  89AA              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  89AA 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  89AC              ;														; _el snapshot de los registros del siguiente disparo.
 370  89AC              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  89AC AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  89AE
 373  89AE 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  89AF              ;
 375  89AF              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  89AF              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 377  89AF              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 378  89AF
 379  89AF 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 380  89B0              ;
 381  89B0              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 382  89B0              ;
 383  89B0              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 384  89B0              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 385  89B0              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 386  89B0              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 387  89B0              ;
 388  89B0              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 389  89B0              ;															_ masticados ya generados.
 390  89B0              ;
 391  89B0              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 392  89B0              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 393  89B0              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 394  89B0              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 395  89B0
 396  89B0
 397  89B0              ; Gestión de Disparos.
 398  89B0
 399  89B0 00           Numero_de_disparotes db 0
 400  89B1 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 401  89B3 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 402  89B5 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 403  89B6              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 404  89B6              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 405  89B6 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 406  89B8              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 407  89B8              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 408  89B8              ;														; _produzca colisión.
 409  89B8 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 410  89BA              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 411  89BA 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  89BD              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 413  89BD 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 414  89C0              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 415  89C0 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 416  89C1
 417  89C1              ;---------------------------------------------------------------------------------------------------------------
 418  89C1
 419  89C1              ; Relojes y temporizaciones.
 420  89C1
 421  89C1 00           Contador_de_frames db 0
 422  89C2 00           Contador_de_frames_2 db 0
 423  89C3
 424  89C3 04           Clock_explosion db 4
 425  89C4 14           Clock_Entidades_en_curso db 20
 426  89C5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 427  89C6              ;														; Repite la oleada de entidades.
 428  89C6 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 429  89C7 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 430  89C8 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 431  89C9
 432  89C9 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 433  89CA 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 434  89CB 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 435  89CC
 436  89CC              ;---------------------------------------------------------------------------------------------------------------
 437  89CC
 438  89CC              ; Gestión de NIVELES.
 439  89CC
 440  89CC 00           Nivel db 0												; Nivel actual del juego.
 441  89CD 00 00        Puntero_indice_NIVELES defw 0
 442  89CF 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 443  89D1              ; 														; _ que definen el NIVEL.
 444  89D1              ; Y todo comienza aquí .....
 445  89D1              ;
 446  89D1              ; 	INICIO  *************************************************************************************************************************************************************************
 447  89D1              ;
 448  89D1              ;	5/1/24
 449  89D1
 450  89D1              START
 451  89D1
 452  89D1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 453  89D4 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 454  89D6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 455  89D8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 456  89DA F3           	DI
 457  89DB
 458  89DB 3E 07        	ld a,%00000111
 459  89DD CD F6 9E     	call Cls
 460  89E0 CD 4C 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 461  89E3
 462  89E3              ; INICIALIZACIÓN.
 463  89E3
 464  89E3              ;	Inicializa 1er Nivel.
 465  89E3
 466  89E3 21 28 89     	ld hl,Indice_de_niveles
 467  89E6 22 CD 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 468  89E9 CD 10 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 469  89EC
 470  89EC              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 471  89EC              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 472  89EC              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 473  89EC
 474  89EC              ;	Provisional, (para desarrollo).
 475  89EC
 476  89EC              	;-
 477  89EC              ;	ld hl,Numero_parcial_de_entidades
 478  89EC              ;	ld b,(hl)
 479  89EC              ;	inc b
 480  89EC              ;	dec b
 481  89EC              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 482  89EC
 483  89EC CD 55 8D     4 call Inicia_Entidades
 484  89EF
 485  89EF CD 0F 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 486  89F2
 487  89F2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 488  89F2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 489  89F2              ; (Esto se dá cuando se inicia una nueva oleada).
 490  89F2
 491  89F2              ;	ld a,(Ctrl_1)
 492  89F2              ;	bit 3,a
 493  89F2              ;	jr nz,5F											; Loop
 494  89F2
 495  89F2              ; 	INICIA AMADEUS !!!!!
 496  89F2
 497  89F2              ;3 call Restore_Amadeus
 498  89F2              ;	call Inicia_Puntero_objeto
 499  89F2              ;	call Draw
 500  89F2
 501  89F2              ;	call Guarda_movimiento_masticado	;! Provisional
 502  89F2
 503  89F2              ;	call Guarda_foto_registros
 504  89F2              ;	call Guarda_datos_de_borrado_Amadeus
 505  89F2
 506  89F2              ;	ld de,Amadeus_db
 507  89F2              ;	call Store_Amadeus
 508  89F2
 509  89F2              ; 	INICIA DISPAROS !!!!!
 510  89F2
 511  89F2              ;	call Inicia_Puntero_Disparo_Entidades
 512  89F2              ;	call Inicia_Puntero_Disparo_Amadeus
 513  89F2
 514  89F2              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 515  89F2
 516  89F2              ;5 call Inicia_punteros_de_cajas
 517  89F2              ;	call Restore_entidad
 518  89F2
 519  89F2              ;	ld a,(Ctrl_1)
 520  89F2              ;	bit 3,a
 521  89F2              ;	jr z,6F
 522  89F2
 523  89F2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 524  89F2
 525  89F2              ;	ld hl,Ctrl_1
 526  89F2              ;	res 3,(hl)
 527  89F2              ;	jr Main
 528  89F2
 529  89F2              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 530  89F2
 531  89F2 21 AE 89     6 ld hl,Ctrl_3
 532  89F5 CB C6        	set 0,(hl)											; Frame completo.
 533  89F7 FB           	ei
 534  89F8 76           	halt
 535  89F9
 536  89F9              ; ------------------------------------
 537  89F9
 538  89F9              Main
 539  89F9              ;
 540  89F9              ;	11/12/23
 541  89F9
 542  89F9              ; Aparece nueva entidad ???
 543  89F9
 544  89F9              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 545  89F9              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 546  89F9              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 547  89F9              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 548  89F9              ;														; _un 2º bloque.
 549  89F9
 550  89F9              ;	ld a,1
 551  89F9              ;	out ($fe),a
 552  89F9
 553  89F9 3A C4 89     	ld a,(Clock_Entidades_en_curso)
 554  89FC 47           	ld b,a
 555  89FD 3A C1 89     	ld a,(Contador_de_frames)
 556  8A00 B8           	cp b
 557  8A01 20 18        	jr nz,13F
 558  8A03
 559  8A03              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  8A03              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  8A03
 562  8A03 3A 99 89     21 ld a,(Numero_parcial_de_entidades)
 563  8A06 47           	ld b,a
 564  8A07 3A 9A 89     	ld a,(Entidades_en_curso)
 565  8A0A B8           	cp b
 566  8A0B 28 0E        	jr z,13F
 567  8A0D 30 0C        	jr nc,13F
 568  8A0F
 569  8A0F 3C           	inc a
 570  8A10 32 9A 89     	ld (Entidades_en_curso),a
 571  8A13
 572  8A13              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  8A13
 574  8A13 3A C4 89     	ld a,(Clock_Entidades_en_curso)
 575  8A16              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  8A16              ;! _ IMPREDECIBLE !!!!
 577  8A16 C6 64        	add 100
 578  8A18 32 C4 89     	ld (Clock_Entidades_en_curso),a
 579  8A1B
 580  8A1B              ; -------------------------------------------------------------------------------------------------------------
 581  8A1B
 582  8A1B              ; Habilita disparos.
 583  8A1B
 584  8A1B              13
 585  8A1B
 586  8A1B              ;	ld hl,Disparo_Amadeus
 587  8A1B              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  8A1B              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  8A1B
 590  8A1B              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  8A1B              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  8A1B              ;	call Habilita_disparos
 593  8A1B
 594  8A1B              ; COLISIONES.
 595  8A1B
 596  8A1B              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  8A1B
 598  8A1B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  8A1B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  8A1B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  8A1B
 602  8A1B              ;	xor a
 603  8A1B              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  8A1B
 605  8A1B              ;	call Inicia_punteros_de_cajas
 606  8A1B              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8A1B              ; 														; _ en DRAW.
 608  8A1B
 609  8A1B              ;	ld a,(Filas)
 610  8A1B              ;	and a
 611  8A1B              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  8A1B              ;	call Incrementa_punteros_de_cajas
 613  8A1B              ;	jr 12B
 614  8A1B
 615  8A1B              ; ---------------------------------------------------------------------------------------
 616  8A1B
 617  8A1B 3A 99 89     10 ld a,(Numero_parcial_de_entidades)
 618  8A1E 47               ld b,a
 619  8A1F A7           	and a
 620  8A20 20 00        	jr nz,11F
 621  8A22
 622  8A22              ;	ld hl,Ctrl_1;
 623  8A22              ;	bit 4,(hl)
 624  8A22              ;	jp nz,16F
 625  8A22
 626  8A22              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8A22
 628  8A22              ;	ld hl,Ctrl_1
 629  8A22              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8A22
 631  8A22              ;	ld a,(Contador_de_frames)
 632  8A22              ;	inc a
 633  8A22              ;	ld (Activa_recarga_cajas),a
 634  8A22
 635  8A22              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8A22
 637  8A22 3A 9A 89     11 ld a,(Entidades_en_curso)
 638  8A25 A7           	and a
 639  8A26 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8A28 47           	ld b,a												; No hay entidades que gestionar.
 641  8A29
 642  8A29              ; ( Código que ejecutamos con cada entidad: ).
 643  8A29
 644  8A29              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  8A29
 646  8A29 C5           15 push bc 												; Nº de entidades en curso.
 647  8A2A
 648  8A2A CD E2 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  8A2D
 650  8A2D
 651  8A2D 3A AE 89     	ld a,(Ctrl_3)
 652  8A30 CB 57        	bit 2,a
 653  8A32 F3           	di
 654  8A33 20 FE        	jr nz,$
 655  8A35 FB           	ei
 656  8A36
 657  8A36
 658  8A36
 659  8A36
 660  8A36              ; Existe "Entidad_guía" ???.
 661  8A36              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 662  8A36
 663  8A36              ;	ld a,(Ctrl_3)
 664  8A36              ;	bit 1,a
 665  8A36              ;	jr nz,22F
 666  8A36
 667  8A36              ; Almacén de "Movimientos_masticados" lleno ???
 668  8A36              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 669  8A36              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 670  8A36
 671  8A36              ;;	ld a,(Ctrl_3)
 672  8A36              ;;	bit 3,a
 673  8A36              ;;	jr nz,22F
 674  8A36
 675  8A36              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 676  8A36
 677  8A36              ;	ld hl,Ctrl_2
 678  8A36              ;	set 5,(hl)
 679  8A36              ;	ld hl,Ctrl_3
 680  8A36              ;	set 1,(hl)
 681  8A36
 682  8A36              ; Impacto ???
 683  8A36
 684  8A36              ;22 ld a,(Impacto)
 685  8A36              ;	and a
 686  8A36              ;	jr z,8F
 687  8A36
 688  8A36              ; Hay Impacto en esta entidad.
 689  8A36
 690  8A36              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 691  8A36              ;	dec (hl)
 692  8A36              ;	jp nz,17F
 693  8A36
 694  8A36              ;! Velocidad de la animación de la explosión.
 695  8A36
 696  8A36              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 697  8A36              ;														; _,(velocidad de la explosión).
 698  8A36              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 699  8A36
 700  8A36              ;	call Repone_datos_de_borrado
 701  8A36              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 702  8A36
 703  8A36              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 704  8A36
 705  8A36              ;	ld a,(Ctrl_2)
 706  8A36              ;	bit 1,a
 707  8A36              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 708  8A36
 709  8A36              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 710  8A36
 711  8A36              ;	ld a,(CTRL_DESPLZ)
 712  8A36              ;	and a
 713  8A36              ;	jr nz,18F
 714  8A36
 715  8A36              ;	ld hl,Indice_Explosion_2x2-2
 716  8A36              ;	ld (Puntero_DESPLZ_der),hl
 717  8A36              ;	jr 19F
 718  8A36
 719  8A36              ;18 ld hl,Indice_Explosion_2x3-2
 720  8A36              ;	ld (Puntero_DESPLZ_der),hl
 721  8A36
 722  8A36              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 723  8A36              ;	set 1,(hl)
 724  8A36              ;	jr 7F
 725  8A36
 726  8A36              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 727  8A36              ; _con las coordenadas de la entidad almacenada en DRAW.
 728  8A36
 729  8A36              ;8 ld a,(Ctrl_1)
 730  8A36              ;	bit 2,a
 731  8A36              ;	jr z,7F
 732  8A36
 733  8A36              ;	ld hl,(Coordenadas_disparo_certero)
 734  8A36              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 735  8A36              ;														; E contiene la coordenada_X del disparo.
 736  8A36              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 737  8A36              ;														; H FILA, (Coordenada_y de la entidad).
 738  8A36              ;	and a
 739  8A36              ;	sbc hl,de
 740  8A36
 741  8A36              ;	call Determina_resultado_comparativa
 742  8A36
 743  8A36              ;	ld a,b
 744  8A36              ;	and a
 745  8A36              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 746  8A36
 747  8A36              ; ----- ----- -----
 748  8A36
 749  8A36              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 750  8A36              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 751  8A36
 752  8A36              ;	ld hl,Ctrl_1
 753  8A36              ;	res 2,(hl)
 754  8A36
 755  8A36 CD 52 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 756  8A39
 757  8A39              ;	ld a,(Ctrl_0)
 758  8A39              ;	bit 4,a
 759  8A39              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 760  8A39
 761  8A39              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 762  8A39              ; [[[
 763  8A39              ;	call Detecta_disparo_entidad
 764  8A39              ; ]]]
 765  8A39
 766  8A39 CD BF 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 767  8A3C
 768  8A3C              ;	ld hl,Ctrl_0
 769  8A3C              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 770  8A3C
 771  8A3C CD AF 8D     17 call Store_Restore_cajas
 772  8A3F
 773  8A3F C1           	pop bc
 774  8A40
 775  8A40 10 E7        	djnz 15B
 776  8A42
 777  8A42 CD 0F 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 778  8A45
 779  8A45              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 780  8A45              ; Hemos gestionado todas las unidades.
 781  8A45              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 782  8A45
 783  8A45              ;	ld hl,Ctrl_1
 784  8A45              ;	res 2,(hl)
 785  8A45
 786  8A45 21 AE 89     16 ld hl,Ctrl_3
 787  8A48 CB C6        	set 0,(hl)											; Frame completo.
 788  8A4A
 789  8A4A AF           	xor a
 790  8A4B D3 FE        	out ($fe),a
 791  8A4D
 792  8A4D 76           	halt
 793  8A4E
 794  8A4E              ; ----------------------------------------
 795  8A4E
 796  8A4E              ;	ld a,(Ctrl_1) 										; Existe Loop?
 797  8A4E              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 798  8A4E CA F9 89     	jp z,Main
 799  8A51
 800  8A51              ; RECARGA DE NUEVA OLEADA.
 801  8A51
 802  8A51              ;	ld a,(Contador_de_frames)
 803  8A51              ;	ld b,a
 804  8A51              ;	ld a,(Activa_recarga_cajas)
 805  8A51              ;	cp b
 806  8A51              ;	jr z,20F
 807  8A51
 808  8A51              ;	ld hl,Ctrl_1
 809  8A51              ;	set 4,(hl)
 810  8A51              ;	jp Main
 811  8A51
 812  8A51              ;20 ld hl,Ctrl_1
 813  8A51              ;	res 4,(hl)
 814  8A51
 815  8A51              ;	ld a,(Contador_de_frames)
 816  8A51
 817  8A51              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 818  8A51              ;! _ IMPREDECIBLE !!!!
 819  8A51
 820  8A51              ;	add 10
 821  8A51              ;	ld (Clock_Entidades_en_curso),a
 822  8A51
 823  8A51              ;	jp 4B
 824  8A51
 825  8A51 C9           	ret
 826  8A52
 827  8A52              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 828  8A52              ;
 829  8A52              ;	16/11/23
 830  8A52
 831  8A52              ;;Gestiona_Amadeus
 832  8A52
 833  8A52              ;! Activa/desactiva impacto con Amadeus.
 834  8A52
 835  8A52              ;	ld a,(Impacto)
 836  8A52              ;	and a
 837  8A52              ;	jr nz,2F
 838  8A52
 839  8A52              ;;	call Mov_Amadeus
 840  8A52
 841  8A52              ;;2 ld a,(Ctrl_0)
 842  8A52              ;;	bit 4,a
 843  8A52              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 844  8A52
 845  8A52              ;;	call Guarda_foto_entidad_a_pintar
 846  8A52              ;;	call Guarda_datos_de_borrado_Amadeus
 847  8A52
 848  8A52              ;;1 ld hl,Ctrl_0
 849  8A52              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 850  8A52
 851  8A52              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 852  8A52
 853  8A52              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 854  8A52
 855  8A52              ;	call Calcula_numero_de_disparotes
 856  8A52
 857  8A52              ;;	ret
 858  8A52
 859  8A52              ; --------------------------------------------------------------------------------------------------------------
 860  8A52              ;
 861  8A52              ;	15/12/23
 862  8A52
 863  8A52              Mov_obj
 864  8A52
 865  8A52              ;	ld a,(Ctrl_2)
 866  8A52              ;	bit 1,a
 867  8A52              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 868  8A52
 869  8A52              ; Explosión:
 870  8A52
 871  8A52              ;	ld a,(Frames_explosion)
 872  8A52              ;	and a
 873  8A52              ;	jr nz,4F
 874  8A52
 875  8A52              ;!  Una alimaña menos!!!!!!!!!1
 876  8A52
 877  8A52              ; Se trataba de una Entidad_guía ???
 878  8A52
 879  8A52              ;	ld a,(Ctrl_2)
 880  8A52              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 881  8A52              ;	jr z,5F
 882  8A52
 883  8A52              ;	ld hl,Ctrl_3
 884  8A52              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 885  8A52
 886  8A52              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 887  8A52              ;!! _generado puede ser distinto, (aletoriedad).
 888  8A52
 889  8A52              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 890  8A52              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 891  8A52              ;	dec (hl)
 892  8A52              ;	ld hl,Entidades_en_curso
 893  8A52              ;	dec (hl)
 894  8A52              ;	ld hl,Numero_de_entidades
 895  8A52              ;	dec (hl)
 896  8A52              ;	jr 3F
 897  8A52
 898  8A52              ; -----
 899  8A52
 900  8A52              ;	`Movemos´ la explosión.
 901  8A52
 902  8A52              ;4 ld hl,(Puntero_DESPLZ_der)
 903  8A52              ;	inc hl
 904  8A52              ;	inc hl
 905  8A52              ;	call Extrae_address
 906  8A52              ;;	ld (Puntero_objeto),hl
 907  8A52
 908  8A52              ;;	ld hl,Frames_explosion
 909  8A52              ;;	dec (hl)
 910  8A52
 911  8A52              ;;	ld hl,Ctrl_0
 912  8A52              ;;	set 4,(hl);;
 913  8A52
 914  8A52              ;;	jr 3F
 915  8A52
 916  8A52              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 917  8A52
 918  8A52              ;2 xor a
 919  8A52              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 920  8A52
 921  8A52              ; Movemos Entidades malignas.
 922  8A52              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 923  8A52
 924  8A52              ;	ld a,(Ctrl_2)
 925  8A52              ;	bit 5,a
 926  8A52              ;	jr nz,8F
 927  8A52
 928  8A52              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 929  8A52              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 930  8A52              ;	jr 7F
 931  8A52
 932  8A52              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 933  8A52
 934  8A52              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 935  8A52              ;	bit 4,a
 936  8A52              ;	ret z
 937  8A52
 938  8A52              ; Ha habido desplazamiento de la entidad maligna.
 939  8A52              ; Ha llegado a zona de AMADEUS ???
 940  8A52
 941  8A52              ;7 ld a,(Coordenada_y)
 942  8A52              ;	cp $14
 943  8A52              ;	jr c,1F
 944  8A52
 945  8A52              ; ---------
 946  8A52
 947  8A52              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 948  8A52              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 949  8A52
 950  8A52              ;	di
 951  8A52              ;	call Genera_coordenadas_X
 952  8A52              ;	call Compara_coordenadas_X
 953  8A52              ;	ei
 954  8A52
 955  8A52              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 956  8A52
 957  8A52              ; ---------
 958  8A52
 959  8A52              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 960  8A52 CD C0 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 961  8A55 CD 4D 8B     	call Limpia_Variables_de_borrado
 962  8A58
 963  8A58 C9           3 ret
 964  8A59
 965  8A59              ; --------------------------------------------------------------------------------------------------------------
 966  8A59              ;
 967  8A59              ;	29/1/23
 968  8A59
 969  8A59              Mov_Amadeus
 970  8A59
 971  8A59              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 972  8A59
 973  8A59 CD B9 95     	call Mov_right
 974  8A5C
 975  8A5C 3A 70 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 976  8A5F CB 67        	bit 4,a
 977  8A61 C8           	ret z
 978  8A62
 979  8A62              ; ---------
 980  8A62
 981  8A62              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 982  8A62 CD B0 8C     	call Repone_datos_de_borrado_Amadeus
 983  8A65 CD 4D 8B     	call Limpia_Variables_de_borrado
 984  8A68
 985  8A68 C9           	ret
 986  8A69
 987  8A69              ; -----------------------------------------------------------------------------------
 988  8A69              ;
 989  8A69              ;	20/01/24
 990  8A69              ;
 991  8A69              ;
 992  8A69
 993  8A69              Construye_movimientos_masticados_entidad
 994  8A69
 995  8A69 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 996  8A6C E5           	push hl
 997  8A6D CD B1 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 998  8A70              ;															; _ el (Contador_de_mov_masticados).
 999  8A70 CD AD 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1000  8A73              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1001  8A73 CD 15 95     	call Recompone_posicion_inicio
1002  8A76
1003  8A76 CD 09 8F     1 call Draw
1004  8A79 CD 95 8A     	call Guarda_movimiento_masticado
1005  8A7C
1006  8A7C CD 8F 98     	call Movimiento
1007  8A7F
1008  8A7F 3A AE 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1009  8A82 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1010  8A84 28 F0        	jr z,1B
1011  8A86
1012  8A86              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1013  8A86              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1014  8A86
1015  8A86 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1016  8A87 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1017  8A8A
1018  8A8A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1019  8A8A
1020  8A8A CD F3 99     	call Situa_en_contador_general_de_mov_masticados
1021  8A8D
1022  8A8D              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1023  8A8D              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1024  8A8D
1025  8A8D ED 4B 6E 89  	ld bc,(Contador_de_mov_masticados)
1026  8A91 71           	ld (hl),c
1027  8A92 23           	inc hl
1028  8A93 70           	ld (hl),b
1029  8A94
1030  8A94 C9           	ret
1031  8A95
1032  8A95              ; -----------------------------------------------------------------------------------
1033  8A95              ;
1034  8A95              ;	28/12/23
1035  8A95              ;
1036  8A95              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1037  8A95              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1038  8A95
1039  8A95              Guarda_movimiento_masticado
1040  8A95
1041  8A95 ED 73 A0 89  	ld (Stack),sp
1042  8A99 ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1043  8A9D
1044  8A9D E5           	push hl
1045  8A9E DD E5            push ix
1046  8AA0 FD E5            push iy
1047  8AA2
1048  8AA2 ED 7B A0 89      ld sp,(Stack)
1049  8AA6
1050  8AA6 2A 6E 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1051  8AA9 23           	inc hl
1052  8AAA 22 6E 89     	ld (Contador_de_mov_masticados),hl
1053  8AAD
1054  8AAD CD B1 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1055  8AB0              ;															; _ el (Contador_de_mov_masticados).
1056  8AB0 C9               ret
1057  8AB1
1058  8AB1              ; --------------------------------------------------------------------------------------------------------------
1059  8AB1              ;
1060  8AB1              ;	12/1/24
1061  8AB1              ;
1062  8AB1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1063  8AB1
1064  8AB1              Actualiza_Puntero_de_almacen_de_mov_masticados
1065  8AB1
1066  8AB1 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1067  8AB4 01 06 00     	ld bc,6
1068  8AB7 A7           	and a
1069  8AB8 ED 4A        	adc hl,bc
1070  8ABA 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1071  8ABD C9           	ret
1072  8ABE
1073  8ABE              ; --------------------------------------------------------------------------------------------------------------
1074  8ABE              ;
1075  8ABE              ;	15/01/24
1076  8ABE              ;
1077  8ABE              ;	Cargamos los registros_
1078  8ABE              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1079  8ABE              ;
1080  8ABE              ;	HL contiene la dirección de la rutina de impresión.
1081  8ABE              ;	IX contiene el puntero de impresión.
1082  8ABE              ;	IY contiene (Puntero_objeto).
1083  8ABE
1084  8ABE
1085  8ABE ED 73 A0 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1086  8AC2 ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1087  8AC6
1088  8AC6 FD E1        	pop iy
1089  8AC8 DD E1        	pop ix
1090  8ACA E1           	pop hl
1091  8ACB
1092  8ACB ED 73 6C 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1093  8ACF
1094  8ACF ED 7B A0 89  	ld sp,(Stack)
1095  8AD3
1096  8AD3 C9           	ret
1097  8AD4
1098  8AD4              ; --------------------------------------------------------------------------------------------------------------
1099  8AD4              ;
1100  8AD4              ;	28/12/23
1101  8AD4              ;
1102  8AD4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1103  8AD4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1104  8AD4
1105  8AD4              Guarda_foto_entidad_a_pintar
1106  8AD4
1107  8AD4 3A 70 89     	ld a,(Ctrl_0)
1108  8AD7 CB 77        	bit 6,a
1109  8AD9 28 04        	jr z,5F
1110  8ADB
1111  8ADB              ;	Guarda la foto de Amadeus.
1112  8ADB
1113  8ADB              ;	call Draw
1114  8ADB              ;	call Guarda_movimiento_masticado	;! Provisional
1115  8ADB CD BF 80     	call Guarda_foto_registros
1116  8ADE C9           	ret
1117  8ADF
1118  8ADF              ; ENTIDADES!
1119  8ADF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1120  8ADF
1121  8ADF 3A AE 89     5 ld a,(Ctrl_3)
1122  8AE2 CB 5F        	bit 3,a
1123  8AE4 28 01        	jr z,1F
1124  8AE6
1125  8AE6              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1126  8AE6
1127  8AE6              4
1128  8AE6              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1129  8AE6 C9           	ret
1130  8AE7
1131  8AE7              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1132  8AE7
1133  8AE7 3A AE 89     1 ld a,(Ctrl_3)
1134  8AEA CB 57        	bit 2,a
1135  8AEC 20 10        	jr nz,6F
1136  8AEE
1137  8AEE              ; Entidad guía o fantasma ???
1138  8AEE
1139  8AEE 3A 75 89     	ld a,(Ctrl_2)
1140  8AF1 CB 6F        	bit 5,a
1141  8AF3 20 10        	jr nz,3F
1142  8AF5
1143  8AF5              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1144  8AF5
1145  8AF5 18 EF        	jr 4B
1146  8AF7
1147  8AF7              ; ENTIDAD_GUÍA:
1148  8AF7              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1149  8AF7              ; _guardando "movimientos_masticados".
1150  8AF7
1151  8AF7 3A AE 89     2 ld a,(Ctrl_3)
1152  8AFA CB 57        	bit 2,a
1153  8AFC 28 07        	jr z,3F
1154  8AFE
1155  8AFE              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1156  8AFE              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1157  8AFE
1158  8AFE CB 97        6 res 2,a
1159  8B00 CB DF        	set 3,a
1160  8B02 32 AE 89     	ld (Ctrl_3),a
1161  8B05
1162  8B05
1163  8B05              ;	Esto sólo lo ejecuta una entidad guía.
1164  8B05
1165  8B05 CD 09 8F     3 	call Draw
1166  8B08 CD 95 8A     	call Guarda_movimiento_masticado
1167  8B0B CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1168  8B0E
1169  8B0E              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1170  8B0E              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1171  8B0E
1172  8B0E              ;	call Convierte_guia_en_fantasma
1173  8B0E C9           	ret
1174  8B0F
1175  8B0F              ; *************************************************************************************************************************************************************
1176  8B0F              ;
1177  8B0F              ; 8/1/23
1178  8B0F              ;
1179  8B0F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1180  8B0F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1181  8B0F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1182  8B0F
1183  8B0F              ; Destruye HL y DE !!!!!
1184  8B0F
1185  8B0F              Inicia_punteros_de_cajas
1186  8B0F
1187  8B0F 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1188  8B12 CD A7 8B         call Extrae_address
1189  8B15 22 92 89         ld (Puntero_store_caja),hl
1190  8B18 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1191  8B1B 22 96 89     	ld (Indice_restore_caja),hl
1192  8B1E CD A7 8B     	call Extrae_address
1193  8B21 22 94 89     	ld (Puntero_restore_caja),hl
1194  8B24 C9               ret
1195  8B25
1196  8B25              ; *************************************************************************************************************************************************************
1197  8B25              ;
1198  8B25              ; 8/1/23
1199  8B25              ;
1200  8B25              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1201  8B25
1202  8B25 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1203  8B28 22 B1 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1204  8B2B C9           	ret
1205  8B2C 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1206  8B2F 22 B3 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1207  8B32 C9           	ret
1208  8B33
1209  8B33              ; -------------------------------------------------------------------------------------------------------------
1210  8B33              ;
1211  8B33              ; 21/9/23
1212  8B33              ;
1213  8B33
1214  8B33              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1215  8B33
1216  8B33              Limpia_album_Amadeus
1217  8B33
1218  8B33 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1219  8B36 7E           	ld a,(hl)
1220  8B37 A7           	and a
1221  8B38 C8           	ret z
1222  8B39
1223  8B39 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1224  8B3C 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1225  8B3F 01 0B 00     	ld bc,11
1226  8B42 AF           	xor a
1227  8B43 77           	ld (hl),a
1228  8B44 ED B0        	ldir
1229  8B46
1230  8B46 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1231  8B49 22 AC 89     	ld (End_Snapshot_Amadeus),hl
1232  8B4C
1233  8B4C C9           	ret
1234  8B4D
1235  8B4D 21 64 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1236  8B50 11 65 89     	ld de,Variables_de_borrado+1
1237  8B53 01 05 00     	ld bc,5
1238  8B56 AF           	xor a
1239  8B57 77           	ld (hl),a
1240  8B58 ED B0        	ldir
1241  8B5A C9           	ret
1242  8B5B
1243  8B5B              ; -------------------------------------------------------------------------------------------------------------
1244  8B5B              ;
1245  8B5B              ; 8/9/23
1246  8B5B              ;
1247  8B5B
1248  8B5B              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1249  8B5B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1250  8B5B
1251  8B5B              Calcula_numero_de_malotes
1252  8B5B
1253  8B5B 21 00 80     	ld hl,Album_de_fotos
1254  8B5E EB           	ex de,hl
1255  8B5F 2A A6 89     	ld hl,(Stack_snapshot)
1256  8B62
1257  8B62 06 00        	ld b,0
1258  8B64 7D           	ld a,l
1259  8B65 93           	sub e
1260  8B66 28 07        	jr z,1F
1261  8B68
1262  8B68              ; Nº de malotes no es "0".
1263  8B68
1264  8B68 D6 06        2 sub 6
1265  8B6A 04           	inc b
1266  8B6B A7           	and a
1267  8B6C 20 FA        	jr nz,2B
1268  8B6E 78           	ld a,b
1269  8B6F
1270  8B6F 32 9B 89     1 ld (Numero_de_malotes),a
1271  8B72 C9           	ret
1272  8B73
1273  8B73              ; -------------------------------------------------------------------------------------------------------------
1274  8B73              ;
1275  8B73              ; 8/9/23
1276  8B73              ;
1277  8B73
1278  8B73              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1279  8B73              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1280  8B73
1281  8B73              Calcula_malotes_Amadeus
1282  8B73
1283  8B73 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1284  8B76 EB           	ex de,hl
1285  8B77 2A AC 89     	ld hl,(End_Snapshot_Amadeus)
1286  8B7A
1287  8B7A 7C           	ld a,h
1288  8B7B A7           	and a
1289  8B7C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1290  8B7E
1291  8B7E 06 00        	ld b,0
1292  8B80 7D           	ld a,l
1293  8B81 93           	sub e
1294  8B82 28 07        	jr z,1F
1295  8B84
1296  8B84              ; Nº de malotes no es "0".
1297  8B84
1298  8B84 D6 06        2 sub 6
1299  8B86 04           	inc b
1300  8B87 A7           	and a
1301  8B88 20 FA        	jr nz,2B
1302  8B8A 78           	ld a,b
1303  8B8B
1304  8B8B 32 9B 89     1 ld (Numero_de_malotes),a
1305  8B8E C9           	ret
1306  8B8F
1307  8B8F              ; -------------------------------------------------------------------------------------------------------------
1308  8B8F              ;
1309  8B8F              ; 28/2/23
1310  8B8F              ;
1311  8B8F
1312  8B8F              Calcula_numero_de_disparotes
1313  8B8F
1314  8B8F 21 56 80     	ld hl,Album_de_fotos_disparos
1315  8B92 EB           	ex de,hl
1316  8B93 2A AA 89     	ld hl,(End_Snapshot_disparos)
1317  8B96
1318  8B96 06 00        	ld b,0
1319  8B98 7D           	ld a,l
1320  8B99 93           	sub e
1321  8B9A 28 07        	jr z,1F
1322  8B9C
1323  8B9C              ; Nº de malotes no es "0".
1324  8B9C
1325  8B9C D6 06        2 sub 6
1326  8B9E 04           	inc b
1327  8B9F A7           	and a
1328  8BA0 20 FA        	jr nz,2B
1329  8BA2 78           	ld a,b
1330  8BA3
1331  8BA3 32 B0 89     1 ld (Numero_de_disparotes),a
1332  8BA6 C9           	ret
1333  8BA7
1334  8BA7              ; *************************************************************************************************************************************************************
1335  8BA7              ;
1336  8BA7              ; 20/10/22
1337  8BA7              ;
1338  8BA7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1339  8BA7              ;
1340  8BA7              ; Destruye el puntero y DE !!!!!
1341  8BA7
1342  8BA7 5E           Extrae_address ld e,(hl)
1343  8BA8 23           	inc hl
1344  8BA9 56           	ld d,(hl)
1345  8BAA 2B           	dec hl
1346  8BAB EB           	ex de,hl
1347  8BAC C9           	ret
1348  8BAD
1349  8BAD              ; *************************************************************************************************************************************************************
1350  8BAD              ;
1351  8BAD              ;	20/1/24
1352  8BAD              ;
1353  8BAD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1354  8BAD              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1355  8BAD              ;
1356  8BAD              ;   Destruye HL y BC !!!!!,
1357  8BAD              ;
1358  8BAD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1359  8BAD              ;					"0" ..... Izquierda.
1360  8BAD
1361  8BAD              Inicia_Puntero_objeto
1362  8BAD
1363  8BAD 3A 62 89     	ld a,(Cuad_objeto)
1364  8BB0 E6 01        	and 1
1365  8BB2 F5           	push af
1366  8BB3 CC CF 8B     	call z,Inicia_puntero_objeto_izq
1367  8BB6 F1           	pop af
1368  8BB7 C8           	ret z
1369  8BB8 CD BC 8B     	call Inicia_puntero_objeto_der
1370  8BBB C9           	ret
1371  8BBC
1372  8BBC              ; Arrancamos desde la parte izquierda de la pantalla.
1373  8BBC              ; Iniciamos (Indice_Sprite_der).
1374  8BBC
1375  8BBC 2A 58 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1376  8BBF 22 5C 89     	ld (Puntero_DESPLZ_der),hl
1377  8BC2 CD A7 8B     	call Extrae_address
1378  8BC5 22 52 89     	ld (Puntero_objeto),hl
1379  8BC8
1380  8BC8 2A 5A 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1381  8BCB 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1382  8BCE C9           	ret
1383  8BCF
1384  8BCF              ; Arrancamos desde la parte derecha de la pantalla.
1385  8BCF              ; Iniciamos (Indice_Sprite_izq).
1386  8BCF
1387  8BCF 2A 5A 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1388  8BD2 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1389  8BD5 CD A7 8B     	call Extrae_address
1390  8BD8 22 52 89     	ld (Puntero_objeto),hl
1391  8BDB
1392  8BDB 2A 58 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1393  8BDE 22 5C 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1394  8BE1 C9           	ret
1395  8BE2
1396  8BE2              ; **************************************************************************************************
1397  8BE2              ;
1398  8BE2              ;	31/01/24
1399  8BE2              ;
1400  8BE2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1401  8BE2
1402  8BE2              Restore_entidad
1403  8BE2
1404  8BE2 2A 92 89     	ld hl,(Puntero_store_caja)
1405  8BE5 11 4D 89     	ld de,Bandeja_DRAW
1406  8BE8 7E           	ld a,(hl)
1407  8BE9 12           	ld (de),a
1408  8BEA 23           	inc hl 											; (Tipo).
1409  8BEB
1410  8BEB 11 54 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1411  8BEE 01 02 00     	ld bc,2
1412  8BF1 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1413  8BF3
1414  8BF3 13           	inc de
1415  8BF4 7E           	ld a,(hl)
1416  8BF5 12           	ld (de),a 										; Transferimos (Attr).
1417  8BF6 23           	inc hl
1418  8BF7
1419  8BF7 11 63 89     	ld de,Impacto
1420  8BFA
1421  8BFA 7E           	ld a,(hl)
1422  8BFB 12           	ld (de),a 										; Transferimos (Impacto).
1423  8BFC 23           	inc hl
1424  8BFD
1425  8BFD 13           	inc de
1426  8BFE
1427  8BFE 01 06 00     	ld bc,6
1428  8C01 ED B0        	ldir
1429  8C03
1430  8C03 01 07 00     	ld bc,7
1431  8C06 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1432  8C08              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1433  8C08 11 75 89     	ld de,Ctrl_2
1434  8C0B
1435  8C0B 7E           	ld a,(hl)
1436  8C0C 12           	ld (de),a 										; Transferimos (Ctrl_2).
1437  8C0D
1438  8C0D C9           	ret
1439  8C0E
1440  8C0E              ; **************************************************************************************************
1441  8C0E              ;
1442  8C0E              ;	08/05/23
1443  8C0E              ;
1444  8C0E              ;	Incrementamos los dos punteros de entidades. (+1).
1445  8C0E
1446  8C0E              Incrementa_punteros_de_cajas
1447  8C0E
1448  8C0E 2A 94 89     	ld hl,(Puntero_restore_caja)
1449  8C11 22 92 89     	ld (Puntero_store_caja),hl
1450  8C14 2A 96 89     	ld hl,(Indice_restore_caja)
1451  8C17 23           	inc hl
1452  8C18 23           	inc hl
1453  8C19 22 96 89     	ld (Indice_restore_caja),hl
1454  8C1C CD A7 8B         call Extrae_address
1455  8C1F 22 94 89         ld (Puntero_restore_caja),hl
1456  8C22 C9               ret
1457  8C23
1458  8C23              ; **************************************************************************************************
1459  8C23              ;
1460  8C23              ;	21/12/23
1461  8C23              ;
1462  8C23              ;	Restore_Amadeus
1463  8C23              ;
1464  8C23              ;	Cargamos en DRAW los parámetros de Amadeus.
1465  8C23              ;
1466  8C23
1467  8C23 E5           Restore_Amadeus	push hl
1468  8C24 D5           	push de
1469  8C25 C5            	push bc
1470  8C26 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1471  8C29 11 4D 89     	ld de,Bandeja_DRAW
1472  8C2C 01 2A 00     	ld bc,42
1473  8C2F ED B0        	ldir
1474  8C31 C1           	pop bc
1475  8C32 D1           	pop de
1476  8C33 E1           	pop hl
1477  8C34 C9           	ret
1478  8C35
1479  8C35              ; *************************************************************************************************************************************************************
1480  8C35              ;
1481  8C35              ;	21/12/23
1482  8C35              ;
1483  8C35              ;	Store_Amadeus
1484  8C35              ;
1485  8C35              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1486  8C35              ;
1487  8C35              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1488  8C35              ;
1489  8C35              ;	DESTRUYE: HL y BC y DE.
1490  8C35
1491  8C35 21 4D 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1492  8C38 01 2A 00     	ld bc,42
1493  8C3B ED B0        	ldir
1494  8C3D C9           	ret
1495  8C3E
1496  8C3E              ; -----------------------------------------------------------
1497  8C3E              ;
1498  8C3E              ;	21/12/23
1499  8C3E              ;
1500  8C3E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1501  8C3E              ;
1502  8C3E              ;	Destruye: HL,BC,DE,A
1503  8C3E
1504  8C3E 21 4D 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1505  8C41 01 29 00     	ld bc,41
1506  8C44 AF           	xor a
1507  8C45 77           	ld (hl),a
1508  8C46 11 4E 89     	ld de,Bandeja_DRAW+1
1509  8C49 ED B0        	ldir
1510  8C4B C9           	ret
1511  8C4C
1512  8C4C              ; -----------------------------------------------------------
1513  8C4C
1514  8C4C              ; Teclado.
1515  8C4C
1516  8C4C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1517  8C4E DB FE        	in a,($fe)
1518  8C50 E6 01        	and $01
1519  8C52 28 02        	jr z,1f
1520  8C54 18 F6        	jr Pulsa_ENTER
1521  8C56 C9           1 ret
1522  8C57
1523  8C57              ; **************************************************************************************************
1524  8C57              ;
1525  8C57              ; Temporización.
1526  8C57
1527  8C57              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1528  8C57              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1529  8C57              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1530  8C57              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1531  8C57
1532  8C57              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1533  8C57              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1534  8C57              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1535  8C57
1536  8C57              ; A partir de $4f61 no hace falta DELAY.
1537  8C57
1538  8C57              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1539  8C57
1540  8C57 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1541  8C5A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1542  8C5B 78           	LD A,B
1543  8C5C A7           	AND A
1544  8C5D 20 FB        	JR NZ,wait
1545  8C5F C9           	RET
1546  8C60
1547  8C60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1548  8C60              ;
1549  8C60              ;	5/3/23
1550  8C60              ;
1551  8C60              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1552  8C60
1553  8C60              Movimiento_Amadeus
1554  8C60
1555  8C60              ; Disparo.
1556  8C60
1557  8C60 3A C6 89     	ld a,(Disparo_Amadeus)
1558  8C63 A7           	and a
1559  8C64 20 02        	jr nz,1F
1560  8C66 18 15        	jr 2F
1561  8C68
1562  8C68 3E F7        1 ld a,$f7													; "5" para disparar.
1563  8C6A DB FE        	in a,($fe)
1564  8C6C E6 10        	and $10
1565  8C6E
1566  8C6E F5           	push af
1567  8C6F CC 09 9A     	call z,Genera_disparo
1568  8C72 F1           	pop af
1569  8C73 20 08        	jr nz,2F
1570  8C75
1571  8C75 3A C6 89     	ld a,(Disparo_Amadeus)
1572  8C78 EE 01        	xor 1
1573  8C7A 32 C6 89     	ld (Disparo_Amadeus),a
1574  8C7D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1575  8C7F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1576  8C81 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1577  8C83 CC DC 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1578  8C86
1579  8C86 3E F7        	ld a,$f7
1580  8C88 DB FE        	in a,($fe)
1581  8C8A E6 01        	and $01
1582  8C8C C8           	ret z
1583  8C8D
1584  8C8D 3E F7        	ld a,$f7
1585  8C8F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1586  8C91 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1587  8C93 CC B9 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1588  8C96 C9           	ret
1589  8C97
1590  8C97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1591  8C97              ;
1592  8C97              ;	Rutina provisional para que los malotes cagen balas.
1593  8C97
1594  8C97              Detecta_disparo_entidad
1595  8C97
1596  8C97 3A C9 89     	ld a,(Disparo_entidad)
1597  8C9A A7           	and a
1598  8C9B C8           	ret z
1599  8C9C
1600  8C9C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1601  8C9C
1602  8C9C              ;	ld a,$7f				; Detecta SPACE.
1603  8C9C              ;	in a,($fe)
1604  8C9C              ;	and 1
1605  8C9C              ;	ret nz
1606  8C9C
1607  8C9C CD 09 9A     	call Genera_disparo
1608  8C9F C9           	ret
1609  8CA0
1610  8CA0              ; ----------------------------------------------------------------------
1611  8CA0              ;
1612  8CA0              ;	8/9/23
1613  8CA0
1614  8CA0 2A AC 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1615  8CA3 2B            	dec hl
1616  8CA4 7E           	ld a,(hl)
1617  8CA5 A7           	and a
1618  8CA6 C8           	ret z										; Salimos si es álbum está vacío.
1619  8CA7
1620  8CA7 11 69 89     	ld de,Variables_de_borrado+5
1621  8CAA 01 06 00     	ld bc,6
1622  8CAD ED B8        	lddr
1623  8CAF C9           	ret
1624  8CB0
1625  8CB0              ; ----------------------------------------------------------------------
1626  8CB0              ;
1627  8CB0              ;	9/9/23
1628  8CB0
1629  8CB0              Repone_datos_de_borrado_Amadeus
1630  8CB0
1631  8CB0 21 64 89     	ld hl,Variables_de_borrado
1632  8CB3 11 AC 80     	ld de,Album_de_fotos_Amadeus
1633  8CB6 01 06 00     	ld bc,6
1634  8CB9 ED B0        	ldir
1635  8CBB
1636  8CBB EB           	ex de,hl
1637  8CBC 22 AC 89     	ld (End_Snapshot_Amadeus),hl
1638  8CBF
1639  8CBF C9           	ret
1640  8CC0
1641  8CC0              ; ----------------------------------------------------------------------
1642  8CC0              ;
1643  8CC0              ;	27/10/23
1644  8CC0              ;
1645  8CC0
1646  8CC0              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1647  8CC0              ;	_ Album_de_fotos correspondiente.
1648  8CC0
1649  8CC0              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1650  8CC0              ;	_ durante el proceso de escritura.
1651  8CC0
1652  8CC0              Repone_datos_de_borrado
1653  8CC0
1654  8CC0 ED 5B A6 89  	ld de,(Stack_snapshot)
1655  8CC4 21 64 89     	ld hl,Variables_de_borrado
1656  8CC7 01 06 00     	ld bc,6
1657  8CCA ED B0        	ldir
1658  8CCC
1659  8CCC EB           	ex de,hl
1660  8CCD 22 A6 89     	ld (Stack_snapshot),hl
1661  8CD0
1662  8CD0 C9           	ret
1663  8CD1
1664  8CD1              ; --------------------------------------------------------------------------------------
1665  8CD1
1666  8CD1              Pinta_Amadeus
1667  8CD1
1668  8CD1 CD 73 8B        	call Calcula_malotes_Amadeus
1669  8CD4 CD A2 92     	call Extrae_foto_Amadeus
1670  8CD7 CD 33 8B     	call Limpia_album_Amadeus
1671  8CDA
1672  8CDA C9           	ret
1673  8CDB
1674  8CDB              Pinta_entidades
1675  8CDB
1676  8CDB              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1677  8CDB
1678  8CDB 3A AE 89     	ld a,(Ctrl_3)
1679  8CDE CB 47        	bit 0,a
1680  8CE0 C8           	ret z
1681  8CE1
1682  8CE1 3A AE 89     	ld a,(Ctrl_3)
1683  8CE4 CB 57        	bit 2,a
1684  8CE6 28 0C        	jr z,1F
1685  8CE8
1686  8CE8              ;	Sólo queremos borrar. Estamos reiniciando la entidad. Hemos de modificar (Stack_snapshot) para que la rutina [Extrae_foto_entidades] calcule el nº de malotes correctamente.
1687  8CE8
1688  8CE8 2A A6 89     	ld hl,(Stack_snapshot)
1689  8CEB 01 06 00     	ld bc,6
1690  8CEE A7           	and a
1691  8CEF ED 42        	sbc hl,bc
1692  8CF1 22 A6 89     	ld (Stack_snapshot),hl
1693  8CF4
1694  8CF4 CD 5B 8B     1 call Calcula_numero_de_malotes
1695  8CF7 CD 20 92     	call Extrae_foto_entidades
1696  8CFA CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1697  8CFD
1698  8CFD C9           	ret
1699  8CFE
1700  8CFE              ; -----------------------------------------------------------------------------------
1701  8CFE              ;
1702  8CFE              ;	10/12/23
1703  8CFE              ;
1704  8CFE              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1705  8CFE
1706  8CFE              Actualiza_relojes
1707  8CFE
1708  8CFE 3A AE 89     	ld a,(Ctrl_3)
1709  8D01 CB 47        	bit 0,a
1710  8D03 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1711  8D04
1712  8D04 21 C1 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1713  8D07 34           	inc (hl)
1714  8D08
1715  8D08 34           	inc (hl)
1716  8D09 35           	dec (hl)
1717  8D0A C0           	ret nz
1718  8D0B
1719  8D0B 21 C2 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1720  8D0E 34           	inc (hl)
1721  8D0F C9           	ret
1722  8D10
1723  8D10              ; ---------------------------------------------------------------
1724  8D10
1725  8D10              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D10              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D10              ;
   3+ 8D10              ;   19/1/24
   4+ 8D10              ;
   5+ 8D10              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D10              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D10              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D10              ;	_ de la 1ª entidad del Nivel.
   9+ 8D10              ;
  10+ 8D10              ;	MODIFICA: HL,DE y A.
  11+ 8D10              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8D10
  13+ 8D10              Inicializa_Nivel
  14+ 8D10
  15+ 8D10 2A CD 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8D13 CD A7 8B     	call Extrae_address
  17+ 8D16 7E           	ld a,(hl)
  18+ 8D17 32 98 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8D1A 23           	inc hl
  20+ 8D1B CD 28 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D1E 22 CF 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D21 CD 31 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D24              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D24 CD 42 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8D27 C9           	ret
  26+ 8D28
  27+ 8D28              ; ----------------------
  28+ 8D28
  29+ 8D28 11 77 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8D2B 01 04 00     	ld bc,4
  31+ 8D2E ED B0        	ldir
  32+ 8D30 C9           	ret
  33+ 8D31
  34+ 8D31 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8D32 CD 85 8E         call Calcula_salto_en_BC
  36+ 8D35 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8D38 A7               and a
  38+ 8D39 ED 4A            adc hl,bc
  39+ 8D3B CD A7 8B         call Extrae_address
  40+ 8D3E 22 83 89         ld (Puntero_indice_mov),hl
  41+ 8D41 C9               ret
  42+ 8D42
  43+ 8D42 3A 4D 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8D45 CD 85 8E     	call Calcula_salto_en_BC
  45+ 8D48 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8D4B A7               and a
  47+ 8D4C ED 4A            adc hl,bc
  48+ 8D4E CD A7 8B         call Extrae_address
  49+ 8D51 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8D54 C9           	ret
  51+ 8D55
  52+ 8D55              ;---------------------------------------------------------------------------------------------------------------
  53+ 8D55              ;
  54+ 8D55              ;   5/1/24
  55+ 8D55              ;
  56+ 8D55              ;	Destruye A,BC,HL,DE
  57+ 8D55
  58+ 8D55              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8D55              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8D55
  61+ 8D55              Inicia_Entidades
  62+ 8D55
  63+ 8D55              ; Preparamos los punteros de las cajas de entidades:
  64+ 8D55
  65+ 8D55 CD 0F 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8D58              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8D58 CD EC 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8D5B
  69+ 8D5B 2A CF 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8D5E
  71+ 8D5E 22 CF 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8D61
  73+ 8D61 CD 33 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8D64
  75+ 8D64 2A CF 89     	ld hl,(Datos_de_nivel)
  76+ 8D67
  77+ 8D67              ; En este punto:
  78+ 8D67              ;
  79+ 8D67              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8D67              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8D67
  82+ 8D67 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8D68
  84+ 8D68 7E           	ld a,(hl)
  85+ 8D69 CD A5 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8D6C
  87+ 8D6C CD 97 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8D6F
  89+ 8D6F              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8D6F
  91+ 8D6F CD 55 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8D72
  93+ 8D72 A7           	and a
  94+ 8D73 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8D75
  96+ 8D75              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8D75
  98+ 8D75              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8D75              ;	_ de este tipo de entidad.
 100+ 8D75
 101+ 8D75 CD F3 99     	call Situa_en_contador_general_de_mov_masticados
 102+ 8D78 CD 00 9A     	call Transfiere_datos_de_contadores
 103+ 8D7B
 104+ 8D7B 18 06        	jr 4F
 105+ 8D7D
 106+ 8D7D CD 69 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8D80
 108+ 8D80              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8D80              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8D80              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8D80              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8D80              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8D80
 114+ 8D80 CD 13 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8D83              ;																; _ Mov_masticados ya generados.
 116+ 8D83 CD BF 8D     4 call Guarda_foto_de_mov_masticado
 117+ 8D86
 118+ 8D86              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8D86
 120+ 8D86 2A 6A 89     	ld hl,(Puntero_de_impresion)
 121+ 8D89 CD 0A 9F     	call Genera_coordenadas
 122+ 8D8C CD BE 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8D8F CD C9 8D     	call Limpiamos_bandeja_DRAW
 124+ 8D92 CD 0E 8C     	call Incrementa_punteros_de_cajas
 125+ 8D95
 126+ 8D95              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8D95              ; _ entidad del Nivel.
 128+ 8D95
 129+ 8D95 3A AF 89     	ld a,(Ctrl_4)
 130+ 8D98 E6 F0        	and $f0
 131+ 8D9A 32 AF 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8D9D
 133+ 8D9D              ; Siguiente entidad del Nivel.
 134+ 8D9D
 135+ 8D9D 2A CF 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8DA0 23           	inc hl 														; _ entidad del Nivel.
 137+ 8DA1
 138+ 8DA1 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8DA2
 140+ 8DA2 10 BA        	djnz 2B
 141+ 8DA4
 142+ 8DA4 C9           	ret
 143+ 8DA5
 144+ 8DA5              ; ---------------------------------------------------------------------
 145+ 8DA5              ;
 146+ 8DA5              ;	10/02/24
 147+ 8DA5              ;
 148+ 8DA5              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8DA5              ;
 150+ 8DA5              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8DA5
 152+ 8DA5              Definicion_segun_tipo
 153+ 8DA5
 154+ 8DA5 CD 85 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8DA8 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8DAB CD 8D 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8DAE C9           	ret
 158+ 8DAF
 159+ 8DAF              ; ---------------------------------------------------------------------
 160+ 8DAF              ;
 161+ 8DAF              ;	30/01/24
 162+ 8DAF
 163+ 8DAF
 164+ 8DAF              Store_Restore_cajas
 165+ 8DAF
 166+ 8DAF              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8DAF
 168+ 8DAF 2A 6A 89     	ld hl,(Puntero_de_impresion)
 169+ 8DB2 CD 0A 9F     	call Genera_coordenadas
 170+ 8DB5
 171+ 8DB5 CD BE 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8DB8 CD C9 8D     	call Limpiamos_bandeja_DRAW
 173+ 8DBB
 174+ 8DBB              ; 	Entidad_sospechosa. 20/4/23
 175+ 8DBB
 176+ 8DBB              ;	ld a,(Impacto)
 177+ 8DBB              ;	and a
 178+ 8DBB              ;	jr z,1F
 179+ 8DBB
 180+ 8DBB              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8DBB              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8DBB              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8DBB              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8DBB              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8DBB
 186+ 8DBB
 187+ 8DBB              ;1 ld hl,(Puntero_restore_caja)
 188+ 8DBB              ;	ld a,(hl)
 189+ 8DBB              ;	and a
 190+ 8DBB              ;	push af
 191+ 8DBB              ;	jr z,2F
 192+ 8DBB
 193+ 8DBB              ;	di
 194+ 8DBB              ;	ld de,Bandeja_DRAW
 195+ 8DBB              ;	ld bc,42
 196+ 8DBB              ;	ldir
 197+ 8DBB              ;	ei
 198+ 8DBB
 199+ 8DBB CD 0E 8C     2 call Incrementa_punteros_de_cajas
 200+ 8DBE C9           	ret
 201+ 8DBF
 202+ 8DBF
 203+ 8DBF              ; ---------------------------------------------------------------------
 204+ 8DBF              ;
 205+ 8DBF              ;	29/01/24
 206+ 8DBF
 207+ 8DBF CD BE 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 208+ 8DC2 CD BF 80     	call Guarda_foto_registros
 209+ 8DC5              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 210+ 8DC5              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 211+ 8DC5              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 212+ 8DC5              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 213+ 8DC5
 214+ 8DC5 CD D4 8D     	call Decrementa_Contador_de_mov_masticados
 215+ 8DC8 C9           	ret
 216+ 8DC9
 217+ 8DC9              ; ---------------------------------------------------------------------
 218+ 8DC9              ;
 219+ 8DC9              ;	25/01/24
 220+ 8DC9
 221+ 8DC9 21 4D 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 222+ 8DCC 06 2A        	ld b,42
 223+ 8DCE AF           	xor a
 224+ 8DCF
 225+ 8DCF 77           1 ld (hl),a
 226+ 8DD0 23           	inc hl
 227+ 8DD1 10 FC        	djnz 1B
 228+ 8DD3
 229+ 8DD3 C9           	ret
 230+ 8DD4
 231+ 8DD4              ; ---------------------------------------------------------------------
 232+ 8DD4              ;
 233+ 8DD4              ;	22/01/24
 234+ 8DD4
 235+ 8DD4 2A 6E 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8DD7 2B           	dec hl
 237+ 8DD8
 238+ 8DD8 24           	inc h
 239+ 8DD9 25           	dec h
 240+ 8DDA
 241+ 8DDA FC E1 8D     	call m,Reinicia_entidad_maliciosa
 242+ 8DDD
 243+ 8DDD              ;	jr nz,1F
 244+ 8DDD
 245+ 8DDD              ;	inc l
 246+ 8DDD              ;	dec l
 247+ 8DDD
 248+ 8DDD              ;	di
 249+ 8DDD              ;	jr z,$
 250+ 8DDD              ;	ei
 251+ 8DDD
 252+ 8DDD 22 6E 89     1 ld (Contador_de_mov_masticados),hl
 253+ 8DE0 C9           	ret
 254+ 8DE1
 255+ 8DE1              ; ---------------------------------------------------------------------
 256+ 8DE1              ;
 257+ 8DE1              ;	10/2/24
 258+ 8DE1
 259+ 8DE1              Reinicia_entidad_maliciosa
 260+ 8DE1
 261+ 8DE1              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 262+ 8DE1
 263+ 8DE1 CD F3 99     	call Situa_en_contador_general_de_mov_masticados
 264+ 8DE4 CD 00 9A     	call Transfiere_datos_de_contadores
 265+ 8DE7
 266+ 8DE7              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 267+ 8DE7
 268+ 8DE7 3A 4D 89     	ld a,(Tipo)
 269+ 8DEA CD A5 8D     	call Definicion_segun_tipo
 270+ 8DED
 271+ 8DED E5           	push hl
 272+ 8DEE DD E1        	pop ix
 273+ 8DF0
 274+ 8DF0 DD 6E 0B     	ld l,(ix+11)
 275+ 8DF3 DD 66 0C     	ld h,(ix+12)
 276+ 8DF6
 277+ 8DF6 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 278+ 8DF9 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 279+ 8DFC
 280+ 8DFC              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 281+ 8DFC              ;	Queremos pintar la entidad en su posición de inicio.
 282+ 8DFC
 283+ 8DFC 2A A6 89     	ld hl,(Stack_snapshot)
 284+ 8DFF 01 06 00     	ld bc,6
 285+ 8E02 A7           	and a
 286+ 8E03 ED 42        	sbc hl,bc
 287+ 8E05 22 A6 89     	ld (Stack_snapshot),hl
 288+ 8E08
 289+ 8E08 CD BE 8A     	call Cargamos_registros_con_mov_masticado
 290+ 8E0B CD BF 80     	call Guarda_foto_registros
 291+ 8E0E
 292+ 8E0E 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 293+ 8E11 2B           	dec hl
 294+ 8E12
 295+ 8E12 C9           	ret
 296+ 8E13
 297+ 8E13
 298+ 8E13
 299+ 8E13
 300+ 8E13              ; ---------------------------------------------------------------------
 301+ 8E13              ;
 302+ 8E13              ;	22/01/24
 303+ 8E13
 304+ 8E13 21 AF 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 305+ 8E16 CB 46        	bit 0,(hl)
 306+ 8E18 20 0D        	jr nz,1F
 307+ 8E1A CB 4E        	bit 1,(hl)
 308+ 8E1C 20 0C        	jr nz,2F
 309+ 8E1E CB 56        	bit 2,(hl)
 310+ 8E20 20 0B        	jr nz,3F
 311+ 8E22 CB 5E        	bit 3,(hl)
 312+ 8E24 20 0A        	jr nz,4F
 313+ 8E26 C9           	ret
 314+ 8E27
 315+ 8E27 CB E6        1 set 4,(hl)
 316+ 8E29 C9           	ret
 317+ 8E2A CB EE        2 set 5,(hl)
 318+ 8E2C C9           	ret
 319+ 8E2D CB F6        3 set 6,(hl)
 320+ 8E2F C9           	ret
 321+ 8E30 CB FE        4 set 7,(hl)
 322+ 8E32 C9           	ret
 323+ 8E33
 324+ 8E33              ; ---------------------------------------------------------------------
 325+ 8E33              ;
 326+ 8E33              ;	23/01/24
 327+ 8E33              ;
 328+ 8E33              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 329+ 8E33              ;
 330+ 8E33              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 331+ 8E33              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 332+ 8E33              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 333+ 8E33              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 334+ 8E33
 335+ 8E33              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 336+ 8E33
 337+ 8E33 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 338+ 8E34 3D           	dec a
 339+ 8E35 20 06        	jr nz,1F
 340+ 8E37
 341+ 8E37              ; --- Tipo_1
 342+ 8E37
 343+ 8E37 21 AF 89     	ld hl,Ctrl_4
 344+ 8E3A CB C6        	set 0,(hl)
 345+ 8E3C C9           	ret
 346+ 8E3D
 347+ 8E3D 3D           1 dec a
 348+ 8E3E 20 06        	jr nz,2F
 349+ 8E40
 350+ 8E40              ; --- Tipo_2
 351+ 8E40
 352+ 8E40 21 AF 89     	ld hl,Ctrl_4
 353+ 8E43 CB CE        	set 1,(hl)
 354+ 8E45 C9           	ret
 355+ 8E46
 356+ 8E46 3D           2 dec a
 357+ 8E47 20 06        	jr nz,3F
 358+ 8E49
 359+ 8E49              ; --- Tipo_3
 360+ 8E49
 361+ 8E49 21 AF 89     	ld hl,Ctrl_4
 362+ 8E4C CB D6        	set 2,(hl)
 363+ 8E4E C9           	ret
 364+ 8E4F
 365+ 8E4F              ; --- Tipo_3
 366+ 8E4F
 367+ 8E4F 21 AF 89     3 ld hl,Ctrl_4
 368+ 8E52 CB D6        	set 2,(hl)
 369+ 8E54 C9           	ret
 370+ 8E55
 371+ 8E55              ; ---------------------------------------------------------------------
 372+ 8E55              ;
 373+ 8E55              ;	22/01/24
 374+ 8E55
 375+ 8E55 21 AF 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 376+ 8E58 CB 46        	bit 0,(hl)
 377+ 8E5A 20 0E        	jr nz,1F
 378+ 8E5C
 379+ 8E5C CB 4E        	bit 1,(hl)
 380+ 8E5E 20 10        	jr nz,2F
 381+ 8E60
 382+ 8E60 CB 56        	bit 2,(hl)
 383+ 8E62 20 12        	jr nz,3F
 384+ 8E64
 385+ 8E64 CB 5E        	bit 3,(hl)
 386+ 8E66 20 14        	jr nz,4F
 387+ 8E68 18 19        	jr 6F
 388+ 8E6A
 389+ 8E6A              ; Entidad_de_Tipo_1.
 390+ 8E6A
 391+ 8E6A CB 66        1 bit 4,(hl)
 392+ 8E6C 28 15        	jr z,6F
 393+ 8E6E 18 10        	jr 5F
 394+ 8E70
 395+ 8E70              ; Entidad_de_Tipo_2.
 396+ 8E70
 397+ 8E70 CB 6E        2 bit 5,(hl)
 398+ 8E72 28 0F        	jr z,6F
 399+ 8E74 18 0A        	jr 5F
 400+ 8E76
 401+ 8E76              ; Entidad_de_Tipo_3.
 402+ 8E76
 403+ 8E76 CB 76        3 bit 6,(hl)
 404+ 8E78 28 09        	jr z,6F
 405+ 8E7A 18 04        	jr 5F
 406+ 8E7C
 407+ 8E7C              ; Entidad_de_Tipo_4.
 408+ 8E7C
 409+ 8E7C CB 7E        4 bit 7,(hl)
 410+ 8E7E 28 03        	jr z,6F
 411+ 8E80
 412+ 8E80              ; Esta entidad TIENE MOV_MASTICADOS.
 413+ 8E80
 414+ 8E80 AF           5 xor a
 415+ 8E81 3C           	inc a
 416+ 8E82 C9           	ret
 417+ 8E83
 418+ 8E83              ; Esta entidad NO TIENE MOV_MASTICADOS.
 419+ 8E83
 420+ 8E83 AF           6 xor a
 421+ 8E84 C9           	ret
 422+ 8E85
 423+ 8E85              ;	------------------------------------------------------------------------------------
 424+ 8E85              ;
 425+ 8E85              ;	12/01/24
 426+ 8E85              ;
 427+ 8E85              ;	INPUTS:	A contiene el (Tipo) de entidad.
 428+ 8E85              ;
 429+ 8E85              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 430+ 8E85              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 431+ 8E85
 432+ 8E85 CB 27        Calcula_salto_en_BC sla a
 433+ 8E87 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 434+ 8E89 4F           	ld c,a
 435+ 8E8A 06 00        	ld b,0
 436+ 8E8C C9           	ret
 437+ 8E8D
 438+ 8E8D              ; ------------------------------------------------------------------
 439+ 8E8D              ;
 440+ 8E8D              ;	19/1/24
 441+ 8E8D              ;
 442+ 8E8D              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 443+ 8E8D              ;	Actualiza (Datos_de_entidad) con esa dirección.
 444+ 8E8D
 445+ 8E8D A7           Situa_en_datos_de_definicion and a
 446+ 8E8E ED 4A        	adc hl,bc
 447+ 8E90 CD A7 8B     	call Extrae_address
 448+ 8E93 22 9E 89         ld (Datos_de_entidad),hl
 449+ 8E96 C9           	ret
 450+ 8E97
 451+ 8E97              ; ------------------------------------------------------------------
 452+ 8E97
 453+ 8E97              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 454+ 8E97              ; 	inc de
 455+ 8E97              ; 	inc de
 456+ 8E97              ; 	ex de,hl
 457+ 8E97              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 458+ 8E97              ; 	ret
 459+ 8E97
 460+ 8E97              ; ----------------------------------------------------------------------------------------------------------
 461+ 8E97              ;
 462+ 8E97              ;	31/1/24
 463+ 8E97              ;
 464+ 8E97              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 465+ 8E97              ;	_ de entidad.
 466+ 8E97              ;
 467+ 8E97              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 468+ 8E97              ;
 469+ 8E97              ;
 470+ 8E97              ;	MODIFICA: HL,DE y BC
 471+ 8E97
 472+ 8E97
 473+ 8E97              Definicion_de_entidad_a_bandeja_DRAW
 474+ 8E97
 475+ 8E97 11 4D 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 476+ 8E9A 01 03 00     	ld bc,3
 477+ 8E9D ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 478+ 8E9F              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 479+ 8E9F 11 57 89     	ld de,Attr									; DE en (Attr).
 480+ 8EA2 01 05 00     	ld bc,5
 481+ 8EA5 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 482+ 8EA7              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 483+ 8EA7 11 60 89     	ld de,Posicion_inicio
 484+ 8EAA 01 03 00     	ld bc,3
 485+ 8EAD ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 486+ 8EAF              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 487+ 8EAF 11 6C 89     	ld de,Puntero_de_almacen_de_mov_masticados
 488+ 8EB2 01 02 00     	ld bc,2
 489+ 8EB5 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 490+ 8EB7
 491+ 8EB7 11 76 89     	ld de,Frames_explosion
 492+ 8EBA 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 493+ 8EBC 12           	ld (de),a 									; Vuelco (Frames_explosion).
 494+ 8EBD
 495+ 8EBD C9           	ret
 496+ 8EBE
 497+ 8EBE              ; ----------------------------------------------------------------------------------------------------------
 498+ 8EBE              ;
 499+ 8EBE              ;	22/01/24
 500+ 8EBE              ;
 501+ 8EBE              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 502+ 8EBE              ;
 503+ 8EBE              ;	Las cajas contienen entidades iniciadas:
 504+ 8EBE              ;
 505+ 8EBE              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 506+ 8EBE              ;
 507+ 8EBE              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 508+ 8EBE              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 509+ 8EBE              ;
 510+ 8EBE              ;	MODIFICA: HL,DE y BC
 511+ 8EBE
 512+ 8EBE 21 4D 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 513+ 8EC1 ED 5B 92 89  	ld de,(Puntero_store_caja)
 514+ 8EC5 7E           	ld a,(hl)
 515+ 8EC6 12           	ld (de),a
 516+ 8EC7 13           	inc de 													; (Tipo).
 517+ 8EC8
 518+ 8EC8 21 54 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 519+ 8ECB 01 02 00     	ld bc,2
 520+ 8ECE ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 521+ 8ED0              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 522+ 8ED0 23           	inc hl
 523+ 8ED1 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 524+ 8ED2 12           	ld (de),a
 525+ 8ED3 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 526+ 8ED4
 527+ 8ED4 21 63 89     	ld hl,Impacto
 528+ 8ED7 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 529+ 8ED8 12           	ld (de),a
 530+ 8ED9 13           	inc de 													; (Impacto), volcado a la caja.
 531+ 8EDA              ;															; DE situado ahora en (Variables_de_borrado).
 532+ 8EDA 23           	inc hl
 533+ 8EDB 01 06 00     	ld bc,6
 534+ 8EDE ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 535+ 8EE0              ; 															; DE situado ahora en (Puntero_de_impresión).
 536+ 8EE0 01 07 00     	ld bc,7
 537+ 8EE3 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 538+ 8EE5              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 539+ 8EE5              ;															; HL apunta ahora a (Columnas).
 540+ 8EE5 21 75 89     	ld hl,Ctrl_2
 541+ 8EE8 7E           	ld a,(hl)
 542+ 8EE9 12           	ld (de),a 												; Volcamos (Ctrl_2).
 543+ 8EEA 13           	inc de
 544+ 8EEB
 545+ 8EEB C9           	ret
 546+ 8EEC
 547+ 8EEC              ;---------------------------------------------------------------------------------------------------------------
 548+ 8EEC              ;
 549+ 8EEC              ;	5/1/24
 550+ 8EEC              ;
 551+ 8EEC              ;	INICIALIZA (Numero_parcial_de_entidades).
 552+ 8EEC              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 553+ 8EEC              ;
 554+ 8EEC              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 555+ 8EEC              ;
 556+ 8EEC              ;	(Numero_parcial_de_entidades)="7".
 557+ 8EEC              ;
 558+ 8EEC              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 559+ 8EEC              ;
 560+ 8EEC              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 561+ 8EEC              ;
 562+ 8EEC              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 563+ 8EEC              ;	MODIFICA: A y B.
 564+ 8EEC              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 565+ 8EEC
 566+ 8EEC              Inicializa_Numero_parcial_de_entidades
 567+ 8EEC
 568+ 8EEC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 569+ 8EEC
 570+ 8EEC 3A 98 89     	ld a,(Numero_de_entidades)
 571+ 8EEF A7           	and a
 572+ 8EF0
 573+ 8EF0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 574+ 8EF0              ;	jr z,$
 575+ 8EF0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 576+ 8EF0
 577+ 8EF0 20 03        	jr nz,3F
 578+ 8EF2
 579+ 8EF2              ; ---------- ---------- ----------
 580+ 8EF2
 581+ 8EF2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 582+ 8EF2              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 583+ 8EF2
 584+ 8EF2 CD 10 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 585+ 8EF5
 586+ 8EF5              ; ---------- ---------- ----------
 587+ 8EF5
 588+ 8EF5 3A 98 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 589+ 8EF8 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 590+ 8EFA 38 08        	jr c,1F
 591+ 8EFC
 592+ 8EFC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 593+ 8EFC              ; Actualizamos variables.
 594+ 8EFC
 595+ 8EFC 3E 07        	ld a,7
 596+ 8EFE 32 99 89     	ld (Numero_parcial_de_entidades),a
 597+ 8F01 47           	ld b,a
 598+ 8F02 18 04        	jr 2F
 599+ 8F04
 600+ 8F04              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 601+ 8F04              ; (Numero_de_entidades)="0".
 602+ 8F04
 603+ 8F04 32 99 89     1 ld (Numero_parcial_de_entidades),a
 604+ 8F07 47           	ld b,a
 605+ 8F08 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1726  8F09              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F09              ; ******************************************************************************************************************************************************************************************
   2+ 8F09              ;
   3+ 8F09              ; 26/06/23
   4+ 8F09              ;
   5+ 8F09              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F09
   7+ 8F09              Draw
   8+ 8F09
   9+ 8F09 CD F6 91     	call Prepara_draw
  10+ 8F0C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F0D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F0E 28 05        	jr z,2F
  13+ 8F10
  14+ 8F10 3A 62 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F13 18 0C        	jr 1F
  16+ 8F15
  17+ 8F15 2A 60 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F18 22 50 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F1B CD AA 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F1E              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F1E
  22+ 8F1E CD 57 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F21
  24+ 8F21 3A 70 89     1 ld a,(Ctrl_0)
  25+ 8F24 CB 6F        	bit 5,a
  26+ 8F26 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F28
  28+ 8F28 CD 40 8F     	call Comprueba_limite_horizontal
  29+ 8F2B CD D0 8F     	call Comprueba_limite_vertical
  30+ 8F2E
  31+ 8F2E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F2E              ; -----------------------
  33+ 8F2E              ; -----------------------
  34+ 8F2E              ; -----------------------
  35+ 8F2E
  36+ 8F2E CD 26 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F31 CD 5D 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F34 CD BC 91     	call Define_rutina_de_impresion
  39+ 8F37
  40+ 8F37 3A 70 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F3A CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F3C 32 70 89     	ld (Ctrl_0),a
  43+ 8F3F
  44+ 8F3F C9           	ret
  45+ 8F40
  46+ 8F40              ; *******************************************************************************************************************************************************************************************
  47+ 8F40              ;	21/01/23
  48+ 8F40              ;
  49+ 8F40              ; 	Comprueba_limite_horizontal.
  50+ 8F40              ;
  51+ 8F40              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F40              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F40              ;
  54+ 8F40              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F40              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F40              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F40              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F40
  59+ 8F40
  60+ 8F40
  61+ 8F40 3A 70 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F43 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F45 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F47 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F49 32 70 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F4C 18 09            jr 6F
  67+ 8F4E CB 5F        1 bit 3,a
  68+ 8F50 28 0A            jr z,2F
  69+ 8F52 E6 F7            and $f7
  70+ 8F54 32 70 89         ld (Ctrl_0),a
  71+ 8F57 CD AA 90     6 call Inicializacion
  72+ 8F5A 18 5B            jr 5F
  73+ 8F5C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F5D
  75+ 8F5D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F5D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F5D
  78+ 8F5D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F5E 2A 72 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F61 CD EC 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F64 67           	ld h,a
  82+ 8F65 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F66 CD EC 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F69 67           	ld h,a
  85+ 8F6A A7           	and a
  86+ 8F6B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F6D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F6E 3A 62 89     	ld a,(Cuad_objeto)
  89+ 8F71 FE 02        	cp 2
  90+ 8F73 38 1E        	jr c,3F
  91+ 8F75 28 1C        	jr z,3F
  92+ 8F77 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F78 28 23            jr z,7F
  94+ 8F7A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F7C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F7E E1           	pop hl
  97+ 8F7F
  98+ 8F7F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F7F              ; _para indicar con E="2" en caso necesario.
 100+ 8F7F
 101+ 8F7F E5               push hl
 102+ 8F80 C5               push bc
 103+ 8F81 CD EC 9E     	call calcula_tercio
 104+ 8F84 FE 01        	cp 1
 105+ 8F86 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F88 CD B8 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F8B 28 26            jr z,9F
 108+ 8F8D 38 24            jr c,9F
 109+ 8F8F 1E 00        11 ld e,0
 110+ 8F91 18 22            jr 8F
 111+ 8F93 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F94 28 07        	jr z, 7F
 113+ 8F96 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F98 1E 00         	ld e,0
 115+ 8F9A E1           	pop hl
 116+ 8F9B 18 04        	jr 4F
 117+ 8F9D 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8F9F 18 15            jr 10F
 119+ 8FA1
 120+ 8FA1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8FA1              ; _para indicar con E="2" en caso necesario.
 122+ 8FA1
 123+ 8FA1 E5           4 push hl
 124+ 8FA2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8FA3 CD EC 9E     	call calcula_tercio
 126+ 8FA6 FE 01        	cp 1
 127+ 8FA8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8FAA CD B8 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8FAD 28 04            jr z,9F
 130+ 8FAF 30 02            jr nc,9F
 131+ 8FB1 18 02        	jr 8F
 132+ 8FB3 1E 02        9 ld e,2
 133+ 8FB5 C1           8 pop bc
 134+ 8FB6 E1           10 pop hl
 135+ 8FB7 C9           5 ret
 136+ 8FB8
 137+ 8FB8              ; --------------------
 138+ 8FB8              ;
 139+ 8FB8              ; 25/08/22
 140+ 8FB8
 141+ 8FB8 CD EC 9E     Comprueba_centro call calcula_tercio
 142+ 8FBB 67               ld h,a
 143+ 8FBC 08           	ex af,af
 144+ 8FBD FE 02        	cp 2
 145+ 8FBF 38 07        	jr c,1F
 146+ 8FC1 28 05        	jr z,1F
 147+ 8FC3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8FC6 18 03        	jr 2F
 149+ 8FC8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8FCB 08           2 ex af,af
 151+ 8FCC A7               and a
 152+ 8FCD ED 42            sbc hl,bc
 153+ 8FCF C9               ret
 154+ 8FD0
 155+ 8FD0              ; *********************************************************************************************************************************************************************************************
 156+ 8FD0              ;
 157+ 8FD0              ;   16/8/22
 158+ 8FD0              ;
 159+ 8FD0              ;	Comprueba_limite_vertical
 160+ 8FD0              ;
 161+ 8FD0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8FD0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8FD0              ;
 164+ 8FD0
 165+ 8FD0 2A 50 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8FD3 7D           	ld a,l
 167+ 8FD4 E6 1F        	and $1F
 168+ 8FD6 57           	ld d,a
 169+ 8FD7 3A 74 89     	ld a,(Limite_vertical)
 170+ 8FDA BA           	cp d 											; Límite - Posición.
 171+ 8FDB 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8FDC 3A 62 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8FDF CB 47        	bit 0,a
 174+ 8FE1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8FE3
 176+ 8FE3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8FE3
 178+ 8FE3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8FE4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8FE6
 181+ 8FE6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8FE6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8FE6
 184+ 8FE6 3A 54 89         ld a,(Coordenada_X)
 185+ 8FE9 16 0F            ld d,Centro_izquierda
 186+ 8FEB A7               and a
 187+ 8FEC 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FED 28 1E            jr z,3F
 189+ 8FEF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FF1              ;                                                    ; _salimos sin modificar nada.
 191+ 8FF1 18 0E            jr 2F
 192+ 8FF3 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FF4 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FF6
 195+ 8FF6              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FF6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FF6
 198+ 8FF6 3A 54 89         ld a,(Coordenada_X)
 199+ 8FF9 16 10            ld d,Centro_derecha
 200+ 8FFB A7               and a
 201+ 8FFC 92               sub d
 202+ 8FFD 28 0E            jr z,3F
 203+ 8FFF 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9001              ;                                                    ; _salimos sin modificar nada.
 205+ 9001 CB 43        2 bit 0,e
 206+ 9003 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9005 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9006 CD 9A 90         call Modificaccionne
 209+ 9009 C1           	pop bc
 210+ 900A CD AA 90         call Inicializacion
 211+ 900D C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 900E
 213+ 900E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 900E
 215+ 900E C5           4 push bc
 216+ 900F 01 4F 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 9012 0A           	ld a,(bc)
 218+ 9013 3D           	dec a
 219+ 9014 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9015 7D           	ld a,l
 221+ 9016 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9017 CB 47        	bit 0,a
 223+ 9019 28 03        	jr z,5F
 224+ 901B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 901C 18 2E        	jr 7F
 226+ 901E
 227+ 901E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 901E
 229+ 901E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 901F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9020 3A 70 89     	ld a,(Ctrl_0)
 232+ 9023 CB 4F        	bit 1,a
 233+ 9025 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9027 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9028
 236+ 9028              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9028
 238+ 9028 1C               inc e
 239+ 9029 1D               dec e
 240+ 902A 20 07            jr nz,12F
 241+ 902C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 902D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 902E 22 50 89     	ld (Posicion_actual),hl
 244+ 9031 18 44        13 jr 9F
 245+ 9033 CB 43        12 bit 0,e
 246+ 9035 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9037              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9037 C1           	pop bc
 249+ 9038 18 D3        	jr 3B
 250+ 903A 80           14 add b
 251+ 903B 6F               ld l,a
 252+ 903C 22 50 89     	ld (Posicion_actual),hl
 253+ 903F CD 9A 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9042 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9044 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9046 32 70 89         ld (Ctrl_0),a
 257+ 9049 F1           	pop af
 258+ 904A 18 2B        	jr 9F
 259+ 904C
 260+ 904C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 904C
 262+ 904C F5           7 push af
 263+ 904D 3A 70 89     	ld a,(Ctrl_0)
 264+ 9050 CB 47        	bit 0,a
 265+ 9052 20 1D        	jr nz,8F
 266+ 9054 F1           	pop af
 267+ 9055
 268+ 9055              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9055
 270+ 9055 1C           	inc e
 271+ 9056 1D               dec e
 272+ 9057 20 07            jr nz,10F
 273+ 9059 90           	sub b
 274+ 905A 6F               ld l,a
 275+ 905B 22 50 89     	ld (Posicion_actual),hl
 276+ 905E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9060              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9060 CB 43        10 bit 0,e
 279+ 9062 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9064              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9064 C1           	pop bc
 282+ 9065 18 A6        	jr 3B
 283+ 9067 90           16 sub b
 284+ 9068 6F               ld l,a
 285+ 9069 22 50 89     	ld (Posicion_actual),hl
 286+ 906C CD 9A 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 906F 18 06            jr 9F
 288+ 9071 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9073 32 70 89         ld (Ctrl_0),a
 290+ 9076 F1           	pop af
 291+ 9077 C1           9 pop bc
 292+ 9078 1E 00        	ld e,0
 293+ 907A CD AA 90         call Inicializacion
 294+ 907D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 907E 08           	ex af,af
 296+ 907F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9080 18 8B            jr 3B
 298+ 9082
 299+ 9082              ; --------------------
 300+ 9082
 301+ 9082 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9084 CD 11 92     1 call PreviousScan
 303+ 9087 10 FB            djnz 1B
 304+ 9089 22 50 89     	ld (Posicion_actual),hl
 305+ 908C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 908D C9           	ret
 307+ 908E
 308+ 908E              ; --------------------
 309+ 908E
 310+ 908E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9090 CD 02 92     1 call NextScan
 312+ 9093 10 FB            djnz 1B
 313+ 9095 22 50 89     	ld (Posicion_actual),hl
 314+ 9098 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9099 C9           	ret
 316+ 909A
 317+ 909A              ; --------------------
 318+ 909A              ;
 319+ 909A              ;	22/01/23
 320+ 909A              ;
 321+ 909A              ;	E="1". Hemos cambiado de cuadrante.
 322+ 909A              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 909A              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 909A
 325+ 909A
 326+ 909A              Modificaccionne
 327+ 909A
 328+ 909A 3A 62 89     	ld a,(Cuad_objeto)
 329+ 909D FE 02        	cp 2
 330+ 909F CC 82 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 90A2 DC 82 90         call c,Modifica_Pos_actual
 332+ 90A5 C8           	ret z
 333+ 90A6 CD 8E 90         call Modifica_Pos_actual2
 334+ 90A9 C9               ret
 335+ 90AA
 336+ 90AA              ; *************************************************************************************************************************************************************************************************
 337+ 90AA              ;
 338+ 90AA              ;	13/8/22
 339+ 90AA              ;
 340+ 90AA              ;	Inicializacion
 341+ 90AA              ;
 342+ 90AA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 90AA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 90AA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 90AA              ;
 346+ 90AA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 90AA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 90AA              ;	_ desaparece/aparece.
 349+ 90AA
 350+ 90AA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 90AA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 90AA              ;
 353+ 90AA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 90AA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 90AA              ; 		   [E] ="0"
 356+ 90AA
 357+ 90AA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 90AA
 359+ 90AA CD EC 9E     Inicializacion call calcula_tercio
 360+ 90AD 28 36        	jr z,primit
 361+ 90AF E6 02        	and 2
 362+ 90B1 20 07        	jr nz,segmit
 363+ 90B3 7D           	ld a,l
 364+ 90B4 FE 7F        	cp $7f
 365+ 90B6 38 2D        	jr c,primit
 366+ 90B8 28 2B        	jr z,primit
 367+ 90BA CD 20 91     segmit call column
 368+ 90BD 38 13        	jr c,tercuad
 369+ 90BF 3E 04        cuarcuad ld a,4
 370+ 90C1 32 62 89     	ld (Cuad_objeto),a
 371+ 90C4 21 20 48     	ld hl,$4820
 372+ 90C7 22 72 89     	ld (Limite_horizontal),hl
 373+ 90CA 21 74 89     	ld hl,Limite_vertical
 374+ 90CD 36 0D        	ld (hl),$0d
 375+ 90CF 08           	ex af,af
 376+ 90D0 18 3C        	jr 1F
 377+ 90D2              tercuad
 378+ 90D2 3E 03        	ld a,3
 379+ 90D4 32 62 89     	ld (Cuad_objeto),a
 380+ 90D7 21 20 48     	ld hl,$4820
 381+ 90DA 22 72 89     	ld (Limite_horizontal),hl
 382+ 90DD 21 74 89     	ld hl,Limite_vertical
 383+ 90E0 36 12        	ld (hl),$12
 384+ 90E2 08           	ex af,af
 385+ 90E3 18 29        	jr 1F
 386+ 90E5 CD 20 91     primit call column
 387+ 90E8 38 13        	jr c, primcuad
 388+ 90EA              segcuad
 389+ 90EA 3E 02        	ld a,2
 390+ 90EC 32 62 89     	ld (Cuad_objeto),a
 391+ 90EF 21 C0 4F     	ld hl,$4fc0
 392+ 90F2 22 72 89     	ld (Limite_horizontal),hl
 393+ 90F5 21 74 89     	ld hl,Limite_vertical
 394+ 90F8 36 0D        	ld (hl),$0d
 395+ 90FA 08           	ex af,af
 396+ 90FB 18 11        	jr 1F
 397+ 90FD              primcuad
 398+ 90FD 3E 01        	ld a,1
 399+ 90FF 32 62 89     	ld (Cuad_objeto),a
 400+ 9102 21 C0 4F     	ld hl,$4fc0
 401+ 9105 22 72 89     	ld (Limite_horizontal),hl
 402+ 9108 21 74 89     	ld hl,Limite_vertical
 403+ 910B 36 12        	ld (hl),$12
 404+ 910D 08           	ex af,af
 405+ 910E
 406+ 910E C5           1 push bc
 407+ 910F E5           	push hl
 408+ 9110 D5           	push de
 409+ 9111
 410+ 9111 2A 50 89     	ld hl,(Posicion_actual)
 411+ 9114 CD 0A 9F     	call Genera_coordenadas
 412+ 9117
 413+ 9117 D1           	pop de
 414+ 9118 E1           	pop hl
 415+ 9119 C1           	pop bc
 416+ 911A
 417+ 911A 21 70 89     	ld hl,Ctrl_0
 418+ 911D CB EE        	set 5,(hl)
 419+ 911F C9           	ret
 420+ 9120
 421+ 9120              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9120
 423+ 9120              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9120              ;
 425+ 9120              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9120
 427+ 9120 7D           column ld a,l
 428+ 9121 E6 1F        	and $1f
 429+ 9123 FE 10         	cp $10
 430+ 9125 C9            	ret
 431+ 9126
 432+ 9126              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9126              ;
 434+ 9126              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9126              ;
 436+ 9126              ; 14/12/22
 437+ 9126              ;
 438+ 9126              ;	Modifica: A y BC.
 439+ 9126
 440+ 9126 3A 62 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9129 E6 01        	and 1
 442+ 912B 28 17        	jr z,1F
 443+ 912D
 444+ 912D              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 912D
 446+ 912D 3A 54 89     	ld a,(Coordenada_X)
 447+ 9130 47           	ld b,a
 448+ 9131 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9132 79           	ld a,c
 450+ 9133 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9134 38 08        	jr c,2F
 452+ 9136 47           	ld b,a
 453+ 9137 79           	ld a,c
 454+ 9138 90           	sub b
 455+ 9139 32 71 89     	ld (Columnas),a
 456+ 913C 18 1B        	jr 4F
 457+ 913E 79           2 ld a,c
 458+ 913F 32 71 89     	ld (Columnas),a
 459+ 9142 18 15        	jr 4F
 460+ 9144
 461+ 9144              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9144
 463+ 9144 3A 54 89     1 ld a,(Coordenada_X)
 464+ 9147 81           	add c
 465+ 9148 3D           	dec a
 466+ 9149 D6 1F        	sub $1f
 467+ 914B 38 08        	jr c,3F
 468+ 914D 47           	ld b,a
 469+ 914E 79           	ld a,c
 470+ 914F 90           	sub b
 471+ 9150 32 71 89     	ld (Columnas),a
 472+ 9153 18 04        	jr 4F
 473+ 9155 79           3 ld a,c
 474+ 9156 32 71 89     	ld (Columnas),a
 475+ 9159 D9           4 exx
 476+ 915A 4F           	ld c,a
 477+ 915B D9           	exx
 478+ 915C C9            ret
 479+ 915D
 480+ 915D              ; --------------------------------------------------------------------------------------------------------------------
 481+ 915D              ;
 482+ 915D              ;   19/7/23
 483+ 915D              ;
 484+ 915D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 915D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 915D              ;
 487+ 915D              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 915D              ;			HL e IY Contienen (Puntero_objeto).
 489+ 915D              ;
 490+ 915D              ;	DESTRUYE: HL,B Y A.
 491+ 915D
 492+ 915D 3A 62 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9160 FE 02        	cp 2
 494+ 9162 38 18        	jr c,1F
 495+ 9164 28 16        	jr z,1F
 496+ 9166 E6 01        	and 1
 497+ 9168 28 0D        	jr z,3F
 498+ 916A
 499+ 916A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 916A
 501+ 916A CD B0 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 916D
 503+ 916D 7D           9 ld a,l
 504+ 916E E6 1F        	and $1f
 505+ 9170 28 2A        	jr z,7F
 506+ 9172 2B           	dec hl
 507+ 9173 10 F8        	djnz 9B
 508+ 9175 18 25        	jr 7F
 509+ 9177
 510+ 9177              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9177
 512+ 9177 2A 50 89     3 ld hl,(Posicion_actual)
 513+ 917A 18 20        	jr 7F
 514+ 917C
 515+ 917C 28 14        1 jr z,2F
 516+ 917E
 517+ 917E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 917E
 519+ 917E CD B0 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9181
 521+ 9181 7D           4 ld a,l
 522+ 9182 E6 1F        	and $1f
 523+ 9184 28 03        	jr z,6F
 524+ 9186 2B           	dec hl
 525+ 9187 10 F8        	djnz 4B
 526+ 9189 06 0F        6 ld b,15
 527+ 918B CD 11 92     5 call PreviousScan
 528+ 918E 10 FB        	djnz 5B
 529+ 9190 18 0A        	jr 7F
 530+ 9192
 531+ 9192              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9192
 533+ 9192 CD B0 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9195 06 0F        	ld b,15
 535+ 9197 CD 11 92     8 call PreviousScan
 536+ 919A 10 FB        	djnz 8B
 537+ 919C
 538+ 919C E5           7 push hl
 539+ 919D DD E1        	pop ix
 540+ 919F
 541+ 919F 2A 52 89     	ld hl,(Puntero_objeto)
 542+ 91A2 E5           	push hl
 543+ 91A3 FD E1        	pop iy
 544+ 91A5
 545+ 91A5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 91A5
 547+ 91A5 3A 70 89     	ld a,(Ctrl_0)
 548+ 91A8 CB 77        	bit 6,a
 549+ 91AA C8           	ret z
 550+ 91AB
 551+ 91AB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 91AB              ; _ entidad / Amadeus´.
 553+ 91AB
 554+ 91AB DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 91AF
 556+ 91AF C9           	ret
 557+ 91B0
 558+ 91B0              ; --------------------------------------------------------------------------------------------------------------------
 559+ 91B0              ;
 560+ 91B0              ;	2/1/23
 561+ 91B0              ;
 562+ 91B0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 91B0              ;
 564+ 91B0              ;	Tras esta rutina tenemos:
 565+ 91B0              ;
 566+ 91B0              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 91B0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 91B0              ;
 569+ 91B0              ;	DESTRUYE!!!!! HL,B y A.
 570+ 91B0
 571+ 91B0 2A 50 89     Operandos ld hl,(Posicion_actual)
 572+ 91B3 3A 71 89     	ld a,(Columnas)
 573+ 91B6 3D           	dec a
 574+ 91B7 20 01        	jr nz,1F
 575+ 91B9 3C           	inc a
 576+ 91BA 47           1 ld b,a
 577+ 91BB C9           	ret
 578+ 91BC
 579+ 91BC              ; --------------------------------------------------------------------------------------------------------------------
 580+ 91BC              ;
 581+ 91BC              ;	3/1/23
 582+ 91BC              ;
 583+ 91BC              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 91BC              ;
 585+ 91BC              ;	Destruye: A,B,HL y DE.
 586+ 91BC
 587+ 91BC              Define_rutina_de_impresion
 588+ 91BC
 589+ 91BC 3A 4F 89     	ld a,(Columns)
 590+ 91BF 47           	ld b,a
 591+ 91C0 3A 71 89     	ld a,(Columnas)
 592+ 91C3 B8           	cp b
 593+ 91C4 20 0D        	jr nz,2f
 594+ 91C6
 595+ 91C6              ;	La entidad se imprime entera.
 596+ 91C6
 597+ 91C6 21 E5 92     	ld hl, Indice_entidades_completas
 598+ 91C9 E6 01        	and 1
 599+ 91CB 28 02        	jr z,1F
 600+ 91CD
 601+ 91CD 23           	inc hl
 602+ 91CE 23           	inc hl
 603+ 91CF
 604+ 91CF CD A7 8B     1 call Extrae_address
 605+ 91D2 C9           	ret		;	ret
 606+ 91D3
 607+ 91D3              ;	La entidad no se imprime entera en pantalla.
 608+ 91D3
 609+ 91D3 3A 62 89     2 ld a,(Cuad_objeto)
 610+ 91D6 E6 01        	and 1
 611+ 91D8 28 17        	jr z,3F
 612+ 91DA
 613+ 91DA              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 91DA
 615+ 91DA 21 E9 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 91DD 3A 4F 89     4 ld a,(Columns)
 617+ 91E0 E6 01        	and 1
 618+ 91E2 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 91E4
 620+ 91E4 23           	inc hl
 621+ 91E5 23           	inc hl
 622+ 91E6
 623+ 91E6 3A 71 89     	ld a,(Columnas)
 624+ 91E9 E6 01        	and 1
 625+ 91EB 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91ED
 627+ 91ED 23           	inc hl
 628+ 91EE 23           	inc hl
 629+ 91EF
 630+ 91EF 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91F1
 632+ 91F1 21 EF 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91F4 18 E7        	jr 4B
 634+ 91F6
 635+ 91F6              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91F6              ;
 637+ 91F6              ;	Prepara_draw
 638+ 91F6              ;
 639+ 91F6              ;	Es una rutina de carga.
 640+ 91F6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91F6              ;
 642+ 91F6              ;	FUNCIONAMIENTO:
 643+ 91F6              ;
 644+ 91F6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91F6              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91F6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91F6              ;
 648+ 91F6              ;	DESTRUYE:
 649+ 91F6              ;
 650+ 91F6              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91F6
 652+ 91F6 21 4E 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 91F9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 91FA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 91FB 4E           	ld c,(hl)
 656+ 91FC 2A 50 89     	ld hl,(Posicion_actual)
 657+ 91FF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9201 C9           	ret
 659+ 9202
 660+ 9202              ;----------------------------------------------------------------------------------------------------------------
 661+ 9202              ;
 662+ 9202              ;	5/08/22
 663+ 9202              ;
 664+ 9202              ;   NextScan.
 665+ 9202              ;
 666+ 9202              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9202              ;
 668+ 9202              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9202              ;
 670+ 9202              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9202              ;
 672+ 9202              ;       DESTRUIDOS: AF y HL !!!
 673+ 9202              ;
 674+ 9202              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9202              ;
 676+ 9202
 677+ 9202 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9203 7C               ld a,h
 679+ 9204 E6 07            and 7
 680+ 9206 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9207
 682+ 9207 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9208 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 920A 6F               ld l,a
 685+ 920B D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 920C
 687+ 920C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 920D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 920F 67               ld h,a
 690+ 9210 C9               ret
 691+ 9211
 692+ 9211              ;----------------------------------------------------------------------------------------------------------------
 693+ 9211              ;
 694+ 9211              ;	5/08/22
 695+ 9211              ;
 696+ 9211              ;   PreviousScan.
 697+ 9211              ;
 698+ 9211              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9211              ;
 700+ 9211              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9211              ;
 702+ 9211              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9211              ;
 704+ 9211              ;       DESTRUIDOS: AF y HL !!!
 705+ 9211              ;
 706+ 9211              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9211              ;
 708+ 9211
 709+ 9211 7C           PreviousScan ld a,h
 710+ 9212 25               dec h               ; Dec H.
 711+ 9213 E6 07            and 7
 712+ 9215 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9216
 714+ 9216 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9217 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9219 6F               ld l,a
 717+ 921A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 921B
 719+ 921B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 921C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 921E 67               ld h,a
 722+ 921F C9               ret
 723+ 9220
 724+ 9220              ; -----------------------------------------------------------------------------------
 725+ 9220              ;
 726+ 9220              ;	31/7/23
 727+ 9220              ;
 728+ 9220              ;	Rutina principal de pintado de entidades.
 729+ 9220              ;	Extrae la foto del frame, (entidades).
 730+ 9220
 731+ 9220              Extrae_foto_entidades
 732+ 9220
 733+ 9220 21 01 80     	ld hl,Album_de_fotos+1
 734+ 9223 7E           	ld a,(hl)
 735+ 9224 A7           	and a
 736+ 9225 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9226
 738+ 9226              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9226
 740+ 9226 3A 9B 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9229 A7           	and a
 742+ 922A C8           	ret z
 743+ 922B
 744+ 922B              ; -----------------------------------
 745+ 922B
 746+ 922B ED 73 A0 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 922F 31 00 80     	ld sp,Album_de_fotos
 748+ 9232
 749+ 9232 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9234 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9235 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9236
 753+ 9236 ED 73 A2 89  	ld (Stack_2),sp
 754+ 923A ED 7B A0 89  	ld sp,(Stack)
 755+ 923E
 756+ 923E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 923E
 758+ 923E 3E CD        	ld a,$cd
 759+ 9240 32 48 92     	ld (Imprime),a
 760+ 9243 EB           	ex de,hl
 761+ 9244 22 49 92     	ld (Imprime+1),hl
 762+ 9247 EB           	ex de,hl
 763+ 9248
 764+ 9248              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9248
 766+ 9248 00 00 00     Imprime db 0,0,0
 767+ 924B
 768+ 924B ED 73 A0 89  	ld (Stack),sp
 769+ 924F
 770+ 924F 3A 9B 89     	ld a,(Numero_de_malotes)
 771+ 9252 3D           	dec a
 772+ 9253 28 09        	jr z,1F
 773+ 9255 32 9B 89      	ld (Numero_de_malotes),a
 774+ 9258
 775+ 9258 ED 7B A2 89  	ld sp,(Stack_2)
 776+ 925C 18 D4        	jr 2B
 777+ 925E
 778+ 925E AF           1 xor a
 779+ 925F 32 A2 89     	ld (Stack_2),a
 780+ 9262
 781+ 9262 C9           	ret
 782+ 9263
 783+ 9263              ; -----------------------------------------------------------------------------------
 784+ 9263              ;
 785+ 9263              ;	28/2/23
 786+ 9263              ;
 787+ 9263              ;	Pinta los disparos generados.
 788+ 9263
 789+ 9263              Extrae_foto_disparos
 790+ 9263
 791+ 9263 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9266 7E               ld a,(hl)
 793+ 9267 A7               and a
 794+ 9268 C8               ret z
 795+ 9269
 796+ 9269 3A B0 89     	ld a,(Numero_de_disparotes)
 797+ 926C A7           	and a
 798+ 926D C8           	ret z
 799+ 926E ED 73 A0 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9272 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9275
 802+ 9275 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9277 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9278 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9279
 806+ 9279 ED 73 A2 89  	ld (Stack_2),sp
 807+ 927D ED 7B A0 89  	ld sp,(Stack)
 808+ 9281
 809+ 9281              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9281
 811+ 9281 3E CD        	ld a,$cd
 812+ 9283 32 8B 92     	ld (Imprime2),a
 813+ 9286 EB           	ex de,hl
 814+ 9287 22 8C 92     	ld (Imprime2+1),hl
 815+ 928A EB           	ex de,hl
 816+ 928B
 817+ 928B              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 928B
 819+ 928B 00 00 00     Imprime2 db 0,0,0
 820+ 928E
 821+ 928E 3A B0 89     	ld a,(Numero_de_disparotes)
 822+ 9291 3D           	dec a
 823+ 9292 28 09        	jr z,1F
 824+ 9294 32 B0 89      	ld (Numero_de_disparotes),a
 825+ 9297
 826+ 9297 ED 7B A2 89  	ld sp,(Stack_2)
 827+ 929B 18 D8        	jr 2B
 828+ 929D
 829+ 929D AF           1 xor a
 830+ 929E 32 A2 89     	ld (Stack_2),a
 831+ 92A1 C9           	ret
 832+ 92A2
 833+ 92A2              ; -----------------------------------------------------------------------------------
 834+ 92A2              ;
 835+ 92A2              ;	4/9/23
 836+ 92A2              ;
 837+ 92A2              ;	Rutina principal de pintado de Amadeus.
 838+ 92A2              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 92A2
 840+ 92A2 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 92A5 7E           	ld a,(hl)
 842+ 92A6 A7           	and a
 843+ 92A7 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92A8
 845+ 92A8 3A 9B 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92AB A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92AC C8           	ret z
 848+ 92AD
 849+ 92AD              ; -----------------------------------
 850+ 92AD
 851+ 92AD ED 73 A0 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 92B1 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 92B4
 854+ 92B4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92B6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92B7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92B8
 858+ 92B8 ED 73 A2 89  	ld (Stack_2),sp
 859+ 92BC ED 7B A0 89  	ld sp,(Stack)
 860+ 92C0
 861+ 92C0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92C0
 863+ 92C0 3E CD        	ld a,$cd
 864+ 92C2 32 CA 92     	ld (Imprime_Amadeus),a
 865+ 92C5 EB           	ex de,hl
 866+ 92C6 22 CB 92     	ld (Imprime_Amadeus+1),hl
 867+ 92C9 EB           	ex de,hl
 868+ 92CA
 869+ 92CA              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92CA
 871+ 92CA 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 92CD
 873+ 92CD ED 73 A0 89  	ld (Stack),sp
 874+ 92D1
 875+ 92D1 3A 9B 89     	ld a,(Numero_de_malotes)
 876+ 92D4 3D           	dec a
 877+ 92D5 28 09        	jr z,1F
 878+ 92D7 32 9B 89      	ld (Numero_de_malotes),a
 879+ 92DA
 880+ 92DA ED 7B A2 89  	ld sp,(Stack_2)
 881+ 92DE 18 D4        	jr 2B
 882+ 92E0
 883+ 92E0 AF           1 xor a
 884+ 92E1 32 A2 89     	ld (Stack_2),a
 885+ 92E4
 886+ 92E4 C9           	ret
# file closed: Draw_XOR.asm
1727  92E5              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92E5              ;   índices de Rutinas de impresión.
   2+ 92E5
   3+ 92E5 F5 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92E7 22 93            defw Pinta_Amadeus_3x2
   5+ 92E9
   6+ 92E9 78 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92EB 18 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92ED CC 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92EF
  10+ 92EF A2 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92F1 A6 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92F3 5A 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92F5
  14+ 92F5
  15+ 92F5              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92F5              ;
  17+ 92F5              ;   12/12/22
  18+ 92F5              ;
  19+ 92F5              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92F5              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92F5              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92F5              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92F5              ;
  24+ 92F5              ;   Modifica: DE y HL.
  25+ 92F5
  26+ 92F5 ED 73 A0 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92F9 FD F9        	ld sp,iy
  28+ 92FB 06 10            ld b,16
  29+ 92FD D1           1 pop de
  30+ 92FE 7B               ld a,e
  31+ 92FF AE               xor (hl)
  32+ 9300 77           	ld (hl),a
  33+ 9301 23           	inc hl
  34+ 9302 7A               ld a,d
  35+ 9303 AE               xor (hl)
  36+ 9304 77           	ld (hl),a
  37+ 9305 2B           	dec hl
  38+ 9306 24           	inc h
  39+ 9307 7C               ld a,h
  40+ 9308 E6 07            and 7
  41+ 930A 20 0A            jr nz,2F
  42+ 930C 7D               ld a,l
  43+ 930D C6 20            add a,$20
  44+ 930F 6F               ld l,a
  45+ 9310 38 04            jr c,2F
  46+ 9312 7C               ld a,h
  47+ 9313 D6 08            sub 8
  48+ 9315 67               ld h,a
  49+ 9316 7C           2 ld a,h
  50+ 9317 FE 58            cp $58
  51+ 9319 28 02            jr z,3F
  52+ 931B 10 E0            djnz 1B
  53+ 931D ED 7B A0 89  3 ld sp,(Stack)
  54+ 9321 C9           	ret
  55+ 9322
  56+ 9322 ED 73 A0 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9326 FD F9        	ld sp,iy
  58+ 9328 06 08            ld b,8
  59+ 932A D1           1 pop de
  60+ 932B 7B               ld a,e
  61+ 932C AE               xor (hl)
  62+ 932D 77           	ld (hl),a
  63+ 932E 23           	inc hl
  64+ 932F 7A               ld a,d
  65+ 9330 AE               xor (hl)
  66+ 9331 77           	ld (hl),a
  67+ 9332 23           	inc hl
  68+ 9333 D1           	pop de
  69+ 9334 7B               ld a,e
  70+ 9335 AE               xor (hl)
  71+ 9336 77           	ld (hl),a
  72+ 9337 2B           	dec hl
  73+ 9338 2B           	dec hl
  74+ 9339 24           	inc h
  75+ 933A 7C               ld a,h
  76+ 933B E6 07            and 7
  77+ 933D 20 0A            jr nz,2F
  78+ 933F 7D               ld a,l
  79+ 9340 C6 20            add a,$20
  80+ 9342 6F               ld l,a
  81+ 9343 38 04            jr c,2F
  82+ 9345 7C               ld a,h
  83+ 9346 D6 08            sub 8
  84+ 9348 67               ld h,a
  85+ 9349 7C           2 ld a,h
  86+ 934A FE 58            cp $58
  87+ 934C 28 25            jr z,4F
  88+ 934E 7A               ld a,d
  89+ 934F AE               xor (hl)
  90+ 9350 77               ld (hl),a
  91+ 9351 D1           	pop de
  92+ 9352 23           	inc hl
  93+ 9353 7B               ld a,e
  94+ 9354 AE               xor (hl)
  95+ 9355 77           	ld (hl),a
  96+ 9356 23           	inc hl
  97+ 9357 7A               ld a,d
  98+ 9358 AE               xor (hl)
  99+ 9359 77           	ld (hl),a
 100+ 935A 2B           	dec hl
 101+ 935B 2B           	dec hl
 102+ 935C 24           	inc h
 103+ 935D 7C               ld a,h
 104+ 935E E6 07            and 7
 105+ 9360 20 0A            jr nz,3F
 106+ 9362 7D               ld a,l
 107+ 9363 C6 20            add a,$20
 108+ 9365 6F               ld l,a
 109+ 9366 38 04            jr c,3F
 110+ 9368 7C               ld a,h
 111+ 9369 D6 08            sub 8
 112+ 936B 67               ld h,a
 113+ 936C 7C           3 ld a,h
 114+ 936D FE 58            cp $58
 115+ 936F 28 02            jr z,4F
 116+ 9371 10 B7            djnz 1B
 117+ 9373 ED 7B A0 89  4 ld sp,(Stack)
 118+ 9377 C9           	ret
 119+ 9378
 120+ 9378              ; ---------------------------------------------------
 121+ 9378
 122+ 9378 ED 73 A0 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 937C FD F9        	ld sp,iy
 124+ 937E
 125+ 937E              ; >>>
 126+ 937E
 127+ 937E 06 10            ld b,16
 128+ 9380 D1           1 pop de
 129+ 9381 7A           	ld a,d
 130+ 9382 AE           	xor (hl)
 131+ 9383 77           	ld (hl),a
 132+ 9384 24           	inc h
 133+ 9385 7C               ld a,h
 134+ 9386 E6 07            and 7
 135+ 9388 20 0C            jr nz,2F
 136+ 938A 7D               ld a,l
 137+ 938B C6 20            add a,$20
 138+ 938D 6F               ld l,a
 139+ 938E 38 06            jr c,2F
 140+ 9390 7C               ld a,h
 141+ 9391 D6 08            sub 8
 142+ 9393 67               ld h,a
 143+ 9394 18 00            jr 2F
 144+ 9396 7C           2 ld a,h
 145+ 9397 FE 58            cp $58
 146+ 9399 28 02            jr z,3F
 147+ 939B 10 E3            djnz 1B
 148+ 939D ED 7B A0 89  3 ld sp,(Stack)
 149+ 93A1 C9           	ret
 150+ 93A2
 151+ 93A2 ED 73 A0 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93A6 FD F9        	ld sp,iy
 153+ 93A8
 154+ 93A8              ; >>>
 155+ 93A8
 156+ 93A8 06 10            ld b,16
 157+ 93AA D1           1 pop de
 158+ 93AB 7B           	ld a,e
 159+ 93AC AE           	xor (hl)
 160+ 93AD 77           	ld (hl),a
 161+ 93AE 24           	inc h
 162+ 93AF 7C               ld a,h
 163+ 93B0 E6 07            and 7
 164+ 93B2 20 0C            jr nz,2F
 165+ 93B4 7D               ld a,l
 166+ 93B5 C6 20            add a,$20
 167+ 93B7 6F               ld l,a
 168+ 93B8 38 06            jr c,2F
 169+ 93BA 7C               ld a,h
 170+ 93BB D6 08            sub 8
 171+ 93BD 67               ld h,a
 172+ 93BE 18 00            jr 2F
 173+ 93C0 7C           2 ld a,h
 174+ 93C1 FE 58            cp $58
 175+ 93C3 28 02            jr z,3F
 176+ 93C5 10 E3            djnz 1B
 177+ 93C7 ED 7B A0 89  3 ld sp,(Stack)
 178+ 93CB C9           	ret
 179+ 93CC
 180+ 93CC              ; ---------------------------------------------------
 181+ 93CC
 182+ 93CC ED 73 A0 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93D0 FD F9        	ld sp,iy
 184+ 93D2 06 08            ld b,8
 185+ 93D4 D1           1 pop de
 186+ 93D5 7A           	ld a,d
 187+ 93D6 AE           	xor (hl)
 188+ 93D7 77           	ld (hl),a
 189+ 93D8 23           	inc hl
 190+ 93D9 D1           	pop de
 191+ 93DA 7B           	ld a,e
 192+ 93DB AE           	xor (hl)
 193+ 93DC 77           	ld (hl),a
 194+ 93DD 2B           	dec hl
 195+ 93DE 24            	inc h
 196+ 93DF 7C               ld a,h
 197+ 93E0 E6 07            and 7
 198+ 93E2 20 0A            jr nz,2F
 199+ 93E4 7D               ld a,l
 200+ 93E5 C6 20            add a,$20
 201+ 93E7 6F               ld l,a
 202+ 93E8 38 04            jr c,2F
 203+ 93EA 7C               ld a,h
 204+ 93EB D6 08            sub 8
 205+ 93ED 67               ld h,a
 206+ 93EE 7C           2 ld a,h
 207+ 93EF FE 58            cp $58
 208+ 93F1 28 20            jr z,4F
 209+ 93F3 D1               pop de
 210+ 93F4 7B           	ld a,e
 211+ 93F5 AE           	xor (hl)
 212+ 93F6 77           	ld (hl),a
 213+ 93F7 23           	inc hl
 214+ 93F8 7A           	ld a,d
 215+ 93F9 AE           	xor (hl)
 216+ 93FA 77           	ld (hl),a
 217+ 93FB 2B           	dec hl
 218+ 93FC 24           	inc h
 219+ 93FD 7C               ld a,h
 220+ 93FE E6 07            and 7
 221+ 9400 20 0A            jr nz,3F
 222+ 9402 7D               ld a,l
 223+ 9403 C6 20            add a,$20
 224+ 9405 6F               ld l,a
 225+ 9406 38 04            jr c,3F
 226+ 9408 7C               ld a,h
 227+ 9409 D6 08            sub 8
 228+ 940B 67               ld h,a
 229+ 940C 7C           3 ld a,h
 230+ 940D FE 58            cp $58
 231+ 940F 28 02            jr z,4F
 232+ 9411 10 C1            djnz 1B
 233+ 9413 ED 7B A0 89  4 ld sp,(Stack)
 234+ 9417 C9           	ret
 235+ 9418
 236+ 9418 ED 73 A0 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 941C FD F9        	ld sp,iy
 238+ 941E 06 08            ld b,8
 239+ 9420 D1           1 pop de
 240+ 9421 D1           	pop de
 241+ 9422 7B           	ld a,e
 242+ 9423 AE           	xor (hl)
 243+ 9424 77           	ld (hl),a
 244+ 9425 24            	inc h
 245+ 9426 7C               ld a,h
 246+ 9427 E6 07            and 7
 247+ 9429 20 0A            jr nz,2F
 248+ 942B 7D               ld a,l
 249+ 942C C6 20            add a,$20
 250+ 942E 6F               ld l,a
 251+ 942F 38 04            jr c,2F
 252+ 9431 7C               ld a,h
 253+ 9432 D6 08            sub 8
 254+ 9434 67               ld h,a
 255+ 9435 7C           2 ld a,h
 256+ 9436 FE 58            cp $58
 257+ 9438 28 1B            jr z,4F
 258+ 943A D1               pop de
 259+ 943B 7A           	ld a,d
 260+ 943C AE           	xor (hl)
 261+ 943D 77           	ld (hl),a
 262+ 943E 24           	inc h
 263+ 943F 7C               ld a,h
 264+ 9440 E6 07            and 7
 265+ 9442 20 0A            jr nz,3F
 266+ 9444 7D               ld a,l
 267+ 9445 C6 20            add a,$20
 268+ 9447 6F               ld l,a
 269+ 9448 38 04            jr c,3F
 270+ 944A 7C               ld a,h
 271+ 944B D6 08            sub 8
 272+ 944D 67               ld h,a
 273+ 944E 7C           3 ld a,h
 274+ 944F FE 58            cp $58
 275+ 9451 28 02            jr z,4F
 276+ 9453 10 CB            djnz 1B
 277+ 9455 ED 7B A0 89  4 ld sp,(Stack)
 278+ 9459 C9           	ret
 279+ 945A
 280+ 945A ED 73 A0 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 945E FD F9        	ld sp,iy
 282+ 9460 06 08            ld b,8
 283+ 9462 D1           1 pop de
 284+ 9463 7B           	ld a,e
 285+ 9464 AE           	xor (hl)
 286+ 9465 77           	ld (hl),a
 287+ 9466 23           	inc hl
 288+ 9467 7A           	ld a,d
 289+ 9468 AE           	xor (hl)
 290+ 9469 77           	ld (hl),a
 291+ 946A 2B           	dec hl
 292+ 946B 24             	inc h
 293+ 946C 7C               ld a,h
 294+ 946D E6 07            and 7
 295+ 946F 20 0A            jr nz,2F
 296+ 9471 7D               ld a,l
 297+ 9472 C6 20            add a,$20
 298+ 9474 6F               ld l,a
 299+ 9475 38 04            jr c,2F
 300+ 9477 7C               ld a,h
 301+ 9478 D6 08            sub 8
 302+ 947A 67               ld h,a
 303+ 947B 7C           2 ld a,h
 304+ 947C FE 58            cp $58
 305+ 947E 28 21            jr z,4F
 306+ 9480 D1               pop de
 307+ 9481 7A           	ld a,d
 308+ 9482 AE           	xor (hl)
 309+ 9483 77           	ld (hl),a
 310+ 9484 23           	inc hl
 311+ 9485 D1               pop de
 312+ 9486 7B           	ld a,e
 313+ 9487 AE           	xor (hl)
 314+ 9488 77           	ld (hl),a
 315+ 9489 2B           	dec hl
 316+ 948A 24           	inc h
 317+ 948B 7C               ld a,h
 318+ 948C E6 07            and 7
 319+ 948E 20 0A            jr nz,3F
 320+ 9490 7D               ld a,l
 321+ 9491 C6 20            add a,$20
 322+ 9493 6F               ld l,a
 323+ 9494 38 04            jr c,3F
 324+ 9496 7C               ld a,h
 325+ 9497 D6 08            sub 8
 326+ 9499 67               ld h,a
 327+ 949A 7C           3 ld a,h
 328+ 949B FE 58            cp $58
 329+ 949D 28 02            jr z,4F
 330+ 949F 10 C1            djnz 1B
 331+ 94A1 ED 7B A0 89  4 ld sp,(Stack)
 332+ 94A5 C9           	ret
 333+ 94A6
 334+ 94A6 ED 73 A0 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 94AA FD F9        	ld sp,iy
 336+ 94AC 06 08            ld b,8
 337+ 94AE D1           1 pop de
 338+ 94AF 7B           	ld a,e
 339+ 94B0 AE           	xor (hl)
 340+ 94B1 77           	ld (hl),a
 341+ 94B2 24            	inc h
 342+ 94B3 7C               ld a,h
 343+ 94B4 E6 07            and 7
 344+ 94B6 20 0A            jr nz,2F
 345+ 94B8 7D               ld a,l
 346+ 94B9 C6 20            add a,$20
 347+ 94BB 6F               ld l,a
 348+ 94BC 38 04            jr c,2F
 349+ 94BE 7C               ld a,h
 350+ 94BF D6 08            sub 8
 351+ 94C1 67               ld h,a
 352+ 94C2 7C           2 ld a,h
 353+ 94C3 FE 58            cp $58
 354+ 94C5 28 1C            jr z,4F
 355+ 94C7 D1               pop de
 356+ 94C8 7A           	ld a,d
 357+ 94C9 AE           	xor (hl)
 358+ 94CA 77           	ld (hl),a
 359+ 94CB 24           	inc h
 360+ 94CC 7C               ld a,h
 361+ 94CD E6 07            and 7
 362+ 94CF 20 0A            jr nz,3F
 363+ 94D1 7D               ld a,l
 364+ 94D2 C6 20            add a,$20
 365+ 94D4 6F               ld l,a
 366+ 94D5 38 04            jr c,3F
 367+ 94D7 7C               ld a,h
 368+ 94D8 D6 08            sub 8
 369+ 94DA 67               ld h,a
 370+ 94DB 7C           3 ld a,h
 371+ 94DC FE 58            cp $58
 372+ 94DE 28 03            jr z,4F
 373+ 94E0 D1               pop de
 374+ 94E1 10 CB            djnz 1B
 375+ 94E3 ED 7B A0 89  4 ld sp,(Stack)
 376+ 94E7 C9           	ret
 377+ 94E8
 378+ 94E8              ; ---------------------------------------------------
 379+ 94E8              ;
 380+ 94E8              ;   27/02/23
 381+ 94E8              ;
 382+ 94E8              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94E8              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94E8              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94E8
 386+ 94E8 ED 73 A0 89  Pinta_Disparo ld (Stack),sp
 387+ 94EC FD F9            ld sp,iy
 388+ 94EE 06 03            ld b,3
 389+ 94F0 D1           1 pop de
 390+ 94F1 7B               ld a,e
 391+ 94F2 AE               xor (hl)
 392+ 94F3 77               ld (hl),a
 393+ 94F4 23               inc hl
 394+ 94F5 7A               ld a,d
 395+ 94F6 AE               xor (hl)
 396+ 94F7 77               ld (hl),a
 397+ 94F8 2B               dec hl
 398+ 94F9
 399+ 94F9 24               inc h
 400+ 94FA 7C               ld a,h
 401+ 94FB E6 07            and 7
 402+ 94FD 20 0A            jr nz,2F
 403+ 94FF 7D               ld a,l
 404+ 9500 C6 20            add a,$20
 405+ 9502 6F               ld l,a
 406+ 9503 38 04            jr c,2F
 407+ 9505 7C               ld a,h
 408+ 9506 D6 08            sub 8
 409+ 9508 67               ld h,a
 410+ 9509 7C           2 ld a,h
 411+ 950A FE 58            cp $58
 412+ 950C 28 02            jr z,3F
 413+ 950E
 414+ 950E 10 E0            djnz 1B
 415+ 9510 ED 7B A0 89  3 ld sp,(Stack)
 416+ 9514 C9               ret
 417+ 9515
# file closed: Rutinas_de_impresion_sprites.asm
1728  9515              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9515
   2+ 9515              ; ******************************************************************************************************************************************************************************************
   3+ 9515              ;
   4+ 9515              ;   20/05/23
   5+ 9515              ;
   6+ 9515              ;	Recompone_posicion_inicio
   7+ 9515              ;
   8+ 9515              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9515              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9515              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9515              ;	_ a una u otra rutina.
  12+ 9515
  13+ 9515              Recompone_posicion_inicio
  14+ 9515
  15+ 9515 2A 60 89     	ld hl,(Posicion_inicio)
  16+ 9518 7D           	ld a,l
  17+ 9519 E6 1F        	and $1f
  18+ 951B 28 16        	jr z,1F
  19+ 951D
  20+ 951D FE 1F        	cp $1f
  21+ 951F 28 0D        	jr z,3F
  22+ 9521
  23+ 9521 21 75 89     	ld hl,Ctrl_2
  24+ 9524 CB C6        	set 0,(hl)
  25+ 9526 2A 52 89     	ld hl,(Puntero_objeto)
  26+ 9529 22 90 89     	ld (Repone_puntero_objeto),hl
  27+ 952C 18 08        	jr 2F
  28+ 952E
  29+ 952E CD DC 96     3 call Mov_left
  30+ 9531 18 03        	jr 2F
  31+ 9533
  32+ 9533 CD B9 95     1 call Mov_right
  33+ 9536 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9539 22 52 89     	ld (Puntero_objeto),hl
  35+ 953C C9           	ret
  36+ 953D
  37+ 953D              ; ******************************************************************************************************************************************************************************************
  38+ 953D              ;
  39+ 953D              ;   27/05/23
  40+ 953D              ;
  41+ 953D              ;	Mov_down
  42+ 953D              ;
  43+ 953D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953D              ;
  45+ 953D              ;
  46+ 953D              Mov_down
  47+ 953D
  48+ 953D CD A7 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9540              ;																	; _ repone (Puntero_objeto).
  50+ 9540 21 70 89     	ld hl,Ctrl_0
  51+ 9543 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9545              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9545              ; 																	; _ en el caso de que no lo haya.
  54+ 9545 3A 7A 89     	ld a,(Vel_down)
  55+ 9548 47           	ld b,a
  56+ 9549 2A 50 89         ld hl,(Posicion_actual)
  57+ 954C CD EC 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 954F E6 02        	and 2
  59+ 9551 28 17        	jr z,1F
  60+ 9553
  61+ 9553              ; Nos encontramos en el último tercio de pantalla.
  62+ 9553              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9553
  64+ 9553 7C           	ld a,h
  65+ 9554 FE 57        	cp $57
  66+ 9556 20 12        	jr nz,1F
  67+ 9558
  68+ 9558 7D           	ld a,l
  69+ 9559 C6 20        	add $20
  70+ 955B 30 0D        	jr nc,1F
  71+ 955D
  72+ 955D              ; ------------------------------
  73+ 955D              ;
  74+ 955D              ;	12/01/24
  75+ 955D
  76+ 955D              ;	call Reaparece_arriba
  77+ 955D CD 69 98     	call Reinicio
  78+ 9560
  79+ 9560              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9560
  81+ 9560 3A AE 89     	ld a,(Ctrl_3)
  82+ 9563 CB CF        	set 1,a
  83+ 9565 32 AE 89     	ld (Ctrl_3),a
  84+ 9568
  85+ 9568 18 08        	jr 3F
  86+ 956A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956A              ; ------------------------------
  89+ 956A
  90+ 956A CD 02 92     1 call NextScan
  91+ 956D 22 50 89     	ld (Posicion_actual),hl
  92+ 9570 10 DA            djnz 2B
  93+ 9572 CD 0A 9F     3 call Genera_coordenadas
  94+ 9575 C9           	ret
  95+ 9576
  96+ 9576              ; ******************************************************************************************************************************************************************************************
  97+ 9576              ;
  98+ 9576              ;   27/05/23
  99+ 9576              ;
 100+ 9576              ;	Mov_up
 101+ 9576              ;
 102+ 9576              ; 	Mueve el Sprite hacia arriba.
 103+ 9576              ;
 104+ 9576              ;
 105+ 9576              Mov_up
 106+ 9576
 107+ 9576 CD A7 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9579              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9579 21 70 89     	ld hl,Ctrl_0
 110+ 957C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957E              ; 																		; _ en el caso de que no lo haya.
 113+ 957E 3A 79 89     	ld a,(Vel_up)
 114+ 9581 47           	ld b,a
 115+ 9582 2A 50 89     	ld hl,(Posicion_actual)
 116+ 9585 CD EC 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9588 A7           	and a
 118+ 9589 20 10        	jr nz,1F
 119+ 958B
 120+ 958B              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958B
 123+ 958B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958E 20 0B            jr nz,1F
 126+ 9590 7D               ld a,l
 127+ 9591 D6 20            sub $20
 128+ 9593 30 06            jr nc,1F
 129+ 9595 25               dec h
 130+ 9596
 131+ 9596              ; -----------------------------
 132+ 9596 CD 4A 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9599              ;	call Reinicio
 134+ 9599              ; -----------------------------
 135+ 9599
 136+ 9599 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959B CD 11 92     1 call PreviousScan
 138+ 959E 22 50 89     	ld (Posicion_actual),hl
 139+ 95A1 10 E2            djnz 3B
 140+ 95A3 CD 0A 9F     2 call Genera_coordenadas
 141+ 95A6 C9           	ret
 142+ 95A7
 143+ 95A7              ; -----------------------------
 144+ 95A7              ;
 145+ 95A7              ;	27/5/23
 146+ 95A7              ;
 147+ 95A7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A7              ;
 150+ 95A7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A7              ;
 153+ 95A7              ;	Modifica: A y (Puntero_objeto).
 154+ 95A7
 155+ 95A7 3A 75 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AA CB 47        	bit 0,a
 157+ 95AC C8           	ret z
 158+ 95AD CB 87        	res 0,a
 159+ 95AF 32 75 89     	ld (Ctrl_2),a
 160+ 95B2 2A 90 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B5 22 52 89     	ld (Puntero_objeto),hl
 162+ 95B8 C9           	ret
 163+ 95B9
 164+ 95B9              ; ******************************************************************************************************************************************************************************************
 165+ 95B9              ;
 166+ 95B9              ;	19/10/22
 167+ 95B9              ;
 168+ 95B9              ;	Mov_right.
 169+ 95B9              ;
 170+ 95B9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95B9              ;
 172+ 95B9
 173+ 95B9 3A 70 89     Mov_right ld a,(Ctrl_0)
 174+ 95BC CB 77        	bit 6,a
 175+ 95BE 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C0
 177+ 95C0 CD F8 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C4
 180+ 95C4 21 70 89     	ld hl,Ctrl_0
 181+ 95C7 CB E6        	set 4,(hl)
 182+ 95C9 18 52        	jr 8F
 183+ 95CB
 184+ 95CB 21 70 89     10 ld hl,Ctrl_0
 185+ 95CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D0              ; 																	; _ en el caso de que no lo haya.
 188+ 95D0 3A 54 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D5 20 46        	jr nz,8F
 191+ 95D7
 192+ 95D7 3A 56 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DA A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DB 28 40        	jr z,8F
 195+ 95DD
 196+ 95DD              ; ---------- ---------- ----------
 197+ 95DD              ;
 198+ 95DD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DD
 200+ 95DD 3A 78 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E2 28 11        	jr z,1F
 203+ 95E4 38 06        	jr c,6F
 204+ 95E6 FE 04        	cp 4
 205+ 95E8 28 14        	jr z,7F
 206+ 95EA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95EC
 208+ 95EC              ; ---------- ---------- ----------
 209+ 95EC              ;
 210+ 95EC              ; Perfiles de velocidad
 211+ 95EC              ;
 212+ 95EC
 213+ 95EC 3A 56 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95EF FE FE        	cp $fe
 215+ 95F1 20 2A        	jr nz,8F
 216+ 95F3 18 10        	jr 3F
 217+ 95F5 3A 56 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F8 FE FD        	cp $fd
 219+ 95FA 20 21        	jr nz,8F
 220+ 95FC 18 07        	jr 3F
 221+ 95FE 3A 56 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9601 FE FB        	cp $fb
 223+ 9603 20 18        	jr nz,8F
 224+ 9605
 225+ 9605              ; ---------- ---------- ----------
 226+ 9605
 227+ 9605              3
 228+ 9605 CD 38 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9608              ;	call Reinicio
 230+ 9608
 231+ 9608              ; ---------- ---------- ----------
 232+ 9608              ;
 233+ 9608              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9608
 235+ 9608 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960B CD 24 96     	call DESPLZ_DER
 238+ 960E C1           	pop bc
 239+ 960F 10 F9        	djnz 5B
 240+ 9611 2A 50 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9614 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9615 22 50 89     	ld (Posicion_actual),hl
 243+ 9618 CD 0A 9F     	call Genera_coordenadas
 244+ 961B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961D
 246+ 961D              ; ---------- ---------- ----------
 247+ 961D
 248+ 961D 2A 50 89     8 ld hl,(Posicion_actual)
 249+ 9620 CD 24 96     	call DESPLZ_DER
 250+ 9623 C9           2 ret
 251+ 9624
 252+ 9624              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9624              ;
 254+ 9624              ;	22/9/22
 255+ 9624              ;
 256+ 9624
 257+ 9624 CD 33 96     DESPLZ_DER call Desplaza_derecha
 258+ 9627 CD 7F 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962A CD A8 96         call Ciclo_completo
 260+ 962D 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9630 CB FE        	set 7,(hl)
 262+ 9632 C9           	ret
 263+ 9633
 264+ 9633              ; ******************************************************************************************************************************************************************************************
 265+ 9633              ;	15/02/23
 266+ 9633              ;
 267+ 9633
 268+ 9633 3A 78 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9636 47           	ld b,a
 270+ 9637 2A 5C 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963A 23           1 inc hl
 272+ 963B 23           	inc hl
 273+ 963C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963E 22 5C 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9641 CD A7 8B     	call Extrae_address
 276+ 9644 22 52 89     	ld (Puntero_objeto),hl
 277+ 9647
 278+ 9647              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9647
 280+ 9647              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9647              ; Cuántos movimientos hemos hecho ??
 282+ 9647              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9647
 284+ 9647 2A 58 89     7 ld hl,(Indice_Sprite_der)
 285+ 964A EB           	ex de,hl
 286+ 964B A7           	and a
 287+ 964C ED 52        	sbc hl,de
 288+ 964E CB 3D        	srl l
 289+ 9650 3E 08        6 ld a,8
 290+ 9652 95           	sub l
 291+ 9653 30 1E        	jr nc,3F
 292+ 9655
 293+ 9655              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9655              ; B="0".
 295+ 9655
 296+ 9655 04           4 inc b
 297+ 9656 3C           	inc a
 298+ 9657 20 FC        	jr nz,4B
 299+ 9659 78           	ld a,b
 300+ 965A 08           	ex af,af
 301+ 965B 2A 58 89     	ld hl,(Indice_Sprite_der)
 302+ 965E 23           5 inc hl
 303+ 965F 23           	inc hl
 304+ 9660 10 FC        	djnz 5B
 305+ 9662 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9665 CD A7 8B     	call Extrae_address
 307+ 9668 22 52 89     	ld (Puntero_objeto),hl
 308+ 966B
 309+ 966B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966B              ; _(Posicion_actual).
 311+ 966B
 312+ 966B 21 50 89     	ld hl,Posicion_actual
 313+ 966E 34           	inc (hl)
 314+ 966F 08               ex af,af
 315+ 9670 6F           	ld l,a
 316+ 9671 18 DD        	jr 6B
 317+ 9673
 318+ 9673              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9673
 320+ 9673 47           3 ld b,a
 321+ 9674 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 322+ 9677 23           2 inc hl
 323+ 9678 23           	inc hl
 324+ 9679 10 FC        	djnz 2B
 325+ 967B 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967E C9           8 ret
 327+ 967F
 328+ 967F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 967F              ;
 330+ 967F              ;	24/7/22
 331+ 967F              ;
 332+ 967F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 967F              ;
 334+ 967F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 967F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 967F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 967F
 338+ 967F 3A 56 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9682 A7           	and a
 340+ 9683 20 1F        	jr nz,1F
 341+ 9685 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9687 32 56 89         ld (CTRL_DESPLZ),a
 343+ 968A
 344+ 968A 21 4F 89     	ld hl,Columns
 345+ 968D 34           	inc (hl)
 346+ 968E 3A 62 89     	ld a,(Cuad_objeto)
 347+ 9691 E6 01        	and 1
 348+ 9693 28 0F        	jr z,1F
 349+ 9695 2A 50 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9698 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9699 22 50 89     	ld (Posicion_actual),hl
 352+ 969C CD 0A 9F     	call Genera_coordenadas
 353+ 969F CD 04 98     	call Inc_CTRL_DESPLZ
 354+ 96A2 18 03        	jr 2F
 355+ 96A4 CD 04 98     1 call Inc_CTRL_DESPLZ
 356+ 96A7 C9           2 ret
 357+ 96A8
 358+ 96A8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A8              ;
 360+ 96A8              ;	24/7/22
 361+ 96A8              ;
 362+ 96A8              ;	Ciclo_completo.
 363+ 96A8              ;
 364+ 96A8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A8              ;
 366+ 96A8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A8              ; 	Decrementamos (Columns).
 368+ 96A8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A8
 371+ 96A8
 372+ 96A8 3A 56 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AB FE FF        	cp $ff
 374+ 96AD 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96AF E6 F0        	and $f0
 376+ 96B1 20 28        	jr nz,3F
 377+ 96B3
 378+ 96B3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B3
 380+ 96B3 3A 56 89     	ld a,(CTRL_DESPLZ)
 381+ 96B6 47           	ld b,a
 382+ 96B7 3E F8        	ld a,$f8
 383+ 96B9 80           	add b
 384+ 96BA 32 56 89     	ld (CTRL_DESPLZ),a
 385+ 96BD 18 1C        	jr 3F
 386+ 96BF 21 4F 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C4 32 56 89     	ld (CTRL_DESPLZ),a
 390+ 96C7 3A 62 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CC 20 0A        	jr nz,2F
 393+ 96CE 2A 50 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D1 23           	inc hl
 395+ 96D2 22 50 89     	ld (Posicion_actual),hl
 396+ 96D5 CD 0A 9F     	call Genera_coordenadas
 397+ 96D8
 398+ 96D8              ; Inicia el puntero de Sprite.
 399+ 96D8
 400+ 96D8 CD BC 8B     2 call Inicia_puntero_objeto_der
 401+ 96DB C9           3 ret
 402+ 96DC
 403+ 96DC              ; ******************************************************************************************************************************************************************************************
 404+ 96DC              ;
 405+ 96DC              ;	15/02/23
 406+ 96DC              ;
 407+ 96DC              ;	Mov_left.
 408+ 96DC              ;
 409+ 96DC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DC              ;
 411+ 96DC              Mov_left
 412+ 96DC
 413+ 96DC 21 70 89     	ld hl,Ctrl_0
 414+ 96DF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E1              ; 																	; _ en el caso de que no lo haya.
 417+ 96E1 3A 70 89     	ld a,(Ctrl_0)
 418+ 96E4 CB 77        	bit 6,a
 419+ 96E6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E8
 421+ 96E8 CD FE 97     	call Stop_Amadeus_left
 422+ 96EB C8           	ret z
 423+ 96EC 20 4A        	jr nz,8F
 424+ 96EE
 425+ 96EE 3A 54 89     11 ld a,(Coordenada_X)
 426+ 96F1 A7           	and a
 427+ 96F2 20 44        	jr nz,8F
 428+ 96F4
 429+ 96F4 3A 56 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FA
 433+ 96FA              ; ---------- ---------- ----------
 434+ 96FA
 435+ 96FA 3A 77 89     	ld a,(Vel_left)
 436+ 96FD FE 02        	cp 2
 437+ 96FF 28 0F        	jr z,1F
 438+ 9701 38 04        	jr c,6F
 439+ 9703 FE 04        	cp 4
 440+ 9705 28 12        	jr z,7F
 441+ 9707
 442+ 9707              ; ---------- ---------- ----------
 443+ 9707
 444+ 9707 3A 56 89     6 ld a,(CTRL_DESPLZ)
 445+ 970A FE F8        	cp $f8
 446+ 970C 20 2A        	jr nz,8F
 447+ 970E 18 10        	jr 4F
 448+ 9710 3A 56 89     1 ld a,(CTRL_DESPLZ)
 449+ 9713 FE F9        	cp $f9
 450+ 9715 20 21        	jr nz,8F
 451+ 9717 18 07        	jr 4F
 452+ 9719 3A 56 89     7 ld a,(CTRL_DESPLZ)
 453+ 971C FE FB        	cp $fb
 454+ 971E 20 18        	jr nz,8F
 455+ 9720
 456+ 9720              ; ---------- ---------- ----------
 457+ 9720
 458+ 9720              4
 459+ 9720 CD 26 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9723              ;	call Reinicio
 461+ 9723
 462+ 9723              ; ---------- ---------- ----------
 463+ 9723
 464+ 9723 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9725 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9726
 467+ 9726              ;	ld hl,(Indice_Sprite_izq)
 468+ 9726              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9726
 470+ 9726 CD 3F 97     	call DESPLZ_IZQ
 471+ 9729 C1           	pop bc
 472+ 972A 10 F9        	djnz 5B
 473+ 972C 2A 50 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 972F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9730 22 50 89     	ld (Posicion_actual),hl
 476+ 9733 CD 0A 9F     	call Genera_coordenadas
 477+ 9736 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9738
 479+ 9738              ; ---------- ---------- ----------
 480+ 9738
 481+ 9738              ; Movemos, no hay recolocación.
 482+ 9738
 483+ 9738 2A 50 89     8 ld hl,(Posicion_actual)
 484+ 973B CD 3F 97     	call DESPLZ_IZQ
 485+ 973E C9           2 ret
 486+ 973F
 487+ 973F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 973F              ;
 489+ 973F              ;	22/9/22
 490+ 973F
 491+ 973F              DESPLZ_IZQ
 492+ 973F
 493+ 973F CD 4E 97     	call Desplaza_izquierda
 494+ 9742 CD 9A 97         call modifica_parametros_1er_DESPLZ
 495+ 9745 CD C2 97     	call Ciclo_completo_2
 496+ 9748 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974B CB BE        	res 7,(hl)
 498+ 974D C9           	ret
 499+ 974E
 500+ 974E              Desplaza_izquierda
 501+ 974E
 502+ 974E 3A 77 89     	ld a,(Vel_left)
 503+ 9751 47           	ld b,a
 504+ 9752 2A 5E 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9755 23           1 inc hl
 506+ 9756 23           	inc hl
 507+ 9757 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9759 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975C CD A7 8B     	call Extrae_address
 510+ 975F 22 52 89     	ld (Puntero_objeto),hl
 511+ 9762
 512+ 9762              ; Modifica (Puntero_DESPLZ_der).
 513+ 9762
 514+ 9762              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9762              ; Cuántos movimientos hemos hecho ??
 516+ 9762              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9762
 518+ 9762 2A 5A 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9765 EB           	ex de,hl
 520+ 9766 A7           	and a
 521+ 9767 ED 52        	sbc hl,de
 522+ 9769 CB 3D        	srl l
 523+ 976B 3E 08        6 ld a,8
 524+ 976D 95           	sub l
 525+ 976E 30 1E        	jr nc,3F
 526+ 9770
 527+ 9770              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9770              ; B="0".
 529+ 9770
 530+ 9770 04           4 inc b
 531+ 9771 3C           	inc a
 532+ 9772 20 FC        	jr nz,4B
 533+ 9774 78           	ld a,b
 534+ 9775 08           	ex af,af
 535+ 9776 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 536+ 9779 23           5 inc hl
 537+ 977A 23           	inc hl
 538+ 977B 10 FC        	djnz 5B
 539+ 977D 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9780 CD A7 8B     	call Extrae_address
 541+ 9783 22 52 89     	ld (Puntero_objeto),hl
 542+ 9786
 543+ 9786              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9786              ; _(Posicion_actual).
 545+ 9786
 546+ 9786 21 50 89     	ld hl,Posicion_actual
 547+ 9789 35           	dec (hl)
 548+ 978A 08           	ex af,af
 549+ 978B 6F           	ld l,a
 550+ 978C 18 DD        	jr 6B
 551+ 978E
 552+ 978E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978E
 554+ 978E 47           3 ld b,a
 555+ 978F 2A 58 89     	ld hl,(Indice_Sprite_der)
 556+ 9792 23           2 inc hl
 557+ 9793 23           	inc hl
 558+ 9794 10 FC        	djnz 2B
 559+ 9796 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9799 C9           8 ret
 561+ 979A
 562+ 979A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979A              ;
 564+ 979A              ;	modifica_parametros_1er_DESPLZ
 565+ 979A              ;
 566+ 979A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979A
 570+ 979A 3A 56 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979D A7           	and a
 572+ 979E 20 1E        	jr nz,1F
 573+ 97A0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A1 32 56 89         ld (CTRL_DESPLZ),a
 575+ 97A4 21 4F 89     	ld hl,Columns
 576+ 97A7 34           	inc (hl)
 577+ 97A8 3A 62 89     	ld a,(Cuad_objeto)
 578+ 97AB E6 01        	and 1
 579+ 97AD 20 0F        	jr nz,1F
 580+ 97AF 2A 50 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B3 22 50 89     	ld (Posicion_actual),hl
 583+ 97B6 CD 0A 9F     	call Genera_coordenadas
 584+ 97B9 CD 15 98     	call Dec_CTRL_DESPLZ
 585+ 97BC 18 03        	jr 2F
 586+ 97BE CD 15 98     1 call Dec_CTRL_DESPLZ
 587+ 97C1 C9           2 ret
 588+ 97C2
 589+ 97C2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C2
 591+ 97C2 3A 56 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C5 FE F7        	cp $f7
 593+ 97C7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97C9 30 2C        	jr nc,3F
 595+ 97CB
 596+ 97CB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CB
 598+ 97CB 06 00        	ld b,0
 599+ 97CD 04           4 inc b
 600+ 97CE 3C           	inc a
 601+ 97CF FE F7        	cp $f7
 602+ 97D1 20 FA        	jr nz,4B
 603+ 97D3 3E FF        	ld a,$ff
 604+ 97D5 90           	sub b
 605+ 97D6 32 56 89     	ld (CTRL_DESPLZ),a
 606+ 97D9 18 1C        	jr 3F
 607+ 97DB
 608+ 97DB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DB
 610+ 97DB 21 4F 89     1 ld hl,Columns
 611+ 97DE 35           	dec (hl)
 612+ 97DF AF           	xor a
 613+ 97E0 32 56 89     	ld (CTRL_DESPLZ),a
 614+ 97E3 3A 62 89     	ld a,(Cuad_objeto)
 615+ 97E6 E6 01        	and 1
 616+ 97E8 28 0A        	jr z,2F
 617+ 97EA 2A 50 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97ED 2B           	dec hl
 619+ 97EE 22 50 89     	ld (Posicion_actual),hl
 620+ 97F1 CD 0A 9F     	call Genera_coordenadas
 621+ 97F4
 622+ 97F4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F4
 624+ 97F4 CD CF 8B     2 call Inicia_puntero_objeto_izq
 625+ 97F7 C9           3 ret
 626+ 97F8
 627+ 97F8              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F8              ;
 629+ 97F8              ;	19/10/22
 630+ 97F8              ;
 631+ 97F8              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F8              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F8
 634+ 97F8 3A 54 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FD C9           	ret
 637+ 97FE
 638+ 97FE              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FE              ;
 640+ 97FE              ;	19/10/22
 641+ 97FE              ;
 642+ 97FE              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FE              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FE
 645+ 97FE 3A 54 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9801 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9803 C9           	ret
 648+ 9804
 649+ 9804              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9804              ;
 651+ 9804              ;	24/7/22
 652+ 9804              ;
 653+ 9804              ;	Inc_CTRL_DESPLZ
 654+ 9804              ;
 655+ 9804              ;
 656+ 9804              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9804
 658+ 9804 21 56 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9807 3A 78 89     	ld a,(Vel_right)
 660+ 980A A7           	and a
 661+ 980B 28 06        	jr z,1F
 662+ 980D 47           	ld b,a
 663+ 980E 34           3 inc (hl)
 664+ 980F 10 FD        	djnz 3B
 665+ 9811 18 01        	jr 2F
 666+ 9813 34           1 inc (hl)
 667+ 9814 C9           2 ret
 668+ 9815
 669+ 9815              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9815              ;
 671+ 9815              ;	5/2/23
 672+ 9815              ;
 673+ 9815              ;	Dec_CTRL_DESPLZ
 674+ 9815              ;
 675+ 9815              ;
 676+ 9815              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9815
 678+ 9815 21 56 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9818 3A 77 89     	ld a,(Vel_left)
 680+ 981B A7           	and a
 681+ 981C 28 06        	jr z,1F
 682+ 981E 47           	ld b,a
 683+ 981F 35           3 dec (hl)
 684+ 9820 10 FD        	djnz 3B
 685+ 9822 18 01        	jr 2F
 686+ 9824 35           1 dec (hl)
 687+ 9825 C9           2 ret
 688+ 9826
 689+ 9826              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9826
 691+ 9826 2A 50 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9829 01 1F 00     	ld bc,31
 693+ 982C A7           	and a
 694+ 982D ED 4A        	adc hl,bc
 695+ 982F 22 50 89     	ld (Posicion_actual),hl
 696+ 9832 21 70 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9835 CB C6        	set 0,(hl)
 698+ 9837 C9           	ret
 699+ 9838
 700+ 9838              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9838
 702+ 9838 2A 50 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983B 01 1F 00     	ld bc,31
 704+ 983E A7           	and a
 705+ 983F ED 42        	sbc hl,bc
 706+ 9841 22 50 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9844 21 70 89     	ld hl,Ctrl_0
 708+ 9847 CB CE        	set 1,(hl)
 709+ 9849 C9           	ret
 710+ 984A
 711+ 984A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984A
 713+ 984A 24           Reaparece_abajo inc h
 714+ 984B 01 E0 17     	ld bc,$17e0
 715+ 984E A7           	and a
 716+ 984F ED 4A        	adc hl,bc
 717+ 9851 22 50 89     	ld (Posicion_actual),hl
 718+ 9854 21 70 89     	ld hl,Ctrl_0
 719+ 9857 CB D6        	set 2,(hl)
 720+ 9859 C9           	ret
 721+ 985A
 722+ 985A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985A
 724+ 985A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985D A7           	and a
 726+ 985E ED 42        	sbc hl,bc
 727+ 9860 22 50 89     	ld (Posicion_actual),hl
 728+ 9863 21 70 89     	ld hl,Ctrl_0
 729+ 9866 CB DE        	set 3,(hl)
 730+ 9868 C9           	ret
 731+ 9869
 732+ 9869              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9869              ;
 734+ 9869              ;	15/07/23
 735+ 9869
 736+ 9869              Reinicio
 737+ 9869
 738+ 9869              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9869
 740+ 9869 AF           	xor a
 741+ 986A 21 87 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986D CD 8B 98     	call Limpia_contenido_hl
 743+ 9870
 744+ 9870 21 50 89     	ld hl,Posicion_actual
 745+ 9873 CD 8B 98     	call Limpia_contenido_hl
 746+ 9876
 747+ 9876 CD 31 8D     	call Inicializa_Puntero_indice_mov
 748+ 9879 CD 57 99     	call Inicia_Puntero_mov
 749+ 987C
 750+ 987C 21 89 89     	ld hl,Incrementa_puntero
 751+ 987F 06 05        	ld b,5
 752+ 9881 77           1 ld (hl),a
 753+ 9882 23           	inc hl
 754+ 9883 10 FC        	djnz 1B
 755+ 9885
 756+ 9885 21 75 89     	ld hl,Ctrl_2
 757+ 9888 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988A
 759+ 988A C9           	ret
 760+ 988B
 761+ 988B 77           Limpia_contenido_hl	ld (hl),a
 762+ 988C 23           	inc hl
 763+ 988D 77           	ld (hl),a
 764+ 988E C9           	ret
 765+ 988F
 766+ 988F
# file closed: Direcciones.asm
1729  988F              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 988F              ; ----- ----- ----- ----- -----
   2+ 988F              ;
   3+ 988F              ;   28/12/23
   4+ 988F
   5+ 988F              Movimiento
   6+ 988F
   7+ 988F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 988F
   9+ 988F 3A 75 89         ld a,(Ctrl_2)
  10+ 9892 CB 57            bit 2,a
  11+ 9894 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9896
  13+ 9896 2A 85 89         ld hl,(Puntero_mov)
  14+ 9899 7E               ld a,(hl)
  15+ 989A
  16+ 989A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989A
  18+ 989A              Inicia_desplazamiento.
  19+ 989A
  20+ 989A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989A
  22+ 989A CD 8D 99         call Ajusta_velocidad_desplazamiento
  23+ 989D
  24+ 989D              ; Iniciamos (Repetimos_mov).
  25+ 989D
  26+ 989D 7E               ld a,(hl)
  27+ 989E E6 0F            and $0f
  28+ 98A0 32 8B 89         ld (Repetimos_desplazamiento),a
  29+ 98A3 32 8C 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A6
  31+ 98A6              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A6
  33+ 98A6 23               inc hl
  34+ 98A7 7E               ld a,(hl)
  35+ 98A8 32 8E 89         ld (Cola_de_desplazamiento),a
  36+ 98AB 2B               dec hl
  37+ 98AC
  38+ 98AC 21 75 89         ld hl,Ctrl_2
  39+ 98AF CB D6            set 2,(hl)
  40+ 98B1
  41+ 98B1              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B1              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B1
  44+ 98B1              Desplazamiento_iniciado
  45+ 98B1
  46+ 98B1 CD 61 99         call Aplica_desplazamiento
  47+ 98B4
  48+ 98B4              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B4
  50+ 98B4 3A AE 89         ld a,(Ctrl_3)
  51+ 98B7 CB 4F            bit 1,a
  52+ 98B9 C0               ret nz
  53+ 98BA
  54+ 98BA 21 8B 89     3 ld hl,Repetimos_desplazamiento
  55+ 98BD 35               dec (hl)
  56+ 98BE C0               ret nz
  57+ 98BF
  58+ 98BF              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98BF              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98BF              ; Analiza (Cola_de_desplazamiento).
  61+ 98BF
  62+ 98BF 3A 8E 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C2 A7               and a
  64+ 98C3 CC B6 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C6 28 30            jr z,Reinicia_el_movimiento
  66+ 98C8
  67+ 98C8 FE FF            cp $ff
  68+ 98CA 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98CC
  70+ 98CC FE FE            cp $fe
  71+ 98CE CC 3B 99         call z,Fijamos_bucle
  72+ 98D1 28 25            jr z,Reinicia_el_movimiento
  73+ 98D3
  74+ 98D3 FE FD            cp $fd
  75+ 98D5 20 11            jr nz,1F
  76+ 98D7
  77+ 98D7              ; ---
  78+ 98D7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D7
  80+ 98D7 3A 75 89         ld a,(Ctrl_2)
  81+ 98DA CB 5F            bit 3,a
  82+ 98DC 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98DE
  84+ 98DE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98DE
  86+ 98DE 21 75 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E1 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E3
  89+ 98E3 CD 4C 99         call Inicia_Repetimos_movimiento
  90+ 98E6 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E8              ; ---
  92+ 98E8
  93+ 98E8 FE 01        1 cp 1
  94+ 98EA CA 25 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98ED
  96+ 98ED 3D               dec a
  97+ 98EE 32 8E 89         ld (Cola_de_desplazamiento),a
  98+ 98F1
  99+ 98F1 3A 8C 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F4 32 8B 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F7              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F7 C9               ret
 103+ 98F8
 104+ 98F8              Reinicia_el_movimiento
 105+ 98F8
 106+ 98F8 3A 75 89         ld a,(Ctrl_2)
 107+ 98FB CB 5F            bit 3,a
 108+ 98FD 28 1B            jr z,2F
 109+ 98FF
 110+ 98FF              ; (Cola_de_desplazamiento)="254".
 111+ 98FF
 112+ 98FF 21 8D 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9902 35               dec (hl)
 114+ 9903 20 15            jr nz,2F
 115+ 9905
 116+ 9905              ; Fin de las repeticiones del último movimiento.
 117+ 9905
 118+ 9905 21 75 89         ld hl,Ctrl_2
 119+ 9908 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990A
 121+ 990A 2A 85 89         ld hl,(Puntero_mov)
 122+ 990D 23               inc hl
 123+ 990E 23               inc hl
 124+ 990F 23               inc hl
 125+ 9910 22 85 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9913              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9913 7E               ld a,(hl)
 128+ 9914 32 8E 89         ld (Cola_de_desplazamiento),a
 129+ 9917
 130+ 9917 C3 BF 98         jp Cola
 131+ 991A
 132+ 991A CD 57 99     2 call Inicia_Puntero_mov
 133+ 991D
 134+ 991D 21 75 89         ld hl,Ctrl_2
 135+ 9920 CB 96            res 2,(hl)
 136+ 9922
 137+ 9922 C3 8F 98         jp Movimiento
 138+ 9925
 139+ 9925              Siguiente_desplazamiento
 140+ 9925
 141+ 9925              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9925              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9925
 144+ 9925 21 75 89         ld hl,Ctrl_2
 145+ 9928 CB 96            res 2,(hl)
 146+ 992A
 147+ 992A 2A 85 89         ld hl,(Puntero_mov)
 148+ 992D 23               inc hl
 149+ 992E 23               inc hl
 150+ 992F 22 85 89         ld (Puntero_mov),hl
 151+ 9932
 152+ 9932 7E               ld a,(hl)
 153+ 9933 A7               and a
 154+ 9934 CC B6 99         call z,Incrementa_Puntero_indice_mov
 155+ 9937 CA F8 98         jp z,Reinicia_el_movimiento
 156+ 993A
 157+ 993A C9               ret
 158+ 993B
 159+ 993B              ; Subrutinas -----------------------------------------
 160+ 993B              ; ---------- --------- --------- ---------- ----------
 161+ 993B              ;
 162+ 993B              ;   24/07/23
 163+ 993B              ;
 164+ 993B              ;   Fijamos_bucle
 165+ 993B              ;
 166+ 993B              ;
 167+ 993B
 168+ 993B              Fijamos_bucle
 169+ 993B
 170+ 993B 3A 89 89         ld a,(Incrementa_puntero)
 171+ 993E 3C               inc a
 172+ 993F 32 8A 89         ld (Incrementa_puntero_backup),a
 173+ 9942
 174+ 9942 CD B6 99         call Incrementa_Puntero_indice_mov
 175+ 9945 2A 83 89         ld hl,(Puntero_indice_mov)
 176+ 9948 22 87 89         ld (Puntero_indice_mov_bucle),hl
 177+ 994B C9               ret
 178+ 994C
 179+ 994C              ; ---------- --------- --------- ---------- ----------
 180+ 994C              ;
 181+ 994C              ;   07/7/23
 182+ 994C              ;
 183+ 994C              ;   Inicia_Repetimos_movimiento
 184+ 994C              ;
 185+ 994C              ;
 186+ 994C
 187+ 994C              Inicia_Repetimos_movimiento
 188+ 994C
 189+ 994C              ; Iniciamos (Repetimos_movimiento).
 190+ 994C
 191+ 994C DD 2A 85 89      ld ix,(Puntero_mov)
 192+ 9950 DD 7E 02         ld a,(ix+2)
 193+ 9953 32 8D 89         ld (Repetimos_movimiento),a
 194+ 9956
 195+ 9956 C9               ret
 196+ 9957
 197+ 9957              ; ---------- --------- --------- ---------- ----------
 198+ 9957              ;
 199+ 9957              ;   26/6/23
 200+ 9957              ;
 201+ 9957              ;   Inicia_Puntero_mov
 202+ 9957              ;
 203+ 9957              ;
 204+ 9957
 205+ 9957 2A 83 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995A CD A7 8B         call Extrae_address
 207+ 995D 22 85 89         ld (Puntero_mov),hl
 208+ 9960 C9               ret
 209+ 9961
 210+ 9961              ; ---------- --------- --------- ---------- ----------
 211+ 9961              ;
 212+ 9961              ;   27/06/23
 213+ 9961              ;
 214+ 9961              ;   Aplica_movimiento.
 215+ 9961
 216+ 9961              Aplica_desplazamiento
 217+ 9961
 218+ 9961              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9961
 220+ 9961 2A 85 89         ld hl, (Puntero_mov)
 221+ 9964
 222+ 9964 7E               ld a,(hl)
 223+ 9965 E6 F0            and $f0
 224+ 9967 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9968
 226+ 9968 CB 7E            bit 7,(hl)
 227+ 996A 28 03            jr z,1F
 228+ 996C CD 76 95         call Mov_up
 229+ 996F 2A 85 89     1 ld hl, (Puntero_mov)
 230+ 9972 CB 76            bit 6,(hl)
 231+ 9974 28 03            jr z,2F
 232+ 9976 CD 3D 95         call Mov_down
 233+ 9979
 234+ 9979              ; Se ha aplicado reinicio ???
 235+ 9979              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9979
 237+ 9979              ;    ld a,(Ctrl_3)
 238+ 9979              ;    bit 1,a
 239+ 9979              ;    ret nz
 240+ 9979
 241+ 9979 2A 85 89     2 ld hl, (Puntero_mov)
 242+ 997C CB 6E            bit 5,(hl)
 243+ 997E 28 03            jr z,3F
 244+ 9980 CD DC 96         call Mov_left
 245+ 9983 2A 85 89     3 ld hl, (Puntero_mov)
 246+ 9986 CB 66            bit 4,(hl)
 247+ 9988 C8               ret z
 248+ 9989 CD B9 95         call Mov_right
 249+ 998C C9               ret
 250+ 998D
 251+ 998D              ; ---------- --------- --------- ---------- ----------
 252+ 998D              ;
 253+ 998D              ;   26/06/23
 254+ 998D              ;
 255+ 998D              ;   Ajusta_velocidad_desplazamiento.
 256+ 998D
 257+ 998D              Ajusta_velocidad_desplazamiento
 258+ 998D
 259+ 998D              ; 1er byte de la cadena de movimiento.
 260+ 998D              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 998D
 262+ 998D CD AB 99         call Extrae_nibble_alto
 263+ 9990
 264+ 9990 32 79 89         ld (Vel_up),a
 265+ 9993 79               ld a,c
 266+ 9994 E6 0F            and $0f
 267+ 9996 32 7A 89         ld (Vel_down),a
 268+ 9999
 269+ 9999              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9999              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9999
 272+ 9999 23               inc hl
 273+ 999A CD AB 99         call Extrae_nibble_alto
 274+ 999D
 275+ 999D 32 77 89         ld (Vel_left),a
 276+ 99A0 79               ld a,c
 277+ 99A1 E6 0F            and $0f
 278+ 99A3 32 78 89         ld (Vel_right),a
 279+ 99A6
 280+ 99A6              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A6
 282+ 99A6 23               inc hl
 283+ 99A7 22 85 89         ld (Puntero_mov),hl
 284+ 99AA C9               ret
 285+ 99AB
 286+ 99AB 06 04        Extrae_nibble_alto ld b,4
 287+ 99AD 7E               ld a,(hl)
 288+ 99AE 4F               ld c,a
 289+ 99AF E6 F0            and $f0
 290+ 99B1 CB 3F        1 srl a
 291+ 99B3 10 FC            djnz 1B
 292+ 99B5 C9               ret
 293+ 99B6
 294+ 99B6              ; ---------- --------- --------- ---------- ----------
 295+ 99B6              ;
 296+ 99B6              ;   5/7/23
 297+ 99B6              ;
 298+ 99B6              ;   Incrementa_Puntero_indice_mov
 299+ 99B6
 300+ 99B6              Incrementa_Puntero_indice_mov
 301+ 99B6
 302+ 99B6 21 89 89         ld hl,Incrementa_puntero
 303+ 99B9 34               inc (hl)
 304+ 99BA
 305+ 99BA 2A 83 89         ld hl,(Puntero_indice_mov)
 306+ 99BD 01 02 00         ld bc,2
 307+ 99C0 A7               and a
 308+ 99C1 09               add hl,bc
 309+ 99C2 22 83 89         ld (Puntero_indice_mov),hl
 310+ 99C5
 311+ 99C5 7E               ld a,(hl)
 312+ 99C6 A7               and a
 313+ 99C7
 314+ 99C7              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C7
 316+ 99C7              ;    jr z,$
 317+ 99C7
 318+ 99C7              ;! Reinicia el Patrón de movimiento.
 319+ 99C7
 320+ 99C7 CC CC 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CA
 322+ 99CA AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99CB
 324+ 99CB C9               ret
 325+ 99CC
 326+ 99CC              ; ---------- --------- --------- ---------- ----------
 327+ 99CC              ;
 328+ 99CC              ;   15/01/24
 329+ 99CC              ;
 330+ 99CC              ;   Inicializa_Puntero_indice_mov
 331+ 99CC
 332+ 99CC              Inicializa_Puntero_indice_mov_2
 333+ 99CC
 334+ 99CC              ; Existe etiqueta de bucle principal???
 335+ 99CC
 336+ 99CC 2A 87 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99CF 24               inc h
 338+ 99D0 25               dec h
 339+ 99D1 28 05            jr z,2F
 340+ 99D3
 341+ 99D3 22 83 89         ld (Puntero_indice_mov),hl
 342+ 99D6 18 14            jr 3F
 343+ 99D8
 344+ 99D8              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D8
 346+ 99D8 3A 89 89     2 ld a,(Incrementa_puntero)
 347+ 99DB 47               ld b,a
 348+ 99DC
 349+ 99DC 2A 83 89         ld hl,(Puntero_indice_mov)
 350+ 99DF 2B           1 dec hl
 351+ 99E0 2B               dec hl
 352+ 99E1 10 FC            djnz 1B
 353+ 99E3 22 83 89         ld (Puntero_indice_mov),hl
 354+ 99E6
 355+ 99E6 AF               xor a
 356+ 99E7 32 89 89         ld (Incrementa_puntero),a
 357+ 99EA 18 06            jr 4F
 358+ 99EC
 359+ 99EC 3A 8A 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99EF 32 89 89         ld (Incrementa_puntero),a
 361+ 99F2 C9           4 ret
 362+ 99F3
 363+ 99F3              ; ----------------------------------------------------------------------
 364+ 99F3              ;
 365+ 99F3              ;   30/01/24
 366+ 99F3              ;
 367+ 99F3              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F3
 369+ 99F3 3A 4D 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F6 CD 85 8E         call Calcula_salto_en_BC
 371+ 99F9 21 7B 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99FC A7               and a
 373+ 99FD ED 4A            adc hl,bc
 374+ 99FF C9               ret
 375+ 9A00
 376+ 9A00              ; ----------------------------------------------------------------------
 377+ 9A00              ;
 378+ 9A00              ;   30/01/24
 379+ 9A00              ;
 380+ 9A00              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A00              ;
 382+ 9A00              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A00
 384+ 9A00 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A01 23               inc hl
 386+ 9A02 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A03 69               ld l,c
 388+ 9A04 60               ld h,b
 389+ 9A05 22 6E 89         ld (Contador_de_mov_masticados),hl
 390+ 9A08 C9               ret
 391+ 9A09
# file closed: Movimiento.asm
1730  9A09              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A09              ; ******************************************************************************************************************************************************************************************
   2+ 9A09              ;
   3+ 9A09              ;   21/07/23
   4+ 9A09              ;
   5+ 9A09              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A09              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A09              ;
   8+ 9A09              ;
   9+ 9A09              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A09              ;
  11+ 9A09              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A09              ;               _ hacen las entidades hacia abajo.
  13+ 9A09              ;
  14+ 9A09              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A09              ;
  16+ 9A09              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A09              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A09              ;
  19+ 9A09              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A09              ;           _ la bala.
  21+ 9A09              ;
  22+ 9A09              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A09              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A09              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A09              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A09              ;           _ en el momento de generarse la bala)).
  27+ 9A09
  28+ 9A09              Genera_disparo
  29+ 9A09
  30+ 9A09              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A09              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A09              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A09              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A09              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A09              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A09              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A09
  38+ 9A09              ; Exclusiones:
  39+ 9A09
  40+ 9A09 3A 7A 89         ld a,(Vel_down)
  41+ 9A0C 47               ld b,a
  42+ 9A0D 3A C0 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9A10 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9A11 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9A12 3A 71 89         ld a,(Columnas)
  46+ 9A15 47               ld b,a
  47+ 9A16 3A 4F 89         ld a,(Columns)
  48+ 9A19 B8               cp b
  49+ 9A1A C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9A1B
  51+ 9A1B              ; ----- ----- -----
  52+ 9A1B
  53+ 9A1B 3A 70 89         ld a,(Ctrl_0)
  54+ 9A1E CB 77            bit 6,a
  55+ 9A20 20 06            jr nz,14F
  56+ 9A22
  57+ 9A22 3A 55 89         ld a,(Coordenada_y)
  58+ 9A25 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9A27 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9A28
  61+ 9A28 21 31 81     14 ld hl,Indice_disparo
  62+ 9A2B 3A 56 89         ld a,(CTRL_DESPLZ)
  63+ 9A2E 4F               ld c,a
  64+ 9A2F 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9A31              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9A31              ;                                            ""        ""       "f9", B="1"
  67+ 9A31              ;                                            ""        ""       "fb", B="2"
  68+ 9A31              ;                                            ""        ""       "fb", B="3"
  69+ 9A31 A7               and a
  70+ 9A32 28 10            jr z,1F
  71+ 9A34 E6 01            and 1
  72+ 9A36 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9A37
  74+ 9A37 79               ld a,c
  75+ 9A38 16 F9            ld d,$f9
  76+ 9A3A 23           2 inc hl
  77+ 9A3B 23               inc hl
  78+ 9A3C 04               inc b
  79+ 9A3D BA               cp d
  80+ 9A3E 28 04            jr z,1F
  81+ 9A40 14               inc d
  82+ 9A41 14               inc d
  83+ 9A42 18 F6            jr 2B
  84+ 9A44
  85+ 9A44 CD A7 8B     1 call Extrae_address
  86+ 9A47 E5               push hl
  87+ 9A48 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A4A DD 21 E8 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A4E
  90+ 9A4E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A4E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A4E
  93+ 9A4E 3A 70 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A51 CB 77            bit 6,a
  95+ 9A53 20 04            jr nz,19F
  96+ 9A55
  97+ 9A55 AF               xor a
  98+ 9A56 32 C9 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A59
 100+ 9A59 3A 62 89     19 ld a,(Cuad_objeto)
 101+ 9A5C FE 02            cp 2
 102+ 9A5E 38 66            jr c,3F
 103+ 9A60 28 64            jr z,3F
 104+ 9A62
 105+ 9A62              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A62
 107+ 9A62 E6 01            and 1
 108+ 9A64 28 30            jr z,4F
 109+ 9A66
 110+ 9A66              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A66              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A66              ;
 113+ 9A66              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A66              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A66              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A66
 117+ 9A66 2A 50 89     	ld hl,(Posicion_actual)
 118+ 9A69
 119+ 9A69              ;   Amadeus o entidad ???.
 120+ 9A69
 121+ 9A69 3A 70 89         ld a,(Ctrl_0)
 122+ 9A6C CB 77            bit 6,a
 123+ 9A6E 28 0A            jr z,8F
 124+ 9A70
 125+ 9A70              ; 	Dispara Amadeus.
 126+ 9A70
 127+ 9A70 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A72 CD 11 92         call PreviousScan
 129+ 9A75 CD 11 92         call PreviousScan
 130+ 9A78
 131+ 9A78              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A78              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A78              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A78              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A78
 136+ 9A78 18 11            jr 10F
 137+ 9A7A
 138+ 9A7A              ; 	Dispara Entidad.
 139+ 9A7A
 140+ 9A7A 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A7D              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A7D
 143+ 9A7D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A7D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A7D
 146+ 9A7D C5               push bc
 147+ 9A7E 06 10            ld b,16
 148+ 9A80 CD 02 92     9 call NextScan
 149+ 9A83 10 FB            djnz 9B
 150+ 9A85 C1               pop bc
 151+ 9A86 CD F0 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A89 18 06            jr 17F
 153+ 9A8B
 154+ 9A8B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A8B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A8B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A8B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A8B
 159+ 9A8B CD F0 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A8E CD 65 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A91              ;                                                      ; _al generar el disparo.
 162+ 9A91
 163+ 9A91              ; 	LLegados a este punto tendremos:
 164+ 9A91              ;
 165+ 9A91              ;       Puntero_objeto_disparo en IY.
 166+ 9A91              ;       Rutinas_de_impresion en IX.
 167+ 9A91              ;       Puntero_de_impresion en HL.
 168+ 9A91              ;       Impacto/Dirección en BC.
 169+ 9A91
 170+ 9A91 CD F8 9A     17 call Almacena_disparo
 171+ 9A94 18 52            jr 6F                                             ; RET.
 172+ 9A96
 173+ 9A96              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A96              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A96              ;
 176+ 9A96              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A96              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A96              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A96
 180+ 9A96 2A 50 89     4 ld hl,(Posicion_actual)
 181+ 9A99
 182+ 9A99              ;   Amadeus o entidad ???.
 183+ 9A99
 184+ 9A99 3A 70 89         ld a,(Ctrl_0)
 185+ 9A9C CB 77            bit 6,a
 186+ 9A9E 28 0A            jr z,11F
 187+ 9AA0
 188+ 9AA0              ; 	Dispara Amadeus.
 189+ 9AA0
 190+ 9AA0 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9AA2 CD 11 92         call PreviousScan
 192+ 9AA5 CD 11 92         call PreviousScan
 193+ 9AA8
 194+ 9AA8              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9AA8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9AA8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9AA8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9AA8
 199+ 9AA8 18 11            jr 13F
 200+ 9AAA
 201+ 9AAA              ; 	Dispara Entidad.
 202+ 9AAA
 203+ 9AAA 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9AAD              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9AAD
 206+ 9AAD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9AAD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9AAD
 209+ 9AAD C5               push bc
 210+ 9AAE 06 10            ld b,16
 211+ 9AB0 CD 02 92     12 call NextScan
 212+ 9AB3 10 FB            djnz 12B
 213+ 9AB5 C1               pop bc
 214+ 9AB6
 215+ 9AB6 CD E9 9A         call Ajusta_disparo_parte_derecha
 216+ 9AB9 18 06            jr 18F
 217+ 9ABB
 218+ 9ABB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9ABB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9ABB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9ABB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9ABB
 223+ 9ABB CD E9 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9ABE CD 65 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9AC1              ;                                                       ; _al generar el disparo.
 226+ 9AC1
 227+ 9AC1              ; LLegados a este punto tendremos:
 228+ 9AC1              ;
 229+ 9AC1              ;       Puntero_objeto_disparo en IY.
 230+ 9AC1              ;       Rutinas_de_impresion en IX.
 231+ 9AC1              ;       Puntero_de_impresion en HL.
 232+ 9AC1              ;       Impacto/Dirección en BC.
 233+ 9AC1
 234+ 9AC1 CD F8 9A     18 call Almacena_disparo
 235+ 9AC4 18 22            jr 6F                                               ; RET.
 236+ 9AC6
 237+ 9AC6              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9AC6
 239+ 9AC6 28 11        3 jr z,5F
 240+ 9AC8
 241+ 9AC8              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9AC8              ;
 243+ 9AC8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9AC8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9AC8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9AC8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9AC8
 248+ 9AC8              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9AC8              ;	   ""        ""       "f9", B="1"
 250+ 9AC8              ;	   ""        ""       "fb", B="2"
 251+ 9AC8              ; 	   ""        ""       "fb", B="3"
 252+ 9AC8
 253+ 9AC8 2A 50 89     	ld hl,(Posicion_actual)
 254+ 9ACB CD 02 92     	call NextScan
 255+ 9ACE
 256+ 9ACE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9ACE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9ACE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9ACE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9ACE
 261+ 9ACE CD F0 9A         call Ajusta_disparo_parte_izquierda
 262+ 9AD1
 263+ 9AD1              ; 	No se produce impacto. B="$80"
 264+ 9AD1              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9AD1
 266+ 9AD1 01 80 80         ld bc,$8080
 267+ 9AD4
 268+ 9AD4              ; 	LLegados a este punto tendremos:
 269+ 9AD4              ;
 270+ 9AD4              ;       Puntero_objeto_disparo en IY.
 271+ 9AD4              ;       Rutinas_de_impresion en IX.
 272+ 9AD4              ;       Puntero_de_impresion en HL.
 273+ 9AD4              ;       Impacto/Dirección en BC.
 274+ 9AD4
 275+ 9AD4 CD F8 9A         call Almacena_disparo
 276+ 9AD7 18 0F            jr 6F                                           ; RET.
 277+ 9AD9
 278+ 9AD9              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9AD9              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9AD9              ;
 281+ 9AD9              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9AD9              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9AD9              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9AD9              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9AD9
 286+ 9AD9 2A 50 89     5 ld hl,(Posicion_actual)
 287+ 9ADC CD 02 92     	call NextScan
 288+ 9ADF
 289+ 9ADF              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9ADF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9ADF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9ADF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9ADF
 294+ 9ADF CD E9 9A         call Ajusta_disparo_parte_derecha
 295+ 9AE2
 296+ 9AE2              ; 	No se produce impacto. B="$80"
 297+ 9AE2              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9AE2
 299+ 9AE2 01 80 80     15 ld bc,$8080
 300+ 9AE5
 301+ 9AE5              ; 	LLegados a este punto tendremos:
 302+ 9AE5              ;
 303+ 9AE5              ;       Puntero_objeto_disparo en IY.
 304+ 9AE5              ;       Rutinas_de_impresion en IX.
 305+ 9AE5              ;       Puntero_de_impresion en HL.
 306+ 9AE5              ;       Impacto/Dirección en BC.
 307+ 9AE5
 308+ 9AE5 CD F8 9A         call Almacena_disparo
 309+ 9AE8
 310+ 9AE8 C9           6 ret
 311+ 9AE9
 312+ 9AE9              ; ----------------------------------------------------------------
 313+ 9AE9              ;
 314+ 9AE9              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9AE9              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9AE9              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9AE9
 318+ 9AE9 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9AEA FE 02            cp 2
 320+ 9AEC 38 01            jr c,1F
 321+ 9AEE 23               inc hl
 322+ 9AEF C9           1 ret
 323+ 9AF0
 324+ 9AF0 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9AF1 FE 01        	cp 1
 326+ 9AF3 20 01        	jr nz,1F
 327+ 9AF5 2B           	dec hl
 328+ 9AF6 2B           1 dec hl
 329+ 9AF7 C9               ret
 330+ 9AF8
 331+ 9AF8              ; ----------------------------------------------------------------
 332+ 9AF8              ;
 333+ 9AF8              ;   25/02/23
 334+ 9AF8              ;
 335+ 9AF8              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9AF8              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9AF8              ;
 338+ 9AF8              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9AF8              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9AF8
 341+ 9AF8              Almacena_disparo
 342+ 9AF8
 343+ 9AF8 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9AF9 F1               pop af
 345+ 9AFA 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9AFB
 347+ 9AFB 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9AFC E6 01            and 1
 349+ 9AFE 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B00              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B00              ; 	Dispara AMADEUS.
 352+ 9B00
 353+ 9B00              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B00              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B00              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B00              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B00
 358+ 9B00 C5               push bc
 359+ 9B01 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B04 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B07 A7               and a
 362+ 9B08 ED 42            sbc hl,bc
 363+ 9B0A CC 2C 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9B0D C1               pop bc
 365+ 9B0E 28 54            jr z,4F
 366+ 9B10
 367+ 9B10 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9B13 23               inc hl
 369+ 9B14 23               inc hl
 370+ 9B15 22 B3 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9B18              ;                                                   ; _ Disparo_(+1).
 372+ 9B18 18 18            jr 2F
 373+ 9B1A
 374+ 9B1A              ; Dispara una entidad.
 375+ 9B1A
 376+ 9B1A C5           1 push bc
 377+ 9B1B 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9B1E 2A B1 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9B21 A7               and a
 380+ 9B22 ED 42            sbc hl,bc
 381+ 9B24 CC 25 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9B27 C1               pop bc
 383+ 9B28 28 3A            jr z,4F
 384+ 9B2A
 385+ 9B2A 2A B1 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9B2D 23               inc hl
 387+ 9B2E 23               inc hl
 388+ 9B2F 22 B1 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9B32              ;                                                   ; _ Disparo_(+1).
 390+ 9B32 CD A7 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9B35              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9B35              ;
 393+ 9B35              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9B35              ;                                                     Rutinas_de_impresion en IX.
 395+ 9B35              ;                                                     Puntero_de_impresion en HL.
 396+ 9B35              ;                                                     Impacto/Dirección en BC.
 397+ 9B35
 398+ 9B35 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9B36 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9B37 23               inc hl                                          ; _ al siguiente.
 401+ 9B38 A7               and a
 402+ 9B39 20 C0            jr nz,3B
 403+ 9B3B
 404+ 9B3B 08               ex af,af
 405+ 9B3C ED 73 A0 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9B40 F9               ld sp,hl
 407+ 9B41
 408+ 9B41 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9B43 F5               push af                                         ; Puntero de impresión.
 410+ 9B44 FD E5            push iy                                         ; Puntero objeto.
 411+ 9B46 C5               push bc                                         ; Control.
 412+ 9B47
 413+ 9B47 ED 7B A0 89      ld sp,(Stack)
 414+ 9B4B
 415+ 9B4B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B4B
 417+ 9B4B 21 8F 89     	ld hl,Ctrl_1
 418+ 9B4E CB C6        	set 0,(hl)
 419+ 9B50
 420+ 9B50 DD E5        	push ix
 421+ 9B52 E1               pop hl
 422+ 9B53 F5               push af
 423+ 9B54 DD E1            pop ix
 424+ 9B56
 425+ 9B56 CD BF 80     	call Guarda_foto_registros
 426+ 9B59
 427+ 9B59 21 8F 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B5C CB 86        	res 0,(hl)
 429+ 9B5E
 430+ 9B5E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B5E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B5E
 433+ 9B5E CD 2C 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B61 CD 25 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B64
 436+ 9B64 C9           4 ret
 437+ 9B65
 438+ 9B65              ; ----------------------------------------------------------------
 439+ 9B65              ;
 440+ 9B65              ;   4/3/23
 441+ 9B65              ;
 442+ 9B65              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B65              ;   _ al generarse el disparo.
 444+ 9B65              ;
 445+ 9B65              ;       "$80" ..... No se produce colisión.
 446+ 9B65              ;       "$81" ..... Se produce colisión.
 447+ 9B65              ;
 448+ 9B65              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B65              ;         _ que forman el disparo.
 450+ 9B65
 451+ 9B65
 452+ 9B65              Comprueba_Colision
 453+ 9B65
 454+ 9B65              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B65
 456+ 9B65 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B67 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B68
 459+ 9B68 CD 9E 9B         call Modifica_H_Velocidad_disparo
 460+ 9B6B
 461+ 9B6B 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B6C FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B6E 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B70
 465+ 9B70 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B72 CD 8E 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B75
 468+ 9B75 7B               ld a,e
 469+ 9B76 E6 01            and 1
 470+ 9B78 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B7A              ;                                                  ; _ para activar IMPACTO.
 472+ 9B7A E1               pop hl
 473+ 9B7B E5               push hl
 474+ 9B7C CD 02 92         call NextScan
 475+ 9B7F
 476+ 9B7F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B80 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B82 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B84              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B84 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B86 CD 8E 9B         call Bucle_2
 482+ 9B89
 483+ 9B89 43           1 ld b,e
 484+ 9B8A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B8B FD E1            pop iy
 486+ 9B8D C9               ret
 487+ 9B8E
 488+ 9B8E              ; ---------- ----------
 489+ 9B8E
 490+ 9B8E 06 02        Bucle_2 ld b,2
 491+ 9B90 FD 7E 00     2 ld a,(iy)
 492+ 9B93 A6               and (hl)
 493+ 9B94 28 02            jr z,1F
 494+ 9B96 1E 81            ld e,$81
 495+ 9B98 23           1 inc hl
 496+ 9B99 FD 23            inc iy
 497+ 9B9B 10 F3            djnz 2B
 498+ 9B9D C9               ret
 499+ 9B9E
 500+ 9B9E              ; ---------- ----------
 501+ 9B9E              ;
 502+ 9B9E              ;   21/7/23
 503+ 9B9E
 504+ 9B9E              Modifica_H_Velocidad_disparo
 505+ 9B9E
 506+ 9B9E 3A C0 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9BA1 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9BA3 D0               ret nc                                         ; _ incrementamos H.
 509+ 9BA4 24               inc h
 510+ 9BA5
 511+ 9BA5 C9               ret
 512+ 9BA6
 513+ 9BA6              ; -------------------------------------------------------------------------------------------------------------
 514+ 9BA6              ;
 515+ 9BA6              ;   04/12/23
 516+ 9BA6              ;
 517+ 9BA6              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9BA6              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9BA6              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9BA6              ;
 521+ 9BA6              ;   MODIFICA: HL,DE,B y A.
 522+ 9BA6
 523+ 9BA6              Genera_coordenadas_X
 524+ 9BA6
 525+ 9BA6              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9BA6              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9BA6
 528+ 9BA6              ;   Limpiamos almacenes.
 529+ 9BA6
 530+ 9BA6 CD D7 9B         call Limpia_Coordenadas_X
 531+ 9BA9
 532+ 9BA9              ;   Almacenamos coordenadas X.
 533+ 9BA9
 534+ 9BA9              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9BA9
 536+ 9BA9 2A 6A 89         ld hl,(Puntero_de_impresion)
 537+ 9BAC 11 BD 89         ld de,Coordenadas_X_Entidad
 538+ 9BAF 06 02            ld b,2
 539+ 9BB1
 540+ 9BB1 3A 56 89         ld a,(CTRL_DESPLZ)
 541+ 9BB4 A7               and a
 542+ 9BB5 28 01            jr z,1F
 543+ 9BB7 04               inc b
 544+ 9BB8
 545+ 9BB8 CD CE 9B     1 call Guarda_coordenadas_X
 546+ 9BBB
 547+ 9BBB              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9BBB
 549+ 9BBB 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9BBE 11 BA 89         ld de,Coordenadas_X_Amadeus
 551+ 9BC1 06 02            ld b,2
 552+ 9BC3
 553+ 9BC3 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9BC6 A7               and a
 555+ 9BC7 28 01            jr z,2F
 556+ 9BC9 04               inc b
 557+ 9BCA
 558+ 9BCA CD CE 9B     2 call Guarda_coordenadas_X
 559+ 9BCD
 560+ 9BCD              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9BCD
 562+ 9BCD C9               ret
 563+ 9BCE
 564+ 9BCE              ; ----- ----- ----- ----- -----
 565+ 9BCE
 566+ 9BCE 7D           Guarda_coordenadas_X  ld a,l
 567+ 9BCF E6 1F            and $1f
 568+ 9BD1 12           1 ld (de),a
 569+ 9BD2 3C               inc a
 570+ 9BD3 13               inc de
 571+ 9BD4 10 FB            djnz 1B
 572+ 9BD6 C9               ret
 573+ 9BD7
 574+ 9BD7 AF           Limpia_Coordenadas_X xor a
 575+ 9BD8 06 06            ld b,6
 576+ 9BDA 21 BA 89         ld hl,Coordenadas_X_Amadeus
 577+ 9BDD 77           1 ld (hl),a
 578+ 9BDE 23               inc hl
 579+ 9BDF 10 FC            djnz 1B
 580+ 9BE1 C9               ret
 581+ 9BE2
 582+ 9BE2              ; ----- ----- ----- ----- -----
 583+ 9BE2
 584+ 9BE2              Compara_coordenadas_X
 585+ 9BE2
 586+ 9BE2 06 03            ld b,3
 587+ 9BE4 11 BF 89         ld de,Coordenadas_X_Entidad+2
 588+ 9BE7
 589+ 9BE7 1A               ld a,(de)
 590+ 9BE8 A7               and a
 591+ 9BE9 20 01            jr nz,2F
 592+ 9BEB 05               dec b
 593+ 9BEC
 594+ 9BEC 1B           2 dec de
 595+ 9BED 1B               dec de
 596+ 9BEE 21 BA 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BF1
 598+ 9BF1 D5           1 push de
 599+ 9BF2 E5               push hl
 600+ 9BF3 C5               push bc
 601+ 9BF4
 602+ 9BF4 CD FE 9B         call Comparando
 603+ 9BF7
 604+ 9BF7 C1               pop bc
 605+ 9BF8 E1               pop hl
 606+ 9BF9 D1               pop de
 607+ 9BFA
 608+ 9BFA 13               inc de
 609+ 9BFB 10 F4            djnz 1B
 610+ 9BFD
 611+ 9BFD C9               ret
 612+ 9BFE
 613+ 9BFE              ; ----- ----- ----- ----- -----
 614+ 9BFE              ;
 615+ 9BFE              ;   4/12/23
 616+ 9BFE              ;
 617+ 9BFE              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9BFE
 619+ 9BFE 06 03        Comparando ld b,3
 620+ 9C00 1A               ld a,(de)
 621+ 9C01 4E           2 ld c,(hl)
 622+ 9C02 B9               cp c
 623+ 9C03 28 04            jr z,1F
 624+ 9C05 23               inc hl
 625+ 9C06 10 F9            djnz 2B
 626+ 9C08 C9               ret
 627+ 9C09
 628+ 9C09 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9C0B 32 63 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9C0E 21 B5 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9C11 CB D6            set 2,(hl)
 632+ 9C13 C9               ret
 633+ 9C14
 634+ 9C14              ; -----------------------------------------------------------------------
 635+ 9C14              ;
 636+ 9C14              ;   7/12/23
 637+ 9C14              ;
 638+ 9C14
 639+ 9C14              Detecta_colision_nave_entidad
 640+ 9C14
 641+ 9C14              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9C14
 643+ 9C14 FD 2A 52 89      ld iy,(Puntero_objeto)
 644+ 9C18 2A 6A 89         ld hl,(Puntero_de_impresion)
 645+ 9C1B
 646+ 9C1B E5               push hl
 647+ 9C1C
 648+ 9C1C              ; ----- ----- -----
 649+ 9C1C 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9C1E 06 0A            ld b,10
 651+ 9C20 CD 50 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9C23 7B               ld a,e
 653+ 9C24 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9C26 38 0E            jr c,3F
 655+ 9C28
 656+ 9C28              ; LLegados a este punto:
 657+ 9C28              ;
 658+ 9C28              ;   HAY COLISIÓN !!!!!.
 659+ 9C28              ;
 660+ 9C28              ;   .db (Impacto) de Amadeus a "1".
 661+ 9C28              ;   SET el bit3 de (Impacto2).
 662+ 9C28              ;
 663+ 9C28              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9C28
 665+ 9C28 21 63 89         ld hl,Impacto
 666+ 9C2B 36 01            ld (hl),1
 667+ 9C2D 21 B5 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9C30 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9C32 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9C34
 671+ 9C34 18 18            jr 1F
 672+ 9C36
 673+ 9C36              ; -----
 674+ 9C36
 675+ 9C36 E1           3 pop hl
 676+ 9C37 CD 02 92         call NextScan
 677+ 9C3A E5               push hl
 678+ 9C3B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9C3C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9C3E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9C40 30 0C            jr nc,1F
 682+ 9C42              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9C42 10 DC            djnz 2B
 684+ 9C44
 685+ 9C44              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9C44
 687+ 9C44              ; LLegados a este punto:
 688+ 9C44              ;
 689+ 9C44              ;   NO HAY COLISIÓN !!!!!.
 690+ 9C44              ;
 691+ 9C44              ;   .db (Impacto) de Amadeus a "0".
 692+ 9C44              ;   RES el bit2 de (Impacto2).
 693+ 9C44              ;
 694+ 9C44              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9C44              ;   Lo colocamos a "0".
 696+ 9C44
 697+ 9C44 21 B5 89         ld hl,Impacto2
 698+ 9C47 CB 96            res 2,(hl)
 699+ 9C49 2A B6 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C4C 36 00            ld (hl),0
 701+ 9C4E
 702+ 9C4E E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C4F C9               ret
 704+ 9C50
 705+ 9C50               ; ---------- ----------
 706+ 9C50
 707+ 9C50 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C51 3A 4F 89         ld a,(Columns)
 709+ 9C54 47               ld b,a
 710+ 9C55 FD 7E 00     2 ld a,(iy)
 711+ 9C58 BE               cp (hl)
 712+ 9C59 28 01            jr z,1F
 713+ 9C5B
 714+ 9C5B 1C               inc e
 715+ 9C5C
 716+ 9C5C 23           1 inc hl
 717+ 9C5D FD 23            inc iy
 718+ 9C5F 10 F4            djnz 2B
 719+ 9C61 C1               pop bc
 720+ 9C62 C9               ret
 721+ 9C63
 722+ 9C63              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C63              ;
 724+ 9C63              ;   13/03/23
 725+ 9C63              ;
 726+ 9C63              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C63              ;
 728+ 9C63              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C63
 730+ 9C63 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C66 7E               ld a,(hl)
 732+ 9C67 A7               and a
 733+ 9C68 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C69
 735+ 9C69 44               ld b,h
 736+ 9C6A 4D               ld c,l
 737+ 9C6B 2A A8 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C6E E5               push hl
 739+ 9C6F A7               and a
 740+ 9C70 ED 42            sbc hl,bc
 741+ 9C72 E5               push hl
 742+ 9C73 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C74
 744+ 9C74 E1               pop hl
 745+ 9C75 54               ld d,h
 746+ 9C76 5D               ld e,l
 747+ 9C77 1B               dec de
 748+ 9C78 ED B8            lddr                                                ; Limpiamos.
 749+ 9C7A
 750+ 9C7A 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C7D 22 A8 89         ld (Stack_snapshot_disparos),hl
 752+ 9C80
 753+ 9C80 C9               ret
 754+ 9C81
 755+ 9C81              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C81              ;
 757+ 9C81              ;   18/07/23
 758+ 9C81              ;
 759+ 9C81
 760+ 9C81              Motor_de_disparos
 761+ 9C81
 762+ 9C81              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C81
 764+ 9C81 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C84 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C87
 767+ 9C87 CD A7 8B     2 call Extrae_address
 768+ 9C8A 7E               ld a,(hl)
 769+ 9C8B A7               and a
 770+ 9C8C 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C8E
 772+ 9C8E              ; ----- ----- ----- ----- ----- -----
 773+ 9C8E
 774+ 9C8E C5               push bc
 775+ 9C8F CD 53 9D         call foto_disparo_a_borrar
 776+ 9C92
 777+ 9C92              ; Existe colisión con este disparo???
 778+ 9C92
 779+ 9C92 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C93 7E               ld a,(hl)
 781+ 9C94 2B               dec hl
 782+ 9C95 E6 01            and 1
 783+ 9C97 28 1D            jr z,9F
 784+ 9C99
 785+ 9C99              ;   En este punto:
 786+ 9C99              ;
 787+ 9C99              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C99              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C99              ;   _con la entidad).
 790+ 9C99              ;
 791+ 9C99              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C99              ;    defw 0                                          ; Puntero objeto.
 793+ 9C99              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C99              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C99
 796+ 9C99 E5               push hl
 797+ 9C9A
 798+ 9C9A 06 04            ld b,4
 799+ 9C9C 23           19 inc hl
 800+ 9C9D 10 FD            djnz 19B
 801+ 9C9F
 802+ 9C9F CD A7 8B         call Extrae_address
 803+ 9CA2 CD 36 9F         call Genera_coordenadas_disparo
 804+ 9CA5
 805+ 9CA5              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9CA5
 807+ 9CA5 21 B8 89         ld hl,Coordenadas_disparo_certero
 808+ 9CA8 72               ld (hl),d
 809+ 9CA9 23               inc hl
 810+ 9CAA 73               ld (hl),e
 811+ 9CAB
 812+ 9CAB              ; Elimino el disparo de la base de datos.
 813+ 9CAB
 814+ 9CAB E1               pop hl
 815+ 9CAC CD D2 9D         call Elimina_disparo_de_base_de_datos
 816+ 9CAF 21 B5 89         ld hl,Impacto2
 817+ 9CB2 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9CB4
 819+ 9CB4 18 06            jr 11F
 820+ 9CB6
 821+ 9CB6 CD 7C 9D     9 call Mueve_disparo
 822+ 9CB9 CD 53 9D         call foto_disparo_a_borrar
 823+ 9CBC
 824+ 9CBC C1           11 pop bc
 825+ 9CBD 18 04            jr 7F
 826+ 9CBF
 827+ 9CBF              ; ----- ----- ----- ----- ----- -----
 828+ 9CBF
 829+ 9CBF ED 42        1 sbc hl,bc
 830+ 9CC1 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9CC3
 832+ 9CC3 2A B3 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9CC6 23               inc hl
 834+ 9CC7 23               inc hl
 835+ 9CC8 22 B3 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9CCB 18 BA            jr 2B
 837+ 9CCD
 838+ 9CCD CD 2C 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9CD0              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9CD0
 841+ 9CD0              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9CD0
 843+ 9CD0 01 9F 86         ld bc,Disparo_11
 844+ 9CD3 2A B1 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9CD6
 846+ 9CD6 CD A7 8B     5 call Extrae_address
 847+ 9CD9 7E               ld a,(hl)
 848+ 9CDA A7               and a
 849+ 9CDB 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9CDD
 851+ 9CDD              ; ----- ----- ----- ----- ----- -----
 852+ 9CDD
 853+ 9CDD C5               push bc
 854+ 9CDE CD 53 9D         call foto_disparo_a_borrar
 855+ 9CE1
 856+ 9CE1              ; Existe colisión con este disparo???
 857+ 9CE1
 858+ 9CE1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9CE2 7E               ld a,(hl)
 860+ 9CE3 2B               dec hl
 861+ 9CE4 E6 01            and 1
 862+ 9CE6 28 4D            jr z,10F
 863+ 9CE8
 864+ 9CE8              ;! La colisión se produce con Amadeus???
 865+ 9CE8              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9CE8
 867+ 9CE8 E5               push hl
 868+ 9CE9
 869+ 9CE9 06 04            ld b,4
 870+ 9CEB 23           16 inc hl
 871+ 9CEC 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CEE
 873+ 9CEE CD A7 8B         call Extrae_address
 874+ 9CF1 CD 36 9F         call Genera_coordenadas_disparo
 875+ 9CF4
 876+ 9CF4 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CF5 FE 16            cp $16
 878+ 9CF7 38 2A            jr c,15F
 879+ 9CF9
 880+ 9CF9
 881+ 9CF9              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9CF9
 883+ 9CF9 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9CFA
 885+ 9CFA              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9CFA
 887+ 9CFA 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9CFD
 889+ 9CFD              ; Coordenada X de Amadeus en D.
 890+ 9CFD
 891+ 9CFD 7D               ld a,l
 892+ 9CFE E6 1F            and $1F
 893+ 9D00 57               ld d,a
 894+ 9D01
 895+ 9D01 21 BB 86         ld hl,Amadeus_db+8
 896+ 9D04 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D05
 898+ 9D05 21 BA 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D08 CD CE 9B         call Guarda_coordenadas_X
 900+ 9D0B
 901+ 9D0B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9D0C
 903+ 9D0C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9D0C
 905+ 9D0C 06 02            ld b,2
 906+ 9D0E C5           20 push bc
 907+ 9D0F
 908+ 9D0F 06 03            ld b,3
 909+ 9D11 21 BA 89         ld hl,Coordenadas_X_Amadeus
 910+ 9D14 7E           18 ld a,(hl)
 911+ 9D15 BA               cp d
 912+ 9D16 20 04            jr nz,17F
 913+ 9D18
 914+ 9D18              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9D18
 916+ 9D18 C1               pop bc
 917+ 9D19 E1               pop hl
 918+ 9D1A 18 0D            jr 14F
 919+ 9D1C
 920+ 9D1C 23           17 inc hl
 921+ 9D1D 10 F5            djnz 18B
 922+ 9D1F
 923+ 9D1F 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9D20
 925+ 9D20 C1               pop bc
 926+ 9D21 10 EB            djnz 20B
 927+ 9D23
 928+ 9D23
 929+ 9D23              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9D23              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9D23
 932+ 9D23 E1           15 pop hl
 933+ 9D24 23               inc hl
 934+ 9D25 35               dec (hl)
 935+ 9D26 2B               dec hl
 936+ 9D27 18 0C            jr 10F
 937+ 9D29
 938+ 9D29              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9D29              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9D29
 941+ 9D29 E5           14 push hl
 942+ 9D2A CD D2 9D         call Elimina_disparo_de_base_de_datos
 943+ 9D2D 21 B5 89         ld hl,Impacto2
 944+ 9D30 CB CE            set 1,(hl)
 945+ 9D32 E1               pop hl
 946+ 9D33 18 06            jr 12F
 947+ 9D35
 948+ 9D35              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9D35
 950+ 9D35 CD 7C 9D     10 call Mueve_disparo
 951+ 9D38 CD 53 9D         call foto_disparo_a_borrar
 952+ 9D3B C1           12 pop bc
 953+ 9D3C
 954+ 9D3C 18 04            jr 8F
 955+ 9D3E
 956+ 9D3E              ; ----- ----- ----- ----- ----- -----
 957+ 9D3E
 958+ 9D3E ED 42        4 sbc hl,bc
 959+ 9D40 28 0A            jr z,6F
 960+ 9D42
 961+ 9D42 2A B1 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9D45 23               inc hl
 963+ 9D46 23               inc hl
 964+ 9D47 22 B1 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D4A 18 8A            jr 5B
 966+ 9D4C
 967+ 9D4C CD 25 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D4F CD D7 9B         call Limpia_Coordenadas_X
 969+ 9D52 C9               ret
 970+ 9D53
 971+ 9D53              ; ------------------------------------------------------------------
 972+ 9D53
 973+ 9D53              foto_disparo_a_borrar
 974+ 9D53
 975+ 9D53 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D54 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D55 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D56
 979+ 9D56 E5               push hl
 980+ 9D57 23               inc hl
 981+ 9D58 23               inc hl
 982+ 9D59 ED 73 A0 89      ld (Stack),sp
 983+ 9D5D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D5E FD E1            pop iy
 985+ 9D60 DD E1            pop ix
 986+ 9D62 E1               pop hl
 987+ 9D63 ED 7B A0 89      ld sp,(Stack)
 988+ 9D67 3A 8F 89         ld a,(Ctrl_1)
 989+ 9D6A CB C7            set 0,a
 990+ 9D6C 32 8F 89         ld (Ctrl_1),a
 991+ 9D6F CD BF 80         call Guarda_foto_registros
 992+ 9D72 3A 8F 89         ld a,(Ctrl_1)
 993+ 9D75 CB 87            res 0,a
 994+ 9D77 32 8F 89         ld (Ctrl_1),a
 995+ 9D7A E1               pop hl
 996+ 9D7B C9               ret
 997+ 9D7C
 998+ 9D7C              ;---------------------------------------------------
 999+ 9D7C              ;
1000+ 9D7C              ;   18/07/23
1001+ 9D7C              ;
1002+ 9D7C
1003+ 9D7C              Mueve_disparo
1004+ 9D7C
1005+ 9D7C              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D7C              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D7C              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D7C
1009+ 9D7C E5               push hl
1010+ 9D7D
1011+ 9D7D 7E               ld a,(hl)
1012+ 9D7E
1013+ 9D7E 06 04            ld b,4
1014+ 9D80 23           1 inc hl
1015+ 9D81 10 FD            djnz 1B
1016+ 9D83
1017+ 9D83              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D83
1019+ 9D83 CD A7 8B         call Extrae_address
1020+ 9D86
1021+ 9D86 E6 01            and 1
1022+ 9D88 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D8A
1024+ 9D8A              ; Disparo hacia arriba, (Amadeus).
1025+ 9D8A
1026+ 9D8A              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D8A              ; _ de la dificultad.
1028+ 9D8A
1029+ 9D8A CD 11 92         call PreviousScan
1030+ 9D8D CD 11 92         call PreviousScan
1031+ 9D90 CD 11 92         call PreviousScan
1032+ 9D93 CD 11 92         call PreviousScan
1033+ 9D96
1034+ 9D96              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D96
1036+ 9D96 7C               ld a,h
1037+ 9D97 FE 40            cp $40
1038+ 9D99 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D9B
1040+ 9D9B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D9B
1042+ 9D9B EB               ex de,hl
1043+ 9D9C 06 04            ld b,4
1044+ 9D9E 2B           6 dec hl
1045+ 9D9F 10 FD            djnz 6B
1046+ 9DA1
1047+ 9DA1 CD D2 9D         call Elimina_disparo_de_base_de_datos
1048+ 9DA4 E1               pop hl
1049+ 9DA5 18 10            jr 7F
1050+ 9DA7
1051+ 9DA7              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9DA7              ; HL contiene el puntero de impresión del disparo.
1053+ 9DA7              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9DA7
1055+ 9DA7 D5           3 push de
1056+ 9DA8 C5               push bc
1057+ 9DA9
1058+ 9DA9 CD 65 9B         call Comprueba_Colision
1059+ 9DAC
1060+ 9DAC              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9DAC
1062+ 9DAC 78               ld a,b
1063+ 9DAD
1064+ 9DAD C1               pop bc
1065+ 9DAE D1               pop de
1066+ 9DAF
1067+ 9DAF EB               ex de,hl
1068+ 9DB0
1069+ 9DB0 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9DB1 23               inc hl                                      ; _ movimiento.
1071+ 9DB2 72               ld (hl),d
1072+ 9DB3
1073+ 9DB3 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9DB4
1075+ 9DB4 23               inc hl                                      ; _ en curso.
1076+ 9DB5 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9DB6 2B               dec hl
1078+ 9DB7
1079+ 9DB7 C9           7 ret
1080+ 9DB8
1081+ 9DB8              ; Disparo hacia abajo, (Entidad).
1082+ 9DB8
1083+ 9DB8 3A C0 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9DBB 47               ld b,a
1085+ 9DBC
1086+ 9DBC CD 02 92     4 call NextScan
1087+ 9DBF 10 FB            djnz 4B
1088+ 9DC1
1089+ 9DC1              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9DC1
1091+ 9DC1 7C               ld a,h
1092+ 9DC2 FE 58            cp $58
1093+ 9DC4 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9DC6
1095+ 9DC6 EB               ex de,hl
1096+ 9DC7 06 04            ld b,4
1097+ 9DC9 2B           5 dec hl
1098+ 9DCA 10 FD            djnz 5B
1099+ 9DCC
1100+ 9DCC CD D2 9D         call Elimina_disparo_de_base_de_datos
1101+ 9DCF E1               pop hl
1102+ 9DD0 18 E5            jr 7B
1103+ 9DD2
1104+ 9DD2              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9DD2
1106+ 9DD2 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9DD5 AF               xor a
1108+ 9DD6 77               ld (hl),a
1109+ 9DD7 54               ld d,h
1110+ 9DD8 5D               ld e,l
1111+ 9DD9 13               inc de
1112+ 9DDA ED B0            ldir
1113+ 9DDC C9               ret
1114+ 9DDD
1115+ 9DDD              ; -----------------------------------------------------------------
1116+ 9DDD              ;
1117+ 9DDD              ;   7/12/23
1118+ 9DDD              ;
1119+ 9DDD
1120+ 9DDD 3A B5 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9DE0 A7               and a
1122+ 9DE1 C8               ret z
1123+ 9DE2
1124+ 9DE2              ; Analizamos si hay impacto por disparos.
1125+ 9DE2
1126+ 9DE2              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9DE2
1128+ 9DE2 CB 4F            bit 1,a
1129+ 9DE4 28 07            jr z,1F
1130+ 9DE6
1131+ 9DE6 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9DE9 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9DEB 18 08            jr 2F
1134+ 9DED
1135+ 9DED CB 47        1 bit 0,a
1136+ 9DEF C8               ret z
1137+ 9DF0
1138+ 9DF0              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DF0
1140+ 9DF0 21 8F 89         ld hl,Ctrl_1
1141+ 9DF3 CB D6            set 2,(hl)
1142+ 9DF5
1143+ 9DF5 C9           2 ret
1144+ 9DF6
1145+ 9DF6              ; -----------------------------------------------------------------
1146+ 9DF6              ;
1147+ 9DF6              ;   25/04/23
1148+ 9DF6              ;
1149+ 9DF6
1150+ 9DF6              Determina_resultado_comparativa
1151+ 9DF6
1152+ 9DF6              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DF6              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DF6              ;
1155+ 9DF6              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DF6              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DF6              ;
1158+ 9DF6              ;   SBC HL,DE
1159+ 9DF6
1160+ 9DF6              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DF6              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DF6
1163+ 9DF6              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DF6              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DF6
1166+ 9DF6
1167+ 9DF6 3A 62 89         ld a,(Cuad_objeto)
1168+ 9DF9 FE 02            cp 2
1169+ 9DFB 28 26            jr z,2F
1170+ 9DFD 38 24            jr c,2F
1171+ 9DFF
1172+ 9DFF              ; Cuadrantes 3º y 4º
1173+ 9DFF
1174+ 9DFF E6 01            and 1
1175+ 9E01 28 10            jr z,4F
1176+ 9E03
1177+ 9E03              ; Cuadrante 3º
1178+ 9E03
1179+ 9E03 7C               ld a,h
1180+ 9E04 06 00            ld b,0
1181+ 9E06
1182+ 9E06 CD 91 9E         call Compara_cositas_H3
1183+ 9E09
1184+ 9E09 04               inc b
1185+ 9E0A 05               dec b
1186+ 9E0B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9E0C
1188+ 9E0C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9E0D 06 00            ld b,0
1190+ 9E0F
1191+ 9E0F CD A3 9E         call Compara_cositas_L3
1192+ 9E12 C9               ret
1193+ 9E13
1194+ 9E13              ; Cuadrante 4º
1195+ 9E13
1196+ 9E13 7C           4 ld a,h
1197+ 9E14 06 00            ld b,0
1198+ 9E16
1199+ 9E16 CD B5 9E         call Compara_cositas_H4
1200+ 9E19
1201+ 9E19 04               inc b
1202+ 9E1A 05               dec b
1203+ 9E1B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9E1C
1205+ 9E1C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9E1D 06 00            ld b,0
1207+ 9E1F
1208+ 9E1F CD CB 9E         call Compara_cositas_L4
1209+ 9E22 C9               ret
1210+ 9E23
1211+ 9E23              ; Cuadrantes 1º y 2º.
1212+ 9E23
1213+ 9E23 28 10        2 jr z,3F
1214+ 9E25
1215+ 9E25              ; 1er Cuadrante
1216+ 9E25
1217+ 9E25 7C               ld a,h
1218+ 9E26 06 00            ld b,0
1219+ 9E28
1220+ 9E28 CD 69 9E         call Compara_cositas_H1
1221+ 9E2B
1222+ 9E2B 04               inc b
1223+ 9E2C 05               dec b
1224+ 9E2D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9E2E
1226+ 9E2E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9E2F 06 00            ld b,0
1228+ 9E31
1229+ 9E31 CD 7F 9E         call Compara_cositas_L1
1230+ 9E34 C9               ret
1231+ 9E35
1232+ 9E35
1233+ 9E35              ; 2º Cuadrante
1234+ 9E35
1235+ 9E35 7C           3 ld a,h
1236+ 9E36 06 00            ld b,0
1237+ 9E38
1238+ 9E38 CD 45 9E         call Compara_cositas_H2
1239+ 9E3B
1240+ 9E3B 04               inc b
1241+ 9E3C 05               dec b
1242+ 9E3D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9E3E
1244+ 9E3E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9E3F 06 00            ld b,0
1246+ 9E41
1247+ 9E41 CD 57 9E         call Compara_cositas_L2
1248+ 9E44 C9               ret
1249+ 9E45
1250+ 9E45 A7           Compara_cositas_H2 and a
1251+ 9E46 28 0D            jr z,1F
1252+ 9E48              ;    cp $fd
1253+ 9E48              ;    jr z,1F
1254+ 9E48              ;    cp $fe
1255+ 9E48              ;    jr z,1F
1256+ 9E48 FE FF            cp $ff
1257+ 9E4A 28 09            jr z,1F
1258+ 9E4C FE 01            cp $01
1259+ 9E4E 28 05            jr z,1F
1260+ 9E50 FE 02            cp $02
1261+ 9E52 28 01            jr z,1F
1262+ 9E54 C0               ret nz
1263+ 9E55 04           1 inc b
1264+ 9E56 C9               ret
1265+ 9E57
1266+ 9E57 A7           Compara_cositas_L2 and a
1267+ 9E58 28 0D            jr z,1F
1268+ 9E5A              ;    cp $fd
1269+ 9E5A              ;    jr z,1F
1270+ 9E5A FE FE            cp $fe
1271+ 9E5C 28 09            jr z,1F
1272+ 9E5E FE FF            cp $ff
1273+ 9E60 28 05            jr z,1F
1274+ 9E62 FE 01            cp $01
1275+ 9E64 28 01            jr z,1F
1276+ 9E66              ;    cp $02
1277+ 9E66              ;    jr z,1F
1278+ 9E66 C0               ret nz
1279+ 9E67 04           1 inc b
1280+ 9E68 C9               ret
1281+ 9E69
1282+ 9E69 A7           Compara_cositas_H1 and a
1283+ 9E6A 28 11            jr z,1F
1284+ 9E6C              ;    cp $fd
1285+ 9E6C              ;    jr z,1F
1286+ 9E6C              ;    cp $fe
1287+ 9E6C              ;    jr z,1F
1288+ 9E6C FE FF            cp $ff
1289+ 9E6E 28 0D            jr z,1F
1290+ 9E70 FE 01            cp $01
1291+ 9E72 28 09            jr z,1F
1292+ 9E74 FE 02            cp $02
1293+ 9E76 28 05            jr z,1F
1294+ 9E78 FE 03            cp $03
1295+ 9E7A 28 01            jr z,1F
1296+ 9E7C C0               ret nz
1297+ 9E7D 04           1 inc b
1298+ 9E7E C9               ret
1299+ 9E7F
1300+ 9E7F A7           Compara_cositas_L1 and a
1301+ 9E80 28 0D            jr z,1F
1302+ 9E82              ;    cp $fd
1303+ 9E82              ;    jr z,1F
1304+ 9E82              ;    cp $fe
1305+ 9E82              ;    jr z,1F
1306+ 9E82              ;    cp $ff
1307+ 9E82              ;    jr z,1F
1308+ 9E82 FE 01            cp $01
1309+ 9E84 28 09            jr z,1F
1310+ 9E86 FE 02            cp $02
1311+ 9E88 28 05            jr z,1F
1312+ 9E8A FE 03            cp $03
1313+ 9E8C 28 01            jr z,1F
1314+ 9E8E C0               ret nz
1315+ 9E8F 04           1 inc b
1316+ 9E90 C9               ret
1317+ 9E91
1318+ 9E91 A7           Compara_cositas_H3 and a
1319+ 9E92 28 0D            jr z,1F
1320+ 9E94              ;    cp $fd
1321+ 9E94              ;    jr z,1F
1322+ 9E94 FE FE            cp $fe
1323+ 9E96 28 09            jr z,1F
1324+ 9E98 FE FF            cp $ff
1325+ 9E9A 28 05            jr z,1F
1326+ 9E9C FE 01            cp $01
1327+ 9E9E 28 01            jr z,1F
1328+ 9EA0              ;    cp $02
1329+ 9EA0              ;    jr z,1F
1330+ 9EA0              ;    cp $03
1331+ 9EA0              ;    jr z,1F
1332+ 9EA0 C0               ret nz
1333+ 9EA1 04           1 inc b
1334+ 9EA2 C9               ret
1335+ 9EA3
1336+ 9EA3 A7           Compara_cositas_L3 and a
1337+ 9EA4 28 0D            jr z,1F
1338+ 9EA6              ;    cp $fd
1339+ 9EA6              ;    jr z,1F
1340+ 9EA6              ;    cp $fe
1341+ 9EA6              ;    jr z,1F
1342+ 9EA6              ;    cp $ff
1343+ 9EA6              ;    jr z,1F
1344+ 9EA6 FE 01            cp $01
1345+ 9EA8 28 09            jr z,1F
1346+ 9EAA FE 02            cp $02
1347+ 9EAC 28 05            jr z,1F
1348+ 9EAE FE 03            cp $03
1349+ 9EB0 28 01            jr z,1F
1350+ 9EB2 C0               ret nz
1351+ 9EB3 04           1 inc b
1352+ 9EB4 C9               ret
1353+ 9EB5
1354+ 9EB5 A7           Compara_cositas_H4 and a
1355+ 9EB6 28 11            jr z,1F
1356+ 9EB8 FE FD            cp $fd
1357+ 9EBA 28 0D            jr z,1F
1358+ 9EBC FE FE            cp $fe
1359+ 9EBE 28 09            jr z,1F
1360+ 9EC0 FE FF            cp $ff
1361+ 9EC2 28 05            jr z,1F
1362+ 9EC4 FE 01            cp $01
1363+ 9EC6 28 01            jr z,1F
1364+ 9EC8              ;    cp $02
1365+ 9EC8              ;    jr z,1F
1366+ 9EC8              ;    cp $03
1367+ 9EC8              ;    jr z,1F
1368+ 9EC8 C0               ret nz
1369+ 9EC9 04           1 inc b
1370+ 9ECA C9               ret
1371+ 9ECB
1372+ 9ECB A7           Compara_cositas_L4 and a
1373+ 9ECC 28 0D            jr z,1F
1374+ 9ECE              ;    cp $fd
1375+ 9ECE              ;    jr z,1F
1376+ 9ECE FE FE            cp $fe
1377+ 9ED0 28 09            jr z,1F
1378+ 9ED2 FE FF            cp $ff
1379+ 9ED4 28 05            jr z,1F
1380+ 9ED6 FE 01            cp $01
1381+ 9ED8 28 01            jr z,1F
1382+ 9EDA              ;    cp $02
1383+ 9EDA              ;    jr z,1F
1384+ 9EDA              ;    cp $03
1385+ 9EDA              ;    jr z,1F
1386+ 9EDA C0               ret nz
1387+ 9EDB 04           1 inc b
1388+ 9EDC C9               ret
# file closed: Disparo.asm
1731  9EDD              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9EDD              ; Relojes y temporizaciones.
   2+ 9EDD
   3+ 9EDD              ; ------------------------------------------------------
   4+ 9EDD              ;
   5+ 9EDD              ;	16/7/23
   6+ 9EDD              ;
   7+ 9EDD              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9EDD              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9EDD              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9EDD              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9EDD              ;
  12+ 9EDD              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9EDD              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9EDD
  15+ 9EDD              ; Disparo_entidad db 1
  16+ 9EDD              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9EDD              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9EDD
  19+ 9EDD              Habilita_disparos
  20+ 9EDD
  21+ 9EDD 7E           	ld a,(hl)
  22+ 9EDE A7           	and a
  23+ 9EDF C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9EE0
  25+ 9EE0 EB           	ex de,hl
  26+ 9EE1
  27+ 9EE1 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9EE2 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9EE3
  30+ 9EE3              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9EE3
  32+ 9EE3 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9EE4 7E           	ld a,(hl)
  34+ 9EE5 23           	inc hl
  35+ 9EE6 77           	ld (hl),a
  36+ 9EE7
  37+ 9EE7 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9EE8 3E 01        	ld a,1
  39+ 9EEA 77           	ld (hl),a
  40+ 9EEB C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1732  9EEC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9EEC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9EEC              ;
   3+ 9EEC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9EEC              ;
   5+ 9EEC              ; *****************************************************************************************************************************************************************************************
   6+ 9EEC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9EEC
   8+ 9EEC 7C           calcula_tercio ld a,h
   9+ 9EED E6 18        	and $18
  10+ 9EEF CB 2F        	sra a
  11+ 9EF1 CB 2F        	sra a
  12+ 9EF3 CB 2F        	sra a
  13+ 9EF5 C9           	ret
  14+ 9EF6
# file closed: calcula_tercio.asm
1733  9EF6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9EF6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9EF6              ;
   3+ 9EF6              ;
   4+ 9EF6              ;	CLS.
   5+ 9EF6              ;
   6+ 9EF6              ;	Limpia la pantalla y define sus atributos.
   7+ 9EF6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9EF6              ;
   9+ 9EF6              ;	COLORES: 0 ..... NEGRO
  10+ 9EF6              ;    		 1 ..... AZUL
  11+ 9EF6              ; 			 2 ..... ROJO
  12+ 9EF6              ;			 3 ..... MAGENTA
  13+ 9EF6              ; 			 4 ..... VERDE
  14+ 9EF6              ; 			 5 ..... CIAN
  15+ 9EF6              ;			 6 ..... AMARILLO
  16+ 9EF6              ; 			 7 ..... BLANCO
  17+ 9EF6              ;
  18+ 9EF6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9EF6              ;
  20+ 9EF6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9EF6
  22+ 9EF6
  23+ 9EF6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9EF9 11 01 40     	LD DE,$4001
  25+ 9EFC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9EFF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F01 ED B0        	LDIR
  28+ 9F03 01 FF 02     	LD BC,767
  29+ 9F06 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F07 ED B0        	LDIR
  31+ 9F09 C9           	ret
  32+ 9F0A
# file closed: Cls.asm
1734  9F0A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9F0A              ; ------------------------------------------------------------------------
   2+ 9F0A              ;
   3+ 9F0A              ;	30/1/24
   4+ 9F0A              ;
   5+ 9F0A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9F0A              ;	Fila superior "0", Columna izquierda "0".
   7+ 9F0A              ;
   8+ 9F0A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9F0A              ;
  10+ 9F0A              ;	Modifica: A,BC y DE.
  11+ 9F0A
  12+ 9F0A 7D           Genera_coordenadas ld a,l
  13+ 9F0B E6 1F        	and $1f
  14+ 9F0D 32 54 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9F10
  16+ 9F10 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9F11 FE 40        	cp $40
  18+ 9F13 38 1C        	jr c,4F
  19+ 9F15
  20+ 9F15 CD EC 9E     	call calcula_tercio
  21+ 9F18 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9F19
  23+ 9F19 1E 00        	ld e,0
  24+ 9F1B 7D           	ld a,l
  25+ 9F1C E6 E0        	and $e0
  26+ 9F1E 28 01        	jr z,1F
  27+ 9F20 04           	inc b
  28+ 9F21
  29+ 9F21 04           1 inc b
  30+ 9F22 05           	dec b
  31+ 9F23 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9F25              ;														; _ , salimos.
  33+ 9F25 1C           3 inc e
  34+ 9F26 D6 20        	sub 32
  35+ 9F28 20 FB        	jr nz,3B
  36+ 9F2A 10 F5        	djnz 1B
  37+ 9F2C
  38+ 9F2C 7B           2 ld a,e
  39+ 9F2D 32 55 89     	ld (Coordenada_y),a
  40+ 9F30 C9           	ret
  41+ 9F31
  42+ 9F31 AF           4 xor a
  43+ 9F32 32 55 89     	ld (Coordenada_y),a
  44+ 9F35 C9           	ret
  45+ 9F36
  46+ 9F36              ; ------------------------------------------------------------------------
  47+ 9F36              ;	28/05/23
  48+ 9F36              ;
  49+ 9F36              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9F36              ;	Fila superior "0", Columna izquierda "0".
  51+ 9F36              ;
  52+ 9F36              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9F36              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9F36              ;
  55+ 9F36              ;		DE="$120d"
  56+ 9F36              ;
  57+ 9F36              ;		D, (Coordenada_X), Columnas, $12
  58+ 9F36              ;		E, (Coordenada_y), Filas, $0d
  59+ 9F36              ;
  60+ 9F36              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9F36
  62+ 9F36              ;	Modifica: A,BC y DE.
  63+ 9F36
  64+ 9F36
  65+ 9F36              Genera_coordenadas_disparo
  66+ 9F36
  67+ 9F36              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9F36
  69+ 9F36 7D           	ld a,l
  70+ 9F37 E6 1F        	and $1f
  71+ 9F39 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9F3A CD EC 9E     	call calcula_tercio
  73+ 9F3D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9F3E 1E 00        	ld e,0
  75+ 9F40 7D           	ld a,l
  76+ 9F41 E6 E0        	and $e0
  77+ 9F43 28 01        	jr z,1F
  78+ 9F45 04           	inc b
  79+ 9F46 1C           1 inc e
  80+ 9F47 D6 20        	sub 32
  81+ 9F49 20 FB        	jr nz,1B
  82+ 9F4B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F4D C9           	ret
  84+ 9F4E
# file closed: Genera_coordenadas.asm
1735  9F4E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F4E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F4E              ;
   3+ 9F4E              ;	12/12/23
   4+ 9F4E              ;
   5+ 9F4E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F4E
   7+ 9F4E              ;	ADC HL,SP	LD (addr),SP
   8+ 9F4E              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F4E              ;	ADD IX,SP	LD SP,nn
  10+ 9F4E              ; 	ADD IY,SP	LD SP,HL
  11+ 9F4E              ;				LD SP,IX
  12+ 9F4E              ;	DEC SP		LD SP,IY
  13+ 9F4E
  14+ 9F4E              ;	EX (SP),HL
  15+ 9F4E              ;	EX (SP),IX
  16+ 9F4E              ;	EX (SP),IY
  17+ 9F4E
  18+ 9F4E              ;	INC SP
  19+ 9F4E
  20+ 9F4E                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 A0 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 6A 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 6C 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 8F 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A A8 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 70 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AC 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A6 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 8F 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 A8 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 70 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AC 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B A0 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A6 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B A0 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A6 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A6 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1736  8131
1737  8131              	SAVESNA "Pruebas.sna", START
1738  8131
1739  8131
1740  8131
1741  8131
# file closed: Banco_de_pruebas.asm
