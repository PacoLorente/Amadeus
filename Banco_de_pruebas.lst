# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B6 8E     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 0F 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 13 8A        	defw End_Snapshot_1
 267+ 8500 17 8A        	defw End_Snapshot_2
 268+ 8502 1B 8A        	defw End_Snapshot_3
 269+ 8504 11 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 15 8A        	defw End_Snapshot_disparos_1
 271+ 8508 19 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1D 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  20  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 5A 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 5A 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  21  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB B9 88        	defw Nivel_2
   7+ 88AD C6 88        	defw Nivel_3
   8+ 88AF D6 88        	defw Nivel_4
   9+ 88B1 E8 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88B8 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88B9 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88BE 01 02
  22+ 88C0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C4 01 02
  23+ 88C6 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CB 01
  25+ 88CC 03 01 01 01  	db 3,1,1,1,1
  25+ 88D0 01
  26+ 88D1 03 01 01 01  	db 3,1,1,1,1
  26+ 88D5 01
  27+ 88D6 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DB 01
  29+ 88DC 04 01 01 01  	db 4,1,1,1,1
  29+ 88E0 01
  30+ 88E1 04 01 01 01  	db 4,1,1,1,1
  30+ 88E5 01
  31+ 88E6 02 03        	db 2,3
  32+ 88E8 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88E9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88ED 01
  34+ 88EE 05 01 01 01  	db 5,1,1,1,1
  34+ 88F2 01
  35+ 88F3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F7 01
  36+ 88F8 05 01 01 01  	db 5,1,1,1,1
  36+ 88FC 01
  37+ 88FD
  38+ 88FD              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FD              ;
  40+ 88FD              ;   21/5/23
  41+ 88FD              ;
  42+ 88FD              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FD              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FD              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FD              ;	_en la caja DRAW correspondiente.
  46+ 88FD              ;
  47+ 88FD              ;	MODIFICA: HL,DE y A.
  48+ 88FD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FD
  50+ 88FD              Inicializa_Punteros_de_nivel
  51+ 88FD
  52+ 88FD 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8900 22 49 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8903 CD 8C 8D     	call Extrae_address
  55+ 8906 7E           	ld a,(hl)
  56+ 8907 32 FF 89     	ld (Numero_de_entidades),a
  57+ 890A 23           	inc hl
  58+ 890B 22 4B 8A     	ld (Datos_de_nivel),hl
  59+ 890E C9           	ret
  60+ 890F
  61+ 890F              ;---------------------------------------------------------------------------------------------------------------
  62+ 890F              ;
  63+ 890F              ;   13/5/23
  64+ 890F              ;
  65+ 890F              ;	Destruye A,BC,HL,DE
  66+ 890F
  67+ 890F              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 890F              ;	_del juego.
  69+ 890F
  70+ 890F              Prepara_cajas
  71+ 890F
  72+ 890F              ; Preparamos los punteros de las cajas.
  73+ 890F
  74+ 890F 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8912 CD 8C 8D     	call Extrae_address
  76+ 8915 CD 52 89     	call Avanza_caja
  77+ 8918
  78+ 8918 CD 96 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891B
  80+ 891B 2A 4B 8A     	ld hl,(Datos_de_nivel)
  81+ 891E
  82+ 891E              ; HL está en los datos del nivel correspondiente.
  83+ 891E              ; B actuará como contador de cajas.
  84+ 891E
  85+ 891E C5           1 push bc
  86+ 891F
  87+ 891F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8920 CD 43 89     	call PreparaBC
  89+ 8923
  90+ 8923 21 85 88     	ld hl,Indice_de_entidades
  91+ 8926 CD 4B 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8929 22 05 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892C
  94+ 892C CD 5C 89     	call Datos_de_entidad_a_caja
  95+ 892F
  96+ 892F 2A FD 89     	ld hl,(Indice_restore_caja)
  97+ 8932 CD 8C 8D     	call Extrae_address
  98+ 8935 CD 52 89     	call Avanza_caja
  99+ 8938
 100+ 8938 2A 4B 8A     	ld hl,(Datos_de_nivel)
 101+ 893B 23           	inc hl
 102+ 893C 22 4B 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 893F
 104+ 893F C1           	pop bc
 105+ 8940 10 DC        	djnz 1B
 106+ 8942 C9           	ret
 107+ 8943
 108+ 8943 CB 27        PreparaBC sla a
 109+ 8945 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8947 4F           	ld c,a
 111+ 8948 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894A C9           	ret
 113+ 894B
 114+ 894B A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894C ED 4A        	adc hl,bc
 116+ 894E CD 8C 8D     	call Extrae_address
 117+ 8951 C9           	ret
 118+ 8952
 119+ 8952 22 F9 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8955 13           	inc de
 121+ 8956 13           	inc de
 122+ 8957 EB           	ex de,hl
 123+ 8958 22 FD 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895B C9           	ret
 125+ 895C
 126+ 895C              Datos_de_entidad_a_caja
 127+ 895C
 128+ 895C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895C
 130+ 895C
 131+ 895C ED 5B F9 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8960
 133+ 8960 01 02 00     	ld bc,2
 134+ 8963 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8965
 136+ 8965 01 07 00     	ld bc,7
 137+ 8968 CD 90 89     	call Situa_DE
 138+ 896B
 139+ 896B 01 05 00     	ld bc,5
 140+ 896E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8970
 142+ 8970 01 04 00     	ld bc,4
 143+ 8973 CD 90 89     	call Situa_DE
 144+ 8976
 145+ 8976 01 07 00     	ld bc,7
 146+ 8979 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897B
 148+ 897B 01 18 00     	ld bc,24
 149+ 897E CD 90 89     	call Situa_DE
 150+ 8981
 151+ 8981 01 02 00     	ld bc,2
 152+ 8984 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8986
 154+ 8986              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8986              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8986
 157+ 8986 01 0F 00     	ld bc,15									; *****
 158+ 8989 CD 90 89     	call Situa_DE
 159+ 898C
 160+ 898C 3E 03        	ld a,3
 161+ 898E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 898F
 163+ 898F C9           	ret
 164+ 8990
 165+ 8990 EB           Situa_DE ex de,hl
 166+ 8991 A7           	and a
 167+ 8992 ED 4A        	adc hl,bc
 168+ 8994 EB           	ex de,hl
 169+ 8995 C9           	ret
 170+ 8996
 171+ 8996              ;---------------------------------------------------------------------------------------------------------------
 172+ 8996              ;
 173+ 8996              ;	21/5/23
 174+ 8996              ;
 175+ 8996              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8996              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8996              ;
 178+ 8996              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8996              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8996              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8996              ;
 182+ 8996              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8996              ;	MODIFICA: A y B.
 184+ 8996              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8996
 186+ 8996              Admin_num_entidades
 187+ 8996
 188+ 8996              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8996
 190+ 8996 3A FF 89     	ld a,(Numero_de_entidades)
 191+ 8999 A7           	and a
 192+ 899A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899A              ;	jr z,$
 194+ 899A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899A
 196+ 899A 20 03        	jr nz,3F
 197+ 899C
 198+ 899C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899C
 200+ 899C CD FD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 899F
 202+ 899F
 203+ 899F 3A FF 89     3 ld a,(Numero_de_entidades)
 204+ 89A2 FE 0A        	cp 10
 205+ 89A4 38 08        	jr c,1F
 206+ 89A6
 207+ 89A6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89A6              ; Actualizamos variables.
 209+ 89A6
 210+ 89A6 3E 0A        	ld a,10
 211+ 89A8 32 00 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89AB 47           	ld b,a
 213+ 89AC 18 04        	jr 2F
 214+ 89AE
 215+ 89AE              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89AE              ; (Numero_de_entidades)="0".
 217+ 89AE
 218+ 89AE 32 00 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89B1 47           	ld b,a
 220+ 89B2 C9           2 ret
# file closed: Niveles.asm
  22  89B3
  23  89B3              ; ******************************************************************************************************************************************************************************************
  24  89B3              ; Constantes.
  25  89B3              ; ******************************************************************************************************************************************************************************************
  26  89B3              ;
  27  89B3              ; 25/05/23
  28  89B3              ;
  29  89B3              ; Constantes generales.
  30  89B3              ;
  31  89B3
  32  89B3              Sprite_vacio equ $f000
  33  89B3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  34  89B3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  35  89B3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  36  89B3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  37  89B3
  38  89B3              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  39  89B3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  40  89B3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  41  89B3              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  42  89B3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  43  89B3              ;                               				        ; De momento situamos este almacén en $7060.
  44  89B3              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  45  89B3              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  46  89B3              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  47  89B3              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  48  89B3              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  49  89B3              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  50  89B3
  51  89B3              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  52  89B3
  53  89B3              ; ******************************************************************************************************************************************************************************************
  54  89B3              ; Variables.
  55  89B3              ; ******************************************************************************************************************************************************************************************
  56  89B3              ;
  57  89B3              ; 28/07/23
  58  89B3              ;
  59  89B3              ; Variables de DRAW. (Motor principal).
  60  89B3              ;
  61  89B3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  62  89B3
  63  89B3 00           Filas db 0												; Filas. [DRAW]
  64  89B4 00           Columns db 0  											; Nº de columnas. [DRAW]
  65  89B5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  66  89B7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  67  89B9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  68  89BA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  69  89BB
  70  89BB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  71  89BB
  72  89BB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  73  89BC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  74  89BC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  75  89BC 00           Attr db 0												; Atributos de la entidad:
  76  89BD
  77  89BD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  78  89BD              ;
  79  89BD              ;	COLORES: 0 ..... NEGRO
  80  89BD              ;    		 1 ..... AZUL
  81  89BD              ; 			 2 ..... ROJO
  82  89BD              ;			 3 ..... MAGENTA
  83  89BD              ; 			 4 ..... VERDE
  84  89BD              ; 			 5 ..... CIAN
  85  89BD              ;			 6 ..... AMARILLO
  86  89BD              ; 			 7 ..... BLANCO
  87  89BD
  88  89BD 00 00        Indice_Sprite_der defw 0
  89  89BF 00 00        Indice_Sprite_izq defw 0
  90  89C1 00 00        Puntero_DESPLZ_der defw 0
  91  89C3 00 00        Puntero_DESPLZ_izq defw 0
  92  89C5
  93  89C5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  94  89C7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  95  89C8
  96  89C8              ; Variables de objeto. (Características).
  97  89C8
  98  89C8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  99  89C9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 100  89CA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 101  89CB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 102  89CC
 103  89CC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 104  89CD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 105  89CD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 106  89CD
 107  89CD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89CF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  89D1 00 00        	defw 0
 110  89D3 00 00 00 00  	db 0,0,0,0
 111  89D7
 112  89D7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89D9 00 00        	defw 0
 114  89DB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 115  89DD 00 00 00 00  	db 0,0,0,0
 116  89E1
 117  89E1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 118  89E1
 119  89E1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 120  89E2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 121  89E2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 122  89E2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 123  89E2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 124  89E2              ;
 125  89E2              ; 														DESCRIPCIÖN:
 126  89E2              ;
 127  89E2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 128  89E2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 129  89E2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 130  89E2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 131  89E2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 132  89E2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 133  89E2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 134  89E2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 135  89E2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 136  89E2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 137  89E2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 138  89E2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 139  89E2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 140  89E2              ;
 141  89E2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 142  89E2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 143  89E2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 144  89E2
 145  89E2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 146  89E3
 147  89E3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 148  89E3
 149  89E3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 150  89E4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 151  89E6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 152  89E8 00 00        Puntero_indice_mov_bucle defw 0							;
 153  89EA              ;
 154  89EA              ;
 155  89EA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 156  89EB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 157  89EB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 158  89EB 00           Incrementa_puntero_backup db 0
 159  89EC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 160  89ED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 161  89ED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 162  89EE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 163  89EF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 164  89F0              ;
 165  89F0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 166  89F0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 167  89F0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 168  89F0              ;
 169  89F0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 170  89F0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 171  89F0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 172  89F0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 173  89F0              ;
 174  89F0              ;														;	"$ff" ..... Bucle infinito de repetición.
 175  89F0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 176  89F0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 177  89F0
 178  89F0
 179  89F0              ; Variables de funcionamiento. [DRAW].
 180  89F0
 181  89F0 00           Columnas db 0
 182  89F1 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 183  89F3              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  89F3 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F4
 186  89F4              ; variables de control general.
 187  89F4
 188  89F4 00           Ctrl_2 db 0
 189  89F5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 190  89F5              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 191  89F5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 192  89F5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 193  89F5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 194  89F5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 195  89F5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 196  89F5              ;
 197  89F5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 198  89F5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 199  89F5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 200  89F5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 201  89F5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 202  89F5
 203  89F5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  89F6
 205  89F6              ;! 67 Bytes por entidad.
 206  89F6
 207  89F6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  89F6              ;					         		---------;      ;---------
 209  89F6
 210  89F6
 211  89F6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  89F6
 213  89F6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  89F7
 215  89F7              ;														DESCRIPCIÓN:
 216  89F7              ;
 217  89F7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  89F7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  89F7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  89F7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  89F7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  89F7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  89F7
 224  89F7              ;														BIT 3, Recarga de nueva oleada.
 225  89F7              ;														BIT 4, Recarga de nueva oleada.
 226  89F7
 227  89F7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 228  89F9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 229  89F9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 230  89F9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 231  89F9
 232  89F9
 233  89F9
 234  89F9              ; Gestión de ENTIDADES y CAJAS.
 235  89F9
 236  89F9 00 00        Puntero_store_caja defw 0
 237  89FB 00 00        Puntero_restore_caja defw 0
 238  89FD 00 00        Indice_restore_caja defw 0
 239  89FF 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 240  8A00 00           Numero_parcial_de_entidades db 0
 241  8A01 00           Entidades_en_curso db 0									; ..... ..... .....
 242  8A02 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 243  8A03              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 244  8A03              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 245  8A03              ;														; _ (Numero_de_malotes)="0".
 246  8A03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 247  8A05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 248  8A07              ;														; _ puntero (Indice_entidades).
 249  8A07
 250  8A07
 251  8A07              ;---------------------------------------------------------------------------------------------------------------
 252  8A07              ;
 253  8A07              ;	9/8/23
 254  8A07              ;
 255  8A07              ;	Álbumes.
 256  8A07
 257  8A07 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 258  8A09              ;															; _variable para almacenar lo posición del puntero_
 259  8A09              ; 															; _de pila, SP.
 260  8A09 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 261  8A0B              ;															; La utiliza la rutina [Extrae_foto_registros].
 262  8A0B 00 00        Stack_snapshot defw 0
 263  8A0D 00 00        Stack_snapshot_disparos defw 0
 264  8A0F
 265  8A0F 00 00        End_Snapshot defw 0
 266  8A11              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 267  8A11 00 00        End_Snapshot_disparos defw 0								; Puntero que indica la posición de memoria donde vamos a guardar_
 268  8A13              ;															; _el snapshot de los registros del siguiente disparo.
 269  8A13              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 270  8A13 00 00        End_Snapshot_1 defw 0
 271  8A15 00 00        End_Snapshot_disparos_1 defw 0
 272  8A17 00 00        End_Snapshot_2 defw 0
 273  8A19 00 00        End_Snapshot_disparos_2 defw 0
 274  8A1B 00 00        End_Snapshot_3 defw 0
 275  8A1D 00 00        End_Snapshot_disparos_3 defw 0
 276  8A1F
 277  8A1F 00 00        Puntero_indice_album_de_fotos defw 0
 278  8A21 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 279  8A23
 280  8A23 00 00        Puntero_indice_End_Snapshot defw 0
 281  8A25 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 282  8A27 00 00        Puntero_de_End_Snapshot defw 0
 283  8A29 00 00        Puntero_de_End_Snapshot_disparos defw 0
 284  8A2B
 285  8A2B              ;---------------------------------------------------------------------------------------------------------------
 286  8A2B
 287  8A2B              ; Gestión de Disparos.
 288  8A2B
 289  8A2B 00           Numero_de_disparotes db 0
 290  8A2C 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 291  8A2E 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 292  8A30 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 293  8A31              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 294  8A31              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 295  8A31 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 296  8A33              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 297  8A33              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 298  8A33              ;														; _produzca colisión.
 299  8A33 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 300  8A35              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 301  8A35 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 302  8A38              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 303  8A38 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 304  8A3B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 305  8A3B 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 306  8A3D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 307  8A3E
 308  8A3E              ;---------------------------------------------------------------------------------------------------------------
 309  8A3E
 310  8A3E              ; Relojes y temporizaciones.
 311  8A3E
 312  8A3E 00           Contador_de_frames db 0
 313  8A3F 04           Clock_explosion db 4
 314  8A40 1E           Clock_Entidades_en_curso db 30
 315  8A41 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 316  8A42              ;														; Repite la oleada de entidades.
 317  8A42 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 318  8A43 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 319  8A44 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 320  8A45
 321  8A45 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 322  8A46 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 323  8A47 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 324  8A48
 325  8A48              ;---------------------------------------------------------------------------------------------------------------
 326  8A48
 327  8A48              ; Gestión de NIVELES.
 328  8A48
 329  8A48 00           Nivel db 0												; Nivel actual del juego.
 330  8A49 00 00        Puntero_indice_NIVELES defw 0
 331  8A4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 332  8A4D              ; 														; _ que definen el NIVEL.
 333  8A4D              ; Y todo comienza aquí .....
 334  8A4D              ;
 335  8A4D              ; Rutina principal *************************************************************************************************************************************************************************
 336  8A4D              ;
 337  8A4D              ;	14/11/22
 338  8A4D
 339  8A4D              START
 340  8A4D
 341  8A4D 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 342  8A50 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 343  8A52 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 344  8A54 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 345  8A56 F3           	DI
 346  8A57
 347  8A57 3E 07        	ld a,%00000111
 348  8A59 CD 96 99     	call Cls
 349  8A5C
 350  8A5C CD 65 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 351  8A5F
 352  8A5F              ; INICIALIZACIÓN.
 353  8A5F
 354  8A5F CD FD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 355  8A62
 356  8A62 CD 0F 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 357  8A65
 358  8A65 CD DA 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 359  8A68              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 360  8A68 CD F0 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 361  8A6B              ;													     ; _ malotes antes de guardar ninguna foto.
 362  8A6B              ; ----------
 363  8A6B
 364  8A6B CD 15 8E     	call Restore_entidad
 365  8A6E
 366  8A6E 21 00 8A     	ld hl,Numero_parcial_de_entidades
 367  8A71 46           	ld b,(hl)
 368  8A72 04           	inc b
 369  8A73 05           	dec b
 370  8A74 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 371  8A76
 372  8A76              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 373  8A76              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 374  8A76              ;	Pintamos el resto de entidades:
 375  8A76
 376  8A76              ;	INICIA ENTIDADES !!!!!
 377  8A76
 378  8A76 C5           1 push bc  												; Guardo el contador de entidades.
 379  8A77
 380  8A77 CD 81 8C     	call Inicia_entidad
 381  8A7A
 382  8A7A C1           	pop bc
 383  8A7B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 384  8A7D
 385  8A7D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 386  8A7D              ; (Esto se dá cuando se inicia una nueva oleada).
 387  8A7D
 388  8A7D 3A F6 89     	ld a,(Ctrl_1)
 389  8A80 CB 5F        	bit 3,a
 390  8A82 20 18        	jr nz,5F											; Loop
 391  8A84
 392  8A84              ; 	INICIA AMADEUS !!!!!
 393  8A84
 394  8A84 CD 3C 8E     3 call Restore_Amadeus
 395  8A87 CD 92 8D     	call Inicia_Puntero_objeto
 396  8A8A CD D0 93     	call Draw
 397  8A8D CD A0 7F     	call Guarda_foto_registros
 398  8A90 11 A4 85     	ld de,Amadeus_db
 399  8A93 CD 4E 8E     	call Store_Amadeus
 400  8A96
 401  8A96              ; 	INICIA DISPAROS !!!!!
 402  8A96
 403  8A96 CD 4E 8D     	call Inicia_Puntero_Disparo_Entidades
 404  8A99 CD 55 8D     	call Inicia_Puntero_Disparo_Amadeus
 405  8A9C
 406  8A9C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 407  8A9C
 408  8A9C CD DA 8C     5 call Inicia_punteros_de_cajas
 409  8A9F CD 15 8E     	call Restore_entidad
 410  8AA2
 411  8AA2 3A F6 89     	ld a,(Ctrl_1)
 412  8AA5 CB 5F        	bit 3,a
 413  8AA7 28 0A        	jr z,6F
 414  8AA9
 415  8AA9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 416  8AA9
 417  8AA9 21 F6 89     	ld hl,Ctrl_1
 418  8AAC CB 9E        	res 3,(hl)
 419  8AAE CD 5C 8D     	call Calcula_numero_de_malotes
 420  8AB1 18 0A        	jr Main
 421  8AB3
 422  8AB3              ; ----------
 423  8AB3
 424  8AB3 3A 00 8A     6 ld a,(Numero_parcial_de_entidades)
 425  8AB6 3C           	inc a
 426  8AB7 32 02 8A     	ld (Numero_de_malotes),a
 427  8ABA
 428  8ABA              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 429  8ABA              ; _ tenemos calculado (Numero_de_malotes).
 430  8ABA              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 431  8ABA              ; _ para situarnos en el siguiente album.
 432  8ABA
 433  8ABA CD 21 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 434  8ABD
 435  8ABD              ; ------------------------------------
 436  8ABD
 437  8ABD              Main
 438  8ABD
 439  8ABD FB           	ei ; Interrupciones habilitadas.
 440  8ABE
 441  8ABE              ; -----------------------------------------------------------------------
 442  8ABE              ;
 443  8ABE              ;	3/8/23
 444  8ABE
 445  8ABE 3A 40 8A     	ld a,(Clock_Entidades_en_curso)
 446  8AC1 47           	ld b,a
 447  8AC2 3A 3E 8A     	ld a,(Contador_de_frames)
 448  8AC5 B8           	cp b
 449  8AC6 20 18        	jr nz,13F
 450  8AC8              ;
 451  8AC8              ;!debuggg
 452  8AC8              ;    ld a,(Contador_de_frames)
 453  8AC8              ;    ld hl,(Stack_snapshot)
 454  8AC8              ;    jr $
 455  8AC8              ;!debuggg
 456  8AC8
 457  8AC8 3A 00 8A     	ld a,(Numero_parcial_de_entidades)
 458  8ACB 47           	ld b,a
 459  8ACC 3A 01 8A     	ld a,(Entidades_en_curso)
 460  8ACF B8           	cp b
 461  8AD0 28 0E        	jr z,13F
 462  8AD2 30 0C        	jr nc,13F
 463  8AD4
 464  8AD4 3C           	inc a
 465  8AD5 32 01 8A     	ld (Entidades_en_curso),a
 466  8AD8
 467  8AD8 3A 40 8A     	ld a,(Clock_Entidades_en_curso)
 468  8ADB
 469  8ADB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 470  8ADB              ;! _ IMPREDECIBLE !!!!
 471  8ADB
 472  8ADB C6 64        	add 100
 473  8ADD 32 40 8A     	ld (Clock_Entidades_en_curso),a
 474  8AE0
 475  8AE0              ; Habilita disparos.
 476  8AE0
 477  8AE0 21 42 8A     13 ld hl,Disparo_Amadeus
 478  8AE3 11 44 8A     	ld de,CLOCK_repone_disparo_Amadeus
 479  8AE6 CD 5B A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 480  8AE9
 481  8AE9 21 45 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 482  8AEC 11 47 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 483  8AEF CD 5B A0     	call Habilita_disparos
 484  8AF2
 485  8AF2              ; COLISIONES.
 486  8AF2
 487  8AF2 CD B2 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 488  8AF5
 489  8AF5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 490  8AF5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 491  8AF5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 492  8AF5
 493  8AF5 AF           	xor a
 494  8AF6 32 30 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 495  8AF9
 496  8AF9 CD DA 8C     	call Inicia_punteros_de_cajas
 497  8AFC CD 15 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 498  8AFF              ; 														; _ en DRAW.
 499  8AFF 3A B3 89     	ld a,(Filas)
 500  8B02 A7           	and a
 501  8B03 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 502  8B05 CD 27 8E     	call Incrementa_punteros_de_cajas
 503  8B08 18 F2        	jr 12B
 504  8B0A
 505  8B0A              ; ---------------------------------------------------------------------------------------
 506  8B0A
 507  8B0A 3A 00 8A     10 ld a,(Numero_parcial_de_entidades)
 508  8B0D 47               ld b,a
 509  8B0E A7           	and a
 510  8B0F 20 14        	jr nz,11F
 511  8B11
 512  8B11 21 F6 89     	ld hl,Ctrl_1
 513  8B14 CB 66        	bit 4,(hl)
 514  8B16 C2 A2 8B     	jp nz,16F
 515  8B19
 516  8B19 21 F6 89     	ld hl,Ctrl_1
 517  8B1C CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 518  8B1E
 519  8B1E 3A 3E 8A     	ld a,(Contador_de_frames)
 520  8B21 3C           	inc a
 521  8B22 32 41 8A     	ld (Activa_recarga_cajas),a
 522  8B25
 523  8B25              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 524  8B25
 525  8B25 3A 01 8A     11 ld a,(Entidades_en_curso)
 526  8B28 A7           	and a
 527  8B29 CA A2 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 528  8B2C 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 529  8B2D
 530  8B2D              ; Código que ejecutamos con cada entidad:
 531  8B2D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 532  8B2D
 533  8B2D C5           15 push bc 												; Nº de entidades en curso.
 534  8B2E
 535  8B2E              ; Impacto ???
 536  8B2E
 537  8B2E 3A CC 89     	ld a,(Impacto)
 538  8B31 A7           	and a
 539  8B32 28 2D        	jr z,8F
 540  8B34
 541  8B34              ; Hay Impacto en esta entidad.
 542  8B34
 543  8B34 21 3F 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 544  8B37 35           	dec (hl)
 545  8B38 20 62        	jr nz,17F
 546  8B3A
 547  8B3A              ;! Velocidad de la animación de la explosión.
 548  8B3A
 549  8B3A 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 550  8B3C              ;														; _,(velocidad de la explosión).
 551  8B3C CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 552  8B3F
 553  8B3F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 554  8B3F
 555  8B3F 3A F4 89     	ld a,(Ctrl_2)
 556  8B42 CB 4F        	bit 1,a
 557  8B44 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 558  8B46
 559  8B46              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 560  8B46
 561  8B46 3A BB 89     	ld a,(CTRL_DESPLZ)
 562  8B49 A7           	and a
 563  8B4A 20 08        	jr nz,18F
 564  8B4C
 565  8B4C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 566  8B4F 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 567  8B52 18 06        	jr 19F
 568  8B54
 569  8B54 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 570  8B57 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 571  8B5A
 572  8B5A 21 F4 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 573  8B5D CB CE        	set 1,(hl)
 574  8B5F 18 22        	jr 7F
 575  8B61
 576  8B61              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 577  8B61              ; _con las coordenadas de la entidad almacenada en DRAW.
 578  8B61
 579  8B61 3A F6 89     8 ld a,(Ctrl_1)
 580  8B64 CB 57        	bit 2,a
 581  8B66 28 1B        	jr z,7F
 582  8B68
 583  8B68 2A 33 8A     	ld hl,(Coordenadas_disparo_certero)
 584  8B6B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 585  8B6C              ;														; E contiene la coordenada_X del disparo.
 586  8B6C 2A B9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 587  8B6F              ;														; H FILA, (Coordenada_y de la entidad).
 588  8B6F A7           	and a
 589  8B70 ED 52        	sbc hl,de
 590  8B72
 591  8B72 CD E9 92     	call Determina_resultado_comparativa
 592  8B75
 593  8B75 78           	ld a,b
 594  8B76 A7           	and a
 595  8B77 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 596  8B79
 597  8B79              ; ----- ----- -----
 598  8B79
 599  8B79 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 600  8B7B 32 CC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 601  8B7E
 602  8B7E 21 F6 89     	ld hl,Ctrl_1
 603  8B81 CB 96        	res 2,(hl)
 604  8B83
 605  8B83 CD 03 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 606  8B86
 607  8B86 3A E1 89     	ld a,(Ctrl_0)
 608  8B89 CB 67        	bit 4,a
 609  8B8B 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 610  8B8D
 611  8B8D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 612  8B8D              ; [[[
 613  8B8D CD B0 8E     	call Detecta_disparo_entidad
 614  8B90              ; ]]]
 615  8B90 CD A1 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 616  8B93
 617  8B93 21 E1 89     	ld hl,Ctrl_0
 618  8B96 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 619  8B98 AF           	xor a
 620  8B99 32 E2 89     	ld (Obj_dibujado),a
 621  8B9C
 622  8B9C CD DA 8D     17 call Store_Restore_cajas
 623  8B9F
 624  8B9F C1           	pop bc
 625  8BA0 10 8B        	djnz 15B
 626  8BA2
 627  8BA2              ; ------------------------------------
 628  8BA2
 629  8BA2              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 630  8BA2              ; Hemos gestionado todas las unidades.
 631  8BA2              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 632  8BA2
 633  8BA2              ;	ld hl,Ctrl_1
 634  8BA2              ;	res 2,(hl)
 635  8BA2
 636  8BA2              ; ------------------------------------
 637  8BA2
 638  8BA2              ; Tras la gestión de las entidades, ... AMADEUS.
 639  8BA2
 640  8BA2 CD 3C 8E     16 call Restore_Amadeus
 641  8BA5
 642  8BA5 3A CC 89     	ld a,(Impacto)
 643  8BA8 A7           	and a
 644  8BA9 20 FE        	jr nz,$
 645  8BAB
 646  8BAB CD 62 8C     	call Mov_Amadeus
 647  8BAE
 648  8BAE 3A E1 89     	ld a,(Ctrl_0)
 649  8BB1 CB 67        	bit 4,a
 650  8BB3 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 651  8BB5
 652  8BB5 CD A1 8C     	call Guarda_foto_entidad_a_pintar
 653  8BB8
 654  8BB8 21 E1 89     14 ld hl,Ctrl_0
 655  8BBB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 656  8BBD AF           	xor a
 657  8BBE 32 E2 89     	ld (Obj_dibujado),a
 658  8BC1
 659  8BC1 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 660  8BC4 CD 4E 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 661  8BC7
 662  8BC7 CD 46 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 663  8BCA
 664  8BCA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 665  8BCA
 666  8BCA CD 74 8D     	call Calcula_numero_de_disparotes
 667  8BCD CD 5C 8D     9 call Calcula_numero_de_malotes
 668  8BD0
 669  8BD0 CD 21 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 670  8BD3
 671  8BD3 3E 04        	ld a,4
 672  8BD5 D3 FE        	out ($fe),a
 673  8BD7
 674  8BD7              ; ----------------------------------------
 675  8BD7
 676  8BD7 3A F6 89     	ld a,(Ctrl_1) 										; Existe Loop?
 677  8BDA CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 678  8BDC CA BD 8A     	jp z,Main
 679  8BDF
 680  8BDF              ; -----
 681  8BDF              ;	(((
 682  8BDF
 683  8BDF 3A 3E 8A     	ld a,(Contador_de_frames)
 684  8BE2 47           	ld b,a
 685  8BE3 3A 41 8A     	ld a,(Activa_recarga_cajas)
 686  8BE6 B8           	cp b
 687  8BE7 28 08        	jr z,20F
 688  8BE9
 689  8BE9 21 F6 89     	ld hl,Ctrl_1
 690  8BEC CB E6        	set 4,(hl)
 691  8BEE C3 BD 8A     	jp Main
 692  8BF1
 693  8BF1 21 F6 89     20 ld hl,Ctrl_1
 694  8BF4 CB A6        	res 4,(hl)
 695  8BF6 F3           	di
 696  8BF7
 697  8BF7 3A 3E 8A     	ld a,(Contador_de_frames)
 698  8BFA
 699  8BFA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 700  8BFA              ;! _ IMPREDECIBLE !!!!
 701  8BFA
 702  8BFA C6 0A        	add 10
 703  8BFC 32 40 8A     	ld (Clock_Entidades_en_curso),a
 704  8BFF
 705  8BFF C3 62 8A     	jp 4B
 706  8C02
 707  8C02 C9           	ret
 708  8C03
 709  8C03              ; --------------------------------------------------------------------------------------------------------------
 710  8C03              ;
 711  8C03              ;	27/05/23
 712  8C03
 713  8C03              Mov_obj
 714  8C03
 715  8C03              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 716  8C03
 717  8C03 3A F4 89     	ld a,(Ctrl_2)
 718  8C06 CB 4F        	bit 1,a
 719  8C08 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 720  8C0A
 721  8C0A              ; Explosión:
 722  8C0A
 723  8C0A 3A F5 89     	ld a,(Frames_explosion)
 724  8C0D A7           	and a
 725  8C0E 20 11        	jr nz,4F
 726  8C10
 727  8C10              ; Una alimaña menos!!!!!!!!!1
 728  8C10
 729  8C10 CD 57 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 730  8C13 21 00 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 731  8C16 35           	dec (hl)
 732  8C17 21 01 8A     	ld hl,Entidades_en_curso
 733  8C1A 35           	dec (hl)
 734  8C1B 21 FF 89     	ld hl,Numero_de_entidades
 735  8C1E 35           	dec (hl)
 736  8C1F 18 40        	jr 3F
 737  8C21
 738  8C21              ; -----
 739  8C21
 740  8C21              ;	`Movemos´ la explosión.
 741  8C21
 742  8C21 2A C1 89     4 ld hl,(Puntero_DESPLZ_der)
 743  8C24 23           	inc hl
 744  8C25 23           	inc hl
 745  8C26 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 746  8C29 CD 8C 8D     	call Extrae_address
 747  8C2C 22 B7 89     	ld (Puntero_objeto),hl
 748  8C2F
 749  8C2F 21 F5 89     	ld hl,Frames_explosion
 750  8C32 35           	dec (hl)
 751  8C33
 752  8C33 CD 91 8C     	call Guarda_foto_entidad_a_borrar
 753  8C36 18 29        	jr 3F
 754  8C38
 755  8C38 AF           2 xor a
 756  8C39 32 E2 89     	ld (Obj_dibujado),a
 757  8C3C 32 E1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 758  8C3F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 759  8C3F              ; 														; _de la entidad.
 760  8C3F CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 761  8C42              ;														; Obj_dibujado="0".
 762  8C42              ; Movemos Entidades malignas.
 763  8C42
 764  8C42              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 765  8C42              ;	and a 												; _a movernos. (Limitador_de_entidades).
 766  8C42              ;	ret z
 767  8C42
 768  8C42 CD F6 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 769  8C45
 770  8C45 3A E1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 771  8C48 CB 67        	bit 4,a
 772  8C4A C8           	ret z
 773  8C4B
 774  8C4B              ; Ha habido desplazamiento de la entidad maligna.
 775  8C4B              ; Ha llegado a zona de AMADEUS ???
 776  8C4B
 777  8C4B 3A BA 89     	ld a,(Coordenada_y)
 778  8C4E FE 14        	cp $14
 779  8C50 D4 77 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 780  8C53              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 781  8C53              ; ---------
 782  8C53
 783  8C53 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 784  8C55 32 E2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 785  8C58 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 786  8C5B CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 787  8C5E CD 91 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 788  8C61 C9           3 ret													; _de la misma.
 789  8C62
 790  8C62              ; --------------------------------------------------------------------------------------------------------------
 791  8C62              ;
 792  8C62              ;	29/1/23
 793  8C62
 794  8C62              Mov_Amadeus
 795  8C62
 796  8C62 AF           	xor a
 797  8C63 32 E2 89     	ld (Obj_dibujado),a
 798  8C66 CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 799  8C69              ;														; Obj_dibujado="0".
 800  8C69              ; Movemos Amadeus.
 801  8C69
 802  8C69 CD 79 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 803  8C6C 3A E1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 804  8C6F CB 67        	bit 4,a
 805  8C71 C8           	ret z
 806  8C72
 807  8C72              ; ---------
 808  8C72
 809  8C72 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 810  8C74 32 E2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 811  8C77 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 812  8C7A CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 813  8C7D CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 814  8C80 C9           	ret													; _de la nave.
 815  8C81
 816  8C81              ; -----------------------------------------------------------------------------------
 817  8C81
 818  8C81 CD 92 8D     Inicia_entidad	call Inicia_Puntero_objeto
 819  8C84 CD AA 99     	call Recompone_posicion_inicio
 820  8C87 CD D0 93     	call Draw
 821  8C8A CD A0 7F     	call Guarda_foto_registros
 822  8C8D CD DA 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 823  8C90 C9           	ret
 824  8C91
 825  8C91              ; --------------------------------------------------------------------------------------------------------------
 826  8C91              ;
 827  8C91              ;	31/01/23
 828  8C91              ;
 829  8C91              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 830  8C91
 831  8C91              Guarda_foto_entidad_a_borrar
 832  8C91
 833  8C91 CD B4 96     	call Prepara_draw
 834  8C94 CD E4 95     	call calcula_CColumnass
 835  8C97 CD 1B 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 836  8C9A CD 7A 96     	call Define_rutina_de_impresion
 837  8C9D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 838  8CA0 C9           	ret
 839  8CA1
 840  8CA1              ; --------------------------------------------------------------------------------------------------------------
 841  8CA1              ;
 842  8CA1              ;	31/01/23
 843  8CA1              ;
 844  8CA1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 845  8CA1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 846  8CA1
 847  8CA1              Guarda_foto_entidad_a_pintar
 848  8CA1
 849  8CA1 CD CE 8C     	call Repone_pintar
 850  8CA4 CD D0 93     	call Draw
 851  8CA7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 852  8CAA C9           	ret
 853  8CAB
 854  8CAB              ; --------------------------------------------------------------------------------------------------------------
 855  8CAB              ;
 856  8CAB              ;
 857  8CAB
 858  8CAB 21 B3 89     Prepara_var_pintado_borrado	ld hl,Filas
 859  8CAE 3A E2 89     	ld a,(Obj_dibujado)
 860  8CB1 A7           	and a
 861  8CB2 28 05        	jr z,1F
 862  8CB4 11 D7 89     	ld de,Variables_de_pintado
 863  8CB7 18 03        	jr 2F
 864  8CB9 11 CD 89     1 ld de,Variables_de_borrado
 865  8CBC 01 08 00     2 ld bc,8
 866  8CBF ED B0        	ldir
 867  8CC1 C9           	ret
 868  8CC2
 869  8CC2              ; --------------------------------------------------------------------------------------------------------------
 870  8CC2
 871  8CC2 21 CD 89     Repone_borrar ld hl,Variables_de_borrado
 872  8CC5 11 B3 89     	ld de,Filas
 873  8CC8 01 08 00     	ld bc,8
 874  8CCB ED B0        	ldir
 875  8CCD C9           	ret
 876  8CCE
 877  8CCE 21 D7 89     Repone_pintar ld hl,Variables_de_pintado
 878  8CD1 11 B3 89     	ld de,Filas
 879  8CD4 01 08 00     	ld bc,8
 880  8CD7 ED B0        	ldir
 881  8CD9 C9           	ret
 882  8CDA
 883  8CDA              ; *************************************************************************************************************************************************************
 884  8CDA              ;
 885  8CDA              ; 8/1/23
 886  8CDA              ;
 887  8CDA              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 888  8CDA              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 889  8CDA              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 890  8CDA
 891  8CDA              ; Destruye HL y DE !!!!!
 892  8CDA
 893  8CDA              Inicia_punteros_de_cajas
 894  8CDA
 895  8CDA 21 8C 85     	ld hl,Indice_de_cajas
 896  8CDD CD 8C 8D         call Extrae_address
 897  8CE0 22 F9 89         ld (Puntero_store_caja),hl
 898  8CE3 21 8E 85     	ld hl,Indice_de_cajas+2
 899  8CE6 22 FD 89     	ld (Indice_restore_caja),hl
 900  8CE9 CD 8C 8D     	call Extrae_address
 901  8CEC 22 FB 89     	ld (Puntero_restore_caja),hl
 902  8CEF C9               ret
 903  8CF0
 904  8CF0              ; ---------------------------------------------------------------
 905  8CF0              ;
 906  8CF0              ;	9/8/23
 907  8CF0              ;
 908  8CF0              ;	Inicialización y gestión de álbumes de fotos y cajas.
 909  8CF0
 910  8CF0              Inicia_punteros_de_albumes_y_malotes
 911  8CF0
 912  8CF0 21 EC 84     	ld hl,Indice_album_de_fotos
 913  8CF3 22 1F 8A     	ld (Puntero_indice_album_de_fotos),hl
 914  8CF6 CD 8C 8D     	call Extrae_address
 915  8CF9 22 0B 8A     	ld (Stack_snapshot),hl
 916  8CFC
 917  8CFC 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 918  8CFF 22 21 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 919  8D02 CD 8C 8D     	call Extrae_address
 920  8D05 22 0D 8A     	ld (Stack_snapshot_disparos),hl
 921  8D08
 922  8D08 21 FC 84     	ld hl,Indice_End_Snapshot
 923  8D0B 22 23 8A     	ld (Puntero_indice_End_Snapshot),hl
 924  8D0E CD 8C 8D     	call Extrae_address
 925  8D11 22 27 8A     	ld (Puntero_de_End_Snapshot),hl
 926  8D14
 927  8D14 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 928  8D17 22 25 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 929  8D1A CD 8C 8D     	call Extrae_address
 930  8D1D 22 29 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 931  8D20
 932  8D20 C9           	ret
 933  8D21
 934  8D21              Avanza_puntero_de_album_de_fotos_y_malotes
 935  8D21
 936  8D21              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 937  8D21
 938  8D21              ; Estamos en el último álbum del índice???.
 939  8D21
 940  8D21 2A 1F 8A     	ld hl,(Puntero_indice_album_de_fotos)
 941  8D24 01 F2 84     	ld bc,Indice_album_de_fotos+6
 942  8D27 A7           	and a
 943  8D28 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 944  8D2A 20 02        	jr nz,1F								 		; El buffer está lleno. HALT.
 945  8D2C
 946  8D2C 76           	halt
 947  8D2D C9           	ret
 948  8D2E
 949  8D2E 2A 1F 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 950  8D31 23           	inc hl
 951  8D32 23           	inc hl
 952  8D33 22 1F 8A     	ld (Puntero_indice_album_de_fotos),hl
 953  8D36 CD 8C 8D     	call Extrae_address
 954  8D39 22 0B 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 955  8D3C
 956  8D3C 2A 23 8A     	ld hl,(Puntero_indice_End_Snapshot)
 957  8D3F 23           	inc hl
 958  8D40 23           	inc hl
 959  8D41 22 23 8A     	ld (Puntero_indice_End_Snapshot),hl
 960  8D44 CD 8C 8D     	call Extrae_address
 961  8D47 22 27 8A     	ld (Puntero_de_End_Snapshot),hl
 962  8D4A
 963  8D4A C9           	ret
 964  8D4B
 965  8D4B              Retrasa_puntero_de_album_de_fotos_y_malotes
 966  8D4B
 967  8D4B 18 FE        	jr $
 968  8D4D
 969  8D4D C9           	ret
 970  8D4E              ; *************************************************************************************************************************************************************
 971  8D4E              ;
 972  8D4E              ; 8/1/23
 973  8D4E              ;
 974  8D4E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 975  8D4E
 976  8D4E 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 977  8D51 22 2C 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 978  8D54 C9           	ret
 979  8D55 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 980  8D58 22 2E 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 981  8D5B C9           	ret
 982  8D5C
 983  8D5C              ; -------------------------------------------------------------------------------------------------------------
 984  8D5C              ;
 985  8D5C              ; 3/8/23
 986  8D5C              ;
 987  8D5C
 988  8D5C              Calcula_numero_de_malotes
 989  8D5C
 990  8D5C 21 00 70     	ld hl,Album_de_fotos
 991  8D5F EB           	ex de,hl
 992  8D60 2A 0F 8A     	ld hl,(End_Snapshot)
 993  8D63
 994  8D63 06 00        	ld b,0
 995  8D65 7D           	ld a,l
 996  8D66 93           	sub e
 997  8D67 28 07        	jr z,1F
 998  8D69
 999  8D69              ; Nº de malotes no es "0".
1000  8D69
1001  8D69 D6 06        2 sub 6
1002  8D6B 04           	inc b
1003  8D6C A7           	and a
1004  8D6D 20 FA        	jr nz,2B
1005  8D6F 78           	ld a,b
1006  8D70
1007  8D70 32 02 8A     1 ld (Numero_de_malotes),a
1008  8D73 C9           	ret
1009  8D74
1010  8D74              ; -------------------------------------------------------------------------------------------------------------
1011  8D74              ;
1012  8D74              ; 28/2/23
1013  8D74              ;
1014  8D74
1015  8D74              Calcula_numero_de_disparotes
1016  8D74
1017  8D74 21 0D 72     	ld hl,Album_de_fotos_disparos
1018  8D77 EB           	ex de,hl
1019  8D78 2A 29 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1020  8D7B
1021  8D7B 06 00        	ld b,0
1022  8D7D 7D           	ld a,l
1023  8D7E 93           	sub e
1024  8D7F 28 07        	jr z,1F
1025  8D81
1026  8D81              ; Nº de malotes no es "0".
1027  8D81
1028  8D81 D6 06        2 sub 6
1029  8D83 04           	inc b
1030  8D84 A7           	and a
1031  8D85 20 FA        	jr nz,2B
1032  8D87 78           	ld a,b
1033  8D88
1034  8D88 32 2B 8A     1 ld (Numero_de_disparotes),a
1035  8D8B C9           	ret
1036  8D8C
1037  8D8C              ; *************************************************************************************************************************************************************
1038  8D8C              ;
1039  8D8C              ; 20/10/22
1040  8D8C              ;
1041  8D8C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1042  8D8C              ;
1043  8D8C              ; Destruye el puntero y DE !!!!!
1044  8D8C
1045  8D8C 5E           Extrae_address ld e,(hl)
1046  8D8D 23           	inc hl
1047  8D8E 56           	ld d,(hl)
1048  8D8F 2B           	dec hl
1049  8D90 EB           	ex de,hl
1050  8D91 C9           	ret
1051  8D92
1052  8D92              ; *************************************************************************************************************************************************************
1053  8D92              ;
1054  8D92              ;	7/2/23
1055  8D92              ;
1056  8D92              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1057  8D92              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1058  8D92              ;
1059  8D92              ;   Destruye HL y BC !!!!!,
1060  8D92              ;
1061  8D92              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1062  8D92              ;					"0" ..... Izquierda.
1063  8D92
1064  8D92              Inicia_Puntero_objeto
1065  8D92
1066  8D92 3A C7 89     	ld a,(Cuad_objeto)
1067  8D95 E6 01        	and 1
1068  8D97 F5           	push af
1069  8D98 CC B6 8D     	call z,Inicia_puntero_objeto_izq
1070  8D9B F1           	pop af
1071  8D9C 28 2B        	jr z,1F
1072  8D9E CD A3 8D     	call Inicia_puntero_objeto_der
1073  8DA1 18 26        	jr 1F
1074  8DA3
1075  8DA3              ; Arrancamos desde la parte izquierda de la pantalla.
1076  8DA3              ; Iniciamos (Indice_Sprite_der).
1077  8DA3
1078  8DA3 2A BD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1079  8DA6 22 C1 89     	ld (Puntero_DESPLZ_der),hl
1080  8DA9 CD 8C 8D     	call Extrae_address
1081  8DAC 22 B7 89     	ld (Puntero_objeto),hl
1082  8DAF
1083  8DAF 2A BF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1084  8DB2 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
1085  8DB5 C9           	ret
1086  8DB6
1087  8DB6              ; Arrancamos desde la parte derecha de la pantalla.
1088  8DB6              ; Iniciamos (Indice_Sprite_izq).
1089  8DB6
1090  8DB6 2A BF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1091  8DB9 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
1092  8DBC CD 8C 8D     	call Extrae_address
1093  8DBF 22 B7 89     	ld (Puntero_objeto),hl
1094  8DC2
1095  8DC2 2A BD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1096  8DC5 22 C1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1097  8DC8 C9           	ret
1098  8DC9
1099  8DC9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1100  8DC9
1101  8DC9 21 40 83     1 ld hl,Amadeus
1102  8DCC ED 4B B7 89  	ld bc,(Puntero_objeto)
1103  8DD0 B7 ED 42     	sub hl,bc
1104  8DD3 C0           	ret nz
1105  8DD4 21 E1 89     	ld hl,Ctrl_0
1106  8DD7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1107  8DD9 C9           	ret 												; _de nuestra nave en los extremos.
1108  8DDA
1109  8DDA              ; *************************************************************************************************************************************************************
1110  8DDA              ;
1111  8DDA              ;	14/5/23
1112  8DDA              ;
1113  8DDA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1114  8DDA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1115  8DDA
1116  8DDA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1117  8DDA              ;	_de la 2ª y 3ª entidad respectivamente.
1118  8DDA
1119  8DDA              Store_Restore_cajas
1120  8DDA
1121  8DDA E5           	push hl
1122  8DDB D5           	push de
1123  8DDC C5            	push bc
1124  8DDD
1125  8DDD              ;	STORE !!!!!
1126  8DDD              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1127  8DDD
1128  8DDD 21 B3 89     	ld hl,Filas
1129  8DE0 ED 5B F9 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1130  8DE4 01 43 00     	ld bc,67
1131  8DE7 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1132  8DE9
1133  8DE9              ; 	Entidad_sospechosa. 20/4/23
1134  8DE9
1135  8DE9 3A CC 89     	ld a,(Impacto)
1136  8DEC A7           	and a
1137  8DED 28 0C        	jr z,1F
1138  8DEF
1139  8DEF 2A F9 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1140  8DF2 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1141  8DF5 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1142  8DF6 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1143  8DF8 22 31 8A     	ld (Entidad_sospechosa_de_colision),hl
1144  8DFB
1145  8DFB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1146  8DFB
1147  8DFB 2A FB 89     1 ld hl,(Puntero_restore_caja)
1148  8DFE 7E           	ld a,(hl)
1149  8DFF A7           	and a
1150  8E00 F5           	push af
1151  8E01 28 08        	jr z,2F
1152  8E03
1153  8E03 11 B3 89     	ld de,Filas
1154  8E06 01 43 00     	ld bc,67
1155  8E09 ED B0        	ldir
1156  8E0B
1157  8E0B CD 27 8E     2 call Incrementa_punteros_de_cajas
1158  8E0E F1           	pop af
1159  8E0F 28 EA        	jr z,1B
1160  8E11
1161  8E11 C1           	pop bc
1162  8E12 D1           	pop de
1163  8E13 E1           	pop hl
1164  8E14
1165  8E14 C9           	ret
1166  8E15
1167  8E15              ; **************************************************************************************************
1168  8E15              ;
1169  8E15              ;	12/05/23
1170  8E15              ;
1171  8E15              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1172  8E15
1173  8E15 E5           Restore_entidad push hl
1174  8E16 D5           	push de
1175  8E17 C5            	push bc
1176  8E18
1177  8E18 2A F9 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1178  8E1B 11 B3 89     	ld de,Filas
1179  8E1E 01 43 00     	ld bc,67
1180  8E21 ED B0        	ldir
1181  8E23
1182  8E23 C1           	pop bc
1183  8E24 D1           	pop de
1184  8E25 E1           	pop hl
1185  8E26 C9           	ret
1186  8E27
1187  8E27
1188  8E27              ; **************************************************************************************************
1189  8E27              ;
1190  8E27              ;	08/05/23
1191  8E27              ;
1192  8E27              ;	Incrementamos los dos punteros de entidades. (+1).
1193  8E27
1194  8E27 2A FB 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1195  8E2A 22 F9 89     	ld (Puntero_store_caja),hl
1196  8E2D 2A FD 89     	ld hl,(Indice_restore_caja)
1197  8E30 23           	inc hl
1198  8E31 23           	inc hl
1199  8E32 22 FD 89     	ld (Indice_restore_caja),hl
1200  8E35 CD 8C 8D         call Extrae_address
1201  8E38 22 FB 89         ld (Puntero_restore_caja),hl
1202  8E3B C9               ret
1203  8E3C
1204  8E3C              ; **************************************************************************************************
1205  8E3C              ;
1206  8E3C              ;	25/01/23
1207  8E3C              ;
1208  8E3C              ;	Restore_Amadeus
1209  8E3C              ;
1210  8E3C              ;	Cargamos en DRAW los parámetros de Amadeus.
1211  8E3C              ;
1212  8E3C
1213  8E3C E5           Restore_Amadeus	push hl
1214  8E3D D5           	push de
1215  8E3E C5            	push bc
1216  8E3F 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1217  8E42 11 B3 89     	ld de,Filas
1218  8E45 01 43 00     	ld bc,67
1219  8E48 ED B0        	ldir
1220  8E4A C1           	pop bc
1221  8E4B D1           	pop de
1222  8E4C E1           	pop hl
1223  8E4D C9           	ret
1224  8E4E
1225  8E4E              ; *************************************************************************************************************************************************************
1226  8E4E              ;
1227  8E4E              ;	29/04/23
1228  8E4E              ;
1229  8E4E              ;	Store_Amadeus
1230  8E4E              ;
1231  8E4E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1232  8E4E              ;
1233  8E4E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1234  8E4E              ;
1235  8E4E              ;	DESTRUYE: HL y BC y DE.
1236  8E4E
1237  8E4E 21 B3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1238  8E51 01 43 00     	ld bc,67
1239  8E54 ED B0        	ldir
1240  8E56 C9           	ret
1241  8E57
1242  8E57              ; -----------------------------------------------------------
1243  8E57              ;
1244  8E57              ;	27/04/23
1245  8E57              ;
1246  8E57              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1247  8E57              ;
1248  8E57              ;	Destruye: HL,BC,DE,A
1249  8E57
1250  8E57 21 B3 89     Borra_datos_entidad ld hl,Filas
1251  8E5A 01 42 00     	ld bc,66
1252  8E5D AF           	xor a
1253  8E5E 77           	ld (hl),a
1254  8E5F 11 B4 89     	ld de,Filas+1
1255  8E62 ED B0        	ldir
1256  8E64 C9           	ret
1257  8E65
1258  8E65              ; -----------------------------------------------------------
1259  8E65
1260  8E65              ; Teclado.
1261  8E65
1262  8E65 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1263  8E67 DB FE        	in a,($fe)
1264  8E69 E6 01        	and $01
1265  8E6B 28 02        	jr z,1f
1266  8E6D 18 F6        	jr Pulsa_ENTER
1267  8E6F C9           1 ret
1268  8E70
1269  8E70              ; **************************************************************************************************
1270  8E70              ;
1271  8E70              ; Temporización.
1272  8E70
1273  8E70              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1274  8E70              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1275  8E70              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1276  8E70              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1277  8E70
1278  8E70              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1279  8E70              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1280  8E70              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1281  8E70
1282  8E70              ; A partir de $4f61 no hace falta DELAY.
1283  8E70
1284  8E70              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1285  8E70
1286  8E70 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1287  8E73 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1288  8E74 78           	LD A,B
1289  8E75 A7           	AND A
1290  8E76 20 FB        	JR NZ,wait
1291  8E78 C9           	RET
1292  8E79
1293  8E79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1294  8E79              ;
1295  8E79              ;	5/3/23
1296  8E79              ;
1297  8E79              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1298  8E79
1299  8E79              Movimiento_Amadeus
1300  8E79
1301  8E79              ; Disparo.
1302  8E79
1303  8E79 3A 42 8A     	ld a,(Disparo_Amadeus)
1304  8E7C A7           	and a
1305  8E7D 20 02        	jr nz,1F
1306  8E7F 18 15        	jr 2F
1307  8E81
1308  8E81 3E F7        1 ld a,$f7													; "5" para disparar.
1309  8E83 DB FE        	in a,($fe)
1310  8E85 E6 10        	and $10
1311  8E87
1312  8E87 F5           	push af
1313  8E88 CC DA 8E     	call z,Genera_disparo
1314  8E8B F1           	pop af
1315  8E8C 20 08        	jr nz,2F
1316  8E8E
1317  8E8E 3A 42 8A     	ld a,(Disparo_Amadeus)
1318  8E91 EE 01        	xor 1
1319  8E93 32 42 8A     	ld (Disparo_Amadeus),a
1320  8E96
1321  8E96 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1322  8E98 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1323  8E9A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1324  8E9C CC 64 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1325  8E9F 3E F7        	ld a,$f7
1326  8EA1 DB FE        	in a,($fe)
1327  8EA3 E6 01        	and $01
1328  8EA5 C8           	ret z
1329  8EA6
1330  8EA6 3E F7        	ld a,$f7
1331  8EA8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1332  8EAA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1333  8EAC CC 46 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1334  8EAF C9           	ret
1335  8EB0
1336  8EB0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1337  8EB0              ;
1338  8EB0              ;	Rutina provisional para que los malotes cagen balas.
1339  8EB0
1340  8EB0              Detecta_disparo_entidad
1341  8EB0
1342  8EB0 3A 45 8A     	ld a,(Disparo_entidad)
1343  8EB3 A7           	and a
1344  8EB4 C8           	ret z
1345  8EB5
1346  8EB5              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1347  8EB5
1348  8EB5              ;	ld a,$7f				; Detecta SPACE.
1349  8EB5              ;	in a,($fe)
1350  8EB5              ;	and 1
1351  8EB5              ;	ret nz
1352  8EB5
1353  8EB5              ;	call Genera_disparo
1354  8EB5 C9           	ret
1355  8EB6
1356  8EB6              ; ----------------------------------------------------------------------
1357  8EB6              ;
1358  8EB6              ;	3/8/23
1359  8EB6
1360  8EB6              Frame
1361  8EB6
1362  8EB6              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1363  8EB6              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1364  8EB6
1365  8EB6              ; PINTAMOS.
1366  8EB6
1367  8EB6 F5           	push af
1368  8EB7 C5           	push bc
1369  8EB8 D5           	push de
1370  8EB9 E5           	push hl
1371  8EBA
1372  8EBA 3E 02            ld a,2
1373  8EBC D3 FE            out ($fe),a											; Rojo.
1374  8EBE CD DE 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1375  8EC1 CD 1D 97     	call Extrae_foto_disparos
1376  8EC4 3E 01            ld a,1
1377  8EC6 D3 FE            out ($fe),a											; Azul.
1378  8EC8
1379  8EC8              ; Gestiona los álbumes de fotos.
1380  8EC8
1381  8EC8 CD 28 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1382  8ECB CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1383  8ECE CD 4B 8D     	call Retrasa_puntero_de_album_de_fotos_y_malotes
1384  8ED1
1385  8ED1              ; RELOJES.
1386  8ED1
1387  8ED1 21 3E 8A     	ld hl,Contador_de_frames
1388  8ED4 34           	inc (hl)											; 0 - 255
1389  8ED5
1390  8ED5 E1           	pop hl
1391  8ED6 D1           	pop de
1392  8ED7 C1           	pop bc
1393  8ED8 F1           	pop af
1394  8ED9
1395  8ED9 C9           	ret
1396  8EDA
1397  8EDA              ; ---------------------------------------------------------------
1398  8EDA
1399  8EDA              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EDA              ; ******************************************************************************************************************************************************************************************
   2+ 8EDA              ;
   3+ 8EDA              ;   21/07/23
   4+ 8EDA              ;
   5+ 8EDA              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EDA              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EDA              ;
   8+ 8EDA              ;
   9+ 8EDA              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EDA              ;
  11+ 8EDA              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EDA              ;               _ hacen las entidades hacia abajo.
  13+ 8EDA              ;
  14+ 8EDA              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EDA              ;
  16+ 8EDA              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EDA              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EDA              ;
  19+ 8EDA              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EDA              ;           _ la bala.
  21+ 8EDA              ;
  22+ 8EDA              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EDA              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EDA              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EDA              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EDA              ;           _ en el momento de generarse la bala)).
  27+ 8EDA
  28+ 8EDA              Genera_disparo
  29+ 8EDA
  30+ 8EDA              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EDA              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EDA              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EDA              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EDA              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EDA              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EDA              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EDA
  38+ 8EDA              ; Exclusiones:
  39+ 8EDA
  40+ 8EDA 3A CB 89         ld a,(Vel_down)
  41+ 8EDD 47               ld b,a
  42+ 8EDE 3A 3D 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EE1 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EE2 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EE3 3A F0 89         ld a,(Columnas)
  46+ 8EE6 47               ld b,a
  47+ 8EE7 3A B4 89         ld a,(Columns)
  48+ 8EEA B8               cp b
  49+ 8EEB C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EEC
  51+ 8EEC              ; ----- ----- -----
  52+ 8EEC
  53+ 8EEC 3A E1 89         ld a,(Ctrl_0)
  54+ 8EEF CB 77            bit 6,a
  55+ 8EF1 20 06            jr nz,14F
  56+ 8EF3
  57+ 8EF3 3A BA 89         ld a,(Coordenada_y)
  58+ 8EF6 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EF8 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EF9
  61+ 8EF9 21 00 80     14 ld hl,Indice_disparo
  62+ 8EFC 3A BB 89         ld a,(CTRL_DESPLZ)
  63+ 8EFF 4F               ld c,a
  64+ 8F00 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F02              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F02              ;                                            ""        ""       "f9", B="1"
  67+ 8F02              ;                                            ""        ""       "fb", B="2"
  68+ 8F02              ;                                            ""        ""       "fb", B="3"
  69+ 8F02 A7               and a
  70+ 8F03 28 10            jr z,1F
  71+ 8F05 E6 01            and 1
  72+ 8F07 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F08
  74+ 8F08 79               ld a,c
  75+ 8F09 16 F9            ld d,$f9
  76+ 8F0B 23           2 inc hl
  77+ 8F0C 23               inc hl
  78+ 8F0D 04               inc b
  79+ 8F0E BA               cp d
  80+ 8F0F 28 04            jr z,1F
  81+ 8F11 14               inc d
  82+ 8F12 14               inc d
  83+ 8F13 18 F6            jr 2B
  84+ 8F15
  85+ 8F15 CD 8C 8D     1 call Extrae_address
  86+ 8F18 E5               push hl
  87+ 8F19 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F1B DD 21 5F 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F1F
  90+ 8F1F              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F1F              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F1F
  93+ 8F1F 3A E1 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F22 CB 77            bit 6,a
  95+ 8F24 20 04            jr nz,19F
  96+ 8F26
  97+ 8F26 AF               xor a
  98+ 8F27 32 45 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F2A
 100+ 8F2A 3A C7 89     19 ld a,(Cuad_objeto)
 101+ 8F2D FE 02            cp 2
 102+ 8F2F 38 66            jr c,3F
 103+ 8F31 28 64            jr z,3F
 104+ 8F33
 105+ 8F33              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F33
 107+ 8F33 E6 01            and 1
 108+ 8F35 28 30            jr z,4F
 109+ 8F37
 110+ 8F37              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F37              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F37              ;
 113+ 8F37              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F37              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F37              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F37
 117+ 8F37 2A B5 89     	ld hl,(Posicion_actual)
 118+ 8F3A
 119+ 8F3A              ;   Amadeus o entidad ???.
 120+ 8F3A
 121+ 8F3A 3A E1 89         ld a,(Ctrl_0)
 122+ 8F3D CB 77            bit 6,a
 123+ 8F3F 28 0A            jr z,8F
 124+ 8F41
 125+ 8F41              ; 	Dispara Amadeus.
 126+ 8F41
 127+ 8F41 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F43 CD CF 96         call PreviousScan
 129+ 8F46 CD CF 96         call PreviousScan
 130+ 8F49
 131+ 8F49              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F49              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F49              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F49              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F49
 136+ 8F49 18 11            jr 10F
 137+ 8F4B
 138+ 8F4B              ; 	Dispara Entidad.
 139+ 8F4B
 140+ 8F4B 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F4E              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F4E
 143+ 8F4E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F4E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F4E
 146+ 8F4E C5               push bc
 147+ 8F4F 06 10            ld b,16
 148+ 8F51 CD C0 96     9 call NextScan
 149+ 8F54 10 FB            djnz 9B
 150+ 8F56 C1               pop bc
 151+ 8F57 CD C1 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F5A 18 06            jr 17F
 153+ 8F5C
 154+ 8F5C              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F5C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F5C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F5C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F5C
 159+ 8F5C CD C1 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F5F CD 36 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F62              ;                                                      ; _al generar el disparo.
 162+ 8F62
 163+ 8F62              ; 	LLegados a este punto tendremos:
 164+ 8F62              ;
 165+ 8F62              ;       Puntero_objeto_disparo en IY.
 166+ 8F62              ;       Rutinas_de_impresion en IX.
 167+ 8F62              ;       Puntero_de_impresion en HL.
 168+ 8F62              ;       Impacto/Dirección en BC.
 169+ 8F62
 170+ 8F62 CD C9 8F     17 call Almacena_disparo
 171+ 8F65 18 52            jr 6F                                             ; RET.
 172+ 8F67
 173+ 8F67              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F67              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F67              ;
 176+ 8F67              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F67              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F67              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F67
 180+ 8F67 2A B5 89     4 ld hl,(Posicion_actual)
 181+ 8F6A
 182+ 8F6A              ;   Amadeus o entidad ???.
 183+ 8F6A
 184+ 8F6A 3A E1 89         ld a,(Ctrl_0)
 185+ 8F6D CB 77            bit 6,a
 186+ 8F6F 28 0A            jr z,11F
 187+ 8F71
 188+ 8F71              ; 	Dispara Amadeus.
 189+ 8F71
 190+ 8F71 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F73 CD CF 96         call PreviousScan
 192+ 8F76 CD CF 96         call PreviousScan
 193+ 8F79
 194+ 8F79              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F79              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F79              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F79              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F79
 199+ 8F79 18 11            jr 13F
 200+ 8F7B
 201+ 8F7B              ; 	Dispara Entidad.
 202+ 8F7B
 203+ 8F7B 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F7E              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F7E
 206+ 8F7E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F7E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F7E
 209+ 8F7E C5               push bc
 210+ 8F7F 06 10            ld b,16
 211+ 8F81 CD C0 96     12 call NextScan
 212+ 8F84 10 FB            djnz 12B
 213+ 8F86 C1               pop bc
 214+ 8F87
 215+ 8F87 CD BA 8F         call Ajusta_disparo_parte_derecha
 216+ 8F8A 18 06            jr 18F
 217+ 8F8C
 218+ 8F8C              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F8C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F8C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F8C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F8C
 223+ 8F8C CD BA 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F8F CD 36 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F92              ;                                                       ; _al generar el disparo.
 226+ 8F92
 227+ 8F92              ; LLegados a este punto tendremos:
 228+ 8F92              ;
 229+ 8F92              ;       Puntero_objeto_disparo en IY.
 230+ 8F92              ;       Rutinas_de_impresion en IX.
 231+ 8F92              ;       Puntero_de_impresion en HL.
 232+ 8F92              ;       Impacto/Dirección en BC.
 233+ 8F92
 234+ 8F92 CD C9 8F     18 call Almacena_disparo
 235+ 8F95 18 22            jr 6F                                               ; RET.
 236+ 8F97
 237+ 8F97              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F97
 239+ 8F97 28 11        3 jr z,5F
 240+ 8F99
 241+ 8F99              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F99              ;
 243+ 8F99              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F99              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F99              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F99              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F99
 248+ 8F99              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F99              ;	   ""        ""       "f9", B="1"
 250+ 8F99              ;	   ""        ""       "fb", B="2"
 251+ 8F99              ; 	   ""        ""       "fb", B="3"
 252+ 8F99
 253+ 8F99 2A B5 89     	ld hl,(Posicion_actual)
 254+ 8F9C CD C0 96     	call NextScan
 255+ 8F9F
 256+ 8F9F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F9F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F9F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F9F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F9F
 261+ 8F9F CD C1 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FA2
 263+ 8FA2              ; 	No se produce impacto. B="$80"
 264+ 8FA2              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FA2
 266+ 8FA2 01 80 80         ld bc,$8080
 267+ 8FA5
 268+ 8FA5              ; 	LLegados a este punto tendremos:
 269+ 8FA5              ;
 270+ 8FA5              ;       Puntero_objeto_disparo en IY.
 271+ 8FA5              ;       Rutinas_de_impresion en IX.
 272+ 8FA5              ;       Puntero_de_impresion en HL.
 273+ 8FA5              ;       Impacto/Dirección en BC.
 274+ 8FA5
 275+ 8FA5 CD C9 8F         call Almacena_disparo
 276+ 8FA8 18 0F            jr 6F                                           ; RET.
 277+ 8FAA
 278+ 8FAA              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FAA              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FAA              ;
 281+ 8FAA              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FAA              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FAA              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FAA              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FAA
 286+ 8FAA 2A B5 89     5 ld hl,(Posicion_actual)
 287+ 8FAD CD C0 96     	call NextScan
 288+ 8FB0
 289+ 8FB0              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FB0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FB0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FB0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FB0
 294+ 8FB0 CD BA 8F         call Ajusta_disparo_parte_derecha
 295+ 8FB3
 296+ 8FB3              ; 	No se produce impacto. B="$80"
 297+ 8FB3              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FB3
 299+ 8FB3 01 80 80     15 ld bc,$8080
 300+ 8FB6
 301+ 8FB6              ; 	LLegados a este punto tendremos:
 302+ 8FB6              ;
 303+ 8FB6              ;       Puntero_objeto_disparo en IY.
 304+ 8FB6              ;       Rutinas_de_impresion en IX.
 305+ 8FB6              ;       Puntero_de_impresion en HL.
 306+ 8FB6              ;       Impacto/Dirección en BC.
 307+ 8FB6
 308+ 8FB6 CD C9 8F         call Almacena_disparo
 309+ 8FB9
 310+ 8FB9 C9           6 ret
 311+ 8FBA
 312+ 8FBA              ; ----------------------------------------------------------------
 313+ 8FBA              ;
 314+ 8FBA              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FBA              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FBA              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FBA
 318+ 8FBA 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FBB FE 02            cp 2
 320+ 8FBD 38 01            jr c,1F
 321+ 8FBF 23               inc hl
 322+ 8FC0 C9           1 ret
 323+ 8FC1
 324+ 8FC1 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FC2 FE 01        	cp 1
 326+ 8FC4 20 01        	jr nz,1F
 327+ 8FC6 2B           	dec hl
 328+ 8FC7 2B           1 dec hl
 329+ 8FC8 C9               ret
 330+ 8FC9
 331+ 8FC9              ; ----------------------------------------------------------------
 332+ 8FC9              ;
 333+ 8FC9              ;   25/02/23
 334+ 8FC9              ;
 335+ 8FC9              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FC9              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FC9              ;
 338+ 8FC9              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FC9              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FC9
 341+ 8FC9              Almacena_disparo
 342+ 8FC9
 343+ 8FC9 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FCA F1               pop af
 345+ 8FCB 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FCC
 347+ 8FCC 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FCD E6 01            and 1
 349+ 8FCF 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FD1              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FD1              ; 	Dispara AMADEUS.
 352+ 8FD1
 353+ 8FD1              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FD1              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FD1              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FD1              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FD1
 358+ 8FD1 C5               push bc
 359+ 8FD2 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FD5 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FD8 A7               and a
 362+ 8FD9 ED 42            sbc hl,bc
 363+ 8FDB CC 55 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FDE C1               pop bc
 365+ 8FDF 28 54            jr z,4F
 366+ 8FE1
 367+ 8FE1 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FE4 23               inc hl
 369+ 8FE5 23               inc hl
 370+ 8FE6 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FE9              ;                                                   ; _ Disparo_(+1).
 372+ 8FE9 18 18            jr 2F
 373+ 8FEB
 374+ 8FEB              ; Dispara una entidad.
 375+ 8FEB
 376+ 8FEB C5           1 push bc
 377+ 8FEC 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FEF 2A 2C 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FF2 A7               and a
 380+ 8FF3 ED 42            sbc hl,bc
 381+ 8FF5 CC 4E 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FF8 C1               pop bc
 383+ 8FF9 28 3A            jr z,4F
 384+ 8FFB
 385+ 8FFB 2A 2C 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FFE 23               inc hl
 387+ 8FFF 23               inc hl
 388+ 9000 22 2C 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9003              ;                                                   ; _ Disparo_(+1).
 390+ 9003 CD 8C 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9006              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9006              ;
 393+ 9006              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9006              ;                                                     Rutinas_de_impresion en IX.
 395+ 9006              ;                                                     Puntero_de_impresion en HL.
 396+ 9006              ;                                                     Impacto/Dirección en BC.
 397+ 9006
 398+ 9006 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9007 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9008 23               inc hl                                          ; _ al siguiente.
 401+ 9009 A7               and a
 402+ 900A 20 C0            jr nz,3B
 403+ 900C
 404+ 900C 08               ex af,af
 405+ 900D ED 73 07 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9011 F9               ld sp,hl
 407+ 9012
 408+ 9012 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9014 F5               push af                                         ; Puntero de impresión.
 410+ 9015 FD E5            push iy                                         ; Puntero objeto.
 411+ 9017 C5               push bc                                         ; Control.
 412+ 9018
 413+ 9018 ED 7B 07 8A      ld sp,(Stack)
 414+ 901C
 415+ 901C              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 901C
 417+ 901C 21 F6 89     	ld hl,Ctrl_1
 418+ 901F CB C6        	set 0,(hl)
 419+ 9021
 420+ 9021 DD E5        	push ix
 421+ 9023 E1               pop hl
 422+ 9024 F5               push af
 423+ 9025 DD E1            pop ix
 424+ 9027
 425+ 9027 CD A0 7F     	call Guarda_foto_registros
 426+ 902A
 427+ 902A 21 F6 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 902D CB 86        	res 0,(hl)
 429+ 902F
 430+ 902F              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 902F              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 902F
 433+ 902F CD 55 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9032 CD 4E 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 9035
 436+ 9035 C9           4 ret
 437+ 9036
 438+ 9036              ; ----------------------------------------------------------------
 439+ 9036              ;
 440+ 9036              ;   4/3/23
 441+ 9036              ;
 442+ 9036              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9036              ;   _ al generarse el disparo.
 444+ 9036              ;
 445+ 9036              ;       "$80" ..... No se produce colisión.
 446+ 9036              ;       "$81" ..... Se produce colisión.
 447+ 9036              ;
 448+ 9036              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9036              ;         _ que forman el disparo.
 450+ 9036
 451+ 9036
 452+ 9036              Comprueba_Colision
 453+ 9036
 454+ 9036              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9036
 456+ 9036 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9038 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9039
 459+ 9039 CD 6F 90         call Modifica_H_Velocidad_disparo
 460+ 903C
 461+ 903C 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 903D FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 903F 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9041
 465+ 9041 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9043 CD 5F 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9046
 468+ 9046 7B               ld a,e
 469+ 9047 E6 01            and 1
 470+ 9049 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 904B              ;                                                  ; _ para activar IMPACTO.
 472+ 904B E1               pop hl
 473+ 904C E5               push hl
 474+ 904D CD C0 96         call NextScan
 475+ 9050
 476+ 9050 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9051 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9053 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9055              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9055 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9057 CD 5F 90         call Bucle_2
 482+ 905A
 483+ 905A 43           1 ld b,e
 484+ 905B E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 905C FD E1            pop iy
 486+ 905E C9               ret
 487+ 905F
 488+ 905F              ; ---------- ----------
 489+ 905F
 490+ 905F 06 02        Bucle_2 ld b,2
 491+ 9061 FD 7E 00     2 ld a,(iy)
 492+ 9064 A6               and (hl)
 493+ 9065 28 02            jr z,1F
 494+ 9067 1E 81            ld e,$81
 495+ 9069 23           1 inc hl
 496+ 906A FD 23            inc iy
 497+ 906C 10 F3            djnz 2B
 498+ 906E C9               ret
 499+ 906F
 500+ 906F              ; ---------- ----------
 501+ 906F              ;
 502+ 906F              ;   21/7/23
 503+ 906F
 504+ 906F              Modifica_H_Velocidad_disparo
 505+ 906F
 506+ 906F 3A 3D 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9072 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9074 D0               ret nc                                         ; _ incrementamos H.
 509+ 9075 24               inc h
 510+ 9076
 511+ 9076 C9               ret
 512+ 9077
 513+ 9077              ; -------------------------------------------------------------------------------------------------------------
 514+ 9077              ;
 515+ 9077              ;   11/04/23
 516+ 9077              ;
 517+ 9077              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9077              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9077              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9077              ;
 521+ 9077              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9077
 523+ 9077              Compara_coordenadas_X
 524+ 9077
 525+ 9077              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9077              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9077
 528+ 9077              ; Preparamos registros:
 529+ 9077
 530+ 9077 21 B9 89         ld hl,Filas+6
 531+ 907A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 907B 23               inc hl
 533+ 907C 23               inc hl
 534+ 907D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 907E 43               ld b,e
 536+ 907F
 537+ 907F 21 C7 89         ld hl,Filas+20
 538+ 9082 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9083 21 38 8A         ld hl,Coordenadas_X_Entidad
 540+ 9086 CD A2 92         call Guarda_coordenadas_X
 541+ 9089
 542+ 9089              ; Preparamos registros:
 543+ 9089
 544+ 9089 21 AA 85         ld hl,Amadeus_db+6
 545+ 908C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 908D 23               inc hl
 547+ 908E 23               inc hl
 548+ 908F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9090 7B               ld a,e
 550+ 9091 08               ex af,af'
 551+ 9092 21 B8 85         ld hl,Amadeus_db+20
 552+ 9095 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9096 21 35 8A         ld hl,Coordenadas_X_Amadeus
 554+ 9099 CD A2 92         call Guarda_coordenadas_X
 555+ 909C
 556+ 909C              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 909C              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 909C
 559+ 909C 04               inc b
 560+ 909D 05               dec b
 561+ 909E 28 04            jr z,1F
 562+ 90A0 06 03            ld b,3
 563+ 90A2 18 02            jr 2F
 564+ 90A4 06 02        1 ld b,2
 565+ 90A6 08           2 ex af,af'
 566+ 90A7 3C               inc a
 567+ 90A8 3D               dec a
 568+ 90A9 28 04            jr z,5F
 569+ 90AB 0E 03            ld c,3
 570+ 90AD 18 02            jr 6F
 571+ 90AF 0E 02        5 ld c,2
 572+ 90B1 79           6 ld a,c
 573+ 90B2 08               ex af,af'
 574+ 90B3 11 38 8A         ld de,Coordenadas_X_Entidad
 575+ 90B6 1A           4 ld a,(de)
 576+ 90B7 21 35 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90BA BE           3 cp (hl)
 578+ 90BB 28 0E            jr z,7F
 579+ 90BD 23               inc hl
 580+ 90BE 0D               dec c
 581+ 90BF 20 F9            jr nz,3B
 582+ 90C1 13               inc de
 583+ 90C2 08               ex af,af'
 584+ 90C3 4F               ld c,a
 585+ 90C4 08               ex af,af'
 586+ 90C5 10 EF            djnz 4B
 587+ 90C7
 588+ 90C7              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90C7
 590+ 90C7 CD DE 92     8 call Limpia_Coordenadas_X
 591+ 90CA C9               ret
 592+ 90CB
 593+ 90CB 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90CD 32 CC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90D0 21 30 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90D3 CB D6            set 2,(hl)
 597+ 90D5 18 F0            jr 8B
 598+ 90D7
 599+ 90D7              ; -----------------------------------------------------------------------
 600+ 90D7              ;
 601+ 90D7              ;   17/04/23
 602+ 90D7              ;
 603+ 90D7
 604+ 90D7              Detecta_colision_nave_entidad
 605+ 90D7
 606+ 90D7              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90D7
 608+ 90D7 2A B5 89         ld hl,(Posicion_actual)
 609+ 90DA CD 1B 96         call Calcula_puntero_de_impresion
 610+ 90DD
 611+ 90DD              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90DD              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90DD
 614+ 90DD DD E5            push ix
 615+ 90DF E1               pop hl
 616+ 90E0 E5               push hl
 617+ 90E1
 618+ 90E1              ; ----- ----- -----
 619+ 90E1 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90E3 06 0A            ld b,10
 621+ 90E5 CD 15 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90E8 7B               ld a,e
 623+ 90E9 FE 05            cp 5
 624+ 90EB 38 0E            jr c,3F
 625+ 90ED
 626+ 90ED              ; LLegados a este punto:
 627+ 90ED              ;
 628+ 90ED              ;   HAY COLISIÓN !!!!!.
 629+ 90ED              ;
 630+ 90ED              ;   .db (Impacto) de Amadeus a "1".
 631+ 90ED              ;   SET el bit3 de (Impacto2).
 632+ 90ED              ;
 633+ 90ED              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90ED
 635+ 90ED 21 BD 85         ld hl,Amadeus_db+25
 636+ 90F0 36 01            ld (hl),1
 637+ 90F2 21 30 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90F5 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90F7 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90F9 18 18            jr 1F
 641+ 90FB
 642+ 90FB              ; -----
 643+ 90FB
 644+ 90FB E1           3 pop hl
 645+ 90FC CD C0 96         call NextScan
 646+ 90FF E5               push hl
 647+ 9100 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9101 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9103 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9105 30 0C            jr nc,1F
 651+ 9107              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9107 10 DC            djnz 2B
 653+ 9109
 654+ 9109              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9109
 656+ 9109              ; LLegados a este punto:
 657+ 9109              ;
 658+ 9109              ;   NO HAY COLISIÓN !!!!!.
 659+ 9109              ;
 660+ 9109              ;   .db (Impacto) de Amadeus a "0".
 661+ 9109              ;   RES el bit2 de (Impacto2).
 662+ 9109              ;
 663+ 9109              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9109              ;   Lo colocamos a "0".
 665+ 9109
 666+ 9109 21 30 8A         ld hl,Impacto2
 667+ 910C CB 96            res 2,(hl)
 668+ 910E 2A 31 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9111 36 00            ld (hl),0
 670+ 9113
 671+ 9113 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9114 C9               ret
 673+ 9115
 674+ 9115               ; ---------- ----------
 675+ 9115
 676+ 9115 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9116 3A B4 89         ld a,(Columns)
 678+ 9119 47               ld b,a
 679+ 911A FD 7E 00     2 ld a,(iy)
 680+ 911D BE               cp (hl)
 681+ 911E 28 01            jr z,1F
 682+ 9120
 683+ 9120 1C               inc e
 684+ 9121
 685+ 9121 23           1 inc hl
 686+ 9122 FD 23            inc iy
 687+ 9124 10 F4            djnz 2B
 688+ 9126 C1               pop bc
 689+ 9127 C9               ret
 690+ 9128
 691+ 9128              ; -------------------------------------------------------------------------------------------------------------
 692+ 9128              ;
 693+ 9128              ;   13/03/23
 694+ 9128              ;
 695+ 9128              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9128              ;
 697+ 9128              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9128
 699+ 9128 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 912B 7E               ld a,(hl)
 701+ 912C A7               and a
 702+ 912D C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 912E
 704+ 912E 44               ld b,h
 705+ 912F 4D               ld c,l
 706+ 9130 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9133 E5               push hl
 708+ 9134 A7               and a
 709+ 9135 ED 42            sbc hl,bc
 710+ 9137 E5               push hl
 711+ 9138 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9139
 713+ 9139 E1               pop hl
 714+ 913A 54               ld d,h
 715+ 913B 5D               ld e,l
 716+ 913C 1B               dec de
 717+ 913D ED B8            lddr                                                ; Limpiamos.
 718+ 913F
 719+ 913F 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9142 22 0D 8A         ld (Stack_snapshot_disparos),hl
 721+ 9145
 722+ 9145 C9               ret
 723+ 9146
 724+ 9146              ; -------------------------------------------------------------------------------------------------------------
 725+ 9146              ;
 726+ 9146              ;   18/07/23
 727+ 9146              ;
 728+ 9146
 729+ 9146              Motor_de_disparos
 730+ 9146
 731+ 9146              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9146
 733+ 9146 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9149 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 914C
 736+ 914C CD 8C 8D     2 call Extrae_address
 737+ 914F 7E               ld a,(hl)
 738+ 9150 A7               and a
 739+ 9151 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9153
 741+ 9153              ; ----- ----- ----- ----- ----- -----
 742+ 9153
 743+ 9153 C5               push bc
 744+ 9154 CD 18 92         call foto_disparo_a_borrar
 745+ 9157
 746+ 9157              ; Existe colisión con este disparo???
 747+ 9157
 748+ 9157 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9158 7E               ld a,(hl)
 750+ 9159 2B               dec hl
 751+ 915A E6 01            and 1
 752+ 915C 28 1D            jr z,9F
 753+ 915E
 754+ 915E              ;   En este punto:
 755+ 915E              ;
 756+ 915E              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 915E              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 915E              ;   _con la entidad).
 759+ 915E              ;
 760+ 915E              ;   Disparo_2A defw 0                                ; Control.
 761+ 915E              ;    defw 0                                          ; Puntero objeto.
 762+ 915E              ;    defw 0                                          ; Puntero de impresión.
 763+ 915E              ;    defw 0                                          ; Rutina de impresión.
 764+ 915E
 765+ 915E E5               push hl
 766+ 915F
 767+ 915F 06 04            ld b,4
 768+ 9161 23           19 inc hl
 769+ 9162 10 FD            djnz 19B
 770+ 9164
 771+ 9164 CD 8C 8D         call Extrae_address
 772+ 9167 CD 42 9D         call Genera_coordenadas_disparo
 773+ 916A
 774+ 916A              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 916A
 776+ 916A 21 33 8A         ld hl,Coordenadas_disparo_certero
 777+ 916D 72               ld (hl),d
 778+ 916E 23               inc hl
 779+ 916F 73               ld (hl),e
 780+ 9170
 781+ 9170              ; Elimino el disparo de la base de datos.
 782+ 9170
 783+ 9170 E1               pop hl
 784+ 9171 CD 97 92         call Elimina_disparo_de_base_de_datos
 785+ 9174 21 30 8A         ld hl,Impacto2
 786+ 9177 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9179
 788+ 9179 18 06            jr 11F
 789+ 917B
 790+ 917B CD 41 92     9 call Mueve_disparo
 791+ 917E CD 18 92         call foto_disparo_a_borrar
 792+ 9181
 793+ 9181 C1           11 pop bc
 794+ 9182 18 04            jr 7F
 795+ 9184
 796+ 9184              ; ----- ----- ----- ----- ----- -----
 797+ 9184
 798+ 9184 ED 42        1 sbc hl,bc
 799+ 9186 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9188
 801+ 9188 2A 2E 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 918B 23               inc hl
 803+ 918C 23               inc hl
 804+ 918D 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9190 18 BA            jr 2B
 806+ 9192
 807+ 9192 CD 55 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9195              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9195
 810+ 9195              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9195
 812+ 9195 01 8A 85         ld bc,Disparo_11
 813+ 9198 2A 2C 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 919B
 815+ 919B CD 8C 8D     5 call Extrae_address
 816+ 919E 7E               ld a,(hl)
 817+ 919F A7               and a
 818+ 91A0 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91A2
 820+ 91A2              ; ----- ----- ----- ----- ----- -----
 821+ 91A2
 822+ 91A2 C5               push bc
 823+ 91A3 CD 18 92         call foto_disparo_a_borrar
 824+ 91A6
 825+ 91A6              ; Existe colisión con este disparo???
 826+ 91A6
 827+ 91A6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91A7 7E               ld a,(hl)
 829+ 91A8 2B               dec hl
 830+ 91A9 E6 01            and 1
 831+ 91AB 28 4D            jr z,10F
 832+ 91AD
 833+ 91AD              ;! La colisión se produce con Amadeus???
 834+ 91AD              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91AD
 836+ 91AD E5               push hl
 837+ 91AE
 838+ 91AE 06 04            ld b,4
 839+ 91B0 23           16 inc hl
 840+ 91B1 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91B3
 842+ 91B3 CD 8C 8D         call Extrae_address
 843+ 91B6 CD 42 9D         call Genera_coordenadas_disparo
 844+ 91B9
 845+ 91B9 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91BA FE 16            cp $16
 847+ 91BC 38 2A            jr c,15F
 848+ 91BE
 849+ 91BE
 850+ 91BE              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91BE
 852+ 91BE D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91BF
 854+ 91BF              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91BF
 856+ 91BF
 857+ 91BF 2A 3B 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91C2
 859+ 91C2              ; Coordenada X de Amadeus en D.
 860+ 91C2
 861+ 91C2 7D               ld a,l
 862+ 91C3 E6 1F            and $1F
 863+ 91C5 57               ld d,a
 864+ 91C6
 865+ 91C6 21 AC 85         ld hl,Amadeus_db+8
 866+ 91C9 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91CA
 868+ 91CA 21 35 8A         ld hl,Coordenadas_X_Amadeus
 869+ 91CD CD A2 92         call Guarda_coordenadas_X
 870+ 91D0
 871+ 91D0 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91D1
 873+ 91D1              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91D1
 875+ 91D1 06 02            ld b,2
 876+ 91D3 C5           20 push bc
 877+ 91D4
 878+ 91D4 06 03            ld b,3
 879+ 91D6 21 35 8A         ld hl,Coordenadas_X_Amadeus
 880+ 91D9 7E           18 ld a,(hl)
 881+ 91DA BA               cp d
 882+ 91DB 20 04            jr nz,17F
 883+ 91DD
 884+ 91DD              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91DD
 886+ 91DD C1               pop bc
 887+ 91DE E1               pop hl
 888+ 91DF 18 0D            jr 14F
 889+ 91E1
 890+ 91E1 23           17 inc hl
 891+ 91E2 10 F5            djnz 18B
 892+ 91E4
 893+ 91E4 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91E5
 895+ 91E5 C1               pop bc
 896+ 91E6 10 EB            djnz 20B
 897+ 91E8
 898+ 91E8
 899+ 91E8              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91E8              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91E8
 902+ 91E8 E1           15 pop hl
 903+ 91E9 23               inc hl
 904+ 91EA 35               dec (hl)
 905+ 91EB 2B               dec hl
 906+ 91EC 18 0C            jr 10F
 907+ 91EE
 908+ 91EE              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91EE              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91EE
 911+ 91EE E5           14 push hl
 912+ 91EF CD 97 92         call Elimina_disparo_de_base_de_datos
 913+ 91F2 21 30 8A         ld hl,Impacto2
 914+ 91F5 CB CE            set 1,(hl)
 915+ 91F7 E1               pop hl
 916+ 91F8 18 06            jr 12F
 917+ 91FA
 918+ 91FA              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91FA
 920+ 91FA CD 41 92     10 call Mueve_disparo
 921+ 91FD CD 18 92         call foto_disparo_a_borrar
 922+ 9200 C1           12 pop bc
 923+ 9201
 924+ 9201 18 04            jr 8F
 925+ 9203
 926+ 9203              ; ----- ----- ----- ----- ----- -----
 927+ 9203
 928+ 9203 ED 42        4 sbc hl,bc
 929+ 9205 28 0A            jr z,6F
 930+ 9207
 931+ 9207 2A 2C 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 920A 23               inc hl
 933+ 920B 23               inc hl
 934+ 920C 22 2C 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 920F 18 8A            jr 5B
 936+ 9211
 937+ 9211 CD 4E 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9214 CD DE 92         call Limpia_Coordenadas_X
 939+ 9217 C9               ret
 940+ 9218
 941+ 9218              ; ------------------------------------------------------------------
 942+ 9218
 943+ 9218              foto_disparo_a_borrar
 944+ 9218
 945+ 9218 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9219 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 921A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 921B
 949+ 921B E5               push hl
 950+ 921C 23               inc hl
 951+ 921D 23               inc hl
 952+ 921E ED 73 07 8A      ld (Stack),sp
 953+ 9222 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9223 FD E1            pop iy
 955+ 9225 DD E1            pop ix
 956+ 9227 E1               pop hl
 957+ 9228 ED 7B 07 8A      ld sp,(Stack)
 958+ 922C 3A F6 89         ld a,(Ctrl_1)
 959+ 922F CB C7            set 0,a
 960+ 9231 32 F6 89         ld (Ctrl_1),a
 961+ 9234 CD A0 7F         call Guarda_foto_registros
 962+ 9237 3A F6 89         ld a,(Ctrl_1)
 963+ 923A CB 87            res 0,a
 964+ 923C 32 F6 89         ld (Ctrl_1),a
 965+ 923F E1               pop hl
 966+ 9240 C9               ret
 967+ 9241
 968+ 9241              ;---------------------------------------------------
 969+ 9241              ;
 970+ 9241              ;   18/07/23
 971+ 9241              ;
 972+ 9241
 973+ 9241              Mueve_disparo
 974+ 9241
 975+ 9241              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9241              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9241              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9241
 979+ 9241 E5               push hl
 980+ 9242
 981+ 9242 7E               ld a,(hl)
 982+ 9243
 983+ 9243 06 04            ld b,4
 984+ 9245 23           1 inc hl
 985+ 9246 10 FD            djnz 1B
 986+ 9248
 987+ 9248              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9248
 989+ 9248 CD 8C 8D         call Extrae_address
 990+ 924B
 991+ 924B E6 01            and 1
 992+ 924D 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 924F
 994+ 924F              ; Disparo hacia arriba, (Amadeus).
 995+ 924F
 996+ 924F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 924F              ; _ de la dificultad.
 998+ 924F
 999+ 924F CD CF 96         call PreviousScan
1000+ 9252 CD CF 96         call PreviousScan
1001+ 9255 CD CF 96         call PreviousScan
1002+ 9258 CD CF 96         call PreviousScan
1003+ 925B
1004+ 925B              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 925B
1006+ 925B 7C               ld a,h
1007+ 925C FE 40            cp $40
1008+ 925E 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9260
1010+ 9260              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9260
1012+ 9260 EB               ex de,hl
1013+ 9261 06 04            ld b,4
1014+ 9263 2B           6 dec hl
1015+ 9264 10 FD            djnz 6B
1016+ 9266
1017+ 9266 CD 97 92         call Elimina_disparo_de_base_de_datos
1018+ 9269 E1               pop hl
1019+ 926A 18 10            jr 7F
1020+ 926C
1021+ 926C              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 926C              ; HL contiene el puntero de impresión del disparo.
1023+ 926C              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 926C
1025+ 926C D5           3 push de
1026+ 926D C5               push bc
1027+ 926E
1028+ 926E CD 36 90         call Comprueba_Colision
1029+ 9271
1030+ 9271              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9271
1032+ 9271 78               ld a,b
1033+ 9272
1034+ 9272 C1               pop bc
1035+ 9273 D1               pop de
1036+ 9274
1037+ 9274 EB               ex de,hl
1038+ 9275
1039+ 9275 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9276 23               inc hl                                      ; _ movimiento.
1041+ 9277 72               ld (hl),d
1042+ 9278
1043+ 9278 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9279
1045+ 9279 23               inc hl                                      ; _ en curso.
1046+ 927A 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 927B 2B               dec hl
1048+ 927C
1049+ 927C C9           7 ret
1050+ 927D
1051+ 927D              ; Disparo hacia abajo, (Entidad).
1052+ 927D
1053+ 927D 3A 3D 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9280 47               ld b,a
1055+ 9281
1056+ 9281 CD C0 96     4 call NextScan
1057+ 9284 10 FB            djnz 4B
1058+ 9286
1059+ 9286              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9286
1061+ 9286 7C               ld a,h
1062+ 9287 FE 58            cp $58
1063+ 9289 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 928B
1065+ 928B EB               ex de,hl
1066+ 928C 06 04            ld b,4
1067+ 928E 2B           5 dec hl
1068+ 928F 10 FD            djnz 5B
1069+ 9291
1070+ 9291 CD 97 92         call Elimina_disparo_de_base_de_datos
1071+ 9294 E1               pop hl
1072+ 9295 18 E5            jr 7B
1073+ 9297
1074+ 9297              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9297
1076+ 9297 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 929A AF               xor a
1078+ 929B 77               ld (hl),a
1079+ 929C 54               ld d,h
1080+ 929D 5D               ld e,l
1081+ 929E 13               inc de
1082+ 929F ED B0            ldir
1083+ 92A1 C9               ret
1084+ 92A2
1085+ 92A2              ; -----------------------------------------------------------------
1086+ 92A2              ;
1087+ 92A2              ;   19/7/23
1088+ 92A2              ;
1089+ 92A2              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92A2              ;
1091+ 92A2              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92A2              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92A2              ;
1094+ 92A2              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92A2              ;
1096+ 92A2              ;   INPUTS:
1097+ 92A2              ;
1098+ 92A2              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92A2              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92A2
1101+ 92A2              ;   MODIFICA: A, HL, BC y DE.
1102+ 92A2
1103+ 92A2              Guarda_coordenadas_X
1104+ 92A2
1105+ 92A2 7B               ld a,e
1106+ 92A3 A7               and a
1107+ 92A4 20 04            jr nz,1F
1108+ 92A6
1109+ 92A6 06 02            ld b,2
1110+ 92A8 18 02            jr 2F
1111+ 92AA
1112+ 92AA 06 03        1 ld b,3
1113+ 92AC 72           2 ld (hl),d
1114+ 92AD 23               inc hl
1115+ 92AE 14               inc d
1116+ 92AF 10 FB            djnz 2B
1117+ 92B1
1118+ 92B1 C9               ret
1119+ 92B2
1120+ 92B2              ; -----------------------------------------------------------------
1121+ 92B2              ;
1122+ 92B2              ;   12/04/23
1123+ 92B2              ;
1124+ 92B2
1125+ 92B2 3A 30 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92B5 A7               and a
1127+ 92B6 C8               ret z
1128+ 92B7
1129+ 92B7 FE 04            cp 4
1130+ 92B9 20 09            jr nz,1F
1131+ 92BB
1132+ 92BB
1133+ 92BB              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92BB
1135+ 92BB CD D7 90         call Detecta_colision_nave_entidad
1136+ 92BE
1137+ 92BE 21 30 8A         ld hl,Impacto2
1138+ 92C1 CB 5E            bit 3,(hl)
1139+ 92C3 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92C4
1141+ 92C4              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92C4              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92C4
1144+ 92C4 21 30 8A     1 ld hl,Impacto2
1145+ 92C7 CB 4E            bit 1,(hl)
1146+ 92C9 28 07            jr z,2F
1147+ 92CB
1148+ 92CB 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92CE 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92D0 18 0B            jr 3F
1151+ 92D2
1152+ 92D2 21 30 8A     2 ld hl,Impacto2
1153+ 92D5 CB 46            bit 0,(hl)
1154+ 92D7 C8               ret z
1155+ 92D8
1156+ 92D8              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92D8
1158+ 92D8 21 F6 89         ld hl,Ctrl_1
1159+ 92DB CB D6            set 2,(hl)
1160+ 92DD
1161+ 92DD C9           3 ret
1162+ 92DE
1163+ 92DE              ; -----------------------------------------------------------------
1164+ 92DE              ;
1165+ 92DE              ;   19/7/23
1166+ 92DE              ;
1167+ 92DE              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92DE
1169+ 92DE AF           Limpia_Coordenadas_X xor a
1170+ 92DF 06 06            ld b,6
1171+ 92E1 21 35 8A         ld hl,Coordenadas_X_Amadeus
1172+ 92E4 77           1 ld (hl),a
1173+ 92E5 23               inc hl
1174+ 92E6 10 FC            djnz 1B
1175+ 92E8 C9               ret
1176+ 92E9
1177+ 92E9              ; -----------------------------------------------------------------
1178+ 92E9              ;
1179+ 92E9              ;   25/04/23
1180+ 92E9              ;
1181+ 92E9
1182+ 92E9              Determina_resultado_comparativa
1183+ 92E9
1184+ 92E9              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92E9              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92E9              ;
1187+ 92E9              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92E9              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92E9              ;
1190+ 92E9              ;   SBC HL,DE
1191+ 92E9
1192+ 92E9              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92E9              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92E9
1195+ 92E9              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92E9              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92E9
1198+ 92E9
1199+ 92E9 3A C7 89         ld a,(Cuad_objeto)
1200+ 92EC FE 02            cp 2
1201+ 92EE 28 26            jr z,2F
1202+ 92F0 38 24            jr c,2F
1203+ 92F2
1204+ 92F2              ; Cuadrantes 3º y 4º
1205+ 92F2
1206+ 92F2 E6 01            and 1
1207+ 92F4 28 10            jr z,4F
1208+ 92F6
1209+ 92F6              ; Cuadrante 3º
1210+ 92F6
1211+ 92F6 7C               ld a,h
1212+ 92F7 06 00            ld b,0
1213+ 92F9
1214+ 92F9 CD 84 93         call Compara_cositas_H3
1215+ 92FC
1216+ 92FC 04               inc b
1217+ 92FD 05               dec b
1218+ 92FE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92FF
1220+ 92FF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9300 06 00            ld b,0
1222+ 9302
1223+ 9302 CD 96 93         call Compara_cositas_L3
1224+ 9305 C9               ret
1225+ 9306
1226+ 9306              ; Cuadrante 4º
1227+ 9306
1228+ 9306 7C           4 ld a,h
1229+ 9307 06 00            ld b,0
1230+ 9309
1231+ 9309 CD A8 93         call Compara_cositas_H4
1232+ 930C
1233+ 930C 04               inc b
1234+ 930D 05               dec b
1235+ 930E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 930F
1237+ 930F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9310 06 00            ld b,0
1239+ 9312
1240+ 9312 CD BE 93         call Compara_cositas_L4
1241+ 9315 C9               ret
1242+ 9316
1243+ 9316              ; Cuadrantes 1º y 2º.
1244+ 9316
1245+ 9316 28 10        2 jr z,3F
1246+ 9318
1247+ 9318              ; 1er Cuadrante
1248+ 9318
1249+ 9318 7C               ld a,h
1250+ 9319 06 00            ld b,0
1251+ 931B
1252+ 931B CD 5C 93         call Compara_cositas_H1
1253+ 931E
1254+ 931E 04               inc b
1255+ 931F 05               dec b
1256+ 9320 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9321
1258+ 9321 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9322 06 00            ld b,0
1260+ 9324
1261+ 9324 CD 72 93         call Compara_cositas_L1
1262+ 9327 C9               ret
1263+ 9328
1264+ 9328
1265+ 9328              ; 2º Cuadrante
1266+ 9328
1267+ 9328 7C           3 ld a,h
1268+ 9329 06 00            ld b,0
1269+ 932B
1270+ 932B CD 38 93         call Compara_cositas_H2
1271+ 932E
1272+ 932E 04               inc b
1273+ 932F 05               dec b
1274+ 9330 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9331
1276+ 9331 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9332 06 00            ld b,0
1278+ 9334
1279+ 9334 CD 4A 93         call Compara_cositas_L2
1280+ 9337 C9               ret
1281+ 9338
1282+ 9338 A7           Compara_cositas_H2 and a
1283+ 9339 28 0D            jr z,1F
1284+ 933B              ;    cp $fd
1285+ 933B              ;    jr z,1F
1286+ 933B              ;    cp $fe
1287+ 933B              ;    jr z,1F
1288+ 933B FE FF            cp $ff
1289+ 933D 28 09            jr z,1F
1290+ 933F FE 01            cp $01
1291+ 9341 28 05            jr z,1F
1292+ 9343 FE 02            cp $02
1293+ 9345 28 01            jr z,1F
1294+ 9347 C0               ret nz
1295+ 9348 04           1 inc b
1296+ 9349 C9               ret
1297+ 934A
1298+ 934A A7           Compara_cositas_L2 and a
1299+ 934B 28 0D            jr z,1F
1300+ 934D              ;    cp $fd
1301+ 934D              ;    jr z,1F
1302+ 934D FE FE            cp $fe
1303+ 934F 28 09            jr z,1F
1304+ 9351 FE FF            cp $ff
1305+ 9353 28 05            jr z,1F
1306+ 9355 FE 01            cp $01
1307+ 9357 28 01            jr z,1F
1308+ 9359              ;    cp $02
1309+ 9359              ;    jr z,1F
1310+ 9359 C0               ret nz
1311+ 935A 04           1 inc b
1312+ 935B C9               ret
1313+ 935C
1314+ 935C A7           Compara_cositas_H1 and a
1315+ 935D 28 11            jr z,1F
1316+ 935F              ;    cp $fd
1317+ 935F              ;    jr z,1F
1318+ 935F              ;    cp $fe
1319+ 935F              ;    jr z,1F
1320+ 935F FE FF            cp $ff
1321+ 9361 28 0D            jr z,1F
1322+ 9363 FE 01            cp $01
1323+ 9365 28 09            jr z,1F
1324+ 9367 FE 02            cp $02
1325+ 9369 28 05            jr z,1F
1326+ 936B FE 03            cp $03
1327+ 936D 28 01            jr z,1F
1328+ 936F C0               ret nz
1329+ 9370 04           1 inc b
1330+ 9371 C9               ret
1331+ 9372
1332+ 9372 A7           Compara_cositas_L1 and a
1333+ 9373 28 0D            jr z,1F
1334+ 9375              ;    cp $fd
1335+ 9375              ;    jr z,1F
1336+ 9375              ;    cp $fe
1337+ 9375              ;    jr z,1F
1338+ 9375              ;    cp $ff
1339+ 9375              ;    jr z,1F
1340+ 9375 FE 01            cp $01
1341+ 9377 28 09            jr z,1F
1342+ 9379 FE 02            cp $02
1343+ 937B 28 05            jr z,1F
1344+ 937D FE 03            cp $03
1345+ 937F 28 01            jr z,1F
1346+ 9381 C0               ret nz
1347+ 9382 04           1 inc b
1348+ 9383 C9               ret
1349+ 9384
1350+ 9384 A7           Compara_cositas_H3 and a
1351+ 9385 28 0D            jr z,1F
1352+ 9387              ;    cp $fd
1353+ 9387              ;    jr z,1F
1354+ 9387 FE FE            cp $fe
1355+ 9389 28 09            jr z,1F
1356+ 938B FE FF            cp $ff
1357+ 938D 28 05            jr z,1F
1358+ 938F FE 01            cp $01
1359+ 9391 28 01            jr z,1F
1360+ 9393              ;    cp $02
1361+ 9393              ;    jr z,1F
1362+ 9393              ;    cp $03
1363+ 9393              ;    jr z,1F
1364+ 9393 C0               ret nz
1365+ 9394 04           1 inc b
1366+ 9395 C9               ret
1367+ 9396
1368+ 9396 A7           Compara_cositas_L3 and a
1369+ 9397 28 0D            jr z,1F
1370+ 9399              ;    cp $fd
1371+ 9399              ;    jr z,1F
1372+ 9399              ;    cp $fe
1373+ 9399              ;    jr z,1F
1374+ 9399              ;    cp $ff
1375+ 9399              ;    jr z,1F
1376+ 9399 FE 01            cp $01
1377+ 939B 28 09            jr z,1F
1378+ 939D FE 02            cp $02
1379+ 939F 28 05            jr z,1F
1380+ 93A1 FE 03            cp $03
1381+ 93A3 28 01            jr z,1F
1382+ 93A5 C0               ret nz
1383+ 93A6 04           1 inc b
1384+ 93A7 C9               ret
1385+ 93A8
1386+ 93A8 A7           Compara_cositas_H4 and a
1387+ 93A9 28 11            jr z,1F
1388+ 93AB FE FD            cp $fd
1389+ 93AD 28 0D            jr z,1F
1390+ 93AF FE FE            cp $fe
1391+ 93B1 28 09            jr z,1F
1392+ 93B3 FE FF            cp $ff
1393+ 93B5 28 05            jr z,1F
1394+ 93B7 FE 01            cp $01
1395+ 93B9 28 01            jr z,1F
1396+ 93BB              ;    cp $02
1397+ 93BB              ;    jr z,1F
1398+ 93BB              ;    cp $03
1399+ 93BB              ;    jr z,1F
1400+ 93BB C0               ret nz
1401+ 93BC 04           1 inc b
1402+ 93BD C9               ret
1403+ 93BE
1404+ 93BE A7           Compara_cositas_L4 and a
1405+ 93BF 28 0D            jr z,1F
1406+ 93C1              ;    cp $fd
1407+ 93C1              ;    jr z,1F
1408+ 93C1 FE FE            cp $fe
1409+ 93C3 28 09            jr z,1F
1410+ 93C5 FE FF            cp $ff
1411+ 93C7 28 05            jr z,1F
1412+ 93C9 FE 01            cp $01
1413+ 93CB 28 01            jr z,1F
1414+ 93CD              ;    cp $02
1415+ 93CD              ;    jr z,1F
1416+ 93CD              ;    cp $03
1417+ 93CD              ;    jr z,1F
1418+ 93CD C0               ret nz
1419+ 93CE 04           1 inc b
1420+ 93CF C9               ret
# file closed: Disparo.asm
1400  93D0              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93D0              ; ******************************************************************************************************************************************************************************************
   2+ 93D0              ;
   3+ 93D0              ; 26/06/23
   4+ 93D0              ;
   5+ 93D0              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93D0
   7+ 93D0 CD B4 96     Draw call Prepara_draw
   8+ 93D3 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93D4 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93D5 28 05        	jr z,2F
  11+ 93D7
  12+ 93D7 3A C7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93DA 18 0C        	jr 1F
  14+ 93DC
  15+ 93DC 2A C5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93DF 22 B5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93E2 CD 71 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93E5              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93E5 CD BE 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93E8
  21+ 93E8 3A E1 89     1 ld a,(Ctrl_0)
  22+ 93EB CB 6F        	bit 5,a
  23+ 93ED 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93EF
  25+ 93EF CD 07 94     	call Comprueba_limite_horizontal
  26+ 93F2 CD 97 94     	call Comprueba_limite_vertical
  27+ 93F5
  28+ 93F5              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93F5              ; -----------------------
  30+ 93F5              ; -----------------------
  31+ 93F5              ; -----------------------
  32+ 93F5
  33+ 93F5 CD E4 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93F8 CD 1B 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93FB CD 7A 96     	call Define_rutina_de_impresion
  36+ 93FE
  37+ 93FE 3A E1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9401 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9403 32 E1 89     	ld (Ctrl_0),a
  40+ 9406
  41+ 9406 C9           	ret
  42+ 9407
  43+ 9407              ; *******************************************************************************************************************************************************************************************
  44+ 9407              ;	21/01/23
  45+ 9407              ;
  46+ 9407              ; 	Comprueba_limite_horizontal.
  47+ 9407              ;
  48+ 9407              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9407              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9407              ;
  51+ 9407              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9407              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9407              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9407              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9407
  56+ 9407
  57+ 9407
  58+ 9407 3A E1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 940A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 940C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 940E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9410 32 E1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9413 18 09            jr 6F
  64+ 9415 CB 5F        1 bit 3,a
  65+ 9417 28 0A            jr z,2F
  66+ 9419 E6 F7            and $f7
  67+ 941B 32 E1 89         ld (Ctrl_0),a
  68+ 941E CD 71 95     6 call Inicializacion
  69+ 9421 18 5B            jr 5F
  70+ 9423 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9424
  72+ 9424              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9424              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9424
  75+ 9424 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9425 2A F1 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9428 CD 8C 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 942B 67           	ld h,a
  79+ 942C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 942D CD 8C 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9430 67           	ld h,a
  82+ 9431 A7           	and a
  83+ 9432 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9434 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9435 3A C7 89     	ld a,(Cuad_objeto)
  86+ 9438 FE 02        	cp 2
  87+ 943A 38 1E        	jr c,3F
  88+ 943C 28 1C        	jr z,3F
  89+ 943E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 943F 28 23            jr z,7F
  91+ 9441 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9443 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9445 E1           	pop hl
  94+ 9446
  95+ 9446              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9446              ; _para indicar con E="2" en caso necesario.
  97+ 9446
  98+ 9446 E5               push hl
  99+ 9447 C5               push bc
 100+ 9448 CD 8C 99     	call calcula_tercio
 101+ 944B FE 01        	cp 1
 102+ 944D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 944F CD 7F 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9452 28 26            jr z,9F
 105+ 9454 38 24            jr c,9F
 106+ 9456 1E 00        11 ld e,0
 107+ 9458 18 22            jr 8F
 108+ 945A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 945B 28 07        	jr z, 7F
 110+ 945D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 945F 1E 00         	ld e,0
 112+ 9461 E1           	pop hl
 113+ 9462 18 04        	jr 4F
 114+ 9464 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9466 18 15            jr 10F
 116+ 9468
 117+ 9468              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9468              ; _para indicar con E="2" en caso necesario.
 119+ 9468
 120+ 9468 E5           4 push hl
 121+ 9469 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 946A CD 8C 99     	call calcula_tercio
 123+ 946D FE 01        	cp 1
 124+ 946F 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9471 CD 7F 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9474 28 04            jr z,9F
 127+ 9476 30 02            jr nc,9F
 128+ 9478 18 02        	jr 8F
 129+ 947A 1E 02        9 ld e,2
 130+ 947C C1           8 pop bc
 131+ 947D E1           10 pop hl
 132+ 947E C9           5 ret
 133+ 947F
 134+ 947F              ; --------------------
 135+ 947F              ;
 136+ 947F              ; 25/08/22
 137+ 947F
 138+ 947F CD 8C 99     Comprueba_centro call calcula_tercio
 139+ 9482 67               ld h,a
 140+ 9483 08           	ex af,af
 141+ 9484 FE 02        	cp 2
 142+ 9486 38 07        	jr c,1F
 143+ 9488 28 05        	jr z,1F
 144+ 948A 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 948D 18 03        	jr 2F
 146+ 948F 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9492 08           2 ex af,af
 148+ 9493 A7               and a
 149+ 9494 ED 42            sbc hl,bc
 150+ 9496 C9               ret
 151+ 9497
 152+ 9497              ; *********************************************************************************************************************************************************************************************
 153+ 9497              ;
 154+ 9497              ;   16/8/22
 155+ 9497              ;
 156+ 9497              ;	Comprueba_limite_vertical
 157+ 9497              ;
 158+ 9497              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9497              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9497              ;
 161+ 9497
 162+ 9497 2A B5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 949A 7D           	ld a,l
 164+ 949B E6 1F        	and $1F
 165+ 949D 57           	ld d,a
 166+ 949E 3A F3 89     	ld a,(Limite_vertical)
 167+ 94A1 BA           	cp d 											; Límite - Posición.
 168+ 94A2 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94A3 3A C7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94A6 CB 47        	bit 0,a
 171+ 94A8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94AA
 173+ 94AA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94AA
 175+ 94AA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94AB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94AD
 178+ 94AD              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94AD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94AD
 181+ 94AD 3A B9 89         ld a,(Coordenada_X)
 182+ 94B0 16 0F            ld d,Centro_izquierda
 183+ 94B2 A7               and a
 184+ 94B3 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94B4 28 1E            jr z,3F
 186+ 94B6 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94B8              ;                                                    ; _salimos sin modificar nada.
 188+ 94B8 18 0E            jr 2F
 189+ 94BA 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94BB 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94BD
 192+ 94BD              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94BD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94BD
 195+ 94BD 3A B9 89         ld a,(Coordenada_X)
 196+ 94C0 16 10            ld d,Centro_derecha
 197+ 94C2 A7               and a
 198+ 94C3 92               sub d
 199+ 94C4 28 0E            jr z,3F
 200+ 94C6 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94C8              ;                                                    ; _salimos sin modificar nada.
 202+ 94C8 CB 43        2 bit 0,e
 203+ 94CA 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94CC C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94CD CD 61 95         call Modificaccionne
 206+ 94D0 C1           	pop bc
 207+ 94D1 CD 71 95         call Inicializacion
 208+ 94D4 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94D5
 210+ 94D5              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94D5
 212+ 94D5 C5           4 push bc
 213+ 94D6 01 B4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94D9 0A           	ld a,(bc)
 215+ 94DA 3D           	dec a
 216+ 94DB 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94DC 7D           	ld a,l
 218+ 94DD 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94DE CB 47        	bit 0,a
 220+ 94E0 28 03        	jr z,5F
 221+ 94E2 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94E3 18 2E        	jr 7F
 223+ 94E5
 224+ 94E5              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94E5
 226+ 94E5 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94E6 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94E7 3A E1 89     	ld a,(Ctrl_0)
 229+ 94EA CB 4F        	bit 1,a
 230+ 94EC 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94EE F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94EF
 233+ 94EF              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94EF
 235+ 94EF 1C               inc e
 236+ 94F0 1D               dec e
 237+ 94F1 20 07            jr nz,12F
 238+ 94F3 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94F4 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94F5 22 B5 89     	ld (Posicion_actual),hl
 241+ 94F8 18 44        13 jr 9F
 242+ 94FA CB 43        12 bit 0,e
 243+ 94FC 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94FE              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94FE C1           	pop bc
 246+ 94FF 18 D3        	jr 3B
 247+ 9501 80           14 add b
 248+ 9502 6F               ld l,a
 249+ 9503 22 B5 89     	ld (Posicion_actual),hl
 250+ 9506 CD 61 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9509 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 950B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 950D 32 E1 89         ld (Ctrl_0),a
 254+ 9510 F1           	pop af
 255+ 9511 18 2B        	jr 9F
 256+ 9513
 257+ 9513              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9513
 259+ 9513 F5           7 push af
 260+ 9514 3A E1 89     	ld a,(Ctrl_0)
 261+ 9517 CB 47        	bit 0,a
 262+ 9519 20 1D        	jr nz,8F
 263+ 951B F1           	pop af
 264+ 951C
 265+ 951C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 951C
 267+ 951C 1C           	inc e
 268+ 951D 1D               dec e
 269+ 951E 20 07            jr nz,10F
 270+ 9520 90           	sub b
 271+ 9521 6F               ld l,a
 272+ 9522 22 B5 89     	ld (Posicion_actual),hl
 273+ 9525 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9527              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9527 CB 43        10 bit 0,e
 276+ 9529 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 952B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 952B C1           	pop bc
 279+ 952C 18 A6        	jr 3B
 280+ 952E 90           16 sub b
 281+ 952F 6F               ld l,a
 282+ 9530 22 B5 89     	ld (Posicion_actual),hl
 283+ 9533 CD 61 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9536 18 06            jr 9F
 285+ 9538 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 953A 32 E1 89         ld (Ctrl_0),a
 287+ 953D F1           	pop af
 288+ 953E C1           9 pop bc
 289+ 953F 1E 00        	ld e,0
 290+ 9541 CD 71 95         call Inicializacion
 291+ 9544 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9545 08           	ex af,af
 293+ 9546 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9547 18 8B            jr 3B
 295+ 9549
 296+ 9549              ; --------------------
 297+ 9549
 298+ 9549 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 954B CD CF 96     1 call PreviousScan
 300+ 954E 10 FB            djnz 1B
 301+ 9550 22 B5 89     	ld (Posicion_actual),hl
 302+ 9553 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9554 C9           	ret
 304+ 9555
 305+ 9555              ; --------------------
 306+ 9555
 307+ 9555 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9557 CD C0 96     1 call NextScan
 309+ 955A 10 FB            djnz 1B
 310+ 955C 22 B5 89     	ld (Posicion_actual),hl
 311+ 955F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9560 C9           	ret
 313+ 9561
 314+ 9561              ; --------------------
 315+ 9561              ;
 316+ 9561              ;	22/01/23
 317+ 9561              ;
 318+ 9561              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9561              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9561              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9561
 322+ 9561
 323+ 9561              Modificaccionne
 324+ 9561
 325+ 9561 3A C7 89     	ld a,(Cuad_objeto)
 326+ 9564 FE 02        	cp 2
 327+ 9566 CC 49 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9569 DC 49 95         call c,Modifica_Pos_actual
 329+ 956C C8           	ret z
 330+ 956D CD 55 95         call Modifica_Pos_actual2
 331+ 9570 C9               ret
 332+ 9571
 333+ 9571              ; *************************************************************************************************************************************************************************************************
 334+ 9571              ;
 335+ 9571              ;	13/8/22
 336+ 9571              ;
 337+ 9571              ;	Inicializacion
 338+ 9571              ;
 339+ 9571              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9571              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9571              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9571              ;
 343+ 9571              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9571              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9571              ;	_ desaparece/aparece.
 346+ 9571
 347+ 9571              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9571              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9571              ;
 350+ 9571              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9571              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9571              ; 		   [E] ="0"
 353+ 9571
 354+ 9571              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9571
 356+ 9571 CD 8C 99     Inicializacion call calcula_tercio
 357+ 9574 28 36        	jr z,primit
 358+ 9576 E6 02        	and 2
 359+ 9578 20 07        	jr nz,segmit
 360+ 957A 7D           	ld a,l
 361+ 957B FE 7F        	cp $7f
 362+ 957D 38 2D        	jr c,primit
 363+ 957F 28 2B        	jr z,primit
 364+ 9581 CD DE 95     segmit call column
 365+ 9584 38 13        	jr c,tercuad
 366+ 9586 3E 04        cuarcuad ld a,4
 367+ 9588 32 C7 89     	ld (Cuad_objeto),a
 368+ 958B 21 20 48     	ld hl,$4820
 369+ 958E 22 F1 89     	ld (Limite_horizontal),hl
 370+ 9591 21 F3 89     	ld hl,Limite_vertical
 371+ 9594 36 0D        	ld (hl),$0d
 372+ 9596 08           	ex af,af
 373+ 9597 18 3C        	jr 1F
 374+ 9599              tercuad
 375+ 9599 3E 03        	ld a,3
 376+ 959B 32 C7 89     	ld (Cuad_objeto),a
 377+ 959E 21 20 48     	ld hl,$4820
 378+ 95A1 22 F1 89     	ld (Limite_horizontal),hl
 379+ 95A4 21 F3 89     	ld hl,Limite_vertical
 380+ 95A7 36 12        	ld (hl),$12
 381+ 95A9 08           	ex af,af
 382+ 95AA 18 29        	jr 1F
 383+ 95AC CD DE 95     primit call column
 384+ 95AF 38 13        	jr c, primcuad
 385+ 95B1              segcuad
 386+ 95B1 3E 02        	ld a,2
 387+ 95B3 32 C7 89     	ld (Cuad_objeto),a
 388+ 95B6 21 C0 4F     	ld hl,$4fc0
 389+ 95B9 22 F1 89     	ld (Limite_horizontal),hl
 390+ 95BC 21 F3 89     	ld hl,Limite_vertical
 391+ 95BF 36 0D        	ld (hl),$0d
 392+ 95C1 08           	ex af,af
 393+ 95C2 18 11        	jr 1F
 394+ 95C4              primcuad
 395+ 95C4 3E 01        	ld a,1
 396+ 95C6 32 C7 89     	ld (Cuad_objeto),a
 397+ 95C9 21 C0 4F     	ld hl,$4fc0
 398+ 95CC 22 F1 89     	ld (Limite_horizontal),hl
 399+ 95CF 21 F3 89     	ld hl,Limite_vertical
 400+ 95D2 36 12        	ld (hl),$12
 401+ 95D4 08           	ex af,af
 402+ 95D5 CD 17 9D     1 call Genera_coordenadas
 403+ 95D8 21 E1 89     	ld hl,Ctrl_0
 404+ 95DB CB EE        	set 5,(hl)
 405+ 95DD C9           	ret
 406+ 95DE
 407+ 95DE              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95DE
 409+ 95DE              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95DE              ;
 411+ 95DE              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95DE
 413+ 95DE 7D           column ld a,l
 414+ 95DF E6 1F        	and $1f
 415+ 95E1 FE 10         	cp $10
 416+ 95E3 C9            	ret
 417+ 95E4
 418+ 95E4              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95E4              ;
 420+ 95E4              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95E4              ;
 422+ 95E4              ; 14/12/22
 423+ 95E4              ;
 424+ 95E4              ;	Modifica: A y BC.
 425+ 95E4
 426+ 95E4 3A C7 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95E7 E6 01        	and 1
 428+ 95E9 28 17        	jr z,1F
 429+ 95EB
 430+ 95EB              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95EB
 432+ 95EB 3A B9 89     	ld a,(Coordenada_X)
 433+ 95EE 47           	ld b,a
 434+ 95EF 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95F0 79           	ld a,c
 436+ 95F1 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95F2 38 08        	jr c,2F
 438+ 95F4 47           	ld b,a
 439+ 95F5 79           	ld a,c
 440+ 95F6 90           	sub b
 441+ 95F7 32 F0 89     	ld (Columnas),a
 442+ 95FA 18 1B        	jr 4F
 443+ 95FC 79           2 ld a,c
 444+ 95FD 32 F0 89     	ld (Columnas),a
 445+ 9600 18 15        	jr 4F
 446+ 9602
 447+ 9602              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9602
 449+ 9602 3A B9 89     1 ld a,(Coordenada_X)
 450+ 9605 81           	add c
 451+ 9606 3D           	dec a
 452+ 9607 D6 1F        	sub $1f
 453+ 9609 38 08        	jr c,3F
 454+ 960B 47           	ld b,a
 455+ 960C 79           	ld a,c
 456+ 960D 90           	sub b
 457+ 960E 32 F0 89     	ld (Columnas),a
 458+ 9611 18 04        	jr 4F
 459+ 9613 79           3 ld a,c
 460+ 9614 32 F0 89     	ld (Columnas),a
 461+ 9617 D9           4 exx
 462+ 9618 4F           	ld c,a
 463+ 9619 D9           	exx
 464+ 961A C9            ret
 465+ 961B
 466+ 961B              ; --------------------------------------------------------------------------------------------------------------------
 467+ 961B              ;
 468+ 961B              ;   19/7/23
 469+ 961B              ;
 470+ 961B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 961B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 961B              ;
 473+ 961B              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 961B              ;			HL e IY Contienen (Puntero_objeto).
 475+ 961B              ;
 476+ 961B              ;	DESTRUYE: HL,B Y A.
 477+ 961B
 478+ 961B 3A C7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 961E FE 02        	cp 2
 480+ 9620 38 18        	jr c,1F
 481+ 9622 28 16        	jr z,1F
 482+ 9624 E6 01        	and 1
 483+ 9626 28 0D        	jr z,3F
 484+ 9628
 485+ 9628              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9628
 487+ 9628 CD 6E 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 962B
 489+ 962B 7D           9 ld a,l
 490+ 962C E6 1F        	and $1f
 491+ 962E 28 2A        	jr z,7F
 492+ 9630 2B           	dec hl
 493+ 9631 10 F8        	djnz 9B
 494+ 9633 18 25        	jr 7F
 495+ 9635
 496+ 9635              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9635
 498+ 9635 2A B5 89     3 ld hl,(Posicion_actual)
 499+ 9638 18 20        	jr 7F
 500+ 963A
 501+ 963A 28 14        1 jr z,2F
 502+ 963C
 503+ 963C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 963C
 505+ 963C CD 6E 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 963F
 507+ 963F 7D           4 ld a,l
 508+ 9640 E6 1F        	and $1f
 509+ 9642 28 03        	jr z,6F
 510+ 9644 2B           	dec hl
 511+ 9645 10 F8        	djnz 4B
 512+ 9647 06 0F        6 ld b,15
 513+ 9649 CD CF 96     5 call PreviousScan
 514+ 964C 10 FB        	djnz 5B
 515+ 964E 18 0A        	jr 7F
 516+ 9650
 517+ 9650              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9650
 519+ 9650 CD 6E 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9653 06 0F        	ld b,15
 521+ 9655 CD CF 96     8 call PreviousScan
 522+ 9658 10 FB        	djnz 8B
 523+ 965A
 524+ 965A E5           7 push hl
 525+ 965B DD E1        	pop ix
 526+ 965D
 527+ 965D 2A B7 89     	ld hl,(Puntero_objeto)
 528+ 9660 E5           	push hl
 529+ 9661 FD E1        	pop iy
 530+ 9663
 531+ 9663              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9663
 533+ 9663 3A E1 89     	ld a,(Ctrl_0)
 534+ 9666 CB 77        	bit 6,a
 535+ 9668 C8           	ret z
 536+ 9669
 537+ 9669              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9669              ; _ entidad / Amadeus´.
 539+ 9669
 540+ 9669 DD 22 3B 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 966D
 542+ 966D C9           	ret
 543+ 966E
 544+ 966E              ; --------------------------------------------------------------------------------------------------------------------
 545+ 966E              ;
 546+ 966E              ;	2/1/23
 547+ 966E              ;
 548+ 966E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 966E              ;
 550+ 966E              ;	Tras esta rutina tenemos:
 551+ 966E              ;
 552+ 966E              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 966E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 966E              ;
 555+ 966E              ;	DESTRUYE!!!!! HL,B y A.
 556+ 966E
 557+ 966E 2A B5 89     Operandos ld hl,(Posicion_actual)
 558+ 9671 3A F0 89     	ld a,(Columnas)
 559+ 9674 3D           	dec a
 560+ 9675 20 01        	jr nz,1F
 561+ 9677 3C           	inc a
 562+ 9678 47           1 ld b,a
 563+ 9679 C9           	ret
 564+ 967A
 565+ 967A              ; --------------------------------------------------------------------------------------------------------------------
 566+ 967A              ;
 567+ 967A              ;	3/1/23
 568+ 967A              ;
 569+ 967A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 967A              ;
 571+ 967A              ;	Destruye: A,B,HL y DE.
 572+ 967A
 573+ 967A              Define_rutina_de_impresion
 574+ 967A
 575+ 967A 3A B4 89     	ld a,(Columns)
 576+ 967D 47           	ld b,a
 577+ 967E 3A F0 89     	ld a,(Columnas)
 578+ 9681 B8           	cp b
 579+ 9682 20 0D        	jr nz,2f
 580+ 9684
 581+ 9684              ;	La entidad se imprime entera.
 582+ 9684
 583+ 9684 21 5C 97     	ld hl, Indice_entidades_completas
 584+ 9687 E6 01        	and 1
 585+ 9689 28 02        	jr z,1F
 586+ 968B
 587+ 968B 23           	inc hl
 588+ 968C 23           	inc hl
 589+ 968D
 590+ 968D CD 8C 8D     1 call Extrae_address
 591+ 9690 C9           	ret		;	ret
 592+ 9691
 593+ 9691              ;	La entidad no se imprime entera en pantalla.
 594+ 9691
 595+ 9691 3A C7 89     2 ld a,(Cuad_objeto)
 596+ 9694 E6 01        	and 1
 597+ 9696 28 17        	jr z,3F
 598+ 9698
 599+ 9698              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9698
 601+ 9698 21 60 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 969B 3A B4 89     4 ld a,(Columns)
 603+ 969E E6 01        	and 1
 604+ 96A0 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96A2
 606+ 96A2 23           	inc hl
 607+ 96A3 23           	inc hl
 608+ 96A4
 609+ 96A4 3A F0 89     	ld a,(Columnas)
 610+ 96A7 E6 01        	and 1
 611+ 96A9 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96AB
 613+ 96AB 23           	inc hl
 614+ 96AC 23           	inc hl
 615+ 96AD
 616+ 96AD 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96AF
 618+ 96AF 21 66 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96B2 18 E7        	jr 4B
 620+ 96B4
 621+ 96B4              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96B4              ;
 623+ 96B4              ;	Prepara_draw
 624+ 96B4              ;
 625+ 96B4              ;	Es una rutina de carga.
 626+ 96B4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96B4              ;
 628+ 96B4              ;	FUNCIONAMIENTO:
 629+ 96B4              ;
 630+ 96B4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96B4              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96B4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96B4              ;
 634+ 96B4              ;	DESTRUYE:
 635+ 96B4              ;
 636+ 96B4              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96B4
 638+ 96B4 21 B3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96B7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96B8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96B9 4E           	ld c,(hl)
 642+ 96BA 2A B5 89     	ld hl,(Posicion_actual)
 643+ 96BD 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96BF C9           	ret
 645+ 96C0
 646+ 96C0              ;----------------------------------------------------------------------------------------------------------------
 647+ 96C0              ;
 648+ 96C0              ;	5/08/22
 649+ 96C0              ;
 650+ 96C0              ;   NextScan.
 651+ 96C0              ;
 652+ 96C0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96C0              ;
 654+ 96C0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96C0              ;
 656+ 96C0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96C0              ;
 658+ 96C0              ;       DESTRUIDOS: AF y HL !!!
 659+ 96C0              ;
 660+ 96C0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96C0              ;
 662+ 96C0
 663+ 96C0 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96C1 7C               ld a,h
 665+ 96C2 E6 07            and 7
 666+ 96C4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96C5
 668+ 96C5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96C6 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96C8 6F               ld l,a
 671+ 96C9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96CA
 673+ 96CA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96CB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96CD 67               ld h,a
 676+ 96CE C9               ret
 677+ 96CF
 678+ 96CF              ;----------------------------------------------------------------------------------------------------------------
 679+ 96CF              ;
 680+ 96CF              ;	5/08/22
 681+ 96CF              ;
 682+ 96CF              ;   PreviousScan.
 683+ 96CF              ;
 684+ 96CF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96CF              ;
 686+ 96CF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96CF              ;
 688+ 96CF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96CF              ;
 690+ 96CF              ;       DESTRUIDOS: AF y HL !!!
 691+ 96CF              ;
 692+ 96CF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96CF              ;
 694+ 96CF
 695+ 96CF 7C           PreviousScan ld a,h
 696+ 96D0 25               dec h               ; Dec H.
 697+ 96D1 E6 07            and 7
 698+ 96D3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96D4
 700+ 96D4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96D5 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96D7 6F               ld l,a
 703+ 96D8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96D9
 705+ 96D9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96DA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96DC 67               ld h,a
 708+ 96DD C9               ret
 709+ 96DE
 710+ 96DE              ; -----------------------------------------------------------------------------------
 711+ 96DE              ;
 712+ 96DE              ;	31/7/23
 713+ 96DE              ;
 714+ 96DE              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96DE              ;	Extrae fotos de Album_de_fotos.
 716+ 96DE
 717+ 96DE              Extrae_foto_entidades
 718+ 96DE
 719+ 96DE 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96E1 7E           	ld a,(hl)
 721+ 96E2 A7           	and a
 722+ 96E3 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96E4
 724+ 96E4 3A 02 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96E7 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96E8 C8           	ret z
 727+ 96E9
 728+ 96E9              ; -----------------------------------
 729+ 96E9
 730+ 96E9 ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96ED 31 00 70     	ld sp,Album_de_fotos
 732+ 96F0
 733+ 96F0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96F2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96F3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96F4
 737+ 96F4 ED 73 09 8A  	ld (Stack_2),sp
 738+ 96F8 ED 7B 07 8A  	ld sp,(Stack)
 739+ 96FC
 740+ 96FC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96FC
 742+ 96FC 3E CD        	ld a,$cd
 743+ 96FE 32 06 97     	ld (Imprime),a
 744+ 9701 EB           	ex de,hl
 745+ 9702 22 07 97     	ld (Imprime+1),hl
 746+ 9705 EB           	ex de,hl
 747+ 9706
 748+ 9706              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 9706
 750+ 9706 00 00 00     Imprime db 0,0,0
 751+ 9709
 752+ 9709 3A 02 8A     	ld a,(Numero_de_malotes)
 753+ 970C 3D           	dec a
 754+ 970D 28 09        	jr z,1F
 755+ 970F 32 02 8A      	ld (Numero_de_malotes),a
 756+ 9712
 757+ 9712 ED 7B 09 8A   	ld sp,(Stack_2)
 758+ 9716 18 D8        	jr 2B
 759+ 9718
 760+ 9718 AF           1 xor a
 761+ 9719 32 09 8A     	ld (Stack_2),a
 762+ 971C C9           	ret
 763+ 971D
 764+ 971D              ; -----------------------------------------------------------------------------------
 765+ 971D              ;
 766+ 971D              ;	28/2/23
 767+ 971D              ;
 768+ 971D              ;	Pinta los disparos generados.
 769+ 971D
 770+ 971D              Extrae_foto_disparos
 771+ 971D
 772+ 971D 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 773+ 9720 7E               ld a,(hl)
 774+ 9721 A7               and a
 775+ 9722 C8               ret z
 776+ 9723
 777+ 9723 3A 2B 8A     	ld a,(Numero_de_disparotes)
 778+ 9726 A7           	and a
 779+ 9727 C8           	ret z
 780+ 9728 ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 781+ 972C 31 0D 72     	ld sp,Album_de_fotos_disparos
 782+ 972F
 783+ 972F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 784+ 9731 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 785+ 9732 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 786+ 9733
 787+ 9733 ED 73 09 8A  	ld (Stack_2),sp
 788+ 9737 ED 7B 07 8A  	ld sp,(Stack)
 789+ 973B
 790+ 973B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 791+ 973B
 792+ 973B 3E CD        	ld a,$cd
 793+ 973D 32 45 97     	ld (Imprime2),a
 794+ 9740 EB           	ex de,hl
 795+ 9741 22 46 97     	ld (Imprime2+1),hl
 796+ 9744 EB           	ex de,hl
 797+ 9745
 798+ 9745              ; Ejecuta la llamada:	CALL $xx,xx
 799+ 9745
 800+ 9745 00 00 00     Imprime2 db 0,0,0
 801+ 9748
 802+ 9748 3A 2B 8A     	ld a,(Numero_de_disparotes)
 803+ 974B 3D           	dec a
 804+ 974C 28 09        	jr z,1F
 805+ 974E 32 2B 8A      	ld (Numero_de_disparotes),a
 806+ 9751
 807+ 9751 ED 7B 09 8A  	ld sp,(Stack_2)
 808+ 9755 18 D8        	jr 2B
 809+ 9757
 810+ 9757 AF           1 xor a
 811+ 9758 32 09 8A     	ld (Stack_2),a
 812+ 975B C9           	ret
 813+ 975C
# file closed: Draw_XOR.asm
1401  975C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 975C              ;   índices de Rutinas de impresión.
   2+ 975C
   3+ 975C 6C 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 975E 99 97            defw Pinta_Amadeus_3x2
   5+ 9760
   6+ 9760 EF 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9762 8F 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9764 43 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9766
  10+ 9766 19 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9768 1D 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 976A D1 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 976C
  14+ 976C
  15+ 976C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 976C              ;
  17+ 976C              ;   12/12/22
  18+ 976C              ;
  19+ 976C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 976C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 976C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 976C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 976C              ;
  24+ 976C              ;   Modifica: DE y HL.
  25+ 976C
  26+ 976C ED 73 07 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9770 FD F9        	ld sp,iy
  28+ 9772 06 10            ld b,16
  29+ 9774 D1           1 pop de
  30+ 9775 7B               ld a,e
  31+ 9776 AE               xor (hl)
  32+ 9777 77           	ld (hl),a
  33+ 9778 23           	inc hl
  34+ 9779 7A               ld a,d
  35+ 977A AE               xor (hl)
  36+ 977B 77           	ld (hl),a
  37+ 977C 2B           	dec hl
  38+ 977D 24           	inc h
  39+ 977E 7C               ld a,h
  40+ 977F E6 07            and 7
  41+ 9781 20 0A            jr nz,2F
  42+ 9783 7D               ld a,l
  43+ 9784 C6 20            add a,$20
  44+ 9786 6F               ld l,a
  45+ 9787 38 04            jr c,2F
  46+ 9789 7C               ld a,h
  47+ 978A D6 08            sub 8
  48+ 978C 67               ld h,a
  49+ 978D 7C           2 ld a,h
  50+ 978E FE 58            cp $58
  51+ 9790 28 02            jr z,3F
  52+ 9792 10 E0            djnz 1B
  53+ 9794 ED 7B 07 8A  3 ld sp,(Stack)
  54+ 9798 C9           	ret
  55+ 9799
  56+ 9799 ED 73 07 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 979D FD F9        	ld sp,iy
  58+ 979F 06 08            ld b,8
  59+ 97A1 D1           1 pop de
  60+ 97A2 7B               ld a,e
  61+ 97A3 AE               xor (hl)
  62+ 97A4 77           	ld (hl),a
  63+ 97A5 23           	inc hl
  64+ 97A6 7A               ld a,d
  65+ 97A7 AE               xor (hl)
  66+ 97A8 77           	ld (hl),a
  67+ 97A9 23           	inc hl
  68+ 97AA D1           	pop de
  69+ 97AB 7B               ld a,e
  70+ 97AC AE               xor (hl)
  71+ 97AD 77           	ld (hl),a
  72+ 97AE 2B           	dec hl
  73+ 97AF 2B           	dec hl
  74+ 97B0 24           	inc h
  75+ 97B1 7C               ld a,h
  76+ 97B2 E6 07            and 7
  77+ 97B4 20 0A            jr nz,2F
  78+ 97B6 7D               ld a,l
  79+ 97B7 C6 20            add a,$20
  80+ 97B9 6F               ld l,a
  81+ 97BA 38 04            jr c,2F
  82+ 97BC 7C               ld a,h
  83+ 97BD D6 08            sub 8
  84+ 97BF 67               ld h,a
  85+ 97C0 7C           2 ld a,h
  86+ 97C1 FE 58            cp $58
  87+ 97C3 28 25            jr z,4F
  88+ 97C5 7A               ld a,d
  89+ 97C6 AE               xor (hl)
  90+ 97C7 77               ld (hl),a
  91+ 97C8 D1           	pop de
  92+ 97C9 23           	inc hl
  93+ 97CA 7B               ld a,e
  94+ 97CB AE               xor (hl)
  95+ 97CC 77           	ld (hl),a
  96+ 97CD 23           	inc hl
  97+ 97CE 7A               ld a,d
  98+ 97CF AE               xor (hl)
  99+ 97D0 77           	ld (hl),a
 100+ 97D1 2B           	dec hl
 101+ 97D2 2B           	dec hl
 102+ 97D3 24           	inc h
 103+ 97D4 7C               ld a,h
 104+ 97D5 E6 07            and 7
 105+ 97D7 20 0A            jr nz,3F
 106+ 97D9 7D               ld a,l
 107+ 97DA C6 20            add a,$20
 108+ 97DC 6F               ld l,a
 109+ 97DD 38 04            jr c,3F
 110+ 97DF 7C               ld a,h
 111+ 97E0 D6 08            sub 8
 112+ 97E2 67               ld h,a
 113+ 97E3 7C           3 ld a,h
 114+ 97E4 FE 58            cp $58
 115+ 97E6 28 02            jr z,4F
 116+ 97E8 10 B7            djnz 1B
 117+ 97EA ED 7B 07 8A  4 ld sp,(Stack)
 118+ 97EE C9           	ret
 119+ 97EF
 120+ 97EF              ; ---------------------------------------------------
 121+ 97EF
 122+ 97EF ED 73 07 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97F3 FD F9        	ld sp,iy
 124+ 97F5
 125+ 97F5              ; >>>
 126+ 97F5
 127+ 97F5 06 10            ld b,16
 128+ 97F7 D1           1 pop de
 129+ 97F8 7A           	ld a,d
 130+ 97F9 AE           	xor (hl)
 131+ 97FA 77           	ld (hl),a
 132+ 97FB 24           	inc h
 133+ 97FC 7C               ld a,h
 134+ 97FD E6 07            and 7
 135+ 97FF 20 0C            jr nz,2F
 136+ 9801 7D               ld a,l
 137+ 9802 C6 20            add a,$20
 138+ 9804 6F               ld l,a
 139+ 9805 38 06            jr c,2F
 140+ 9807 7C               ld a,h
 141+ 9808 D6 08            sub 8
 142+ 980A 67               ld h,a
 143+ 980B 18 00            jr 2F
 144+ 980D 7C           2 ld a,h
 145+ 980E FE 58            cp $58
 146+ 9810 28 02            jr z,3F
 147+ 9812 10 E3            djnz 1B
 148+ 9814 ED 7B 07 8A  3 ld sp,(Stack)
 149+ 9818 C9           	ret
 150+ 9819
 151+ 9819 ED 73 07 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 981D FD F9        	ld sp,iy
 153+ 981F
 154+ 981F              ; >>>
 155+ 981F
 156+ 981F 06 10            ld b,16
 157+ 9821 D1           1 pop de
 158+ 9822 7B           	ld a,e
 159+ 9823 AE           	xor (hl)
 160+ 9824 77           	ld (hl),a
 161+ 9825 24           	inc h
 162+ 9826 7C               ld a,h
 163+ 9827 E6 07            and 7
 164+ 9829 20 0C            jr nz,2F
 165+ 982B 7D               ld a,l
 166+ 982C C6 20            add a,$20
 167+ 982E 6F               ld l,a
 168+ 982F 38 06            jr c,2F
 169+ 9831 7C               ld a,h
 170+ 9832 D6 08            sub 8
 171+ 9834 67               ld h,a
 172+ 9835 18 00            jr 2F
 173+ 9837 7C           2 ld a,h
 174+ 9838 FE 58            cp $58
 175+ 983A 28 02            jr z,3F
 176+ 983C 10 E3            djnz 1B
 177+ 983E ED 7B 07 8A  3 ld sp,(Stack)
 178+ 9842 C9           	ret
 179+ 9843
 180+ 9843              ; ---------------------------------------------------
 181+ 9843
 182+ 9843 ED 73 07 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9847 FD F9        	ld sp,iy
 184+ 9849 06 08            ld b,8
 185+ 984B D1           1 pop de
 186+ 984C 7A           	ld a,d
 187+ 984D AE           	xor (hl)
 188+ 984E 77           	ld (hl),a
 189+ 984F 23           	inc hl
 190+ 9850 D1           	pop de
 191+ 9851 7B           	ld a,e
 192+ 9852 AE           	xor (hl)
 193+ 9853 77           	ld (hl),a
 194+ 9854 2B           	dec hl
 195+ 9855 24            	inc h
 196+ 9856 7C               ld a,h
 197+ 9857 E6 07            and 7
 198+ 9859 20 0A            jr nz,2F
 199+ 985B 7D               ld a,l
 200+ 985C C6 20            add a,$20
 201+ 985E 6F               ld l,a
 202+ 985F 38 04            jr c,2F
 203+ 9861 7C               ld a,h
 204+ 9862 D6 08            sub 8
 205+ 9864 67               ld h,a
 206+ 9865 7C           2 ld a,h
 207+ 9866 FE 58            cp $58
 208+ 9868 28 20            jr z,4F
 209+ 986A D1               pop de
 210+ 986B 7B           	ld a,e
 211+ 986C AE           	xor (hl)
 212+ 986D 77           	ld (hl),a
 213+ 986E 23           	inc hl
 214+ 986F 7A           	ld a,d
 215+ 9870 AE           	xor (hl)
 216+ 9871 77           	ld (hl),a
 217+ 9872 2B           	dec hl
 218+ 9873 24           	inc h
 219+ 9874 7C               ld a,h
 220+ 9875 E6 07            and 7
 221+ 9877 20 0A            jr nz,3F
 222+ 9879 7D               ld a,l
 223+ 987A C6 20            add a,$20
 224+ 987C 6F               ld l,a
 225+ 987D 38 04            jr c,3F
 226+ 987F 7C               ld a,h
 227+ 9880 D6 08            sub 8
 228+ 9882 67               ld h,a
 229+ 9883 7C           3 ld a,h
 230+ 9884 FE 58            cp $58
 231+ 9886 28 02            jr z,4F
 232+ 9888 10 C1            djnz 1B
 233+ 988A ED 7B 07 8A  4 ld sp,(Stack)
 234+ 988E C9           	ret
 235+ 988F
 236+ 988F ED 73 07 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9893 FD F9        	ld sp,iy
 238+ 9895 06 08            ld b,8
 239+ 9897 D1           1 pop de
 240+ 9898 D1           	pop de
 241+ 9899 7B           	ld a,e
 242+ 989A AE           	xor (hl)
 243+ 989B 77           	ld (hl),a
 244+ 989C 24            	inc h
 245+ 989D 7C               ld a,h
 246+ 989E E6 07            and 7
 247+ 98A0 20 0A            jr nz,2F
 248+ 98A2 7D               ld a,l
 249+ 98A3 C6 20            add a,$20
 250+ 98A5 6F               ld l,a
 251+ 98A6 38 04            jr c,2F
 252+ 98A8 7C               ld a,h
 253+ 98A9 D6 08            sub 8
 254+ 98AB 67               ld h,a
 255+ 98AC 7C           2 ld a,h
 256+ 98AD FE 58            cp $58
 257+ 98AF 28 1B            jr z,4F
 258+ 98B1 D1               pop de
 259+ 98B2 7A           	ld a,d
 260+ 98B3 AE           	xor (hl)
 261+ 98B4 77           	ld (hl),a
 262+ 98B5 24           	inc h
 263+ 98B6 7C               ld a,h
 264+ 98B7 E6 07            and 7
 265+ 98B9 20 0A            jr nz,3F
 266+ 98BB 7D               ld a,l
 267+ 98BC C6 20            add a,$20
 268+ 98BE 6F               ld l,a
 269+ 98BF 38 04            jr c,3F
 270+ 98C1 7C               ld a,h
 271+ 98C2 D6 08            sub 8
 272+ 98C4 67               ld h,a
 273+ 98C5 7C           3 ld a,h
 274+ 98C6 FE 58            cp $58
 275+ 98C8 28 02            jr z,4F
 276+ 98CA 10 CB            djnz 1B
 277+ 98CC ED 7B 07 8A  4 ld sp,(Stack)
 278+ 98D0 C9           	ret
 279+ 98D1
 280+ 98D1 ED 73 07 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98D5 FD F9        	ld sp,iy
 282+ 98D7 06 08            ld b,8
 283+ 98D9 D1           1 pop de
 284+ 98DA 7B           	ld a,e
 285+ 98DB AE           	xor (hl)
 286+ 98DC 77           	ld (hl),a
 287+ 98DD 23           	inc hl
 288+ 98DE 7A           	ld a,d
 289+ 98DF AE           	xor (hl)
 290+ 98E0 77           	ld (hl),a
 291+ 98E1 2B           	dec hl
 292+ 98E2 24             	inc h
 293+ 98E3 7C               ld a,h
 294+ 98E4 E6 07            and 7
 295+ 98E6 20 0A            jr nz,2F
 296+ 98E8 7D               ld a,l
 297+ 98E9 C6 20            add a,$20
 298+ 98EB 6F               ld l,a
 299+ 98EC 38 04            jr c,2F
 300+ 98EE 7C               ld a,h
 301+ 98EF D6 08            sub 8
 302+ 98F1 67               ld h,a
 303+ 98F2 7C           2 ld a,h
 304+ 98F3 FE 58            cp $58
 305+ 98F5 28 21            jr z,4F
 306+ 98F7 D1               pop de
 307+ 98F8 7A           	ld a,d
 308+ 98F9 AE           	xor (hl)
 309+ 98FA 77           	ld (hl),a
 310+ 98FB 23           	inc hl
 311+ 98FC D1               pop de
 312+ 98FD 7B           	ld a,e
 313+ 98FE AE           	xor (hl)
 314+ 98FF 77           	ld (hl),a
 315+ 9900 2B           	dec hl
 316+ 9901 24           	inc h
 317+ 9902 7C               ld a,h
 318+ 9903 E6 07            and 7
 319+ 9905 20 0A            jr nz,3F
 320+ 9907 7D               ld a,l
 321+ 9908 C6 20            add a,$20
 322+ 990A 6F               ld l,a
 323+ 990B 38 04            jr c,3F
 324+ 990D 7C               ld a,h
 325+ 990E D6 08            sub 8
 326+ 9910 67               ld h,a
 327+ 9911 7C           3 ld a,h
 328+ 9912 FE 58            cp $58
 329+ 9914 28 02            jr z,4F
 330+ 9916 10 C1            djnz 1B
 331+ 9918 ED 7B 07 8A  4 ld sp,(Stack)
 332+ 991C C9           	ret
 333+ 991D
 334+ 991D ED 73 07 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9921 FD F9        	ld sp,iy
 336+ 9923 06 08            ld b,8
 337+ 9925 D1           1 pop de
 338+ 9926 7B           	ld a,e
 339+ 9927 AE           	xor (hl)
 340+ 9928 77           	ld (hl),a
 341+ 9929 24            	inc h
 342+ 992A 7C               ld a,h
 343+ 992B E6 07            and 7
 344+ 992D 20 0A            jr nz,2F
 345+ 992F 7D               ld a,l
 346+ 9930 C6 20            add a,$20
 347+ 9932 6F               ld l,a
 348+ 9933 38 04            jr c,2F
 349+ 9935 7C               ld a,h
 350+ 9936 D6 08            sub 8
 351+ 9938 67               ld h,a
 352+ 9939 7C           2 ld a,h
 353+ 993A FE 58            cp $58
 354+ 993C 28 1C            jr z,4F
 355+ 993E D1               pop de
 356+ 993F 7A           	ld a,d
 357+ 9940 AE           	xor (hl)
 358+ 9941 77           	ld (hl),a
 359+ 9942 24           	inc h
 360+ 9943 7C               ld a,h
 361+ 9944 E6 07            and 7
 362+ 9946 20 0A            jr nz,3F
 363+ 9948 7D               ld a,l
 364+ 9949 C6 20            add a,$20
 365+ 994B 6F               ld l,a
 366+ 994C 38 04            jr c,3F
 367+ 994E 7C               ld a,h
 368+ 994F D6 08            sub 8
 369+ 9951 67               ld h,a
 370+ 9952 7C           3 ld a,h
 371+ 9953 FE 58            cp $58
 372+ 9955 28 03            jr z,4F
 373+ 9957 D1               pop de
 374+ 9958 10 CB            djnz 1B
 375+ 995A ED 7B 07 8A  4 ld sp,(Stack)
 376+ 995E C9           	ret
 377+ 995F
 378+ 995F              ; ---------------------------------------------------
 379+ 995F              ;
 380+ 995F              ;   27/02/23
 381+ 995F              ;
 382+ 995F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 995F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 995F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 995F
 386+ 995F ED 73 07 8A  Pinta_Disparo ld (Stack),sp
 387+ 9963 FD F9            ld sp,iy
 388+ 9965 06 03            ld b,3
 389+ 9967 D1           1 pop de
 390+ 9968 7B               ld a,e
 391+ 9969 AE               xor (hl)
 392+ 996A 77               ld (hl),a
 393+ 996B 23               inc hl
 394+ 996C 7A               ld a,d
 395+ 996D AE               xor (hl)
 396+ 996E 77               ld (hl),a
 397+ 996F 2B               dec hl
 398+ 9970
 399+ 9970 24               inc h
 400+ 9971 7C               ld a,h
 401+ 9972 E6 07            and 7
 402+ 9974 20 0A            jr nz,2F
 403+ 9976 7D               ld a,l
 404+ 9977 C6 20            add a,$20
 405+ 9979 6F               ld l,a
 406+ 997A 38 04            jr c,2F
 407+ 997C 7C               ld a,h
 408+ 997D D6 08            sub 8
 409+ 997F 67               ld h,a
 410+ 9980 7C           2 ld a,h
 411+ 9981 FE 58            cp $58
 412+ 9983 28 02            jr z,3F
 413+ 9985
 414+ 9985 10 E0            djnz 1B
 415+ 9987 ED 7B 07 8A  3 ld sp,(Stack)
 416+ 998B C9               ret
 417+ 998C
# file closed: Rutinas_de_impresion_sprites.asm
1402  998C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 998C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 998C              ;
   3+ 998C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 998C              ;
   5+ 998C              ; *****************************************************************************************************************************************************************************************
   6+ 998C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 998C
   8+ 998C 7C           calcula_tercio ld a,h
   9+ 998D E6 18        	and $18
  10+ 998F CB 2F        	sra a
  11+ 9991 CB 2F        	sra a
  12+ 9993 CB 2F        	sra a
  13+ 9995 C9           	ret
  14+ 9996
# file closed: calcula_tercio.asm
1403  9996              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9996              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9996              ;
   3+ 9996              ;
   4+ 9996              ;	CLS.
   5+ 9996              ;
   6+ 9996              ;	Limpia la pantalla y define sus atributos.
   7+ 9996              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9996              ;
   9+ 9996              ;	COLORES: 0 ..... NEGRO
  10+ 9996              ;    		 1 ..... AZUL
  11+ 9996              ; 			 2 ..... ROJO
  12+ 9996              ;			 3 ..... MAGENTA
  13+ 9996              ; 			 4 ..... VERDE
  14+ 9996              ; 			 5 ..... CIAN
  15+ 9996              ;			 6 ..... AMARILLO
  16+ 9996              ; 			 7 ..... BLANCO
  17+ 9996              ;
  18+ 9996              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9996              ;
  20+ 9996              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9996
  22+ 9996
  23+ 9996 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9999 11 01 40     	LD DE,$4001
  25+ 999C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 999F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99A1 ED B0        	LDIR
  28+ 99A3 01 FF 02     	LD BC,767
  29+ 99A6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99A7 ED B0        	LDIR
  31+ 99A9 C9           	ret
  32+ 99AA
# file closed: Cls.asm
1404  99AA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99AA              ; ******************************************************************************************************************************************************************************************
   2+ 99AA              ;
   3+ 99AA              ;   20/05/23
   4+ 99AA              ;
   5+ 99AA              ;	Recompone_posicion_inicio
   6+ 99AA              ;
   7+ 99AA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99AA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99AA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99AA              ;	_ a una u otra rutina.
  11+ 99AA
  12+ 99AA              Recompone_posicion_inicio
  13+ 99AA
  14+ 99AA 2A C5 89     	ld hl,(Posicion_inicio)
  15+ 99AD 7D           	ld a,l
  16+ 99AE E6 1F        	and $1f
  17+ 99B0 28 16        	jr z,1F
  18+ 99B2
  19+ 99B2 FE 1F        	cp $1f
  20+ 99B4 28 0D        	jr z,3F
  21+ 99B6
  22+ 99B6 21 F4 89     	ld hl,Ctrl_2
  23+ 99B9 CB C6        	set 0,(hl)
  24+ 99BB 2A B7 89     	ld hl,(Puntero_objeto)
  25+ 99BE 22 F7 89     	ld (Repone_puntero_objeto),hl
  26+ 99C1 18 08        	jr 2F
  27+ 99C3
  28+ 99C3 CD 64 9B     3 call Mov_left
  29+ 99C6 18 03        	jr 2F
  30+ 99C8
  31+ 99C8 CD 46 9A     1 call Mov_right
  32+ 99CB 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99CE 22 B7 89     	ld (Puntero_objeto),hl
  34+ 99D1 C9           	ret
  35+ 99D2
  36+ 99D2              ; ******************************************************************************************************************************************************************************************
  37+ 99D2              ;
  38+ 99D2              ;   27/05/23
  39+ 99D2              ;
  40+ 99D2              ;	Mov_down
  41+ 99D2              ;
  42+ 99D2              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99D2              ;
  44+ 99D2              ;
  45+ 99D2              Mov_down
  46+ 99D2
  47+ 99D2 CD 34 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99D5              ;																	; _ repone (Puntero_objeto).
  49+ 99D5 21 E1 89     	ld hl,Ctrl_0
  50+ 99D8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99DA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99DA              ; 																	; _ en el caso de que no lo haya.
  53+ 99DA 3A CB 89     	ld a,(Vel_down)
  54+ 99DD 47           	ld b,a
  55+ 99DE 2A B5 89         ld hl,(Posicion_actual)
  56+ 99E1 CD 8C 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99E4 E6 02        	and 2
  58+ 99E6 28 0F        	jr z,1F
  59+ 99E8
  60+ 99E8              ; Nos encontramos en el último tercio de pantalla.
  61+ 99E8              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99E8
  63+ 99E8 7C           	ld a,h
  64+ 99E9 FE 57        	cp $57
  65+ 99EB 20 0A        	jr nz,1F
  66+ 99ED
  67+ 99ED 7D           	ld a,l
  68+ 99EE C6 20        	add $20
  69+ 99F0 30 05        	jr nc,1F
  70+ 99F2
  71+ 99F2              ; ------------------------------
  72+ 99F2              ;	call Reaparece_arriba
  73+ 99F2 CD F1 9C     	call Reinicio
  74+ 99F5              ; ------------------------------
  75+ 99F5
  76+ 99F5 18 08        	jr 3F
  77+ 99F7 CD C0 96     1 call NextScan
  78+ 99FA 22 B5 89     	ld (Posicion_actual),hl
  79+ 99FD 10 E2            djnz 2B
  80+ 99FF CD 17 9D     3 call Genera_coordenadas
  81+ 9A02 C9           	ret
  82+ 9A03
  83+ 9A03              ; ******************************************************************************************************************************************************************************************
  84+ 9A03              ;
  85+ 9A03              ;   27/05/23
  86+ 9A03              ;
  87+ 9A03              ;	Mov_up
  88+ 9A03              ;
  89+ 9A03              ; 	Mueve el Sprite hacia arriba.
  90+ 9A03              ;
  91+ 9A03              ;
  92+ 9A03              Mov_up
  93+ 9A03
  94+ 9A03 CD 34 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A06              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A06 21 E1 89     	ld hl,Ctrl_0
  97+ 9A09 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A0B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A0B              ; 																		; _ en el caso de que no lo haya.
 100+ 9A0B 3A CA 89     	ld a,(Vel_up)
 101+ 9A0E 47           	ld b,a
 102+ 9A0F 2A B5 89     	ld hl,(Posicion_actual)
 103+ 9A12 CD 8C 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A15 A7           	and a
 105+ 9A16 20 10        	jr nz,1F
 106+ 9A18
 107+ 9A18              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A18              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A18
 110+ 9A18 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A19 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A1B 20 0B            jr nz,1F
 113+ 9A1D 7D               ld a,l
 114+ 9A1E D6 20            sub $20
 115+ 9A20 30 06            jr nc,1F
 116+ 9A22 25               dec h
 117+ 9A23
 118+ 9A23              ; -----------------------------
 119+ 9A23 CD D2 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A26              ;	call Reinicio
 121+ 9A26              ; -----------------------------
 122+ 9A26
 123+ 9A26 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A28 CD CF 96     1 call PreviousScan
 125+ 9A2B 22 B5 89     	ld (Posicion_actual),hl
 126+ 9A2E 10 E2            djnz 3B
 127+ 9A30 CD 17 9D     2 call Genera_coordenadas
 128+ 9A33 C9           	ret
 129+ 9A34
 130+ 9A34              ; -----------------------------
 131+ 9A34              ;
 132+ 9A34              ;	27/5/23
 133+ 9A34              ;
 134+ 9A34              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A34              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A34              ;
 137+ 9A34              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A34              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A34              ;
 140+ 9A34              ;	Modifica: A y (Puntero_objeto).
 141+ 9A34
 142+ 9A34 3A F4 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A37 CB 47        	bit 0,a
 144+ 9A39 C8           	ret z
 145+ 9A3A CB 87        	res 0,a
 146+ 9A3C 32 F4 89     	ld (Ctrl_2),a
 147+ 9A3F 2A F7 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A42 22 B7 89     	ld (Puntero_objeto),hl
 149+ 9A45 C9           	ret
 150+ 9A46
 151+ 9A46              ; ******************************************************************************************************************************************************************************************
 152+ 9A46              ;
 153+ 9A46              ;	19/10/22
 154+ 9A46              ;
 155+ 9A46              ;	Mov_right.
 156+ 9A46              ;
 157+ 9A46              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A46              ;
 159+ 9A46
 160+ 9A46 21 E1 89     Mov_right ld hl,Ctrl_0
 161+ 9A49 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A4B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A4B              ; 																	; _ en el caso de que no lo haya.
 164+ 9A4B 3A E1 89     	ld a,(Ctrl_0)
 165+ 9A4E CB 77        	bit 6,a
 166+ 9A50 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A52
 168+ 9A52 CD 80 9C     	call Stop_Amadeus_right
 169+ 9A55 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A56 18 4D        	jr 8F
 171+ 9A58
 172+ 9A58 3A B9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A5B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A5D 20 46        	jr nz,8F
 175+ 9A5F
 176+ 9A5F 3A BB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A62 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A63 28 40        	jr z,8F
 179+ 9A65
 180+ 9A65              ; ---------- ---------- ----------
 181+ 9A65              ;
 182+ 9A65              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A65
 184+ 9A65 3A C9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A68 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A6A 28 11        	jr z,1F
 187+ 9A6C 38 06        	jr c,6F
 188+ 9A6E FE 04        	cp 4
 189+ 9A70 28 14        	jr z,7F
 190+ 9A72 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A74
 192+ 9A74              ; ---------- ---------- ----------
 193+ 9A74              ;
 194+ 9A74              ; Perfiles de velocidad
 195+ 9A74              ;
 196+ 9A74
 197+ 9A74 3A BB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A77 FE FE        	cp $fe
 199+ 9A79 20 2A        	jr nz,8F
 200+ 9A7B 18 10        	jr 3F
 201+ 9A7D 3A BB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A80 FE FD        	cp $fd
 203+ 9A82 20 21        	jr nz,8F
 204+ 9A84 18 07        	jr 3F
 205+ 9A86 3A BB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A89 FE FB        	cp $fb
 207+ 9A8B 20 18        	jr nz,8F
 208+ 9A8D
 209+ 9A8D              ; ---------- ---------- ----------
 210+ 9A8D
 211+ 9A8D              3
 212+ 9A8D CD C0 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A90              ;	call Reinicio
 214+ 9A90
 215+ 9A90              ; ---------- ---------- ----------
 216+ 9A90              ;
 217+ 9A90              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A90
 219+ 9A90 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A92 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A93 CD AC 9A     	call DESPLZ_DER
 222+ 9A96 C1           	pop bc
 223+ 9A97 10 F9        	djnz 5B
 224+ 9A99 2A B5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A9C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A9D 22 B5 89     	ld (Posicion_actual),hl
 227+ 9AA0 CD 17 9D     	call Genera_coordenadas
 228+ 9AA3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AA5
 230+ 9AA5              ; ---------- ---------- ----------
 231+ 9AA5
 232+ 9AA5 2A B5 89     8 ld hl,(Posicion_actual)
 233+ 9AA8 CD AC 9A     	call DESPLZ_DER
 234+ 9AAB C9           2 ret
 235+ 9AAC
 236+ 9AAC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AAC              ;
 238+ 9AAC              ;	22/9/22
 239+ 9AAC              ;
 240+ 9AAC
 241+ 9AAC CD BB 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AAF CD 07 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AB2 CD 30 9B         call Ciclo_completo
 244+ 9AB5 21 E1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AB8 CB FE        	set 7,(hl)
 246+ 9ABA C9           	ret
 247+ 9ABB
 248+ 9ABB              ; ******************************************************************************************************************************************************************************************
 249+ 9ABB              ;	15/02/23
 250+ 9ABB              ;
 251+ 9ABB
 252+ 9ABB 3A C9 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9ABE 47           	ld b,a
 254+ 9ABF 2A C1 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AC2 23           1 inc hl
 256+ 9AC3 23           	inc hl
 257+ 9AC4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AC6 22 C1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AC9 CD 8C 8D     	call Extrae_address
 260+ 9ACC 22 B7 89     	ld (Puntero_objeto),hl
 261+ 9ACF
 262+ 9ACF              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9ACF
 264+ 9ACF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9ACF              ; Cuántos movimientos hemos hecho ??
 266+ 9ACF              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9ACF
 268+ 9ACF 2A BD 89     7 ld hl,(Indice_Sprite_der)
 269+ 9AD2 EB           	ex de,hl
 270+ 9AD3 A7           	and a
 271+ 9AD4 ED 52        	sbc hl,de
 272+ 9AD6 CB 3D        	srl l
 273+ 9AD8 3E 08        6 ld a,8
 274+ 9ADA 95           	sub l
 275+ 9ADB 30 1E        	jr nc,3F
 276+ 9ADD
 277+ 9ADD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9ADD              ; B="0".
 279+ 9ADD
 280+ 9ADD 04           4 inc b
 281+ 9ADE 3C           	inc a
 282+ 9ADF 20 FC        	jr nz,4B
 283+ 9AE1 78           	ld a,b
 284+ 9AE2 08           	ex af,af
 285+ 9AE3 2A BD 89     	ld hl,(Indice_Sprite_der)
 286+ 9AE6 23           5 inc hl
 287+ 9AE7 23           	inc hl
 288+ 9AE8 10 FC        	djnz 5B
 289+ 9AEA 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9AED CD 8C 8D     	call Extrae_address
 291+ 9AF0 22 B7 89     	ld (Puntero_objeto),hl
 292+ 9AF3
 293+ 9AF3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AF3              ; _(Posicion_actual).
 295+ 9AF3
 296+ 9AF3 21 B5 89     	ld hl,Posicion_actual
 297+ 9AF6 34           	inc (hl)
 298+ 9AF7 08               ex af,af
 299+ 9AF8 6F           	ld l,a
 300+ 9AF9 18 DD        	jr 6B
 301+ 9AFB
 302+ 9AFB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AFB
 304+ 9AFB 47           3 ld b,a
 305+ 9AFC 2A BF 89     	ld hl,(Indice_Sprite_izq)
 306+ 9AFF 23           2 inc hl
 307+ 9B00 23           	inc hl
 308+ 9B01 10 FC        	djnz 2B
 309+ 9B03 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B06 C9           8 ret
 311+ 9B07
 312+ 9B07              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B07              ;
 314+ 9B07              ;	24/7/22
 315+ 9B07              ;
 316+ 9B07              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B07              ;
 318+ 9B07              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B07              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B07              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B07
 322+ 9B07 3A BB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B0A A7           	and a
 324+ 9B0B 20 1F        	jr nz,1F
 325+ 9B0D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B0F 32 BB 89         ld (CTRL_DESPLZ),a
 327+ 9B12
 328+ 9B12 21 B4 89     	ld hl,Columns
 329+ 9B15 34           	inc (hl)
 330+ 9B16 3A C7 89     	ld a,(Cuad_objeto)
 331+ 9B19 E6 01        	and 1
 332+ 9B1B 28 0F        	jr z,1F
 333+ 9B1D 2A B5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B20 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B21 22 B5 89     	ld (Posicion_actual),hl
 336+ 9B24 CD 17 9D     	call Genera_coordenadas
 337+ 9B27 CD 8C 9C     	call Inc_CTRL_DESPLZ
 338+ 9B2A 18 03        	jr 2F
 339+ 9B2C CD 8C 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B2F C9           2 ret
 341+ 9B30
 342+ 9B30              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B30              ;
 344+ 9B30              ;	24/7/22
 345+ 9B30              ;
 346+ 9B30              ;	Ciclo_completo.
 347+ 9B30              ;
 348+ 9B30              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B30              ;
 350+ 9B30              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B30              ; 	Decrementamos (Columns).
 352+ 9B30              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B30              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B30
 355+ 9B30
 356+ 9B30 3A BB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B33 FE FF        	cp $ff
 358+ 9B35 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B37 E6 F0        	and $f0
 360+ 9B39 20 28        	jr nz,3F
 361+ 9B3B
 362+ 9B3B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B3B
 364+ 9B3B 3A BB 89     	ld a,(CTRL_DESPLZ)
 365+ 9B3E 47           	ld b,a
 366+ 9B3F 3E F8        	ld a,$f8
 367+ 9B41 80           	add b
 368+ 9B42 32 BB 89     	ld (CTRL_DESPLZ),a
 369+ 9B45 18 1C        	jr 3F
 370+ 9B47 21 B4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B4A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B4B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B4C 32 BB 89     	ld (CTRL_DESPLZ),a
 374+ 9B4F 3A C7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B52 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B54 20 0A        	jr nz,2F
 377+ 9B56 2A B5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B59 23           	inc hl
 379+ 9B5A 22 B5 89     	ld (Posicion_actual),hl
 380+ 9B5D CD 17 9D     	call Genera_coordenadas
 381+ 9B60
 382+ 9B60              ; Inicia el puntero de Sprite.
 383+ 9B60
 384+ 9B60 CD A3 8D     2 call Inicia_puntero_objeto_der
 385+ 9B63 C9           3 ret
 386+ 9B64
 387+ 9B64              ; ******************************************************************************************************************************************************************************************
 388+ 9B64              ;
 389+ 9B64              ;	15/02/23
 390+ 9B64              ;
 391+ 9B64              ;	Mov_left.
 392+ 9B64              ;
 393+ 9B64              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B64              ;
 395+ 9B64 21 E1 89     Mov_left ld hl,Ctrl_0
 396+ 9B67 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B69              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B69              ; 																	; _ en el caso de que no lo haya.
 399+ 9B69 3A E1 89     	ld a,(Ctrl_0)
 400+ 9B6C CB 77        	bit 6,a
 401+ 9B6E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B70
 403+ 9B70 CD 86 9C     	call Stop_Amadeus_left
 404+ 9B73 C8           	ret z
 405+ 9B74 20 4A        	jr nz,8F
 406+ 9B76
 407+ 9B76 3A B9 89     11 ld a,(Coordenada_X)
 408+ 9B79 A7           	and a
 409+ 9B7A 20 44        	jr nz,8F
 410+ 9B7C
 411+ 9B7C 3A BB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B7F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B80 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B82
 415+ 9B82              ; ---------- ---------- ----------
 416+ 9B82
 417+ 9B82 3A C8 89     	ld a,(Vel_left)
 418+ 9B85 FE 02        	cp 2
 419+ 9B87 28 0F        	jr z,1F
 420+ 9B89 38 04        	jr c,6F
 421+ 9B8B FE 04        	cp 4
 422+ 9B8D 28 12        	jr z,7F
 423+ 9B8F
 424+ 9B8F              ; ---------- ---------- ----------
 425+ 9B8F
 426+ 9B8F 3A BB 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B92 FE F8        	cp $f8
 428+ 9B94 20 2A        	jr nz,8F
 429+ 9B96 18 10        	jr 4F
 430+ 9B98 3A BB 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B9B FE F9        	cp $f9
 432+ 9B9D 20 21        	jr nz,8F
 433+ 9B9F 18 07        	jr 4F
 434+ 9BA1 3A BB 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BA4 FE FB        	cp $fb
 436+ 9BA6 20 18        	jr nz,8F
 437+ 9BA8
 438+ 9BA8              ; ---------- ---------- ----------
 439+ 9BA8
 440+ 9BA8              4
 441+ 9BA8 CD AE 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BAB              ;	call Reinicio
 443+ 9BAB
 444+ 9BAB              ; ---------- ---------- ----------
 445+ 9BAB
 446+ 9BAB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BAD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BAE
 449+ 9BAE              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BAE              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BAE
 452+ 9BAE CD C7 9B     	call DESPLZ_IZQ
 453+ 9BB1 C1           	pop bc
 454+ 9BB2 10 F9        	djnz 5B
 455+ 9BB4 2A B5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BB7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BB8 22 B5 89     	ld (Posicion_actual),hl
 458+ 9BBB CD 17 9D     	call Genera_coordenadas
 459+ 9BBE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BC0
 461+ 9BC0              ; ---------- ---------- ----------
 462+ 9BC0
 463+ 9BC0              ; Movemos, no hay recolocación.
 464+ 9BC0
 465+ 9BC0 2A B5 89     8 ld hl,(Posicion_actual)
 466+ 9BC3 CD C7 9B     	call DESPLZ_IZQ
 467+ 9BC6 C9           2 ret
 468+ 9BC7
 469+ 9BC7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BC7              ;
 471+ 9BC7              ;	22/9/22
 472+ 9BC7
 473+ 9BC7              DESPLZ_IZQ
 474+ 9BC7
 475+ 9BC7 CD D6 9B     	call Desplaza_izquierda
 476+ 9BCA CD 22 9C         call modifica_parametros_1er_DESPLZ
 477+ 9BCD CD 4A 9C     	call Ciclo_completo_2
 478+ 9BD0 21 E1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9BD3 CB BE        	res 7,(hl)
 480+ 9BD5 C9           	ret
 481+ 9BD6
 482+ 9BD6              Desplaza_izquierda
 483+ 9BD6
 484+ 9BD6 3A C8 89     	ld a,(Vel_left)
 485+ 9BD9 47           	ld b,a
 486+ 9BDA 2A C3 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9BDD 23           1 inc hl
 488+ 9BDE 23           	inc hl
 489+ 9BDF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9BE1 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9BE4 CD 8C 8D     	call Extrae_address
 492+ 9BE7 22 B7 89     	ld (Puntero_objeto),hl
 493+ 9BEA
 494+ 9BEA              ; Modifica (Puntero_DESPLZ_der).
 495+ 9BEA
 496+ 9BEA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9BEA              ; Cuántos movimientos hemos hecho ??
 498+ 9BEA              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9BEA
 500+ 9BEA 2A BF 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9BED EB           	ex de,hl
 502+ 9BEE A7           	and a
 503+ 9BEF ED 52        	sbc hl,de
 504+ 9BF1 CB 3D        	srl l
 505+ 9BF3 3E 08        6 ld a,8
 506+ 9BF5 95           	sub l
 507+ 9BF6 30 1E        	jr nc,3F
 508+ 9BF8
 509+ 9BF8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9BF8              ; B="0".
 511+ 9BF8
 512+ 9BF8 04           4 inc b
 513+ 9BF9 3C           	inc a
 514+ 9BFA 20 FC        	jr nz,4B
 515+ 9BFC 78           	ld a,b
 516+ 9BFD 08           	ex af,af
 517+ 9BFE 2A BF 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C01 23           5 inc hl
 519+ 9C02 23           	inc hl
 520+ 9C03 10 FC        	djnz 5B
 521+ 9C05 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C08 CD 8C 8D     	call Extrae_address
 523+ 9C0B 22 B7 89     	ld (Puntero_objeto),hl
 524+ 9C0E
 525+ 9C0E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C0E              ; _(Posicion_actual).
 527+ 9C0E
 528+ 9C0E 21 B5 89     	ld hl,Posicion_actual
 529+ 9C11 35           	dec (hl)
 530+ 9C12 08           	ex af,af
 531+ 9C13 6F           	ld l,a
 532+ 9C14 18 DD        	jr 6B
 533+ 9C16
 534+ 9C16              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C16
 536+ 9C16 47           3 ld b,a
 537+ 9C17 2A BD 89     	ld hl,(Indice_Sprite_der)
 538+ 9C1A 23           2 inc hl
 539+ 9C1B 23           	inc hl
 540+ 9C1C 10 FC        	djnz 2B
 541+ 9C1E 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C21 C9           8 ret
 543+ 9C22
 544+ 9C22              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C22              ;
 546+ 9C22              ;	modifica_parametros_1er_DESPLZ
 547+ 9C22              ;
 548+ 9C22              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C22              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C22              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C22
 552+ 9C22 3A BB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C25 A7           	and a
 554+ 9C26 20 1E        	jr nz,1F
 555+ 9C28 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C29 32 BB 89         ld (CTRL_DESPLZ),a
 557+ 9C2C 21 B4 89     	ld hl,Columns
 558+ 9C2F 34           	inc (hl)
 559+ 9C30 3A C7 89     	ld a,(Cuad_objeto)
 560+ 9C33 E6 01        	and 1
 561+ 9C35 20 0F        	jr nz,1F
 562+ 9C37 2A B5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C3A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C3B 22 B5 89     	ld (Posicion_actual),hl
 565+ 9C3E CD 17 9D     	call Genera_coordenadas
 566+ 9C41 CD 9D 9C     	call Dec_CTRL_DESPLZ
 567+ 9C44 18 03        	jr 2F
 568+ 9C46 CD 9D 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C49 C9           2 ret
 570+ 9C4A
 571+ 9C4A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C4A
 573+ 9C4A 3A BB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C4D FE F7        	cp $f7
 575+ 9C4F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C51 30 2C        	jr nc,3F
 577+ 9C53
 578+ 9C53              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C53
 580+ 9C53 06 00        	ld b,0
 581+ 9C55 04           4 inc b
 582+ 9C56 3C           	inc a
 583+ 9C57 FE F7        	cp $f7
 584+ 9C59 20 FA        	jr nz,4B
 585+ 9C5B 3E FF        	ld a,$ff
 586+ 9C5D 90           	sub b
 587+ 9C5E 32 BB 89     	ld (CTRL_DESPLZ),a
 588+ 9C61 18 1C        	jr 3F
 589+ 9C63
 590+ 9C63              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C63
 592+ 9C63 21 B4 89     1 ld hl,Columns
 593+ 9C66 35           	dec (hl)
 594+ 9C67 AF           	xor a
 595+ 9C68 32 BB 89     	ld (CTRL_DESPLZ),a
 596+ 9C6B 3A C7 89     	ld a,(Cuad_objeto)
 597+ 9C6E E6 01        	and 1
 598+ 9C70 28 0A        	jr z,2F
 599+ 9C72 2A B5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C75 2B           	dec hl
 601+ 9C76 22 B5 89     	ld (Posicion_actual),hl
 602+ 9C79 CD 17 9D     	call Genera_coordenadas
 603+ 9C7C
 604+ 9C7C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C7C
 606+ 9C7C CD B6 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C7F C9           3 ret
 608+ 9C80
 609+ 9C80              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C80              ;
 611+ 9C80              ;	19/10/22
 612+ 9C80              ;
 613+ 9C80              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C80              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C80
 616+ 9C80 3A B9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C83 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C85 C9           	ret
 619+ 9C86
 620+ 9C86              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C86              ;
 622+ 9C86              ;	19/10/22
 623+ 9C86              ;
 624+ 9C86              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C86              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C86
 627+ 9C86 3A B9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C89 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C8B C9           	ret
 630+ 9C8C
 631+ 9C8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C8C              ;
 633+ 9C8C              ;	24/7/22
 634+ 9C8C              ;
 635+ 9C8C              ;	Inc_CTRL_DESPLZ
 636+ 9C8C              ;
 637+ 9C8C              ;
 638+ 9C8C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C8C
 640+ 9C8C 21 BB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C8F 3A C9 89     	ld a,(Vel_right)
 642+ 9C92 A7           	and a
 643+ 9C93 28 06        	jr z,1F
 644+ 9C95 47           	ld b,a
 645+ 9C96 34           3 inc (hl)
 646+ 9C97 10 FD        	djnz 3B
 647+ 9C99 18 01        	jr 2F
 648+ 9C9B 34           1 inc (hl)
 649+ 9C9C C9           2 ret
 650+ 9C9D
 651+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C9D              ;
 653+ 9C9D              ;	5/2/23
 654+ 9C9D              ;
 655+ 9C9D              ;	Dec_CTRL_DESPLZ
 656+ 9C9D              ;
 657+ 9C9D              ;
 658+ 9C9D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C9D
 660+ 9C9D 21 BB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CA0 3A C8 89     	ld a,(Vel_left)
 662+ 9CA3 A7           	and a
 663+ 9CA4 28 06        	jr z,1F
 664+ 9CA6 47           	ld b,a
 665+ 9CA7 35           3 dec (hl)
 666+ 9CA8 10 FD        	djnz 3B
 667+ 9CAA 18 01        	jr 2F
 668+ 9CAC 35           1 dec (hl)
 669+ 9CAD C9           2 ret
 670+ 9CAE
 671+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CAE
 673+ 9CAE 2A B5 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CB1 01 1F 00     	ld bc,31
 675+ 9CB4 A7           	and a
 676+ 9CB5 ED 4A        	adc hl,bc
 677+ 9CB7 22 B5 89     	ld (Posicion_actual),hl
 678+ 9CBA 21 E1 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CBD CB C6        	set 0,(hl)
 680+ 9CBF C9           	ret
 681+ 9CC0
 682+ 9CC0              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CC0
 684+ 9CC0 2A B5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CC3 01 1F 00     	ld bc,31
 686+ 9CC6 A7           	and a
 687+ 9CC7 ED 42        	sbc hl,bc
 688+ 9CC9 22 B5 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CCC 21 E1 89     	ld hl,Ctrl_0
 690+ 9CCF CB CE        	set 1,(hl)
 691+ 9CD1 C9           	ret
 692+ 9CD2
 693+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9CD2
 695+ 9CD2 24           Reaparece_abajo inc h
 696+ 9CD3 01 E0 17     	ld bc,$17e0
 697+ 9CD6 A7           	and a
 698+ 9CD7 ED 4A        	adc hl,bc
 699+ 9CD9 22 B5 89     	ld (Posicion_actual),hl
 700+ 9CDC 21 E1 89     	ld hl,Ctrl_0
 701+ 9CDF CB D6        	set 2,(hl)
 702+ 9CE1 C9           	ret
 703+ 9CE2
 704+ 9CE2              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9CE2
 706+ 9CE2 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9CE5 A7           	and a
 708+ 9CE6 ED 42        	sbc hl,bc
 709+ 9CE8 22 B5 89     	ld (Posicion_actual),hl
 710+ 9CEB 21 E1 89     	ld hl,Ctrl_0
 711+ 9CEE CB DE        	set 3,(hl)
 712+ 9CF0 C9           	ret
 713+ 9CF1
 714+ 9CF1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9CF1              ;
 716+ 9CF1              ;	15/07/23
 717+ 9CF1
 718+ 9CF1              Reinicio
 719+ 9CF1
 720+ 9CF1              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9CF1
 722+ 9CF1 AF           	xor a
 723+ 9CF2 21 E8 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9CF5 CD 13 9D     	call Limpia_contenido_hl
 725+ 9CF8
 726+ 9CF8 21 B5 89     	ld hl,Posicion_actual
 727+ 9CFB CD 13 9D     	call Limpia_contenido_hl
 728+ 9CFE
 729+ 9CFE CD 34 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D01 CD BE 9F     	call Inicia_Puntero_mov
 731+ 9D04
 732+ 9D04 21 EA 89     	ld hl,Incrementa_puntero
 733+ 9D07 06 05        	ld b,5
 734+ 9D09 77           1 ld (hl),a
 735+ 9D0A 23           	inc hl
 736+ 9D0B 10 FC        	djnz 1B
 737+ 9D0D
 738+ 9D0D 21 F4 89     	ld hl,Ctrl_2
 739+ 9D10 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D12
 741+ 9D12 C9           	ret
 742+ 9D13
 743+ 9D13 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D14 23           	inc hl
 745+ 9D15 77           	ld (hl),a
 746+ 9D16 C9           	ret
 747+ 9D17
 748+ 9D17
# file closed: Direcciones.asm
1405  9D17              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D17              ; ------------------------------------------------------------------------
   2+ 9D17              ;
   3+ 9D17              ;	02/04/23
   4+ 9D17              ;
   5+ 9D17              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D17              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D17              ;
   8+ 9D17              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D17              ;
  10+ 9D17              ;	Modifica: A,BC y DE.
  11+ 9D17
  12+ 9D17 C5           Genera_coordenadas push bc
  13+ 9D18 E5           	push hl
  14+ 9D19 D5           	push de
  15+ 9D1A
  16+ 9D1A 2A B5 89     	ld hl,(Posicion_actual)
  17+ 9D1D
  18+ 9D1D 7D           	ld a,l
  19+ 9D1E E6 1F        	and $1f
  20+ 9D20 32 B9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D23
  22+ 9D23 CD 8C 99     	call calcula_tercio
  23+ 9D26 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D27
  25+ 9D27 1E 00        	ld e,0
  26+ 9D29 7D           	ld a,l
  27+ 9D2A E6 E0        	and $e0
  28+ 9D2C 28 01        	jr z,1F
  29+ 9D2E 04           	inc b
  30+ 9D2F
  31+ 9D2F 04           1 inc b
  32+ 9D30 05           	dec b
  33+ 9D31 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D33              ;														; _ , salimos.
  35+ 9D33 1C           3 inc e
  36+ 9D34 D6 20        	sub 32
  37+ 9D36 20 FB        	jr nz,3B
  38+ 9D38 10 F5        	djnz 1B
  39+ 9D3A
  40+ 9D3A 7B           2 ld a,e
  41+ 9D3B 32 BA 89     	ld (Coordenada_y),a
  42+ 9D3E
  43+ 9D3E D1           	pop de
  44+ 9D3F E1           	pop hl
  45+ 9D40 C1           	pop bc
  46+ 9D41
  47+ 9D41 C9           	ret
  48+ 9D42
  49+ 9D42              ; ------------------------------------------------------------------------
  50+ 9D42              ;	28/05/23
  51+ 9D42              ;
  52+ 9D42              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D42              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D42              ;
  55+ 9D42              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D42              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D42              ;
  58+ 9D42              ;		DE="$120d"
  59+ 9D42              ;
  60+ 9D42              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D42              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D42              ;
  63+ 9D42              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D42
  65+ 9D42              ;	Modifica: A,BC y DE.
  66+ 9D42
  67+ 9D42
  68+ 9D42              Genera_coordenadas_disparo
  69+ 9D42
  70+ 9D42              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D42
  72+ 9D42 7D           	ld a,l
  73+ 9D43 E6 1F        	and $1f
  74+ 9D45 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D46 CD 8C 99     	call calcula_tercio
  76+ 9D49 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D4A 1E 00        	ld e,0
  78+ 9D4C 7D           	ld a,l
  79+ 9D4D E6 E0        	and $e0
  80+ 9D4F 28 01        	jr z,1F
  81+ 9D51 04           	inc b
  82+ 9D52 1C           1 inc e
  83+ 9D53 D6 20        	sub 32
  84+ 9D55 20 FB        	jr nz,1B
  85+ 9D57 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D59 C9           	ret
  87+ 9D5A
# file closed: Genera_coordenadas.asm
1406  9D5A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D5A
   2+ 9D5A
   3+ 9D5A              ;   07/07/23
   4+ 9D5A              ;
   5+ 9D5A              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D5A              ;
   7+ 9D5A              ;   Codificación:
   8+ 9D5A              ;
   9+ 9D5A              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D5A              ;
  11+ 9D5A              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D5A              ;
  13+ 9D5A              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D5A              ;
  15+ 9D5A              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D5A              ;
  17+ 9D5A              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D5A              ;                               ..... %01000010 Vel_up 4
  19+ 9D5A              ;                                               Vel_down 2
  20+ 9D5A              ;                               ..... $42
  21+ 9D5A              ;
  22+ 9D5A              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D5A              ;
  24+ 9D5A              ;                               ..... %01000010 Vel_left 4
  25+ 9D5A              ;                                               Vel_right 2
  26+ 9D5A              ;                               ..... $42
  27+ 9D5A              ;
  28+ 9D5A              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D5A              ;
  30+ 9D5A              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D5A              ;
  32+ 9D5A              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D5A              ;
  34+ 9D5A              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D5A              ;                                     $53
  36+ 9D5A              ;
  37+ 9D5A              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D5A              ;
  39+ 9D5A              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D5A              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D5A              ;
  42+ 9D5A              ;                       Arriba ..... $81
  43+ 9D5A              ;                       Arriba - izquierda ..... $a1
  44+ 9D5A              ;                       Arriba - derecha ..... $91
  45+ 9D5A              ;
  46+ 9D5A              ;                       Abajo ..... $41
  47+ 9D5A              ;                       Abajo - izquierda ..... $61
  48+ 9D5A              ;                       Abajo - derecha ..... $51
  49+ 9D5A              ;
  50+ 9D5A              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D5A              ;
  52+ 9D5A              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D5A              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D5A              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D5A              ;
  56+ 9D5A              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D5A              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D5A              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D5A              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D5A              ;
  61+ 9D5A              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D5A              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D5A              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D5A              ;
  65+ 9D5A              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D5A              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D5A              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D5A              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D5A
  70+ 9D5A              ; ----- ----- ----- ----- -----
  71+ 9D5A
  72+ 9D5A 86 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D5C 8E 9D            defw F_1
  74+ 9D5E 98 9D            defw F_2
  75+ 9D60 A2 9D            defw Codo_abajo_derecha
  76+ 9D62 D6 9D            defw Derecha_y_subiendo
  77+ 9D64 E0 9D            defw Derecha_y_subiendo_1
  78+ 9D66 EA 9D            defw F_3
  79+ 9D68 F4 9D            defw F_4
  80+ 9D6A FE 9D            defw Derecha_y_bajando
  81+ 9D6C 08 9E            defw Derecha_y_bajando_1
  82+ 9D6E 12 9E            defw Derecha_y_bajando_2
  83+ 9D70 1C 9E            defw Codo_derecha_abajo
  84+ 9D72 4C 9E            defw Codo_abajo_izq.
  85+ 9D74 80 9E            defw Izquierda_y_subiendo
  86+ 9D76 8A 9E            defw Izquierda_y_subiendo_1
  87+ 9D78 94 9E            defw F_5
  88+ 9D7A 9E 9E            defw F_6
  89+ 9D7C A8 9E            defw Izquierda_y_bajando
  90+ 9D7E B2 9E            defw Izquierda_y_bajando_1
  91+ 9D80 BC 9E            defw Izquierda_y_bajando_2
  92+ 9D82 C6 9E            defw Codo_izquierda_abajo
  93+ 9D84 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D86
  95+ 9D86 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D8A 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D8E
  98+ 9D8E 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D92 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D96 08 00
 100+ 9D98 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D9C 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DA0 0F FE
 102+ 9DA2
 103+ 9DA2 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DA6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DAA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DAE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DB2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DB6 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DBA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DBE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DC6 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DCA 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DCE 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DD2 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DD6
 117+ 9DD6 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DDA 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DDE 06 00
 119+ 9DE0
 120+ 9DE0 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DE4 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DE8 02 00
 122+ 9DEA
 123+ 9DEA 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DEE 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DF2 04 00
 125+ 9DF4 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DF8 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DFC 08 00
 127+ 9DFE
 128+ 9DFE 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E02 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E06 02 00
 130+ 9E08
 131+ 9E08 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E0C 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E10 06 00
 133+ 9E12
 134+ 9E12 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E16 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E1A 06 00
 136+ 9E1C
 137+ 9E1C              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E1C
 139+ 9E1C 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E20 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E24 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E28 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E2C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E30 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E34 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E38 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E3C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E40 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E44 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E48 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E4C
 152+ 9E4C 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E50 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E54 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E58 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E5C 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E60 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E64 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E68 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E6C 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E70 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E74 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E78 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E7C 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E80
 166+ 9E80 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E84 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E88 06 00
 168+ 9E8A
 169+ 9E8A 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E8E 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E92 02 00
 171+ 9E94
 172+ 9E94 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E98 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E9C 04 00
 174+ 9E9E 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EA2 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EA6 08 00
 176+ 9EA8
 177+ 9EA8 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EAC 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EB0 02 00
 179+ 9EB2
 180+ 9EB2 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EB6 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EBA 06 00
 182+ 9EBC
 183+ 9EBC 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EC0 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EC4 06 00
 185+ 9EC6
 186+ 9EC6 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9ECA 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9ECE 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9ED2 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9ED6 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EDA 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EDE 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EE2 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EE6 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EEA 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EEE 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EF2 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EF6
 199+ 9EF6              ; ----- ----- ----- ----- -----
 200+ 9EF6              ;
 201+ 9EF6              ;   27/06/23
 202+ 9EF6
 203+ 9EF6              Movimiento
 204+ 9EF6
 205+ 9EF6              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EF6
 207+ 9EF6              ;    ld hl,(Posicion_actual)
 208+ 9EF6
 209+ 9EF6 3A F4 89         ld a,(Ctrl_2)
 210+ 9EF9 CB 57            bit 2,a
 211+ 9EFB 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EFD
 213+ 9EFD 2A E6 89         ld hl,(Puntero_mov)
 214+ 9F00 7E               ld a,(hl)
 215+ 9F01
 216+ 9F01              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F01
 218+ 9F01              Inicia_desplazamiento.
 219+ 9F01
 220+ 9F01              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F01
 222+ 9F01 CD F5 9F         call Ajusta_velocidad_desplazamiento
 223+ 9F04
 224+ 9F04              ; Iniciamos (Repetimos_mov).
 225+ 9F04
 226+ 9F04 7E               ld a,(hl)
 227+ 9F05 E6 0F            and $0f
 228+ 9F07 32 EC 89         ld (Repetimos_desplazamiento),a
 229+ 9F0A 32 ED 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F0D
 231+ 9F0D              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F0D
 233+ 9F0D 23               inc hl
 234+ 9F0E 7E               ld a,(hl)
 235+ 9F0F 32 EF 89         ld (Cola_de_desplazamiento),a
 236+ 9F12 2B               dec hl
 237+ 9F13
 238+ 9F13 21 F4 89         ld hl,Ctrl_2
 239+ 9F16 CB D6            set 2,(hl)
 240+ 9F18
 241+ 9F18              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F18              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F18
 244+ 9F18              Desplazamiento_iniciado
 245+ 9F18
 246+ 9F18 CD C9 9F         call Aplica_desplazamiento
 247+ 9F1B
 248+ 9F1B 3A F4 89         ld a,(Ctrl_2)
 249+ 9F1E CB 67            bit 4,a
 250+ 9F20 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F21
 252+ 9F21 21 EC 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F24 35               dec (hl)
 254+ 9F25 C0               ret nz
 255+ 9F26
 256+ 9F26              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F26              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F26              ; Analiza (Cola_de_desplazamiento).
 259+ 9F26
 260+ 9F26 3A EF 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F29 A7               and a
 262+ 9F2A CC 1E A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F2D 28 30            jr z,Reinicia_el_movimiento
 264+ 9F2F
 265+ 9F2F FE FF            cp $ff
 266+ 9F31 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F33
 268+ 9F33 FE FE            cp $fe
 269+ 9F35 CC A2 9F         call z,Fijamos_bucle
 270+ 9F38 28 25            jr z,Reinicia_el_movimiento
 271+ 9F3A
 272+ 9F3A FE FD            cp $fd
 273+ 9F3C 20 11            jr nz,1F
 274+ 9F3E
 275+ 9F3E              ; ---
 276+ 9F3E              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F3E
 278+ 9F3E 3A F4 89         ld a,(Ctrl_2)
 279+ 9F41 CB 5F            bit 3,a
 280+ 9F43 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F45
 282+ 9F45              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F45
 284+ 9F45 21 F4 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F48 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F4A
 287+ 9F4A CD B3 9F         call Inicia_Repetimos_movimiento
 288+ 9F4D 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F4F              ; ---
 290+ 9F4F
 291+ 9F4F FE 01        1 cp 1
 292+ 9F51 CA 8C 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F54
 294+ 9F54 3D               dec a
 295+ 9F55 32 EF 89         ld (Cola_de_desplazamiento),a
 296+ 9F58
 297+ 9F58 3A ED 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F5B 32 EC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F5E              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F5E C9               ret
 301+ 9F5F
 302+ 9F5F              Reinicia_el_movimiento
 303+ 9F5F
 304+ 9F5F 3A F4 89         ld a,(Ctrl_2)
 305+ 9F62 CB 5F            bit 3,a
 306+ 9F64 28 1B            jr z,2F
 307+ 9F66
 308+ 9F66              ; (Cola_de_desplazamiento)="254".
 309+ 9F66
 310+ 9F66 21 EE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F69 35               dec (hl)
 312+ 9F6A 20 15            jr nz,2F
 313+ 9F6C
 314+ 9F6C              ; Fin de las repeticiones del último movimiento.
 315+ 9F6C
 316+ 9F6C 21 F4 89         ld hl,Ctrl_2
 317+ 9F6F CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F71
 319+ 9F71 2A E6 89         ld hl,(Puntero_mov)
 320+ 9F74 23               inc hl
 321+ 9F75 23               inc hl
 322+ 9F76 23               inc hl
 323+ 9F77 22 E6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F7A              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F7A 7E               ld a,(hl)
 326+ 9F7B 32 EF 89         ld (Cola_de_desplazamiento),a
 327+ 9F7E
 328+ 9F7E C3 26 9F         jp Cola
 329+ 9F81
 330+ 9F81
 331+ 9F81 CD BE 9F     2 call Inicia_Puntero_mov
 332+ 9F84
 333+ 9F84 21 F4 89         ld hl,Ctrl_2
 334+ 9F87 CB 96            res 2,(hl)
 335+ 9F89
 336+ 9F89 C3 F6 9E         jp Movimiento
 337+ 9F8C
 338+ 9F8C              Siguiente_desplazamiento
 339+ 9F8C
 340+ 9F8C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F8C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F8C
 343+ 9F8C 21 F4 89         ld hl,Ctrl_2
 344+ 9F8F CB 96            res 2,(hl)
 345+ 9F91
 346+ 9F91 2A E6 89         ld hl,(Puntero_mov)
 347+ 9F94 23               inc hl
 348+ 9F95 23               inc hl
 349+ 9F96 22 E6 89         ld (Puntero_mov),hl
 350+ 9F99
 351+ 9F99 7E               ld a,(hl)
 352+ 9F9A A7               and a
 353+ 9F9B CC 1E A0         call z,Incrementa_Puntero_indice_mov
 354+ 9F9E CA 5F 9F         jp z,Reinicia_el_movimiento
 355+ 9FA1
 356+ 9FA1 C9               ret
 357+ 9FA2              ; Subrutinas -----------------------------------------
 358+ 9FA2              ; ---------- --------- --------- ---------- ----------
 359+ 9FA2              ;
 360+ 9FA2              ;   24/07/23
 361+ 9FA2              ;
 362+ 9FA2              ;   Fijamos_bucle
 363+ 9FA2              ;
 364+ 9FA2              ;
 365+ 9FA2
 366+ 9FA2              Fijamos_bucle
 367+ 9FA2
 368+ 9FA2 3A EA 89         ld a,(Incrementa_puntero)
 369+ 9FA5 3C               inc a
 370+ 9FA6 32 EB 89         ld (Incrementa_puntero_backup),a
 371+ 9FA9
 372+ 9FA9 CD 1E A0         call Incrementa_Puntero_indice_mov
 373+ 9FAC 2A E4 89         ld hl,(Puntero_indice_mov)
 374+ 9FAF 22 E8 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FB2 C9               ret
 376+ 9FB3
 377+ 9FB3              ; ---------- --------- --------- ---------- ----------
 378+ 9FB3              ;
 379+ 9FB3              ;   07/7/23
 380+ 9FB3              ;
 381+ 9FB3              ;   Inicia_Repetimos_movimiento
 382+ 9FB3              ;
 383+ 9FB3              ;
 384+ 9FB3
 385+ 9FB3              Inicia_Repetimos_movimiento
 386+ 9FB3
 387+ 9FB3              ; Iniciamos (Repetimos_movimiento).
 388+ 9FB3
 389+ 9FB3 DD 2A E6 89      ld ix,(Puntero_mov)
 390+ 9FB7 DD 7E 02         ld a,(ix+2)
 391+ 9FBA 32 EE 89         ld (Repetimos_movimiento),a
 392+ 9FBD
 393+ 9FBD C9               ret
 394+ 9FBE
 395+ 9FBE              ; ---------- --------- --------- ---------- ----------
 396+ 9FBE              ;
 397+ 9FBE              ;   26/6/23
 398+ 9FBE              ;
 399+ 9FBE              ;   Inicia_Puntero_mov
 400+ 9FBE              ;
 401+ 9FBE              ;
 402+ 9FBE
 403+ 9FBE 2A E4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FC1 5E               ld e,(hl)
 405+ 9FC2 23               inc hl
 406+ 9FC3 56               ld d,(hl)
 407+ 9FC4 EB               ex de,hl
 408+ 9FC5 22 E6 89         ld (Puntero_mov),hl
 409+ 9FC8 C9               ret
 410+ 9FC9
 411+ 9FC9              ; ---------- --------- --------- ---------- ----------
 412+ 9FC9              ;
 413+ 9FC9              ;   27/06/23
 414+ 9FC9              ;
 415+ 9FC9              ;   Aplica_movimiento.
 416+ 9FC9
 417+ 9FC9              Aplica_desplazamiento
 418+ 9FC9
 419+ 9FC9              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FC9
 421+ 9FC9 2A E6 89         ld hl, (Puntero_mov)
 422+ 9FCC
 423+ 9FCC 7E               ld a,(hl)
 424+ 9FCD E6 F0            and $f0
 425+ 9FCF C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9FD0
 427+ 9FD0 CB 7E            bit 7,(hl)
 428+ 9FD2 28 03            jr z,1F
 429+ 9FD4 CD 03 9A         call Mov_up
 430+ 9FD7 2A E6 89     1 ld hl, (Puntero_mov)
 431+ 9FDA CB 76            bit 6,(hl)
 432+ 9FDC 28 03            jr z,2F
 433+ 9FDE CD D2 99         call Mov_down
 434+ 9FE1 2A E6 89     2 ld hl, (Puntero_mov)
 435+ 9FE4 CB 6E            bit 5,(hl)
 436+ 9FE6 28 03            jr z,3F
 437+ 9FE8 CD 64 9B         call Mov_left
 438+ 9FEB 2A E6 89     3 ld hl, (Puntero_mov)
 439+ 9FEE CB 66            bit 4,(hl)
 440+ 9FF0 C8               ret z
 441+ 9FF1 CD 46 9A         call Mov_right
 442+ 9FF4 C9               ret
 443+ 9FF5
 444+ 9FF5              ; ---------- --------- --------- ---------- ----------
 445+ 9FF5              ;
 446+ 9FF5              ;   26/06/23
 447+ 9FF5              ;
 448+ 9FF5              ;   Ajusta_velocidad_desplazamiento.
 449+ 9FF5
 450+ 9FF5              Ajusta_velocidad_desplazamiento
 451+ 9FF5
 452+ 9FF5              ; 1er byte de la cadena de movimiento.
 453+ 9FF5              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9FF5
 455+ 9FF5 CD 13 A0         call Extrae_nibble_alto
 456+ 9FF8
 457+ 9FF8 32 CA 89         ld (Vel_up),a
 458+ 9FFB 79               ld a,c
 459+ 9FFC E6 0F            and $0f
 460+ 9FFE 32 CB 89         ld (Vel_down),a
 461+ A001
 462+ A001              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A001              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A001
 465+ A001 23               inc hl
 466+ A002 CD 13 A0         call Extrae_nibble_alto
 467+ A005
 468+ A005 32 C8 89         ld (Vel_left),a
 469+ A008 79               ld a,c
 470+ A009 E6 0F            and $0f
 471+ A00B 32 C9 89         ld (Vel_right),a
 472+ A00E
 473+ A00E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A00E
 475+ A00E 23               inc hl
 476+ A00F 22 E6 89         ld (Puntero_mov),hl
 477+ A012 C9               ret
 478+ A013
 479+ A013 06 04        Extrae_nibble_alto ld b,4
 480+ A015 7E               ld a,(hl)
 481+ A016 4F               ld c,a
 482+ A017 E6 F0            and $f0
 483+ A019 CB 3F        1 srl a
 484+ A01B 10 FC            djnz 1B
 485+ A01D C9               ret
 486+ A01E
 487+ A01E              ; ---------- --------- --------- ---------- ----------
 488+ A01E              ;
 489+ A01E              ;   5/7/23
 490+ A01E              ;
 491+ A01E              ;   Incrementa_Puntero_indice_mov
 492+ A01E
 493+ A01E              Incrementa_Puntero_indice_mov
 494+ A01E
 495+ A01E 21 EA 89         ld hl,Incrementa_puntero
 496+ A021 34               inc (hl)
 497+ A022
 498+ A022 2A E4 89         ld hl,(Puntero_indice_mov)
 499+ A025 01 02 00         ld bc,2
 500+ A028 A7               and a
 501+ A029 09               add hl,bc
 502+ A02A 22 E4 89         ld (Puntero_indice_mov),hl
 503+ A02D
 504+ A02D 7E               ld a,(hl)
 505+ A02E A7               and a
 506+ A02F
 507+ A02F              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A02F
 509+ A02F              ;    jr z,$
 510+ A02F
 511+ A02F              ;! Reinicia el Patrón de movimiento.
 512+ A02F
 513+ A02F CC 34 A0         call z,Inicializa_Puntero_indice_mov
 514+ A032
 515+ A032 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A033
 517+ A033 C9               ret
 518+ A034
 519+ A034
 520+ A034              ; ---------- --------- --------- ---------- ----------
 521+ A034              ;
 522+ A034              ;   24/07/23
 523+ A034              ;
 524+ A034              ;   Inicializa_Puntero_indice_mov
 525+ A034
 526+ A034              Inicializa_Puntero_indice_mov
 527+ A034
 528+ A034              ; Existe etiqueta de bucle principal???
 529+ A034
 530+ A034 2A E8 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A037 24               inc h
 532+ A038 25               dec h
 533+ A039 28 05            jr z,2F
 534+ A03B
 535+ A03B 22 E4 89         ld (Puntero_indice_mov),hl
 536+ A03E 18 14            jr 3F
 537+ A040
 538+ A040              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A040
 540+ A040 3A EA 89     2 ld a,(Incrementa_puntero)
 541+ A043 47               ld b,a
 542+ A044
 543+ A044 2A E4 89         ld hl,(Puntero_indice_mov)
 544+ A047 2B           1 dec hl
 545+ A048 2B               dec hl
 546+ A049 10 FC            djnz 1B
 547+ A04B 22 E4 89         ld (Puntero_indice_mov),hl
 548+ A04E
 549+ A04E AF               xor a
 550+ A04F 32 EA 89         ld (Incrementa_puntero),a
 551+ A052 18 06            jr 4F
 552+ A054
 553+ A054 3A EB 89     3 ld a,(Incrementa_puntero_backup)
 554+ A057 32 EA 89         ld (Incrementa_puntero),a
 555+ A05A C9           4 ret
 556+ A05B
 557+ A05B
 558+ A05B
# file closed: Patrones_de_mov.asm
1407  A05B              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A05B              ; Relojes y temporizaciones.
   2+ A05B
   3+ A05B              ; ------------------------------------------------------
   4+ A05B              ;
   5+ A05B              ;	16/7/23
   6+ A05B              ;
   7+ A05B              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A05B              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A05B              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A05B              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A05B              ;
  12+ A05B              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A05B              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A05B
  15+ A05B              ; Disparo_entidad db 1
  16+ A05B              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A05B              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A05B
  19+ A05B              Habilita_disparos
  20+ A05B
  21+ A05B 7E           	ld a,(hl)
  22+ A05C A7           	and a
  23+ A05D C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A05E
  25+ A05E EB           	ex de,hl
  26+ A05F
  27+ A05F 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A060 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A061
  30+ A061              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A061
  32+ A061 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A062 7E           	ld a,(hl)
  34+ A063 23           	inc hl
  35+ A064 77           	ld (hl),a
  36+ A065
  37+ A065 EB           	ex de,hl						; Habilitamos disparo.
  38+ A066 3E 01        	ld a,1
  39+ A068 77           	ld (hl),a
  40+ A069 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1408  A06A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A06A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A06A              ;
   3+ A06A              ;	9/8/23
   4+ A06A              ;
   5+ A06A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A06A
   7+ A06A              ;	ADC HL,SP	LD (addr),SP
   8+ A06A              ;	ADD HL,SP	LD SP,(addr)
   9+ A06A              ;	ADD IX,SP	LD SP,nn
  10+ A06A              ; 	ADD IY,SP	LD SP,HL
  11+ A06A              ;				LD SP,IX
  12+ A06A              ;	DEC SP		LD SP,IY
  13+ A06A
  14+ A06A              ;	EX (SP),HL
  15+ A06A              ;	EX (SP),IX
  16+ A06A              ;	EX (SP),IY
  17+ A06A
  18+ A06A              ;	INC SP
  19+ A06A
  20+ A06A                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 07 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC 3A F6 89         ld a,(Ctrl_1)
  39+ 7FAF CB 47            bit 0,a
  40+ 7FB1 28 05            jr z,2F
  41+ 7FB3
  42+ 7FB3 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A 0B 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB
  47+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  48+ 7FBD
  49+ 7FBD D1           1 pop de
  50+ 7FBE 73               ld (hl),e
  51+ 7FBF 23               inc hl
  52+ 7FC0 72               ld (hl),d
  53+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  54+ 7FC2 10 F9            djnz 1B
  55+ 7FC4
  56+ 7FC4 CB 47            bit 0,a
  57+ 7FC6 28 05            jr z,5F
  58+ 7FC8
  59+ 7FC8 22 0D 8A         ld (Stack_snapshot_disparos),hl
  60+ 7FCB 18 03            jr 6F
  61+ 7FCD
  62+ 7FCD 22 0B 8A     5 ld (Stack_snapshot),hl
  63+ 7FD0 ED 7B 07 8A  6 ld sp,(Stack)
  64+ 7FD4
  65+ 7FD4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  66+ 7FD4
  67+ 7FD4 E5               push hl
  68+ 7FD5 D1               pop de                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  69+ 7FD6
  70+ 7FD6 2A 27 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  71+ 7FD9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  72+ 7FDA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  73+ 7FDB 72               ld (hl),d                                     ; _ álbum a otro.
  74+ 7FDC
  75+ 7FDC C9               ret
  76+ 7FDD
  77+ 7FDD              ; ------------------------------------------------
  78+ 7FDD              ;
  79+ 7FDD              ;   3/08/23
  80+ 7FDD              ;
  81+ 7FDD              ;   La rutina estará situada justo después de:
  82+ 7FDD              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  83+ 7FDD              ;
  84+ 7FDD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  85+ 7FDD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  86+ 7FDD
  87+ 7FDD                  org $7419
  88+ 7419
  89+ 7419              Gestiona_albumes_de_fotos
  90+ 7419
  91+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  92+ 7419              ;   Vaciamos Album_de_fotos.
  93+ 7419
  94+ 7419 2A 0F 8A         ld hl,(End_Snapshot)
  95+ 741C 01 00 70         ld bc,Album_de_fotos
  96+ 741F 11 01 70         ld de,Album_de_fotos+1
  97+ 7422 AF               xor a
  98+ 7423 02               ld (bc),a                   ; "0" en el 1er byte de origen.
  99+ 7424
 100+ 7424 CD B4 74         call Limpia_album
 101+ 7427
 102+ 7427 21 00 00         ld hl,0
 103+ 742A 22 0F 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 104+ 742D
 105+ 742D              ; ----- ----- ----- -----
 106+ 742D
 107+ 742D              ;   Album_de_fotos_1. Contiene datos ???
 108+ 742D
 109+ 742D 21 85 70         ld hl,Album_de_fotos_1+1
 110+ 7430 7E               ld a,(hl)
 111+ 7431 A7               and a
 112+ 7432 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 113+ 7434              ;                               ; _ información del album2 al album1.
 114+ 7434
 115+ 7434              ; ----- ----- ----- -----
 116+ 7434              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 117+ 7434
 118+ 7434 2A 13 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 119+ 7437 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 120+ 743A 11 00 70         ld de,Album_de_fotos        ; Destino.
 121+ 743D
 122+ 743D CD B4 74         call Limpia_album
 123+ 7440
 124+ 7440 2A 13 8A         ld hl,(End_Snapshot_1)
 125+ 7443 22 0F 8A         ld (End_Snapshot),hl        ; Transferimos (End_Snapshot) de un álbum a otro.
 126+ 7446
 127+ 7446              ;   Limpiamos Album_de_fotos_1.
 128+ 7446
 129+ 7446 2A 13 8A         ld hl,(End_Snapshot_1)
 130+ 7449 01 84 70         ld bc,Album_de_fotos_1
 131+ 744C 11 85 70         ld de,Album_de_fotos_1+1
 132+ 744F AF               xor a
 133+ 7450 02               ld (bc),a
 134+ 7451
 135+ 7451 CD B4 74         call Limpia_album
 136+ 7454
 137+ 7454 21 00 00         ld hl,0
 138+ 7457 22 13 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 139+ 745A
 140+ 745A              ; ----- ----- ----- -----
 141+ 745A
 142+ 745A              ;   Album_de_fotos_2. Contiene datos ???
 143+ 745A
 144+ 745A 21 08 71     1 ld hl,Album_de_fotos_2+1
 145+ 745D 7E               ld a,(hl)
 146+ 745E A7               and a
 147+ 745F 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 148+ 7461              ;                               ; _ información del album3 al album2.
 149+ 7461              ; ----- ----- ----- -----
 150+ 7461              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 151+ 7461
 152+ 7461 2A 17 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 153+ 7464 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 154+ 7467 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 155+ 746A
 156+ 746A CD B4 74         call Limpia_album
 157+ 746D
 158+ 746D 2A 17 8A         ld hl,(End_Snapshot_2)
 159+ 7470 22 13 8A         ld (End_Snapshot_1),hl      ; Transferimos (End_Snapshot) de un álbum a otro.
 160+ 7473
 161+ 7473              ;   Limpiamos Album_de_fotos_2.
 162+ 7473
 163+ 7473 2A 17 8A         ld hl,(End_Snapshot_2)
 164+ 7476 01 07 71         ld bc,Album_de_fotos_2
 165+ 7479 11 08 71         ld de,Album_de_fotos_2+1
 166+ 747C AF               xor a
 167+ 747D 02               ld (bc),a
 168+ 747E
 169+ 747E CD B4 74         call Limpia_album
 170+ 7481
 171+ 7481 21 00 00         ld hl,0
 172+ 7484 22 17 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 173+ 7487
 174+ 7487              ; ----- ----- ----- -----
 175+ 7487
 176+ 7487              ;   Album_de_fotos_3. Contiene datos ???
 177+ 7487
 178+ 7487 21 8B 71     2 ld hl,Album_de_fotos_3+1
 179+ 748A 7E               ld a,(hl)
 180+ 748B A7               and a
 181+ 748C C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 182+ 748D
 183+ 748D              ; ----- ----- ----- -----
 184+ 748D              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 185+ 748D
 186+ 748D 2A 1B 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 187+ 7490 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 188+ 7493 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 189+ 7496
 190+ 7496 CD B4 74         call Limpia_album
 191+ 7499
 192+ 7499 2A 1B 8A         ld hl,(End_Snapshot_3)
 193+ 749C 22 17 8A         ld (End_Snapshot_2),hl      ; Transferimos (End_Snapshot) de un álbum a otro.
 194+ 749F
 195+ 749F              ;   Limpiamos Album_de_fotos_2.
 196+ 749F
 197+ 749F 2A 1B 8A         ld hl,(End_Snapshot_3)
 198+ 74A2 01 8A 71         ld bc,Album_de_fotos_3
 199+ 74A5 11 8B 71         ld de,Album_de_fotos_3+1
 200+ 74A8 AF               xor a
 201+ 74A9 02               ld (bc),a
 202+ 74AA
 203+ 74AA CD B4 74         call Limpia_album
 204+ 74AD
 205+ 74AD 21 00 00         ld hl,0
 206+ 74B0 22 1B 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 207+ 74B3 C9               ret
 208+ 74B4
 209+ 74B4              ; ----------------------------------------------------
 210+ 74B4              ;
 211+ 74B4              ;   10/8/23
 212+ 74B4              ;
 213+ 74B4              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 214+ 74B4              ;
 215+ 74B4              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 216+ 74B4              ;           BC ..... Dirección de inicio del álbum.
 217+ 74B4              ;           DE ..... Dirección de inicio del álbum. +1
 218+ 74B4
 219+ 74B4              ;    ld hl,(End_Snapshot)
 220+ 74B4              ;    ld bc,Album_de_fotos
 221+ 74B4              ;    ld de,Album_de_fotos+1
 222+ 74B4
 223+ 74B4              ;   MODIFICA: A,HL,BC y DE.
 224+ 74B4
 225+ 74B4 C5           Limpia_album push bc            ; Guardo ORIGEN.
 226+ 74B5 ED 42            sbc hl,bc
 227+ 74B7 4D               ld c,l
 228+ 74B8 44               ld b,h
 229+ 74B9 E1               pop hl
 230+ 74BA ED B0            ldir
 231+ 74BC C9               ret
 232+ 74BD
 233+ 74BD              ; -----------------------------------------------
 234+ 74BD
 235+ 74BD
 236+ 74BD
 237+ 74BD
 238+ 74BD
# file closed: Guarda_foto_registros.asm
1409  74BD
1410  74BD              	SAVESNA "Pruebas.sna", START
1411  74BD
1412  74BD
1413  74BD
1414  74BD
# file closed: Banco_de_pruebas.asm
