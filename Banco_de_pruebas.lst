# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1C 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15
  44  AA15 3E 01        	ld a,1
  45  AA17 D3 FE        	out ($fe),a
  46  AA19 CD 0D 8E     	call Pinta_entidades
  47  AA1C 3E 00        	ld a,0
  48  AA1E D3 FE        	out ($fe),a
  49  AA20
  50  AA20              ;	call Pinta_Amadeus
  51  AA20 CD E9 8D     	call Gestiona_entidades
  52  AA23              ;	call Gestiona_Amadeus
  53  AA23
  54  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  55  AA23
  56  AA23 CD 1A 8E     	call Actualiza_relojes
  57  AA26
  58  AA26              ;	call Recupera_parametros_DRAW
  59  AA26
  60  AA26              ;! Debuggg
  61  AA26
  62  AA26 FD E1        	pop iy
  63  AA28 DD E1        	pop ix
  64  AA2A F1           	pop af
  65  AA2B C1           	pop bc
  66  AA2C D1           	pop de
  67  AA2D E1           	pop hl
  68  AA2E D9           	exx
  69  AA2F C1           	pop bc
  70  AA30 D1           	pop de
  71  AA31 E1           	pop hl
  72  AA32 08           	ex af,af'
  73  AA33 F1           	pop af
  74  AA34 08           	ex af,af'
  75  AA35 D9           	exx
  76  AA36
  77  AA36 ED 7B 1C 89  	ld sp,(Stack_3)
  78  AA3A
  79  AA3A FB           	ei
  80  AA3B C9           	ret
  81  AA3C
  82  AA3C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  83  AA3C
  84  AA3C              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3C              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3C              ;
   3+ AA3C              ;	17/02/23
   4+ AA3C              ;
   5+ AA3C              ;	Sprites e índices.
   6+ AA3C
   7+ AA3C              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 56 70        	defw Album_de_fotos_1
 259+ 84F0 AC 70        	defw Album_de_fotos_2
 260+ 84F2 02 71        	defw Album_de_fotos_3
 261+ 84F4 58 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 AE 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 04 72        	defw Album_de_fotos_disparos_2
 264+ 84FA 5A 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 22 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 28 89        	defw End_Snapshot_1
 267+ 8500 2C 89        	defw End_Snapshot_2
 268+ 8502 30 89        	defw End_Snapshot_3
 269+ 8504 24 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 2A 89        	defw End_Snapshot_disparos_1
 271+ 8508 2E 89        	defw End_Snapshot_disparos_2
 272+ 850A 32 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  85  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C              ;
  95+ 858C              ;	Índice de cajas de entidades.
  96+ 858C
  97+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 858C
  99+ 858C DD 85        	defw Caja_1
 100+ 858E 1C 86        	defw Caja_2
 101+ 8590 5B 86        	defw Caja_3
 102+ 8592 9A 86        	defw Caja_4
 103+ 8594 D9 86        	defw Caja_5
 104+ 8596 18 87        	defw Caja_6
 105+ 8598 57 87        	defw Caja_7
 106+ 859A
 107+ 859A 00 00        	defw 0
 108+ 859C 00 00        	defw 0
 109+ 859E
 110+ 859E              ; ---------- ---------- ---------- ---------- ----------
 111+ 859E
 112+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 114+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 85A7
 117+ 85A7 05           	db %00000101									; (Attr).
 118+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 85AC
 121+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 85B0
 124+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 85B2 04           	db 4 											; (Cuad_objeto).
 126+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 85B7
 128+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 85B8
 130+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 85BE
 132+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 133+ 85C0 00 00        	defw 0											;	" " " " " " "
 134+ 85C2 00 00        	defw 0											;	" " " " " " "
 135+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85C8
 137+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85CA
 139+ 85CA 00           	db 0											; (Autoriza_movimiento).
 140+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85CF 00 00
 141+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85D4
 143+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85D7
 146+ 85D7 00           	db 0 											; (Columnas).
 147+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85DD
 150+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85DD
 152+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85DF 00 00        	defw 0											; (Posicion_actual).
 154+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85E6
 157+ 85E6 00           	db %00000000 									; (Attr).
 158+ 85E7
 159+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85EF
 164+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85F1 00           	db 0											; (Cuad_objeto).
 166+ 85F2
 167+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85F6
 169+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85F7
 171+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85FD
 173+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00        	defw 0											;	" " " " " " "
 176+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8607
 178+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 8609
 180+ 8609 00           	db 0											; (Autoriza_movimiento).
 181+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 860E 00 00
 182+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 8613
 184+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 186+ 8616
 187+ 8616 00           	db 0 											; (Columnas).
 188+ 8617 00 00        	defw 0											; (Limite_horizontal).
 189+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 861C
 191+ 861C              ; ---------- ---------- ---------- ---------- ----------
 192+ 861C
 193+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 861E 00 00        	defw 0											; (Posicion_actual).
 195+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8625
 198+ 8625 00           	db %00000000 									; (Attr).
 199+ 8626
 200+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 862E
 205+ 862E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8630 00           	db 0											; (Cuad_objeto).
 207+ 8631
 208+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8635
 210+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8636
 212+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 863C
 214+ 863C 00 00        	db 0,0											; Variables_de_pintado
 215+ 863E 00 00        	defw 0											;	" " " " " " "
 216+ 8640 00 00        	defw 0											;	" " " " " " "
 217+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8646
 219+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8648
 221+ 8648 00           	db 0											; (Autoriza_movimiento).
 222+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 864D 00 00
 223+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8652
 225+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8655
 228+ 8655 00           	db 0 											; (Columnas).
 229+ 8656 00 00        	defw 0											; (Limite_horizontal).
 230+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 865B
 232+ 865B              ; ---------- ---------- ---------- ---------- ----------
 233+ 865B
 234+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 865D 00 00        	defw 0											; (Posicion_actual).
 236+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8664
 239+ 8664 00           	db %00000000 									; (Attr).
 240+ 8665
 241+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 866D
 246+ 866D 00 00        	defw 0											; (Posicion_inicio).
 247+ 866F 00           	db 0											; (Cuad_objeto).
 248+ 8670
 249+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8674
 251+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8675
 253+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 867B
 255+ 867B 00 00        	db 0,0											; Variables_de_pintado
 256+ 867D 00 00        	defw 0											;	" " " " " " "
 257+ 867F 00 00        	defw 0											;	" " " " " " "
 258+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8685
 260+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8687
 262+ 8687 00           	db 0											; (Autoriza_movimiento).
 263+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 868C 00 00
 264+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8691
 266+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8694
 269+ 8694 00           	db 0 											; (Columnas).
 270+ 8695 00 00        	defw 0											; (Limite_horizontal).
 271+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 869A
 273+ 869A              ; ---------- ---------- ---------- ---------- ----------
 274+ 869A
 275+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 869C 00 00        	defw 0											; (Posicion_actual).
 277+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 86A3
 280+ 86A3 00           	db %00000000 									; (Attr).
 281+ 86A4
 282+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 86AC
 287+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 288+ 86AE 00           	db 0											; (Cuad_objeto).
 289+ 86AF
 290+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 86B3
 292+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 86B4
 294+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 86BA
 296+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 297+ 86BC 00 00        	defw 0											;	" " " " " " "
 298+ 86BE 00 00        	defw 0											;	" " " " " " "
 299+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86C4
 301+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86C6
 303+ 86C6 00           	db 0											; (Autoriza_movimiento).
 304+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86CB 00 00
 305+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86D0
 307+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86D3
 310+ 86D3 00           	db 0 											; (Columnas).
 311+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86D9
 314+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86D9
 316+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86DB 00 00        	defw 0											; (Posicion_actual).
 318+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86E2
 321+ 86E2 00           	db %00000000 									; (Attr).
 322+ 86E3
 323+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86EB
 328+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86ED 00           	db 0											; (Cuad_objeto).
 330+ 86EE
 331+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86F2
 333+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86F3
 335+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86F9
 337+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86FB 00 00        	defw 0											;	" " " " " " "
 339+ 86FD 00 00        	defw 0											;	" " " " " " "
 340+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 8703
 342+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 8705
 344+ 8705 00           	db 0											; (Autoriza_movimiento).
 345+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 870A 00 00
 346+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 870F
 348+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 350+ 8712
 351+ 8712 00           	db 0 											; (Columnas).
 352+ 8713 00 00        	defw 0											; (Limite_horizontal).
 353+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 8718
 355+ 8718              ; ---------- ---------- ---------- ---------- ----------
 356+ 8718
 357+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 871A 00 00        	defw 0											; (Posicion_actual).
 359+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 360+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8721
 362+ 8721 00           	db %00000000 									; (Attr).
 363+ 8722
 364+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 872A
 369+ 872A 00 00        	defw 0											; (Posicion_inicio).
 370+ 872C 00           	db 0											; (Cuad_objeto).
 371+ 872D
 372+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8731
 374+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8732
 376+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8738
 378+ 8738 00 00        	db 0,0											; Variables_de_pintado
 379+ 873A 00 00        	defw 0											;	" " " " " " "
 380+ 873C 00 00        	defw 0											;	" " " " " " "
 381+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8742
 383+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8744
 385+ 8744 00           	db 0											; (Autoriza_movimiento).
 386+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8749 00 00
 387+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 874E
 389+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8751
 392+ 8751 00           	db 0 											; (Columnas).
 393+ 8752 00 00        	defw 0											; (Limite_horizontal).
 394+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8757
 396+ 8757              ; ---------- ---------- ---------- ---------- ----------
 397+ 8757
 398+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8759 00 00        	defw 0											; (Posicion_actual).
 400+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8760
 403+ 8760 00           	db %00000000 									; (Attr).
 404+ 8761
 405+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8769
 410+ 8769 00 00        	defw 0											; (Posicion_inicio).
 411+ 876B 00           	db 0											; (Cuad_objeto).
 412+ 876C
 413+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8770
 415+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8771
 417+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8777
 419+ 8777 00 00        	db 0,0											; Variables_de_pintado
 420+ 8779 00 00        	defw 0											;	" " " " " " "
 421+ 877B 00 00        	defw 0											;	" " " " " " "
 422+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8781
 424+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8783
 426+ 8783 00           	db 0											; (Autoriza_movimiento).
 427+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8788 00 00
 428+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 878D
 430+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8790
 433+ 8790 00           	db 0 											; (Columnas).
 434+ 8791 00 00        	defw 0											; (Limite_horizontal).
 435+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8796
 437+ 8796              ; -------------------------------------------------------------------------------------
 438+ 8796              ;
 439+ 8796              ;	20/05/23
 440+ 8796              ;
 441+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8796              ;
 443+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8796
 448+ 8796              Indice_de_entidades
 449+ 8796
 450+ 8796 9A 87        	defw Entidad_1
 451+ 8798 AA 87        	defw Entidad_2
 452+ 879A
 453+ 879A              ;	BADSAT, (Satélite malvado).
 454+ 879A
 455+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 879C 04           	db %00000100									; (Attr).
 457+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 87A3 01           	db 1											; (Cuad_objeto).
 461+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 87A8 14 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 87AA
 464+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 87AC 02           	db %00000010									; (Attr).
 466+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 87B3 01           	db 1											; (Cuad_objeto).
 470+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 87B8 14 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 87BA
# file closed: Cajas_y_disparos.asm
  86  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC D0 87        	defw Nivel_2
   7+ 87BE DD 87        	defw Nivel_3
   8+ 87C0 ED 87        	defw Nivel_4
   9+ 87C2 FF 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1
  19+ 87CD 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 87D5 01 02
  22+ 87D7 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87DB 01 02
  23+ 87DD 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 03 01 01 01  	db 3,1,1,1,1
  26+ 87EC 01
  27+ 87ED 11           Nivel_4 db 17									; Nº de entidades.
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 04 01 01 01  	db 4,1,1,1,1
  30+ 87FC 01
  31+ 87FD 02 03        	db 2,3
  32+ 87FF 14           Nivel_5 db 20									; Nº de entidades.
  33+ 8800 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  35+ 880E 01
  36+ 880F 05 01 01 01  	db 5,1,1,1,1
  36+ 8813 01
  37+ 8814
  38+ 8814              ;---------------------------------------------------------------------------------------------------------------
  39+ 8814              ;
  40+ 8814              ;   3/9/23
  41+ 8814              ;
  42+ 8814              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8814              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8814              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8814              ;	_en la caja DRAW correspondiente.
  46+ 8814              ;
  47+ 8814              ;	MODIFICA: HL,DE y A.
  48+ 8814              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8814
  50+ 8814              Inicializa_Punteros_de_nivel
  51+ 8814
  52+ 8814 21 BA 87     	ld hl,Indice_de_niveles
  53+ 8817 22 61 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 881A CD 8C 8C     	call Extrae_address
  55+ 881D 7E           	ld a,(hl)
  56+ 881E 32 10 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  57+ 8821 23           	inc hl
  58+ 8822 22 63 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  59+ 8825 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  60+ 8826
  61+ 8826              ;---------------------------------------------------------------------------------------------------------------
  62+ 8826              ;
  63+ 8826              ;   13/5/23
  64+ 8826              ;
  65+ 8826              ;	Destruye A,BC,HL,DE
  66+ 8826
  67+ 8826              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8826              ;	_del juego.
  69+ 8826
  70+ 8826              Prepara_cajas
  71+ 8826
  72+ 8826              ; Preparamos los punteros de las cajas.
  73+ 8826
  74+ 8826 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8829 CD 8C 8C     	call Extrae_address
  76+ 882C CD 69 88     	call Avanza_caja
  77+ 882F
  78+ 882F CD AD 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8832
  80+ 8832 2A 63 89     	ld hl,(Datos_de_nivel)
  81+ 8835
  82+ 8835              ; HL está en los datos del nivel correspondiente.
  83+ 8835              ; B actuará como contador de cajas.
  84+ 8835
  85+ 8835 C5           1 push bc
  86+ 8836
  87+ 8836 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8837 CD 5A 88     	call PreparaBC
  89+ 883A
  90+ 883A 21 96 87     	ld hl,Indice_de_entidades
  91+ 883D CD 62 88     	call SBC_HL_con_BC_y_Extrae
  92+ 8840 22 16 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8843
  94+ 8843 CD 73 88     	call Datos_de_entidad_a_caja
  95+ 8846
  96+ 8846 2A 0E 89     	ld hl,(Indice_restore_caja)
  97+ 8849 CD 8C 8C     	call Extrae_address
  98+ 884C CD 69 88     	call Avanza_caja
  99+ 884F
 100+ 884F 2A 63 89     	ld hl,(Datos_de_nivel)
 101+ 8852 23           	inc hl
 102+ 8853 22 63 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8856
 104+ 8856 C1           	pop bc
 105+ 8857 10 DC        	djnz 1B
 106+ 8859 C9           	ret
 107+ 885A
 108+ 885A CB 27        PreparaBC sla a
 109+ 885C D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 885E 4F           	ld c,a
 111+ 885F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8861 C9           	ret
 113+ 8862
 114+ 8862 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8863 ED 4A        	adc hl,bc
 116+ 8865 CD 8C 8C     	call Extrae_address
 117+ 8868 C9           	ret
 118+ 8869
 119+ 8869 22 0A 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 886C 13           	inc de
 121+ 886D 13           	inc de
 122+ 886E EB           	ex de,hl
 123+ 886F 22 0E 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8872 C9           	ret
 125+ 8873
 126+ 8873              Datos_de_entidad_a_caja
 127+ 8873
 128+ 8873              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8873
 130+ 8873
 131+ 8873 ED 5B 0A 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8877
 133+ 8877 01 02 00     	ld bc,2
 134+ 887A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 887C
 136+ 887C 01 07 00     	ld bc,7
 137+ 887F CD A7 88     	call Situa_DE
 138+ 8882
 139+ 8882 01 05 00     	ld bc,5
 140+ 8885 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8887
 142+ 8887 01 04 00     	ld bc,4
 143+ 888A CD A7 88     	call Situa_DE
 144+ 888D
 145+ 888D 01 07 00     	ld bc,7
 146+ 8890 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8892
 148+ 8892 01 12 00     	ld bc,18
 149+ 8895 CD A7 88     	call Situa_DE
 150+ 8898
 151+ 8898 01 02 00     	ld bc,2
 152+ 889B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 889D
 154+ 889D              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 889D              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 889D
 157+ 889D 01 0F 00     	ld bc,15									; *****
 158+ 88A0 CD A7 88     	call Situa_DE
 159+ 88A3
 160+ 88A3 3E 03        	ld a,3
 161+ 88A5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 88A6
 163+ 88A6 C9           	ret
 164+ 88A7
 165+ 88A7 EB           Situa_DE ex de,hl
 166+ 88A8 A7           	and a
 167+ 88A9 ED 4A        	adc hl,bc
 168+ 88AB EB           	ex de,hl
 169+ 88AC C9           	ret
 170+ 88AD
 171+ 88AD              ;---------------------------------------------------------------------------------------------------------------
 172+ 88AD              ;
 173+ 88AD              ;	21/5/23
 174+ 88AD              ;
 175+ 88AD              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 88AD              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 88AD              ;
 178+ 88AD              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 88AD              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 88AD              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 88AD              ;
 182+ 88AD              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 88AD              ;	MODIFICA: A y B.
 184+ 88AD              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 88AD
 186+ 88AD              Admin_num_entidades
 187+ 88AD
 188+ 88AD              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 88AD
 190+ 88AD 3A 10 89     	ld a,(Numero_de_entidades)
 191+ 88B0 A7           	and a
 192+ 88B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 88B1              ;	jr z,$
 194+ 88B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 88B1
 196+ 88B1 20 03        	jr nz,3F
 197+ 88B3
 198+ 88B3              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 88B3
 200+ 88B3 CD 14 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 88B6
 202+ 88B6 3A 10 89     3 ld a,(Numero_de_entidades)
 203+ 88B9 FE 0A        	cp 10
 204+ 88BB 38 08        	jr c,1F
 205+ 88BD
 206+ 88BD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 88BD              ; Actualizamos variables.
 208+ 88BD
 209+ 88BD 3E 0A        	ld a,10
 210+ 88BF 32 11 89     	ld (Numero_parcial_de_entidades),a
 211+ 88C2 47           	ld b,a
 212+ 88C3 18 04        	jr 2F
 213+ 88C5
 214+ 88C5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 88C5              ; (Numero_de_entidades)="0".
 216+ 88C5
 217+ 88C5 32 11 89     1 ld (Numero_parcial_de_entidades),a
 218+ 88C8 47           	ld b,a
 219+ 88C9 C9           2 ret
# file closed: Niveles.asm
  87  88CA
  88  88CA              ; ******************************************************************************************************************************************************************************************
  89  88CA              ; Constantes.
  90  88CA              ; ******************************************************************************************************************************************************************************************
  91  88CA              ;
  92  88CA              ; 10/11/23
  93  88CA
  94  88CA              ;
  95  88CA              ; Constantes generales.
  96  88CA              ;
  97  88CA
  98  88CA              Sprite_vacio equ $f000
  99  88CA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 100  88CA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 101  88CA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 102  88CA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 103  88CA
 104  88CA              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 105  88CA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 106  88CA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 107  88CA              Album_de_fotos_disparos equ $7158 ; (7158h - 71ad).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 108  88CA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 109  88CA              ;
 110  88CA              Album_de_fotos_1 equ $7056	; (7056h - 70ab).
 111  88CA              Album_de_fotos_disparos_1 equ $71ae	; (71aeh - 7203h).
 112  88CA              Album_de_fotos_2 equ $70ac	; (70ach - 7101h).
 113  88CA              Album_de_fotos_disparos_2 equ $7204	; (7204h - 7259h).
 114  88CA              Album_de_fotos_3 equ $7102	; (7102 - 7157h).
 115  88CA              Album_de_fotos_disparos_3 equ $725a	; (725ah - 72afh).
 116  88CA
 117  88CA              Album_de_fotos_Amadeus equ $72b0 ; (72b0h - 72bch) ; 12 bytes.
 118  88CA              Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 119  88CA
 120  88CA
 121  88CA
 122  88CA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 123  88CA
 124  88CA              ; ******************************************************************************************************************************************************************************************
 125  88CA              ; Variables.
 126  88CA              ; ******************************************************************************************************************************************************************************************
 127  88CA              ;
 128  88CA              ; 10/11//23
 129  88CA              ;
 130  88CA              ; Variables de DRAW. (Motor principal).
 131  88CA              ;
 132  88CA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 133  88CA
 134  88CA 00           Filas db 0												; Filas. [DRAW]
 135  88CB 00           Columns db 0  											; Nº de columnas. [DRAW]
 136  88CC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 137  88CE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 138  88D0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 139  88D1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 140  88D2
 141  88D2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 142  88D2
 143  88D2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 144  88D3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 145  88D3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 146  88D3 00           Attr db 0												; Atributos de la entidad:
 147  88D4
 148  88D4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 149  88D4              ;
 150  88D4              ;	COLORES: 0 ..... NEGRO
 151  88D4              ;    		 1 ..... AZUL
 152  88D4              ; 			 2 ..... ROJO
 153  88D4              ;			 3 ..... MAGENTA
 154  88D4              ; 			 4 ..... VERDE
 155  88D4              ; 			 5 ..... CIAN
 156  88D4              ;			 6 ..... AMARILLO
 157  88D4              ; 			 7 ..... BLANCO
 158  88D4
 159  88D4 00 00        Indice_Sprite_der defw 0
 160  88D6 00 00        Indice_Sprite_izq defw 0
 161  88D8 00 00        Puntero_DESPLZ_der defw 0
 162  88DA 00 00        Puntero_DESPLZ_izq defw 0
 163  88DC
 164  88DC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 165  88DE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 166  88DF
 167  88DF              ; Variables de objeto. (Características).
 168  88DF
 169  88DF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 170  88E0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 171  88E1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 172  88E2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 173  88E3
 174  88E3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 175  88E4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 176  88E4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 177  88E4 00 00 00...  Variables_de_borrado ds 6
 178  88EA
 179  88EA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 180  88EC 00 00        	defw 0
 181  88EE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 182  88F0 00 00 00 00  	db 0,0,0,0
 183  88F4
 184  88F4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 185  88F4
 186  88F4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 187  88F5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 188  88F5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 189  88F5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 190  88F5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 191  88F5              ;
 192  88F5              ; 														DESCRIPCIÖN:
 193  88F5              ;
 194  88F5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 195  88F5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 196  88F5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 197  88F5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 198  88F5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 199  88F5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 200  88F5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 201  88F5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 202  88F5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 203  88F5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 204  88F5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 205  88F5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 206  88F5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 207  88F5              ;
 208  88F5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 209  88F5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 210  88F5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 211  88F5
 212  88F5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 213  88F5
 214  88F5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 215  88F7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 216  88F9 00 00        Puntero_indice_mov_bucle defw 0							;
 217  88FB              ;
 218  88FB              ;
 219  88FB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 220  88FC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 221  88FC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 222  88FC 00           Incrementa_puntero_backup db 0
 223  88FD 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 224  88FE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 225  88FE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 226  88FF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 227  8900 00           Cola_de_desplazamiento db 0								; Este byte indica:
 228  8901              ;
 229  8901              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 230  8901              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 231  8901              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 232  8901              ;
 233  8901              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 234  8901              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 235  8901              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 236  8901              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 237  8901              ;
 238  8901              ;														;	"$ff" ..... Bucle infinito de repetición.
 239  8901              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 240  8901              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 241  8901
 242  8901
 243  8901              ; Variables de funcionamiento. [DRAW].
 244  8901
 245  8901 00           Columnas db 0
 246  8902 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 247  8904              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 248  8904 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 249  8905
 250  8905              ; variables de control general.
 251  8905
 252  8905 00           Ctrl_2 db 0
 253  8906              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 254  8906              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 255  8906              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 256  8906              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 257  8906              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 258  8906              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 259  8906              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 260  8906              ;
 261  8906              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 262  8906              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 263  8906              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 264  8906              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 265  8906              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 266  8906
 267  8906 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 268  8907
 269  8907              ;! 61 Bytes por entidad.
 270  8907
 271  8907              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 272  8907              ;					         		---------;      ;---------
 273  8907
 274  8907
 275  8907              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 276  8907
 277  8907 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 278  8908
 279  8908              ;														DESCRIPCIÓN:
 280  8908              ;
 281  8908              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 282  8908              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 283  8908              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 284  8908              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 285  8908              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 286  8908              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 287  8908
 288  8908              ;														BIT 3, Recarga de nueva oleada.
 289  8908              ;														BIT 4, Recarga de nueva oleada.
 290  8908              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 291  8908              ;														BIT 6, **** Frame completo.
 292  8908              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 293  8908
 294  8908 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 295  890A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 296  890A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 297  890A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 298  890A
 299  890A              ; Gestión de ENTIDADES y CAJAS.
 300  890A
 301  890A 00 00        Puntero_store_caja defw 0
 302  890C 00 00        Puntero_restore_caja defw 0
 303  890E 00 00        Indice_restore_caja defw 0
 304  8910 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 305  8911 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 306  8912 00           Entidades_en_curso db 0									; ..... ..... .....
 307  8913 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 308  8914              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 309  8914              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 310  8914              ;														; _ (Numero_de_malotes)="0".
 311  8914 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 312  8916 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 313  8918              ;														; _ puntero (Indice_entidades).
 314  8918
 315  8918
 316  8918              ;---------------------------------------------------------------------------------------------------------------
 317  8918              ;
 318  8918              ;	8/11/23
 319  8918              ;
 320  8918              ;	Álbumes.
 321  8918
 322  8918 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 323  891A              ;														; _variable para almacenar lo posición del puntero_
 324  891A              ; 														; _de pila, SP.
 325  891A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 326  891C              ;														; La utiliza la rutina [Extrae_foto_registros].
 327  891C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 328  891E 00 00        Stack_snapshot defw 0
 329  8920 00 00        Stack_snapshot_disparos defw 0
 330  8922
 331  8922 00 00        End_Snapshot defw 0
 332  8924              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 333  8924 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 334  8926              ;														; _el snapshot de los registros del siguiente disparo.
 335  8926              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 336  8926 B0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 337  8928 00 00        End_Snapshot_1 defw 0
 338  892A 00 00        End_Snapshot_disparos_1 defw 0
 339  892C 00 00        End_Snapshot_2 defw 0
 340  892E 00 00        End_Snapshot_disparos_2 defw 0
 341  8930 00 00        End_Snapshot_3 defw 0
 342  8932 00 00        End_Snapshot_disparos_3 defw 0
 343  8934
 344  8934 00 00        Puntero_indice_album_de_fotos defw 0
 345  8936 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 346  8938
 347  8938 00 00        Puntero_indice_End_Snapshot defw 0
 348  893A 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 349  893C 00 00        Puntero_de_End_Snapshot defw 0
 350  893E 00 00        Puntero_de_End_Snapshot_disparos defw 0
 351  8940
 352  8940 F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 353  8941              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 354  8941
 355  8941 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 356  8942              ;
 357  8942              ;														DESCRIPCIÓN:
 358  8942              ;
 359  8942              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 360  8942              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 361  8942              ;																_ álbum. También indica que "hay recolocación" antes de ejecutar la "cascada de álbumes". El tipo de recolocación lo definen_
 362  8942              ;																_ los bits 1 y 2.
 363  8942              ;														BIT 1, Indica que la recolocación de álbumes será de Album3_a_Album2, (siempre que Álbum_3 contenga un FRAME completo).
 364  8942              ;														BIT 2, Indica que la recolocación de álbumes será de Album2_a_Album1, (siempre que álbum_2 contenga un FRAME completo).
 365  8942              ;																Nota: En el caso de que al hacer la recolocación, nos encontremos con que el álbum donante sigue incompleto, saltaremos_
 366  8942              ;																	_ a ejecutar la "Casacada" de álbumes para limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 367  8942              ;														BIT 3, Existe DOBLE RECOLOCACIÓN. Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Siempre que Album_de_fotos_3 contenga un FRAME completo,_
 368  8942              ;																_ pasaremos Album3_a_Album2 y Album2_a_Album1. También modificaremos los punteros y los situaremos al comienzo de Album_de_fotos_2.
 369  8942              ;																_ En el caso de que al hacer la DOBLE RECOLOCACIÓN, Album_de_fotos_3 esté incompleto, saltaremos a ejecutar la "Casacada" de álbumes para_
 370  8942              ;																_ limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 371  8942              ;														BIT 4, Buffer vacío !!!. Album_de_fotos está vacío y no podemos volcar Album_de_fotos_1. Está incompleto.
 372  8942              ;																_ El siguiente FRAME no se imprime, NO HAY CUADRO.
 373  8942
 374  8942              ;---------------------------------------------------------------------------------------------------------------
 375  8942
 376  8942              ; Gestión de Disparos.
 377  8942
 378  8942 00           Numero_de_disparotes db 0
 379  8943 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 380  8945 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 381  8947 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 382  8948              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 383  8948              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 384  8948 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 385  894A              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 386  894A              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 387  894A              ;														; _produzca colisión.
 388  894A 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 389  894C              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 390  894C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 391  894F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 392  894F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 393  8952              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 394  8952 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 395  8954 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 396  8955
 397  8955              ;---------------------------------------------------------------------------------------------------------------
 398  8955
 399  8955              ; Relojes y temporizaciones.
 400  8955
 401  8955 00           Contador_de_frames db 0
 402  8956 00           Contador_de_frames_2 db 0
 403  8957
 404  8957 04           Clock_explosion db 4
 405  8958 1E           Clock_Entidades_en_curso db 30
 406  8959 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 407  895A              ;														; Repite la oleada de entidades.
 408  895A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 409  895B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 410  895C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 411  895D
 412  895D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 413  895E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 414  895F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 415  8960
 416  8960              ;---------------------------------------------------------------------------------------------------------------
 417  8960
 418  8960              ; Gestión de NIVELES.
 419  8960
 420  8960 00           Nivel db 0												; Nivel actual del juego.
 421  8961 00 00        Puntero_indice_NIVELES defw 0
 422  8963 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 423  8965              ; 														; _ que definen el NIVEL.
 424  8965              ; Y todo comienza aquí .....
 425  8965              ;
 426  8965              ; Rutina principal *************************************************************************************************************************************************************************
 427  8965              ;
 428  8965              ;	14/11/22
 429  8965
 430  8965              START
 431  8965
 432  8965 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 433  8968 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 434  896A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 435  896C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 436  896E F3           	DI
 437  896F
 438  896F 3E 07        	ld a,%00000111
 439  8971 CD 41 99     	call Cls
 440  8974
 441  8974 CD 65 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 442  8977
 443  8977              ; INICIALIZACIÓN.
 444  8977
 445  8977 CD 14 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 446  897A CD 26 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 447  897D CD 8A 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 448  8980              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 449  8980 CD A0 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 450  8983              ;													     ; _ malotes antes de guardar ninguna foto.
 451  8983              ; ----------
 452  8983
 453  8983 CD 15 8D     	call Restore_entidad
 454  8986
 455  8986 21 11 89     	ld hl,Numero_parcial_de_entidades
 456  8989 46           	ld b,(hl)
 457  898A 04           	inc b
 458  898B 05           	dec b
 459  898C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 460  898E
 461  898E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 462  898E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 463  898E              ;	Pintamos el resto de entidades:
 464  898E
 465  898E              ;	INICIA ENTIDADES !!!!!
 466  898E
 467  898E C5           1 push bc  												; Guardo el contador de entidades.
 468  898F CD 5A 8B     	call Inicia_entidad
 469  8992 C1           	pop bc
 470  8993 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 471  8995
 472  8995              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 473  8995              ; (Esto se dá cuando se inicia una nueva oleada).
 474  8995
 475  8995 3A 07 89     	ld a,(Ctrl_1)
 476  8998 CB 5F        	bit 3,a
 477  899A 20 00        	jr nz,5F											; Loop
 478  899C
 479  899C              ; 	INICIA AMADEUS !!!!!
 480  899C
 481  899C              3
 482  899C
 483  899C              ;	call Restore_Amadeus
 484  899C              ;	call Inicia_Puntero_objeto
 485  899C              ;	call Draw
 486  899C              ;	call Guarda_foto_registros
 487  899C              ;	call Guarda_datos_de_borrado_Amadeus
 488  899C
 489  899C              ;	ld de,Amadeus_db
 490  899C              ;	call Store_Amadeus
 491  899C
 492  899C              ; 	INICIA DISPAROS !!!!!
 493  899C
 494  899C              ;	call Inicia_Puntero_Disparo_Entidades
 495  899C              ;	call Inicia_Puntero_Disparo_Amadeus
 496  899C
 497  899C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 498  899C
 499  899C CD 8A 8B     5 call Inicia_punteros_de_cajas
 500  899F CD 15 8D     	call Restore_entidad
 501  89A2
 502  89A2 3A 07 89     	ld a,(Ctrl_1)
 503  89A5 CB 5F        	bit 3,a
 504  89A7 28 07        	jr z,6F
 505  89A9
 506  89A9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 507  89A9
 508  89A9 21 07 89     	ld hl,Ctrl_1
 509  89AC CB 9E        	res 3,(hl)
 510  89AE 18 03        	jr Main
 511  89B0
 512  89B0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 513  89B0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 514  89B0              ; _ para situarnos en el siguiente album.
 515  89B0
 516  89B0 CD D1 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 517  89B3
 518  89B3
 519  89B3              ; ------------------------------------
 520  89B3
 521  89B3              Main
 522  89B3              ;
 523  89B3              ;	12/11/23
 524  89B3
 525  89B3              ; Aparece nueva entidad ???
 526  89B3
 527  89B3              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 528  89B3              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 529  89B3              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 530  89B3              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 531  89B3              ;														; _un 2º bloque.
 532  89B3
 533  89B3 3A 58 89     	ld a,(Clock_Entidades_en_curso)
 534  89B6 47           	ld b,a
 535  89B7 3A 55 89     	ld a,(Contador_de_frames)
 536  89BA B8           	cp b
 537  89BB 28 07        	jr z,21F
 538  89BD
 539  89BD              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 540  89BD              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 541  89BD              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 542  89BD              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 543  89BD
 544  89BD 3C           	inc a
 545  89BE B8           	cp b
 546  89BF 20 1B        	jr nz,13F
 547  89C1
 548  89C1 32 55 89     	ld (Contador_de_frames),a
 549  89C4
 550  89C4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 551  89C4              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 552  89C4
 553  89C4 3A 11 89     21 ld a,(Numero_parcial_de_entidades)
 554  89C7 47           	ld b,a
 555  89C8 3A 12 89     	ld a,(Entidades_en_curso)
 556  89CB B8           	cp b
 557  89CC 28 0E        	jr z,13F
 558  89CE 30 0C        	jr nc,13F
 559  89D0
 560  89D0              ; --- --- --- --- ---
 561  89D0
 562  89D0 3C           	inc a
 563  89D1 32 12 89     	ld (Entidades_en_curso),a
 564  89D4
 565  89D4              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 566  89D4
 567  89D4 3A 58 89     	ld a,(Clock_Entidades_en_curso)
 568  89D7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 569  89D7              ;! _ IMPREDECIBLE !!!!
 570  89D7 C6 32        	add 50
 571  89D9 32 58 89     	ld (Clock_Entidades_en_curso),a
 572  89DC
 573  89DC              ; -------------------------------------------------------------------------------------------------------------
 574  89DC
 575  89DC              ; Habilita disparos.
 576  89DC
 577  89DC 21 5A 89     13 ld hl,Disparo_Amadeus
 578  89DF 11 5C 89     	ld de,CLOCK_repone_disparo_Amadeus
 579  89E2 CD 05 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 580  89E5
 581  89E5 21 5D 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 582  89E8 11 5F 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 583  89EB CD 05 9D     	call Habilita_disparos
 584  89EE
 585  89EE              ; COLISIONES.
 586  89EE
 587  89EE CD 16 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 588  89F1
 589  89F1              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 590  89F1              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 591  89F1              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 592  89F1
 593  89F1 AF           	xor a
 594  89F2 32 47 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 595  89F5
 596  89F5 CD 8A 8B     	call Inicia_punteros_de_cajas
 597  89F8 CD 15 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 598  89FB              ; 														; _ en DRAW.
 599  89FB 3A CA 88     	ld a,(Filas)
 600  89FE A7           	and a
 601  89FF 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 602  8A01 CD 27 8D     	call Incrementa_punteros_de_cajas
 603  8A04 18 F2        	jr 12B
 604  8A06
 605  8A06              ; ---------------------------------------------------------------------------------------
 606  8A06
 607  8A06 3A 11 89     10 ld a,(Numero_parcial_de_entidades)
 608  8A09 47               ld b,a
 609  8A0A A7           	and a
 610  8A0B 20 14        	jr nz,11F
 611  8A0D
 612  8A0D 21 07 89     	ld hl,Ctrl_1
 613  8A10 CB 66        	bit 4,(hl)
 614  8A12 C2 9F 8A     	jp nz,16F
 615  8A15
 616  8A15              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 617  8A15
 618  8A15 21 07 89     	ld hl,Ctrl_1
 619  8A18 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 620  8A1A
 621  8A1A 3A 55 89     	ld a,(Contador_de_frames)
 622  8A1D 3C           	inc a
 623  8A1E 32 59 89     	ld (Activa_recarga_cajas),a
 624  8A21
 625  8A21              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 626  8A21
 627  8A21 3A 12 89     11 ld a,(Entidades_en_curso)
 628  8A24 A7           	and a
 629  8A25 CA 9F 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 630  8A28 47           	ld b,a												; No hay entidades que gestionar.
 631  8A29
 632  8A29              ; Código que ejecutamos con cada entidad:
 633  8A29              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 634  8A29
 635  8A29 C5           15 push bc 												; Nº de entidades en curso.
 636  8A2A
 637  8A2A              ; Impacto ???
 638  8A2A
 639  8A2A 3A E3 88     	ld a,(Impacto)
 640  8A2D A7           	and a
 641  8A2E 28 32        	jr z,8F
 642  8A30
 643  8A30              ; Hay Impacto en esta entidad.
 644  8A30
 645  8A30 21 57 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 646  8A33 35           	dec (hl)
 647  8A34 20 63        	jr nz,17F
 648  8A36
 649  8A36              ;! Velocidad de la animación de la explosión.
 650  8A36
 651  8A36 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 652  8A38              ;														; _,(velocidad de la explosión).
 653  8A38
 654  8A38              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 655  8A38 18 FE        	jr $
 656  8A3A
 657  8A3A CD D6 8D     	call Repone_datos_de_borrado
 658  8A3D CD 2E 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 659  8A40
 660  8A40
 661  8A40              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 662  8A40
 663  8A40 3A 05 89     	ld a,(Ctrl_2)
 664  8A43 CB 4F        	bit 1,a
 665  8A45 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 666  8A47
 667  8A47              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 668  8A47
 669  8A47 3A D2 88     	ld a,(CTRL_DESPLZ)
 670  8A4A A7           	and a
 671  8A4B 20 08        	jr nz,18F
 672  8A4D
 673  8A4D 21 84 84     	ld hl,Indice_Explosion_2x2-2
 674  8A50 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 675  8A53 18 06        	jr 19F
 676  8A55
 677  8A55 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 678  8A58 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 679  8A5B
 680  8A5B 21 05 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 681  8A5E CB CE        	set 1,(hl)
 682  8A60 18 22        	jr 7F
 683  8A62
 684  8A62              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 685  8A62              ; _con las coordenadas de la entidad almacenada en DRAW.
 686  8A62
 687  8A62 3A 07 89     8 ld a,(Ctrl_1)
 688  8A65 CB 57        	bit 2,a
 689  8A67 28 1B        	jr z,7F
 690  8A69
 691  8A69 2A 4A 89     	ld hl,(Coordenadas_disparo_certero)
 692  8A6C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 693  8A6D              ;														; E contiene la coordenada_X del disparo.
 694  8A6D 2A D0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 695  8A70              ;														; H FILA, (Coordenada_y de la entidad).
 696  8A70 A7           	and a
 697  8A71 ED 52        	sbc hl,de
 698  8A73
 699  8A73 CD 4D 92     	call Determina_resultado_comparativa
 700  8A76
 701  8A76 78           	ld a,b
 702  8A77 A7           	and a
 703  8A78 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 704  8A7A
 705  8A7A              ; ----- ----- -----
 706  8A7A
 707  8A7A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 708  8A7C 32 E3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 709  8A7F
 710  8A7F 21 07 89     	ld hl,Ctrl_1
 711  8A82 CB 96        	res 2,(hl)
 712  8A84
 713  8A84 CD F6 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 714  8A87
 715  8A87 3A F4 88     	ld a,(Ctrl_0)
 716  8A8A CB 67        	bit 4,a
 717  8A8C 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 718  8A8E
 719  8A8E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 720  8A8E              ; [[[
 721  8A8E CD B0 8D     	call Detecta_disparo_entidad
 722  8A91              ; ]]]
 723  8A91 CD 6B 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 724  8A94              ;	call Guarda_datos_de_borrado
 725  8A94
 726  8A94 21 F4 88     	ld hl,Ctrl_0
 727  8A97 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 728  8A99
 729  8A99 CD DA 8C     17 call Store_Restore_cajas
 730  8A9C
 731  8A9C C1           	pop bc
 732  8A9D 10 8A        	djnz 15B
 733  8A9F
 734  8A9F              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 735  8A9F              ; Hemos gestionado todas las unidades.
 736  8A9F              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 737  8A9F
 738  8A9F              ;	ld hl,Ctrl_1
 739  8A9F              ;	res 2,(hl)
 740  8A9F
 741  8A9F CD D1 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 742  8AA2              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 743  8AA2
 744  8AA2              ; ----------------------------------------
 745  8AA2
 746  8AA2 3A 07 89     	ld a,(Ctrl_1) 										; Existe Loop?
 747  8AA5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 748  8AA7 CA B3 89     	jp z,Main
 749  8AAA
 750  8AAA              ; RECARGA DE NUEVA OLEADA.
 751  8AAA
 752  8AAA 3A 55 89     	ld a,(Contador_de_frames)
 753  8AAD 47           	ld b,a
 754  8AAE 3A 59 89     	ld a,(Activa_recarga_cajas)
 755  8AB1 B8           	cp b
 756  8AB2 28 08        	jr z,20F
 757  8AB4
 758  8AB4 21 07 89     	ld hl,Ctrl_1
 759  8AB7 CB E6        	set 4,(hl)
 760  8AB9 C3 B3 89     	jp Main
 761  8ABC
 762  8ABC 21 07 89     20 ld hl,Ctrl_1
 763  8ABF CB A6        	res 4,(hl)
 764  8AC1
 765  8AC1 3A 55 89     	ld a,(Contador_de_frames)
 766  8AC4
 767  8AC4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 768  8AC4              ;! _ IMPREDECIBLE !!!!
 769  8AC4
 770  8AC4 C6 0A        	add 10
 771  8AC6 32 58 89     	ld (Clock_Entidades_en_curso),a
 772  8AC9
 773  8AC9 C3 7A 89     	jp 4B
 774  8ACC
 775  8ACC C9           	ret
 776  8ACD
 777  8ACD              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 778  8ACD
 779  8ACD              Gestiona_Amadeus
 780  8ACD
 781  8ACD 3E 04            ld a,4
 782  8ACF D3 FE        	out ($fe),a											; Azul.
 783  8AD1
 784  8AD1 CD 3C 8D     	call Restore_Amadeus
 785  8AD4
 786  8AD4              ;! Activa/desactiva impacto con Amadeus.
 787  8AD4
 788  8AD4 3A E3 88     	ld a,(Impacto)
 789  8AD7 A7           	and a
 790  8AD8 20 FE        	jr nz,$
 791  8ADA
 792  8ADA CD 47 8B     	call Mov_Amadeus
 793  8ADD
 794  8ADD 3A F4 88     	ld a,(Ctrl_0)
 795  8AE0 CB 67        	bit 4,a
 796  8AE2 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 797  8AE4
 798  8AE4 CD 6B 8B     	call Guarda_foto_entidad_a_pintar
 799  8AE7 CD B6 8D     	call Guarda_datos_de_borrado_Amadeus
 800  8AEA
 801  8AEA 21 F4 88     14 ld hl,Ctrl_0
 802  8AED CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 803  8AEF
 804  8AEF 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 805  8AF2 CD 4E 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 806  8AF5
 807  8AF5              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 808  8AF5
 809  8AF5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 810  8AF5
 811  8AF5              ;	call Calcula_numero_de_disparotes
 812  8AF5
 813  8AF5 C9           	ret
 814  8AF6
 815  8AF6              ; --------------------------------------------------------------------------------------------------------------
 816  8AF6              ;
 817  8AF6              ;	27/05/23
 818  8AF6
 819  8AF6              Mov_obj
 820  8AF6
 821  8AF6 3A 05 89     	ld a,(Ctrl_2)
 822  8AF9 CB 4F        	bit 1,a
 823  8AFB 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 824  8AFD
 825  8AFD              ; Explosión:
 826  8AFD
 827  8AFD 3A 06 89     	ld a,(Frames_explosion)
 828  8B00 A7           	and a
 829  8B01 20 11        	jr nz,4F
 830  8B03
 831  8B03              ; Una alimaña menos!!!!!!!!!1
 832  8B03
 833  8B03 CD 57 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 834  8B06 21 11 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 835  8B09 35           	dec (hl)
 836  8B0A 21 12 89     	ld hl,Entidades_en_curso
 837  8B0D 35           	dec (hl)
 838  8B0E 21 10 89     	ld hl,Numero_de_entidades
 839  8B11 35           	dec (hl)
 840  8B12 18 32        	jr 3F
 841  8B14
 842  8B14              ; -----
 843  8B14
 844  8B14              ;	`Movemos´ la explosión.
 845  8B14
 846  8B14 2A D8 88     4 ld hl,(Puntero_DESPLZ_der)
 847  8B17 23           	inc hl
 848  8B18 23           	inc hl
 849  8B19 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 850  8B1C CD 8C 8C     	call Extrae_address
 851  8B1F 22 CE 88     	ld (Puntero_objeto),hl
 852  8B22
 853  8B22 21 06 89     	ld hl,Frames_explosion
 854  8B25 35           	dec (hl)
 855  8B26
 856  8B26              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 857  8B26 18 1E        	jr 3F
 858  8B28
 859  8B28 AF           2 xor a
 860  8B29 32 F4 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 861  8B2C
 862  8B2C              ; Movemos Entidades malignas.
 863  8B2C
 864  8B2C CD B0 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 865  8B2F
 866  8B2F 3A F4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 867  8B32 CB 67        	bit 4,a
 868  8B34 C8           	ret z
 869  8B35
 870  8B35              ; Ha habido desplazamiento de la entidad maligna.
 871  8B35              ; Ha llegado a zona de AMADEUS ???
 872  8B35
 873  8B35 3A D1 88     	ld a,(Coordenada_y)
 874  8B38 FE 14        	cp $14
 875  8B3A D4 DB 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 876  8B3D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 877  8B3D              ; ---------
 878  8B3D
 879  8B3D CD 72 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 880  8B40 CD D6 8D     	call Repone_datos_de_borrado
 881  8B43 CD 2E 8C     	call Limpia_Variables_de_borrado
 882  8B46
 883  8B46 C9           3 ret													; _de la misma.
 884  8B47
 885  8B47              ; --------------------------------------------------------------------------------------------------------------
 886  8B47              ;
 887  8B47              ;	29/1/23
 888  8B47
 889  8B47              Mov_Amadeus
 890  8B47
 891  8B47 CD 79 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 892  8B4A
 893  8B4A 3A F4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 894  8B4D CB 67        	bit 4,a
 895  8B4F C8           	ret z
 896  8B50
 897  8B50              ; ---------
 898  8B50
 899  8B50 CD 72 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 900  8B53 CD C6 8D     	call Repone_datos_de_borrado_Amadeus
 901  8B56 CD 2E 8C     	call Limpia_Variables_de_borrado
 902  8B59
 903  8B59 C9           	ret
 904  8B5A
 905  8B5A              ; -----------------------------------------------------------------------------------
 906  8B5A              ;
 907  8B5A              ;	01/11/23
 908  8B5A
 909  8B5A CD 92 8C     Inicia_entidad	call Inicia_Puntero_objeto
 910  8B5D CD 55 99     	call Recompone_posicion_inicio
 911  8B60 CD 34 93     	call Draw
 912  8B63 CD A0 7F     	call Guarda_foto_registros
 913  8B66 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 914  8B67              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 915  8B67 CD DA 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 916  8B6A C9           	ret
 917  8B6B
 918  8B6B              ; --------------------------------------------------------------------------------------------------------------
 919  8B6B              ;
 920  8B6B              ;	31/08/23
 921  8B6B              ;
 922  8B6B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 923  8B6B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 924  8B6B
 925  8B6B              Guarda_foto_entidad_a_pintar
 926  8B6B
 927  8B6B              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 928  8B6B
 929  8B6B CD 34 93     	call Draw
 930  8B6E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 931  8B71 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 932  8B72
 933  8B72              ; --------------------------------------------------------------------------------------------------------------
 934  8B72              ;
 935  8B72              ;	19/9/23
 936  8B72
 937  8B72 21 CA 88     Prepara_var_pintado ld hl,Filas
 938  8B75 11 EA 88     	ld de,Variables_de_pintado
 939  8B78 01 08 00     	ld bc,8
 940  8B7B ED B0        	ldir
 941  8B7D C9           	ret
 942  8B7E
 943  8B7E              ; --------------------------------------------------------------------------------------------------------------
 944  8B7E
 945  8B7E 21 EA 88     Repone_pintar ld hl,Variables_de_pintado
 946  8B81 11 CA 88     	ld de,Filas
 947  8B84 01 08 00     	ld bc,8
 948  8B87 ED B0        	ldir
 949  8B89 C9           	ret
 950  8B8A
 951  8B8A              ; *************************************************************************************************************************************************************
 952  8B8A              ;
 953  8B8A              ; 8/1/23
 954  8B8A              ;
 955  8B8A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 956  8B8A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 957  8B8A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 958  8B8A
 959  8B8A              ; Destruye HL y DE !!!!!
 960  8B8A
 961  8B8A              Inicia_punteros_de_cajas
 962  8B8A
 963  8B8A 21 8C 85     	ld hl,Indice_de_cajas
 964  8B8D CD 8C 8C         call Extrae_address
 965  8B90 22 0A 89         ld (Puntero_store_caja),hl
 966  8B93 21 8E 85     	ld hl,Indice_de_cajas+2
 967  8B96 22 0E 89     	ld (Indice_restore_caja),hl
 968  8B99 CD 8C 8C     	call Extrae_address
 969  8B9C 22 0C 89     	ld (Puntero_restore_caja),hl
 970  8B9F C9               ret
 971  8BA0
 972  8BA0              ; ---------------------------------------------------------------
 973  8BA0              ;
 974  8BA0              ;	9/8/23
 975  8BA0              ;
 976  8BA0              ;	Inicialización y gestión de álbumes de fotos y cajas.
 977  8BA0
 978  8BA0              Inicia_punteros_de_albumes_y_malotes
 979  8BA0
 980  8BA0 21 EC 84     	ld hl,Indice_album_de_fotos
 981  8BA3 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
 982  8BA6 CD 8C 8C     	call Extrae_address
 983  8BA9 22 1E 89     	ld (Stack_snapshot),hl
 984  8BAC
 985  8BAC 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 986  8BAF 22 36 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 987  8BB2 CD 8C 8C     	call Extrae_address
 988  8BB5 22 20 89     	ld (Stack_snapshot_disparos),hl
 989  8BB8
 990  8BB8 21 FC 84     	ld hl,Indice_End_Snapshot
 991  8BBB 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
 992  8BBE CD 8C 8C     	call Extrae_address
 993  8BC1 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
 994  8BC4
 995  8BC4 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 996  8BC7 22 3A 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 997  8BCA CD 8C 8C     	call Extrae_address
 998  8BCD 22 3E 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 999  8BD0
1000  8BD0 C9           	ret
1001  8BD1
1002  8BD1              ;	23/10/23
1003  8BD1
1004  8BD1              Avanza_puntero_de_album_de_fotos_de_entidades
1005  8BD1
1006  8BD1              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
1007  8BD1
1008  8BD1              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
1009  8BD1              ; Estamos en el último álbum del índice???.
1010  8BD1              ;
1011  8BD1 2A 34 89     	ld hl,(Puntero_indice_album_de_fotos)
1012  8BD4 01 F2 84     	ld bc,Indice_album_de_fotos+6
1013  8BD7 A7           	and a
1014  8BD8 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
1015  8BDA 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
1016  8BDC
1017  8BDC              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
1018  8BDC              ; Actualizamos (Semaforo).
1019  8BDC
1020  8BDC 21 40 89     	ld hl,Semaforo
1021  8BDF CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
1022  8BE1
1023  8BE1              ; Inicia con el buffer de video completo !!!
1024  8BE1
1025  8BE1 FB           	ei
1026  8BE2 76           	halt
1027  8BE3 C9           	ret
1028  8BE4
1029  8BE4 2A 34 89     1 ld hl,(Puntero_indice_album_de_fotos)
1030  8BE7 23           	inc hl
1031  8BE8 23           	inc hl
1032  8BE9 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
1033  8BEC CD 8C 8C     	call Extrae_address
1034  8BEF 22 1E 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1035  8BF2
1036  8BF2 2A 38 89     	ld hl,(Puntero_indice_End_Snapshot)
1037  8BF5 23           	inc hl
1038  8BF6 23           	inc hl
1039  8BF7 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
1040  8BFA CD 8C 8C     	call Extrae_address
1041  8BFD 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
1042  8C00
1043  8C00 21 40 89     	ld hl,Semaforo
1044  8C03 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1045  8C05
1046  8C05 C9           	ret
1047  8C06
1048  8C06              ; *************************************************************************************************************************************************************
1049  8C06              ;
1050  8C06              ; 8/1/23
1051  8C06              ;
1052  8C06              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1053  8C06
1054  8C06 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1055  8C09 22 43 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1056  8C0C C9           	ret
1057  8C0D 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1058  8C10 22 45 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1059  8C13 C9           	ret
1060  8C14
1061  8C14              ; -------------------------------------------------------------------------------------------------------------
1062  8C14              ;
1063  8C14              ; 21/9/23
1064  8C14              ;
1065  8C14
1066  8C14              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1067  8C14
1068  8C14              Limpia_album_Amadeus
1069  8C14
1070  8C14 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1071  8C17 7E           	ld a,(hl)
1072  8C18 A7           	and a
1073  8C19 C8           	ret z
1074  8C1A
1075  8C1A 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1076  8C1D 11 B1 72     	ld de,Album_de_fotos_Amadeus+1
1077  8C20 01 0B 00     	ld bc,11
1078  8C23 AF           	xor a
1079  8C24 77           	ld (hl),a
1080  8C25 ED B0        	ldir
1081  8C27
1082  8C27 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1083  8C2A 22 26 89     	ld (End_Snapshot_Amadeus),hl
1084  8C2D
1085  8C2D C9           	ret
1086  8C2E
1087  8C2E 21 E4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1088  8C31 11 E5 88     	ld de,Variables_de_borrado+1
1089  8C34 01 05 00     	ld bc,5
1090  8C37 AF           	xor a
1091  8C38 77           	ld (hl),a
1092  8C39 ED B0        	ldir
1093  8C3B C9           	ret
1094  8C3C
1095  8C3C              ; -------------------------------------------------------------------------------------------------------------
1096  8C3C              ;
1097  8C3C              ; 8/9/23
1098  8C3C              ;
1099  8C3C
1100  8C3C              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1101  8C3C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1102  8C3C
1103  8C3C              Calcula_numero_de_malotes
1104  8C3C
1105  8C3C 21 00 70     	ld hl,Album_de_fotos
1106  8C3F EB           	ex de,hl
1107  8C40 2A 22 89     	ld hl,(End_Snapshot)
1108  8C43
1109  8C43 7C           	ld a,h
1110  8C44 A7           	and a
1111  8C45 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1112  8C47
1113  8C47 06 00        4 ld b,0
1114  8C49 7D           	ld a,l
1115  8C4A 93           	sub e
1116  8C4B 28 07        	jr z,1F
1117  8C4D
1118  8C4D              ; Nº de malotes no es "0".
1119  8C4D
1120  8C4D D6 06        2 sub 6
1121  8C4F 04           	inc b
1122  8C50 A7           	and a
1123  8C51 20 FA        	jr nz,2B
1124  8C53 78           	ld a,b
1125  8C54
1126  8C54 32 13 89     1 ld (Numero_de_malotes),a
1127  8C57 C9           	ret
1128  8C58
1129  8C58              ; -------------------------------------------------------------------------------------------------------------
1130  8C58              ;
1131  8C58              ; 8/9/23
1132  8C58              ;
1133  8C58
1134  8C58              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1135  8C58              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1136  8C58
1137  8C58              Calcula_malotes_Amadeus
1138  8C58
1139  8C58 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1140  8C5B EB           	ex de,hl
1141  8C5C 2A 26 89     	ld hl,(End_Snapshot_Amadeus)
1142  8C5F
1143  8C5F 7C           	ld a,h
1144  8C60 A7           	and a
1145  8C61 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1146  8C63
1147  8C63 06 00        	ld b,0
1148  8C65 7D           	ld a,l
1149  8C66 93           	sub e
1150  8C67 28 07        	jr z,1F
1151  8C69
1152  8C69              ; Nº de malotes no es "0".
1153  8C69
1154  8C69 D6 06        2 sub 6
1155  8C6B 04           	inc b
1156  8C6C A7           	and a
1157  8C6D 20 FA        	jr nz,2B
1158  8C6F 78           	ld a,b
1159  8C70
1160  8C70 32 13 89     1 ld (Numero_de_malotes),a
1161  8C73 C9           	ret
1162  8C74
1163  8C74              ; -------------------------------------------------------------------------------------------------------------
1164  8C74              ;
1165  8C74              ; 28/2/23
1166  8C74              ;
1167  8C74
1168  8C74              Calcula_numero_de_disparotes
1169  8C74
1170  8C74 21 58 71     	ld hl,Album_de_fotos_disparos
1171  8C77 EB           	ex de,hl
1172  8C78 2A 3E 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1173  8C7B
1174  8C7B 06 00        	ld b,0
1175  8C7D 7D           	ld a,l
1176  8C7E 93           	sub e
1177  8C7F 28 07        	jr z,1F
1178  8C81
1179  8C81              ; Nº de malotes no es "0".
1180  8C81
1181  8C81 D6 06        2 sub 6
1182  8C83 04           	inc b
1183  8C84 A7           	and a
1184  8C85 20 FA        	jr nz,2B
1185  8C87 78           	ld a,b
1186  8C88
1187  8C88 32 42 89     1 ld (Numero_de_disparotes),a
1188  8C8B C9           	ret
1189  8C8C
1190  8C8C              ; *************************************************************************************************************************************************************
1191  8C8C              ;
1192  8C8C              ; 20/10/22
1193  8C8C              ;
1194  8C8C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1195  8C8C              ;
1196  8C8C              ; Destruye el puntero y DE !!!!!
1197  8C8C
1198  8C8C 5E           Extrae_address ld e,(hl)
1199  8C8D 23           	inc hl
1200  8C8E 56           	ld d,(hl)
1201  8C8F 2B           	dec hl
1202  8C90 EB           	ex de,hl
1203  8C91 C9           	ret
1204  8C92
1205  8C92              ; *************************************************************************************************************************************************************
1206  8C92              ;
1207  8C92              ;	7/2/23
1208  8C92              ;
1209  8C92              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1210  8C92              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1211  8C92              ;
1212  8C92              ;   Destruye HL y BC !!!!!,
1213  8C92              ;
1214  8C92              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1215  8C92              ;					"0" ..... Izquierda.
1216  8C92
1217  8C92              Inicia_Puntero_objeto
1218  8C92
1219  8C92 3A DE 88     	ld a,(Cuad_objeto)
1220  8C95 E6 01        	and 1
1221  8C97 F5           	push af
1222  8C98 CC B6 8C     	call z,Inicia_puntero_objeto_izq
1223  8C9B F1           	pop af
1224  8C9C 28 2B        	jr z,1F
1225  8C9E CD A3 8C     	call Inicia_puntero_objeto_der
1226  8CA1 18 26        	jr 1F
1227  8CA3
1228  8CA3              ; Arrancamos desde la parte izquierda de la pantalla.
1229  8CA3              ; Iniciamos (Indice_Sprite_der).
1230  8CA3
1231  8CA3 2A D4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1232  8CA6 22 D8 88     	ld (Puntero_DESPLZ_der),hl
1233  8CA9 CD 8C 8C     	call Extrae_address
1234  8CAC 22 CE 88     	ld (Puntero_objeto),hl
1235  8CAF
1236  8CAF 2A D6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1237  8CB2 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
1238  8CB5 C9           	ret
1239  8CB6
1240  8CB6              ; Arrancamos desde la parte derecha de la pantalla.
1241  8CB6              ; Iniciamos (Indice_Sprite_izq).
1242  8CB6
1243  8CB6 2A D6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1244  8CB9 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
1245  8CBC CD 8C 8C     	call Extrae_address
1246  8CBF 22 CE 88     	ld (Puntero_objeto),hl
1247  8CC2
1248  8CC2 2A D4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1249  8CC5 22 D8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1250  8CC8 C9           	ret
1251  8CC9
1252  8CC9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1253  8CC9
1254  8CC9 21 40 83     1 ld hl,Amadeus
1255  8CCC ED 4B CE 88  	ld bc,(Puntero_objeto)
1256  8CD0 B7 ED 42     	sub hl,bc
1257  8CD3 C0           	ret nz
1258  8CD4 21 F4 88     	ld hl,Ctrl_0
1259  8CD7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1260  8CD9 C9           	ret 												; _de nuestra nave en los extremos.
1261  8CDA
1262  8CDA              ; *************************************************************************************************************************************************************
1263  8CDA              ;
1264  8CDA              ;	14/5/23
1265  8CDA              ;
1266  8CDA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1267  8CDA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1268  8CDA
1269  8CDA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1270  8CDA              ;	_de la 2ª y 3ª entidad respectivamente.
1271  8CDA
1272  8CDA              Store_Restore_cajas
1273  8CDA
1274  8CDA E5           	push hl
1275  8CDB D5           	push de
1276  8CDC C5            	push bc
1277  8CDD
1278  8CDD              ;	STORE !!!!!
1279  8CDD              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1280  8CDD
1281  8CDD 21 CA 88     	ld hl,Filas
1282  8CE0 ED 5B 0A 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1283  8CE4 01 3D 00     	ld bc,61
1284  8CE7 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1285  8CE9
1286  8CE9              ; 	Entidad_sospechosa. 20/4/23
1287  8CE9
1288  8CE9 3A E3 88     	ld a,(Impacto)
1289  8CEC A7           	and a
1290  8CED 28 0C        	jr z,1F
1291  8CEF
1292  8CEF 2A 0A 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1293  8CF2 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1294  8CF5 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1295  8CF6 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1296  8CF8 22 48 89     	ld (Entidad_sospechosa_de_colision),hl
1297  8CFB
1298  8CFB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1299  8CFB
1300  8CFB 2A 0C 89     1 ld hl,(Puntero_restore_caja)
1301  8CFE 7E           	ld a,(hl)
1302  8CFF A7           	and a
1303  8D00 F5           	push af
1304  8D01 28 08        	jr z,2F
1305  8D03
1306  8D03 11 CA 88     	ld de,Filas
1307  8D06 01 3D 00     	ld bc,61
1308  8D09 ED B0        	ldir
1309  8D0B
1310  8D0B CD 27 8D     2 call Incrementa_punteros_de_cajas
1311  8D0E
1312  8D0E F1           	pop af
1313  8D0F 28 EA        	jr z,1B
1314  8D11
1315  8D11 C1           	pop bc
1316  8D12 D1           	pop de
1317  8D13 E1           	pop hl
1318  8D14
1319  8D14 C9           	ret
1320  8D15
1321  8D15              ; **************************************************************************************************
1322  8D15              ;
1323  8D15              ;	12/05/23
1324  8D15              ;
1325  8D15              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1326  8D15
1327  8D15 E5           Restore_entidad push hl
1328  8D16 D5           	push de
1329  8D17 C5            	push bc
1330  8D18
1331  8D18 2A 0A 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1332  8D1B 11 CA 88     	ld de,Filas
1333  8D1E 01 3D 00     	ld bc,61
1334  8D21 ED B0        	ldir
1335  8D23
1336  8D23 C1           	pop bc
1337  8D24 D1           	pop de
1338  8D25 E1           	pop hl
1339  8D26 C9           	ret
1340  8D27
1341  8D27              ; **************************************************************************************************
1342  8D27              ;
1343  8D27              ;	08/05/23
1344  8D27              ;
1345  8D27              ;	Incrementamos los dos punteros de entidades. (+1).
1346  8D27
1347  8D27              Incrementa_punteros_de_cajas
1348  8D27
1349  8D27 2A 0C 89     	ld hl,(Puntero_restore_caja)
1350  8D2A 22 0A 89     	ld (Puntero_store_caja),hl
1351  8D2D 2A 0E 89     	ld hl,(Indice_restore_caja)
1352  8D30 23           	inc hl
1353  8D31 23           	inc hl
1354  8D32 22 0E 89     	ld (Indice_restore_caja),hl
1355  8D35 CD 8C 8C         call Extrae_address
1356  8D38 22 0C 89         ld (Puntero_restore_caja),hl
1357  8D3B C9               ret
1358  8D3C
1359  8D3C              ; **************************************************************************************************
1360  8D3C              ;
1361  8D3C              ;	25/01/23
1362  8D3C              ;
1363  8D3C              ;	Restore_Amadeus
1364  8D3C              ;
1365  8D3C              ;	Cargamos en DRAW los parámetros de Amadeus.
1366  8D3C              ;
1367  8D3C
1368  8D3C E5           Restore_Amadeus	push hl
1369  8D3D D5           	push de
1370  8D3E C5            	push bc
1371  8D3F 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1372  8D42 11 CA 88     	ld de,Filas
1373  8D45 01 3D 00     	ld bc,61
1374  8D48 ED B0        	ldir
1375  8D4A C1           	pop bc
1376  8D4B D1           	pop de
1377  8D4C E1           	pop hl
1378  8D4D C9           	ret
1379  8D4E
1380  8D4E              ; *************************************************************************************************************************************************************
1381  8D4E              ;
1382  8D4E              ;	29/04/23
1383  8D4E              ;
1384  8D4E              ;	Store_Amadeus
1385  8D4E              ;
1386  8D4E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1387  8D4E              ;
1388  8D4E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1389  8D4E              ;
1390  8D4E              ;	DESTRUYE: HL y BC y DE.
1391  8D4E
1392  8D4E 21 CA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1393  8D51 01 3D 00     	ld bc,61
1394  8D54 ED B0        	ldir
1395  8D56 C9           	ret
1396  8D57
1397  8D57              ; -----------------------------------------------------------
1398  8D57              ;
1399  8D57              ;	27/04/23
1400  8D57              ;
1401  8D57              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1402  8D57              ;
1403  8D57              ;	Destruye: HL,BC,DE,A
1404  8D57
1405  8D57 21 CA 88     Borra_datos_entidad ld hl,Filas
1406  8D5A 01 3C 00     	ld bc,60
1407  8D5D AF           	xor a
1408  8D5E 77           	ld (hl),a
1409  8D5F 11 CB 88     	ld de,Filas+1
1410  8D62 ED B0        	ldir
1411  8D64 C9           	ret
1412  8D65
1413  8D65              ; -----------------------------------------------------------
1414  8D65
1415  8D65              ; Teclado.
1416  8D65
1417  8D65 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1418  8D67 DB FE        	in a,($fe)
1419  8D69 E6 01        	and $01
1420  8D6B 28 02        	jr z,1f
1421  8D6D 18 F6        	jr Pulsa_ENTER
1422  8D6F C9           1 ret
1423  8D70
1424  8D70              ; **************************************************************************************************
1425  8D70              ;
1426  8D70              ; Temporización.
1427  8D70
1428  8D70              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1429  8D70              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1430  8D70              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1431  8D70              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1432  8D70
1433  8D70              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1434  8D70              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1435  8D70              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1436  8D70
1437  8D70              ; A partir de $4f61 no hace falta DELAY.
1438  8D70
1439  8D70              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1440  8D70
1441  8D70 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1442  8D73 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1443  8D74 78           	LD A,B
1444  8D75 A7           	AND A
1445  8D76 20 FB        	JR NZ,wait
1446  8D78 C9           	RET
1447  8D79
1448  8D79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1449  8D79              ;
1450  8D79              ;	5/3/23
1451  8D79              ;
1452  8D79              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1453  8D79
1454  8D79              Movimiento_Amadeus
1455  8D79
1456  8D79              ; Disparo.
1457  8D79
1458  8D79 3A 5A 89     	ld a,(Disparo_Amadeus)
1459  8D7C A7           	and a
1460  8D7D 20 02        	jr nz,1F
1461  8D7F 18 15        	jr 2F
1462  8D81
1463  8D81 3E F7        1 ld a,$f7													; "5" para disparar.
1464  8D83 DB FE        	in a,($fe)
1465  8D85 E6 10        	and $10
1466  8D87
1467  8D87 F5           	push af
1468  8D88 CC 3E 8E     	call z,Genera_disparo
1469  8D8B F1           	pop af
1470  8D8C 20 08        	jr nz,2F
1471  8D8E
1472  8D8E 3A 5A 89     	ld a,(Disparo_Amadeus)
1473  8D91 EE 01        	xor 1
1474  8D93 32 5A 89     	ld (Disparo_Amadeus),a
1475  8D96
1476  8D96 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1477  8D98 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1478  8D9A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1479  8D9C CC 0F 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1480  8D9F
1481  8D9F 3E F7        	ld a,$f7
1482  8DA1 DB FE        	in a,($fe)
1483  8DA3 E6 01        	and $01
1484  8DA5 C8           	ret z
1485  8DA6
1486  8DA6 3E F7        	ld a,$f7
1487  8DA8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1488  8DAA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1489  8DAC CC F1 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1490  8DAF C9           	ret
1491  8DB0
1492  8DB0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1493  8DB0              ;
1494  8DB0              ;	Rutina provisional para que los malotes cagen balas.
1495  8DB0
1496  8DB0              Detecta_disparo_entidad
1497  8DB0
1498  8DB0 3A 5D 89     	ld a,(Disparo_entidad)
1499  8DB3 A7           	and a
1500  8DB4 C8           	ret z
1501  8DB5
1502  8DB5              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1503  8DB5
1504  8DB5              ;	ld a,$7f				; Detecta SPACE.
1505  8DB5              ;	in a,($fe)
1506  8DB5              ;	and 1
1507  8DB5              ;	ret nz
1508  8DB5
1509  8DB5              ;	call Genera_disparo
1510  8DB5 C9           	ret
1511  8DB6
1512  8DB6              ; ----------------------------------------------------------------------
1513  8DB6              ;
1514  8DB6              ;	8/9/23
1515  8DB6
1516  8DB6 2A 26 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1517  8DB9 2B            	dec hl
1518  8DBA 7E           	ld a,(hl)
1519  8DBB A7           	and a
1520  8DBC C8           	ret z										; Salimos si es álbum está vacío.
1521  8DBD
1522  8DBD 11 E9 88     	ld de,Variables_de_borrado+5
1523  8DC0 01 06 00     	ld bc,6
1524  8DC3 ED B8        	lddr
1525  8DC5 C9           	ret
1526  8DC6
1527  8DC6              ; ----------------------------------------------------------------------
1528  8DC6              ;
1529  8DC6              ;	9/9/23
1530  8DC6
1531  8DC6              Repone_datos_de_borrado_Amadeus
1532  8DC6
1533  8DC6 21 E4 88     	ld hl,Variables_de_borrado
1534  8DC9 11 B0 72     	ld de,Album_de_fotos_Amadeus
1535  8DCC 01 06 00     	ld bc,6
1536  8DCF ED B0        	ldir
1537  8DD1
1538  8DD1 EB           	ex de,hl
1539  8DD2 22 26 89     	ld (End_Snapshot_Amadeus),hl
1540  8DD5
1541  8DD5 C9           	ret
1542  8DD6
1543  8DD6              ; ----------------------------------------------------------------------
1544  8DD6              ;
1545  8DD6              ;	27/10/23
1546  8DD6              ;
1547  8DD6
1548  8DD6              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1549  8DD6              ;	_ Album_de_fotos correspondiente.
1550  8DD6
1551  8DD6              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1552  8DD6              ;	_ durante el proceso de escritura.
1553  8DD6
1554  8DD6              Repone_datos_de_borrado
1555  8DD6
1556  8DD6 F3           	di
1557  8DD7
1558  8DD7 ED 5B 1E 89  	ld de,(Stack_snapshot)
1559  8DDB 21 E4 88     	ld hl,Variables_de_borrado
1560  8DDE 01 06 00     	ld bc,6
1561  8DE1 ED B0        	ldir
1562  8DE3 FB           	ei
1563  8DE4
1564  8DE4 EB           	ex de,hl
1565  8DE5 22 1E 89     	ld (Stack_snapshot),hl
1566  8DE8
1567  8DE8 C9           	ret
1568  8DE9
1569  8DE9              ; ----------------------------------------------------------------------
1570  8DE9              ;
1571  8DE9              ;	11/8/23
1572  8DE9
1573  8DE9              Gestiona_entidades
1574  8DE9
1575  8DE9              ;	call Extrae_foto_disparos
1576  8DE9              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1577  8DE9
1578  8DE9 CD FB 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1579  8DEC
1580  8DEC              ;	BUFFER vacío ??????
1581  8DEC              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1582  8DEC
1583  8DEC 3A 41 89     	ld a,(Ctrl_Semaforo)
1584  8DEF CB 67        	bit 4,a
1585  8DF1 28 05        	jr z,1F
1586  8DF3
1587  8DF3              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1588  8DF3
1589  8DF3 AF           	xor a
1590  8DF4 32 41 89     	ld (Ctrl_Semaforo),a
1591  8DF7 C9           	ret
1592  8DF8
1593  8DF8 CB 47        1 bit 0,a
1594  8DFA C0           	ret nz
1595  8DFB
1596  8DFB              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1597  8DFB              ; Nos situamos al comienzo del último álbum.
1598  8DFB
1599  8DFB CD 55 73     	call Modifica_Stack_snapshot
1600  8DFE
1601  8DFE C9           	ret
1602  8DFF
1603  8DFF              ; -----------------------------------------------------------------------------------
1604  8DFF
1605  8DFF              Pinta_Amadeus
1606  8DFF
1607  8DFF 3E 06        	ld a,6
1608  8E01 D3 FE            out ($fe),a										; Amarillo
1609  8E03
1610  8E03 CD 58 8C        	call Calcula_malotes_Amadeus
1611  8E06 CD C4 96     	call Extrae_foto_Amadeus
1612  8E09 CD 14 8C     	call Limpia_album_Amadeus
1613  8E0C
1614  8E0C C9           	ret
1615  8E0D
1616  8E0D              Pinta_entidades
1617  8E0D
1618  8E0D 3A 40 89     	ld a,(Semaforo)
1619  8E10 CB 47        	bit 0,a
1620  8E12 C8           	ret z
1621  8E13
1622  8E13              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1623  8E13
1624  8E13 CD 3C 8C     	call Calcula_numero_de_malotes
1625  8E16 CD 42 96     	call Extrae_foto_entidades
1626  8E19
1627  8E19 C9           	ret
1628  8E1A
1629  8E1A              ; -----------------------------------------------------------------------------------
1630  8E1A              ;
1631  8E1A              ;	12/11/23
1632  8E1A              ;
1633  8E1A              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1634  8E1A
1635  8E1A              Actualiza_relojes
1636  8E1A
1637  8E1A 21 55 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1638  8E1D 34           	inc (hl)
1639  8E1E
1640  8E1E 34           	inc (hl)
1641  8E1F 35           	dec (hl)
1642  8E20 C0           	ret nz
1643  8E21
1644  8E21 21 56 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1645  8E24 34           	inc (hl)
1646  8E25 C9           	ret
1647  8E26
1648  8E26              ; ---------------------------------------------------------------
1649  8E26              ;
1650  8E26              ;	27/9/23
1651  8E26
1652  8E26              Guarda_parametros_DRAW
1653  8E26
1654  8E26 21 CA 88     	ld hl,Filas
1655  8E29 11 BD 72     	ld de,Almacen_de_parametros_DRAW
1656  8E2C 01 3D 00     	ld bc,61
1657  8E2F ED B0        	ldir
1658  8E31 C9           	ret
1659  8E32
1660  8E32              Recupera_parametros_DRAW
1661  8E32
1662  8E32 21 BD 72     	ld hl,Almacen_de_parametros_DRAW
1663  8E35 11 CA 88     	ld de,Filas
1664  8E38 01 3D 00     	ld bc,61
1665  8E3B ED B0        	ldir
1666  8E3D C9           	ret
1667  8E3E
1668  8E3E              ; ---------------------------------------------------------------
1669  8E3E
1670  8E3E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E3E              ; ******************************************************************************************************************************************************************************************
   2+ 8E3E              ;
   3+ 8E3E              ;   21/07/23
   4+ 8E3E              ;
   5+ 8E3E              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E3E              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E3E              ;
   8+ 8E3E              ;
   9+ 8E3E              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E3E              ;
  11+ 8E3E              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E3E              ;               _ hacen las entidades hacia abajo.
  13+ 8E3E              ;
  14+ 8E3E              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E3E              ;
  16+ 8E3E              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E3E              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E3E              ;
  19+ 8E3E              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E3E              ;           _ la bala.
  21+ 8E3E              ;
  22+ 8E3E              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E3E              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E3E              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E3E              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E3E              ;           _ en el momento de generarse la bala)).
  27+ 8E3E
  28+ 8E3E              Genera_disparo
  29+ 8E3E
  30+ 8E3E              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E3E              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E3E              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E3E              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E3E              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E3E              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E3E              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E3E
  38+ 8E3E              ; Exclusiones:
  39+ 8E3E
  40+ 8E3E 3A E2 88         ld a,(Vel_down)
  41+ 8E41 47               ld b,a
  42+ 8E42 3A 54 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E45 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E46 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E47 3A 01 89         ld a,(Columnas)
  46+ 8E4A 47               ld b,a
  47+ 8E4B 3A CB 88         ld a,(Columns)
  48+ 8E4E B8               cp b
  49+ 8E4F C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E50
  51+ 8E50              ; ----- ----- -----
  52+ 8E50
  53+ 8E50 3A F4 88         ld a,(Ctrl_0)
  54+ 8E53 CB 77            bit 6,a
  55+ 8E55 20 06            jr nz,14F
  56+ 8E57
  57+ 8E57 3A D1 88         ld a,(Coordenada_y)
  58+ 8E5A FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E5C D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E5D
  61+ 8E5D 21 00 80     14 ld hl,Indice_disparo
  62+ 8E60 3A D2 88         ld a,(CTRL_DESPLZ)
  63+ 8E63 4F               ld c,a
  64+ 8E64 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E66              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E66              ;                                            ""        ""       "f9", B="1"
  67+ 8E66              ;                                            ""        ""       "fb", B="2"
  68+ 8E66              ;                                            ""        ""       "fb", B="3"
  69+ 8E66 A7               and a
  70+ 8E67 28 10            jr z,1F
  71+ 8E69 E6 01            and 1
  72+ 8E6B C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E6C
  74+ 8E6C 79               ld a,c
  75+ 8E6D 16 F9            ld d,$f9
  76+ 8E6F 23           2 inc hl
  77+ 8E70 23               inc hl
  78+ 8E71 04               inc b
  79+ 8E72 BA               cp d
  80+ 8E73 28 04            jr z,1F
  81+ 8E75 14               inc d
  82+ 8E76 14               inc d
  83+ 8E77 18 F6            jr 2B
  84+ 8E79
  85+ 8E79 CD 8C 8C     1 call Extrae_address
  86+ 8E7C E5               push hl
  87+ 8E7D FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E7F DD 21 0A 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E83
  90+ 8E83              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E83              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E83
  93+ 8E83 3A F4 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E86 CB 77            bit 6,a
  95+ 8E88 20 04            jr nz,19F
  96+ 8E8A
  97+ 8E8A AF               xor a
  98+ 8E8B 32 5D 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E8E
 100+ 8E8E 3A DE 88     19 ld a,(Cuad_objeto)
 101+ 8E91 FE 02            cp 2
 102+ 8E93 38 66            jr c,3F
 103+ 8E95 28 64            jr z,3F
 104+ 8E97
 105+ 8E97              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E97
 107+ 8E97 E6 01            and 1
 108+ 8E99 28 30            jr z,4F
 109+ 8E9B
 110+ 8E9B              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E9B              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E9B              ;
 113+ 8E9B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E9B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E9B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E9B
 117+ 8E9B 2A CC 88     	ld hl,(Posicion_actual)
 118+ 8E9E
 119+ 8E9E              ;   Amadeus o entidad ???.
 120+ 8E9E
 121+ 8E9E 3A F4 88         ld a,(Ctrl_0)
 122+ 8EA1 CB 77            bit 6,a
 123+ 8EA3 28 0A            jr z,8F
 124+ 8EA5
 125+ 8EA5              ; 	Dispara Amadeus.
 126+ 8EA5
 127+ 8EA5 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EA7 CD 33 96         call PreviousScan
 129+ 8EAA CD 33 96         call PreviousScan
 130+ 8EAD
 131+ 8EAD              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EAD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EAD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EAD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EAD
 136+ 8EAD 18 11            jr 10F
 137+ 8EAF
 138+ 8EAF              ; 	Dispara Entidad.
 139+ 8EAF
 140+ 8EAF 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EB2              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EB2
 143+ 8EB2              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EB2              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EB2
 146+ 8EB2 C5               push bc
 147+ 8EB3 06 10            ld b,16
 148+ 8EB5 CD 24 96     9 call NextScan
 149+ 8EB8 10 FB            djnz 9B
 150+ 8EBA C1               pop bc
 151+ 8EBB CD 25 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EBE 18 06            jr 17F
 153+ 8EC0
 154+ 8EC0              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EC0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EC0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EC0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EC0
 159+ 8EC0 CD 25 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EC3 CD 9A 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EC6              ;                                                      ; _al generar el disparo.
 162+ 8EC6
 163+ 8EC6              ; 	LLegados a este punto tendremos:
 164+ 8EC6              ;
 165+ 8EC6              ;       Puntero_objeto_disparo en IY.
 166+ 8EC6              ;       Rutinas_de_impresion en IX.
 167+ 8EC6              ;       Puntero_de_impresion en HL.
 168+ 8EC6              ;       Impacto/Dirección en BC.
 169+ 8EC6
 170+ 8EC6 CD 2D 8F     17 call Almacena_disparo
 171+ 8EC9 18 52            jr 6F                                             ; RET.
 172+ 8ECB
 173+ 8ECB              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8ECB              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8ECB              ;
 176+ 8ECB              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8ECB              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8ECB              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8ECB
 180+ 8ECB 2A CC 88     4 ld hl,(Posicion_actual)
 181+ 8ECE
 182+ 8ECE              ;   Amadeus o entidad ???.
 183+ 8ECE
 184+ 8ECE 3A F4 88         ld a,(Ctrl_0)
 185+ 8ED1 CB 77            bit 6,a
 186+ 8ED3 28 0A            jr z,11F
 187+ 8ED5
 188+ 8ED5              ; 	Dispara Amadeus.
 189+ 8ED5
 190+ 8ED5 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ED7 CD 33 96         call PreviousScan
 192+ 8EDA CD 33 96         call PreviousScan
 193+ 8EDD
 194+ 8EDD              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EDD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EDD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EDD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EDD
 199+ 8EDD 18 11            jr 13F
 200+ 8EDF
 201+ 8EDF              ; 	Dispara Entidad.
 202+ 8EDF
 203+ 8EDF 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EE2              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EE2
 206+ 8EE2              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EE2              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EE2
 209+ 8EE2 C5               push bc
 210+ 8EE3 06 10            ld b,16
 211+ 8EE5 CD 24 96     12 call NextScan
 212+ 8EE8 10 FB            djnz 12B
 213+ 8EEA C1               pop bc
 214+ 8EEB
 215+ 8EEB CD 1E 8F         call Ajusta_disparo_parte_derecha
 216+ 8EEE 18 06            jr 18F
 217+ 8EF0
 218+ 8EF0              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EF0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EF0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EF0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EF0
 223+ 8EF0 CD 1E 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EF3 CD 9A 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EF6              ;                                                       ; _al generar el disparo.
 226+ 8EF6
 227+ 8EF6              ; LLegados a este punto tendremos:
 228+ 8EF6              ;
 229+ 8EF6              ;       Puntero_objeto_disparo en IY.
 230+ 8EF6              ;       Rutinas_de_impresion en IX.
 231+ 8EF6              ;       Puntero_de_impresion en HL.
 232+ 8EF6              ;       Impacto/Dirección en BC.
 233+ 8EF6
 234+ 8EF6 CD 2D 8F     18 call Almacena_disparo
 235+ 8EF9 18 22            jr 6F                                               ; RET.
 236+ 8EFB
 237+ 8EFB              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EFB
 239+ 8EFB 28 11        3 jr z,5F
 240+ 8EFD
 241+ 8EFD              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EFD              ;
 243+ 8EFD              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EFD              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EFD              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EFD              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EFD
 248+ 8EFD              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EFD              ;	   ""        ""       "f9", B="1"
 250+ 8EFD              ;	   ""        ""       "fb", B="2"
 251+ 8EFD              ; 	   ""        ""       "fb", B="3"
 252+ 8EFD
 253+ 8EFD 2A CC 88     	ld hl,(Posicion_actual)
 254+ 8F00 CD 24 96     	call NextScan
 255+ 8F03
 256+ 8F03              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F03              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F03              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F03              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F03
 261+ 8F03 CD 25 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F06
 263+ 8F06              ; 	No se produce impacto. B="$80"
 264+ 8F06              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F06
 266+ 8F06 01 80 80         ld bc,$8080
 267+ 8F09
 268+ 8F09              ; 	LLegados a este punto tendremos:
 269+ 8F09              ;
 270+ 8F09              ;       Puntero_objeto_disparo en IY.
 271+ 8F09              ;       Rutinas_de_impresion en IX.
 272+ 8F09              ;       Puntero_de_impresion en HL.
 273+ 8F09              ;       Impacto/Dirección en BC.
 274+ 8F09
 275+ 8F09 CD 2D 8F         call Almacena_disparo
 276+ 8F0C 18 0F            jr 6F                                           ; RET.
 277+ 8F0E
 278+ 8F0E              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F0E              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F0E              ;
 281+ 8F0E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F0E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F0E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F0E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F0E
 286+ 8F0E 2A CC 88     5 ld hl,(Posicion_actual)
 287+ 8F11 CD 24 96     	call NextScan
 288+ 8F14
 289+ 8F14              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F14              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F14              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F14              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F14
 294+ 8F14 CD 1E 8F         call Ajusta_disparo_parte_derecha
 295+ 8F17
 296+ 8F17              ; 	No se produce impacto. B="$80"
 297+ 8F17              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F17
 299+ 8F17 01 80 80     15 ld bc,$8080
 300+ 8F1A
 301+ 8F1A              ; 	LLegados a este punto tendremos:
 302+ 8F1A              ;
 303+ 8F1A              ;       Puntero_objeto_disparo en IY.
 304+ 8F1A              ;       Rutinas_de_impresion en IX.
 305+ 8F1A              ;       Puntero_de_impresion en HL.
 306+ 8F1A              ;       Impacto/Dirección en BC.
 307+ 8F1A
 308+ 8F1A CD 2D 8F         call Almacena_disparo
 309+ 8F1D
 310+ 8F1D C9           6 ret
 311+ 8F1E
 312+ 8F1E              ; ----------------------------------------------------------------
 313+ 8F1E              ;
 314+ 8F1E              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F1E              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F1E              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F1E
 318+ 8F1E 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F1F FE 02            cp 2
 320+ 8F21 38 01            jr c,1F
 321+ 8F23 23               inc hl
 322+ 8F24 C9           1 ret
 323+ 8F25
 324+ 8F25 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F26 FE 01        	cp 1
 326+ 8F28 20 01        	jr nz,1F
 327+ 8F2A 2B           	dec hl
 328+ 8F2B 2B           1 dec hl
 329+ 8F2C C9               ret
 330+ 8F2D
 331+ 8F2D              ; ----------------------------------------------------------------
 332+ 8F2D              ;
 333+ 8F2D              ;   25/02/23
 334+ 8F2D              ;
 335+ 8F2D              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F2D              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F2D              ;
 338+ 8F2D              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F2D              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F2D
 341+ 8F2D              Almacena_disparo
 342+ 8F2D
 343+ 8F2D E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F2E F1               pop af
 345+ 8F2F 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F30
 347+ 8F30 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F31 E6 01            and 1
 349+ 8F33 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F35              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F35              ; 	Dispara AMADEUS.
 352+ 8F35
 353+ 8F35              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F35              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F35              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F35              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F35
 358+ 8F35 C5               push bc
 359+ 8F36 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F39 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F3C A7               and a
 362+ 8F3D ED 42            sbc hl,bc
 363+ 8F3F CC 0D 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F42 C1               pop bc
 365+ 8F43 28 54            jr z,4F
 366+ 8F45
 367+ 8F45 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F48 23               inc hl
 369+ 8F49 23               inc hl
 370+ 8F4A 22 45 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F4D              ;                                                   ; _ Disparo_(+1).
 372+ 8F4D 18 18            jr 2F
 373+ 8F4F
 374+ 8F4F              ; Dispara una entidad.
 375+ 8F4F
 376+ 8F4F C5           1 push bc
 377+ 8F50 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F53 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F56 A7               and a
 380+ 8F57 ED 42            sbc hl,bc
 381+ 8F59 CC 06 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F5C C1               pop bc
 383+ 8F5D 28 3A            jr z,4F
 384+ 8F5F
 385+ 8F5F 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F62 23               inc hl
 387+ 8F63 23               inc hl
 388+ 8F64 22 43 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F67              ;                                                   ; _ Disparo_(+1).
 390+ 8F67 CD 8C 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F6A              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F6A              ;
 393+ 8F6A              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F6A              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F6A              ;                                                     Puntero_de_impresion en HL.
 396+ 8F6A              ;                                                     Impacto/Dirección en BC.
 397+ 8F6A
 398+ 8F6A 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F6B 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F6C 23               inc hl                                          ; _ al siguiente.
 401+ 8F6D A7               and a
 402+ 8F6E 20 C0            jr nz,3B
 403+ 8F70
 404+ 8F70 08               ex af,af
 405+ 8F71 ED 73 18 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F75 F9               ld sp,hl
 407+ 8F76
 408+ 8F76 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F78 F5               push af                                         ; Puntero de impresión.
 410+ 8F79 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F7B C5               push bc                                         ; Control.
 412+ 8F7C
 413+ 8F7C ED 7B 18 89      ld sp,(Stack)
 414+ 8F80
 415+ 8F80              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F80
 417+ 8F80 21 07 89     	ld hl,Ctrl_1
 418+ 8F83 CB C6        	set 0,(hl)
 419+ 8F85
 420+ 8F85 DD E5        	push ix
 421+ 8F87 E1               pop hl
 422+ 8F88 F5               push af
 423+ 8F89 DD E1            pop ix
 424+ 8F8B
 425+ 8F8B CD A0 7F     	call Guarda_foto_registros
 426+ 8F8E
 427+ 8F8E 21 07 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F91 CB 86        	res 0,(hl)
 429+ 8F93
 430+ 8F93              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F93              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F93
 433+ 8F93 CD 0D 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F96 CD 06 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8F99
 436+ 8F99 C9           4 ret
 437+ 8F9A
 438+ 8F9A              ; ----------------------------------------------------------------
 439+ 8F9A              ;
 440+ 8F9A              ;   4/3/23
 441+ 8F9A              ;
 442+ 8F9A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F9A              ;   _ al generarse el disparo.
 444+ 8F9A              ;
 445+ 8F9A              ;       "$80" ..... No se produce colisión.
 446+ 8F9A              ;       "$81" ..... Se produce colisión.
 447+ 8F9A              ;
 448+ 8F9A              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F9A              ;         _ que forman el disparo.
 450+ 8F9A
 451+ 8F9A
 452+ 8F9A              Comprueba_Colision
 453+ 8F9A
 454+ 8F9A              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F9A
 456+ 8F9A FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F9C E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F9D
 459+ 8F9D CD D3 8F         call Modifica_H_Velocidad_disparo
 460+ 8FA0
 461+ 8FA0 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FA1 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FA3 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FA5
 465+ 8FA5 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FA7 CD C3 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FAA
 468+ 8FAA 7B               ld a,e
 469+ 8FAB E6 01            and 1
 470+ 8FAD 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FAF              ;                                                  ; _ para activar IMPACTO.
 472+ 8FAF E1               pop hl
 473+ 8FB0 E5               push hl
 474+ 8FB1 CD 24 96         call NextScan
 475+ 8FB4
 476+ 8FB4 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FB5 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FB7 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FB9              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FB9 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FBB CD C3 8F         call Bucle_2
 482+ 8FBE
 483+ 8FBE 43           1 ld b,e
 484+ 8FBF E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FC0 FD E1            pop iy
 486+ 8FC2 C9               ret
 487+ 8FC3
 488+ 8FC3              ; ---------- ----------
 489+ 8FC3
 490+ 8FC3 06 02        Bucle_2 ld b,2
 491+ 8FC5 FD 7E 00     2 ld a,(iy)
 492+ 8FC8 A6               and (hl)
 493+ 8FC9 28 02            jr z,1F
 494+ 8FCB 1E 81            ld e,$81
 495+ 8FCD 23           1 inc hl
 496+ 8FCE FD 23            inc iy
 497+ 8FD0 10 F3            djnz 2B
 498+ 8FD2 C9               ret
 499+ 8FD3
 500+ 8FD3              ; ---------- ----------
 501+ 8FD3              ;
 502+ 8FD3              ;   21/7/23
 503+ 8FD3
 504+ 8FD3              Modifica_H_Velocidad_disparo
 505+ 8FD3
 506+ 8FD3 3A 54 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FD6 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FD8 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FD9 24               inc h
 510+ 8FDA
 511+ 8FDA C9               ret
 512+ 8FDB
 513+ 8FDB              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FDB              ;
 515+ 8FDB              ;   11/04/23
 516+ 8FDB              ;
 517+ 8FDB              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FDB              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FDB              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FDB              ;
 521+ 8FDB              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FDB
 523+ 8FDB              Compara_coordenadas_X
 524+ 8FDB
 525+ 8FDB              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FDB              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FDB
 528+ 8FDB              ; Preparamos registros:
 529+ 8FDB
 530+ 8FDB 21 D0 88         ld hl,Filas+6
 531+ 8FDE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FDF 23               inc hl
 533+ 8FE0 23               inc hl
 534+ 8FE1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FE2 43               ld b,e
 536+ 8FE3
 537+ 8FE3 21 DE 88         ld hl,Filas+20
 538+ 8FE6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FE7 21 4F 89         ld hl,Coordenadas_X_Entidad
 540+ 8FEA CD 06 92         call Guarda_coordenadas_X
 541+ 8FED
 542+ 8FED              ; Preparamos registros:
 543+ 8FED
 544+ 8FED 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FF0 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FF1 23               inc hl
 547+ 8FF2 23               inc hl
 548+ 8FF3 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FF4 7B               ld a,e
 550+ 8FF5 08               ex af,af'
 551+ 8FF6 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FF9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FFA 21 4C 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FFD CD 06 92         call Guarda_coordenadas_X
 555+ 9000
 556+ 9000              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9000              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9000
 559+ 9000 04               inc b
 560+ 9001 05               dec b
 561+ 9002 28 04            jr z,1F
 562+ 9004 06 03            ld b,3
 563+ 9006 18 02            jr 2F
 564+ 9008 06 02        1 ld b,2
 565+ 900A 08           2 ex af,af'
 566+ 900B 3C               inc a
 567+ 900C 3D               dec a
 568+ 900D 28 04            jr z,5F
 569+ 900F 0E 03            ld c,3
 570+ 9011 18 02            jr 6F
 571+ 9013 0E 02        5 ld c,2
 572+ 9015 79           6 ld a,c
 573+ 9016 08               ex af,af'
 574+ 9017 11 4F 89         ld de,Coordenadas_X_Entidad
 575+ 901A 1A           4 ld a,(de)
 576+ 901B 21 4C 89         ld hl,Coordenadas_X_Amadeus
 577+ 901E BE           3 cp (hl)
 578+ 901F 28 0E            jr z,7F
 579+ 9021 23               inc hl
 580+ 9022 0D               dec c
 581+ 9023 20 F9            jr nz,3B
 582+ 9025 13               inc de
 583+ 9026 08               ex af,af'
 584+ 9027 4F               ld c,a
 585+ 9028 08               ex af,af'
 586+ 9029 10 EF            djnz 4B
 587+ 902B
 588+ 902B              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 902B
 590+ 902B CD 42 92     8 call Limpia_Coordenadas_X
 591+ 902E C9               ret
 592+ 902F
 593+ 902F 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9031 32 E3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9034 21 47 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9037 CB D6            set 2,(hl)
 597+ 9039 18 F0            jr 8B
 598+ 903B
 599+ 903B              ; -----------------------------------------------------------------------
 600+ 903B              ;
 601+ 903B              ;   17/04/23
 602+ 903B              ;
 603+ 903B
 604+ 903B              Detecta_colision_nave_entidad
 605+ 903B
 606+ 903B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 903B
 608+ 903B 2A CC 88         ld hl,(Posicion_actual)
 609+ 903E CD 7F 95         call Calcula_puntero_de_impresion
 610+ 9041
 611+ 9041              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9041              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9041
 614+ 9041 DD E5            push ix
 615+ 9043 E1               pop hl
 616+ 9044 E5               push hl
 617+ 9045
 618+ 9045              ; ----- ----- -----
 619+ 9045 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9047 06 0A            ld b,10
 621+ 9049 CD 79 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 904C 7B               ld a,e
 623+ 904D FE 05            cp 5
 624+ 904F 38 0E            jr c,3F
 625+ 9051
 626+ 9051              ; LLegados a este punto:
 627+ 9051              ;
 628+ 9051              ;   HAY COLISIÓN !!!!!.
 629+ 9051              ;
 630+ 9051              ;   .db (Impacto) de Amadeus a "1".
 631+ 9051              ;   SET el bit3 de (Impacto2).
 632+ 9051              ;
 633+ 9051              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9051
 635+ 9051 21 B7 85         ld hl,Amadeus_db+25
 636+ 9054 36 01            ld (hl),1
 637+ 9056 21 47 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9059 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 905B CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 905D 18 18            jr 1F
 641+ 905F
 642+ 905F              ; -----
 643+ 905F
 644+ 905F E1           3 pop hl
 645+ 9060 CD 24 96         call NextScan
 646+ 9063 E5               push hl
 647+ 9064 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9065 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9067 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9069 30 0C            jr nc,1F
 651+ 906B              ;                                                  ; _ 2º scanline si esto es así.
 652+ 906B 10 DC            djnz 2B
 653+ 906D
 654+ 906D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 906D
 656+ 906D              ; LLegados a este punto:
 657+ 906D              ;
 658+ 906D              ;   NO HAY COLISIÓN !!!!!.
 659+ 906D              ;
 660+ 906D              ;   .db (Impacto) de Amadeus a "0".
 661+ 906D              ;   RES el bit2 de (Impacto2).
 662+ 906D              ;
 663+ 906D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 906D              ;   Lo colocamos a "0".
 665+ 906D
 666+ 906D 21 47 89         ld hl,Impacto2
 667+ 9070 CB 96            res 2,(hl)
 668+ 9072 2A 48 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9075 36 00            ld (hl),0
 670+ 9077
 671+ 9077 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9078 C9               ret
 673+ 9079
 674+ 9079               ; ---------- ----------
 675+ 9079
 676+ 9079 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 907A 3A CB 88         ld a,(Columns)
 678+ 907D 47               ld b,a
 679+ 907E FD 7E 00     2 ld a,(iy)
 680+ 9081 BE               cp (hl)
 681+ 9082 28 01            jr z,1F
 682+ 9084
 683+ 9084 1C               inc e
 684+ 9085
 685+ 9085 23           1 inc hl
 686+ 9086 FD 23            inc iy
 687+ 9088 10 F4            djnz 2B
 688+ 908A C1               pop bc
 689+ 908B C9               ret
 690+ 908C
 691+ 908C              ; -------------------------------------------------------------------------------------------------------------
 692+ 908C              ;
 693+ 908C              ;   13/03/23
 694+ 908C              ;
 695+ 908C              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 908C              ;
 697+ 908C              ;   DESTRUYE: HL,BC,DE y A.
 698+ 908C
 699+ 908C 21 58 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 908F 7E               ld a,(hl)
 701+ 9090 A7               and a
 702+ 9091 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9092
 704+ 9092 44               ld b,h
 705+ 9093 4D               ld c,l
 706+ 9094 2A 20 89         ld hl,(Stack_snapshot_disparos)
 707+ 9097 E5               push hl
 708+ 9098 A7               and a
 709+ 9099 ED 42            sbc hl,bc
 710+ 909B E5               push hl
 711+ 909C C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 909D
 713+ 909D E1               pop hl
 714+ 909E 54               ld d,h
 715+ 909F 5D               ld e,l
 716+ 90A0 1B               dec de
 717+ 90A1 ED B8            lddr                                                ; Limpiamos.
 718+ 90A3
 719+ 90A3 21 58 71         ld hl,Album_de_fotos_disparos
 720+ 90A6 22 20 89         ld (Stack_snapshot_disparos),hl
 721+ 90A9
 722+ 90A9 C9               ret
 723+ 90AA
 724+ 90AA              ; -------------------------------------------------------------------------------------------------------------
 725+ 90AA              ;
 726+ 90AA              ;   18/07/23
 727+ 90AA              ;
 728+ 90AA
 729+ 90AA              Motor_de_disparos
 730+ 90AA
 731+ 90AA              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90AA
 733+ 90AA 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90AD 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90B0
 736+ 90B0 CD 8C 8C     2 call Extrae_address
 737+ 90B3 7E               ld a,(hl)
 738+ 90B4 A7               and a
 739+ 90B5 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90B7
 741+ 90B7              ; ----- ----- ----- ----- ----- -----
 742+ 90B7
 743+ 90B7 C5               push bc
 744+ 90B8 CD 7C 91         call foto_disparo_a_borrar
 745+ 90BB
 746+ 90BB              ; Existe colisión con este disparo???
 747+ 90BB
 748+ 90BB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90BC 7E               ld a,(hl)
 750+ 90BD 2B               dec hl
 751+ 90BE E6 01            and 1
 752+ 90C0 28 1D            jr z,9F
 753+ 90C2
 754+ 90C2              ;   En este punto:
 755+ 90C2              ;
 756+ 90C2              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90C2              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90C2              ;   _con la entidad).
 759+ 90C2              ;
 760+ 90C2              ;   Disparo_2A defw 0                                ; Control.
 761+ 90C2              ;    defw 0                                          ; Puntero objeto.
 762+ 90C2              ;    defw 0                                          ; Puntero de impresión.
 763+ 90C2              ;    defw 0                                          ; Rutina de impresión.
 764+ 90C2
 765+ 90C2 E5               push hl
 766+ 90C3
 767+ 90C3 06 04            ld b,4
 768+ 90C5 23           19 inc hl
 769+ 90C6 10 FD            djnz 19B
 770+ 90C8
 771+ 90C8 CD 8C 8C         call Extrae_address
 772+ 90CB CD ED 9C         call Genera_coordenadas_disparo
 773+ 90CE
 774+ 90CE              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90CE
 776+ 90CE 21 4A 89         ld hl,Coordenadas_disparo_certero
 777+ 90D1 72               ld (hl),d
 778+ 90D2 23               inc hl
 779+ 90D3 73               ld (hl),e
 780+ 90D4
 781+ 90D4              ; Elimino el disparo de la base de datos.
 782+ 90D4
 783+ 90D4 E1               pop hl
 784+ 90D5 CD FB 91         call Elimina_disparo_de_base_de_datos
 785+ 90D8 21 47 89         ld hl,Impacto2
 786+ 90DB CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90DD
 788+ 90DD 18 06            jr 11F
 789+ 90DF
 790+ 90DF CD A5 91     9 call Mueve_disparo
 791+ 90E2 CD 7C 91         call foto_disparo_a_borrar
 792+ 90E5
 793+ 90E5 C1           11 pop bc
 794+ 90E6 18 04            jr 7F
 795+ 90E8
 796+ 90E8              ; ----- ----- ----- ----- ----- -----
 797+ 90E8
 798+ 90E8 ED 42        1 sbc hl,bc
 799+ 90EA 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90EC
 801+ 90EC 2A 45 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90EF 23               inc hl
 803+ 90F0 23               inc hl
 804+ 90F1 22 45 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90F4 18 BA            jr 2B
 806+ 90F6
 807+ 90F6 CD 0D 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90F9              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90F9
 810+ 90F9              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90F9
 812+ 90F9 01 8A 85         ld bc,Disparo_11
 813+ 90FC 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90FF
 815+ 90FF CD 8C 8C     5 call Extrae_address
 816+ 9102 7E               ld a,(hl)
 817+ 9103 A7               and a
 818+ 9104 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9106
 820+ 9106              ; ----- ----- ----- ----- ----- -----
 821+ 9106
 822+ 9106 C5               push bc
 823+ 9107 CD 7C 91         call foto_disparo_a_borrar
 824+ 910A
 825+ 910A              ; Existe colisión con este disparo???
 826+ 910A
 827+ 910A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 910B 7E               ld a,(hl)
 829+ 910C 2B               dec hl
 830+ 910D E6 01            and 1
 831+ 910F 28 4D            jr z,10F
 832+ 9111
 833+ 9111              ;! La colisión se produce con Amadeus???
 834+ 9111              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9111
 836+ 9111 E5               push hl
 837+ 9112
 838+ 9112 06 04            ld b,4
 839+ 9114 23           16 inc hl
 840+ 9115 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9117
 842+ 9117 CD 8C 8C         call Extrae_address
 843+ 911A CD ED 9C         call Genera_coordenadas_disparo
 844+ 911D
 845+ 911D 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 911E FE 16            cp $16
 847+ 9120 38 2A            jr c,15F
 848+ 9122
 849+ 9122
 850+ 9122              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9122
 852+ 9122 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9123
 854+ 9123              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9123
 856+ 9123
 857+ 9123 2A 52 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9126
 859+ 9126              ; Coordenada X de Amadeus en D.
 860+ 9126
 861+ 9126 7D               ld a,l
 862+ 9127 E6 1F            and $1F
 863+ 9129 57               ld d,a
 864+ 912A
 865+ 912A 21 A6 85         ld hl,Amadeus_db+8
 866+ 912D 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 912E
 868+ 912E 21 4C 89         ld hl,Coordenadas_X_Amadeus
 869+ 9131 CD 06 92         call Guarda_coordenadas_X
 870+ 9134
 871+ 9134 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9135
 873+ 9135              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9135
 875+ 9135 06 02            ld b,2
 876+ 9137 C5           20 push bc
 877+ 9138
 878+ 9138 06 03            ld b,3
 879+ 913A 21 4C 89         ld hl,Coordenadas_X_Amadeus
 880+ 913D 7E           18 ld a,(hl)
 881+ 913E BA               cp d
 882+ 913F 20 04            jr nz,17F
 883+ 9141
 884+ 9141              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9141
 886+ 9141 C1               pop bc
 887+ 9142 E1               pop hl
 888+ 9143 18 0D            jr 14F
 889+ 9145
 890+ 9145 23           17 inc hl
 891+ 9146 10 F5            djnz 18B
 892+ 9148
 893+ 9148 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9149
 895+ 9149 C1               pop bc
 896+ 914A 10 EB            djnz 20B
 897+ 914C
 898+ 914C
 899+ 914C              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 914C              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 914C
 902+ 914C E1           15 pop hl
 903+ 914D 23               inc hl
 904+ 914E 35               dec (hl)
 905+ 914F 2B               dec hl
 906+ 9150 18 0C            jr 10F
 907+ 9152
 908+ 9152              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9152              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9152
 911+ 9152 E5           14 push hl
 912+ 9153 CD FB 91         call Elimina_disparo_de_base_de_datos
 913+ 9156 21 47 89         ld hl,Impacto2
 914+ 9159 CB CE            set 1,(hl)
 915+ 915B E1               pop hl
 916+ 915C 18 06            jr 12F
 917+ 915E
 918+ 915E              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 915E
 920+ 915E CD A5 91     10 call Mueve_disparo
 921+ 9161 CD 7C 91         call foto_disparo_a_borrar
 922+ 9164 C1           12 pop bc
 923+ 9165
 924+ 9165 18 04            jr 8F
 925+ 9167
 926+ 9167              ; ----- ----- ----- ----- ----- -----
 927+ 9167
 928+ 9167 ED 42        4 sbc hl,bc
 929+ 9169 28 0A            jr z,6F
 930+ 916B
 931+ 916B 2A 43 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 916E 23               inc hl
 933+ 916F 23               inc hl
 934+ 9170 22 43 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9173 18 8A            jr 5B
 936+ 9175
 937+ 9175 CD 06 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9178 CD 42 92         call Limpia_Coordenadas_X
 939+ 917B C9               ret
 940+ 917C
 941+ 917C              ; ------------------------------------------------------------------
 942+ 917C
 943+ 917C              foto_disparo_a_borrar
 944+ 917C
 945+ 917C 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 917D A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 917E C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 917F
 949+ 917F E5               push hl
 950+ 9180 23               inc hl
 951+ 9181 23               inc hl
 952+ 9182 ED 73 18 89      ld (Stack),sp
 953+ 9186 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9187 FD E1            pop iy
 955+ 9189 DD E1            pop ix
 956+ 918B E1               pop hl
 957+ 918C ED 7B 18 89      ld sp,(Stack)
 958+ 9190 3A 07 89         ld a,(Ctrl_1)
 959+ 9193 CB C7            set 0,a
 960+ 9195 32 07 89         ld (Ctrl_1),a
 961+ 9198 CD A0 7F         call Guarda_foto_registros
 962+ 919B 3A 07 89         ld a,(Ctrl_1)
 963+ 919E CB 87            res 0,a
 964+ 91A0 32 07 89         ld (Ctrl_1),a
 965+ 91A3 E1               pop hl
 966+ 91A4 C9               ret
 967+ 91A5
 968+ 91A5              ;---------------------------------------------------
 969+ 91A5              ;
 970+ 91A5              ;   18/07/23
 971+ 91A5              ;
 972+ 91A5
 973+ 91A5              Mueve_disparo
 974+ 91A5
 975+ 91A5              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91A5              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91A5              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91A5
 979+ 91A5 E5               push hl
 980+ 91A6
 981+ 91A6 7E               ld a,(hl)
 982+ 91A7
 983+ 91A7 06 04            ld b,4
 984+ 91A9 23           1 inc hl
 985+ 91AA 10 FD            djnz 1B
 986+ 91AC
 987+ 91AC              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91AC
 989+ 91AC CD 8C 8C         call Extrae_address
 990+ 91AF
 991+ 91AF E6 01            and 1
 992+ 91B1 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91B3
 994+ 91B3              ; Disparo hacia arriba, (Amadeus).
 995+ 91B3
 996+ 91B3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91B3              ; _ de la dificultad.
 998+ 91B3
 999+ 91B3 CD 33 96         call PreviousScan
1000+ 91B6 CD 33 96         call PreviousScan
1001+ 91B9 CD 33 96         call PreviousScan
1002+ 91BC CD 33 96         call PreviousScan
1003+ 91BF
1004+ 91BF              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91BF
1006+ 91BF 7C               ld a,h
1007+ 91C0 FE 40            cp $40
1008+ 91C2 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91C4
1010+ 91C4              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91C4
1012+ 91C4 EB               ex de,hl
1013+ 91C5 06 04            ld b,4
1014+ 91C7 2B           6 dec hl
1015+ 91C8 10 FD            djnz 6B
1016+ 91CA
1017+ 91CA CD FB 91         call Elimina_disparo_de_base_de_datos
1018+ 91CD E1               pop hl
1019+ 91CE 18 10            jr 7F
1020+ 91D0
1021+ 91D0              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91D0              ; HL contiene el puntero de impresión del disparo.
1023+ 91D0              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91D0
1025+ 91D0 D5           3 push de
1026+ 91D1 C5               push bc
1027+ 91D2
1028+ 91D2 CD 9A 8F         call Comprueba_Colision
1029+ 91D5
1030+ 91D5              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91D5
1032+ 91D5 78               ld a,b
1033+ 91D6
1034+ 91D6 C1               pop bc
1035+ 91D7 D1               pop de
1036+ 91D8
1037+ 91D8 EB               ex de,hl
1038+ 91D9
1039+ 91D9 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91DA 23               inc hl                                      ; _ movimiento.
1041+ 91DB 72               ld (hl),d
1042+ 91DC
1043+ 91DC E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91DD
1045+ 91DD 23               inc hl                                      ; _ en curso.
1046+ 91DE 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91DF 2B               dec hl
1048+ 91E0
1049+ 91E0 C9           7 ret
1050+ 91E1
1051+ 91E1              ; Disparo hacia abajo, (Entidad).
1052+ 91E1
1053+ 91E1 3A 54 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91E4 47               ld b,a
1055+ 91E5
1056+ 91E5 CD 24 96     4 call NextScan
1057+ 91E8 10 FB            djnz 4B
1058+ 91EA
1059+ 91EA              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91EA
1061+ 91EA 7C               ld a,h
1062+ 91EB FE 58            cp $58
1063+ 91ED 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91EF
1065+ 91EF EB               ex de,hl
1066+ 91F0 06 04            ld b,4
1067+ 91F2 2B           5 dec hl
1068+ 91F3 10 FD            djnz 5B
1069+ 91F5
1070+ 91F5 CD FB 91         call Elimina_disparo_de_base_de_datos
1071+ 91F8 E1               pop hl
1072+ 91F9 18 E5            jr 7B
1073+ 91FB
1074+ 91FB              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91FB
1076+ 91FB 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91FE AF               xor a
1078+ 91FF 77               ld (hl),a
1079+ 9200 54               ld d,h
1080+ 9201 5D               ld e,l
1081+ 9202 13               inc de
1082+ 9203 ED B0            ldir
1083+ 9205 C9               ret
1084+ 9206
1085+ 9206              ; -----------------------------------------------------------------
1086+ 9206              ;
1087+ 9206              ;   19/7/23
1088+ 9206              ;
1089+ 9206              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9206              ;
1091+ 9206              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9206              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9206              ;
1094+ 9206              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9206              ;
1096+ 9206              ;   INPUTS:
1097+ 9206              ;
1098+ 9206              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9206              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9206
1101+ 9206              ;   MODIFICA: A, HL, BC y DE.
1102+ 9206
1103+ 9206              Guarda_coordenadas_X
1104+ 9206
1105+ 9206 7B               ld a,e
1106+ 9207 A7               and a
1107+ 9208 20 04            jr nz,1F
1108+ 920A
1109+ 920A 06 02            ld b,2
1110+ 920C 18 02            jr 2F
1111+ 920E
1112+ 920E 06 03        1 ld b,3
1113+ 9210 72           2 ld (hl),d
1114+ 9211 23               inc hl
1115+ 9212 14               inc d
1116+ 9213 10 FB            djnz 2B
1117+ 9215
1118+ 9215 C9               ret
1119+ 9216
1120+ 9216              ; -----------------------------------------------------------------
1121+ 9216              ;
1122+ 9216              ;   12/04/23
1123+ 9216              ;
1124+ 9216
1125+ 9216 3A 47 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9219 A7               and a
1127+ 921A C8               ret z
1128+ 921B
1129+ 921B FE 04            cp 4
1130+ 921D 20 09            jr nz,1F
1131+ 921F
1132+ 921F
1133+ 921F              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 921F
1135+ 921F CD 3B 90         call Detecta_colision_nave_entidad
1136+ 9222
1137+ 9222 21 47 89         ld hl,Impacto2
1138+ 9225 CB 5E            bit 3,(hl)
1139+ 9227 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9228
1141+ 9228              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9228              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9228
1144+ 9228 21 47 89     1 ld hl,Impacto2
1145+ 922B CB 4E            bit 1,(hl)
1146+ 922D 28 07            jr z,2F
1147+ 922F
1148+ 922F 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9232 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9234 18 0B            jr 3F
1151+ 9236
1152+ 9236 21 47 89     2 ld hl,Impacto2
1153+ 9239 CB 46            bit 0,(hl)
1154+ 923B C8               ret z
1155+ 923C
1156+ 923C              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 923C
1158+ 923C 21 07 89         ld hl,Ctrl_1
1159+ 923F CB D6            set 2,(hl)
1160+ 9241
1161+ 9241 C9           3 ret
1162+ 9242
1163+ 9242              ; -----------------------------------------------------------------
1164+ 9242              ;
1165+ 9242              ;   19/7/23
1166+ 9242              ;
1167+ 9242              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9242
1169+ 9242 AF           Limpia_Coordenadas_X xor a
1170+ 9243 06 06            ld b,6
1171+ 9245 21 4C 89         ld hl,Coordenadas_X_Amadeus
1172+ 9248 77           1 ld (hl),a
1173+ 9249 23               inc hl
1174+ 924A 10 FC            djnz 1B
1175+ 924C C9               ret
1176+ 924D
1177+ 924D              ; -----------------------------------------------------------------
1178+ 924D              ;
1179+ 924D              ;   25/04/23
1180+ 924D              ;
1181+ 924D
1182+ 924D              Determina_resultado_comparativa
1183+ 924D
1184+ 924D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 924D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 924D              ;
1187+ 924D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 924D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 924D              ;
1190+ 924D              ;   SBC HL,DE
1191+ 924D
1192+ 924D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 924D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 924D
1195+ 924D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 924D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 924D
1198+ 924D
1199+ 924D 3A DE 88         ld a,(Cuad_objeto)
1200+ 9250 FE 02            cp 2
1201+ 9252 28 26            jr z,2F
1202+ 9254 38 24            jr c,2F
1203+ 9256
1204+ 9256              ; Cuadrantes 3º y 4º
1205+ 9256
1206+ 9256 E6 01            and 1
1207+ 9258 28 10            jr z,4F
1208+ 925A
1209+ 925A              ; Cuadrante 3º
1210+ 925A
1211+ 925A 7C               ld a,h
1212+ 925B 06 00            ld b,0
1213+ 925D
1214+ 925D CD E8 92         call Compara_cositas_H3
1215+ 9260
1216+ 9260 04               inc b
1217+ 9261 05               dec b
1218+ 9262 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9263
1220+ 9263 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9264 06 00            ld b,0
1222+ 9266
1223+ 9266 CD FA 92         call Compara_cositas_L3
1224+ 9269 C9               ret
1225+ 926A
1226+ 926A              ; Cuadrante 4º
1227+ 926A
1228+ 926A 7C           4 ld a,h
1229+ 926B 06 00            ld b,0
1230+ 926D
1231+ 926D CD 0C 93         call Compara_cositas_H4
1232+ 9270
1233+ 9270 04               inc b
1234+ 9271 05               dec b
1235+ 9272 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9273
1237+ 9273 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9274 06 00            ld b,0
1239+ 9276
1240+ 9276 CD 22 93         call Compara_cositas_L4
1241+ 9279 C9               ret
1242+ 927A
1243+ 927A              ; Cuadrantes 1º y 2º.
1244+ 927A
1245+ 927A 28 10        2 jr z,3F
1246+ 927C
1247+ 927C              ; 1er Cuadrante
1248+ 927C
1249+ 927C 7C               ld a,h
1250+ 927D 06 00            ld b,0
1251+ 927F
1252+ 927F CD C0 92         call Compara_cositas_H1
1253+ 9282
1254+ 9282 04               inc b
1255+ 9283 05               dec b
1256+ 9284 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9285
1258+ 9285 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9286 06 00            ld b,0
1260+ 9288
1261+ 9288 CD D6 92         call Compara_cositas_L1
1262+ 928B C9               ret
1263+ 928C
1264+ 928C
1265+ 928C              ; 2º Cuadrante
1266+ 928C
1267+ 928C 7C           3 ld a,h
1268+ 928D 06 00            ld b,0
1269+ 928F
1270+ 928F CD 9C 92         call Compara_cositas_H2
1271+ 9292
1272+ 9292 04               inc b
1273+ 9293 05               dec b
1274+ 9294 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9295
1276+ 9295 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9296 06 00            ld b,0
1278+ 9298
1279+ 9298 CD AE 92         call Compara_cositas_L2
1280+ 929B C9               ret
1281+ 929C
1282+ 929C A7           Compara_cositas_H2 and a
1283+ 929D 28 0D            jr z,1F
1284+ 929F              ;    cp $fd
1285+ 929F              ;    jr z,1F
1286+ 929F              ;    cp $fe
1287+ 929F              ;    jr z,1F
1288+ 929F FE FF            cp $ff
1289+ 92A1 28 09            jr z,1F
1290+ 92A3 FE 01            cp $01
1291+ 92A5 28 05            jr z,1F
1292+ 92A7 FE 02            cp $02
1293+ 92A9 28 01            jr z,1F
1294+ 92AB C0               ret nz
1295+ 92AC 04           1 inc b
1296+ 92AD C9               ret
1297+ 92AE
1298+ 92AE A7           Compara_cositas_L2 and a
1299+ 92AF 28 0D            jr z,1F
1300+ 92B1              ;    cp $fd
1301+ 92B1              ;    jr z,1F
1302+ 92B1 FE FE            cp $fe
1303+ 92B3 28 09            jr z,1F
1304+ 92B5 FE FF            cp $ff
1305+ 92B7 28 05            jr z,1F
1306+ 92B9 FE 01            cp $01
1307+ 92BB 28 01            jr z,1F
1308+ 92BD              ;    cp $02
1309+ 92BD              ;    jr z,1F
1310+ 92BD C0               ret nz
1311+ 92BE 04           1 inc b
1312+ 92BF C9               ret
1313+ 92C0
1314+ 92C0 A7           Compara_cositas_H1 and a
1315+ 92C1 28 11            jr z,1F
1316+ 92C3              ;    cp $fd
1317+ 92C3              ;    jr z,1F
1318+ 92C3              ;    cp $fe
1319+ 92C3              ;    jr z,1F
1320+ 92C3 FE FF            cp $ff
1321+ 92C5 28 0D            jr z,1F
1322+ 92C7 FE 01            cp $01
1323+ 92C9 28 09            jr z,1F
1324+ 92CB FE 02            cp $02
1325+ 92CD 28 05            jr z,1F
1326+ 92CF FE 03            cp $03
1327+ 92D1 28 01            jr z,1F
1328+ 92D3 C0               ret nz
1329+ 92D4 04           1 inc b
1330+ 92D5 C9               ret
1331+ 92D6
1332+ 92D6 A7           Compara_cositas_L1 and a
1333+ 92D7 28 0D            jr z,1F
1334+ 92D9              ;    cp $fd
1335+ 92D9              ;    jr z,1F
1336+ 92D9              ;    cp $fe
1337+ 92D9              ;    jr z,1F
1338+ 92D9              ;    cp $ff
1339+ 92D9              ;    jr z,1F
1340+ 92D9 FE 01            cp $01
1341+ 92DB 28 09            jr z,1F
1342+ 92DD FE 02            cp $02
1343+ 92DF 28 05            jr z,1F
1344+ 92E1 FE 03            cp $03
1345+ 92E3 28 01            jr z,1F
1346+ 92E5 C0               ret nz
1347+ 92E6 04           1 inc b
1348+ 92E7 C9               ret
1349+ 92E8
1350+ 92E8 A7           Compara_cositas_H3 and a
1351+ 92E9 28 0D            jr z,1F
1352+ 92EB              ;    cp $fd
1353+ 92EB              ;    jr z,1F
1354+ 92EB FE FE            cp $fe
1355+ 92ED 28 09            jr z,1F
1356+ 92EF FE FF            cp $ff
1357+ 92F1 28 05            jr z,1F
1358+ 92F3 FE 01            cp $01
1359+ 92F5 28 01            jr z,1F
1360+ 92F7              ;    cp $02
1361+ 92F7              ;    jr z,1F
1362+ 92F7              ;    cp $03
1363+ 92F7              ;    jr z,1F
1364+ 92F7 C0               ret nz
1365+ 92F8 04           1 inc b
1366+ 92F9 C9               ret
1367+ 92FA
1368+ 92FA A7           Compara_cositas_L3 and a
1369+ 92FB 28 0D            jr z,1F
1370+ 92FD              ;    cp $fd
1371+ 92FD              ;    jr z,1F
1372+ 92FD              ;    cp $fe
1373+ 92FD              ;    jr z,1F
1374+ 92FD              ;    cp $ff
1375+ 92FD              ;    jr z,1F
1376+ 92FD FE 01            cp $01
1377+ 92FF 28 09            jr z,1F
1378+ 9301 FE 02            cp $02
1379+ 9303 28 05            jr z,1F
1380+ 9305 FE 03            cp $03
1381+ 9307 28 01            jr z,1F
1382+ 9309 C0               ret nz
1383+ 930A 04           1 inc b
1384+ 930B C9               ret
1385+ 930C
1386+ 930C A7           Compara_cositas_H4 and a
1387+ 930D 28 11            jr z,1F
1388+ 930F FE FD            cp $fd
1389+ 9311 28 0D            jr z,1F
1390+ 9313 FE FE            cp $fe
1391+ 9315 28 09            jr z,1F
1392+ 9317 FE FF            cp $ff
1393+ 9319 28 05            jr z,1F
1394+ 931B FE 01            cp $01
1395+ 931D 28 01            jr z,1F
1396+ 931F              ;    cp $02
1397+ 931F              ;    jr z,1F
1398+ 931F              ;    cp $03
1399+ 931F              ;    jr z,1F
1400+ 931F C0               ret nz
1401+ 9320 04           1 inc b
1402+ 9321 C9               ret
1403+ 9322
1404+ 9322 A7           Compara_cositas_L4 and a
1405+ 9323 28 0D            jr z,1F
1406+ 9325              ;    cp $fd
1407+ 9325              ;    jr z,1F
1408+ 9325 FE FE            cp $fe
1409+ 9327 28 09            jr z,1F
1410+ 9329 FE FF            cp $ff
1411+ 932B 28 05            jr z,1F
1412+ 932D FE 01            cp $01
1413+ 932F 28 01            jr z,1F
1414+ 9331              ;    cp $02
1415+ 9331              ;    jr z,1F
1416+ 9331              ;    cp $03
1417+ 9331              ;    jr z,1F
1418+ 9331 C0               ret nz
1419+ 9332 04           1 inc b
1420+ 9333 C9               ret
# file closed: Disparo.asm
1671  9334              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9334              ; ******************************************************************************************************************************************************************************************
   2+ 9334              ;
   3+ 9334              ; 26/06/23
   4+ 9334              ;
   5+ 9334              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9334
   7+ 9334 CD 18 96     Draw call Prepara_draw
   8+ 9337 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9338 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9339 28 05        	jr z,2F
  11+ 933B
  12+ 933B 3A DE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 933E 18 0C        	jr 1F
  14+ 9340
  15+ 9340 2A DC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9343 22 CC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9346 CD D5 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9349              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9349 CD 78 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 934C
  21+ 934C 3A F4 88     1 ld a,(Ctrl_0)
  22+ 934F CB 6F        	bit 5,a
  23+ 9351 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9353
  25+ 9353 CD 6B 93     	call Comprueba_limite_horizontal
  26+ 9356 CD FB 93     	call Comprueba_limite_vertical
  27+ 9359
  28+ 9359              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9359              ; -----------------------
  30+ 9359              ; -----------------------
  31+ 9359              ; -----------------------
  32+ 9359
  33+ 9359 CD 48 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 935C CD 7F 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 935F CD DE 95     	call Define_rutina_de_impresion
  36+ 9362
  37+ 9362 3A F4 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9365 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9367 32 F4 88     	ld (Ctrl_0),a
  40+ 936A
  41+ 936A C9           	ret
  42+ 936B
  43+ 936B              ; *******************************************************************************************************************************************************************************************
  44+ 936B              ;	21/01/23
  45+ 936B              ;
  46+ 936B              ; 	Comprueba_limite_horizontal.
  47+ 936B              ;
  48+ 936B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 936B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 936B              ;
  51+ 936B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 936B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 936B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 936B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 936B
  56+ 936B
  57+ 936B
  58+ 936B 3A F4 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 936E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9370 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9372 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9374 32 F4 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9377 18 09            jr 6F
  64+ 9379 CB 5F        1 bit 3,a
  65+ 937B 28 0A            jr z,2F
  66+ 937D E6 F7            and $f7
  67+ 937F 32 F4 88         ld (Ctrl_0),a
  68+ 9382 CD D5 94     6 call Inicializacion
  69+ 9385 18 5B            jr 5F
  70+ 9387 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9388
  72+ 9388              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9388              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9388
  75+ 9388 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9389 2A 02 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 938C CD 37 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 938F 67           	ld h,a
  79+ 9390 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9391 CD 37 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9394 67           	ld h,a
  82+ 9395 A7           	and a
  83+ 9396 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9398 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9399 3A DE 88     	ld a,(Cuad_objeto)
  86+ 939C FE 02        	cp 2
  87+ 939E 38 1E        	jr c,3F
  88+ 93A0 28 1C        	jr z,3F
  89+ 93A2 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93A3 28 23            jr z,7F
  91+ 93A5 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93A7 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93A9 E1           	pop hl
  94+ 93AA
  95+ 93AA              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93AA              ; _para indicar con E="2" en caso necesario.
  97+ 93AA
  98+ 93AA E5               push hl
  99+ 93AB C5               push bc
 100+ 93AC CD 37 99     	call calcula_tercio
 101+ 93AF FE 01        	cp 1
 102+ 93B1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93B3 CD E3 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93B6 28 26            jr z,9F
 105+ 93B8 38 24            jr c,9F
 106+ 93BA 1E 00        11 ld e,0
 107+ 93BC 18 22            jr 8F
 108+ 93BE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93BF 28 07        	jr z, 7F
 110+ 93C1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93C3 1E 00         	ld e,0
 112+ 93C5 E1           	pop hl
 113+ 93C6 18 04        	jr 4F
 114+ 93C8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93CA 18 15            jr 10F
 116+ 93CC
 117+ 93CC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93CC              ; _para indicar con E="2" en caso necesario.
 119+ 93CC
 120+ 93CC E5           4 push hl
 121+ 93CD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93CE CD 37 99     	call calcula_tercio
 123+ 93D1 FE 01        	cp 1
 124+ 93D3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93D5 CD E3 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93D8 28 04            jr z,9F
 127+ 93DA 30 02            jr nc,9F
 128+ 93DC 18 02        	jr 8F
 129+ 93DE 1E 02        9 ld e,2
 130+ 93E0 C1           8 pop bc
 131+ 93E1 E1           10 pop hl
 132+ 93E2 C9           5 ret
 133+ 93E3
 134+ 93E3              ; --------------------
 135+ 93E3              ;
 136+ 93E3              ; 25/08/22
 137+ 93E3
 138+ 93E3 CD 37 99     Comprueba_centro call calcula_tercio
 139+ 93E6 67               ld h,a
 140+ 93E7 08           	ex af,af
 141+ 93E8 FE 02        	cp 2
 142+ 93EA 38 07        	jr c,1F
 143+ 93EC 28 05        	jr z,1F
 144+ 93EE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93F1 18 03        	jr 2F
 146+ 93F3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93F6 08           2 ex af,af
 148+ 93F7 A7               and a
 149+ 93F8 ED 42            sbc hl,bc
 150+ 93FA C9               ret
 151+ 93FB
 152+ 93FB              ; *********************************************************************************************************************************************************************************************
 153+ 93FB              ;
 154+ 93FB              ;   16/8/22
 155+ 93FB              ;
 156+ 93FB              ;	Comprueba_limite_vertical
 157+ 93FB              ;
 158+ 93FB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93FB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93FB              ;
 161+ 93FB
 162+ 93FB 2A CC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93FE 7D           	ld a,l
 164+ 93FF E6 1F        	and $1F
 165+ 9401 57           	ld d,a
 166+ 9402 3A 04 89     	ld a,(Limite_vertical)
 167+ 9405 BA           	cp d 											; Límite - Posición.
 168+ 9406 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9407 3A DE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 940A CB 47        	bit 0,a
 171+ 940C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 940E
 173+ 940E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 940E
 175+ 940E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 940F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9411
 178+ 9411              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9411              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9411
 181+ 9411 3A D0 88         ld a,(Coordenada_X)
 182+ 9414 16 0F            ld d,Centro_izquierda
 183+ 9416 A7               and a
 184+ 9417 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9418 28 1E            jr z,3F
 186+ 941A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 941C              ;                                                    ; _salimos sin modificar nada.
 188+ 941C 18 0E            jr 2F
 189+ 941E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 941F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9421
 192+ 9421              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9421              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9421
 195+ 9421 3A D0 88         ld a,(Coordenada_X)
 196+ 9424 16 10            ld d,Centro_derecha
 197+ 9426 A7               and a
 198+ 9427 92               sub d
 199+ 9428 28 0E            jr z,3F
 200+ 942A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 942C              ;                                                    ; _salimos sin modificar nada.
 202+ 942C CB 43        2 bit 0,e
 203+ 942E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9430 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9431 CD C5 94         call Modificaccionne
 206+ 9434 C1           	pop bc
 207+ 9435 CD D5 94         call Inicializacion
 208+ 9438 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9439
 210+ 9439              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9439
 212+ 9439 C5           4 push bc
 213+ 943A 01 CB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 943D 0A           	ld a,(bc)
 215+ 943E 3D           	dec a
 216+ 943F 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9440 7D           	ld a,l
 218+ 9441 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9442 CB 47        	bit 0,a
 220+ 9444 28 03        	jr z,5F
 221+ 9446 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9447 18 2E        	jr 7F
 223+ 9449
 224+ 9449              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9449
 226+ 9449 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 944A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 944B 3A F4 88     	ld a,(Ctrl_0)
 229+ 944E CB 4F        	bit 1,a
 230+ 9450 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9452 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9453
 233+ 9453              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9453
 235+ 9453 1C               inc e
 236+ 9454 1D               dec e
 237+ 9455 20 07            jr nz,12F
 238+ 9457 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9458 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9459 22 CC 88     	ld (Posicion_actual),hl
 241+ 945C 18 44        13 jr 9F
 242+ 945E CB 43        12 bit 0,e
 243+ 9460 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9462              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9462 C1           	pop bc
 246+ 9463 18 D3        	jr 3B
 247+ 9465 80           14 add b
 248+ 9466 6F               ld l,a
 249+ 9467 22 CC 88     	ld (Posicion_actual),hl
 250+ 946A CD C5 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 946D 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 946F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9471 32 F4 88         ld (Ctrl_0),a
 254+ 9474 F1           	pop af
 255+ 9475 18 2B        	jr 9F
 256+ 9477
 257+ 9477              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9477
 259+ 9477 F5           7 push af
 260+ 9478 3A F4 88     	ld a,(Ctrl_0)
 261+ 947B CB 47        	bit 0,a
 262+ 947D 20 1D        	jr nz,8F
 263+ 947F F1           	pop af
 264+ 9480
 265+ 9480              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9480
 267+ 9480 1C           	inc e
 268+ 9481 1D               dec e
 269+ 9482 20 07            jr nz,10F
 270+ 9484 90           	sub b
 271+ 9485 6F               ld l,a
 272+ 9486 22 CC 88     	ld (Posicion_actual),hl
 273+ 9489 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 948B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 948B CB 43        10 bit 0,e
 276+ 948D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 948F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 948F C1           	pop bc
 279+ 9490 18 A6        	jr 3B
 280+ 9492 90           16 sub b
 281+ 9493 6F               ld l,a
 282+ 9494 22 CC 88     	ld (Posicion_actual),hl
 283+ 9497 CD C5 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 949A 18 06            jr 9F
 285+ 949C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 949E 32 F4 88         ld (Ctrl_0),a
 287+ 94A1 F1           	pop af
 288+ 94A2 C1           9 pop bc
 289+ 94A3 1E 00        	ld e,0
 290+ 94A5 CD D5 94         call Inicializacion
 291+ 94A8 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94A9 08           	ex af,af
 293+ 94AA F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94AB 18 8B            jr 3B
 295+ 94AD
 296+ 94AD              ; --------------------
 297+ 94AD
 298+ 94AD 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94AF CD 33 96     1 call PreviousScan
 300+ 94B2 10 FB            djnz 1B
 301+ 94B4 22 CC 88     	ld (Posicion_actual),hl
 302+ 94B7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94B8 C9           	ret
 304+ 94B9
 305+ 94B9              ; --------------------
 306+ 94B9
 307+ 94B9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94BB CD 24 96     1 call NextScan
 309+ 94BE 10 FB            djnz 1B
 310+ 94C0 22 CC 88     	ld (Posicion_actual),hl
 311+ 94C3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94C4 C9           	ret
 313+ 94C5
 314+ 94C5              ; --------------------
 315+ 94C5              ;
 316+ 94C5              ;	22/01/23
 317+ 94C5              ;
 318+ 94C5              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94C5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94C5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94C5
 322+ 94C5
 323+ 94C5              Modificaccionne
 324+ 94C5
 325+ 94C5 3A DE 88     	ld a,(Cuad_objeto)
 326+ 94C8 FE 02        	cp 2
 327+ 94CA CC AD 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94CD DC AD 94         call c,Modifica_Pos_actual
 329+ 94D0 C8           	ret z
 330+ 94D1 CD B9 94         call Modifica_Pos_actual2
 331+ 94D4 C9               ret
 332+ 94D5
 333+ 94D5              ; *************************************************************************************************************************************************************************************************
 334+ 94D5              ;
 335+ 94D5              ;	13/8/22
 336+ 94D5              ;
 337+ 94D5              ;	Inicializacion
 338+ 94D5              ;
 339+ 94D5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94D5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94D5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94D5              ;
 343+ 94D5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94D5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94D5              ;	_ desaparece/aparece.
 346+ 94D5
 347+ 94D5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94D5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94D5              ;
 350+ 94D5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94D5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94D5              ; 		   [E] ="0"
 353+ 94D5
 354+ 94D5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94D5
 356+ 94D5 CD 37 99     Inicializacion call calcula_tercio
 357+ 94D8 28 36        	jr z,primit
 358+ 94DA E6 02        	and 2
 359+ 94DC 20 07        	jr nz,segmit
 360+ 94DE 7D           	ld a,l
 361+ 94DF FE 7F        	cp $7f
 362+ 94E1 38 2D        	jr c,primit
 363+ 94E3 28 2B        	jr z,primit
 364+ 94E5 CD 42 95     segmit call column
 365+ 94E8 38 13        	jr c,tercuad
 366+ 94EA 3E 04        cuarcuad ld a,4
 367+ 94EC 32 DE 88     	ld (Cuad_objeto),a
 368+ 94EF 21 20 48     	ld hl,$4820
 369+ 94F2 22 02 89     	ld (Limite_horizontal),hl
 370+ 94F5 21 04 89     	ld hl,Limite_vertical
 371+ 94F8 36 0D        	ld (hl),$0d
 372+ 94FA 08           	ex af,af
 373+ 94FB 18 3C        	jr 1F
 374+ 94FD              tercuad
 375+ 94FD 3E 03        	ld a,3
 376+ 94FF 32 DE 88     	ld (Cuad_objeto),a
 377+ 9502 21 20 48     	ld hl,$4820
 378+ 9505 22 02 89     	ld (Limite_horizontal),hl
 379+ 9508 21 04 89     	ld hl,Limite_vertical
 380+ 950B 36 12        	ld (hl),$12
 381+ 950D 08           	ex af,af
 382+ 950E 18 29        	jr 1F
 383+ 9510 CD 42 95     primit call column
 384+ 9513 38 13        	jr c, primcuad
 385+ 9515              segcuad
 386+ 9515 3E 02        	ld a,2
 387+ 9517 32 DE 88     	ld (Cuad_objeto),a
 388+ 951A 21 C0 4F     	ld hl,$4fc0
 389+ 951D 22 02 89     	ld (Limite_horizontal),hl
 390+ 9520 21 04 89     	ld hl,Limite_vertical
 391+ 9523 36 0D        	ld (hl),$0d
 392+ 9525 08           	ex af,af
 393+ 9526 18 11        	jr 1F
 394+ 9528              primcuad
 395+ 9528 3E 01        	ld a,1
 396+ 952A 32 DE 88     	ld (Cuad_objeto),a
 397+ 952D 21 C0 4F     	ld hl,$4fc0
 398+ 9530 22 02 89     	ld (Limite_horizontal),hl
 399+ 9533 21 04 89     	ld hl,Limite_vertical
 400+ 9536 36 12        	ld (hl),$12
 401+ 9538 08           	ex af,af
 402+ 9539 CD C2 9C     1 call Genera_coordenadas
 403+ 953C 21 F4 88     	ld hl,Ctrl_0
 404+ 953F CB EE        	set 5,(hl)
 405+ 9541 C9           	ret
 406+ 9542
 407+ 9542              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9542
 409+ 9542              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9542              ;
 411+ 9542              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9542
 413+ 9542 7D           column ld a,l
 414+ 9543 E6 1F        	and $1f
 415+ 9545 FE 10         	cp $10
 416+ 9547 C9            	ret
 417+ 9548
 418+ 9548              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9548              ;
 420+ 9548              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9548              ;
 422+ 9548              ; 14/12/22
 423+ 9548              ;
 424+ 9548              ;	Modifica: A y BC.
 425+ 9548
 426+ 9548 3A DE 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 954B E6 01        	and 1
 428+ 954D 28 17        	jr z,1F
 429+ 954F
 430+ 954F              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 954F
 432+ 954F 3A D0 88     	ld a,(Coordenada_X)
 433+ 9552 47           	ld b,a
 434+ 9553 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9554 79           	ld a,c
 436+ 9555 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9556 38 08        	jr c,2F
 438+ 9558 47           	ld b,a
 439+ 9559 79           	ld a,c
 440+ 955A 90           	sub b
 441+ 955B 32 01 89     	ld (Columnas),a
 442+ 955E 18 1B        	jr 4F
 443+ 9560 79           2 ld a,c
 444+ 9561 32 01 89     	ld (Columnas),a
 445+ 9564 18 15        	jr 4F
 446+ 9566
 447+ 9566              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9566
 449+ 9566 3A D0 88     1 ld a,(Coordenada_X)
 450+ 9569 81           	add c
 451+ 956A 3D           	dec a
 452+ 956B D6 1F        	sub $1f
 453+ 956D 38 08        	jr c,3F
 454+ 956F 47           	ld b,a
 455+ 9570 79           	ld a,c
 456+ 9571 90           	sub b
 457+ 9572 32 01 89     	ld (Columnas),a
 458+ 9575 18 04        	jr 4F
 459+ 9577 79           3 ld a,c
 460+ 9578 32 01 89     	ld (Columnas),a
 461+ 957B D9           4 exx
 462+ 957C 4F           	ld c,a
 463+ 957D D9           	exx
 464+ 957E C9            ret
 465+ 957F
 466+ 957F              ; --------------------------------------------------------------------------------------------------------------------
 467+ 957F              ;
 468+ 957F              ;   19/7/23
 469+ 957F              ;
 470+ 957F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 957F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 957F              ;
 473+ 957F              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 957F              ;			HL e IY Contienen (Puntero_objeto).
 475+ 957F              ;
 476+ 957F              ;	DESTRUYE: HL,B Y A.
 477+ 957F
 478+ 957F 3A DE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9582 FE 02        	cp 2
 480+ 9584 38 18        	jr c,1F
 481+ 9586 28 16        	jr z,1F
 482+ 9588 E6 01        	and 1
 483+ 958A 28 0D        	jr z,3F
 484+ 958C
 485+ 958C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 958C
 487+ 958C CD D2 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 958F
 489+ 958F 7D           9 ld a,l
 490+ 9590 E6 1F        	and $1f
 491+ 9592 28 2A        	jr z,7F
 492+ 9594 2B           	dec hl
 493+ 9595 10 F8        	djnz 9B
 494+ 9597 18 25        	jr 7F
 495+ 9599
 496+ 9599              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9599
 498+ 9599 2A CC 88     3 ld hl,(Posicion_actual)
 499+ 959C 18 20        	jr 7F
 500+ 959E
 501+ 959E 28 14        1 jr z,2F
 502+ 95A0
 503+ 95A0              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95A0
 505+ 95A0 CD D2 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95A3
 507+ 95A3 7D           4 ld a,l
 508+ 95A4 E6 1F        	and $1f
 509+ 95A6 28 03        	jr z,6F
 510+ 95A8 2B           	dec hl
 511+ 95A9 10 F8        	djnz 4B
 512+ 95AB 06 0F        6 ld b,15
 513+ 95AD CD 33 96     5 call PreviousScan
 514+ 95B0 10 FB        	djnz 5B
 515+ 95B2 18 0A        	jr 7F
 516+ 95B4
 517+ 95B4              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95B4
 519+ 95B4 CD D2 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95B7 06 0F        	ld b,15
 521+ 95B9 CD 33 96     8 call PreviousScan
 522+ 95BC 10 FB        	djnz 8B
 523+ 95BE
 524+ 95BE E5           7 push hl
 525+ 95BF DD E1        	pop ix
 526+ 95C1
 527+ 95C1 2A CE 88     	ld hl,(Puntero_objeto)
 528+ 95C4 E5           	push hl
 529+ 95C5 FD E1        	pop iy
 530+ 95C7
 531+ 95C7              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95C7
 533+ 95C7 3A F4 88     	ld a,(Ctrl_0)
 534+ 95CA CB 77        	bit 6,a
 535+ 95CC C8           	ret z
 536+ 95CD
 537+ 95CD              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95CD              ; _ entidad / Amadeus´.
 539+ 95CD
 540+ 95CD DD 22 52 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95D1
 542+ 95D1 C9           	ret
 543+ 95D2
 544+ 95D2              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95D2              ;
 546+ 95D2              ;	2/1/23
 547+ 95D2              ;
 548+ 95D2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95D2              ;
 550+ 95D2              ;	Tras esta rutina tenemos:
 551+ 95D2              ;
 552+ 95D2              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95D2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95D2              ;
 555+ 95D2              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95D2
 557+ 95D2 2A CC 88     Operandos ld hl,(Posicion_actual)
 558+ 95D5 3A 01 89     	ld a,(Columnas)
 559+ 95D8 3D           	dec a
 560+ 95D9 20 01        	jr nz,1F
 561+ 95DB 3C           	inc a
 562+ 95DC 47           1 ld b,a
 563+ 95DD C9           	ret
 564+ 95DE
 565+ 95DE              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95DE              ;
 567+ 95DE              ;	3/1/23
 568+ 95DE              ;
 569+ 95DE              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95DE              ;
 571+ 95DE              ;	Destruye: A,B,HL y DE.
 572+ 95DE
 573+ 95DE              Define_rutina_de_impresion
 574+ 95DE
 575+ 95DE 3A CB 88     	ld a,(Columns)
 576+ 95E1 47           	ld b,a
 577+ 95E2 3A 01 89     	ld a,(Columnas)
 578+ 95E5 B8           	cp b
 579+ 95E6 20 0D        	jr nz,2f
 580+ 95E8
 581+ 95E8              ;	La entidad se imprime entera.
 582+ 95E8
 583+ 95E8 21 07 97     	ld hl, Indice_entidades_completas
 584+ 95EB E6 01        	and 1
 585+ 95ED 28 02        	jr z,1F
 586+ 95EF
 587+ 95EF 23           	inc hl
 588+ 95F0 23           	inc hl
 589+ 95F1
 590+ 95F1 CD 8C 8C     1 call Extrae_address
 591+ 95F4 C9           	ret		;	ret
 592+ 95F5
 593+ 95F5              ;	La entidad no se imprime entera en pantalla.
 594+ 95F5
 595+ 95F5 3A DE 88     2 ld a,(Cuad_objeto)
 596+ 95F8 E6 01        	and 1
 597+ 95FA 28 17        	jr z,3F
 598+ 95FC
 599+ 95FC              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95FC
 601+ 95FC 21 0B 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95FF 3A CB 88     4 ld a,(Columns)
 603+ 9602 E6 01        	and 1
 604+ 9604 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9606
 606+ 9606 23           	inc hl
 607+ 9607 23           	inc hl
 608+ 9608
 609+ 9608 3A 01 89     	ld a,(Columnas)
 610+ 960B E6 01        	and 1
 611+ 960D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 960F
 613+ 960F 23           	inc hl
 614+ 9610 23           	inc hl
 615+ 9611
 616+ 9611 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9613
 618+ 9613 21 11 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9616 18 E7        	jr 4B
 620+ 9618
 621+ 9618              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9618              ;
 623+ 9618              ;	Prepara_draw
 624+ 9618              ;
 625+ 9618              ;	Es una rutina de carga.
 626+ 9618              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9618              ;
 628+ 9618              ;	FUNCIONAMIENTO:
 629+ 9618              ;
 630+ 9618              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9618              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9618              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9618              ;
 634+ 9618              ;	DESTRUYE:
 635+ 9618              ;
 636+ 9618              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9618
 638+ 9618 21 CA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 961B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 961C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 961D 4E           	ld c,(hl)
 642+ 961E 2A CC 88     	ld hl,(Posicion_actual)
 643+ 9621 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9623 C9           	ret
 645+ 9624
 646+ 9624              ;----------------------------------------------------------------------------------------------------------------
 647+ 9624              ;
 648+ 9624              ;	5/08/22
 649+ 9624              ;
 650+ 9624              ;   NextScan.
 651+ 9624              ;
 652+ 9624              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9624              ;
 654+ 9624              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9624              ;
 656+ 9624              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9624              ;
 658+ 9624              ;       DESTRUIDOS: AF y HL !!!
 659+ 9624              ;
 660+ 9624              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9624              ;
 662+ 9624
 663+ 9624 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9625 7C               ld a,h
 665+ 9626 E6 07            and 7
 666+ 9628 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9629
 668+ 9629 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 962A C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 962C 6F               ld l,a
 671+ 962D D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 962E
 673+ 962E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 962F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9631 67               ld h,a
 676+ 9632 C9               ret
 677+ 9633
 678+ 9633              ;----------------------------------------------------------------------------------------------------------------
 679+ 9633              ;
 680+ 9633              ;	5/08/22
 681+ 9633              ;
 682+ 9633              ;   PreviousScan.
 683+ 9633              ;
 684+ 9633              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9633              ;
 686+ 9633              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9633              ;
 688+ 9633              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9633              ;
 690+ 9633              ;       DESTRUIDOS: AF y HL !!!
 691+ 9633              ;
 692+ 9633              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9633              ;
 694+ 9633
 695+ 9633 7C           PreviousScan ld a,h
 696+ 9634 25               dec h               ; Dec H.
 697+ 9635 E6 07            and 7
 698+ 9637 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9638
 700+ 9638 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9639 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 963B 6F               ld l,a
 703+ 963C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 963D
 705+ 963D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 963E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9640 67               ld h,a
 708+ 9641 C9               ret
 709+ 9642
 710+ 9642              ; -----------------------------------------------------------------------------------
 711+ 9642              ;
 712+ 9642              ;	31/7/23
 713+ 9642              ;
 714+ 9642              ;	Rutina principal de pintado de entidades.
 715+ 9642              ;	Extrae la foto del frame, (entidades).
 716+ 9642
 717+ 9642              Extrae_foto_entidades
 718+ 9642
 719+ 9642 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9645 7E           	ld a,(hl)
 721+ 9646 A7           	and a
 722+ 9647 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9648
 724+ 9648              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9648
 726+ 9648 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 964B A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 964C C8           	ret z
 729+ 964D
 730+ 964D              ; -----------------------------------
 731+ 964D
 732+ 964D ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9651 31 00 70     	ld sp,Album_de_fotos
 734+ 9654
 735+ 9654 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9656 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9657 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9658
 739+ 9658 ED 73 1A 89  	ld (Stack_2),sp
 740+ 965C ED 7B 18 89  	ld sp,(Stack)
 741+ 9660
 742+ 9660              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9660
 744+ 9660 3E CD        	ld a,$cd
 745+ 9662 32 6A 96     	ld (Imprime),a
 746+ 9665 EB           	ex de,hl
 747+ 9666 22 6B 96     	ld (Imprime+1),hl
 748+ 9669 EB           	ex de,hl
 749+ 966A
 750+ 966A              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 966A
 752+ 966A 00 00 00     Imprime db 0,0,0
 753+ 966D
 754+ 966D ED 73 18 89  	ld (Stack),sp
 755+ 9671
 756+ 9671 3A 13 89     	ld a,(Numero_de_malotes)
 757+ 9674 3D           	dec a
 758+ 9675 28 09        	jr z,1F
 759+ 9677 32 13 89      	ld (Numero_de_malotes),a
 760+ 967A
 761+ 967A ED 7B 1A 89  	ld sp,(Stack_2)
 762+ 967E 18 D4        	jr 2B
 763+ 9680
 764+ 9680 AF           1 xor a
 765+ 9681 32 1A 89     	ld (Stack_2),a
 766+ 9684
 767+ 9684 C9           	ret
 768+ 9685
 769+ 9685              ; -----------------------------------------------------------------------------------
 770+ 9685              ;
 771+ 9685              ;	28/2/23
 772+ 9685              ;
 773+ 9685              ;	Pinta los disparos generados.
 774+ 9685
 775+ 9685              Extrae_foto_disparos
 776+ 9685
 777+ 9685 21 59 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9688 7E               ld a,(hl)
 779+ 9689 A7               and a
 780+ 968A C8               ret z
 781+ 968B
 782+ 968B 3A 42 89     	ld a,(Numero_de_disparotes)
 783+ 968E A7           	and a
 784+ 968F C8           	ret z
 785+ 9690 ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9694 31 58 71     	ld sp,Album_de_fotos_disparos
 787+ 9697
 788+ 9697 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9699 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 969A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 969B
 792+ 969B ED 73 1A 89  	ld (Stack_2),sp
 793+ 969F ED 7B 18 89  	ld sp,(Stack)
 794+ 96A3
 795+ 96A3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96A3
 797+ 96A3 3E CD        	ld a,$cd
 798+ 96A5 32 AD 96     	ld (Imprime2),a
 799+ 96A8 EB           	ex de,hl
 800+ 96A9 22 AE 96     	ld (Imprime2+1),hl
 801+ 96AC EB           	ex de,hl
 802+ 96AD
 803+ 96AD              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96AD
 805+ 96AD 00 00 00     Imprime2 db 0,0,0
 806+ 96B0
 807+ 96B0 3A 42 89     	ld a,(Numero_de_disparotes)
 808+ 96B3 3D           	dec a
 809+ 96B4 28 09        	jr z,1F
 810+ 96B6 32 42 89      	ld (Numero_de_disparotes),a
 811+ 96B9
 812+ 96B9 ED 7B 1A 89  	ld sp,(Stack_2)
 813+ 96BD 18 D8        	jr 2B
 814+ 96BF
 815+ 96BF AF           1 xor a
 816+ 96C0 32 1A 89     	ld (Stack_2),a
 817+ 96C3 C9           	ret
 818+ 96C4
 819+ 96C4              ; -----------------------------------------------------------------------------------
 820+ 96C4              ;
 821+ 96C4              ;	4/9/23
 822+ 96C4              ;
 823+ 96C4              ;	Rutina principal de pintado de Amadeus.
 824+ 96C4              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96C4
 826+ 96C4 21 B0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96C7 7E           	ld a,(hl)
 828+ 96C8 A7           	and a
 829+ 96C9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96CA
 831+ 96CA 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96CD A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96CE C8           	ret z
 834+ 96CF
 835+ 96CF              ; -----------------------------------
 836+ 96CF
 837+ 96CF ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96D3 31 B0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96D6
 840+ 96D6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96D8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96D9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96DA
 844+ 96DA ED 73 1A 89  	ld (Stack_2),sp
 845+ 96DE ED 7B 18 89  	ld sp,(Stack)
 846+ 96E2
 847+ 96E2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96E2
 849+ 96E2 3E CD        	ld a,$cd
 850+ 96E4 32 EC 96     	ld (Imprime_Amadeus),a
 851+ 96E7 EB           	ex de,hl
 852+ 96E8 22 ED 96     	ld (Imprime_Amadeus+1),hl
 853+ 96EB EB           	ex de,hl
 854+ 96EC
 855+ 96EC              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96EC
 857+ 96EC 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96EF
 859+ 96EF ED 73 18 89  	ld (Stack),sp
 860+ 96F3
 861+ 96F3 3A 13 89     	ld a,(Numero_de_malotes)
 862+ 96F6 3D           	dec a
 863+ 96F7 28 09        	jr z,1F
 864+ 96F9 32 13 89      	ld (Numero_de_malotes),a
 865+ 96FC
 866+ 96FC ED 7B 1A 89  	ld sp,(Stack_2)
 867+ 9700 18 D4        	jr 2B
 868+ 9702
 869+ 9702 AF           1 xor a
 870+ 9703 32 1A 89     	ld (Stack_2),a
 871+ 9706
 872+ 9706 C9           	ret
# file closed: Draw_XOR.asm
1672  9707              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9707              ;   índices de Rutinas de impresión.
   2+ 9707
   3+ 9707 17 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9709 44 97            defw Pinta_Amadeus_3x2
   5+ 970B
   6+ 970B 9A 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 970D 3A 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 970F EE 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9711
  10+ 9711 C4 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9713 C8 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9715 7C 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9717
  14+ 9717
  15+ 9717              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9717              ;
  17+ 9717              ;   12/12/22
  18+ 9717              ;
  19+ 9717              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9717              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9717              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9717              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9717              ;
  24+ 9717              ;   Modifica: DE y HL.
  25+ 9717
  26+ 9717 ED 73 18 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 971B FD F9        	ld sp,iy
  28+ 971D 06 10            ld b,16
  29+ 971F D1           1 pop de
  30+ 9720 7B               ld a,e
  31+ 9721 AE               xor (hl)
  32+ 9722 77           	ld (hl),a
  33+ 9723 23           	inc hl
  34+ 9724 7A               ld a,d
  35+ 9725 AE               xor (hl)
  36+ 9726 77           	ld (hl),a
  37+ 9727 2B           	dec hl
  38+ 9728 24           	inc h
  39+ 9729 7C               ld a,h
  40+ 972A E6 07            and 7
  41+ 972C 20 0A            jr nz,2F
  42+ 972E 7D               ld a,l
  43+ 972F C6 20            add a,$20
  44+ 9731 6F               ld l,a
  45+ 9732 38 04            jr c,2F
  46+ 9734 7C               ld a,h
  47+ 9735 D6 08            sub 8
  48+ 9737 67               ld h,a
  49+ 9738 7C           2 ld a,h
  50+ 9739 FE 58            cp $58
  51+ 973B 28 02            jr z,3F
  52+ 973D 10 E0            djnz 1B
  53+ 973F ED 7B 18 89  3 ld sp,(Stack)
  54+ 9743 C9           	ret
  55+ 9744
  56+ 9744 ED 73 18 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9748 FD F9        	ld sp,iy
  58+ 974A 06 08            ld b,8
  59+ 974C D1           1 pop de
  60+ 974D 7B               ld a,e
  61+ 974E AE               xor (hl)
  62+ 974F 77           	ld (hl),a
  63+ 9750 23           	inc hl
  64+ 9751 7A               ld a,d
  65+ 9752 AE               xor (hl)
  66+ 9753 77           	ld (hl),a
  67+ 9754 23           	inc hl
  68+ 9755 D1           	pop de
  69+ 9756 7B               ld a,e
  70+ 9757 AE               xor (hl)
  71+ 9758 77           	ld (hl),a
  72+ 9759 2B           	dec hl
  73+ 975A 2B           	dec hl
  74+ 975B 24           	inc h
  75+ 975C 7C               ld a,h
  76+ 975D E6 07            and 7
  77+ 975F 20 0A            jr nz,2F
  78+ 9761 7D               ld a,l
  79+ 9762 C6 20            add a,$20
  80+ 9764 6F               ld l,a
  81+ 9765 38 04            jr c,2F
  82+ 9767 7C               ld a,h
  83+ 9768 D6 08            sub 8
  84+ 976A 67               ld h,a
  85+ 976B 7C           2 ld a,h
  86+ 976C FE 58            cp $58
  87+ 976E 28 25            jr z,4F
  88+ 9770 7A               ld a,d
  89+ 9771 AE               xor (hl)
  90+ 9772 77               ld (hl),a
  91+ 9773 D1           	pop de
  92+ 9774 23           	inc hl
  93+ 9775 7B               ld a,e
  94+ 9776 AE               xor (hl)
  95+ 9777 77           	ld (hl),a
  96+ 9778 23           	inc hl
  97+ 9779 7A               ld a,d
  98+ 977A AE               xor (hl)
  99+ 977B 77           	ld (hl),a
 100+ 977C 2B           	dec hl
 101+ 977D 2B           	dec hl
 102+ 977E 24           	inc h
 103+ 977F 7C               ld a,h
 104+ 9780 E6 07            and 7
 105+ 9782 20 0A            jr nz,3F
 106+ 9784 7D               ld a,l
 107+ 9785 C6 20            add a,$20
 108+ 9787 6F               ld l,a
 109+ 9788 38 04            jr c,3F
 110+ 978A 7C               ld a,h
 111+ 978B D6 08            sub 8
 112+ 978D 67               ld h,a
 113+ 978E 7C           3 ld a,h
 114+ 978F FE 58            cp $58
 115+ 9791 28 02            jr z,4F
 116+ 9793 10 B7            djnz 1B
 117+ 9795 ED 7B 18 89  4 ld sp,(Stack)
 118+ 9799 C9           	ret
 119+ 979A
 120+ 979A              ; ---------------------------------------------------
 121+ 979A
 122+ 979A ED 73 18 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 979E FD F9        	ld sp,iy
 124+ 97A0
 125+ 97A0              ; >>>
 126+ 97A0
 127+ 97A0 06 10            ld b,16
 128+ 97A2 D1           1 pop de
 129+ 97A3 7A           	ld a,d
 130+ 97A4 AE           	xor (hl)
 131+ 97A5 77           	ld (hl),a
 132+ 97A6 24           	inc h
 133+ 97A7 7C               ld a,h
 134+ 97A8 E6 07            and 7
 135+ 97AA 20 0C            jr nz,2F
 136+ 97AC 7D               ld a,l
 137+ 97AD C6 20            add a,$20
 138+ 97AF 6F               ld l,a
 139+ 97B0 38 06            jr c,2F
 140+ 97B2 7C               ld a,h
 141+ 97B3 D6 08            sub 8
 142+ 97B5 67               ld h,a
 143+ 97B6 18 00            jr 2F
 144+ 97B8 7C           2 ld a,h
 145+ 97B9 FE 58            cp $58
 146+ 97BB 28 02            jr z,3F
 147+ 97BD 10 E3            djnz 1B
 148+ 97BF ED 7B 18 89  3 ld sp,(Stack)
 149+ 97C3 C9           	ret
 150+ 97C4
 151+ 97C4 ED 73 18 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97C8 FD F9        	ld sp,iy
 153+ 97CA
 154+ 97CA              ; >>>
 155+ 97CA
 156+ 97CA 06 10            ld b,16
 157+ 97CC D1           1 pop de
 158+ 97CD 7B           	ld a,e
 159+ 97CE AE           	xor (hl)
 160+ 97CF 77           	ld (hl),a
 161+ 97D0 24           	inc h
 162+ 97D1 7C               ld a,h
 163+ 97D2 E6 07            and 7
 164+ 97D4 20 0C            jr nz,2F
 165+ 97D6 7D               ld a,l
 166+ 97D7 C6 20            add a,$20
 167+ 97D9 6F               ld l,a
 168+ 97DA 38 06            jr c,2F
 169+ 97DC 7C               ld a,h
 170+ 97DD D6 08            sub 8
 171+ 97DF 67               ld h,a
 172+ 97E0 18 00            jr 2F
 173+ 97E2 7C           2 ld a,h
 174+ 97E3 FE 58            cp $58
 175+ 97E5 28 02            jr z,3F
 176+ 97E7 10 E3            djnz 1B
 177+ 97E9 ED 7B 18 89  3 ld sp,(Stack)
 178+ 97ED C9           	ret
 179+ 97EE
 180+ 97EE              ; ---------------------------------------------------
 181+ 97EE
 182+ 97EE ED 73 18 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97F2 FD F9        	ld sp,iy
 184+ 97F4 06 08            ld b,8
 185+ 97F6 D1           1 pop de
 186+ 97F7 7A           	ld a,d
 187+ 97F8 AE           	xor (hl)
 188+ 97F9 77           	ld (hl),a
 189+ 97FA 23           	inc hl
 190+ 97FB D1           	pop de
 191+ 97FC 7B           	ld a,e
 192+ 97FD AE           	xor (hl)
 193+ 97FE 77           	ld (hl),a
 194+ 97FF 2B           	dec hl
 195+ 9800 24            	inc h
 196+ 9801 7C               ld a,h
 197+ 9802 E6 07            and 7
 198+ 9804 20 0A            jr nz,2F
 199+ 9806 7D               ld a,l
 200+ 9807 C6 20            add a,$20
 201+ 9809 6F               ld l,a
 202+ 980A 38 04            jr c,2F
 203+ 980C 7C               ld a,h
 204+ 980D D6 08            sub 8
 205+ 980F 67               ld h,a
 206+ 9810 7C           2 ld a,h
 207+ 9811 FE 58            cp $58
 208+ 9813 28 20            jr z,4F
 209+ 9815 D1               pop de
 210+ 9816 7B           	ld a,e
 211+ 9817 AE           	xor (hl)
 212+ 9818 77           	ld (hl),a
 213+ 9819 23           	inc hl
 214+ 981A 7A           	ld a,d
 215+ 981B AE           	xor (hl)
 216+ 981C 77           	ld (hl),a
 217+ 981D 2B           	dec hl
 218+ 981E 24           	inc h
 219+ 981F 7C               ld a,h
 220+ 9820 E6 07            and 7
 221+ 9822 20 0A            jr nz,3F
 222+ 9824 7D               ld a,l
 223+ 9825 C6 20            add a,$20
 224+ 9827 6F               ld l,a
 225+ 9828 38 04            jr c,3F
 226+ 982A 7C               ld a,h
 227+ 982B D6 08            sub 8
 228+ 982D 67               ld h,a
 229+ 982E 7C           3 ld a,h
 230+ 982F FE 58            cp $58
 231+ 9831 28 02            jr z,4F
 232+ 9833 10 C1            djnz 1B
 233+ 9835 ED 7B 18 89  4 ld sp,(Stack)
 234+ 9839 C9           	ret
 235+ 983A
 236+ 983A ED 73 18 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 983E FD F9        	ld sp,iy
 238+ 9840 06 08            ld b,8
 239+ 9842 D1           1 pop de
 240+ 9843 D1           	pop de
 241+ 9844 7B           	ld a,e
 242+ 9845 AE           	xor (hl)
 243+ 9846 77           	ld (hl),a
 244+ 9847 24            	inc h
 245+ 9848 7C               ld a,h
 246+ 9849 E6 07            and 7
 247+ 984B 20 0A            jr nz,2F
 248+ 984D 7D               ld a,l
 249+ 984E C6 20            add a,$20
 250+ 9850 6F               ld l,a
 251+ 9851 38 04            jr c,2F
 252+ 9853 7C               ld a,h
 253+ 9854 D6 08            sub 8
 254+ 9856 67               ld h,a
 255+ 9857 7C           2 ld a,h
 256+ 9858 FE 58            cp $58
 257+ 985A 28 1B            jr z,4F
 258+ 985C D1               pop de
 259+ 985D 7A           	ld a,d
 260+ 985E AE           	xor (hl)
 261+ 985F 77           	ld (hl),a
 262+ 9860 24           	inc h
 263+ 9861 7C               ld a,h
 264+ 9862 E6 07            and 7
 265+ 9864 20 0A            jr nz,3F
 266+ 9866 7D               ld a,l
 267+ 9867 C6 20            add a,$20
 268+ 9869 6F               ld l,a
 269+ 986A 38 04            jr c,3F
 270+ 986C 7C               ld a,h
 271+ 986D D6 08            sub 8
 272+ 986F 67               ld h,a
 273+ 9870 7C           3 ld a,h
 274+ 9871 FE 58            cp $58
 275+ 9873 28 02            jr z,4F
 276+ 9875 10 CB            djnz 1B
 277+ 9877 ED 7B 18 89  4 ld sp,(Stack)
 278+ 987B C9           	ret
 279+ 987C
 280+ 987C ED 73 18 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9880 FD F9        	ld sp,iy
 282+ 9882 06 08            ld b,8
 283+ 9884 D1           1 pop de
 284+ 9885 7B           	ld a,e
 285+ 9886 AE           	xor (hl)
 286+ 9887 77           	ld (hl),a
 287+ 9888 23           	inc hl
 288+ 9889 7A           	ld a,d
 289+ 988A AE           	xor (hl)
 290+ 988B 77           	ld (hl),a
 291+ 988C 2B           	dec hl
 292+ 988D 24             	inc h
 293+ 988E 7C               ld a,h
 294+ 988F E6 07            and 7
 295+ 9891 20 0A            jr nz,2F
 296+ 9893 7D               ld a,l
 297+ 9894 C6 20            add a,$20
 298+ 9896 6F               ld l,a
 299+ 9897 38 04            jr c,2F
 300+ 9899 7C               ld a,h
 301+ 989A D6 08            sub 8
 302+ 989C 67               ld h,a
 303+ 989D 7C           2 ld a,h
 304+ 989E FE 58            cp $58
 305+ 98A0 28 21            jr z,4F
 306+ 98A2 D1               pop de
 307+ 98A3 7A           	ld a,d
 308+ 98A4 AE           	xor (hl)
 309+ 98A5 77           	ld (hl),a
 310+ 98A6 23           	inc hl
 311+ 98A7 D1               pop de
 312+ 98A8 7B           	ld a,e
 313+ 98A9 AE           	xor (hl)
 314+ 98AA 77           	ld (hl),a
 315+ 98AB 2B           	dec hl
 316+ 98AC 24           	inc h
 317+ 98AD 7C               ld a,h
 318+ 98AE E6 07            and 7
 319+ 98B0 20 0A            jr nz,3F
 320+ 98B2 7D               ld a,l
 321+ 98B3 C6 20            add a,$20
 322+ 98B5 6F               ld l,a
 323+ 98B6 38 04            jr c,3F
 324+ 98B8 7C               ld a,h
 325+ 98B9 D6 08            sub 8
 326+ 98BB 67               ld h,a
 327+ 98BC 7C           3 ld a,h
 328+ 98BD FE 58            cp $58
 329+ 98BF 28 02            jr z,4F
 330+ 98C1 10 C1            djnz 1B
 331+ 98C3 ED 7B 18 89  4 ld sp,(Stack)
 332+ 98C7 C9           	ret
 333+ 98C8
 334+ 98C8 ED 73 18 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98CC FD F9        	ld sp,iy
 336+ 98CE 06 08            ld b,8
 337+ 98D0 D1           1 pop de
 338+ 98D1 7B           	ld a,e
 339+ 98D2 AE           	xor (hl)
 340+ 98D3 77           	ld (hl),a
 341+ 98D4 24            	inc h
 342+ 98D5 7C               ld a,h
 343+ 98D6 E6 07            and 7
 344+ 98D8 20 0A            jr nz,2F
 345+ 98DA 7D               ld a,l
 346+ 98DB C6 20            add a,$20
 347+ 98DD 6F               ld l,a
 348+ 98DE 38 04            jr c,2F
 349+ 98E0 7C               ld a,h
 350+ 98E1 D6 08            sub 8
 351+ 98E3 67               ld h,a
 352+ 98E4 7C           2 ld a,h
 353+ 98E5 FE 58            cp $58
 354+ 98E7 28 1C            jr z,4F
 355+ 98E9 D1               pop de
 356+ 98EA 7A           	ld a,d
 357+ 98EB AE           	xor (hl)
 358+ 98EC 77           	ld (hl),a
 359+ 98ED 24           	inc h
 360+ 98EE 7C               ld a,h
 361+ 98EF E6 07            and 7
 362+ 98F1 20 0A            jr nz,3F
 363+ 98F3 7D               ld a,l
 364+ 98F4 C6 20            add a,$20
 365+ 98F6 6F               ld l,a
 366+ 98F7 38 04            jr c,3F
 367+ 98F9 7C               ld a,h
 368+ 98FA D6 08            sub 8
 369+ 98FC 67               ld h,a
 370+ 98FD 7C           3 ld a,h
 371+ 98FE FE 58            cp $58
 372+ 9900 28 03            jr z,4F
 373+ 9902 D1               pop de
 374+ 9903 10 CB            djnz 1B
 375+ 9905 ED 7B 18 89  4 ld sp,(Stack)
 376+ 9909 C9           	ret
 377+ 990A
 378+ 990A              ; ---------------------------------------------------
 379+ 990A              ;
 380+ 990A              ;   27/02/23
 381+ 990A              ;
 382+ 990A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 990A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 990A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 990A
 386+ 990A ED 73 18 89  Pinta_Disparo ld (Stack),sp
 387+ 990E FD F9            ld sp,iy
 388+ 9910 06 03            ld b,3
 389+ 9912 D1           1 pop de
 390+ 9913 7B               ld a,e
 391+ 9914 AE               xor (hl)
 392+ 9915 77               ld (hl),a
 393+ 9916 23               inc hl
 394+ 9917 7A               ld a,d
 395+ 9918 AE               xor (hl)
 396+ 9919 77               ld (hl),a
 397+ 991A 2B               dec hl
 398+ 991B
 399+ 991B 24               inc h
 400+ 991C 7C               ld a,h
 401+ 991D E6 07            and 7
 402+ 991F 20 0A            jr nz,2F
 403+ 9921 7D               ld a,l
 404+ 9922 C6 20            add a,$20
 405+ 9924 6F               ld l,a
 406+ 9925 38 04            jr c,2F
 407+ 9927 7C               ld a,h
 408+ 9928 D6 08            sub 8
 409+ 992A 67               ld h,a
 410+ 992B 7C           2 ld a,h
 411+ 992C FE 58            cp $58
 412+ 992E 28 02            jr z,3F
 413+ 9930
 414+ 9930 10 E0            djnz 1B
 415+ 9932 ED 7B 18 89  3 ld sp,(Stack)
 416+ 9936 C9               ret
 417+ 9937
# file closed: Rutinas_de_impresion_sprites.asm
1673  9937              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9937              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9937              ;
   3+ 9937              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9937              ;
   5+ 9937              ; *****************************************************************************************************************************************************************************************
   6+ 9937              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9937
   8+ 9937 7C           calcula_tercio ld a,h
   9+ 9938 E6 18        	and $18
  10+ 993A CB 2F        	sra a
  11+ 993C CB 2F        	sra a
  12+ 993E CB 2F        	sra a
  13+ 9940 C9           	ret
  14+ 9941
# file closed: calcula_tercio.asm
1674  9941              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9941              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9941              ;
   3+ 9941              ;
   4+ 9941              ;	CLS.
   5+ 9941              ;
   6+ 9941              ;	Limpia la pantalla y define sus atributos.
   7+ 9941              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9941              ;
   9+ 9941              ;	COLORES: 0 ..... NEGRO
  10+ 9941              ;    		 1 ..... AZUL
  11+ 9941              ; 			 2 ..... ROJO
  12+ 9941              ;			 3 ..... MAGENTA
  13+ 9941              ; 			 4 ..... VERDE
  14+ 9941              ; 			 5 ..... CIAN
  15+ 9941              ;			 6 ..... AMARILLO
  16+ 9941              ; 			 7 ..... BLANCO
  17+ 9941              ;
  18+ 9941              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9941              ;
  20+ 9941              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9941
  22+ 9941
  23+ 9941 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9944 11 01 40     	LD DE,$4001
  25+ 9947 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 994A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 994C ED B0        	LDIR
  28+ 994E 01 FF 02     	LD BC,767
  29+ 9951 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9952 ED B0        	LDIR
  31+ 9954 C9           	ret
  32+ 9955
# file closed: Cls.asm
1675  9955              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9955              ; ******************************************************************************************************************************************************************************************
   2+ 9955              ;
   3+ 9955              ;   20/05/23
   4+ 9955              ;
   5+ 9955              ;	Recompone_posicion_inicio
   6+ 9955              ;
   7+ 9955              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9955              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9955              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9955              ;	_ a una u otra rutina.
  11+ 9955
  12+ 9955              Recompone_posicion_inicio
  13+ 9955
  14+ 9955 2A DC 88     	ld hl,(Posicion_inicio)
  15+ 9958 7D           	ld a,l
  16+ 9959 E6 1F        	and $1f
  17+ 995B 28 16        	jr z,1F
  18+ 995D
  19+ 995D FE 1F        	cp $1f
  20+ 995F 28 0D        	jr z,3F
  21+ 9961
  22+ 9961 21 05 89     	ld hl,Ctrl_2
  23+ 9964 CB C6        	set 0,(hl)
  24+ 9966 2A CE 88     	ld hl,(Puntero_objeto)
  25+ 9969 22 08 89     	ld (Repone_puntero_objeto),hl
  26+ 996C 18 08        	jr 2F
  27+ 996E
  28+ 996E CD 0F 9B     3 call Mov_left
  29+ 9971 18 03        	jr 2F
  30+ 9973
  31+ 9973 CD F1 99     1 call Mov_right
  32+ 9976 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9979 22 CE 88     	ld (Puntero_objeto),hl
  34+ 997C C9           	ret
  35+ 997D
  36+ 997D              ; ******************************************************************************************************************************************************************************************
  37+ 997D              ;
  38+ 997D              ;   27/05/23
  39+ 997D              ;
  40+ 997D              ;	Mov_down
  41+ 997D              ;
  42+ 997D              ; 	Mueve el Sprite X px hacia abajo.
  43+ 997D              ;
  44+ 997D              ;
  45+ 997D              Mov_down
  46+ 997D
  47+ 997D CD DF 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9980              ;																	; _ repone (Puntero_objeto).
  49+ 9980 21 F4 88     	ld hl,Ctrl_0
  50+ 9983 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9985              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9985              ; 																	; _ en el caso de que no lo haya.
  53+ 9985 3A E2 88     	ld a,(Vel_down)
  54+ 9988 47           	ld b,a
  55+ 9989 2A CC 88         ld hl,(Posicion_actual)
  56+ 998C CD 37 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 998F E6 02        	and 2
  58+ 9991 28 0F        	jr z,1F
  59+ 9993
  60+ 9993              ; Nos encontramos en el último tercio de pantalla.
  61+ 9993              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9993
  63+ 9993 7C           	ld a,h
  64+ 9994 FE 57        	cp $57
  65+ 9996 20 0A        	jr nz,1F
  66+ 9998
  67+ 9998 7D           	ld a,l
  68+ 9999 C6 20        	add $20
  69+ 999B 30 05        	jr nc,1F
  70+ 999D
  71+ 999D              ; ------------------------------
  72+ 999D              ;	call Reaparece_arriba
  73+ 999D CD 9C 9C     	call Reinicio
  74+ 99A0              ; ------------------------------
  75+ 99A0
  76+ 99A0 18 08        	jr 3F
  77+ 99A2 CD 24 96     1 call NextScan
  78+ 99A5 22 CC 88     	ld (Posicion_actual),hl
  79+ 99A8 10 E2            djnz 2B
  80+ 99AA CD C2 9C     3 call Genera_coordenadas
  81+ 99AD C9           	ret
  82+ 99AE
  83+ 99AE              ; ******************************************************************************************************************************************************************************************
  84+ 99AE              ;
  85+ 99AE              ;   27/05/23
  86+ 99AE              ;
  87+ 99AE              ;	Mov_up
  88+ 99AE              ;
  89+ 99AE              ; 	Mueve el Sprite hacia arriba.
  90+ 99AE              ;
  91+ 99AE              ;
  92+ 99AE              Mov_up
  93+ 99AE
  94+ 99AE CD DF 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99B1              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99B1 21 F4 88     	ld hl,Ctrl_0
  97+ 99B4 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99B6              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99B6              ; 																		; _ en el caso de que no lo haya.
 100+ 99B6 3A E1 88     	ld a,(Vel_up)
 101+ 99B9 47           	ld b,a
 102+ 99BA 2A CC 88     	ld hl,(Posicion_actual)
 103+ 99BD CD 37 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99C0 A7           	and a
 105+ 99C1 20 10        	jr nz,1F
 106+ 99C3
 107+ 99C3              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99C3              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99C3
 110+ 99C3 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99C4 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99C6 20 0B            jr nz,1F
 113+ 99C8 7D               ld a,l
 114+ 99C9 D6 20            sub $20
 115+ 99CB 30 06            jr nc,1F
 116+ 99CD 25               dec h
 117+ 99CE
 118+ 99CE              ; -----------------------------
 119+ 99CE CD 7D 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99D1              ;	call Reinicio
 121+ 99D1              ; -----------------------------
 122+ 99D1
 123+ 99D1 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99D3 CD 33 96     1 call PreviousScan
 125+ 99D6 22 CC 88     	ld (Posicion_actual),hl
 126+ 99D9 10 E2            djnz 3B
 127+ 99DB CD C2 9C     2 call Genera_coordenadas
 128+ 99DE C9           	ret
 129+ 99DF
 130+ 99DF              ; -----------------------------
 131+ 99DF              ;
 132+ 99DF              ;	27/5/23
 133+ 99DF              ;
 134+ 99DF              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99DF              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99DF              ;
 137+ 99DF              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99DF              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99DF              ;
 140+ 99DF              ;	Modifica: A y (Puntero_objeto).
 141+ 99DF
 142+ 99DF 3A 05 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99E2 CB 47        	bit 0,a
 144+ 99E4 C8           	ret z
 145+ 99E5 CB 87        	res 0,a
 146+ 99E7 32 05 89     	ld (Ctrl_2),a
 147+ 99EA 2A 08 89     	ld hl,(Repone_puntero_objeto)
 148+ 99ED 22 CE 88     	ld (Puntero_objeto),hl
 149+ 99F0 C9           	ret
 150+ 99F1
 151+ 99F1              ; ******************************************************************************************************************************************************************************************
 152+ 99F1              ;
 153+ 99F1              ;	19/10/22
 154+ 99F1              ;
 155+ 99F1              ;	Mov_right.
 156+ 99F1              ;
 157+ 99F1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99F1              ;
 159+ 99F1
 160+ 99F1 21 F4 88     Mov_right ld hl,Ctrl_0
 161+ 99F4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99F6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99F6              ; 																	; _ en el caso de que no lo haya.
 164+ 99F6 3A F4 88     	ld a,(Ctrl_0)
 165+ 99F9 CB 77        	bit 6,a
 166+ 99FB 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99FD
 168+ 99FD CD 2B 9C     	call Stop_Amadeus_right
 169+ 9A00 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A01 18 4D        	jr 8F
 171+ 9A03
 172+ 9A03 3A D0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A06 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A08 20 46        	jr nz,8F
 175+ 9A0A
 176+ 9A0A 3A D2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A0D A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A0E 28 40        	jr z,8F
 179+ 9A10
 180+ 9A10              ; ---------- ---------- ----------
 181+ 9A10              ;
 182+ 9A10              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A10
 184+ 9A10 3A E0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A13 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A15 28 11        	jr z,1F
 187+ 9A17 38 06        	jr c,6F
 188+ 9A19 FE 04        	cp 4
 189+ 9A1B 28 14        	jr z,7F
 190+ 9A1D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A1F
 192+ 9A1F              ; ---------- ---------- ----------
 193+ 9A1F              ;
 194+ 9A1F              ; Perfiles de velocidad
 195+ 9A1F              ;
 196+ 9A1F
 197+ 9A1F 3A D2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A22 FE FE        	cp $fe
 199+ 9A24 20 2A        	jr nz,8F
 200+ 9A26 18 10        	jr 3F
 201+ 9A28 3A D2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A2B FE FD        	cp $fd
 203+ 9A2D 20 21        	jr nz,8F
 204+ 9A2F 18 07        	jr 3F
 205+ 9A31 3A D2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A34 FE FB        	cp $fb
 207+ 9A36 20 18        	jr nz,8F
 208+ 9A38
 209+ 9A38              ; ---------- ---------- ----------
 210+ 9A38
 211+ 9A38              3
 212+ 9A38 CD 6B 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A3B              ;	call Reinicio
 214+ 9A3B
 215+ 9A3B              ; ---------- ---------- ----------
 216+ 9A3B              ;
 217+ 9A3B              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A3B
 219+ 9A3B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A3D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A3E CD 57 9A     	call DESPLZ_DER
 222+ 9A41 C1           	pop bc
 223+ 9A42 10 F9        	djnz 5B
 224+ 9A44 2A CC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A47 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A48 22 CC 88     	ld (Posicion_actual),hl
 227+ 9A4B CD C2 9C     	call Genera_coordenadas
 228+ 9A4E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A50
 230+ 9A50              ; ---------- ---------- ----------
 231+ 9A50
 232+ 9A50 2A CC 88     8 ld hl,(Posicion_actual)
 233+ 9A53 CD 57 9A     	call DESPLZ_DER
 234+ 9A56 C9           2 ret
 235+ 9A57
 236+ 9A57              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A57              ;
 238+ 9A57              ;	22/9/22
 239+ 9A57              ;
 240+ 9A57
 241+ 9A57 CD 66 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A5A CD B2 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A5D CD DB 9A         call Ciclo_completo
 244+ 9A60 21 F4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A63 CB FE        	set 7,(hl)
 246+ 9A65 C9           	ret
 247+ 9A66
 248+ 9A66              ; ******************************************************************************************************************************************************************************************
 249+ 9A66              ;	15/02/23
 250+ 9A66              ;
 251+ 9A66
 252+ 9A66 3A E0 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A69 47           	ld b,a
 254+ 9A6A 2A D8 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A6D 23           1 inc hl
 256+ 9A6E 23           	inc hl
 257+ 9A6F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A71 22 D8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A74 CD 8C 8C     	call Extrae_address
 260+ 9A77 22 CE 88     	ld (Puntero_objeto),hl
 261+ 9A7A
 262+ 9A7A              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A7A
 264+ 9A7A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A7A              ; Cuántos movimientos hemos hecho ??
 266+ 9A7A              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A7A
 268+ 9A7A 2A D4 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A7D EB           	ex de,hl
 270+ 9A7E A7           	and a
 271+ 9A7F ED 52        	sbc hl,de
 272+ 9A81 CB 3D        	srl l
 273+ 9A83 3E 08        6 ld a,8
 274+ 9A85 95           	sub l
 275+ 9A86 30 1E        	jr nc,3F
 276+ 9A88
 277+ 9A88              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A88              ; B="0".
 279+ 9A88
 280+ 9A88 04           4 inc b
 281+ 9A89 3C           	inc a
 282+ 9A8A 20 FC        	jr nz,4B
 283+ 9A8C 78           	ld a,b
 284+ 9A8D 08           	ex af,af
 285+ 9A8E 2A D4 88     	ld hl,(Indice_Sprite_der)
 286+ 9A91 23           5 inc hl
 287+ 9A92 23           	inc hl
 288+ 9A93 10 FC        	djnz 5B
 289+ 9A95 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A98 CD 8C 8C     	call Extrae_address
 291+ 9A9B 22 CE 88     	ld (Puntero_objeto),hl
 292+ 9A9E
 293+ 9A9E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A9E              ; _(Posicion_actual).
 295+ 9A9E
 296+ 9A9E 21 CC 88     	ld hl,Posicion_actual
 297+ 9AA1 34           	inc (hl)
 298+ 9AA2 08               ex af,af
 299+ 9AA3 6F           	ld l,a
 300+ 9AA4 18 DD        	jr 6B
 301+ 9AA6
 302+ 9AA6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AA6
 304+ 9AA6 47           3 ld b,a
 305+ 9AA7 2A D6 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AAA 23           2 inc hl
 307+ 9AAB 23           	inc hl
 308+ 9AAC 10 FC        	djnz 2B
 309+ 9AAE 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AB1 C9           8 ret
 311+ 9AB2
 312+ 9AB2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AB2              ;
 314+ 9AB2              ;	24/7/22
 315+ 9AB2              ;
 316+ 9AB2              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AB2              ;
 318+ 9AB2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AB2              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AB2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AB2
 322+ 9AB2 3A D2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AB5 A7           	and a
 324+ 9AB6 20 1F        	jr nz,1F
 325+ 9AB8 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9ABA 32 D2 88         ld (CTRL_DESPLZ),a
 327+ 9ABD
 328+ 9ABD 21 CB 88     	ld hl,Columns
 329+ 9AC0 34           	inc (hl)
 330+ 9AC1 3A DE 88     	ld a,(Cuad_objeto)
 331+ 9AC4 E6 01        	and 1
 332+ 9AC6 28 0F        	jr z,1F
 333+ 9AC8 2A CC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ACB 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9ACC 22 CC 88     	ld (Posicion_actual),hl
 336+ 9ACF CD C2 9C     	call Genera_coordenadas
 337+ 9AD2 CD 37 9C     	call Inc_CTRL_DESPLZ
 338+ 9AD5 18 03        	jr 2F
 339+ 9AD7 CD 37 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ADA C9           2 ret
 341+ 9ADB
 342+ 9ADB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ADB              ;
 344+ 9ADB              ;	24/7/22
 345+ 9ADB              ;
 346+ 9ADB              ;	Ciclo_completo.
 347+ 9ADB              ;
 348+ 9ADB              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ADB              ;
 350+ 9ADB              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ADB              ; 	Decrementamos (Columns).
 352+ 9ADB              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ADB              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ADB
 355+ 9ADB
 356+ 9ADB 3A D2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9ADE FE FF        	cp $ff
 358+ 9AE0 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AE2 E6 F0        	and $f0
 360+ 9AE4 20 28        	jr nz,3F
 361+ 9AE6
 362+ 9AE6              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AE6
 364+ 9AE6 3A D2 88     	ld a,(CTRL_DESPLZ)
 365+ 9AE9 47           	ld b,a
 366+ 9AEA 3E F8        	ld a,$f8
 367+ 9AEC 80           	add b
 368+ 9AED 32 D2 88     	ld (CTRL_DESPLZ),a
 369+ 9AF0 18 1C        	jr 3F
 370+ 9AF2 21 CB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AF5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AF6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AF7 32 D2 88     	ld (CTRL_DESPLZ),a
 374+ 9AFA 3A DE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AFD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AFF 20 0A        	jr nz,2F
 377+ 9B01 2A CC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B04 23           	inc hl
 379+ 9B05 22 CC 88     	ld (Posicion_actual),hl
 380+ 9B08 CD C2 9C     	call Genera_coordenadas
 381+ 9B0B
 382+ 9B0B              ; Inicia el puntero de Sprite.
 383+ 9B0B
 384+ 9B0B CD A3 8C     2 call Inicia_puntero_objeto_der
 385+ 9B0E C9           3 ret
 386+ 9B0F
 387+ 9B0F              ; ******************************************************************************************************************************************************************************************
 388+ 9B0F              ;
 389+ 9B0F              ;	15/02/23
 390+ 9B0F              ;
 391+ 9B0F              ;	Mov_left.
 392+ 9B0F              ;
 393+ 9B0F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B0F              ;
 395+ 9B0F              Mov_left
 396+ 9B0F
 397+ 9B0F 21 F4 88     	ld hl,Ctrl_0
 398+ 9B12 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B14              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B14              ; 																	; _ en el caso de que no lo haya.
 401+ 9B14 3A F4 88     	ld a,(Ctrl_0)
 402+ 9B17 CB 77        	bit 6,a
 403+ 9B19 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B1B
 405+ 9B1B CD 31 9C     	call Stop_Amadeus_left
 406+ 9B1E C8           	ret z
 407+ 9B1F 20 4A        	jr nz,8F
 408+ 9B21
 409+ 9B21 3A D0 88     11 ld a,(Coordenada_X)
 410+ 9B24 A7           	and a
 411+ 9B25 20 44        	jr nz,8F
 412+ 9B27
 413+ 9B27 3A D2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B2A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B2B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B2D
 417+ 9B2D              ; ---------- ---------- ----------
 418+ 9B2D
 419+ 9B2D 3A DF 88     	ld a,(Vel_left)
 420+ 9B30 FE 02        	cp 2
 421+ 9B32 28 0F        	jr z,1F
 422+ 9B34 38 04        	jr c,6F
 423+ 9B36 FE 04        	cp 4
 424+ 9B38 28 12        	jr z,7F
 425+ 9B3A
 426+ 9B3A              ; ---------- ---------- ----------
 427+ 9B3A
 428+ 9B3A 3A D2 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B3D FE F8        	cp $f8
 430+ 9B3F 20 2A        	jr nz,8F
 431+ 9B41 18 10        	jr 4F
 432+ 9B43 3A D2 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B46 FE F9        	cp $f9
 434+ 9B48 20 21        	jr nz,8F
 435+ 9B4A 18 07        	jr 4F
 436+ 9B4C 3A D2 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B4F FE FB        	cp $fb
 438+ 9B51 20 18        	jr nz,8F
 439+ 9B53
 440+ 9B53              ; ---------- ---------- ----------
 441+ 9B53
 442+ 9B53              4
 443+ 9B53 CD 59 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B56              ;	call Reinicio
 445+ 9B56
 446+ 9B56              ; ---------- ---------- ----------
 447+ 9B56
 448+ 9B56 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B58 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B59
 451+ 9B59              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B59              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B59
 454+ 9B59 CD 72 9B     	call DESPLZ_IZQ
 455+ 9B5C C1           	pop bc
 456+ 9B5D 10 F9        	djnz 5B
 457+ 9B5F 2A CC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B62 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B63 22 CC 88     	ld (Posicion_actual),hl
 460+ 9B66 CD C2 9C     	call Genera_coordenadas
 461+ 9B69 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B6B
 463+ 9B6B              ; ---------- ---------- ----------
 464+ 9B6B
 465+ 9B6B              ; Movemos, no hay recolocación.
 466+ 9B6B
 467+ 9B6B 2A CC 88     8 ld hl,(Posicion_actual)
 468+ 9B6E CD 72 9B     	call DESPLZ_IZQ
 469+ 9B71 C9           2 ret
 470+ 9B72
 471+ 9B72              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B72              ;
 473+ 9B72              ;	22/9/22
 474+ 9B72
 475+ 9B72              DESPLZ_IZQ
 476+ 9B72
 477+ 9B72 CD 81 9B     	call Desplaza_izquierda
 478+ 9B75 CD CD 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B78 CD F5 9B     	call Ciclo_completo_2
 480+ 9B7B 21 F4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B7E CB BE        	res 7,(hl)
 482+ 9B80 C9           	ret
 483+ 9B81
 484+ 9B81              Desplaza_izquierda
 485+ 9B81
 486+ 9B81 3A DF 88     	ld a,(Vel_left)
 487+ 9B84 47           	ld b,a
 488+ 9B85 2A DA 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B88 23           1 inc hl
 490+ 9B89 23           	inc hl
 491+ 9B8A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B8C 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B8F CD 8C 8C     	call Extrae_address
 494+ 9B92 22 CE 88     	ld (Puntero_objeto),hl
 495+ 9B95
 496+ 9B95              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B95
 498+ 9B95              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B95              ; Cuántos movimientos hemos hecho ??
 500+ 9B95              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B95
 502+ 9B95 2A D6 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B98 EB           	ex de,hl
 504+ 9B99 A7           	and a
 505+ 9B9A ED 52        	sbc hl,de
 506+ 9B9C CB 3D        	srl l
 507+ 9B9E 3E 08        6 ld a,8
 508+ 9BA0 95           	sub l
 509+ 9BA1 30 1E        	jr nc,3F
 510+ 9BA3
 511+ 9BA3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BA3              ; B="0".
 513+ 9BA3
 514+ 9BA3 04           4 inc b
 515+ 9BA4 3C           	inc a
 516+ 9BA5 20 FC        	jr nz,4B
 517+ 9BA7 78           	ld a,b
 518+ 9BA8 08           	ex af,af
 519+ 9BA9 2A D6 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BAC 23           5 inc hl
 521+ 9BAD 23           	inc hl
 522+ 9BAE 10 FC        	djnz 5B
 523+ 9BB0 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BB3 CD 8C 8C     	call Extrae_address
 525+ 9BB6 22 CE 88     	ld (Puntero_objeto),hl
 526+ 9BB9
 527+ 9BB9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BB9              ; _(Posicion_actual).
 529+ 9BB9
 530+ 9BB9 21 CC 88     	ld hl,Posicion_actual
 531+ 9BBC 35           	dec (hl)
 532+ 9BBD 08           	ex af,af
 533+ 9BBE 6F           	ld l,a
 534+ 9BBF 18 DD        	jr 6B
 535+ 9BC1
 536+ 9BC1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BC1
 538+ 9BC1 47           3 ld b,a
 539+ 9BC2 2A D4 88     	ld hl,(Indice_Sprite_der)
 540+ 9BC5 23           2 inc hl
 541+ 9BC6 23           	inc hl
 542+ 9BC7 10 FC        	djnz 2B
 543+ 9BC9 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BCC C9           8 ret
 545+ 9BCD
 546+ 9BCD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BCD              ;
 548+ 9BCD              ;	modifica_parametros_1er_DESPLZ
 549+ 9BCD              ;
 550+ 9BCD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BCD              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BCD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BCD
 554+ 9BCD 3A D2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BD0 A7           	and a
 556+ 9BD1 20 1E        	jr nz,1F
 557+ 9BD3 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BD4 32 D2 88         ld (CTRL_DESPLZ),a
 559+ 9BD7 21 CB 88     	ld hl,Columns
 560+ 9BDA 34           	inc (hl)
 561+ 9BDB 3A DE 88     	ld a,(Cuad_objeto)
 562+ 9BDE E6 01        	and 1
 563+ 9BE0 20 0F        	jr nz,1F
 564+ 9BE2 2A CC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BE5 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BE6 22 CC 88     	ld (Posicion_actual),hl
 567+ 9BE9 CD C2 9C     	call Genera_coordenadas
 568+ 9BEC CD 48 9C     	call Dec_CTRL_DESPLZ
 569+ 9BEF 18 03        	jr 2F
 570+ 9BF1 CD 48 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BF4 C9           2 ret
 572+ 9BF5
 573+ 9BF5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BF5
 575+ 9BF5 3A D2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BF8 FE F7        	cp $f7
 577+ 9BFA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BFC 30 2C        	jr nc,3F
 579+ 9BFE
 580+ 9BFE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BFE
 582+ 9BFE 06 00        	ld b,0
 583+ 9C00 04           4 inc b
 584+ 9C01 3C           	inc a
 585+ 9C02 FE F7        	cp $f7
 586+ 9C04 20 FA        	jr nz,4B
 587+ 9C06 3E FF        	ld a,$ff
 588+ 9C08 90           	sub b
 589+ 9C09 32 D2 88     	ld (CTRL_DESPLZ),a
 590+ 9C0C 18 1C        	jr 3F
 591+ 9C0E
 592+ 9C0E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C0E
 594+ 9C0E 21 CB 88     1 ld hl,Columns
 595+ 9C11 35           	dec (hl)
 596+ 9C12 AF           	xor a
 597+ 9C13 32 D2 88     	ld (CTRL_DESPLZ),a
 598+ 9C16 3A DE 88     	ld a,(Cuad_objeto)
 599+ 9C19 E6 01        	and 1
 600+ 9C1B 28 0A        	jr z,2F
 601+ 9C1D 2A CC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C20 2B           	dec hl
 603+ 9C21 22 CC 88     	ld (Posicion_actual),hl
 604+ 9C24 CD C2 9C     	call Genera_coordenadas
 605+ 9C27
 606+ 9C27              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C27
 608+ 9C27 CD B6 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C2A C9           3 ret
 610+ 9C2B
 611+ 9C2B              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C2B              ;
 613+ 9C2B              ;	19/10/22
 614+ 9C2B              ;
 615+ 9C2B              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C2B              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C2B
 618+ 9C2B 3A D0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C2E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C30 C9           	ret
 621+ 9C31
 622+ 9C31              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C31              ;
 624+ 9C31              ;	19/10/22
 625+ 9C31              ;
 626+ 9C31              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C31              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C31
 629+ 9C31 3A D0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C34 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C36 C9           	ret
 632+ 9C37
 633+ 9C37              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C37              ;
 635+ 9C37              ;	24/7/22
 636+ 9C37              ;
 637+ 9C37              ;	Inc_CTRL_DESPLZ
 638+ 9C37              ;
 639+ 9C37              ;
 640+ 9C37              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C37
 642+ 9C37 21 D2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C3A 3A E0 88     	ld a,(Vel_right)
 644+ 9C3D A7           	and a
 645+ 9C3E 28 06        	jr z,1F
 646+ 9C40 47           	ld b,a
 647+ 9C41 34           3 inc (hl)
 648+ 9C42 10 FD        	djnz 3B
 649+ 9C44 18 01        	jr 2F
 650+ 9C46 34           1 inc (hl)
 651+ 9C47 C9           2 ret
 652+ 9C48
 653+ 9C48              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C48              ;
 655+ 9C48              ;	5/2/23
 656+ 9C48              ;
 657+ 9C48              ;	Dec_CTRL_DESPLZ
 658+ 9C48              ;
 659+ 9C48              ;
 660+ 9C48              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C48
 662+ 9C48 21 D2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C4B 3A DF 88     	ld a,(Vel_left)
 664+ 9C4E A7           	and a
 665+ 9C4F 28 06        	jr z,1F
 666+ 9C51 47           	ld b,a
 667+ 9C52 35           3 dec (hl)
 668+ 9C53 10 FD        	djnz 3B
 669+ 9C55 18 01        	jr 2F
 670+ 9C57 35           1 dec (hl)
 671+ 9C58 C9           2 ret
 672+ 9C59
 673+ 9C59              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C59
 675+ 9C59 2A CC 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C5C 01 1F 00     	ld bc,31
 677+ 9C5F A7           	and a
 678+ 9C60 ED 4A        	adc hl,bc
 679+ 9C62 22 CC 88     	ld (Posicion_actual),hl
 680+ 9C65 21 F4 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C68 CB C6        	set 0,(hl)
 682+ 9C6A C9           	ret
 683+ 9C6B
 684+ 9C6B              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C6B
 686+ 9C6B 2A CC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C6E 01 1F 00     	ld bc,31
 688+ 9C71 A7           	and a
 689+ 9C72 ED 42        	sbc hl,bc
 690+ 9C74 22 CC 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C77 21 F4 88     	ld hl,Ctrl_0
 692+ 9C7A CB CE        	set 1,(hl)
 693+ 9C7C C9           	ret
 694+ 9C7D
 695+ 9C7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C7D
 697+ 9C7D 24           Reaparece_abajo inc h
 698+ 9C7E 01 E0 17     	ld bc,$17e0
 699+ 9C81 A7           	and a
 700+ 9C82 ED 4A        	adc hl,bc
 701+ 9C84 22 CC 88     	ld (Posicion_actual),hl
 702+ 9C87 21 F4 88     	ld hl,Ctrl_0
 703+ 9C8A CB D6        	set 2,(hl)
 704+ 9C8C C9           	ret
 705+ 9C8D
 706+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C8D
 708+ 9C8D 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C90 A7           	and a
 710+ 9C91 ED 42        	sbc hl,bc
 711+ 9C93 22 CC 88     	ld (Posicion_actual),hl
 712+ 9C96 21 F4 88     	ld hl,Ctrl_0
 713+ 9C99 CB DE        	set 3,(hl)
 714+ 9C9B C9           	ret
 715+ 9C9C
 716+ 9C9C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C9C              ;
 718+ 9C9C              ;	15/07/23
 719+ 9C9C
 720+ 9C9C              Reinicio
 721+ 9C9C
 722+ 9C9C              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C9C
 724+ 9C9C AF           	xor a
 725+ 9C9D 21 F9 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CA0 CD BE 9C     	call Limpia_contenido_hl
 727+ 9CA3
 728+ 9CA3 21 CC 88     	ld hl,Posicion_actual
 729+ 9CA6 CD BE 9C     	call Limpia_contenido_hl
 730+ 9CA9
 731+ 9CA9 CD EE 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CAC CD 78 9F     	call Inicia_Puntero_mov
 733+ 9CAF
 734+ 9CAF 21 FB 88     	ld hl,Incrementa_puntero
 735+ 9CB2 06 05        	ld b,5
 736+ 9CB4 77           1 ld (hl),a
 737+ 9CB5 23           	inc hl
 738+ 9CB6 10 FC        	djnz 1B
 739+ 9CB8
 740+ 9CB8 21 05 89     	ld hl,Ctrl_2
 741+ 9CBB CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CBD
 743+ 9CBD C9           	ret
 744+ 9CBE
 745+ 9CBE 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CBF 23           	inc hl
 747+ 9CC0 77           	ld (hl),a
 748+ 9CC1 C9           	ret
 749+ 9CC2
 750+ 9CC2
# file closed: Direcciones.asm
1676  9CC2              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CC2              ; ------------------------------------------------------------------------
   2+ 9CC2              ;
   3+ 9CC2              ;	02/04/23
   4+ 9CC2              ;
   5+ 9CC2              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CC2              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CC2              ;
   8+ 9CC2              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CC2              ;
  10+ 9CC2              ;	Modifica: A,BC y DE.
  11+ 9CC2
  12+ 9CC2 C5           Genera_coordenadas push bc
  13+ 9CC3 E5           	push hl
  14+ 9CC4 D5           	push de
  15+ 9CC5
  16+ 9CC5 2A CC 88     	ld hl,(Posicion_actual)
  17+ 9CC8
  18+ 9CC8 7D           	ld a,l
  19+ 9CC9 E6 1F        	and $1f
  20+ 9CCB 32 D0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CCE
  22+ 9CCE CD 37 99     	call calcula_tercio
  23+ 9CD1 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CD2
  25+ 9CD2 1E 00        	ld e,0
  26+ 9CD4 7D           	ld a,l
  27+ 9CD5 E6 E0        	and $e0
  28+ 9CD7 28 01        	jr z,1F
  29+ 9CD9 04           	inc b
  30+ 9CDA
  31+ 9CDA 04           1 inc b
  32+ 9CDB 05           	dec b
  33+ 9CDC 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CDE              ;														; _ , salimos.
  35+ 9CDE 1C           3 inc e
  36+ 9CDF D6 20        	sub 32
  37+ 9CE1 20 FB        	jr nz,3B
  38+ 9CE3 10 F5        	djnz 1B
  39+ 9CE5
  40+ 9CE5 7B           2 ld a,e
  41+ 9CE6 32 D1 88     	ld (Coordenada_y),a
  42+ 9CE9
  43+ 9CE9 D1           	pop de
  44+ 9CEA E1           	pop hl
  45+ 9CEB C1           	pop bc
  46+ 9CEC
  47+ 9CEC C9           	ret
  48+ 9CED
  49+ 9CED              ; ------------------------------------------------------------------------
  50+ 9CED              ;	28/05/23
  51+ 9CED              ;
  52+ 9CED              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CED              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CED              ;
  55+ 9CED              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CED              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CED              ;
  58+ 9CED              ;		DE="$120d"
  59+ 9CED              ;
  60+ 9CED              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CED              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CED              ;
  63+ 9CED              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CED
  65+ 9CED              ;	Modifica: A,BC y DE.
  66+ 9CED
  67+ 9CED
  68+ 9CED              Genera_coordenadas_disparo
  69+ 9CED
  70+ 9CED              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CED
  72+ 9CED 7D           	ld a,l
  73+ 9CEE E6 1F        	and $1f
  74+ 9CF0 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CF1 CD 37 99     	call calcula_tercio
  76+ 9CF4 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CF5 1E 00        	ld e,0
  78+ 9CF7 7D           	ld a,l
  79+ 9CF8 E6 E0        	and $e0
  80+ 9CFA 28 01        	jr z,1F
  81+ 9CFC 04           	inc b
  82+ 9CFD 1C           1 inc e
  83+ 9CFE D6 20        	sub 32
  84+ 9D00 20 FB        	jr nz,1B
  85+ 9D02 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D04 C9           	ret
  87+ 9D05
# file closed: Genera_coordenadas.asm
1677  9D05              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D05              ; Relojes y temporizaciones.
   2+ 9D05
   3+ 9D05              ; ------------------------------------------------------
   4+ 9D05              ;
   5+ 9D05              ;	16/7/23
   6+ 9D05              ;
   7+ 9D05              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D05              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D05              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D05              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D05              ;
  12+ 9D05              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D05              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D05
  15+ 9D05              ; Disparo_entidad db 1
  16+ 9D05              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D05              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D05
  19+ 9D05              Habilita_disparos
  20+ 9D05
  21+ 9D05 7E           	ld a,(hl)
  22+ 9D06 A7           	and a
  23+ 9D07 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D08
  25+ 9D08 EB           	ex de,hl
  26+ 9D09
  27+ 9D09 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D0A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D0B
  30+ 9D0B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D0B
  32+ 9D0B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D0C 7E           	ld a,(hl)
  34+ 9D0D 23           	inc hl
  35+ 9D0E 77           	ld (hl),a
  36+ 9D0F
  37+ 9D0F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D10 3E 01        	ld a,1
  39+ 9D12 77           	ld (hl),a
  40+ 9D13 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1678  9D14              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D14
   2+ 9D14
   3+ 9D14              ;   07/07/23
   4+ 9D14              ;
   5+ 9D14              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D14              ;
   7+ 9D14              ;   Codificación:
   8+ 9D14              ;
   9+ 9D14              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D14              ;
  11+ 9D14              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D14              ;
  13+ 9D14              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D14              ;
  15+ 9D14              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D14              ;
  17+ 9D14              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D14              ;                               ..... %01000010 Vel_up 4
  19+ 9D14              ;                                               Vel_down 2
  20+ 9D14              ;                               ..... $42
  21+ 9D14              ;
  22+ 9D14              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D14              ;
  24+ 9D14              ;                               ..... %01000010 Vel_left 4
  25+ 9D14              ;                                               Vel_right 2
  26+ 9D14              ;                               ..... $42
  27+ 9D14              ;
  28+ 9D14              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D14              ;
  30+ 9D14              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D14              ;
  32+ 9D14              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D14              ;
  34+ 9D14              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D14              ;                                     $53
  36+ 9D14              ;
  37+ 9D14              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D14              ;
  39+ 9D14              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D14              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D14              ;
  42+ 9D14              ;                       Arriba ..... $81
  43+ 9D14              ;                       Arriba - izquierda ..... $a1
  44+ 9D14              ;                       Arriba - derecha ..... $91
  45+ 9D14              ;
  46+ 9D14              ;                       Abajo ..... $41
  47+ 9D14              ;                       Abajo - izquierda ..... $61
  48+ 9D14              ;                       Abajo - derecha ..... $51
  49+ 9D14              ;
  50+ 9D14              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D14              ;
  52+ 9D14              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D14              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D14              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D14              ;
  56+ 9D14              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D14              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D14              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D14              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D14              ;
  61+ 9D14              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D14              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D14              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D14              ;
  65+ 9D14              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D14              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D14              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D14              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D14
  70+ 9D14              ; ----- ----- ----- ----- -----
  71+ 9D14
  72+ 9D14 40 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D16 48 9D            defw F_1
  74+ 9D18 52 9D            defw F_2
  75+ 9D1A 5C 9D            defw Codo_abajo_derecha
  76+ 9D1C 90 9D            defw Derecha_y_subiendo
  77+ 9D1E 9A 9D            defw Derecha_y_subiendo_1
  78+ 9D20 A4 9D            defw F_3
  79+ 9D22 AE 9D            defw F_4
  80+ 9D24 B8 9D            defw Derecha_y_bajando
  81+ 9D26 C2 9D            defw Derecha_y_bajando_1
  82+ 9D28 CC 9D            defw Derecha_y_bajando_2
  83+ 9D2A D6 9D            defw Codo_derecha_abajo
  84+ 9D2C 06 9E            defw Codo_abajo_izq.
  85+ 9D2E 3A 9E            defw Izquierda_y_subiendo
  86+ 9D30 44 9E            defw Izquierda_y_subiendo_1
  87+ 9D32 4E 9E            defw F_5
  88+ 9D34 58 9E            defw F_6
  89+ 9D36 62 9E            defw Izquierda_y_bajando
  90+ 9D38 6C 9E            defw Izquierda_y_bajando_1
  91+ 9D3A 76 9E            defw Izquierda_y_bajando_2
  92+ 9D3C 80 9E            defw Codo_izquierda_abajo
  93+ 9D3E 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D40
  95+ 9D40 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D44 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D48
  98+ 9D48 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D4C 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D50 08 00
 100+ 9D52 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D56 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D5A 0F FE
 102+ 9D5C
 103+ 9D5C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D60 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D64 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D68 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D6C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D70 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D74 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D78 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D7C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D80 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D84 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D88 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D8C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D90
 117+ 9D90 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D94 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D98 06 00
 119+ 9D9A
 120+ 9D9A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D9E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DA2 02 00
 122+ 9DA4
 123+ 9DA4 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DA8 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DAC 04 00
 125+ 9DAE 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DB2 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DB6 08 00
 127+ 9DB8
 128+ 9DB8 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DBC 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DC0 02 00
 130+ 9DC2
 131+ 9DC2 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DC6 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DCA 06 00
 133+ 9DCC
 134+ 9DCC 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DD0 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DD4 06 00
 136+ 9DD6
 137+ 9DD6              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DD6
 139+ 9DD6 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DDA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DDE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DE2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DEA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DF2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DFA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DFE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E02 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E06
 152+ 9E06 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E0A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E0E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E12 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E16 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E1A 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E1E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E22 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E26 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E2A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E2E 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E32 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E36 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E3A
 166+ 9E3A 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E3E 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E42 06 00
 168+ 9E44
 169+ 9E44 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E48 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E4C 02 00
 171+ 9E4E
 172+ 9E4E 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E52 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E56 04 00
 174+ 9E58 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E5C 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E60 08 00
 176+ 9E62
 177+ 9E62 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E66 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E6A 02 00
 179+ 9E6C
 180+ 9E6C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E70 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E74 06 00
 182+ 9E76
 183+ 9E76 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E7A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E7E 06 00
 185+ 9E80
 186+ 9E80 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E84 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E88 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E8C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E90 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E94 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E98 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E9C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EA0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EA4 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EA8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EAC 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EB0
 199+ 9EB0              ; ----- ----- ----- ----- -----
 200+ 9EB0              ;
 201+ 9EB0              ;   27/06/23
 202+ 9EB0
 203+ 9EB0              Movimiento
 204+ 9EB0
 205+ 9EB0              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EB0
 207+ 9EB0              ;    ld hl,(Posicion_actual)
 208+ 9EB0
 209+ 9EB0 3A 05 89         ld a,(Ctrl_2)
 210+ 9EB3 CB 57            bit 2,a
 211+ 9EB5 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EB7
 213+ 9EB7 2A F7 88         ld hl,(Puntero_mov)
 214+ 9EBA 7E               ld a,(hl)
 215+ 9EBB
 216+ 9EBB              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EBB
 218+ 9EBB              Inicia_desplazamiento.
 219+ 9EBB
 220+ 9EBB              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EBB
 222+ 9EBB CD AF 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EBE
 224+ 9EBE              ; Iniciamos (Repetimos_mov).
 225+ 9EBE
 226+ 9EBE 7E               ld a,(hl)
 227+ 9EBF E6 0F            and $0f
 228+ 9EC1 32 FD 88         ld (Repetimos_desplazamiento),a
 229+ 9EC4 32 FE 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EC7
 231+ 9EC7              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EC7
 233+ 9EC7 23               inc hl
 234+ 9EC8 7E               ld a,(hl)
 235+ 9EC9 32 00 89         ld (Cola_de_desplazamiento),a
 236+ 9ECC 2B               dec hl
 237+ 9ECD
 238+ 9ECD 21 05 89         ld hl,Ctrl_2
 239+ 9ED0 CB D6            set 2,(hl)
 240+ 9ED2
 241+ 9ED2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9ED2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9ED2
 244+ 9ED2              Desplazamiento_iniciado
 245+ 9ED2
 246+ 9ED2 CD 83 9F         call Aplica_desplazamiento
 247+ 9ED5
 248+ 9ED5 3A 05 89         ld a,(Ctrl_2)
 249+ 9ED8 CB 67            bit 4,a
 250+ 9EDA C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EDB
 252+ 9EDB 21 FD 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EDE 35               dec (hl)
 254+ 9EDF C0               ret nz
 255+ 9EE0
 256+ 9EE0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EE0              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EE0              ; Analiza (Cola_de_desplazamiento).
 259+ 9EE0
 260+ 9EE0 3A 00 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EE3 A7               and a
 262+ 9EE4 CC D8 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EE7 28 30            jr z,Reinicia_el_movimiento
 264+ 9EE9
 265+ 9EE9 FE FF            cp $ff
 266+ 9EEB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EED
 268+ 9EED FE FE            cp $fe
 269+ 9EEF CC 5C 9F         call z,Fijamos_bucle
 270+ 9EF2 28 25            jr z,Reinicia_el_movimiento
 271+ 9EF4
 272+ 9EF4 FE FD            cp $fd
 273+ 9EF6 20 11            jr nz,1F
 274+ 9EF8
 275+ 9EF8              ; ---
 276+ 9EF8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EF8
 278+ 9EF8 3A 05 89         ld a,(Ctrl_2)
 279+ 9EFB CB 5F            bit 3,a
 280+ 9EFD 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EFF
 282+ 9EFF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EFF
 284+ 9EFF 21 05 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F02 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F04
 287+ 9F04 CD 6D 9F         call Inicia_Repetimos_movimiento
 288+ 9F07 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F09              ; ---
 290+ 9F09
 291+ 9F09 FE 01        1 cp 1
 292+ 9F0B CA 46 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F0E
 294+ 9F0E 3D               dec a
 295+ 9F0F 32 00 89         ld (Cola_de_desplazamiento),a
 296+ 9F12
 297+ 9F12 3A FE 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F15 32 FD 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F18              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F18 C9               ret
 301+ 9F19
 302+ 9F19              Reinicia_el_movimiento
 303+ 9F19
 304+ 9F19 3A 05 89         ld a,(Ctrl_2)
 305+ 9F1C CB 5F            bit 3,a
 306+ 9F1E 28 1B            jr z,2F
 307+ 9F20
 308+ 9F20              ; (Cola_de_desplazamiento)="254".
 309+ 9F20
 310+ 9F20 21 FF 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F23 35               dec (hl)
 312+ 9F24 20 15            jr nz,2F
 313+ 9F26
 314+ 9F26              ; Fin de las repeticiones del último movimiento.
 315+ 9F26
 316+ 9F26 21 05 89         ld hl,Ctrl_2
 317+ 9F29 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F2B
 319+ 9F2B 2A F7 88         ld hl,(Puntero_mov)
 320+ 9F2E 23               inc hl
 321+ 9F2F 23               inc hl
 322+ 9F30 23               inc hl
 323+ 9F31 22 F7 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F34              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F34 7E               ld a,(hl)
 326+ 9F35 32 00 89         ld (Cola_de_desplazamiento),a
 327+ 9F38
 328+ 9F38 C3 E0 9E         jp Cola
 329+ 9F3B
 330+ 9F3B CD 78 9F     2 call Inicia_Puntero_mov
 331+ 9F3E
 332+ 9F3E 21 05 89         ld hl,Ctrl_2
 333+ 9F41 CB 96            res 2,(hl)
 334+ 9F43
 335+ 9F43 C3 B0 9E         jp Movimiento
 336+ 9F46
 337+ 9F46              Siguiente_desplazamiento
 338+ 9F46
 339+ 9F46              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F46              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F46
 342+ 9F46 21 05 89         ld hl,Ctrl_2
 343+ 9F49 CB 96            res 2,(hl)
 344+ 9F4B
 345+ 9F4B 2A F7 88         ld hl,(Puntero_mov)
 346+ 9F4E 23               inc hl
 347+ 9F4F 23               inc hl
 348+ 9F50 22 F7 88         ld (Puntero_mov),hl
 349+ 9F53
 350+ 9F53 7E               ld a,(hl)
 351+ 9F54 A7               and a
 352+ 9F55 CC D8 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F58 CA 19 9F         jp z,Reinicia_el_movimiento
 354+ 9F5B
 355+ 9F5B C9               ret
 356+ 9F5C              ; Subrutinas -----------------------------------------
 357+ 9F5C              ; ---------- --------- --------- ---------- ----------
 358+ 9F5C              ;
 359+ 9F5C              ;   24/07/23
 360+ 9F5C              ;
 361+ 9F5C              ;   Fijamos_bucle
 362+ 9F5C              ;
 363+ 9F5C              ;
 364+ 9F5C
 365+ 9F5C              Fijamos_bucle
 366+ 9F5C
 367+ 9F5C 3A FB 88         ld a,(Incrementa_puntero)
 368+ 9F5F 3C               inc a
 369+ 9F60 32 FC 88         ld (Incrementa_puntero_backup),a
 370+ 9F63
 371+ 9F63 CD D8 9F         call Incrementa_Puntero_indice_mov
 372+ 9F66 2A F5 88         ld hl,(Puntero_indice_mov)
 373+ 9F69 22 F9 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F6C C9               ret
 375+ 9F6D
 376+ 9F6D              ; ---------- --------- --------- ---------- ----------
 377+ 9F6D              ;
 378+ 9F6D              ;   07/7/23
 379+ 9F6D              ;
 380+ 9F6D              ;   Inicia_Repetimos_movimiento
 381+ 9F6D              ;
 382+ 9F6D              ;
 383+ 9F6D
 384+ 9F6D              Inicia_Repetimos_movimiento
 385+ 9F6D
 386+ 9F6D              ; Iniciamos (Repetimos_movimiento).
 387+ 9F6D
 388+ 9F6D DD 2A F7 88      ld ix,(Puntero_mov)
 389+ 9F71 DD 7E 02         ld a,(ix+2)
 390+ 9F74 32 FF 88         ld (Repetimos_movimiento),a
 391+ 9F77
 392+ 9F77 C9               ret
 393+ 9F78
 394+ 9F78              ; ---------- --------- --------- ---------- ----------
 395+ 9F78              ;
 396+ 9F78              ;   26/6/23
 397+ 9F78              ;
 398+ 9F78              ;   Inicia_Puntero_mov
 399+ 9F78              ;
 400+ 9F78              ;
 401+ 9F78
 402+ 9F78 2A F5 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F7B 5E               ld e,(hl)
 404+ 9F7C 23               inc hl
 405+ 9F7D 56               ld d,(hl)
 406+ 9F7E EB               ex de,hl
 407+ 9F7F 22 F7 88         ld (Puntero_mov),hl
 408+ 9F82 C9               ret
 409+ 9F83
 410+ 9F83              ; ---------- --------- --------- ---------- ----------
 411+ 9F83              ;
 412+ 9F83              ;   27/06/23
 413+ 9F83              ;
 414+ 9F83              ;   Aplica_movimiento.
 415+ 9F83
 416+ 9F83              Aplica_desplazamiento
 417+ 9F83
 418+ 9F83              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F83
 420+ 9F83 2A F7 88         ld hl, (Puntero_mov)
 421+ 9F86
 422+ 9F86 7E               ld a,(hl)
 423+ 9F87 E6 F0            and $f0
 424+ 9F89 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F8A
 426+ 9F8A CB 7E            bit 7,(hl)
 427+ 9F8C 28 03            jr z,1F
 428+ 9F8E CD AE 99         call Mov_up
 429+ 9F91 2A F7 88     1 ld hl, (Puntero_mov)
 430+ 9F94 CB 76            bit 6,(hl)
 431+ 9F96 28 03            jr z,2F
 432+ 9F98 CD 7D 99         call Mov_down
 433+ 9F9B 2A F7 88     2 ld hl, (Puntero_mov)
 434+ 9F9E CB 6E            bit 5,(hl)
 435+ 9FA0 28 03            jr z,3F
 436+ 9FA2 CD 0F 9B         call Mov_left
 437+ 9FA5 2A F7 88     3 ld hl, (Puntero_mov)
 438+ 9FA8 CB 66            bit 4,(hl)
 439+ 9FAA C8               ret z
 440+ 9FAB CD F1 99         call Mov_right
 441+ 9FAE C9               ret
 442+ 9FAF
 443+ 9FAF              ; ---------- --------- --------- ---------- ----------
 444+ 9FAF              ;
 445+ 9FAF              ;   26/06/23
 446+ 9FAF              ;
 447+ 9FAF              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FAF
 449+ 9FAF              Ajusta_velocidad_desplazamiento
 450+ 9FAF
 451+ 9FAF              ; 1er byte de la cadena de movimiento.
 452+ 9FAF              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FAF
 454+ 9FAF CD CD 9F         call Extrae_nibble_alto
 455+ 9FB2
 456+ 9FB2 32 E1 88         ld (Vel_up),a
 457+ 9FB5 79               ld a,c
 458+ 9FB6 E6 0F            and $0f
 459+ 9FB8 32 E2 88         ld (Vel_down),a
 460+ 9FBB
 461+ 9FBB              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FBB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FBB
 464+ 9FBB 23               inc hl
 465+ 9FBC CD CD 9F         call Extrae_nibble_alto
 466+ 9FBF
 467+ 9FBF 32 DF 88         ld (Vel_left),a
 468+ 9FC2 79               ld a,c
 469+ 9FC3 E6 0F            and $0f
 470+ 9FC5 32 E0 88         ld (Vel_right),a
 471+ 9FC8
 472+ 9FC8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FC8
 474+ 9FC8 23               inc hl
 475+ 9FC9 22 F7 88         ld (Puntero_mov),hl
 476+ 9FCC C9               ret
 477+ 9FCD
 478+ 9FCD 06 04        Extrae_nibble_alto ld b,4
 479+ 9FCF 7E               ld a,(hl)
 480+ 9FD0 4F               ld c,a
 481+ 9FD1 E6 F0            and $f0
 482+ 9FD3 CB 3F        1 srl a
 483+ 9FD5 10 FC            djnz 1B
 484+ 9FD7 C9               ret
 485+ 9FD8
 486+ 9FD8              ; ---------- --------- --------- ---------- ----------
 487+ 9FD8              ;
 488+ 9FD8              ;   5/7/23
 489+ 9FD8              ;
 490+ 9FD8              ;   Incrementa_Puntero_indice_mov
 491+ 9FD8
 492+ 9FD8              Incrementa_Puntero_indice_mov
 493+ 9FD8
 494+ 9FD8 21 FB 88         ld hl,Incrementa_puntero
 495+ 9FDB 34               inc (hl)
 496+ 9FDC
 497+ 9FDC 2A F5 88         ld hl,(Puntero_indice_mov)
 498+ 9FDF 01 02 00         ld bc,2
 499+ 9FE2 A7               and a
 500+ 9FE3 09               add hl,bc
 501+ 9FE4 22 F5 88         ld (Puntero_indice_mov),hl
 502+ 9FE7
 503+ 9FE7 7E               ld a,(hl)
 504+ 9FE8 A7               and a
 505+ 9FE9
 506+ 9FE9              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FE9
 508+ 9FE9              ;    jr z,$
 509+ 9FE9
 510+ 9FE9              ;! Reinicia el Patrón de movimiento.
 511+ 9FE9
 512+ 9FE9 CC EE 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FEC
 514+ 9FEC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FED
 516+ 9FED C9               ret
 517+ 9FEE
 518+ 9FEE
 519+ 9FEE              ; ---------- --------- --------- ---------- ----------
 520+ 9FEE              ;
 521+ 9FEE              ;   24/07/23
 522+ 9FEE              ;
 523+ 9FEE              ;   Inicializa_Puntero_indice_mov
 524+ 9FEE
 525+ 9FEE              Inicializa_Puntero_indice_mov
 526+ 9FEE
 527+ 9FEE              ; Existe etiqueta de bucle principal???
 528+ 9FEE
 529+ 9FEE 2A F9 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FF1 24               inc h
 531+ 9FF2 25               dec h
 532+ 9FF3 28 05            jr z,2F
 533+ 9FF5
 534+ 9FF5 22 F5 88         ld (Puntero_indice_mov),hl
 535+ 9FF8 18 14            jr 3F
 536+ 9FFA
 537+ 9FFA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FFA
 539+ 9FFA 3A FB 88     2 ld a,(Incrementa_puntero)
 540+ 9FFD 47               ld b,a
 541+ 9FFE
 542+ 9FFE 2A F5 88         ld hl,(Puntero_indice_mov)
 543+ A001 2B           1 dec hl
 544+ A002 2B               dec hl
 545+ A003 10 FC            djnz 1B
 546+ A005 22 F5 88         ld (Puntero_indice_mov),hl
 547+ A008
 548+ A008 AF               xor a
 549+ A009 32 FB 88         ld (Incrementa_puntero),a
 550+ A00C 18 06            jr 4F
 551+ A00E
 552+ A00E 3A FC 88     3 ld a,(Incrementa_puntero_backup)
 553+ A011 32 FB 88         ld (Incrementa_puntero),a
 554+ A014 C9           4 ret
 555+ A015
 556+ A015
 557+ A015
# file closed: Patrones_de_mov.asm
1679  A015              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A015              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A015              ;
   3+ A015              ;	27/10/23
   4+ A015              ;
   5+ A015              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A015
   7+ A015              ;	ADC HL,SP	LD (addr),SP
   8+ A015              ;	ADD HL,SP	LD SP,(addr)
   9+ A015              ;	ADD IX,SP	LD SP,nn
  10+ A015              ; 	ADD IY,SP	LD SP,HL
  11+ A015              ;				LD SP,IX
  12+ A015              ;	DEC SP		LD SP,IY
  13+ A015
  14+ A015              ;	EX (SP),HL
  15+ A015              ;	EX (SP),IX
  16+ A015              ;	EX (SP),IY
  17+ A015
  18+ A015              ;	INC SP
  19+ A015
  20+ A015                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 18 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 EA 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 07 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 20 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F4 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 26 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1E 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 07 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 20 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F4 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 26 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 18 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1E 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 18 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 3C 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   8/11/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72fb
 129+ 72FB
 130+ 72FB              Gestiona_albumes_de_fotos ; 14
 131+ 72FB
 132+ 72FB              ;! Recolocacion.
 133+ 72FB
 134+ 72FB              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 135+ 72FB              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 136+ 72FB
 137+ 72FB 3A 41 89         ld a,(Ctrl_Semaforo)
 138+ 72FE CB 47            bit 0,a
 139+ 7300 28 62            jr z,7F
 140+ 7302
 141+ 7302              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 142+ 7302
 143+ 7302 CB 5F            bit 3,a
 144+ 7304 28 1E            jr z,13F
 145+ 7306
 146+ 7306
 147+ 7306              ; DOBLE RECOLOCACIÓN. ----------- ------------ -----------
 148+ 7306
 149+ 7306              ; Album_de_fotos_1 y Album_de_fotos_2 están vacío pero ... Está Album_de_fotos_3 completo ???
 150+ 7306
 151+ 7306 3A 40 89         ld a,(Semaforo)
 152+ 7309 CB 5F            bit 3,a
 153+ 730B 28 57            jr z,7F                     ;   No podemos hacer la doble recolocación!!! Album_de_fotos_3 está incompleto.
 154+ 730D
 155+ 730D              ; Volcamos Álbum_3 a Álbum_2
 156+ 730D              ;    ""    Álbum_2 a Álbum_1
 157+ 730D              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 158+ 730D              ; Actualizamos (Semaforo)
 159+ 730D              ; Inicializamos (Ctrl_Semaforo)
 160+ 730D              ; Saltamos a 7F.
 161+ 730D
 162+ 730D CD E1 73         call Album3_a_Album2
 163+ 7310 CD 08 74         call Album2_a_Album1
 164+ 7313 CD 63 74         call Actualiza_punteros_de_albumes
 165+ 7316 CD 55 73         call Modifica_Stack_snapshot
 166+ 7319 21 40 89     	ld hl,Semaforo
 167+ 731C CB 0E        	rrc (hl)
 168+ 731E AF               xor a
 169+ 731F 32 41 89         ld (Ctrl_Semaforo),a
 170+ 7322 18 40            jr 7F
 171+ 7324
 172+ 7324              ; ------------ ---------------- ------------
 173+ 7324
 174+ 7324              ;   RECOLOCACIÓN SIMPLE.
 175+ 7324
 176+ 7324              ;   Album3_a_Album2 ?????
 177+ 7324
 178+ 7324 CB 4F        13 bit 1,a
 179+ 7326 20 0A            jr nz,10F
 180+ 7328
 181+ 7328              ;   Álbum_1 vacío.
 182+ 7328
 183+ 7328              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 184+ 7328
 185+ 7328 3A 40 89         ld a,(Semaforo)
 186+ 732B CB 57            bit 2,a
 187+ 732D 28 35            jr z,7F                      ; No puede haber recolocación. Album_de_fotos_2 está incompleto.
 188+ 732F
 189+ 732F CD 08 74         call Album2_a_Album1
 190+ 7332
 191+ 7332              ; Album3_a_Album2 !!!
 192+ 7332
 193+ 7332              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 194+ 7332
 195+ 7332 3A 40 89     10 ld a,(Semaforo)
 196+ 7335 CB 5F            bit 3,a
 197+ 7337 20 0B            jr nz,11F
 198+ 7339
 199+ 7339              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 200+ 7339              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 201+ 7339
 202+ 7339 21 41 89         ld hl,Ctrl_Semaforo
 203+ 733C CB DE            set 3,(hl)
 204+ 733E CB 86            res 0,(hl)
 205+ 7340 CB 96            res 2,(hl)
 206+ 7342 18 20            jr 7F
 207+ 7344
 208+ 7344              ; Album_de_fotos_3 contiene un FRAME completo.
 209+ 7344              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 210+ 7344
 211+ 7344 CD E1 73     11 call Album3_a_Album2     ;   X-X-X-0
 212+ 7347 CD 55 73         call Modifica_Stack_snapshot
 213+ 734A
 214+ 734A 21 41 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 215+ 734D CB 86            res 0,(hl)
 216+ 734F CB 8E            res 1,(hl)
 217+ 7351 CB 96            res 2,(hl)
 218+ 7353 18 0F            jr 7F
 219+ 7355
 220+ 7355 2A 34 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 221+ 7358 CD 8C 8C     	call Extrae_address
 222+ 735B 22 1E 89     	ld (Stack_snapshot),hl
 223+ 735E 21 40 89     	ld hl,Semaforo
 224+ 7361 CB 0E        	rrc (hl)
 225+ 7363 C9               ret
 226+ 7364
 227+ 7364              ; #############################################################3
 228+ 7364
 229+ 7364              ;   En 1er lugar limpiamos el FRAME pintado.
 230+ 7364              ;   Vaciamos Album_de_fotos.
 231+ 7364
 232+ 7364              ;   Album_de_fotos. Contiene datos ???
 233+ 7364
 234+ 7364              ;! Cascada.
 235+ 7364
 236+ 7364 21 01 70     7 ld hl,Album_de_fotos+1
 237+ 7367 7E               ld a,(hl)
 238+ 7368 A7               and a
 239+ 7369 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 240+ 736B
 241+ 736B              ;   Hemos impreso Album_de_fotos.
 242+ 736B              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 243+ 736B
 244+ 736B 2A 22 89         ld hl,(End_Snapshot)
 245+ 736E 01 00 70         ld bc,Album_de_fotos
 246+ 7371 11 01 70         ld de,Album_de_fotos+1
 247+ 7374 AF               xor a
 248+ 7375 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 249+ 7376
 250+ 7376 CD 56 74         call Limpia_album
 251+ 7379
 252+ 7379 21 00 00         ld hl,0
 253+ 737C 22 22 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 254+ 737F
 255+ 737F              ; ----- ----- ----- -----
 256+ 737F
 257+ 737F              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 258+ 737F              ;   Album_de_fotos_1. Contiene un frame completo ???
 259+ 737F
 260+ 737F 3A 40 89     3 ld a,(Semaforo)
 261+ 7382 CB 4F            bit 1,a
 262+ 7384 20 06            jr nz,4F
 263+ 7386
 264+ 7386              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 265+ 7386              ;! Album_de_fotos_1 está incompleto.
 266+ 7386
 267+ 7386 21 41 89         ld hl,Ctrl_Semaforo
 268+ 7389 CB E6            set 4,(hl)
 269+ 738B C9               ret
 270+ 738C
 271+ 738C              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 272+ 738C
 273+ 738C 21 57 70     4 ld hl,Album_de_fotos_1+1
 274+ 738F 7E               ld a,(hl)
 275+ 7390 A7               and a
 276+ 7391 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 277+ 7393
 278+ 7393              ; ----- ----- ----- -----
 279+ 7393              ; ----- ----- ----- -----
 280+ 7393
 281+ 7393 CD 2F 74         call Album1_a_Album
 282+ 7396
 283+ 7396              ;   Album_de_fotos_2.
 284+ 7396
 285+ 7396 3A 41 89     1 ld a,(Ctrl_Semaforo)
 286+ 7399 CB 5F            bit 3,a
 287+ 739B 20 36            jr nz,8F
 288+ 739D
 289+ 739D              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 290+ 739D              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 291+ 739D              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 292+ 739D
 293+ 739D              ;   Contiene Frame completo ???
 294+ 739D
 295+ 739D 3A 40 89     12 ld a,(Semaforo)
 296+ 73A0 CB 57            bit 2,a
 297+ 73A2 20 13            jr nz,5F
 298+ 73A4
 299+ 73A4              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 300+ 73A4
 301+ 73A4 21 AD 70         ld hl,Album_de_fotos_2+1
 302+ 73A7 7E               ld a,(hl)
 303+ 73A8 A7               and a
 304+ 73A9 20 04            jr nz,9F
 305+ 73AB
 306+ 73AB              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 307+ 73AB              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 308+ 73AB
 309+ 73AB CD 63 74         call Actualiza_punteros_de_albumes
 310+ 73AE C9               ret
 311+ 73AF
 312+ 73AF              ;   Album_de_fotos_2 no está completo pero contiene datos.
 313+ 73AF
 314+ 73AF 21 41 89     9 ld hl,Ctrl_Semaforo
 315+ 73B2 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 316+ 73B4 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 317+ 73B6 C9               ret
 318+ 73B7
 319+ 73B7 21 AD 70     5 ld hl,Album_de_fotos_2+1
 320+ 73BA 7E               ld a,(hl)
 321+ 73BB A7               and a
 322+ 73BC 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 323+ 73BE
 324+ 73BE              ; ----- ----- ----- -----
 325+ 73BE              ; ----- ----- ----- -----
 326+ 73BE              ; ----- ----- ----- -----
 327+ 73BE
 328+ 73BE              ;   Album_de_fotos_2 contiene un frame completo.
 329+ 73BE              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 330+ 73BE
 331+ 73BE CD 08 74         call Album2_a_Album1
 332+ 73C1
 333+ 73C1              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 334+ 73C1              ;   Album_de_fotos_3. Contiene un frame completo ???
 335+ 73C1
 336+ 73C1 3A 40 89     2 ld a,(Semaforo)
 337+ 73C4 CB 5F            bit 3,a
 338+ 73C6 20 13            jr nz,6F
 339+ 73C8
 340+ 73C8              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 341+ 73C8
 342+ 73C8 21 03 71         ld hl,Album_de_fotos_3+1
 343+ 73CB 7E               ld a,(hl)
 344+ 73CC A7               and a
 345+ 73CD 20 04            jr nz,8F
 346+ 73CF
 347+ 73CF              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 348+ 73CF              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 349+ 73CF
 350+ 73CF CD 63 74         call Actualiza_punteros_de_albumes
 351+ 73D2 C9               ret
 352+ 73D3
 353+ 73D3              ;   Album_de_fotos_3 no está completo.
 354+ 73D3
 355+ 73D3 21 41 89     8 ld hl,Ctrl_Semaforo
 356+ 73D6 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 357+ 73D8 CB CE            set 1,(hl)
 358+ 73DA C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 359+ 73DB
 360+ 73DB              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 361+ 73DB
 362+ 73DB 21 03 71     6 ld hl,Album_de_fotos_3+1
 363+ 73DE 7E               ld a,(hl)
 364+ 73DF A7               and a
 365+ 73E0 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 366+ 73E1
 367+ 73E1              ; ----- ----- ----- -----
 368+ 73E1              ; ----- ----- ----- -----
 369+ 73E1              ; ----- ----- ----- -----
 370+ 73E1
 371+ 73E1 2A 30 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 372+ 73E4 01 02 71         ld bc,Album_de_fotos_3                  ; Origen.
 373+ 73E7 11 AC 70         ld de,Album_de_fotos_2                  ; Destino.
 374+ 73EA
 375+ 73EA CD 56 74         call Limpia_album
 376+ 73ED
 377+ 73ED              ;   Actualizamos (End_Snapshot_2):
 378+ 73ED
 379+ 73ED A7               and a
 380+ 73EE ED 4A            adc hl,bc
 381+ 73F0 22 2C 89         ld (End_Snapshot_2),hl
 382+ 73F3
 383+ 73F3              ;   Limpiamos Album_de_fotos_3.
 384+ 73F3
 385+ 73F3 2A 30 89         ld hl,(End_Snapshot_3)
 386+ 73F6 01 02 71         ld bc,Album_de_fotos_3
 387+ 73F9 11 03 71         ld de,Album_de_fotos_3+1
 388+ 73FC AF               xor a
 389+ 73FD 02               ld (bc),a
 390+ 73FE CD 56 74         call Limpia_album
 391+ 7401
 392+ 7401              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 393+ 7401              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 394+ 7401
 395+ 7401 21 00 00         ld hl,0
 396+ 7404 22 30 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 397+ 7407
 398+ 7407 C9               ret
 399+ 7408
 400+ 7408 2A 2C 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 401+ 740B 01 AC 70         ld bc,Album_de_fotos_2                   ; Origen.
 402+ 740E 11 56 70         ld de,Album_de_fotos_1                   ; Destino.
 403+ 7411 CD 56 74         call Limpia_album
 404+ 7414
 405+ 7414              ;   Actualizamos (End_Snapshot_1):
 406+ 7414
 407+ 7414 A7               and a
 408+ 7415 ED 4A            adc hl,bc
 409+ 7417 22 28 89         ld (End_Snapshot_1),hl
 410+ 741A
 411+ 741A              ;   Limpiamos Album_de_fotos_2.
 412+ 741A
 413+ 741A 2A 2C 89         ld hl,(End_Snapshot_2)
 414+ 741D 01 AC 70         ld bc,Album_de_fotos_2
 415+ 7420 11 AD 70         ld de,Album_de_fotos_2+1
 416+ 7423 AF               xor a
 417+ 7424 02               ld (bc),a
 418+ 7425 CD 56 74         call Limpia_album
 419+ 7428 21 00 00         ld hl,0
 420+ 742B 22 2C 89         ld (End_Snapshot_2),hl                    ; Limpia (End_Snapshot_2).s
 421+ 742E C9               ret
 422+ 742F
 423+ 742F
 424+ 742F 2A 28 89     Album1_a_Album ld hl,(End_Snapshot_1)         ; Final, (origen).
 425+ 7432 01 56 70         ld bc,Album_de_fotos_1      ; Origen.
 426+ 7435 11 00 70         ld de,Album_de_fotos        ; Destino.
 427+ 7438
 428+ 7438 CD 56 74         call Limpia_album
 429+ 743B
 430+ 743B              ;   Calculamos (End_Snapshot)
 431+ 743B
 432+ 743B A7               and a
 433+ 743C ED 4A            adc hl,bc
 434+ 743E 22 22 89         ld (End_Snapshot),hl
 435+ 7441
 436+ 7441              ;   Limpiamos Album_de_fotos_1.
 437+ 7441
 438+ 7441 2A 28 89         ld hl,(End_Snapshot_1)
 439+ 7444 01 56 70         ld bc,Album_de_fotos_1
 440+ 7447 11 57 70         ld de,Album_de_fotos_1+1
 441+ 744A AF               xor a
 442+ 744B 02               ld (bc),a
 443+ 744C
 444+ 744C CD 56 74         call Limpia_album
 445+ 744F
 446+ 744F 21 00 00         ld hl,0
 447+ 7452 22 28 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 448+ 7455 C9               ret
 449+ 7456
 450+ 7456              ; ----------------------------------------------------
 451+ 7456              ;
 452+ 7456              ;   10/8/23
 453+ 7456              ;
 454+ 7456              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 455+ 7456              ;
 456+ 7456              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 457+ 7456              ;           BC ..... Dirección de inicio del álbum.
 458+ 7456              ;           DE ..... Dirección de inicio del álbum. +1
 459+ 7456
 460+ 7456              ;    ld hl,(End_Snapshot)
 461+ 7456              ;    ld bc,Album_de_fotos
 462+ 7456              ;    ld de,Album_de_fotos+1
 463+ 7456
 464+ 7456              ;   MODIFICA: A,HL,BC y DE.
 465+ 7456
 466+ 7456              Limpia_album
 467+ 7456 D5               push de                     ; Guardo DESTINO.
 468+ 7457 C5               push bc                     ; Guardo ORIGEN.
 469+ 7458 ED 42            sbc hl,bc
 470+ 745A 4D               ld c,l
 471+ 745B 44               ld b,h
 472+ 745C E1               pop hl
 473+ 745D C5               push bc
 474+ 745E ED B0            ldir
 475+ 7460 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 476+ 7461 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 477+ 7462 C9               ret                         ; _ a otro).
 478+ 7463
 479+ 7463              ; --------------------------------------------------------------------------------------------
 480+ 7463              ;
 481+ 7463              ;   20/10/23
 482+ 7463
 483+ 7463              ;
 484+ 7463
 485+ 7463              Actualiza_punteros_de_albumes
 486+ 7463
 487+ 7463 2A 34 89         ld hl,(Puntero_indice_album_de_fotos)
 488+ 7466 2B               dec hl
 489+ 7467 2B               dec hl
 490+ 7468 22 34 89         ld (Puntero_indice_album_de_fotos),hl
 491+ 746B
 492+ 746B 2A 38 89         ld hl,(Puntero_indice_End_Snapshot)
 493+ 746E 2B               dec hl
 494+ 746F 2B               dec hl
 495+ 7470 22 38 89         ld (Puntero_indice_End_Snapshot),hl
 496+ 7473 CD 8C 8C         call Extrae_address
 497+ 7476 22 3C 89         ld (Puntero_de_End_Snapshot),hl
 498+ 7479
 499+ 7479 C9               ret
 500+ 747A
# file closed: Guarda_foto_registros.asm
1680  747A
1681  747A              	SAVESNA "Pruebas.sna", START
1682  747A
1683  747A
1684  747A
1685  747A
# file closed: Banco_de_pruebas.asm
