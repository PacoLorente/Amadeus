# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8284	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $828c	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82bf	;	($82c0 - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82f4
  60  82F4
  61  82F4 F5           	push af
  62  82F5 E5           	push hl
  63  82F6
  64  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82F6 21 33 8C     	ld hl,Ctrl_3
  66  82F9 CB 46        	bit 0,(hl)
  67  82FB 28 FE        	jr z,$
  68  82FD              ;! -------------------
  69  82FD
  70  82FD              ; Disparos.
  71  82FD
  72  82FD CD 4D A1     	call Pinta_disparos_Amadeus
  73  8300 CD 13 9F     	call Pinta_disparos_Entidades
  74  8303
  75  8303              ; Shield -----------------------
  76  8303
  77  8303              Temporizacion_shield
  78  8303
  79  8303 21 5D 8C     	ld hl,Shield
  80  8306 7E           	ld a,(hl)
  81  8307 A7           	and a
  82  8308 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  830A
  84  830A 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  830B
  86  830B 23           	inc hl
  87  830C 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  830D
  89  830D 20 17        	jr nz,Incrementa_FRAMES
  90  830F
  91  830F              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  830F
  93  830F              Cambio_de_estado
  94  830F
  95  830F              ;	Indica cambio de estado.
  96  830F
  97  830F 23           	inc hl						;	Sitúa en (Shield_3).
  98  8310
  99  8310 CB 5E        	bit 3,(hl)
 100  8312 28 05        	jr z,2F
 101  8314
 102  8314 CD 23 91     	call Inicia_Shield
 103  8317
 104  8317 18 0D        	jr Incrementa_FRAMES
 105  8319
 106  8319 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  831B
 108  831B              ;	Carga en (Shield_2) la siguiente temporización.
 109  831B
 110  831B 2A 5B 8C     	ld hl,(Puntero_datos_shield)
 111  831E 23           	inc hl
 112  831F 22 5B 8C     	ld (Puntero_datos_shield),hl
 113  8322 7E           	ld a,(hl)
 114  8323 32 5E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  8326
 116  8326              Incrementa_FRAMES
 117  8326
 118  8326 2A 78 5C     	ld hl,(FRAMES)
 119  8329 23           	inc hl
 120  832A 22 78 5C     	ld (FRAMES),hl
 121  832D
 122  832D 7C           	ld a,h
 123  832E B5           	or l
 124  832F 20 04        	jr nz,1F
 125  8331
 126  8331 21 7A 5C     	ld hl,FRAMES_3
 127  8334 34           	inc (hl)
 128  8335
 129  8335 D5           1 push de
 130  8336 C5           	push bc
 131  8337
 132  8337 CD 33 91     	call Actualiza_pantalla
 133  833A
 134  833A C1           	pop bc
 135  833B D1           	pop de
 136  833C E1           	pop hl
 137  833D F1           	pop af
 138  833E
 139  833E FB           	ei
 140  833F
 141  833F C9           	ret
 142  8340
 143  8340              ; --------------------------------------------------------------------------------
 144  8340
 145  8340              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8340              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8340              ;
   3+ 8340              ;	17/02/23
   4+ 8340              ;
   5+ 8340              ;	Sprites e índices.
   6+ 8340
   7+ 8340              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 148  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 149  8BBF
 150  8BBF              ; --------------------------------------------------------------------------------
 151  8BBF              ;
 152  8BBF              ; 12/05/24
 153  8BBF              ;
 154  8BBF              ; Parámetros DRAW.
 155  8BBF              ;
 156  8BBF
 157  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BBF
 159  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BC0              ;															- Patrón de movimiento.
 161  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BC2
 164  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BC3
 167  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BC3              ; Ejemplos.
 170  8BC3
 171  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BC3
 177  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BC4
 181  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BC6
 184  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC8
 186  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC8
 188  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 190  8BCA
 191  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BCA
 193  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BCB
 199  8BCB 00           Ctrl_2 db 0
 200  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BCC              ;
 208  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BCC              ;														BIT 4, ???
 214  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BCC
 216  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BCD              ;
 222  8BCD              ; 														DESCRIPCIÖN:
 223  8BCD              ;
 224  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BCD              ;
 238  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BCD
 242  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BCD
 244  8BCD 00           Filas db 0												; Filas. [DRAW]
 245  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BD3
 249  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BD3
 251  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BD4
 255  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BD4
 257  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BD4              ;
 259  8BD4              ;	COLORES: 0 ..... NEGRO
 260  8BD4              ;    		 1 ..... AZUL
 261  8BD4              ; 			 2 ..... ROJO
 262  8BD4              ;			 3 ..... MAGENTA
 263  8BD4              ; 			 4 ..... VERDE
 264  8BD4              ; 			 5 ..... CIAN
 265  8BD4              ;			 6 ..... AMARILLO
 266  8BD4              ; 			 7 ..... BLANCO
 267  8BD4
 268  8BD4 00 00        Indice_Sprite_der defw 0
 269  8BD6 00 00        Indice_Sprite_izq defw 0
 270  8BD8 00 00        Puntero_DESPLZ_der defw 0
 271  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 272  8BDC
 273  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BDF 00           Columnas db 0
 276  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BE3
 280  8BE3              ; variables de control general.
 281  8BE3
 282  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BE4
 284  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BE4
 286  8BE4              Perfiles_de_velocidad
 287  8BE4
 288  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE8
 293  8BE8              ; Contadores de 16 bits.
 294  8BE8
 295  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BF0
 300  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BF0
 302  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BF6              ;
 306  8BF6              ;
 307  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF7 00           Incrementa_puntero_backup db 0
 311  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BFC              ;
 317  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BFC              ;
 321  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BFC              ;
 326  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BFC
 330  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BFD
 332  8BFD              ;														DESCRIPCIÓN:
 333  8BFD              ;
 334  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BFD
 341  8BFD              ;														BIT 3, Recarga de nueva oleada.
 342  8BFD              ;														BIT 4, Recarga de nueva oleada.
 343  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BFD              ;														BIT 6, **** Frame completo.
 345  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BFD
 347  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BFF
 352  8BFF              ; Gestión de ENTIDADES y CAJAS.
 353  8BFF
 354  8BFF 00 00        Puntero_store_caja defw 0
 355  8C01 00 00        Puntero_restore_caja defw 0
 356  8C03 00 00        Indice_restore_caja defw 0
 357  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C08
 361  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C0C              ;														; _ puntero (Indice_entidades).
 364  8C0C
 365  8C0C              ;---------------------------------------------------------------------------------------------------------------
 366  8C0C              ;
 367  8C0C              ;	13/10/24
 368  8C0C              ;
 369  8C0C              ;	Álbumes.
 370  8C0C
 371  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C0E              ;														; _variable para almacenar lo posición del puntero_
 373  8C0E              ; 														; _de pila, SP.
 374  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C10
 377  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C10
 379  8C10 00 00        Album_de_pintado defw 0
 380  8C12 00 00        Album_de_borrado defw 0
 381  8C14 00 00        Album_de_pintado_Amadeus defw 0
 382  8C16 00 00        Album_de_borrado_Amadeus defw 0
 383  8C18
 384  8C18 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C1A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C1C
 387  8C1C 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C1E 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C20
 390  8C20
 391  8C20 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C22 00           Num_de_bytes_album_de_disparos db 0
 393  8C23
 394  8C23 07           Numero_de_disparos_de_entidades db 7
 395  8C24
 396  8C24 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 397  8C25 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 398  8C26
 399  8C26 00 00        Techo_Scanlines_album defw 0
 400  8C28 00 00        Techo_Scanlines_album_2 defw 0
 401  8C2A 00           Switch db 0
 402  8C2B 00 00        Techo defw 0
 403  8C2D 00 00        Scanlines_album_SP defw 0
 404  8C2F 00 89        India_SP defw Tabla_de_pintado
 405  8C31 03 89        India_2_SP defw Tabla_de_pintado+3
 406  8C33
 407  8C33 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 408  8C34              ;
 409  8C34              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 410  8C34              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 411  8C34              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 412  8C34              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 413  8C34              ;																Habilita el borrado/pintado de sprites.
 414  8C34              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 415  8C34              ;																_ a la baja.
 416  8C34              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 417  8C34              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 418  8C34              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 419  8C34              ; 																_ el último frame de la explosión de nuestra nave.
 420  8C34              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 421  8C34              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 422  8C34
 423  8C34 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 424  8C35              ;
 425  8C35              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 426  8C35              ;
 427  8C35              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 428  8C35              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 429  8C35              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 430  8C35              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 431  8C35              ;
 432  8C35              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 433  8C35              ;															_ masticados ya generados.
 434  8C35              ;
 435  8C35              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 436  8C35              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 437  8C35              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 438  8C35              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 439  8C35
 440  8C35 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 441  8C36
 442  8C36
 443  8C36              ; Gestión de Disparos.
 444  8C36
 445  8C36 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 446  8C38 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 447  8C3A 00           Impacto2 db 0											; Byte de control de impactos.
 448  8C3B
 449  8C3B              ;
 450  8C3B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 451  8C3B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 452  8C3B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 453  8C3B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 454  8C3B
 455  8C3B
 456  8C3B
 457  8C3B
 458  8C3B
 459  8C3B
 460  8C3B
 461  8C3B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 462  8C3D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 463  8C3D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 464  8C3D
 465  8C3D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 466  8C3F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 467  8C3F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 468  8C42              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 469  8C42 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C45              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 471  8C45
 472  8C45              ;---------------------------------------------------------------------------------------------------------------
 473  8C45
 474  8C45              ; Relojes y temporizaciones.
 475  8C45
 476  8C45 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 477  8C46 05           Clock_explosion_Amadeus db 5
 478  8C47 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 479  8C48
 480  8C48 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 481  8C4A F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 482  8C4C 00           Numero_rnd_disparos db 0
 483  8C4D
 484  8C4D 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 485  8C4F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 486  8C50              ;														; Repite la oleada de entidades.
 487  8C50 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 488  8C51 A0           CLOCK_disparos_de_entidades db $a0
 489  8C52
 490  8C52              ;---------------------------------------------------------------------------------------------------------------
 491  8C52
 492  8C52              ; Gestión de NIVELES.
 493  8C52
 494  8C52 00           Nivel db 0												; Nivel actual del juego.
 495  8C53 00 00        Puntero_indice_NIVELES defw 0
 496  8C55 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C57              ; 														; _ que definen el NIVEL.
 498  8C57
 499  8C57              ; ---------------------------------------------------------------------------------------------------------------
 500  8C57
 501  8C57              ; Temporizaciones Shield.
 502  8C57
 503  8C57 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C5B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C5D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C5E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C5F 00           Shield_3 db 0
 508  8C60
 509  8C60 06           Lives db 6
 510  8C61
 511  8C61              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C61              ;
 513  8C61              ;	5/1/24
 514  8C61
 515  8C61              START
 516  8C61
 517  8C61 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C64 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C66 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C68 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C6A F3           	DI
 522  8C6B
 523  8C6B              ; Limpiamos pantalla.
 524  8C6B
 525  8C6B 3E 07        	ld a,%00000111
 526  8C6D CD C0 94     	call Cls
 527  8C70 CD 18 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C73
 529  8C73              ; INICIALIZACIÓN.
 530  8C73
 531  8C73 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C75 CD 65 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8C78
 534  8C78 CD AD 8E     	call Extrae_numero_aleatorio_y_avanza
 535  8C7B
 536  8C7B 6F           	ld l,a
 537  8C7C 26 00        	ld h,0
 538  8C7E 22 4D 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 539  8C81
 540  8C81              ;	Inicializa 1er Nivel.
 541  8C81
 542  8C81 21 9B 8B     	ld hl,Indice_de_niveles
 543  8C84 22 53 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 544  8C87 CD 95 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 545  8C8A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 546  8C8A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 547  8C8A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 548  8C8A
 549  8C8A              ;	Inicia los álbumes de líneas.
 550  8C8A
 551  8C8A CD 66 90     	call Inicia_albumes_de_lineas
 552  8C8D              ;
 553  8C8D CD 76 90     	call Inicia_albumes_de_lineas_Amadeus
 554  8C90 CD 83 90     	call Inicia_albumes_de_disparos
 555  8C93
 556  8C93 CD DA 92     4 call Inicia_Entidades
 557  8C96 CD 3D 93     	call Inicia_Amadeus
 558  8C99
 559  8C99              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 560  8C99              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 561  8C99              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 562  8C99
 563  8C99 11 74 89     	ld de,Amadeus_BOX
 564  8C9C CD 90 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 565  8C9F CD 80 93     	call Limpiamos_bandeja_DRAW
 566  8CA2
 567  8CA2              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 568  8CA2
 569  8CA2 06 3C        	ld b,60
 570  8CA4 CD 66 9D     2 call Amadeus_a_izquierda
 571  8CA7 10 FB        	djnz 2B
 572  8CA9
 573  8CA9 CD 44 90     	call Genera_datos_de_impresion_Amadeus
 574  8CAC
 575  8CAC              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 576  8CAC
 577  8CAC CD 9F 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 578  8CAF
 579  8CAF CD 23 91     	call Inicia_Shield
 580  8CB2
 581  8CB2 2A 2D 8C     6 ld hl,(Scanlines_album_SP)
 582  8CB5 22 26 8C     	ld (Techo_Scanlines_album),hl
 583  8CB8
 584  8CB8 2A 12 8C     	ld hl,(Album_de_borrado)
 585  8CBB 22 2D 8C     	ld (Scanlines_album_SP),hl
 586  8CBE
 587  8CBE 21 00 89     	ld hl,Tabla_de_pintado
 588  8CC1 22 2F 8C     	ld (India_SP),hl
 589  8CC4
 590  8CC4 21 33 8C     	ld hl,Ctrl_3
 591  8CC7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 592  8CC9 CB D6        	set 2,(hl)
 593  8CCB CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 594  8CCD
 595  8CCD FB           	ei 													; Ha de apuntar a $5c3a.
 596  8CCE
 597  8CCE 76           	halt
 598  8CCF
 599  8CCF              ; ------------------------------------
 600  8CCF
 601  8CCF              Main
 602  8CCF              ;
 603  8CCF              ; 20/09/24
 604  8CCF
 605  8CCF              ; Gestión de disparos.
 606  8CCF
 607  8CCF CD 88 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 608  8CD2              ;	call Motor_de_disparos_entidades
 609  8CD2 CD F9 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 610  8CD5
 611  8CD5
 612  8CD5
 613  8CD5
 614  8CD5
 615  8CD5              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 616  8CD5              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 617  8CD5              ; Este hecho lo indica el bit2 de (Impacto2).
 618  8CD5
 619  8CD5 CD 96 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 620  8CD8
 621  8CD8              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 622  8CD8
 623  8CD8 21 51 8C     	ld hl,CLOCK_disparos_de_entidades
 624  8CDB 35           	dec (hl)
 625  8CDC CC D1 8D     	call z,Autoriza_disparo_de_entidades
 626  8CDF
 627  8CDF 2A 4D 8C     	ld hl,(Clock_next_entity)
 628  8CE2 ED 4B 78 5C  	ld bc,(FRAMES)
 629  8CE6 A7           	and a
 630  8CE7 ED 42        	sbc hl,bc
 631  8CE9 20 16        	jr nz,1F
 632  8CEB
 633  8CEB              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 634  8CEB              ; _ (Clock_next_entity) para la siguiente entidad.
 635  8CEB
 636  8CEB 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 637  8CEE 47           	ld b,a
 638  8CEF 3A 07 8C     	ld a,(Entidades_en_curso)
 639  8CF2 B8           	cp b
 640  8CF3 28 0C        	jr z,1F
 641  8CF5 30 0A        	jr nc,1F
 642  8CF7
 643  8CF7 3C           	inc a
 644  8CF8 32 07 8C     	ld (Entidades_en_curso),a
 645  8CFB
 646  8CFB              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 647  8CFB
 648  8CFB CD AD 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 649  8CFE CD C9 8E     	call Define_Clock_next_entity
 650  8D01
 651  8D01 3A 07 8C     1 ld a,(Entidades_en_curso)
 652  8D04 A7           	and a
 653  8D05 CA 7F 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 654  8D08 47           	ld b,a												; No hay entidades que gestionar.
 655  8D09
 656  8D09              ; ( Código que ejecutamos con cada entidad: ).
 657  8D09
 658  8D09              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 659  8D09              ;
 660  8D09              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 661  8D09
 662  8D09 21 00 89     	ld hl,Tabla_de_pintado
 663  8D0C 22 2F 8C     	ld (India_SP),hl
 664  8D0F
 665  8D0F 21 33 8C     	ld hl,Ctrl_3
 666  8D12 CB D6        	set 2,(hl)
 667  8D14 CD 5D 8E     	call Change
 668  8D17
 669  8D17 C5           2 push bc 												; Nº de entidades en curso.
 670  8D18
 671  8D18 CD F0 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 672  8D1B ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 673  8D1F
 674  8D1F              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 675  8D1F
 676  8D1F              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 677  8D1F              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 678  8D1F
 679  8D1F 3A 3A 8C     	ld a,(Impacto2)
 680  8D22 CB 5F        	bit 3,a
 681  8D24 C4 8F A0     	call nz,Compara_con_coordenadas_de_disparo
 682  8D27
 683  8D27 3A C3 8B     	ld a,(Impacto)
 684  8D2A CB 4F        	bit 1,a
 685  8D2C C4 00 92     	call nz,Genera_explosion
 686  8D2F 20 31        	jr nz,Gestiona_siguiente_entidad
 687  8D31
 688  8D31 3A C3 8B     	ld a,(Impacto)
 689  8D34 A7           	and a
 690  8D35 28 0C        	jr z,3F
 691  8D37
 692  8D37              ; IMPACTO en entidad por colisión con Amadeus.
 693  8D37
 694  8D37              ; 5/7/24
 695  8D37              ; Nota importante:
 696  8D37              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 697  8D37              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 698  8D37              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 699  8D37
 700  8D37 3A 78 89     	ld a,(Impacto_Amadeus)
 701  8D3A A7           	and a
 702  8D3B C4 00 92     	call nz,Genera_explosion
 703  8D3E 20 22        	jr nz,Gestiona_siguiente_entidad
 704  8D40
 705  8D40              ; Falsa colisión !!!
 706  8D40
 707  8D40 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 708  8D43
 709  8D43              ; -------------------------------------------
 710  8D43
 711  8D43 CD 0D 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 712  8D46 CD 3D 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 713  8D49 CD FD 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 714  8D4C CD 00 95     	call Genera_datos_de_impresion
 715  8D4F CD A3 93     	call Decrementa_Contador_de_mov_masticados
 716  8D52
 717  8D52              ; -------------------------------------------
 718  8D52
 719  8D52              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 720  8D52
 721  8D52 2A C4 8B     	ld hl,(Puntero_de_impresion)
 722  8D55 CD D4 94     	call Genera_coordenadas
 723  8D58
 724  8D58              ; TODO: Generamos disparo ???
 725  8D58
 726  8D58 3A 25 8C     	ld a,(Permiso_de_disparo_Entidades)
 727  8D5B A7           	and a
 728  8D5C C4 E6 8D     	call nz,Entidad_genera_disparo_si_procede
 729  8D5F
 730  8D5F CD 14 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 731  8D62
 732  8D62              Gestiona_siguiente_entidad
 733  8D62
 734  8D62 CD 75 93      	call Store_Restore_cajas
 735  8D65 C1           	pop bc
 736  8D66 10 AF        	djnz 2B
 737  8D68
 738  8D68              ; Hemos gestionado todas las entidades.
 739  8D68              ; ----- ----- -----
 740  8D68
 741  8D68 CD 21 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 742  8D6B CD 38 8F     	call Ordena_tabla_de_impresion
 743  8D6E CD 9F 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 744  8D71
 745  8D71 CD DE 8E     	call Borra_diferencia
 746  8D74
 747  8D74 3A 33 8C     	ld a,(Ctrl_3)
 748  8D77 CB 5F        	bit 3,a
 749  8D79 20 04        	jr nz,Gestion_de_Amadeus
 750  8D7B
 751  8D7B EB           	ex de,hl
 752  8D7C 71           	ld (hl),c
 753  8D7D 2C           	inc l
 754  8D7E 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 755  8D7F
 756  8D7F              ;! GESTIONA AMADEUS !!!!!!!!!!
 757  8D7F
 758  8D7F              Gestion_de_Amadeus
 759  8D7F
 760  8D7F 21 33 8C     	ld hl,Ctrl_3
 761  8D82 CB 76        	bit 6,(hl)
 762  8D84 28 13        	jr z,Amadeus_vivo
 763  8D86
 764  8D86              ; Amadeus ha sido destruido.
 765  8D86              ; Decrementa (Temp_new_live).
 766  8D86
 767  8D86 21 47 8C     	ld hl,Temp_new_live
 768  8D89 35           	dec (hl)
 769  8D8A 20 26        	jr nz,End_frame
 770  8D8C
 771  8D8C              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 772  8D8C
 773  8D8C 21 60 8C     	ld hl,Lives
 774  8D8F 35           	dec (hl)
 775  8D90
 776  8D90              ;! Fin del juego
 777  8D90
 778  8D90 F3           	di
 779  8D91 28 FE        	jr z,$
 780  8D93 FB           	ei
 781  8D94
 782  8D94              ; Nueva nave.
 783  8D94
 784  8D94 CD 03 8E     	call Reinicia_Amadeus
 785  8D97 18 19        	jr End_frame
 786  8D99
 787  8D99              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 788  8D99
 789  8D99              Amadeus_vivo
 790  8D99
 791  8D99 3A 78 89     	ld a,(Impacto_Amadeus)
 792  8D9C A7           	and a
 793  8D9D C4 30 92     	call nz, Genera_explosion_Amadeus
 794  8DA0 20 10        	jr nz, End_frame
 795  8DA2
 796  8DA2 CD DD 91     	call Teclado
 797  8DA5
 798  8DA5 21 33 8C     	ld hl,Ctrl_3
 799  8DA8 CB 6E        	bit 5,(hl)
 800  8DAA 28 06        	jr z,End_frame
 801  8DAC
 802  8DAC              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 803  8DAC
 804  8DAC CD 78 8E     	call Change_Amadeus
 805  8DAF CD 44 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 806  8DB2
 807  8DB2              End_frame
 808  8DB2
 809  8DB2              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 810  8DB2              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 811  8DB2
 812  8DB2 CD AD 9F     	call Genera_datos_de_impresion_disparos_Entidades
 813  8DB5 CD 7F A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 814  8DB8 CD D4 A0     	call Calcula_bytes_pintado_disparos
 815  8DBB              ;	call Limpia_album_de_pintado_disparos_entidades
 816  8DBB
 817  8DBB              ; ------------ ------------- --------------
 818  8DBB
 819  8DBB 2A 12 8C     	ld hl,(Album_de_borrado)
 820  8DBE 22 2D 8C     	ld (Scanlines_album_SP),hl
 821  8DC1
 822  8DC1 21 33 8C     	ld hl,Ctrl_3
 823  8DC4 CB C6        	set 0,(hl) 											; Indica Frame completo.
 824  8DC6 CB 9E        	res 3,(hl)
 825  8DC8 CB A6        	res 4,(hl)
 826  8DCA
 827  8DCA AF           	xor a
 828  8DCB D3 FE        	out ($fe),a
 829  8DCD
 830  8DCD 76           	halt
 831  8DCE
 832  8DCE              ; ----------------------------------------
 833  8DCE
 834  8DCE              ;	ld a,(Ctrl_1) 										; Existe Loop?
 835  8DCE              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 836  8DCE CA CF 8C     	jp z,Main
 837  8DD1
 838  8DD1              ;------------------------------------------
 839  8DD1              ;
 840  8DD1              ;	2/10/24
 841  8DD1
 842  8DD1              Autoriza_disparo_de_entidades
 843  8DD1
 844  8DD1 3E 01        	ld a,1
 845  8DD3 32 25 8C     	ld (Permiso_de_disparo_Entidades),a
 846  8DD6
 847  8DD6 3A 50 8C     	ld a,(Repone_CLOCK_disparos)
 848  8DD9 FE 19        	cp 25
 849  8DDB 38 02        	jr c,1F
 850  8DDD
 851  8DDD D6 05        	sub 5
 852  8DDF
 853  8DDF 32 50 8C     1 ld (Repone_CLOCK_disparos),a
 854  8DE2 32 51 8C     	ld (CLOCK_disparos_de_entidades),a
 855  8DE5
 856  8DE5 C9           	ret
 857  8DE6
 858  8DE6              ;------------------------------------------
 859  8DE6              ;
 860  8DE6              ;	14/09/24
 861  8DE6              ;
 862  8DE6              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 863  8DE6
 864  8DE6              Entidad_genera_disparo_si_procede
 865  8DE6
 866  8DE6 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 867  8DE9 CB 06        	rlc (hl)
 868  8DEB
 869  8DEB DC 05 A0     	call c,Genera_disparo_de_entidad_maldosa
 870  8DEE
 871  8DEE C9           	ret
 872  8DEF
 873  8DEF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 874  8DEF              ;
 875  8DEF              ;	30/09/24
 876  8DEF
 877  8DEF              Actuaiza_sp_de_disparos_de_entidades
 878  8DEF
 879  8DEF 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 880  8DF2 23           	inc hl
 881  8DF3 22 4A 8C     	ld (Puntero_num_aleatorios_disparos),hl
 882  8DF6
 883  8DF6 11 FD 88     	ld de,Numeros_aleatorios+7
 884  8DF9 7B           	ld a,e
 885  8DFA 95           	sub l
 886  8DFB C0           	ret nz
 887  8DFC
 888  8DFC 21 F6 88     1 ld hl,Numeros_aleatorios
 889  8DFF 22 4A 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 890  8E02 C9           	ret
 891  8E03
 892  8E03              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 893  8E03              ;
 894  8E03              ;	24/07/24
 895  8E03
 896  8E03              Reinicia_Amadeus
 897  8E03
 898  8E03              ;	Reinicia posición y estado.
 899  8E03
 900  8E03 21 CF 50     	ld hl,$50cf
 901  8E06 22 79 89     	ld (p.imp.amadeus),hl
 902  8E09 21 F0 E0     	ld hl,$e0f0
 903  8E0C 22 7B 89     	ld (Pamm_Amadeus),hl
 904  8E0F 21 3D 00     	ld hl,$003d
 905  8E12 22 7D 89     	ld (Comm_Amadeus),hl
 906  8E15
 907  8E15              ;	limpiamos el álbum de borrado.
 908  8E15
 909  8E15 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 910  8E18
 911  8E18 AF           	xor a
 912  8E19 77           	ld (hl),a
 913  8E1A
 914  8E1A E5           	push hl
 915  8E1B D1           	pop de
 916  8E1C 13           	inc de
 917  8E1D
 918  8E1D 01 23 00     	ld bc,35
 919  8E20 ED B0        	ldir
 920  8E22
 921  8E22 CD 44 90     	call Genera_datos_de_impresion_Amadeus
 922  8E25
 923  8E25              ;	Reinicia temporizaciones.
 924  8E25
 925  8E25 CD 23 91     	call Inicia_Shield
 926  8E28
 927  8E28 3E 5A        	ld a,90
 928  8E2A 32 5D 8C     	ld (Shield),a
 929  8E2D
 930  8E2D 3E 64        	ld a,100
 931  8E2F 32 47 8C     	ld (Temp_new_live),a
 932  8E32
 933  8E32              ; 	Restauramos el FLAG: Amadeus vivo.
 934  8E32
 935  8E32 21 33 8C     	ld hl,Ctrl_3
 936  8E35 CB B6        	res 6,(hl)
 937  8E37
 938  8E37              ;	Fuerza la impresión de la nave en el siguiente frame.
 939  8E37
 940  8E37 21 33 8C      	ld hl,Ctrl_3
 941  8E3A CB EE        	set 5,(hl)
 942  8E3C
 943  8E3C C9           	ret
 944  8E3D
 945  8E3D              ; --------------------------------------------------------------------------------------------------------------
 946  8E3D              ;
 947  8E3D              ;	12/05/24
 948  8E3D
 949  8E3D 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 950  8E40 CB 27        	sla a
 951  8E42 32 CA 8B     	ld (Velocidad),a
 952  8E45 E6 10        	and $10
 953  8E47 C8           	ret z
 954  8E48
 955  8E48              ; Restaura (Velocidad) a razón del nº de vueltas.
 956  8E48
 957  8E48 3A C2 8B     	ld a,(Contador_de_vueltas)
 958  8E4B CB 2F        	sra a
 959  8E4D CB 2F        	sra a
 960  8E4F 32 CA 8B     	ld (Velocidad),a
 961  8E52
 962  8E52 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 963  8E55 23           	inc hl
 964  8E56 23           	inc hl
 965  8E57 23           	inc hl
 966  8E58 23           	inc hl
 967  8E59 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 968  8E5C
 969  8E5C C9           	ret
 970  8E5D
 971  8E5D              ; --------------------------------------------------------------------------------------------------------------
 972  8E5D              ;
 973  8E5D              ;	25/08/24
 974  8E5D
 975  8E5D              Change
 976  8E5D
 977  8E5D 3A 2A 8C     	ld a,(Switch)
 978  8E60 EE 01        	xor 1
 979  8E62 32 2A 8C     	ld (Switch),a
 980  8E65 2A 10 8C     	ld hl,(Album_de_pintado)
 981  8E68 ED 5B 12 8C  	ld de,(Album_de_borrado)
 982  8E6C EB           	ex de,hl
 983  8E6D 22 10 8C     	ld (Album_de_pintado),hl
 984  8E70 22 2D 8C     	ld (Scanlines_album_SP),hl
 985  8E73 ED 53 12 8C  	ld (Album_de_borrado),de
 986  8E77 C9           	ret
 987  8E78
 988  8E78              Change_Amadeus
 989  8E78
 990  8E78 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
 991  8E7B ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
 992  8E7F EB           	ex de,hl
 993  8E80 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
 994  8E83 ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
 995  8E87 C9           	ret
 996  8E88
 997  8E88              Change_Disparos
 998  8E88
 999  8E88              ; Álbumes de Amadeus.
1000  8E88
1001  8E88 2A 18 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1002  8E8B ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1003  8E8F EB           	ex de,hl
1004  8E90 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1005  8E93 ED 53 1A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1006  8E97 CD C9 A0     	call Limpia_album_de_pintado_disparos_Amadeus
1007  8E9A
1008  8E9A              ; Álbumes de entidades.
1009  8E9A
1010  8E9A 2A 1C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1011  8E9D ED 5B 1E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1012  8EA1 EB           	ex de,hl
1013  8EA2 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1014  8EA5 ED 53 1E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1015  8EA9 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1016  8EAC
1017  8EAC              ;	xor a
1018  8EAC              ;	ld (Num_de_bytes_album_de_disparos),a
1019  8EAC
1020  8EAC C9           	ret
1021  8EAD
1022  8EAD              ; ------------------------------------
1023  8EAD              ;
1024  8EAD              ; 1/05/24
1025  8EAD
1026  8EAD              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1027  8EAD              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1028  8EAD
1029  8EAD              ;	DESTRUYE: HL,DE,A
1030  8EAD              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1031  8EAD
1032  8EAD              ;	Variables implicadas: (RND_SP).
1033  8EAD
1034  8EAD              Extrae_numero_aleatorio_y_avanza
1035  8EAD
1036  8EAD 21 00 89     	ld hl,Tabla_de_pintado
1037  8EB0 EB           	ex de,hl
1038  8EB1 2A 48 8C     	ld hl,(RND_SP)
1039  8EB4 EB           	ex de,hl
1040  8EB5 A7           	and a
1041  8EB6 ED 52        	sbc hl,de
1042  8EB8
1043  8EB8 2A 48 8C     	ld hl,(RND_SP)
1044  8EBB 20 06        	jr nz,1F
1045  8EBD
1046  8EBD              ; Sitúa HL al principio de la tabla de nº aleatorios.
1047  8EBD
1048  8EBD 21 F6 88     	ld hl,Numeros_aleatorios
1049  8EC0 22 48 8C     	ld (RND_SP),HL
1050  8EC3
1051  8EC3              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1052  8EC3
1053  8EC3 7E           1 ld a,(hl)
1054  8EC4 23           	inc hl
1055  8EC5 22 48 8C     	ld (RND_SP),hl
1056  8EC8 C9           	ret
1057  8EC9
1058  8EC9              ; ------------------------------------
1059  8EC9              ;
1060  8EC9              ; 1/05/24
1061  8EC9
1062  8EC9              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1063  8EC9              ; (1 a 4 segundos).
1064  8EC9              ; Actualizamos (Clock_next_entity) con A.
1065  8EC9
1066  8EC9              ;	DESTRUYE: A y B.
1067  8EC9              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1068  8EC9              ;			 Actualiza (Clock_next_entity) con A.
1069  8EC9
1070  8EC9              ;	Variables implicadas: (Clock_next_entity).
1071  8EC9
1072  8EC9              ; Notas:
1073  8EC9
1074  8EC9              ; 	$32 1 seg.
1075  8EC9              ; 	$64 2 seg.
1076  8EC9              ; 	$96 3 seg.
1077  8EC9              ; 	$c8 4 seg.
1078  8EC9              ; 	$fa 5 seg.
1079  8EC9
1080  8EC9              ; $ffff 1310,7 seg, 22 minutos.
1081  8EC9
1082  8EC9              ;	$0100  5 seg. aproximadamente.
1083  8EC9              ;	$0200 10 seg. aproximadamente.
1084  8EC9              ;	$0300 15 seg. aproximadamente.
1085  8EC9              ;	$0400 20 seg. aproximadamente.
1086  8EC9              ;	$0500 25 seg. aproximadamente.
1087  8EC9              ;	$0600 30 seg. aproximadamente.
1088  8EC9
1089  8EC9              Define_Clock_next_entity
1090  8EC9
1091  8EC9 FE 34        	cp $34
1092  8ECB 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1093  8ECD
1094  8ECD              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1095  8ECD
1096  8ECD 4F           3 ld c,a
1097  8ECE 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1098  8ED0 2A 78 5C     	ld hl,(FRAMES)
1099  8ED3 A7           	and a
1100  8ED4 ED 4A        	adc hl,bc
1101  8ED6 22 4D 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1102  8ED9 C9           	ret
1103  8EDA
1104  8EDA 3E 34        1 ld a,$34
1105  8EDC 18 EF        	jr 3B
1106  8EDE
1107  8EDE              ; ------------------------------------
1108  8EDE              ;
1109  8EDE              ; 18/03/24
1110  8EDE
1111  8EDE              Borra_diferencia
1112  8EDE
1113  8EDE ED 4B 2D 8C  	ld bc,(Scanlines_album_SP)
1114  8EE2
1115  8EE2 3A 2A 8C     	ld a,(Switch)
1116  8EE5 A7           	and a
1117  8EE6 28 08        	jr z,2F
1118  8EE8
1119  8EE8 2A 28 8C     	ld hl,(Techo_Scanlines_album_2)
1120  8EEB 11 28 8C     	ld de,Techo_Scanlines_album_2
1121  8EEE 18 06        	jr 3F
1122  8EF0
1123  8EF0 2A 26 8C     2 ld hl,(Techo_Scanlines_album)
1124  8EF3 11 26 8C     	ld de,Techo_Scanlines_album
1125  8EF6
1126  8EF6              ; Diferencia.
1127  8EF6
1128  8EF6 ED 42        3 sbc hl,bc
1129  8EF8
1130  8EF8 C8           	ret z
1131  8EF9 D8           	ret c
1132  8EFA
1133  8EFA              ; Nuevo techo, (más bajo que el anterior).
1134  8EFA              ; Fijamos nuevo techo y borramos bytes sobrantes.
1135  8EFA
1136  8EFA EB           	ex de,hl
1137  8EFB
1138  8EFB 71           	ld (hl),c
1139  8EFC 2C           	inc l
1140  8EFD 70           	ld (hl),b
1141  8EFE
1142  8EFE AF           	xor a
1143  8EFF 43           	ld b,e
1144  8F00
1145  8F00 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1146  8F03
1147  8F03 77           1 ld (hl),a
1148  8F04 23           	inc hl
1149  8F05 10 FC        	djnz 1B
1150  8F07
1151  8F07              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1152  8F07
1153  8F07 21 33 8C     	ld hl,Ctrl_3
1154  8F0A CB DE        	set 3,(hl)
1155  8F0C
1156  8F0C C9           	ret
1157  8F0D
1158  8F0D              ; --------------------------------------------------------------------------------------------------------------
1159  8F0D              ;
1160  8F0D              ;	26/3/24
1161  8F0D
1162  8F0D              Recauda_informacion_de_entidad_en_curso
1163  8F0D
1164  8F0D              ; Almacena la Coordenada Y de la entidad en curso.
1165  8F0D
1166  8F0D              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1167  8F0D
1168  8F0D 3A C1 8B     	ld a,(Coordenada_y)
1169  8F10 2A 2F 8C     	ld hl,(India_SP)
1170  8F13 77           	ld (hl),a
1171  8F14 2C           	inc l
1172  8F15
1173  8F15              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1174  8F15
1175  8F15 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
1176  8F19
1177  8F19 73           	ld (hl),e
1178  8F1A 2C           	inc l
1179  8F1B 72           	ld (hl),d
1180  8F1C 2C           	inc l
1181  8F1D
1182  8F1D 22 2F 8C     	ld (India_SP),hl
1183  8F20
1184  8F20 C9           	ret
1185  8F21
1186  8F21              ; --------------------------------------------------------------------------------------------------------------
1187  8F21              ;
1188  8F21              ;	27/03/24
1189  8F21              ;
1190  8F21
1191  8F21              Inicializa_India_y_limpia_Tabla_de_impresion
1192  8F21
1193  8F21 2A 2F 8C     	ld hl,(India_SP)
1194  8F24 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1195  8F27
1196  8F27 79           	ld a,c
1197  8F28 95           	sub l
1198  8F29 28 06        	jr z,2F
1199  8F2B 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1200  8F2C              ;														; _ y pasamos a inicializar (India_SP).
1201  8F2C AF           	xor a
1202  8F2D
1203  8F2D 77           1 ld (hl),a
1204  8F2E 2C           	inc l
1205  8F2F 10 FC        	djnz 1B												; Limpia Tabla.
1206  8F31
1207  8F31 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1208  8F34 22 2F 8C     	ld (India_SP),hl
1209  8F37
1210  8F37 C9           	ret
1211  8F38
1212  8F38              ; --------------------------------------------------------------------------------------------------------------
1213  8F38              ;
1214  8F38              ;	31/3/24
1215  8F38
1216  8F38              Ordena_tabla_de_impresion
1217  8F38
1218  8F38              ; 5794 T/states.
1219  8F38              ; 6278 T/states.
1220  8F38              ; 5310 T/states.
1221  8F38
1222  8F38              ; Inicializamos punteros (India_SP) e (India_2_SP).
1223  8F38              ; Inicializamos contador de comparaciones, [C].
1224  8F38              ; Cargamos los registros A y B para efectuar comparación.
1225  8F38
1226  8F38 FD 2E 00     	ld iyl,0
1227  8F3B
1228  8F3B 3A 07 8C     	ld a,(Entidades_en_curso)
1229  8F3E FE 04        	cp 4 	;	4
1230  8F40 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1231  8F41
1232  8F41 3D           	dec a
1233  8F42 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1234  8F43 51           	ld d,c 										; Copia de respaldo.
1235  8F44
1236  8F44 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1237  8F45
1238  8F45 21 03 89     	ld hl,Tabla_de_pintado+3
1239  8F48 46           	ld b,(hl)
1240  8F49 22 31 8C     	ld (India_2_SP),hl
1241  8F4C
1242  8F4C B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1243  8F4D DC 75 8F     	call c, Avanza_India_2_SP
1244  8F50 CC 75 8F     	call z, Avanza_India_2_SP
1245  8F53
1246  8F53 FD 2D        	dec iyl
1247  8F55 28 18        	jr z,2F
1248  8F57
1249  8F57
1250  8F57              ; --------------------------------------------------------------------------------------------------------------
1251  8F57              ;
1252  8F57              ;	7/4/24
1253  8F57
1254  8F57              Trueque
1255  8F57
1256  8F57              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1257  8F57              ;  			A contiene en nº de fila de (India_SP).
1258  8F57              ;			HL contiene (India_2_SP).
1259  8F57
1260  8F57 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1261  8F58 E5           	push hl										; Preservo (India_2_SP).
1262  8F59
1263  8F59 ED 5B 2F 8C  	ld de,(India_SP)
1264  8F5D EB           	ex de,hl
1265  8F5E 70           	ld (hl),b
1266  8F5F 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1267  8F60
1268  8F60 CD A1 8F     	call Intercambia_1_byte
1269  8F63 CD A1 8F     	call Intercambia_1_byte
1270  8F66
1271  8F66
1272  8F66              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1273  8F66              ; Recuperamos (India_2_SP) en HL.
1274  8F66
1275  8F66 2A 2F 8C     	ld hl,(India_SP)
1276  8F69 7E           	ld a,(hl)
1277  8F6A
1278  8F6A E1           	pop hl
1279  8F6B D1           	pop de
1280  8F6C
1281  8F6C              ; --------------------------------------------------------------------------------------------------------------
1282  8F6C
1283  8F6C CD 75 8F     	call Avanza_India_2_SP
1284  8F6F
1285  8F6F 14           2 inc d
1286  8F70 15           	dec d
1287  8F71 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1288  8F72 18 D8        	jr 1B
1289  8F74
1290  8F74 C9           	ret
1291  8F75
1292  8F75              ; ----- ----- ----- ----- -----
1293  8F75
1294  8F75              Avanza_India_2_SP
1295  8F75
1296  8F75 0D           	dec c
1297  8F76 28 0A        	jr z,Avanza_punteros_indios
1298  8F78
1299  8F78 FD 2C        	inc iyl
1300  8F7A
1301  8F7A 2C           	inc l
1302  8F7B 2C           	inc l
1303  8F7C 2C           	inc l
1304  8F7D
1305  8F7D 46           	ld b,(hl)
1306  8F7E 22 31 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1307  8F81
1308  8F81 C9           	ret
1309  8F82
1310  8F82              ; ----- ----- ----- ----- -----
1311  8F82
1312  8F82              Avanza_punteros_indios
1313  8F82
1314  8F82 15           	dec d
1315  8F83 28 15        	jr z,Prepara_salida
1316  8F85
1317  8F85 4A           	ld c,d
1318  8F86
1319  8F86 2A 2F 8C     	ld hl,(India_SP)
1320  8F89 2C           	inc l
1321  8F8A 2C           	inc l
1322  8F8B 2C           	inc l
1323  8F8C 7E           	ld a,(hl)
1324  8F8D 22 2F 8C     	ld (India_SP),hl
1325  8F90
1326  8F90 2C           	inc l
1327  8F91 2C           	inc l
1328  8F92 2C           	inc l
1329  8F93 46           	ld b,(hl)
1330  8F94 22 31 8C     	ld (India_2_SP),hl
1331  8F97
1332  8F97 FD 2C        	inc iyl
1333  8F99
1334  8F99 C9           	ret
1335  8F9A
1336  8F9A              Prepara_salida
1337  8F9A
1338  8F9A 21 00 89     	ld hl,Tabla_de_pintado
1339  8F9D 22 2F 8C     	ld (India_SP),hl
1340  8FA0 C9           	ret
1341  8FA1
1342  8FA1
1343  8FA1 2C           Intercambia_1_byte inc l
1344  8FA2 1C           	inc e
1345  8FA3 46           	ld b,(hl)
1346  8FA4 1A           	ld a,(de)
1347  8FA5 EB           	ex de,hl
1348  8FA6 70           	ld (hl),b
1349  8FA7 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1350  8FA8 C9           	ret
1351  8FA9
1352  8FA9              ; -----------------------------------------------------------------------------------
1353  8FA9              ;
1354  8FA9              ;	20/01/24
1355  8FA9              ;
1356  8FA9              ;
1357  8FA9
1358  8FA9              Construye_movimientos_masticados_entidad
1359  8FA9
1360  8FA9 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1361  8FAC E5           	push hl
1362  8FAD CD F0 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1363  8FB0              ;															; _ el (Contador_de_mov_masticados).
1364  8FB0 CD BB 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1365  8FB3              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1366  8FB3 CD EC 99     	call Recompone_posicion_inicio
1367  8FB6
1368  8FB6 CD 1C 97     1 call Draw
1369  8FB9 CD D5 8F     	call Guarda_movimiento_masticado
1370  8FBC
1371  8FBC CD 99 9D     	call Movimiento
1372  8FBF
1373  8FBF 3A 33 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1374  8FC2 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1375  8FC4 28 F0        	jr z,1B
1376  8FC6
1377  8FC6              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1378  8FC6              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1379  8FC6
1380  8FC6 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1381  8FC7 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1382  8FCA
1383  8FCA              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1384  8FCA
1385  8FCA CD FD 9E     	call Situa_en_contador_general_de_mov_masticados
1386  8FCD
1387  8FCD              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1388  8FCD              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1389  8FCD
1390  8FCD ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1391  8FD1
1392  8FD1 71           	ld (hl),c
1393  8FD2 23           	inc hl
1394  8FD3 70           	ld (hl),b
1395  8FD4
1396  8FD4 C9           	ret
1397  8FD5
1398  8FD5              ; -----------------------------------------------------------------------------------
1399  8FD5              ;
1400  8FD5              ;	28/12/23
1401  8FD5              ;
1402  8FD5              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1403  8FD5              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1404  8FD5
1405  8FD5              Guarda_movimiento_masticado
1406  8FD5
1407  8FD5 ED 73 0C 8C  	ld (Stack),sp
1408  8FD9 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1409  8FDD
1410  8FDD DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1411  8FDF FD E5            push iy 												; Pushea Puntero_objeto.
1412  8FE1
1413  8FE1 ED 7B 0C 8C      ld sp,(Stack)
1414  8FE5
1415  8FE5 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1416  8FE8 23           	inc hl
1417  8FE9 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1418  8FEC
1419  8FEC CD F0 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1420  8FEF              ;															; _ el (Contador_de_mov_masticados).
1421  8FEF C9               ret
1422  8FF0
1423  8FF0              ; --------------------------------------------------------------------------------------------------------------
1424  8FF0              ;
1425  8FF0              ;	12/1/24
1426  8FF0              ;
1427  8FF0              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1428  8FF0
1429  8FF0              Actualiza_Puntero_de_almacen_de_mov_masticados
1430  8FF0
1431  8FF0 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1432  8FF3 01 04 00     	ld bc,4
1433  8FF6 A7           	and a
1434  8FF7 ED 4A        	adc hl,bc
1435  8FF9 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1436  8FFC C9           	ret
1437  8FFD
1438  8FFD              ; --------------------------------------------------------------------------------------------------------------
1439  8FFD              ;
1440  8FFD              ;	24/03/24
1441  8FFD              ;
1442  8FFD              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1443  8FFD              ;
1444  8FFD              ;	IX contiene el puntero de impresión.
1445  8FFD              ;	DE contiene (Puntero_objeto).
1446  8FFD
1447  8FFD
1448  8FFD              Cargamos_registros_con_mov_masticado
1449  8FFD
1450  8FFD ED 73 0C 8C  	ld (Stack),sp
1451  9001 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1452  9005
1453  9005 D1           	pop de 															; DE contiene Puntero_objeto
1454  9006 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1455  9008
1456  9008 ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1457  900C ED 7B 0C 8C  	ld sp,(Stack)
1458  9010
1459  9010 7B           	ld a,e
1460  9011 82           	add d															; Comprueba si ya no hay datos en el almacén.
1461  9012
1462  9012 CC AB 93     	call z,Reinicia_entidad_maliciosa
1463  9015
1464  9015 C9           	ret
1465  9016
1466  9016              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1467  9016              ;
1468  9016              ;	22/7/24
1469  9016
1470  9016              Cargamos_registros_con_explosion
1471  9016
1472  9016
1473  9016 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1474  9019 CD B5 90     	call Extrae_address
1475  901C
1476  901C 5D           	ld e,l
1477  901D 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1478  901E
1479  901E DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1480  9022
1481  9022 C9           	ret
1482  9023
1483  9023
1484  9023              Cargamos_registros_con_explosion_Amadeus
1485  9023
1486  9023 2A 7B 89     	ld hl,(Pamm_Amadeus)
1487  9026 CD B5 90     	call Extrae_address
1488  9029
1489  9029 5D           	ld e,l
1490  902A 54           	ld d,h
1491  902B
1492  902B DD 2A 79 89  	ld ix,(p.imp.amadeus)
1493  902F
1494  902F C9           	ret
1495  9030
1496  9030              ; --------------------------------------------------------------------------------------------------------------
1497  9030              ;
1498  9030              ;	17/06/24
1499  9030              ;
1500  9030              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1501  9030              ;
1502  9030              ;	IX contiene el puntero de impresión.
1503  9030              ;	DE contiene (Puntero_objeto).
1504  9030
1505  9030
1506  9030              Cargamos_registros_con_mov_masticado_Amadeus
1507  9030
1508  9030 ED 73 0C 8C  	ld (Stack),sp
1509  9034 ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1510  9038 D1           	pop de 															; DE contiene Puntero_objeto
1511  9039 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1512  903B DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1513  903F ED 7B 0C 8C  	ld sp,(Stack)
1514  9043 C9           	ret
1515  9044
1516  9044              ; ---------------------------------------------------------------------------------------------------------------------
1517  9044              ;
1518  9044              ;	18/6/24
1519  9044              ;
1520  9044              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1521  9044
1522  9044              Genera_datos_de_impresion_Amadeus
1523  9044
1524  9044 3A 78 89     	ld a,(Impacto_Amadeus)
1525  9047 A7           	and a
1526  9048 20 03        	jr nz,1F
1527  904A
1528  904A              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1529  904A              ; _apuntando a la correspondiente explosión.
1530  904A
1531  904A CD 30 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1532  904D
1533  904D DD 7D        1 ld a,ixl
1534  904F E6 1F        	and $1f
1535  9051 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1536  9054
1537  9054 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1538  9057 E5           	push hl
1539  9058
1540  9058 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1541  905B 22 2D 8C     	ld (Scanlines_album_SP),hl
1542  905E
1543  905E CD 00 95     	call Genera_datos_de_impresion
1544  9061
1545  9061 E1           	pop hl
1546  9062 22 2D 8C     	ld (Scanlines_album_SP),hl
1547  9065
1548  9065 C9           	ret
1549  9066
1550  9066              ; ---------------------------------------------------------------------------------------------------------------------
1551  9066              ;
1552  9066              ;	13/03/24
1553  9066              ;
1554  9066              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1555  9066
1556  9066              Inicia_albumes_de_lineas
1557  9066
1558  9066 21 00 80     	ld hl,Scanlines_album
1559  9069 22 10 8C     	ld (Album_de_pintado),hl
1560  906C 22 2D 8C     	ld (Scanlines_album_SP),hl
1561  906F
1562  906F 21 1A 81     	ld hl,Scanlines_album_2
1563  9072 22 12 8C     	ld (Album_de_borrado),hl
1564  9075
1565  9075 C9           	ret
1566  9076
1567  9076              Inicia_albumes_de_lineas_Amadeus
1568  9076
1569  9076 21 34 82     	ld hl,Amadeus_scanlines_album
1570  9079 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1571  907C 21 58 82     	ld hl,Amadeus_scanlines_album_2
1572  907F 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1573  9082
1574  9082 C9           	ret
1575  9083
1576  9083              Inicia_albumes_de_disparos
1577  9083
1578  9083 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1579  9086 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1580  9089 21 84 82     	ld hl,Amadeus_disparos_scanlines_album_2
1581  908C 22 1A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1582  908F
1583  908F 21 8C 82     	ld hl,Entidades_disparos_scanlines_album
1584  9092 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1585  9095 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1586  9098
1587  9098 21 BF 82     	ld hl,Entidades_disparos_scanlines_album_2
1588  909B 22 1E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1589  909E
1590  909E C9           	ret
1591  909F
1592  909F              ; ---------------------------------------------------------------------------------------------------------------------
1593  909F              ;
1594  909F              ; 8/1/23
1595  909F              ;
1596  909F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1597  909F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1598  909F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1599  909F
1600  909F              ; Destruye HL y DE !!!!!
1601  909F
1602  909F              Inicia_punteros_de_cajas
1603  909F
1604  909F 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1605  90A2 CD B5 90         call Extrae_address
1606  90A5 22 FF 8B         ld (Puntero_store_caja),hl
1607  90A8 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1608  90AB 22 03 8C     	ld (Indice_restore_caja),hl
1609  90AE CD B5 90     	call Extrae_address
1610  90B1 22 01 8C     	ld (Puntero_restore_caja),hl
1611  90B4 C9               ret
1612  90B5
1613  90B5              ; *************************************************************************************************************************************************************
1614  90B5
1615  90B5              ;
1616  90B5              ; 20/10/22
1617  90B5              ;
1618  90B5              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1619  90B5              ;
1620  90B5              ; Destruye el puntero y DE !!!!!
1621  90B5
1622  90B5 5E           Extrae_address ld e,(hl)
1623  90B6 23           	inc hl
1624  90B7 56           	ld d,(hl)
1625  90B8 2B           	dec hl
1626  90B9 EB           	ex de,hl
1627  90BA C9           	ret
1628  90BB
1629  90BB              ; *************************************************************************************************************************************************************
1630  90BB              ;
1631  90BB              ;	20/1/24
1632  90BB              ;
1633  90BB              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1634  90BB              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1635  90BB              ;
1636  90BB              ;   Destruye HL y BC !!!!!,
1637  90BB              ;
1638  90BB              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1639  90BB              ;					"0" ..... Izquierda.
1640  90BB
1641  90BB              Inicia_Puntero_objeto
1642  90BB
1643  90BB 3A DE 8B     	ld a,(Cuad_objeto)
1644  90BE E6 01        	and 1
1645  90C0 F5           	push af
1646  90C1 CC DD 90     	call z,Inicia_puntero_objeto_izq
1647  90C4 F1           	pop af
1648  90C5 C8           	ret z
1649  90C6 CD CA 90     	call Inicia_puntero_objeto_der
1650  90C9 C9           	ret
1651  90CA
1652  90CA              ; Arrancamos desde la parte izquierda de la pantalla.
1653  90CA              ; Iniciamos (Indice_Sprite_der).
1654  90CA
1655  90CA 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1656  90CD 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1657  90D0 CD B5 90     	call Extrae_address
1658  90D3 22 D1 8B     	ld (Puntero_objeto),hl
1659  90D6
1660  90D6 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1661  90D9 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1662  90DC C9           	ret
1663  90DD
1664  90DD              ; Arrancamos desde la parte derecha de la pantalla.
1665  90DD              ; Iniciamos (Indice_Sprite_izq).
1666  90DD
1667  90DD 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1668  90E0 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1669  90E3 CD B5 90     	call Extrae_address
1670  90E6 22 D1 8B     	ld (Puntero_objeto),hl
1671  90E9
1672  90E9 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1673  90EC 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1674  90EF C9           	ret
1675  90F0
1676  90F0              ; **************************************************************************************************
1677  90F0              ;
1678  90F0              ;	06/07/24
1679  90F0              ;
1680  90F0              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1681  90F0
1682  90F0              Restore_entidad
1683  90F0
1684  90F0 2A FF 8B     	ld hl,(Puntero_store_caja)
1685  90F3 7E           	ld a,(hl)
1686  90F4 A7           	and a
1687  90F5 CC 03 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1688  90F8 28 F6        	jr z,Restore_entidad
1689  90FA
1690  90FA 11 BF 8B     	ld de,Bandeja_DRAW
1691  90FD 01 0C 00     	ld bc,12
1692  9100 ED B0        	ldir
1693  9102 C9           	ret
1694  9103
1695  9103              ; **************************************************************************************************
1696  9103              ;
1697  9103              ;	08/05/23
1698  9103              ;
1699  9103              ;	Incrementamos los dos punteros de entidades. (+1).
1700  9103
1701  9103              Incrementa_punteros_de_cajas
1702  9103
1703  9103 2A 01 8C     	ld hl,(Puntero_restore_caja)
1704  9106 22 FF 8B     	ld (Puntero_store_caja),hl
1705  9109 2A 03 8C     	ld hl,(Indice_restore_caja)
1706  910C 23           	inc hl
1707  910D 23           	inc hl
1708  910E 22 03 8C     	ld (Indice_restore_caja),hl
1709  9111 CD B5 90         call Extrae_address
1710  9114 22 01 8C         ld (Puntero_restore_caja),hl
1711  9117 C9               ret
1712  9118
1713  9118              ; -----------------------------------------------------------
1714  9118
1715  9118              ; Teclado.
1716  9118
1717  9118 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1718  911A DB FE        	in a,($fe)
1719  911C E6 01        	and $01
1720  911E 28 02        	jr z,1f
1721  9120 18 F6        	jr Pulsa_ENTER
1722  9122 C9           1 ret
1723  9123
1724  9123              ; **************************************************************************************************
1725  9123              ;
1726  9123              ; Temporización.
1727  9123
1728  9123              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1729  9123              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1730  9123              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1731  9123              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1732  9123
1733  9123              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1734  9123              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1735  9123              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1736  9123
1737  9123              ; A partir de $4f61 no hace falta DELAY.
1738  9123
1739  9123              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1740  9123
1741  9123              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1742  9123              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1743  9123              ;	LD A,B
1744  9123              ;	AND A
1745  9123              ;	JR NZ,wait
1746  9123              ;	RET
1747  9123
1748  9123              ; ---------------------------------------------------------------------------------------------------------------
1749  9123              ;
1750  9123              ;	13/07/24
1751  9123              ;
1752  9123
1753  9123              Inicia_Shield
1754  9123
1755  9123 21 57 8C     	ld hl,Datos_Shield
1756  9126 22 5B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1757  9129
1758  9129 7E           	ld a,(hl)
1759  912A 32 5E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1760  912D
1761  912D 3E 01        	ld a,1
1762  912F 32 5F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1763  9132
1764  9132 C9           	ret
1765  9133
1766  9133              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1767  9133              ;
1768  9133              ;	4/6/24
1769  9133              ;
1770  9133              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1771  9133              ;
1772  9133              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1773  9133              ;
1774  9133
1775  9133              Actualiza_pantalla
1776  9133
1777  9133 3E 02        	ld a,2
1778  9135 D3 FE        	out ($fe),a
1779  9137
1780  9137 3A 33 8C     	ld a,(Ctrl_3)
1781  913A CB 57        	bit 2,a
1782  913C 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1783  913E
1784  913E              Borrando_entidades
1785  913E
1786  913E 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1787  9141 CD B5 90     	call Extrae_address
1788  9144 24           	inc h
1789  9145 25           	dec h
1790  9146 28 05        	jr z,Pintando_entidades
1791  9148 CD F9 95     	call Pinta_Sprites
1792  914B 18 F1        	jr Borrando_entidades
1793  914D
1794  914D              Pintando_entidades
1795  914D
1796  914D 2A 2F 8C     	ld hl,(India_SP)
1797  9150 2C           	inc l
1798  9151 CD B5 90     	call Extrae_address
1799  9154 24           	inc h
1800  9155 25           	dec h
1801  9156 28 0E        	jr z,Ejecuta_escudo
1802  9158 1C           	inc e
1803  9159 1C           	inc e
1804  915A ED 53 2F 8C  	ld (India_SP),de
1805  915E CD B5 90     	call Extrae_address
1806  9161 CD F9 95     	call Pinta_Sprites
1807  9164 18 E7        	jr Pintando_entidades
1808  9166
1809  9166              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1810  9166
1811  9166              Ejecuta_escudo
1812  9166
1813  9166 3A 5D 8C     	ld a,(Shield)
1814  9169 A7           	and a
1815  916A 20 2F        	jr nz,Aplica_Shield
1816  916C
1817  916C              Borrando_Amadeus
1818  916C
1819  916C 21 33 8C     	ld hl,Ctrl_3
1820  916F CB 6E        	bit 5,(hl)
1821  9171 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1822  9173
1823  9173 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1824  9176 CD B5 90     	call Extrae_address
1825  9179 24           	inc h
1826  917A 25           	dec h
1827  917B 28 03        	jr z,Pintando_Amadeus
1828  917D CD F9 95     	call Pinta_Sprites
1829  9180
1830  9180              Pintando_Amadeus
1831  9180
1832  9180 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1833  9183 CD B5 90     	call Extrae_address
1834  9186 24           	inc h
1835  9187 25           	dec h
1836  9188 28 03        	jr z,1F
1837  918A CD F9 95     	call Pinta_Sprites
1838  918D
1839  918D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1840  918D
1841  918D 21 33 8C     1 ld hl,Ctrl_3
1842  9190 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1843  9192 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1844  9194 CB AE        	res 5,(hl)
1845  9196
1846  9196 3E 01        	ld a,1												; Borde azul.
1847  9198 D3 FE        	out ($fe),a
1848  919A
1849  919A C9           	ret
1850  919B
1851  919B              Aplica_Shield
1852  919B
1853  919B              ;	Bit 1 "1" (Shield_3) Sólo borra.
1854  919B              ;		  "0"     ""     Borra/Pinta.
1855  919B              ;	Bit 2    ""  RET.	 No borra, no pinta.
1856  919B
1857  919B 21 5F 8C     	ld hl,Shield_3
1858  919E
1859  919E CB 5E        	bit 3,(hl)
1860  91A0 20 DE        	jr nz,Pintando_Amadeus
1861  91A2
1862  91A2 CB 56        	bit 2,(hl)
1863  91A4 20 E7        	jr nz,1B
1864  91A6
1865  91A6 CB 4E        	bit 1,(hl)
1866  91A8 C4 AF 91     	call nz,Borra_Amadeus_shield
1867  91AB
1868  91AB 28 BF        	jr z,Borrando_Amadeus
1869  91AD 18 DE        	jr 1B
1870  91AF
1871  91AF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1872  91AF
1873  91AF              Borra_Amadeus_shield
1874  91AF
1875  91AF 3A 33 8C     	ld a,(Ctrl_3)
1876  91B2 CB 6F        	bit 5,a
1877  91B4 28 08        	jr z,1F
1878  91B6
1879  91B6 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1880  91B9 CD B5 90     	call Extrae_address
1881  91BC 18 06        	jr 2F
1882  91BE
1883  91BE 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1884  91C1 CD B5 90     	call Extrae_address
1885  91C4
1886  91C4 CD F9 95     2 call Pinta_Sprites
1887  91C7
1888  91C7 AF           	xor a
1889  91C8 3C           	inc a											; Asegura NZ en la salida de la rutina.
1890  91C9
1891  91C9 C9           	ret
1892  91CA
1893  91CA              Pinta_Amadeus_shield
1894  91CA
1895  91CA 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1896  91CD CD B5 90     	call Extrae_address
1897  91D0 CD F9 95     	call Pinta_Sprites
1898  91D3
1899  91D3 AF           	xor a
1900  91D4 3C           	inc a											; Asegura NZ en la salida de la rutina.
1901  91D5
1902  91D5 C9           	ret
1903  91D6
1904  91D6              Borra_Pinta_Amadeus_shield
1905  91D6
1906  91D6 CD AF 91     	call Borra_Amadeus_shield
1907  91D9 CD CA 91     	call Pinta_Amadeus_shield
1908  91DC C9           	ret
1909  91DD
1910  91DD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1911  91DD              ;
1912  91DD              ;	19/6/24
1913  91DD              ;
1914  91DD
1915  91DD              Teclado
1916  91DD
1917  91DD              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1918  91DD
1919  91DD 3E F7        	ld a,$f7												; "5" para disparar.
1920  91DF DB FE        	in a,($fe)
1921  91E1 E6 10        	and $10
1922  91E3
1923  91E3 CC 9E A1     	call z,Genera_disparo_Amadeus
1924  91E6
1925  91E6 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1926  91E8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1927  91EA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1928  91EC CC 66 9D         call z,Amadeus_a_izquierda
1929  91EF
1930  91EF 3E F7        	ld a,$f7
1931  91F1 DB FE        	in a,($fe)
1932  91F3 E6 01        	and $01
1933  91F5 C8           	ret z
1934  91F6
1935  91F6 3E F7        	ld a,$f7
1936  91F8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1937  91FA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1938  91FC CC 7E 9D     	call z,Amadeus_a_derecha
1939  91FF
1940  91FF C9           	ret
1941  9200
1942  9200              ; ------------------------------------------------------------------------------------------------------------------------
1943  9200              ;
1944  9200              ;	06/07/24
1945  9200              ;
1946  9200
1947  9200              Genera_explosion
1948  9200
1949  9200 21 45 8C     	ld hl,Clock_explosion
1950  9203 35           	dec (hl)
1951  9204 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1952  9206
1953  9206              Borra_entidad_colisionada
1954  9206
1955  9206 CD 0D 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1956  9209 CD 16 90     	call Cargamos_registros_con_explosion
1957  920C CD 00 95     	call Genera_datos_de_impresion
1958  920F
1959  920F AF           	xor a
1960  9210 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1961  9211
1962  9211 C9           	ret
1963  9212
1964  9212              Siguiente_frame_explosion
1965  9212
1966  9212 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1967  9214
1968  9214              ; Avanza Frame de explosión.
1969  9214
1970  9214 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1971  9217 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1972  921A
1973  921A 79           	ld a,c
1974  921B 95           	sub l
1975  921C 20 0B        	jr nz,1F
1976  921E
1977  921E              ; Fín de la entidad !!!!!!!!!!!!!
1978  921E
1979  921E 21 06 8C     	ld hl,Numero_parcial_de_entidades
1980  9221 35           	dec (hl)
1981  9222 23           	inc hl
1982  9223 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1983  9224
1984  9224 CD 80 93     	call Limpiamos_bandeja_DRAW
1985  9227 18 DD        	jr Borra_entidad_colisionada
1986  9229
1987  9229 23           1 inc hl
1988  922A 23           	inc hl
1989  922B 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1990  922E 18 D6        	jr Borra_entidad_colisionada
1991  9230
1992  9230              ; ----- ----- ----- ----- -----
1993  9230
1994  9230              Genera_explosion_Amadeus
1995  9230
1996  9230 21 46 8C     	ld hl,Clock_explosion_Amadeus
1997  9233 35           	dec (hl)
1998  9234 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
1999  9236
2000  9236              Borra_Amadeus_impactado
2001  9236
2002  9236 CD 78 8E     	call Change_Amadeus
2003  9239 CD 23 90     	call Cargamos_registros_con_explosion_Amadeus
2004  923C CD 44 90     	call Genera_datos_de_impresion_Amadeus
2005  923F
2006  923F 21 33 8C     	ld hl,Ctrl_3
2007  9242 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2008  9244
2009  9244 AF           	xor a
2010  9245 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2011  9246
2012  9246 C9           	ret
2013  9247
2014  9247              Siguiente_frame_explosion_Amadeus
2015  9247
2016  9247 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2017  9249
2018  9249              ; Avanza Frame de explosión.
2019  9249
2020  9249 2A 7B 89     	ld hl,(Pamm_Amadeus)
2021  924C 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2022  924F
2023  924F 79           	ld a,c
2024  9250 95           	sub l
2025  9251 20 0B        	jr nz,1F
2026  9253
2027  9253              ; Fín de Amadeus !!!!!!!!!!!!!
2028  9253              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2029  9253
2030  9253 AF           	xor a
2031  9254 32 78 89     	ld (Impacto_Amadeus),a
2032  9257 21 33 8C     	ld hl,Ctrl_3
2033  925A CB F6        	set 6,(hl)
2034  925C
2035  925C 18 D8        	jr Borra_Amadeus_impactado
2036  925E
2037  925E 23           1 inc hl
2038  925F 23           	inc hl
2039  9260 22 7B 89     	ld (Pamm_Amadeus),hl
2040  9263 18 D1        	jr Borra_Amadeus_impactado
2041  9265
2042  9265              ; ---------------------------------------------------------------
2043  9265
2044  9265              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9265              ; ******************************************************************************************************************************************************************************************
   2+ 9265              ;
   3+ 9265              ;   21/04/24
   4+ 9265              ;
   5+ 9265              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9265              ;   (XOR) bit a bit.
   7+ 9265              ;
   8+ 9265              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9265
  10+ 9265              Derivando_RND
  11+ 9265
  12+ 9265 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9268
  14+ 9268 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 926A C5               push bc
  16+ 926B              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 926B 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 926E              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 926E
  20+ 926E A7           6 and a                                 ; Carry a "0".
  21+ 926F CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9271 30 02            jr nc,1F
  23+ 9273
  24+ 9273 CB C1            set 0,c
  25+ 9275
  26+ 9275 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9276 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9278 5F               ld e,a
  29+ 9279
  30+ 9279 7A               ld a,d
  31+ 927A E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 927C 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 927E
  34+ 927E CB 3F            srl a
  35+ 9280
  36+ 9280 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9281
  38+ 9281 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9282 28 04            jr z,4F
  40+ 9284
  41+ 9284 CB FF            set 7,a
  42+ 9286 18 02            jr 5F
  43+ 9288
  44+ 9288 CB BF        4 res 7,a
  45+ 928A
  46+ 928A CB 21        5 sla c
  47+ 928C 10 E0            djnz 6B
  48+ 928E
  49+ 928E 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 928F
  51+ 928F 77               ld (hl),a
  52+ 9290 23               inc hl
  53+ 9291 C1               pop bc
  54+ 9292 10 D4            djnz 3B
  55+ 9294
  56+ 9294 C9               ret
  57+ 9295
  58+ 9295
  59+ 9295
# file closed: RND_Derivando.asm
2045  9295              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9295              ;---------------------------------------------------------------------------------------------------------------
   2+ 9295              ;
   3+ 9295              ;   8/3/24
   4+ 9295              ;
   5+ 9295              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9295              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9295              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9295              ;	_ de la 1ª entidad del Nivel.
   9+ 9295              ;
  10+ 9295              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9295
  12+ 9295              ;	MODIFICA: HL,DE y A.
  13+ 9295              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9295
  15+ 9295              Inicializa_Nivel
  16+ 9295
  17+ 9295 2A 53 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9298 CD B5 90     	call Extrae_address
  19+ 929B 7E           	ld a,(hl)
  20+ 929C 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 929F 23           	inc hl
  22+ 92A0 CD AD 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92A3 22 55 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92A6 CD B6 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92A9
  26+ 92A9 CD C7 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92AC C9           	ret
  28+ 92AD
  29+ 92AD              ; ----------------------
  30+ 92AD
  31+ 92AD 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92B0 01 04 00     	ld bc,4
  33+ 92B3 ED B0        	ldir
  34+ 92B5 C9           	ret
  35+ 92B6
  36+ 92B6 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92B7 CD 51 94         call Calcula_salto_en_BC
  38+ 92BA 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92BD A7               and a
  40+ 92BE ED 4A            adc hl,bc
  41+ 92C0 CD B5 90         call Extrae_address
  42+ 92C3 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 92C6 C9               ret
  44+ 92C7
  45+ 92C7 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92CA CD 51 94     	call Calcula_salto_en_BC
  47+ 92CD 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92D0 A7               and a
  49+ 92D1 ED 4A            adc hl,bc
  50+ 92D3 CD B5 90         call Extrae_address
  51+ 92D6 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92D9 C9           	ret
  53+ 92DA
  54+ 92DA              ;---------------------------------------------------------------------------------------------------------------
  55+ 92DA              ;
  56+ 92DA              ;   5/1/24
  57+ 92DA              ;
  58+ 92DA              ;	Destruye A,BC,HL,DE
  59+ 92DA
  60+ 92DA              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92DA              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92DA
  63+ 92DA              Inicia_Entidades
  64+ 92DA
  65+ 92DA              ; Preparamos los punteros de las cajas de entidades:
  66+ 92DA
  67+ 92DA CD 9F 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92DD              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92DD CD 99 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92E0
  71+ 92E0 2A 55 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92E3
  73+ 92E3 22 55 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92E6
  75+ 92E6 CD FF 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92E9
  77+ 92E9 2A 55 8C     	ld hl,(Datos_de_nivel)
  78+ 92EC
  79+ 92EC              ; En este punto:
  80+ 92EC              ;
  81+ 92EC              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92EC              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92EC
  84+ 92EC C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92ED
  86+ 92ED 7E           	ld a,(hl)
  87+ 92EE CD 6B 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92F1
  89+ 92F1 CD 63 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92F4
  91+ 92F4              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92F4
  93+ 92F4 CD 21 94     	call Busca_mov_masticados_segun_tipo
  94+ 92F7
  95+ 92F7 A7           	and a
  96+ 92F8 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92FA
  98+ 92FA              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92FA
 100+ 92FA              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92FA              ;	_ de este tipo de entidad.
 102+ 92FA
 103+ 92FA CD FD 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92FD CD 0A 9F     	call Transfiere_datos_de_contadores
 105+ 9300
 106+ 9300 18 06        	jr 4F
 107+ 9302
 108+ 9302 CD A9 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9305
 110+ 9305              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9305              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9305              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9305              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9305              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9305
 116+ 9305 CD DF 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9308              ;																; _ Mov_masticados ya generados.
 118+ 9308
 119+ 9308 CD FD 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 930B
 121+ 930B DD E5        	push ix
 122+ 930D E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 930E
 124+ 930E D5           	push de
 125+ 930F CD D4 94     	call Genera_coordenadas
 126+ 9312
 127+ 9312 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 128+ 9316 CD 0D 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9319 D1           	pop de
 130+ 931A
 131+ 931A CD 00 95     	call Genera_datos_de_impresion
 132+ 931D              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 931D              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 931D              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 931D              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 931D
 137+ 931D CD A3 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9320
 139+ 9320              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9320
 141+ 9320 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 9324 CD 90 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9327
 144+ 9327 CD 80 93     	call Limpiamos_bandeja_DRAW
 145+ 932A CD 03 91     	call Incrementa_punteros_de_cajas
 146+ 932D
 147+ 932D              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 932D              ; _ entidad del Nivel.
 149+ 932D
 150+ 932D 3A 34 8C     	ld a,(Ctrl_4)
 151+ 9330 E6 F0        	and $f0
 152+ 9332 32 34 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9335
 154+ 9335              ; Siguiente entidad del Nivel.
 155+ 9335
 156+ 9335 2A 55 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9338 23           	inc hl 														; _ entidad del Nivel.
 158+ 9339
 159+ 9339 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 933A
 161+ 933A 10 A7        	djnz 2B
 162+ 933C
 163+ 933C C9           	ret
 164+ 933D
 165+ 933D              ; -------------------------------------------------------------------------------------------------------------------
 166+ 933D              ;
 167+ 933D              ;	27/5/24
 168+ 933D              ;
 169+ 933D              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 933D              ;
 171+ 933D
 172+ 933D              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 933D              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 933D
 175+ 933D 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9340 CD 63 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9343
 178+ 9343
 179+ 9343              Construye_movimientos_masticados_Amadeus
 180+ 9343
 181+ 9343 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9346 CD F0 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9349              ;															; _ el (Contador_de_mov_masticados).
 184+ 9349 CD BB 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 934C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 934C
 187+ 934C              ; Generamos movimientos masticados de Amadeus.
 188+ 934C
 189+ 934C 06 79        	ld b,121												; $0079, 121d.
 190+ 934E
 191+ 934E C5           1 push bc
 192+ 934F CD 1C 97     	call Draw
 193+ 9352 CD D5 8F     	call Guarda_movimiento_masticado
 194+ 9355
 195+ 9355 CD 90 9A     	call Mov_right
 196+ 9358 CD 90 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 935B
 198+ 935B C1           	pop bc
 199+ 935C 10 F0        	djnz 1B
 200+ 935E
 201+ 935E              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 935E
 203+ 935E              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 935E              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 935E
 206+ 935E 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9361 01 08 00     	ld bc,8
 208+ 9364 A7           	and a
 209+ 9365 ED 42        	sbc hl,bc
 210+ 9367 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 936A
 212+ 936A C9           	ret
 213+ 936B
 214+ 936B              ; ---------------------------------------------------------------------
 215+ 936B              ;
 216+ 936B              ;	10/02/24
 217+ 936B              ;
 218+ 936B              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 936B              ;
 220+ 936B              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 936B
 222+ 936B              Definicion_segun_tipo
 223+ 936B
 224+ 936B CD 51 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 936E 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9371 CD 59 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9374 C9           	ret
 228+ 9375
 229+ 9375              ; ---------------------------------------------------------------------
 230+ 9375              ;
 231+ 9375              ;	6/7/24
 232+ 9375
 233+ 9375
 234+ 9375              Store_Restore_cajas
 235+ 9375
 236+ 9375 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 9379 CD 90 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 937C CD 03 91     	call Incrementa_punteros_de_cajas
 239+ 937F C9           	ret
 240+ 9380
 241+ 9380              ; ---------------------------------------------------------------------
 242+ 9380              ;
 243+ 9380              ;	23/6/24
 244+ 9380              ;
 245+ 9380              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9380              ;
 247+ 9380              ;	MODIFY: HL
 248+ 9380
 249+ 9380              Limpiamos_bandeja_DRAW
 250+ 9380
 251+ 9380 ED 73 0C 8C  	ld (Stack),sp
 252+ 9384 31 E4 8B     	ld sp,Vel_left
 253+ 9387
 254+ 9387 AF           	xor a
 255+ 9388 67           	ld h,a
 256+ 9389 6F           	ld l,a
 257+ 938A
 258+ 938A E5           	push hl
 259+ 938B E5           	push hl
 260+ 938C E5           	push hl
 261+ 938D E5           	push hl
 262+ 938E E5           	push hl
 263+ 938F E5           	push hl
 264+ 9390 E5           	push hl
 265+ 9391 E5           	push hl
 266+ 9392 E5           	push hl
 267+ 9393 E5           	push hl
 268+ 9394 E5           	push hl
 269+ 9395 E5           	push hl
 270+ 9396 E5           	push hl
 271+ 9397 E5           	push hl
 272+ 9398 E5           	push hl
 273+ 9399 E5           	push hl
 274+ 939A E5           	push hl
 275+ 939B E5           	push hl
 276+ 939C
 277+ 939C 33           	inc sp
 278+ 939D
 279+ 939D E5           	push hl
 280+ 939E ED 7B 0C 8C  	ld sp,(Stack)
 281+ 93A2
 282+ 93A2 C9           	ret
 283+ 93A3
 284+ 93A3              ; ---------------------------------------------------------------------
 285+ 93A3              ;
 286+ 93A3              ;	24/03/24
 287+ 93A3
 288+ 93A3 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93A6 2B           	dec hl
 290+ 93A7 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93AA C9           	ret
 292+ 93AB
 293+ 93AB              ; ---------------------------------------------------------------------
 294+ 93AB              ;
 295+ 93AB              ;	8/5/24
 296+ 93AB
 297+ 93AB              Reinicia_entidad_maliciosa
 298+ 93AB
 299+ 93AB              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93AB
 301+ 93AB CD FD 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93AE CD 0A 9F     	call Transfiere_datos_de_contadores
 303+ 93B1
 304+ 93B1              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93B1
 306+ 93B1 3A BF 8B     	ld a,(Tipo)
 307+ 93B4 CD 6B 93     	call Definicion_segun_tipo
 308+ 93B7
 309+ 93B7 E5           	push hl
 310+ 93B8 DD E1        	pop ix
 311+ 93BA
 312+ 93BA DD 6E 0B     	ld l,(ix+11)
 313+ 93BD DD 66 0C     	ld h,(ix+12)
 314+ 93C0
 315+ 93C0 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93C3
 317+ 93C3 CD FD 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93C6
 319+ 93C6              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93C6              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93C6              ; Ejemplos.
 322+ 93C6
 323+ 93C6              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93C6              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93C6              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93C6              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93C6              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93C6
 329+ 93C6 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 93C9 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93CB
 332+ 93CB 7E           	ld a,(hl)
 333+ 93CC CB 2F        	sra a
 334+ 93CE CB 2F        	sra a
 335+ 93D0
 336+ 93D0 32 CA 8B     	ld (Velocidad),a
 337+ 93D3
 338+ 93D3 3E 40        	ld a,$40
 339+ 93D5 BE           	cp (hl)
 340+ 93D6 C0           	ret nz
 341+ 93D7
 342+ 93D7              ; Límitador.
 343+ 93D7
 344+ 93D7              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93D7
 346+ 93D7 CB 2E        	sra (hl)
 347+ 93D9 21 CA 8B     	ld hl,Velocidad
 348+ 93DC CB 2E        	sra (hl)
 349+ 93DE
 350+ 93DE C9           	ret
 351+ 93DF
 352+ 93DF              ; ---------------------------------------------------------------------
 353+ 93DF              ;
 354+ 93DF              ;	22/01/24
 355+ 93DF
 356+ 93DF 21 34 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93E2 CB 46        	bit 0,(hl)
 358+ 93E4 20 0D        	jr nz,1F
 359+ 93E6 CB 4E        	bit 1,(hl)
 360+ 93E8 20 0C        	jr nz,2F
 361+ 93EA CB 56        	bit 2,(hl)
 362+ 93EC 20 0B        	jr nz,3F
 363+ 93EE CB 5E        	bit 3,(hl)
 364+ 93F0 20 0A        	jr nz,4F
 365+ 93F2 C9           	ret
 366+ 93F3
 367+ 93F3 CB E6        1 set 4,(hl)
 368+ 93F5 C9           	ret
 369+ 93F6 CB EE        2 set 5,(hl)
 370+ 93F8 C9           	ret
 371+ 93F9 CB F6        3 set 6,(hl)
 372+ 93FB C9           	ret
 373+ 93FC CB FE        4 set 7,(hl)
 374+ 93FE C9           	ret
 375+ 93FF
 376+ 93FF              ; ---------------------------------------------------------------------
 377+ 93FF              ;
 378+ 93FF              ;	23/01/24
 379+ 93FF              ;
 380+ 93FF              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93FF              ;
 382+ 93FF              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93FF              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93FF              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93FF              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93FF
 387+ 93FF              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93FF
 389+ 93FF 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9400 3D           	dec a
 391+ 9401 20 06        	jr nz,1F
 392+ 9403
 393+ 9403              ; --- Tipo_1
 394+ 9403
 395+ 9403 21 34 8C     	ld hl,Ctrl_4
 396+ 9406 CB C6        	set 0,(hl)
 397+ 9408 C9           	ret
 398+ 9409
 399+ 9409 3D           1 dec a
 400+ 940A 20 06        	jr nz,2F
 401+ 940C
 402+ 940C              ; --- Tipo_2
 403+ 940C
 404+ 940C 21 34 8C     	ld hl,Ctrl_4
 405+ 940F CB CE        	set 1,(hl)
 406+ 9411 C9           	ret
 407+ 9412
 408+ 9412 3D           2 dec a
 409+ 9413 20 06        	jr nz,3F
 410+ 9415
 411+ 9415              ; --- Tipo_3
 412+ 9415
 413+ 9415 21 34 8C     	ld hl,Ctrl_4
 414+ 9418 CB D6        	set 2,(hl)
 415+ 941A C9           	ret
 416+ 941B
 417+ 941B              ; --- Tipo_3
 418+ 941B
 419+ 941B 21 34 8C     3 ld hl,Ctrl_4
 420+ 941E CB D6        	set 2,(hl)
 421+ 9420 C9           	ret
 422+ 9421
 423+ 9421              ; ---------------------------------------------------------------------
 424+ 9421              ;
 425+ 9421              ;	22/01/24
 426+ 9421
 427+ 9421 21 34 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9424 CB 46        	bit 0,(hl)
 429+ 9426 20 0E        	jr nz,1F
 430+ 9428
 431+ 9428 CB 4E        	bit 1,(hl)
 432+ 942A 20 10        	jr nz,2F
 433+ 942C
 434+ 942C CB 56        	bit 2,(hl)
 435+ 942E 20 12        	jr nz,3F
 436+ 9430
 437+ 9430 CB 5E        	bit 3,(hl)
 438+ 9432 20 14        	jr nz,4F
 439+ 9434 18 19        	jr 6F
 440+ 9436
 441+ 9436              ; Entidad_de_Tipo_1.
 442+ 9436
 443+ 9436 CB 66        1 bit 4,(hl)
 444+ 9438 28 15        	jr z,6F
 445+ 943A 18 10        	jr 5F
 446+ 943C
 447+ 943C              ; Entidad_de_Tipo_2.
 448+ 943C
 449+ 943C CB 6E        2 bit 5,(hl)
 450+ 943E 28 0F        	jr z,6F
 451+ 9440 18 0A        	jr 5F
 452+ 9442
 453+ 9442              ; Entidad_de_Tipo_3.
 454+ 9442
 455+ 9442 CB 76        3 bit 6,(hl)
 456+ 9444 28 09        	jr z,6F
 457+ 9446 18 04        	jr 5F
 458+ 9448
 459+ 9448              ; Entidad_de_Tipo_4.
 460+ 9448
 461+ 9448 CB 7E        4 bit 7,(hl)
 462+ 944A 28 03        	jr z,6F
 463+ 944C
 464+ 944C              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 944C
 466+ 944C AF           5 xor a
 467+ 944D 3C           	inc a
 468+ 944E C9           	ret
 469+ 944F
 470+ 944F              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 944F
 472+ 944F AF           6 xor a
 473+ 9450 C9           	ret
 474+ 9451
 475+ 9451              ;	------------------------------------------------------------------------------------
 476+ 9451              ;
 477+ 9451              ;	12/01/24
 478+ 9451              ;
 479+ 9451              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9451              ;
 481+ 9451              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9451              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9451
 484+ 9451 CB 27        Calcula_salto_en_BC sla a
 485+ 9453 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9455 4F           	ld c,a
 487+ 9456 06 00        	ld b,0
 488+ 9458 C9           	ret
 489+ 9459
 490+ 9459              ; ------------------------------------------------------------------
 491+ 9459              ;
 492+ 9459              ;	19/1/24
 493+ 9459              ;
 494+ 9459              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9459              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9459
 497+ 9459 A7           Situa_en_datos_de_definicion and a
 498+ 945A ED 4A        	adc hl,bc
 499+ 945C CD B5 90     	call Extrae_address
 500+ 945F 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 9462 C9           	ret
 502+ 9463
 503+ 9463              ; ------------------------------------------------------------------
 504+ 9463
 505+ 9463              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9463              ; 	inc de
 507+ 9463              ; 	inc de
 508+ 9463              ; 	ex de,hl
 509+ 9463              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9463              ; 	ret
 511+ 9463
 512+ 9463              ; ----------------------------------------------------------------------------------------------------------
 513+ 9463              ;
 514+ 9463              ;	24/6/24
 515+ 9463              ;
 516+ 9463              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9463              ;	_ de entidad.
 518+ 9463              ;
 519+ 9463              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9463              ;
 521+ 9463              ;
 522+ 9463              ;	MODIFICA: HL,DE y BC
 523+ 9463
 524+ 9463
 525+ 9463              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9463
 527+ 9463 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9466 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9467 12           	ld (de),a
 530+ 9468 23           	inc hl
 531+ 9469              ;
 532+ 9469 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 946C 01 02 00     	ld bc,2
 534+ 946F ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9471              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9471 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 9474 7E           	ld a,(hl)
 538+ 9475 12           	ld (de),a
 539+ 9476 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9477
 541+ 9477 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 947A 01 04 00     	ld bc,4
 543+ 947D ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 947F
 545+ 947F 11 DC 8B     	ld de,Posicion_inicio
 546+ 9482 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9485 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9487
 549+ 9487 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 948A 01 02 00     	ld bc,2
 551+ 948D ED B0        	ldir
 552+ 948F
 553+ 948F C9           	ret
 554+ 9490
 555+ 9490              ; ----------------------------------------------------------------------------------------------------------
 556+ 9490              ;
 557+ 9490              ;	1/8/24
 558+ 9490              ;
 559+ 9490
 560+ 9490              Parametros_de_bandeja_DRAW_a_caja
 561+ 9490
 562+ 9490 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 9493 01 0C 00     	ld bc,12
 564+ 9496 ED B0        	ldir
 565+ 9498 C9           	ret
 566+ 9499
 567+ 9499              ;---------------------------------------------------------------------------------------------------------------
 568+ 9499              ;
 569+ 9499              ;	5/1/24
 570+ 9499              ;
 571+ 9499              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9499              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9499              ;
 574+ 9499              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9499              ;
 576+ 9499              ;	(Numero_parcial_de_entidades)="7".
 577+ 9499              ;
 578+ 9499              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9499              ;
 580+ 9499              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9499              ;
 582+ 9499              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9499              ;	MODIFICA: A y B.
 584+ 9499              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9499
 586+ 9499              Inicializa_Numero_parcial_de_entidades
 587+ 9499
 588+ 9499              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9499
 590+ 9499 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 949C A7           	and a
 592+ 949D
 593+ 949D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 949D              ;	jr z,$
 595+ 949D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 949D
 597+ 949D 20 03        	jr nz,3F
 598+ 949F
 599+ 949F              ; ---------- ---------- ----------
 600+ 949F
 601+ 949F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 949F              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 949F
 604+ 949F CD 95 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94A2
 606+ 94A2              ; ---------- ---------- ----------
 607+ 94A2
 608+ 94A2 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94A5 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94A7 38 08        	jr c,1F
 611+ 94A9
 612+ 94A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94A9              ; Actualizamos variables.
 614+ 94A9
 615+ 94A9 3E 07        	ld a,7
 616+ 94AB 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94AE 47           	ld b,a
 618+ 94AF 18 04        	jr 2F
 619+ 94B1
 620+ 94B1              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94B1              ; (Numero_de_entidades)="0".
 622+ 94B1
 623+ 94B1 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94B4 47           	ld b,a
 625+ 94B5 C9           2 ret
 626+ 94B6
# file closed: Rutinas_de_inicio_y_niveles.asm
2046  94B6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94B6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94B6              ;
   3+ 94B6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94B6              ;
   5+ 94B6              ; *****************************************************************************************************************************************************************************************
   6+ 94B6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94B6
   8+ 94B6 7C           calcula_tercio ld a,h
   9+ 94B7 E6 18        	and $18
  10+ 94B9 CB 2F        	sra a
  11+ 94BB CB 2F        	sra a
  12+ 94BD CB 2F        	sra a
  13+ 94BF C9           	ret
  14+ 94C0
# file closed: calcula_tercio.asm
2047  94C0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C0              ;
   3+ 94C0              ;
   4+ 94C0              ;	CLS.
   5+ 94C0              ;
   6+ 94C0              ;	Limpia la pantalla y define sus atributos.
   7+ 94C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C0              ;
   9+ 94C0              ;	COLORES: 0 ..... NEGRO
  10+ 94C0              ;    		 1 ..... AZUL
  11+ 94C0              ; 			 2 ..... ROJO
  12+ 94C0              ;			 3 ..... MAGENTA
  13+ 94C0              ; 			 4 ..... VERDE
  14+ 94C0              ; 			 5 ..... CIAN
  15+ 94C0              ;			 6 ..... AMARILLO
  16+ 94C0              ; 			 7 ..... BLANCO
  17+ 94C0              ;
  18+ 94C0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C0              ;
  20+ 94C0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C0
  22+ 94C0
  23+ 94C0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94C3 11 01 40     	LD DE,$4001
  25+ 94C6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94CB ED B0        	LDIR
  28+ 94CD 01 FF 02     	LD BC,767
  29+ 94D0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D1 ED B0        	LDIR
  31+ 94D3 C9           	ret
  32+ 94D4
# file closed: Cls.asm
2048  94D4              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94D4              ; ------------------------------------------------------------------------
   2+ 94D4              ;
   3+ 94D4              ;	30/1/24
   4+ 94D4              ;
   5+ 94D4              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94D4              ;	Fila superior "0", Columna izquierda "0".
   7+ 94D4              ;
   8+ 94D4              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94D4              ;
  10+ 94D4              ;	Modifica: A,BC y DE.
  11+ 94D4
  12+ 94D4 7D           Genera_coordenadas ld a,l
  13+ 94D5 E6 1F        	and $1f
  14+ 94D7 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94DA
  16+ 94DA 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94DB FE 40        	cp $40
  18+ 94DD 38 1C        	jr c,4F
  19+ 94DF
  20+ 94DF CD B6 94     	call calcula_tercio
  21+ 94E2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94E3
  23+ 94E3 1E 00        	ld e,0
  24+ 94E5 7D           	ld a,l
  25+ 94E6 E6 E0        	and $e0
  26+ 94E8 28 01        	jr z,1F
  27+ 94EA 04           	inc b
  28+ 94EB
  29+ 94EB 04           1 inc b
  30+ 94EC 05           	dec b
  31+ 94ED 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94EF              ;														; _ , salimos.
  33+ 94EF 1C           3 inc e
  34+ 94F0 D6 20        	sub 32
  35+ 94F2 20 FB        	jr nz,3B
  36+ 94F4 10 F5        	djnz 1B
  37+ 94F6
  38+ 94F6 7B           2 ld a,e
  39+ 94F7 32 C1 8B     	ld (Coordenada_y),a
  40+ 94FA C9           	ret
  41+ 94FB
  42+ 94FB AF           4 xor a
  43+ 94FC 32 C1 8B     	ld (Coordenada_y),a
  44+ 94FF C9           	ret
  45+ 9500
# file closed: Genera_coordenadas.asm
2049  9500              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9500              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9500              ;
   3+ 9500              ;	20/09/24
   4+ 9500              ;
   5+ 9500              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9500              ;   DE contiene Puntero_objeto.
   7+ 9500              ;   IX contiene el Puntero de impresión.
   8+ 9500
   9+ 9500              Genera_datos_de_impresion
  10+ 9500
  11+ 9500 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9504
  13+ 9504 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9507 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9509
  16+ 9509 2A 2D 8C         ld hl,(Scanlines_album_SP)
  17+ 950C
  18+ 950C 3E 05            ld a,5
  19+ 950E 85               add l
  20+ 950F 6F               ld l,a
  21+ 9510
  22+ 9510 F9               ld sp,hl
  23+ 9511 22 2D 8C         ld (Scanlines_album_SP),hl
  24+ 9514
  25+ 9514 21 00 00         ld hl,0
  26+ 9517
  27+ 9517 DD E5            push ix
  28+ 9519 3B               dec sp
  29+ 951A ED 7A            adc hl,sp
  30+ 951C D5               push de
  31+ 951D
  32+ 951D              ; Recuperamos SP.
  33+ 951D
  34+ 951D ED 7B 0C 8C      ld sp,(Stack)
  35+ 9521
  36+ 9521 E5               push hl
  37+ 9522 F1               pop af
  38+ 9523 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9524
  40+ 9524              ; Tenemos el encabezado listo.
  41+ 9524              ; Preparamos registros para generar los scanlines.
  42+ 9524
  43+ 9524 DD E5            push ix
  44+ 9526 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9527
  46+ 9527 ED 5B 2D 8C      ld de,(Scanlines_album_SP)
  47+ 952B
  48+ 952B              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 952B              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 952B
  51+ 952B 7C               ld a,h
  52+ 952C FE 50            cp $50
  53+ 952E 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9530
  55+ 9530 20 05            jr nz,2F
  56+ 9532
  57+ 9532 7D               ld a,l
  58+ 9533 FE E0            cp $e0
  59+ 9535 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9537
  61+ 9537 7D           2 ld a,l
  62+ 9538 FE C0            cp $c0
  63+ 953A D2 D0 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 953D
  65+ 953D              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 953D
  67+ 953D CD CE 99         call NextScan
  68+ 9540 EB               ex de,hl
  69+ 9541
  70+ 9541 73               ld (hl),e
  71+ 9542 23               inc hl
  72+ 9543 72               ld (hl),d
  73+ 9544 23               inc hl
  74+ 9545
  75+ 9545 EB               ex de,hl
  76+ 9546
  77+ 9546 CD CE 99         call NextScan
  78+ 9549 EB               ex de,hl
  79+ 954A
  80+ 954A 73               ld (hl),e
  81+ 954B 23               inc hl
  82+ 954C 72               ld (hl),d
  83+ 954D 23               inc hl
  84+ 954E
  85+ 954E EB               ex de,hl
  86+ 954F
  87+ 954F CD CE 99         call NextScan
  88+ 9552 EB               ex de,hl
  89+ 9553
  90+ 9553 73               ld (hl),e
  91+ 9554 23               inc hl
  92+ 9555 72               ld (hl),d
  93+ 9556 23               inc hl
  94+ 9557
  95+ 9557 EB               ex de,hl
  96+ 9558
  97+ 9558 CD CE 99         call NextScan
  98+ 955B EB               ex de,hl
  99+ 955C
 100+ 955C 73               ld (hl),e
 101+ 955D 23               inc hl
 102+ 955E 72               ld (hl),d
 103+ 955F 23               inc hl
 104+ 9560
 105+ 9560 EB               ex de,hl
 106+ 9561
 107+ 9561 CD CE 99         call NextScan
 108+ 9564 EB               ex de,hl
 109+ 9565
 110+ 9565 73               ld (hl),e
 111+ 9566 23               inc hl
 112+ 9567 72               ld (hl),d
 113+ 9568 23               inc hl
 114+ 9569
 115+ 9569 EB               ex de,hl
 116+ 956A
 117+ 956A CD CE 99         call NextScan
 118+ 956D EB               ex de,hl
 119+ 956E
 120+ 956E 73               ld (hl),e
 121+ 956F 23               inc hl
 122+ 9570 72               ld (hl),d
 123+ 9571 23               inc hl
 124+ 9572
 125+ 9572 EB               ex de,hl
 126+ 9573
 127+ 9573 CD CE 99         call NextScan
 128+ 9576 EB               ex de,hl
 129+ 9577
 130+ 9577 73               ld (hl),e
 131+ 9578 23               inc hl
 132+ 9579 72               ld (hl),d
 133+ 957A 23               inc hl
 134+ 957B
 135+ 957B EB               ex de,hl
 136+ 957C
 137+ 957C CD CE 99         call NextScan
 138+ 957F EB               ex de,hl
 139+ 9580
 140+ 9580 73               ld (hl),e
 141+ 9581 23               inc hl
 142+ 9582 72               ld (hl),d
 143+ 9583 23               inc hl
 144+ 9584
 145+ 9584 EB               ex de,hl
 146+ 9585
 147+ 9585 CD CE 99         call NextScan
 148+ 9588 EB               ex de,hl
 149+ 9589
 150+ 9589 73               ld (hl),e
 151+ 958A 23               inc hl
 152+ 958B 72               ld (hl),d
 153+ 958C 23               inc hl
 154+ 958D
 155+ 958D EB               ex de,hl
 156+ 958E
 157+ 958E CD CE 99         call NextScan
 158+ 9591 EB               ex de,hl
 159+ 9592
 160+ 9592 73               ld (hl),e
 161+ 9593 23               inc hl
 162+ 9594 72               ld (hl),d
 163+ 9595 23               inc hl
 164+ 9596
 165+ 9596 EB               ex de,hl
 166+ 9597
 167+ 9597 CD CE 99         call NextScan
 168+ 959A EB               ex de,hl
 169+ 959B
 170+ 959B 73               ld (hl),e
 171+ 959C 23               inc hl
 172+ 959D 72               ld (hl),d
 173+ 959E 23               inc hl
 174+ 959F
 175+ 959F EB               ex de,hl
 176+ 95A0
 177+ 95A0 CD CE 99         call NextScan
 178+ 95A3 EB               ex de,hl
 179+ 95A4
 180+ 95A4 73               ld (hl),e
 181+ 95A5 23               inc hl
 182+ 95A6 72               ld (hl),d
 183+ 95A7 23               inc hl
 184+ 95A8
 185+ 95A8 EB               ex de,hl
 186+ 95A9
 187+ 95A9 CD CE 99         call NextScan
 188+ 95AC EB               ex de,hl
 189+ 95AD
 190+ 95AD 73               ld (hl),e
 191+ 95AE 23               inc hl
 192+ 95AF 72               ld (hl),d
 193+ 95B0 23               inc hl
 194+ 95B1
 195+ 95B1 EB               ex de,hl
 196+ 95B2
 197+ 95B2 CD CE 99         call NextScan
 198+ 95B5 EB               ex de,hl
 199+ 95B6
 200+ 95B6 73               ld (hl),e
 201+ 95B7 23               inc hl
 202+ 95B8 72               ld (hl),d
 203+ 95B9 23               inc hl
 204+ 95BA
 205+ 95BA EB               ex de,hl
 206+ 95BB
 207+ 95BB CD CE 99         call NextScan
 208+ 95BE EB               ex de,hl
 209+ 95BF
 210+ 95BF              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95BF              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95BF              ;   _ generar sus scanlines.
 213+ 95BF
 214+ 95BF              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95BF
 216+ 95BF 73               ld (hl),e
 217+ 95C0 23               inc hl
 218+ 95C1 72               ld (hl),d
 219+ 95C2 23               inc hl
 220+ 95C3
 221+ 95C3              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95C3
 223+ 95C3 22 2D 8C         ld (Scanlines_album_SP),hl
 224+ 95C6
 225+ 95C6 EB               ex de,hl
 226+ 95C7
 227+ 95C7              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95C7
 229+ 95C7              ;    call NextScan
 230+ 95C7              ;    call NextScan
 231+ 95C7
 232+ 95C7 22 38 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95CA
 234+ 95CA              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95CA
 236+ 95CA 08               ex af,af
 237+ 95CB
 238+ 95CB F5               push af
 239+ 95CC E1               pop hl
 240+ 95CD
 241+ 95CD 36 10            ld (hl),16
 242+ 95CF
 243+ 95CF C9               ret
 244+ 95D0
 245+ 95D0              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D0
 247+ 95D0              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D0
 249+ 95D0 3E 57            ld a,$57
 250+ 95D2 94               sub h
 251+ 95D3 47               ld b,a
 252+ 95D4
 253+ 95D4 3E DF            ld a,$df
 254+ 95D6 BD               cp l
 255+ 95D7 38 04            jr c,1F
 256+ 95D9
 257+ 95D9 3E 08            ld a,8
 258+ 95DB 80               add b
 259+ 95DC 47               ld b,a
 260+ 95DD
 261+ 95DD              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95DD              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95DD
 264+ 95DD 48           1 ld c,b
 265+ 95DE 0C               inc c
 266+ 95DF
 267+ 95DF 04               inc b
 268+ 95E0 05               dec b
 269+ 95E1 20 02            jr nz,3F
 270+ 95E3
 271+ 95E3 18 0B            jr 6F
 272+ 95E5
 273+ 95E5 CD CE 99     3 call NextScan
 274+ 95E8 EB               ex de,hl
 275+ 95E9
 276+ 95E9 73               ld (hl),e
 277+ 95EA 23               inc hl
 278+ 95EB 72               ld (hl),d
 279+ 95EC 23               inc hl
 280+ 95ED
 281+ 95ED EB               ex de,hl
 282+ 95EE 10 F5            djnz 3B
 283+ 95F0
 284+ 95F0 ED 53 2D 8C  6 ld (Scanlines_album_SP),de
 285+ 95F4
 286+ 95F4 08           5 ex af,af
 287+ 95F5 F5               push af
 288+ 95F6 E1               pop hl
 289+ 95F7
 290+ 95F7 71               ld (hl),c
 291+ 95F8
 292+ 95F8 C9               ret
 293+ 95F9
# file closed: Genera_datos_de_impresion.asm
2050  95F9              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95F9              ; -----------------------------------------------------------------------------
   2+ 95F9              ;
   3+ 95F9              ;   11/03/24
   4+ 95F9              ;
   5+ 95F9
   6+ 95F9              Pinta_Sprites
   7+ 95F9
   8+ 95F9              ;    ld hl,(Scanlines_album_SP)
   9+ 95F9              ;    call Extrae_address
  10+ 95F9
  11+ 95F9              ;    inc h
  12+ 95F9              ;    dec h
  13+ 95F9              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95F9
  15+ 95F9 ED 73 0C 8C      ld (Stack),sp
  16+ 95FD
  17+ 95FD EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95FE              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95FE 2C               inc l
  20+ 95FF 2C               inc l
  21+ 9600
  22+ 9600 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9601
  24+ 9601 2C               inc l
  25+ 9602 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9603
  27+ 9603              ;   Seleccionamos rutina de impresión:
  28+ 9603
  29+ 9603 3E 10            ld a,16
  30+ 9605 B8               cp b
  31+ 9606 C2 02 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9609
  33+ 9609              ;   Rutinas:
  34+ 9609
  35+ 9609              Pinta_rapido    ;   1520 t/states.
  36+ 9609
  37+ 9609 E1               pop hl
  38+ 960A
  39+ 960A 1A               ld a,(de)
  40+ 960B AE               xor (hl)
  41+ 960C 77               ld (hl),a
  42+ 960D 2C               inc l
  43+ 960E 1C               inc e
  44+ 960F 1A               ld a,(de)
  45+ 9610 AE               xor (hl)
  46+ 9611 77               ld (hl),a
  47+ 9612 2C               inc l
  48+ 9613 1C               inc e
  49+ 9614 1A               ld a,(de)
  50+ 9615 AE               xor (hl)
  51+ 9616 77               ld (hl),a
  52+ 9617 13               inc de
  53+ 9618
  54+ 9618 E1               pop hl
  55+ 9619
  56+ 9619 1A               ld a,(de)
  57+ 961A AE               xor (hl)
  58+ 961B 77               ld (hl),a
  59+ 961C 2C               inc l
  60+ 961D 1C               inc e
  61+ 961E 1A               ld a,(de)
  62+ 961F AE               xor (hl)
  63+ 9620 77               ld (hl),a
  64+ 9621 2C               inc l
  65+ 9622 1C               inc e
  66+ 9623 1A               ld a,(de)
  67+ 9624 AE               xor (hl)
  68+ 9625 77               ld (hl),a
  69+ 9626 13               inc de
  70+ 9627
  71+ 9627 E1               pop hl
  72+ 9628
  73+ 9628 1A               ld a,(de)
  74+ 9629 AE               xor (hl)
  75+ 962A 77               ld (hl),a
  76+ 962B 2C               inc l
  77+ 962C 1C               inc e
  78+ 962D 1A               ld a,(de)
  79+ 962E AE               xor (hl)
  80+ 962F 77               ld (hl),a
  81+ 9630 2C               inc l
  82+ 9631 1C               inc e
  83+ 9632 1A               ld a,(de)
  84+ 9633 AE               xor (hl)
  85+ 9634 77               ld (hl),a
  86+ 9635 13               inc de
  87+ 9636
  88+ 9636 E1               pop hl
  89+ 9637
  90+ 9637 1A               ld a,(de)
  91+ 9638 AE               xor (hl)
  92+ 9639 77               ld (hl),a
  93+ 963A 2C               inc l
  94+ 963B 1C               inc e
  95+ 963C 1A               ld a,(de)
  96+ 963D AE               xor (hl)
  97+ 963E 77               ld (hl),a
  98+ 963F 2C               inc l
  99+ 9640 1C               inc e
 100+ 9641 1A               ld a,(de)
 101+ 9642 AE               xor (hl)
 102+ 9643 77               ld (hl),a
 103+ 9644 13               inc de
 104+ 9645
 105+ 9645 E1               pop hl
 106+ 9646
 107+ 9646 1A               ld a,(de)
 108+ 9647 AE               xor (hl)
 109+ 9648 77               ld (hl),a
 110+ 9649 2C               inc l
 111+ 964A 1C               inc e
 112+ 964B 1A               ld a,(de)
 113+ 964C AE               xor (hl)
 114+ 964D 77               ld (hl),a
 115+ 964E 2C               inc l
 116+ 964F 1C               inc e
 117+ 9650 1A               ld a,(de)
 118+ 9651 AE               xor (hl)
 119+ 9652 77               ld (hl),a
 120+ 9653 13               inc de
 121+ 9654
 122+ 9654 E1               pop hl
 123+ 9655
 124+ 9655 1A               ld a,(de)
 125+ 9656 AE               xor (hl)
 126+ 9657 77               ld (hl),a
 127+ 9658 2C               inc l
 128+ 9659 1C               inc e
 129+ 965A 1A               ld a,(de)
 130+ 965B AE               xor (hl)
 131+ 965C 77               ld (hl),a
 132+ 965D 2C               inc l
 133+ 965E 1C               inc e
 134+ 965F 1A               ld a,(de)
 135+ 9660 AE               xor (hl)
 136+ 9661 77               ld (hl),a
 137+ 9662 13               inc de
 138+ 9663
 139+ 9663 E1               pop hl
 140+ 9664
 141+ 9664 1A               ld a,(de)
 142+ 9665 AE               xor (hl)
 143+ 9666 77               ld (hl),a
 144+ 9667 2C               inc l
 145+ 9668 1C               inc e
 146+ 9669 1A               ld a,(de)
 147+ 966A AE               xor (hl)
 148+ 966B 77               ld (hl),a
 149+ 966C 2C               inc l
 150+ 966D 1C               inc e
 151+ 966E 1A               ld a,(de)
 152+ 966F AE               xor (hl)
 153+ 9670 77               ld (hl),a
 154+ 9671 13               inc de
 155+ 9672
 156+ 9672 E1               pop hl
 157+ 9673
 158+ 9673 1A               ld a,(de)
 159+ 9674 AE               xor (hl)
 160+ 9675 77               ld (hl),a
 161+ 9676 2C               inc l
 162+ 9677 1C               inc e
 163+ 9678 1A               ld a,(de)
 164+ 9679 AE               xor (hl)
 165+ 967A 77               ld (hl),a
 166+ 967B 2C               inc l
 167+ 967C 1C               inc e
 168+ 967D 1A               ld a,(de)
 169+ 967E AE               xor (hl)
 170+ 967F 77               ld (hl),a
 171+ 9680 13               inc de
 172+ 9681
 173+ 9681 E1               pop hl
 174+ 9682
 175+ 9682 1A               ld a,(de)
 176+ 9683 AE               xor (hl)
 177+ 9684 77               ld (hl),a
 178+ 9685 2C               inc l
 179+ 9686 1C               inc e
 180+ 9687 1A               ld a,(de)
 181+ 9688 AE               xor (hl)
 182+ 9689 77               ld (hl),a
 183+ 968A 2C               inc l
 184+ 968B 1C               inc e
 185+ 968C 1A               ld a,(de)
 186+ 968D AE               xor (hl)
 187+ 968E 77               ld (hl),a
 188+ 968F 13               inc de
 189+ 9690
 190+ 9690 E1               pop hl
 191+ 9691
 192+ 9691 1A               ld a,(de)
 193+ 9692 AE               xor (hl)
 194+ 9693 77               ld (hl),a
 195+ 9694 2C               inc l
 196+ 9695 1C               inc e
 197+ 9696 1A               ld a,(de)
 198+ 9697 AE               xor (hl)
 199+ 9698 77               ld (hl),a
 200+ 9699 2C               inc l
 201+ 969A 1C               inc e
 202+ 969B 1A               ld a,(de)
 203+ 969C AE               xor (hl)
 204+ 969D 77               ld (hl),a
 205+ 969E 13               inc de
 206+ 969F
 207+ 969F E1               pop hl
 208+ 96A0
 209+ 96A0 1A               ld a,(de)
 210+ 96A1 AE               xor (hl)
 211+ 96A2 77               ld (hl),a
 212+ 96A3 2C               inc l
 213+ 96A4 1C               inc e
 214+ 96A5 1A               ld a,(de)
 215+ 96A6 AE               xor (hl)
 216+ 96A7 77               ld (hl),a
 217+ 96A8 2C               inc l
 218+ 96A9 1C               inc e
 219+ 96AA 1A               ld a,(de)
 220+ 96AB AE               xor (hl)
 221+ 96AC 77               ld (hl),a
 222+ 96AD 13               inc de
 223+ 96AE
 224+ 96AE E1               pop hl
 225+ 96AF
 226+ 96AF 1A               ld a,(de)
 227+ 96B0 AE               xor (hl)
 228+ 96B1 77               ld (hl),a
 229+ 96B2 2C               inc l
 230+ 96B3 1C               inc e
 231+ 96B4 1A               ld a,(de)
 232+ 96B5 AE               xor (hl)
 233+ 96B6 77               ld (hl),a
 234+ 96B7 2C               inc l
 235+ 96B8 1C               inc e
 236+ 96B9 1A               ld a,(de)
 237+ 96BA AE               xor (hl)
 238+ 96BB 77               ld (hl),a
 239+ 96BC 13               inc de
 240+ 96BD
 241+ 96BD E1               pop hl
 242+ 96BE
 243+ 96BE 1A               ld a,(de)
 244+ 96BF AE               xor (hl)
 245+ 96C0 77               ld (hl),a
 246+ 96C1 2C               inc l
 247+ 96C2 1C               inc e
 248+ 96C3 1A               ld a,(de)
 249+ 96C4 AE               xor (hl)
 250+ 96C5 77               ld (hl),a
 251+ 96C6 2C               inc l
 252+ 96C7 1C               inc e
 253+ 96C8 1A               ld a,(de)
 254+ 96C9 AE               xor (hl)
 255+ 96CA 77               ld (hl),a
 256+ 96CB 13               inc de
 257+ 96CC
 258+ 96CC E1               pop hl
 259+ 96CD
 260+ 96CD 1A               ld a,(de)
 261+ 96CE AE               xor (hl)
 262+ 96CF 77               ld (hl),a
 263+ 96D0 2C               inc l
 264+ 96D1 1C               inc e
 265+ 96D2 1A               ld a,(de)
 266+ 96D3 AE               xor (hl)
 267+ 96D4 77               ld (hl),a
 268+ 96D5 2C               inc l
 269+ 96D6 1C               inc e
 270+ 96D7 1A               ld a,(de)
 271+ 96D8 AE               xor (hl)
 272+ 96D9 77               ld (hl),a
 273+ 96DA 13               inc de
 274+ 96DB
 275+ 96DB E1               pop hl
 276+ 96DC
 277+ 96DC 1A               ld a,(de)
 278+ 96DD AE               xor (hl)
 279+ 96DE 77               ld (hl),a
 280+ 96DF 2C               inc l
 281+ 96E0 1C               inc e
 282+ 96E1 1A               ld a,(de)
 283+ 96E2 AE               xor (hl)
 284+ 96E3 77               ld (hl),a
 285+ 96E4 2C               inc l
 286+ 96E5 1C               inc e
 287+ 96E6 1A               ld a,(de)
 288+ 96E7 AE               xor (hl)
 289+ 96E8 77               ld (hl),a
 290+ 96E9 13               inc de
 291+ 96EA
 292+ 96EA E1               pop hl
 293+ 96EB
 294+ 96EB 1A               ld a,(de)
 295+ 96EC AE               xor (hl)
 296+ 96ED 77               ld (hl),a
 297+ 96EE 2C               inc l
 298+ 96EF 1C               inc e
 299+ 96F0 1A               ld a,(de)
 300+ 96F1 AE               xor (hl)
 301+ 96F2 77               ld (hl),a
 302+ 96F3 2C               inc l
 303+ 96F4 1C               inc e
 304+ 96F5 1A               ld a,(de)
 305+ 96F6 AE               xor (hl)
 306+ 96F7 77               ld (hl),a
 307+ 96F8 13               inc de
 308+ 96F9
 309+ 96F9 ED 73 2D 8C      ld (Scanlines_album_SP),sp
 310+ 96FD ED 7B 0C 8C      ld sp,(Stack)
 311+ 9701 C9               ret
 312+ 9702
 313+ 9702              Pinta_lento
 314+ 9702
 315+ 9702 E1           1 pop hl
 316+ 9703
 317+ 9703 1A               ld a,(de)
 318+ 9704 AE               xor (hl)
 319+ 9705 77               ld (hl),a
 320+ 9706 2C               inc l
 321+ 9707 1C               inc e
 322+ 9708 1A               ld a,(de)
 323+ 9709 AE               xor (hl)
 324+ 970A 77               ld (hl),a
 325+ 970B 2C               inc l
 326+ 970C 1C               inc e
 327+ 970D 1A               ld a,(de)
 328+ 970E AE               xor (hl)
 329+ 970F 77               ld (hl),a
 330+ 9710 13               inc de
 331+ 9711
 332+ 9711 10 EF            djnz 1B
 333+ 9713
 334+ 9713 ED 73 2D 8C      ld (Scanlines_album_SP),sp
 335+ 9717 ED 7B 0C 8C      ld sp,(Stack)
 336+ 971B C9               ret
# file closed: Pinta_Sprites.asm
2051  971C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 971C              ; ******************************************************************************************************************************************************************************************
   2+ 971C              ;
   3+ 971C              ; 26/06/23
   4+ 971C              ;
   5+ 971C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 971C
   7+ 971C              Draw
   8+ 971C
   9+ 971C CD C2 99     	call Prepara_draw
  10+ 971F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9720 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9721 28 05        	jr z,2F
  13+ 9723
  14+ 9723 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9726 18 0C        	jr 1F
  16+ 9728
  17+ 9728 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 972B 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 972E CD BA 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9731              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9731
  22+ 9731 CD 61 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9734
  24+ 9734 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 9737 CB 6F        	bit 5,a
  26+ 9739 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 973B
  28+ 973B CD 50 97     	call Comprueba_limite_horizontal
  29+ 973E CD E0 97     	call Comprueba_limite_vertical
  30+ 9741
  31+ 9741              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9741              ; -----------------------
  33+ 9741              ; -----------------------
  34+ 9741              ; -----------------------
  35+ 9741
  36+ 9741 CD 36 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9744 CD 6D 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9747
  39+ 9747 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 974A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 974C 32 CC 8B     	ld (Ctrl_0),a
  42+ 974F
  43+ 974F C9           	ret
  44+ 9750
  45+ 9750              ; *******************************************************************************************************************************************************************************************
  46+ 9750              ;	21/01/23
  47+ 9750              ;
  48+ 9750              ; 	Comprueba_limite_horizontal.
  49+ 9750              ;
  50+ 9750              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9750              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9750              ;
  53+ 9750              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9750              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9750              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9750              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9750
  58+ 9750
  59+ 9750
  60+ 9750 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9753 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9755 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9757 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9759 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 975C 18 09            jr 6F
  66+ 975E CB 5F        1 bit 3,a
  67+ 9760 28 0A            jr z,2F
  68+ 9762 E6 F7            and $f7
  69+ 9764 32 CC 8B         ld (Ctrl_0),a
  70+ 9767 CD BA 98     6 call Inicializacion
  71+ 976A 18 5B            jr 5F
  72+ 976C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 976D
  74+ 976D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 976D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 976D
  77+ 976D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 976E 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9771 CD B6 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9774 67           	ld h,a
  81+ 9775 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9776 CD B6 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9779 67           	ld h,a
  84+ 977A A7           	and a
  85+ 977B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 977D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 977E 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 9781 FE 02        	cp 2
  89+ 9783 38 1E        	jr c,3F
  90+ 9785 28 1C        	jr z,3F
  91+ 9787 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9788 28 23            jr z,7F
  93+ 978A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 978C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 978E E1           	pop hl
  96+ 978F
  97+ 978F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 978F              ; _para indicar con E="2" en caso necesario.
  99+ 978F
 100+ 978F E5               push hl
 101+ 9790 C5               push bc
 102+ 9791 CD B6 94     	call calcula_tercio
 103+ 9794 FE 01        	cp 1
 104+ 9796 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9798 CD C8 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 979B 28 26            jr z,9F
 107+ 979D 38 24            jr c,9F
 108+ 979F 1E 00        11 ld e,0
 109+ 97A1 18 22            jr 8F
 110+ 97A3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97A4 28 07        	jr z, 7F
 112+ 97A6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97A8 1E 00         	ld e,0
 114+ 97AA E1           	pop hl
 115+ 97AB 18 04        	jr 4F
 116+ 97AD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97AF 18 15            jr 10F
 118+ 97B1
 119+ 97B1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B1              ; _para indicar con E="2" en caso necesario.
 121+ 97B1
 122+ 97B1 E5           4 push hl
 123+ 97B2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97B3 CD B6 94     	call calcula_tercio
 125+ 97B6 FE 01        	cp 1
 126+ 97B8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97BA CD C8 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97BD 28 04            jr z,9F
 129+ 97BF 30 02            jr nc,9F
 130+ 97C1 18 02        	jr 8F
 131+ 97C3 1E 02        9 ld e,2
 132+ 97C5 C1           8 pop bc
 133+ 97C6 E1           10 pop hl
 134+ 97C7 C9           5 ret
 135+ 97C8
 136+ 97C8              ; --------------------
 137+ 97C8              ;
 138+ 97C8              ; 25/08/22
 139+ 97C8
 140+ 97C8 CD B6 94     Comprueba_centro call calcula_tercio
 141+ 97CB 67               ld h,a
 142+ 97CC 08           	ex af,af
 143+ 97CD FE 02        	cp 2
 144+ 97CF 38 07        	jr c,1F
 145+ 97D1 28 05        	jr z,1F
 146+ 97D3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97D6 18 03        	jr 2F
 148+ 97D8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97DB 08           2 ex af,af
 150+ 97DC A7               and a
 151+ 97DD ED 42            sbc hl,bc
 152+ 97DF C9               ret
 153+ 97E0
 154+ 97E0              ; *********************************************************************************************************************************************************************************************
 155+ 97E0              ;
 156+ 97E0              ;   16/8/22
 157+ 97E0              ;
 158+ 97E0              ;	Comprueba_limite_vertical
 159+ 97E0              ;
 160+ 97E0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E0              ;
 163+ 97E0
 164+ 97E0 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97E3 7D           	ld a,l
 166+ 97E4 E6 1F        	and $1F
 167+ 97E6 57           	ld d,a
 168+ 97E7 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97EA BA           	cp d 											; Límite - Posición.
 170+ 97EB 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97EC 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97EF CB 47        	bit 0,a
 173+ 97F1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97F3
 175+ 97F3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97F3
 177+ 97F3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97F4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97F6
 180+ 97F6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97F6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97F6
 183+ 97F6 3A C0 8B         ld a,(Coordenada_X)
 184+ 97F9 16 0F            ld d,Centro_izquierda
 185+ 97FB A7               and a
 186+ 97FC 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97FD 28 1E            jr z,3F
 188+ 97FF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9801              ;                                                    ; _salimos sin modificar nada.
 190+ 9801 18 0E            jr 2F
 191+ 9803 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9804 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9806
 194+ 9806              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9806              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9806
 197+ 9806 3A C0 8B         ld a,(Coordenada_X)
 198+ 9809 16 10            ld d,Centro_derecha
 199+ 980B A7               and a
 200+ 980C 92               sub d
 201+ 980D 28 0E            jr z,3F
 202+ 980F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9811              ;                                                    ; _salimos sin modificar nada.
 204+ 9811 CB 43        2 bit 0,e
 205+ 9813 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9815 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9816 CD AA 98         call Modificaccionne
 208+ 9819 C1           	pop bc
 209+ 981A CD BA 98         call Inicializacion
 210+ 981D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 981E
 212+ 981E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 981E
 214+ 981E C5           4 push bc
 215+ 981F 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9822 0A           	ld a,(bc)
 217+ 9823 3D           	dec a
 218+ 9824 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9825 7D           	ld a,l
 220+ 9826 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9827 CB 47        	bit 0,a
 222+ 9829 28 03        	jr z,5F
 223+ 982B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 982C 18 2E        	jr 7F
 225+ 982E
 226+ 982E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 982E
 228+ 982E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 982F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9830 3A CC 8B     	ld a,(Ctrl_0)
 231+ 9833 CB 4F        	bit 1,a
 232+ 9835 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9837 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9838
 235+ 9838              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9838
 237+ 9838 1C               inc e
 238+ 9839 1D               dec e
 239+ 983A 20 07            jr nz,12F
 240+ 983C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 983D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 983E 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9841 18 44        13 jr 9F
 244+ 9843 CB 43        12 bit 0,e
 245+ 9845 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9847              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9847 C1           	pop bc
 248+ 9848 18 D3        	jr 3B
 249+ 984A 80           14 add b
 250+ 984B 6F               ld l,a
 251+ 984C 22 CF 8B     	ld (Posicion_actual),hl
 252+ 984F CD AA 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9852 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9854 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9856 32 CC 8B         ld (Ctrl_0),a
 256+ 9859 F1           	pop af
 257+ 985A 18 2B        	jr 9F
 258+ 985C
 259+ 985C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 985C
 261+ 985C F5           7 push af
 262+ 985D 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9860 CB 47        	bit 0,a
 264+ 9862 20 1D        	jr nz,8F
 265+ 9864 F1           	pop af
 266+ 9865
 267+ 9865              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9865
 269+ 9865 1C           	inc e
 270+ 9866 1D               dec e
 271+ 9867 20 07            jr nz,10F
 272+ 9869 90           	sub b
 273+ 986A 6F               ld l,a
 274+ 986B 22 CF 8B     	ld (Posicion_actual),hl
 275+ 986E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9870              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9870 CB 43        10 bit 0,e
 278+ 9872 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9874              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9874 C1           	pop bc
 281+ 9875 18 A6        	jr 3B
 282+ 9877 90           16 sub b
 283+ 9878 6F               ld l,a
 284+ 9879 22 CF 8B     	ld (Posicion_actual),hl
 285+ 987C CD AA 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 987F 18 06            jr 9F
 287+ 9881 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9883 32 CC 8B         ld (Ctrl_0),a
 289+ 9886 F1           	pop af
 290+ 9887 C1           9 pop bc
 291+ 9888 1E 00        	ld e,0
 292+ 988A CD BA 98         call Inicializacion
 293+ 988D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 988E 08           	ex af,af
 295+ 988F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9890 18 8B            jr 3B
 297+ 9892
 298+ 9892              ; --------------------
 299+ 9892
 300+ 9892 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9894 CD DD 99     1 call PreviousScan
 302+ 9897 10 FB            djnz 1B
 303+ 9899 22 CF 8B     	ld (Posicion_actual),hl
 304+ 989C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 989D C9           	ret
 306+ 989E
 307+ 989E              ; --------------------
 308+ 989E
 309+ 989E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A0 CD CE 99     1 call NextScan
 311+ 98A3 10 FB            djnz 1B
 312+ 98A5 22 CF 8B     	ld (Posicion_actual),hl
 313+ 98A8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98A9 C9           	ret
 315+ 98AA
 316+ 98AA              ; --------------------
 317+ 98AA              ;
 318+ 98AA              ;	22/01/23
 319+ 98AA              ;
 320+ 98AA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98AA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98AA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98AA
 324+ 98AA
 325+ 98AA              Modificaccionne
 326+ 98AA
 327+ 98AA 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 98AD FE 02        	cp 2
 329+ 98AF CC 92 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B2 DC 92 98         call c,Modifica_Pos_actual
 331+ 98B5 C8           	ret z
 332+ 98B6 CD 9E 98         call Modifica_Pos_actual2
 333+ 98B9 C9               ret
 334+ 98BA
 335+ 98BA              ; *************************************************************************************************************************************************************************************************
 336+ 98BA              ;
 337+ 98BA              ;	13/8/22
 338+ 98BA              ;
 339+ 98BA              ;	Inicializacion
 340+ 98BA              ;
 341+ 98BA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98BA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98BA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98BA              ;
 345+ 98BA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98BA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98BA              ;	_ desaparece/aparece.
 348+ 98BA
 349+ 98BA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98BA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98BA              ;
 352+ 98BA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98BA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98BA              ; 		   [E] ="0"
 355+ 98BA
 356+ 98BA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98BA
 358+ 98BA CD B6 94     Inicializacion call calcula_tercio
 359+ 98BD 28 36        	jr z,primit
 360+ 98BF E6 02        	and 2
 361+ 98C1 20 07        	jr nz,segmit
 362+ 98C3 7D           	ld a,l
 363+ 98C4 FE 7F        	cp $7f
 364+ 98C6 38 2D        	jr c,primit
 365+ 98C8 28 2B        	jr z,primit
 366+ 98CA CD 30 99     segmit call column
 367+ 98CD 38 13        	jr c,tercuad
 368+ 98CF 3E 04        cuarcuad ld a,4
 369+ 98D1 32 DE 8B     	ld (Cuad_objeto),a
 370+ 98D4 21 20 48     	ld hl,$4820
 371+ 98D7 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 98DA 21 E2 8B     	ld hl,Limite_vertical
 373+ 98DD 36 0D        	ld (hl),$0d
 374+ 98DF 08           	ex af,af
 375+ 98E0 18 3C        	jr 1F
 376+ 98E2              tercuad
 377+ 98E2 3E 03        	ld a,3
 378+ 98E4 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98E7 21 20 48     	ld hl,$4820
 380+ 98EA 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98ED 21 E2 8B     	ld hl,Limite_vertical
 382+ 98F0 36 12        	ld (hl),$12
 383+ 98F2 08           	ex af,af
 384+ 98F3 18 29        	jr 1F
 385+ 98F5 CD 30 99     primit call column
 386+ 98F8 38 13        	jr c, primcuad
 387+ 98FA              segcuad
 388+ 98FA 3E 02        	ld a,2
 389+ 98FC 32 DE 8B     	ld (Cuad_objeto),a
 390+ 98FF 21 C0 4F     	ld hl,$4fc0
 391+ 9902 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 9905 21 E2 8B     	ld hl,Limite_vertical
 393+ 9908 36 0D        	ld (hl),$0d
 394+ 990A 08           	ex af,af
 395+ 990B 18 11        	jr 1F
 396+ 990D              primcuad
 397+ 990D 3E 01        	ld a,1
 398+ 990F 32 DE 8B     	ld (Cuad_objeto),a
 399+ 9912 21 C0 4F     	ld hl,$4fc0
 400+ 9915 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 9918 21 E2 8B     	ld hl,Limite_vertical
 402+ 991B 36 12        	ld (hl),$12
 403+ 991D 08           	ex af,af
 404+ 991E
 405+ 991E C5           1 push bc
 406+ 991F E5           	push hl
 407+ 9920 D5           	push de
 408+ 9921
 409+ 9921 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 9924 CD D4 94     	call Genera_coordenadas
 411+ 9927
 412+ 9927 D1           	pop de
 413+ 9928 E1           	pop hl
 414+ 9929 C1           	pop bc
 415+ 992A
 416+ 992A 21 CC 8B     	ld hl,Ctrl_0
 417+ 992D CB EE        	set 5,(hl)
 418+ 992F C9           	ret
 419+ 9930
 420+ 9930              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9930
 422+ 9930              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9930              ;
 424+ 9930              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9930
 426+ 9930 7D           column ld a,l
 427+ 9931 E6 1F        	and $1f
 428+ 9933 FE 10         	cp $10
 429+ 9935 C9            	ret
 430+ 9936
 431+ 9936              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9936              ;
 433+ 9936              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9936              ;
 435+ 9936              ; 14/12/22
 436+ 9936              ;
 437+ 9936              ;	Modifica: A y BC.
 438+ 9936
 439+ 9936 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9939 E6 01        	and 1
 441+ 993B 28 17        	jr z,1F
 442+ 993D
 443+ 993D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 993D
 445+ 993D 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9940 47           	ld b,a
 447+ 9941 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9942 79           	ld a,c
 449+ 9943 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9944 38 08        	jr c,2F
 451+ 9946 47           	ld b,a
 452+ 9947 79           	ld a,c
 453+ 9948 90           	sub b
 454+ 9949 32 DF 8B     	ld (Columnas),a
 455+ 994C 18 1B        	jr 4F
 456+ 994E 79           2 ld a,c
 457+ 994F 32 DF 8B     	ld (Columnas),a
 458+ 9952 18 15        	jr 4F
 459+ 9954
 460+ 9954              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9954
 462+ 9954 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 9957 81           	add c
 464+ 9958 3D           	dec a
 465+ 9959 D6 1F        	sub $1f
 466+ 995B 38 08        	jr c,3F
 467+ 995D 47           	ld b,a
 468+ 995E 79           	ld a,c
 469+ 995F 90           	sub b
 470+ 9960 32 DF 8B     	ld (Columnas),a
 471+ 9963 18 04        	jr 4F
 472+ 9965 79           3 ld a,c
 473+ 9966 32 DF 8B     	ld (Columnas),a
 474+ 9969 D9           4 exx
 475+ 996A 4F           	ld c,a
 476+ 996B D9           	exx
 477+ 996C C9            ret
 478+ 996D
 479+ 996D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 996D              ;
 481+ 996D              ;   19/7/23
 482+ 996D              ;
 483+ 996D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 996D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 996D              ;
 486+ 996D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 996D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 996D              ;
 489+ 996D              ;	DESTRUYE: HL,B Y A.
 490+ 996D
 491+ 996D 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9970 FE 02        	cp 2
 493+ 9972 38 18        	jr c,1F
 494+ 9974 28 16        	jr z,1F
 495+ 9976 E6 01        	and 1
 496+ 9978 28 0D        	jr z,3F
 497+ 997A
 498+ 997A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 997A
 500+ 997A CD B6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 997D
 502+ 997D 7D           9 ld a,l
 503+ 997E E6 1F        	and $1f
 504+ 9980 28 2A        	jr z,7F
 505+ 9982 2B           	dec hl
 506+ 9983 10 F8        	djnz 9B
 507+ 9985 18 25        	jr 7F
 508+ 9987
 509+ 9987              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9987
 511+ 9987 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 998A 18 20        	jr 7F
 513+ 998C
 514+ 998C 28 14        1 jr z,2F
 515+ 998E
 516+ 998E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 998E
 518+ 998E CD B6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9991
 520+ 9991 7D           4 ld a,l
 521+ 9992 E6 1F        	and $1f
 522+ 9994 28 03        	jr z,6F
 523+ 9996 2B           	dec hl
 524+ 9997 10 F8        	djnz 4B
 525+ 9999 06 0F        6 ld b,15
 526+ 999B CD DD 99     5 call PreviousScan
 527+ 999E 10 FB        	djnz 5B
 528+ 99A0 18 0A        	jr 7F
 529+ 99A2
 530+ 99A2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A2
 532+ 99A2 CD B6 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99A5 06 0F        	ld b,15
 534+ 99A7 CD DD 99     8 call PreviousScan
 535+ 99AA 10 FB        	djnz 8B
 536+ 99AC
 537+ 99AC E5           7 push hl
 538+ 99AD DD E1        	pop ix
 539+ 99AF
 540+ 99AF 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 99B2 E5           	push hl
 542+ 99B3 FD E1        	pop iy
 543+ 99B5
 544+ 99B5 C9           	ret
 545+ 99B6
 546+ 99B6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99B6              ;
 548+ 99B6              ;	2/1/23
 549+ 99B6              ;
 550+ 99B6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99B6              ;
 552+ 99B6              ;	Tras esta rutina tenemos:
 553+ 99B6              ;
 554+ 99B6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99B6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99B6              ;
 557+ 99B6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99B6
 559+ 99B6 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99B9 3A DF 8B     	ld a,(Columnas)
 561+ 99BC 3D           	dec a
 562+ 99BD 20 01        	jr nz,1F
 563+ 99BF 3C           	inc a
 564+ 99C0 47           1 ld b,a
 565+ 99C1 C9           	ret
 566+ 99C2
 567+ 99C2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C2              ;
 569+ 99C2              ;	Prepara_draw
 570+ 99C2              ;
 571+ 99C2              ;	Es una rutina de carga.
 572+ 99C2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C2              ;
 574+ 99C2              ;	FUNCIONAMIENTO:
 575+ 99C2              ;
 576+ 99C2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C2              ;
 580+ 99C2              ;	DESTRUYE:
 581+ 99C2              ;
 582+ 99C2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C2
 584+ 99C2 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99C5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99C6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99C7 4E           	ld c,(hl)
 588+ 99C8 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 99CB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99CD C9           	ret
 591+ 99CE
 592+ 99CE              ;----------------------------------------------------------------------------------------------------------------
 593+ 99CE              ;
 594+ 99CE              ;	5/08/22
 595+ 99CE              ;
 596+ 99CE              ;   NextScan.
 597+ 99CE              ;
 598+ 99CE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99CE              ;
 600+ 99CE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99CE              ;
 602+ 99CE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99CE              ;
 604+ 99CE              ;       DESTRUIDOS: AF y HL !!!
 605+ 99CE              ;
 606+ 99CE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99CE              ;
 608+ 99CE
 609+ 99CE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99CF 7C               ld a,h
 611+ 99D0 E6 07            and 7
 612+ 99D2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99D3
 614+ 99D3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99D4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99D6 6F               ld l,a
 617+ 99D7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99D8
 619+ 99D8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99D9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99DB 67               ld h,a
 622+ 99DC C9               ret
 623+ 99DD
 624+ 99DD              ;----------------------------------------------------------------------------------------------------------------
 625+ 99DD              ;
 626+ 99DD              ;	5/08/22
 627+ 99DD              ;
 628+ 99DD              ;   PreviousScan.
 629+ 99DD              ;
 630+ 99DD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99DD              ;
 632+ 99DD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99DD              ;
 634+ 99DD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99DD              ;
 636+ 99DD              ;       DESTRUIDOS: AF y HL !!!
 637+ 99DD              ;
 638+ 99DD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99DD              ;
 640+ 99DD
 641+ 99DD 7C           PreviousScan ld a,h
 642+ 99DE 25               dec h               ; Dec H.
 643+ 99DF E6 07            and 7
 644+ 99E1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E2
 646+ 99E2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99E3 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99E5 6F               ld l,a
 649+ 99E6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99E7
 651+ 99E7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99E8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99EA 67               ld h,a
 654+ 99EB C9               ret
 655+ 99EC
 656+ 99EC
 657+ 99EC
 658+ 99EC
 659+ 99EC
 660+ 99EC
 661+ 99EC
 662+ 99EC
 663+ 99EC
 664+ 99EC
 665+ 99EC
 666+ 99EC
# file closed: Draw_XOR.asm
2052  99EC              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99EC
   2+ 99EC              ; ******************************************************************************************************************************************************************************************
   3+ 99EC              ;
   4+ 99EC              ;   20/05/23
   5+ 99EC              ;
   6+ 99EC              ;	Recompone_posicion_inicio
   7+ 99EC              ;
   8+ 99EC              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99EC              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99EC              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99EC              ;	_ a una u otra rutina.
  12+ 99EC
  13+ 99EC              Recompone_posicion_inicio
  14+ 99EC
  15+ 99EC 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 99EF 7D           	ld a,l
  17+ 99F0 E6 1F        	and $1f
  18+ 99F2 28 16        	jr z,1F
  19+ 99F4
  20+ 99F4 FE 1F        	cp $1f
  21+ 99F6 28 0D        	jr z,3F
  22+ 99F8
  23+ 99F8 21 CB 8B     	ld hl,Ctrl_2
  24+ 99FB CB C6        	set 0,(hl)
  25+ 99FD 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 9A00 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A03 18 08        	jr 2F
  28+ 9A05
  29+ 9A05 CD B3 9B     3 call Mov_left
  30+ 9A08 18 03        	jr 2F
  31+ 9A0A
  32+ 9A0A CD 90 9A     1 call Mov_right
  33+ 9A0D 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A10 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 9A13 C9           	ret
  36+ 9A14
  37+ 9A14              ; ******************************************************************************************************************************************************************************************
  38+ 9A14              ;
  39+ 9A14              ;   27/05/23
  40+ 9A14              ;
  41+ 9A14              ;	Mov_down
  42+ 9A14              ;
  43+ 9A14              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A14              ;
  45+ 9A14              ;
  46+ 9A14              Mov_down
  47+ 9A14
  48+ 9A14 CD 7E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A17              ;																	; _ repone (Puntero_objeto).
  50+ 9A17 21 CC 8B     	ld hl,Ctrl_0
  51+ 9A1A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A1C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A1C              ; 																	; _ en el caso de que no lo haya.
  54+ 9A1C 3A E7 8B     	ld a,(Vel_down)
  55+ 9A1F 47           	ld b,a
  56+ 9A20 2A CF 8B         ld hl,(Posicion_actual)
  57+ 9A23 CD B6 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A26 E6 02        	and 2
  59+ 9A28 28 17        	jr z,1F
  60+ 9A2A
  61+ 9A2A              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A2A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A2A
  64+ 9A2A 7C           	ld a,h
  65+ 9A2B FE 57        	cp $57
  66+ 9A2D 20 12        	jr nz,1F
  67+ 9A2F
  68+ 9A2F 7D           	ld a,l
  69+ 9A30 C6 20        	add $20
  70+ 9A32 30 0D        	jr nc,1F
  71+ 9A34
  72+ 9A34              ; ------------------------------
  73+ 9A34              ;
  74+ 9A34              ;	12/01/24
  75+ 9A34
  76+ 9A34              ;	call Reaparece_arriba
  77+ 9A34 CD 40 9D     	call Reinicio
  78+ 9A37
  79+ 9A37              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A37
  81+ 9A37 3A 33 8C     	ld a,(Ctrl_3)
  82+ 9A3A CB CF        	set 1,a
  83+ 9A3C 32 33 8C     	ld (Ctrl_3),a
  84+ 9A3F
  85+ 9A3F 18 08        	jr 3F
  86+ 9A41              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A41              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A41              ; ------------------------------
  89+ 9A41
  90+ 9A41 CD CE 99     1 call NextScan
  91+ 9A44 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A47 10 DA            djnz 2B
  93+ 9A49 CD D4 94     3 call Genera_coordenadas
  94+ 9A4C C9           	ret
  95+ 9A4D
  96+ 9A4D              ; ******************************************************************************************************************************************************************************************
  97+ 9A4D              ;
  98+ 9A4D              ;   27/05/23
  99+ 9A4D              ;
 100+ 9A4D              ;	Mov_up
 101+ 9A4D              ;
 102+ 9A4D              ; 	Mueve el Sprite hacia arriba.
 103+ 9A4D              ;
 104+ 9A4D              ;
 105+ 9A4D              Mov_up
 106+ 9A4D
 107+ 9A4D CD 7E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A50              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A50 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A53 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A55              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A55              ; 																		; _ en el caso de que no lo haya.
 113+ 9A55 3A E6 8B     	ld a,(Vel_up)
 114+ 9A58 47           	ld b,a
 115+ 9A59 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A5C CD B6 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A5F A7           	and a
 118+ 9A60 20 10        	jr nz,1F
 119+ 9A62
 120+ 9A62              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A62              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A62
 123+ 9A62 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A63 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A65 20 0B            jr nz,1F
 126+ 9A67 7D               ld a,l
 127+ 9A68 D6 20            sub $20
 128+ 9A6A 30 06            jr nc,1F
 129+ 9A6C 25               dec h
 130+ 9A6D
 131+ 9A6D              ; -----------------------------
 132+ 9A6D CD 21 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A70              ;	call Reinicio
 134+ 9A70              ; -----------------------------
 135+ 9A70
 136+ 9A70 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A72 CD DD 99     1 call PreviousScan
 138+ 9A75 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A78 10 E2            djnz 3B
 140+ 9A7A CD D4 94     2 call Genera_coordenadas
 141+ 9A7D C9           	ret
 142+ 9A7E
 143+ 9A7E              ; -----------------------------
 144+ 9A7E              ;
 145+ 9A7E              ;	27/5/23
 146+ 9A7E              ;
 147+ 9A7E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A7E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A7E              ;
 150+ 9A7E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A7E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A7E              ;
 153+ 9A7E              ;	Modifica: A y (Puntero_objeto).
 154+ 9A7E
 155+ 9A7E 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A81 CB 47        	bit 0,a
 157+ 9A83 C8           	ret z
 158+ 9A84 CB 87        	res 0,a
 159+ 9A86 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A89 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A8C 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9A8F C9           	ret
 163+ 9A90
 164+ 9A90              ; ******************************************************************************************************************************************************************************************
 165+ 9A90              ;
 166+ 9A90              ;	19/10/22
 167+ 9A90              ;
 168+ 9A90              ;	Mov_right.
 169+ 9A90              ;
 170+ 9A90              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A90              ;
 172+ 9A90
 173+ 9A90 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A93 CB 77        	bit 6,a
 175+ 9A95 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A97
 177+ 9A97 CD CF 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A9A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A9B
 180+ 9A9B 21 CC 8B     	ld hl,Ctrl_0
 181+ 9A9E CB E6        	set 4,(hl)
 182+ 9AA0 18 52        	jr 8F
 183+ 9AA2
 184+ 9AA2 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9AA5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AA7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AA7              ; 																	; _ en el caso de que no lo haya.
 188+ 9AA7 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AAA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AAC 20 46        	jr nz,8F
 191+ 9AAE
 192+ 9AAE 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB2 28 40        	jr z,8F
 195+ 9AB4
 196+ 9AB4              ; ---------- ---------- ----------
 197+ 9AB4              ;
 198+ 9AB4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AB4
 200+ 9AB4 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AB7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AB9 28 11        	jr z,1F
 203+ 9ABB 38 06        	jr c,6F
 204+ 9ABD FE 04        	cp 4
 205+ 9ABF 28 14        	jr z,7F
 206+ 9AC1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AC3
 208+ 9AC3              ; ---------- ---------- ----------
 209+ 9AC3              ;
 210+ 9AC3              ; Perfiles de velocidad
 211+ 9AC3              ;
 212+ 9AC3
 213+ 9AC3 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AC6 FE FE        	cp $fe
 215+ 9AC8 20 2A        	jr nz,8F
 216+ 9ACA 18 10        	jr 3F
 217+ 9ACC 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ACF FE FD        	cp $fd
 219+ 9AD1 20 21        	jr nz,8F
 220+ 9AD3 18 07        	jr 3F
 221+ 9AD5 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AD8 FE FB        	cp $fb
 223+ 9ADA 20 18        	jr nz,8F
 224+ 9ADC
 225+ 9ADC              ; ---------- ---------- ----------
 226+ 9ADC
 227+ 9ADC              3
 228+ 9ADC CD 0F 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ADF              ;	call Reinicio
 230+ 9ADF
 231+ 9ADF              ; ---------- ---------- ----------
 232+ 9ADF              ;
 233+ 9ADF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ADF
 235+ 9ADF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE2 CD FB 9A     	call DESPLZ_DER
 238+ 9AE5 C1           	pop bc
 239+ 9AE6 10 F9        	djnz 5B
 240+ 9AE8 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AEB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AEC 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9AEF CD D4 94     	call Genera_coordenadas
 244+ 9AF2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AF4
 246+ 9AF4              ; ---------- ---------- ----------
 247+ 9AF4
 248+ 9AF4 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9AF7 CD FB 9A     	call DESPLZ_DER
 250+ 9AFA C9           2 ret
 251+ 9AFB
 252+ 9AFB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AFB              ;
 254+ 9AFB              ;	22/9/22
 255+ 9AFB              ;
 256+ 9AFB
 257+ 9AFB CD 0A 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AFE CD 56 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B01 CD 7F 9B         call Ciclo_completo
 260+ 9B04 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B07 CB FE        	set 7,(hl)
 262+ 9B09 C9           	ret
 263+ 9B0A
 264+ 9B0A              ; ******************************************************************************************************************************************************************************************
 265+ 9B0A              ;	15/02/23
 266+ 9B0A              ;
 267+ 9B0A
 268+ 9B0A 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B0D 47           	ld b,a
 270+ 9B0E 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B11 23           1 inc hl
 272+ 9B12 23           	inc hl
 273+ 9B13 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B15 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B18 CD B5 90     	call Extrae_address
 276+ 9B1B 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9B1E
 278+ 9B1E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B1E
 280+ 9B1E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B1E              ; Cuántos movimientos hemos hecho ??
 282+ 9B1E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B1E
 284+ 9B1E 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B21 EB           	ex de,hl
 286+ 9B22 A7           	and a
 287+ 9B23 ED 52        	sbc hl,de
 288+ 9B25 CB 3D        	srl l
 289+ 9B27 3E 08        6 ld a,8
 290+ 9B29 95           	sub l
 291+ 9B2A 30 1E        	jr nc,3F
 292+ 9B2C
 293+ 9B2C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B2C              ; B="0".
 295+ 9B2C
 296+ 9B2C 04           4 inc b
 297+ 9B2D 3C           	inc a
 298+ 9B2E 20 FC        	jr nz,4B
 299+ 9B30 78           	ld a,b
 300+ 9B31 08           	ex af,af
 301+ 9B32 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B35 23           5 inc hl
 303+ 9B36 23           	inc hl
 304+ 9B37 10 FC        	djnz 5B
 305+ 9B39 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B3C CD B5 90     	call Extrae_address
 307+ 9B3F 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B42
 309+ 9B42              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B42              ; _(Posicion_actual).
 311+ 9B42
 312+ 9B42 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B45 34           	inc (hl)
 314+ 9B46 08               ex af,af
 315+ 9B47 6F           	ld l,a
 316+ 9B48 18 DD        	jr 6B
 317+ 9B4A
 318+ 9B4A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B4A
 320+ 9B4A 47           3 ld b,a
 321+ 9B4B 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B4E 23           2 inc hl
 323+ 9B4F 23           	inc hl
 324+ 9B50 10 FC        	djnz 2B
 325+ 9B52 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B55 C9           8 ret
 327+ 9B56
 328+ 9B56              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B56              ;
 330+ 9B56              ;	24/7/22
 331+ 9B56              ;
 332+ 9B56              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B56              ;
 334+ 9B56              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B56              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B56              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B56
 338+ 9B56 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B59 A7           	and a
 340+ 9B5A 20 1F        	jr nz,1F
 341+ 9B5C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B5E 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B61
 344+ 9B61 21 CE 8B     	ld hl,Columns
 345+ 9B64 34           	inc (hl)
 346+ 9B65 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B68 E6 01        	and 1
 348+ 9B6A 28 0F        	jr z,1F
 349+ 9B6C 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B6F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B70 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B73 CD D4 94     	call Genera_coordenadas
 353+ 9B76 CD DB 9C     	call Inc_CTRL_DESPLZ
 354+ 9B79 18 03        	jr 2F
 355+ 9B7B CD DB 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B7E C9           2 ret
 357+ 9B7F
 358+ 9B7F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B7F              ;
 360+ 9B7F              ;	24/7/22
 361+ 9B7F              ;
 362+ 9B7F              ;	Ciclo_completo.
 363+ 9B7F              ;
 364+ 9B7F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B7F              ;
 366+ 9B7F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B7F              ; 	Decrementamos (Columns).
 368+ 9B7F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B7F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B7F
 371+ 9B7F
 372+ 9B7F 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B82 FE FF        	cp $ff
 374+ 9B84 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B86 E6 F0        	and $f0
 376+ 9B88 20 28        	jr nz,3F
 377+ 9B8A
 378+ 9B8A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B8A
 380+ 9B8A 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B8D 47           	ld b,a
 382+ 9B8E 3E F8        	ld a,$f8
 383+ 9B90 80           	add b
 384+ 9B91 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9B94 18 1C        	jr 3F
 386+ 9B96 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B99 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B9A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B9B 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9B9E 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BA3 20 0A        	jr nz,2F
 393+ 9BA5 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BA8 23           	inc hl
 395+ 9BA9 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9BAC CD D4 94     	call Genera_coordenadas
 397+ 9BAF
 398+ 9BAF              ; Inicia el puntero de Sprite.
 399+ 9BAF
 400+ 9BAF CD CA 90     2 call Inicia_puntero_objeto_der
 401+ 9BB2 C9           3 ret
 402+ 9BB3
 403+ 9BB3              ; ******************************************************************************************************************************************************************************************
 404+ 9BB3              ;
 405+ 9BB3              ;	15/02/23
 406+ 9BB3              ;
 407+ 9BB3              ;	Mov_left.
 408+ 9BB3              ;
 409+ 9BB3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BB3              ;
 411+ 9BB3              Mov_left
 412+ 9BB3
 413+ 9BB3 21 CC 8B     	ld hl,Ctrl_0
 414+ 9BB6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BB8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BB8              ; 																	; _ en el caso de que no lo haya.
 417+ 9BB8 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9BBB CB 77        	bit 6,a
 419+ 9BBD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BBF
 421+ 9BBF CD D5 9C     	call Stop_Amadeus_left
 422+ 9BC2 C8           	ret z
 423+ 9BC3 20 4A        	jr nz,8F
 424+ 9BC5
 425+ 9BC5 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9BC8 A7           	and a
 427+ 9BC9 20 44        	jr nz,8F
 428+ 9BCB
 429+ 9BCB 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BCE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BCF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD1
 433+ 9BD1              ; ---------- ---------- ----------
 434+ 9BD1
 435+ 9BD1 3A E4 8B     	ld a,(Vel_left)
 436+ 9BD4 FE 02        	cp 2
 437+ 9BD6 28 0F        	jr z,1F
 438+ 9BD8 38 04        	jr c,6F
 439+ 9BDA FE 04        	cp 4
 440+ 9BDC 28 12        	jr z,7F
 441+ 9BDE
 442+ 9BDE              ; ---------- ---------- ----------
 443+ 9BDE
 444+ 9BDE 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE1 FE F8        	cp $f8
 446+ 9BE3 20 2A        	jr nz,8F
 447+ 9BE5 18 10        	jr 4F
 448+ 9BE7 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BEA FE F9        	cp $f9
 450+ 9BEC 20 21        	jr nz,8F
 451+ 9BEE 18 07        	jr 4F
 452+ 9BF0 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BF3 FE FB        	cp $fb
 454+ 9BF5 20 18        	jr nz,8F
 455+ 9BF7
 456+ 9BF7              ; ---------- ---------- ----------
 457+ 9BF7
 458+ 9BF7              4
 459+ 9BF7 CD FD 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BFA              ;	call Reinicio
 461+ 9BFA
 462+ 9BFA              ; ---------- ---------- ----------
 463+ 9BFA
 464+ 9BFA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BFC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BFD
 467+ 9BFD              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BFD              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BFD
 470+ 9BFD CD 16 9C     	call DESPLZ_IZQ
 471+ 9C00 C1           	pop bc
 472+ 9C01 10 F9        	djnz 5B
 473+ 9C03 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C06 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C07 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9C0A CD D4 94     	call Genera_coordenadas
 477+ 9C0D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C0F
 479+ 9C0F              ; ---------- ---------- ----------
 480+ 9C0F
 481+ 9C0F              ; Movemos, no hay recolocación.
 482+ 9C0F
 483+ 9C0F 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9C12 CD 16 9C     	call DESPLZ_IZQ
 485+ 9C15 C9           2 ret
 486+ 9C16
 487+ 9C16              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C16              ;
 489+ 9C16              ;	22/9/22
 490+ 9C16
 491+ 9C16              DESPLZ_IZQ
 492+ 9C16
 493+ 9C16 CD 25 9C     	call Desplaza_izquierda
 494+ 9C19 CD 71 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C1C CD 99 9C     	call Ciclo_completo_2
 496+ 9C1F 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C22 CB BE        	res 7,(hl)
 498+ 9C24 C9           	ret
 499+ 9C25
 500+ 9C25              Desplaza_izquierda
 501+ 9C25
 502+ 9C25 3A E4 8B     	ld a,(Vel_left)
 503+ 9C28 47           	ld b,a
 504+ 9C29 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C2C 23           1 inc hl
 506+ 9C2D 23           	inc hl
 507+ 9C2E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C30 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C33 CD B5 90     	call Extrae_address
 510+ 9C36 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9C39
 512+ 9C39              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C39
 514+ 9C39              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C39              ; Cuántos movimientos hemos hecho ??
 516+ 9C39              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C39
 518+ 9C39 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C3C EB           	ex de,hl
 520+ 9C3D A7           	and a
 521+ 9C3E ED 52        	sbc hl,de
 522+ 9C40 CB 3D        	srl l
 523+ 9C42 3E 08        6 ld a,8
 524+ 9C44 95           	sub l
 525+ 9C45 30 1E        	jr nc,3F
 526+ 9C47
 527+ 9C47              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C47              ; B="0".
 529+ 9C47
 530+ 9C47 04           4 inc b
 531+ 9C48 3C           	inc a
 532+ 9C49 20 FC        	jr nz,4B
 533+ 9C4B 78           	ld a,b
 534+ 9C4C 08           	ex af,af
 535+ 9C4D 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C50 23           5 inc hl
 537+ 9C51 23           	inc hl
 538+ 9C52 10 FC        	djnz 5B
 539+ 9C54 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C57 CD B5 90     	call Extrae_address
 541+ 9C5A 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C5D
 543+ 9C5D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C5D              ; _(Posicion_actual).
 545+ 9C5D
 546+ 9C5D 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C60 35           	dec (hl)
 548+ 9C61 08           	ex af,af
 549+ 9C62 6F           	ld l,a
 550+ 9C63 18 DD        	jr 6B
 551+ 9C65
 552+ 9C65              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C65
 554+ 9C65 47           3 ld b,a
 555+ 9C66 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C69 23           2 inc hl
 557+ 9C6A 23           	inc hl
 558+ 9C6B 10 FC        	djnz 2B
 559+ 9C6D 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C70 C9           8 ret
 561+ 9C71
 562+ 9C71              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C71              ;
 564+ 9C71              ;	modifica_parametros_1er_DESPLZ
 565+ 9C71              ;
 566+ 9C71              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C71              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C71              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C71
 570+ 9C71 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C74 A7           	and a
 572+ 9C75 20 1E        	jr nz,1F
 573+ 9C77 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C78 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C7B 21 CE 8B     	ld hl,Columns
 576+ 9C7E 34           	inc (hl)
 577+ 9C7F 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C82 E6 01        	and 1
 579+ 9C84 20 0F        	jr nz,1F
 580+ 9C86 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C89 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C8A 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C8D CD D4 94     	call Genera_coordenadas
 584+ 9C90 CD EC 9C     	call Dec_CTRL_DESPLZ
 585+ 9C93 18 03        	jr 2F
 586+ 9C95 CD EC 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C98 C9           2 ret
 588+ 9C99
 589+ 9C99              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C99
 591+ 9C99 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C9C FE F7        	cp $f7
 593+ 9C9E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA0 30 2C        	jr nc,3F
 595+ 9CA2
 596+ 9CA2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA2
 598+ 9CA2 06 00        	ld b,0
 599+ 9CA4 04           4 inc b
 600+ 9CA5 3C           	inc a
 601+ 9CA6 FE F7        	cp $f7
 602+ 9CA8 20 FA        	jr nz,4B
 603+ 9CAA 3E FF        	ld a,$ff
 604+ 9CAC 90           	sub b
 605+ 9CAD 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB0 18 1C        	jr 3F
 607+ 9CB2
 608+ 9CB2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB2
 610+ 9CB2 21 CE 8B     1 ld hl,Columns
 611+ 9CB5 35           	dec (hl)
 612+ 9CB6 AF           	xor a
 613+ 9CB7 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9CBA 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9CBD E6 01        	and 1
 616+ 9CBF 28 0A        	jr z,2F
 617+ 9CC1 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CC4 2B           	dec hl
 619+ 9CC5 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9CC8 CD D4 94     	call Genera_coordenadas
 621+ 9CCB
 622+ 9CCB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CCB
 624+ 9CCB CD DD 90     2 call Inicia_puntero_objeto_izq
 625+ 9CCE C9           3 ret
 626+ 9CCF
 627+ 9CCF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CCF              ;
 629+ 9CCF              ;	19/10/22
 630+ 9CCF              ;
 631+ 9CCF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CCF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CCF
 634+ 9CCF 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CD4 C9           	ret
 637+ 9CD5
 638+ 9CD5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CD5              ;
 640+ 9CD5              ;	19/10/22
 641+ 9CD5              ;
 642+ 9CD5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CD5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CD5
 645+ 9CD5 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CD8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CDA C9           	ret
 648+ 9CDB
 649+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CDB              ;
 651+ 9CDB              ;	24/7/22
 652+ 9CDB              ;
 653+ 9CDB              ;	Inc_CTRL_DESPLZ
 654+ 9CDB              ;
 655+ 9CDB              ;
 656+ 9CDB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CDB
 658+ 9CDB 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CDE 3A E5 8B     	ld a,(Vel_right)
 660+ 9CE1 A7           	and a
 661+ 9CE2 28 06        	jr z,1F
 662+ 9CE4 47           	ld b,a
 663+ 9CE5 34           3 inc (hl)
 664+ 9CE6 10 FD        	djnz 3B
 665+ 9CE8 18 01        	jr 2F
 666+ 9CEA 34           1 inc (hl)
 667+ 9CEB C9           2 ret
 668+ 9CEC
 669+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CEC              ;
 671+ 9CEC              ;	5/2/23
 672+ 9CEC              ;
 673+ 9CEC              ;	Dec_CTRL_DESPLZ
 674+ 9CEC              ;
 675+ 9CEC              ;
 676+ 9CEC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CEC
 678+ 9CEC 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CEF 3A E4 8B     	ld a,(Vel_left)
 680+ 9CF2 A7           	and a
 681+ 9CF3 28 06        	jr z,1F
 682+ 9CF5 47           	ld b,a
 683+ 9CF6 35           3 dec (hl)
 684+ 9CF7 10 FD        	djnz 3B
 685+ 9CF9 18 01        	jr 2F
 686+ 9CFB 35           1 dec (hl)
 687+ 9CFC C9           2 ret
 688+ 9CFD
 689+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CFD
 691+ 9CFD 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D00 01 1F 00     	ld bc,31
 693+ 9D03 A7           	and a
 694+ 9D04 ED 4A        	adc hl,bc
 695+ 9D06 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9D09 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D0C CB C6        	set 0,(hl)
 698+ 9D0E C9           	ret
 699+ 9D0F
 700+ 9D0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D0F
 702+ 9D0F 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D12 01 1F 00     	ld bc,31
 704+ 9D15 A7           	and a
 705+ 9D16 ED 42        	sbc hl,bc
 706+ 9D18 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D1B 21 CC 8B     	ld hl,Ctrl_0
 708+ 9D1E CB CE        	set 1,(hl)
 709+ 9D20 C9           	ret
 710+ 9D21
 711+ 9D21              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D21
 713+ 9D21 24           Reaparece_abajo inc h
 714+ 9D22 01 E0 17     	ld bc,$17e0
 715+ 9D25 A7           	and a
 716+ 9D26 ED 4A        	adc hl,bc
 717+ 9D28 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9D2B 21 CC 8B     	ld hl,Ctrl_0
 719+ 9D2E CB D6        	set 2,(hl)
 720+ 9D30 C9           	ret
 721+ 9D31
 722+ 9D31              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D31
 724+ 9D31 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D34 A7           	and a
 726+ 9D35 ED 42        	sbc hl,bc
 727+ 9D37 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9D3A 21 CC 8B     	ld hl,Ctrl_0
 729+ 9D3D CB DE        	set 3,(hl)
 730+ 9D3F C9           	ret
 731+ 9D40
 732+ 9D40              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D40              ;
 734+ 9D40              ;	15/07/23
 735+ 9D40
 736+ 9D40              Reinicio
 737+ 9D40
 738+ 9D40              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D40
 740+ 9D40 AF           	xor a
 741+ 9D41 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D44 CD 62 9D     	call Limpia_contenido_hl
 743+ 9D47
 744+ 9D47 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D4A CD 62 9D     	call Limpia_contenido_hl
 746+ 9D4D
 747+ 9D4D CD B6 92     	call Inicializa_Puntero_indice_mov
 748+ 9D50 CD 61 9E     	call Inicia_Puntero_mov
 749+ 9D53
 750+ 9D53 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D56 06 05        	ld b,5
 752+ 9D58 77           1 ld (hl),a
 753+ 9D59 23           	inc hl
 754+ 9D5A 10 FC        	djnz 1B
 755+ 9D5C
 756+ 9D5C 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D5F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D61
 759+ 9D61 C9           	ret
 760+ 9D62
 761+ 9D62 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D63 23           	inc hl
 763+ 9D64 77           	ld (hl),a
 764+ 9D65 C9           	ret
 765+ 9D66
 766+ 9D66              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D66              ;
 768+ 9D66              ;	18/6/24
 769+ 9D66              ;
 770+ 9D66
 771+ 9D66              Amadeus_a_izquierda
 772+ 9D66
 773+ 9D66              ;	Actualiza contador de movimientos.
 774+ 9D66
 775+ 9D66 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D69 35           	dec (hl)
 777+ 9D6A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D6C
 779+ 9D6C 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D6F 2B           	dec hl
 781+ 9D70 2B           	dec hl
 782+ 9D71 2B           	dec hl
 783+ 9D72 2B           	dec hl
 784+ 9D73 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D76
 786+ 9D76 21 33 8C     	ld hl,Ctrl_3
 787+ 9D79 CB EE        	set 5,(hl)
 788+ 9D7B
 789+ 9D7B C9           	ret
 790+ 9D7C
 791+ 9D7C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D7D C9           	ret
 793+ 9D7E
 794+ 9D7E
 795+ 9D7E              Amadeus_a_derecha
 796+ 9D7E
 797+ 9D7E              ;	Actualiza contador de movimientos.
 798+ 9D7E
 799+ 9D7E 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D81 34           	inc (hl)
 801+ 9D82 3E 7A        	ld a,$7a
 802+ 9D84 BE           	cp (hl)
 803+ 9D85 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D87
 805+ 9D87 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D8A 23           	inc hl
 807+ 9D8B 23           	inc hl
 808+ 9D8C 23           	inc hl
 809+ 9D8D 23           	inc hl
 810+ 9D8E 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D91
 812+ 9D91 21 33 8C     	ld hl,Ctrl_3
 813+ 9D94 CB EE        	set 5,(hl)
 814+ 9D96 C9           	ret
 815+ 9D97
 816+ 9D97 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D98 C9           	ret
# file closed: Direcciones.asm
2053  9D99              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D99              ; ----- ----- ----- ----- -----
   2+ 9D99              ;
   3+ 9D99              ;   28/12/23
   4+ 9D99
   5+ 9D99              Movimiento
   6+ 9D99
   7+ 9D99              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D99
   9+ 9D99 3A CB 8B         ld a,(Ctrl_2)
  10+ 9D9C CB 57            bit 2,a
  11+ 9D9E 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA0
  13+ 9DA0 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9DA3 7E               ld a,(hl)
  15+ 9DA4
  16+ 9DA4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DA4
  18+ 9DA4              Inicia_desplazamiento.
  19+ 9DA4
  20+ 9DA4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DA4
  22+ 9DA4 CD 97 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DA7
  24+ 9DA7              ; Iniciamos (Repetimos_mov).
  25+ 9DA7
  26+ 9DA7 7E               ld a,(hl)
  27+ 9DA8 E6 0F            and $0f
  28+ 9DAA 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9DAD 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB0
  31+ 9DB0              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB0
  33+ 9DB0 23               inc hl
  34+ 9DB1 7E               ld a,(hl)
  35+ 9DB2 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9DB5 2B               dec hl
  37+ 9DB6
  38+ 9DB6 21 CB 8B         ld hl,Ctrl_2
  39+ 9DB9 CB D6            set 2,(hl)
  40+ 9DBB
  41+ 9DBB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DBB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DBB
  44+ 9DBB              Desplazamiento_iniciado
  45+ 9DBB
  46+ 9DBB CD 6B 9E         call Aplica_desplazamiento
  47+ 9DBE
  48+ 9DBE              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DBE
  50+ 9DBE 3A 33 8C         ld a,(Ctrl_3)
  51+ 9DC1 CB 4F            bit 1,a
  52+ 9DC3 C0               ret nz
  53+ 9DC4
  54+ 9DC4 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DC7 35               dec (hl)
  56+ 9DC8 C0               ret nz
  57+ 9DC9
  58+ 9DC9              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DC9              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DC9              ; Analiza (Cola_de_desplazamiento).
  61+ 9DC9
  62+ 9DC9 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DCC A7               and a
  64+ 9DCD CC C0 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD0 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD2
  67+ 9DD2 FE FF            cp $ff
  68+ 9DD4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DD6
  70+ 9DD6 FE FE            cp $fe
  71+ 9DD8 CC 45 9E         call z,Fijamos_bucle
  72+ 9DDB 28 25            jr z,Reinicia_el_movimiento
  73+ 9DDD
  74+ 9DDD FE FD            cp $fd
  75+ 9DDF 20 11            jr nz,1F
  76+ 9DE1
  77+ 9DE1              ; ---
  78+ 9DE1              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE1
  80+ 9DE1 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DE4 CB 5F            bit 3,a
  82+ 9DE6 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DE8
  84+ 9DE8              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DE8
  86+ 9DE8 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DEB CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DED
  89+ 9DED CD 56 9E         call Inicia_Repetimos_movimiento
  90+ 9DF0 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF2              ; ---
  92+ 9DF2
  93+ 9DF2 FE 01        1 cp 1
  94+ 9DF4 CA 2F 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DF7
  96+ 9DF7 3D               dec a
  97+ 9DF8 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9DFB
  99+ 9DFB 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DFE 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E01              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E01 C9               ret
 103+ 9E02
 104+ 9E02              Reinicia_el_movimiento
 105+ 9E02
 106+ 9E02 3A CB 8B         ld a,(Ctrl_2)
 107+ 9E05 CB 5F            bit 3,a
 108+ 9E07 28 1B            jr z,2F
 109+ 9E09
 110+ 9E09              ; (Cola_de_desplazamiento)="254".
 111+ 9E09
 112+ 9E09 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E0C 35               dec (hl)
 114+ 9E0D 20 15            jr nz,2F
 115+ 9E0F
 116+ 9E0F              ; Fin de las repeticiones del último movimiento.
 117+ 9E0F
 118+ 9E0F 21 CB 8B         ld hl,Ctrl_2
 119+ 9E12 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E14
 121+ 9E14 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9E17 23               inc hl
 123+ 9E18 23               inc hl
 124+ 9E19 23               inc hl
 125+ 9E1A 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E1D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E1D 7E               ld a,(hl)
 128+ 9E1E 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9E21
 130+ 9E21 C3 C9 9D         jp Cola
 131+ 9E24
 132+ 9E24 CD 61 9E     2 call Inicia_Puntero_mov
 133+ 9E27
 134+ 9E27 21 CB 8B         ld hl,Ctrl_2
 135+ 9E2A CB 96            res 2,(hl)
 136+ 9E2C
 137+ 9E2C C3 99 9D         jp Movimiento
 138+ 9E2F
 139+ 9E2F              Siguiente_desplazamiento
 140+ 9E2F
 141+ 9E2F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E2F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E2F
 144+ 9E2F 21 CB 8B         ld hl,Ctrl_2
 145+ 9E32 CB 96            res 2,(hl)
 146+ 9E34
 147+ 9E34 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9E37 23               inc hl
 149+ 9E38 23               inc hl
 150+ 9E39 22 F2 8B         ld (Puntero_mov),hl
 151+ 9E3C
 152+ 9E3C 7E               ld a,(hl)
 153+ 9E3D A7               and a
 154+ 9E3E CC C0 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E41 CA 02 9E         jp z,Reinicia_el_movimiento
 156+ 9E44
 157+ 9E44 C9               ret
 158+ 9E45
 159+ 9E45              ; Subrutinas -----------------------------------------
 160+ 9E45              ; ---------- --------- --------- ---------- ----------
 161+ 9E45              ;
 162+ 9E45              ;   24/07/23
 163+ 9E45              ;
 164+ 9E45              ;   Fijamos_bucle
 165+ 9E45              ;
 166+ 9E45              ;
 167+ 9E45
 168+ 9E45              Fijamos_bucle
 169+ 9E45
 170+ 9E45 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E48 3C               inc a
 172+ 9E49 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E4C
 174+ 9E4C CD C0 9E         call Incrementa_Puntero_indice_mov
 175+ 9E4F 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E52 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E55 C9               ret
 178+ 9E56
 179+ 9E56              ; ---------- --------- --------- ---------- ----------
 180+ 9E56              ;
 181+ 9E56              ;   07/7/23
 182+ 9E56              ;
 183+ 9E56              ;   Inicia_Repetimos_movimiento
 184+ 9E56              ;
 185+ 9E56              ;
 186+ 9E56
 187+ 9E56              Inicia_Repetimos_movimiento
 188+ 9E56
 189+ 9E56              ; Iniciamos (Repetimos_movimiento).
 190+ 9E56
 191+ 9E56 DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E5A DD 7E 02         ld a,(ix+2)
 193+ 9E5D 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E60
 195+ 9E60 C9               ret
 196+ 9E61
 197+ 9E61              ; ---------- --------- --------- ---------- ----------
 198+ 9E61              ;
 199+ 9E61              ;   26/6/23
 200+ 9E61              ;
 201+ 9E61              ;   Inicia_Puntero_mov
 202+ 9E61              ;
 203+ 9E61              ;
 204+ 9E61
 205+ 9E61 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E64 CD B5 90         call Extrae_address
 207+ 9E67 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E6A C9               ret
 209+ 9E6B
 210+ 9E6B              ; ---------- --------- --------- ---------- ----------
 211+ 9E6B              ;
 212+ 9E6B              ;   27/06/23
 213+ 9E6B              ;
 214+ 9E6B              ;   Aplica_movimiento.
 215+ 9E6B
 216+ 9E6B              Aplica_desplazamiento
 217+ 9E6B
 218+ 9E6B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E6B
 220+ 9E6B 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E6E
 222+ 9E6E 7E               ld a,(hl)
 223+ 9E6F E6 F0            and $f0
 224+ 9E71 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E72
 226+ 9E72 CB 7E            bit 7,(hl)
 227+ 9E74 28 03            jr z,1F
 228+ 9E76 CD 4D 9A         call Mov_up
 229+ 9E79 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E7C CB 76            bit 6,(hl)
 231+ 9E7E 28 03            jr z,2F
 232+ 9E80 CD 14 9A         call Mov_down
 233+ 9E83
 234+ 9E83              ; Se ha aplicado reinicio ???
 235+ 9E83              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E83
 237+ 9E83              ;    ld a,(Ctrl_3)
 238+ 9E83              ;    bit 1,a
 239+ 9E83              ;    ret nz
 240+ 9E83
 241+ 9E83 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E86 CB 6E            bit 5,(hl)
 243+ 9E88 28 03            jr z,3F
 244+ 9E8A CD B3 9B         call Mov_left
 245+ 9E8D 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9E90 CB 66            bit 4,(hl)
 247+ 9E92 C8               ret z
 248+ 9E93 CD 90 9A         call Mov_right
 249+ 9E96 C9               ret
 250+ 9E97
 251+ 9E97              ; ---------- --------- --------- ---------- ----------
 252+ 9E97              ;
 253+ 9E97              ;   26/06/23
 254+ 9E97              ;
 255+ 9E97              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E97
 257+ 9E97              Ajusta_velocidad_desplazamiento
 258+ 9E97
 259+ 9E97              ; 1er byte de la cadena de movimiento.
 260+ 9E97              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E97
 262+ 9E97 CD B5 9E         call Extrae_nibble_alto
 263+ 9E9A
 264+ 9E9A 32 E6 8B         ld (Vel_up),a
 265+ 9E9D 79               ld a,c
 266+ 9E9E E6 0F            and $0f
 267+ 9EA0 32 E7 8B         ld (Vel_down),a
 268+ 9EA3
 269+ 9EA3              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EA3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EA3
 272+ 9EA3 23               inc hl
 273+ 9EA4 CD B5 9E         call Extrae_nibble_alto
 274+ 9EA7
 275+ 9EA7 32 E4 8B         ld (Vel_left),a
 276+ 9EAA 79               ld a,c
 277+ 9EAB E6 0F            and $0f
 278+ 9EAD 32 E5 8B         ld (Vel_right),a
 279+ 9EB0
 280+ 9EB0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB0
 282+ 9EB0 23               inc hl
 283+ 9EB1 22 F2 8B         ld (Puntero_mov),hl
 284+ 9EB4 C9               ret
 285+ 9EB5
 286+ 9EB5 06 04        Extrae_nibble_alto ld b,4
 287+ 9EB7 7E               ld a,(hl)
 288+ 9EB8 4F               ld c,a
 289+ 9EB9 E6 F0            and $f0
 290+ 9EBB CB 3F        1 srl a
 291+ 9EBD 10 FC            djnz 1B
 292+ 9EBF C9               ret
 293+ 9EC0
 294+ 9EC0              ; ---------- --------- --------- ---------- ----------
 295+ 9EC0              ;
 296+ 9EC0              ;   5/7/23
 297+ 9EC0              ;
 298+ 9EC0              ;   Incrementa_Puntero_indice_mov
 299+ 9EC0
 300+ 9EC0              Incrementa_Puntero_indice_mov
 301+ 9EC0
 302+ 9EC0 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9EC3 34               inc (hl)
 304+ 9EC4
 305+ 9EC4 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9EC7 01 02 00         ld bc,2
 307+ 9ECA A7               and a
 308+ 9ECB 09               add hl,bc
 309+ 9ECC 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9ECF
 311+ 9ECF 7E               ld a,(hl)
 312+ 9ED0 A7               and a
 313+ 9ED1
 314+ 9ED1              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED1
 316+ 9ED1              ;    jr z,$
 317+ 9ED1
 318+ 9ED1              ;! Reinicia el Patrón de movimiento.
 319+ 9ED1
 320+ 9ED1 CC D6 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ED4
 322+ 9ED4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ED5
 324+ 9ED5 C9               ret
 325+ 9ED6
 326+ 9ED6              ; ---------- --------- --------- ---------- ----------
 327+ 9ED6              ;
 328+ 9ED6              ;   15/01/24
 329+ 9ED6              ;
 330+ 9ED6              ;   Inicializa_Puntero_indice_mov
 331+ 9ED6
 332+ 9ED6              Inicializa_Puntero_indice_mov_2
 333+ 9ED6
 334+ 9ED6              ; Existe etiqueta de bucle principal???
 335+ 9ED6
 336+ 9ED6 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ED9 24               inc h
 338+ 9EDA 25               dec h
 339+ 9EDB 28 05            jr z,2F
 340+ 9EDD
 341+ 9EDD 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9EE0 18 14            jr 3F
 343+ 9EE2
 344+ 9EE2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE2
 346+ 9EE2 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EE5 47               ld b,a
 348+ 9EE6
 349+ 9EE6 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EE9 2B           1 dec hl
 351+ 9EEA 2B               dec hl
 352+ 9EEB 10 FC            djnz 1B
 353+ 9EED 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9EF0
 355+ 9EF0 AF               xor a
 356+ 9EF1 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9EF4 18 06            jr 4F
 358+ 9EF6
 359+ 9EF6 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EF9 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9EFC C9           4 ret
 362+ 9EFD
 363+ 9EFD              ; ----------------------------------------------------------------------
 364+ 9EFD              ;
 365+ 9EFD              ;   30/01/24
 366+ 9EFD              ;
 367+ 9EFD              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EFD
 369+ 9EFD 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F00 CD 51 94         call Calcula_salto_en_BC
 371+ 9F03 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F06 A7               and a
 373+ 9F07 ED 4A            adc hl,bc
 374+ 9F09 C9               ret
 375+ 9F0A
 376+ 9F0A              ; ----------------------------------------------------------------------
 377+ 9F0A              ;
 378+ 9F0A              ;   30/01/24
 379+ 9F0A              ;
 380+ 9F0A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F0A              ;
 382+ 9F0A              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F0A
 384+ 9F0A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F0B 23               inc hl
 386+ 9F0C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F0D 69               ld l,c
 388+ 9F0E 60               ld h,b
 389+ 9F0F 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F12 C9               ret
 391+ 9F13
# file closed: Movimiento.asm
2054  9F13              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F13              ; --------------------------------------------------------------------------------------
   2+ 9F13              ;
   3+ 9F13              ;   15/10/24
   4+ 9F13              ;
   5+ 9F13
   6+ 9F13              Pinta_disparos_Entidades
   7+ 9F13
   8+ 9F13 21 35 8C         ld hl,Ctrl_5
   9+ 9F16 CB 56            bit 2,(hl)
  10+ 9F18 20 FE            jr nz,$
  11+ 9F1A
  12+ 9F1A              ;    ld b,2
  13+ 9F1A              ;    ld (Stack),sp
  14+ 9F1A              ;    ld sp,(Album_de_borrado_disparos_Amadeus)
  15+ 9F1A              ;3 pop de
  16+ 9F1A              ;    inc d
  17+ 9F1A              ;    dec d
  18+ 9F1A              ;    jr z,1F
  19+ 9F1A              ;    pop hl
  20+ 9F1A
  21+ 9F1A              ;Imprime_scanlines_en_pantalla
  22+ 9F1A
  23+ 9F1A              ; 1er scanline
  24+ 9F1A
  25+ 9F1A              ;    ld a,(de)
  26+ 9F1A              ;    xor (hl)
  27+ 9F1A              ;    ld (hl),a
  28+ 9F1A
  29+ 9F1A              ;    inc e
  30+ 9F1A              ;    inc l
  31+ 9F1A
  32+ 9F1A              ;    ld a,(de)
  33+ 9F1A              ;    xor (hl)
  34+ 9F1A              ;    ld (hl),a
  35+ 9F1A
  36+ 9F1A              ;    dec e
  37+ 9F1A              ;    pop hl
  38+ 9F1A
  39+ 9F1A              ; 2º scanline
  40+ 9F1A
  41+ 9F1A              ;    ld a,(de)
  42+ 9F1A              ;    xor (hl)
  43+ 9F1A              ;    ld (hl),a
  44+ 9F1A
  45+ 9F1A              ;    inc e
  46+ 9F1A              ;    inc l
  47+ 9F1A
  48+ 9F1A              ;    ld a,(de)
  49+ 9F1A              ;    xor (hl)
  50+ 9F1A              ;    ld (hl),a
  51+ 9F1A
  52+ 9F1A              ;    dec e
  53+ 9F1A
  54+ 9F1A              ;    jr 1F
  55+ 9F1A
  56+ 9F1A              ;2 ld sp,(Album_de_pintado_disparos_Amadeus)
  57+ 9F1A              ;    jr 3B
  58+ 9F1A              ;1 djnz 2B
  59+ 9F1A              ;   ld sp,(Stack)
  60+ 9F1A C9               ret
  61+ 9F1B
  62+ 9F1B
  63+ 9F1B              Motor_de_disparos_entidades
  64+ 9F1B
  65+ 9F1B 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
  66+ 9F1E FE 07            cp 7
  67+ 9F20 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  68+ 9F21
  69+ 9F21 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  70+ 9F23 21 23 89         ld hl,Indice_de_disparos_entidades
  71+ 9F26
  72+ 9F26 CD B5 90     1 call Extrae_address
  73+ 9F29 1C               inc e
  74+ 9F2A 1C               inc e
  75+ 9F2B ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  76+ 9F2F
  77+ 9F2F               ; Caja vacía ???
  78+ 9F2F
  79+ 9F2F 2C               inc l
  80+ 9F30
  81+ 9F30 7E               ld a,(hl)
  82+ 9F31 A7               and a
  83+ 9F32 28 19            jr z,3F                                                              ; Caja vacía.
  84+ 9F34
  85+ 9F34              ; --- Trabajamos con caja:
  86+ 9F34
  87+ 9F34              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
  88+ 9F34
  89+ 9F34 CD 63 9F         call Rota_disparo_si_procede
  90+ 9F37
  91+ 9F37              ; ------------------------------------------------------------
  92+ 9F37
  93+ 9F37 2D               dec l
  94+ 9F38 2D               dec l
  95+ 9F39 2D               dec l
  96+ 9F3A
  97+ 9F3A CD B5 90         call Extrae_address
  98+ 9F3D              ;   (Puntero_de_impresion) del disparo en HL.
  99+ 9F3D
 100+ 9F3D              ;! Velocidad del disparo de entidades.
 101+ 9F3D
 102+ 9F3D CD CE 99         call NextScan
 103+ 9F40
 104+ 9F40              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 105+ 9F40
 106+ 9F40 CD 51 9F         call Fin_de_disparo_de_entidad
 107+ 9F43
 108+ 9F43 EB               ex de,hl
 109+ 9F44
 110+ 9F44 73               ld (hl),e
 111+ 9F45 23               inc hl
 112+ 9F46 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 113+ 9F47
 114+ 9F47 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 115+ 9F4A 18 02            jr 2F
 116+ 9F4C
 117+ 9F4C C9               ret
 118+ 9F4D
 119+ 9F4D EB           3 ex de,hl
 120+ 9F4E 10 D6        2 djnz 1B
 121+ 9F50
 122+ 9F50 C9               ret
 123+ 9F51
 124+ 9F51              ; ------------- ------------- ------------
 125+ 9F51              ;
 126+ 9F51              ;   25/9/24
 127+ 9F51
 128+ 9F51              Fin_de_disparo_de_entidad
 129+ 9F51
 130+ 9F51 7C               ld a,h
 131+ 9F52 FE 54            cp $54
 132+ 9F54 D8               ret c
 133+ 9F55
 134+ 9F55 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 135+ 9F56
 136+ 9F56 5D               ld e,l
 137+ 9F57 54               ld d,h
 138+ 9F58
 139+ 9F58 21 E0 57         ld hl,$57e0
 140+ 9F5B ED 52            sbc hl,de
 141+ 9F5D
 142+ 9F5D 38 39            jr c,Elimina_disparo_entidad
 143+ 9F5F
 144+ 9F5F 6B               ld l,e
 145+ 9F60 62               ld h,d
 146+ 9F61
 147+ 9F61 D1               pop de
 148+ 9F62
 149+ 9F62 C9               ret
 150+ 9F63
 151+ 9F63              ; ----------------------------------------------------------
 152+ 9F63              ;
 153+ 9F63              ;   08/10/24
 154+ 9F63
 155+ 9F63              Rota_disparo_si_procede
 156+ 9F63
 157+ 9F63              ;   Nos situamos en el byte alto de (Control).
 158+ 9F63
 159+ 9F63 CB 76            bit 6,(hl)
 160+ 9F65 20 03            jr nz,Decrementa_contador_de_control_de_disparo
 161+ 9F67 CB 7E            bit 7,(hl)
 162+ 9F69 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 163+ 9F6A
 164+ 9F6A              Decrementa_contador_de_control_de_disparo
 165+ 9F6A
 166+ 9F6A 35               dec (hl)
 167+ 9F6B 7E               ld a,(hl)
 168+ 9F6C E6 07            and 7
 169+ 9F6E C0               ret nz
 170+ 9F6F
 171+ 9F6F              Rotamos_disparo_segun_proceda
 172+ 9F6F
 173+ 9F6F              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 174+ 9F6F
 175+ 9F6F 3E 07            ld a,7
 176+ 9F71 86               add (hl)
 177+ 9F72 77               ld (hl),a                                                           ; Contador reinicializado.
 178+ 9F73
 179+ 9F73 CD 8C 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 180+ 9F76
 181+ 9F76 CB 76            bit 6,(hl)
 182+ 9F78 20 05            jr nz,Rota_a_derecha
 183+ 9F7A
 184+ 9F7A
 185+ 9F7A              Rota_a_izq
 186+ 9F7A
 187+ 9F7A F3               di
 188+ 9F7B 18 FE            jr $
 189+ 9F7D FB               ei
 190+ 9F7E
 191+ 9F7E C9               ret
 192+ 9F7F
 193+ 9F7F              Rota_a_derecha
 194+ 9F7F
 195+ 9F7F FD CB 00 3E      srl (iy+0)
 196+ 9F83 FD CB 01 3E      srl (iy+1)
 197+ 9F87 FD CB 02 3E      srl (iy+2)
 198+ 9F8B
 199+ 9F8B              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 200+ 9F8B
 201+ 9F8B C9               ret
 202+ 9F8C
 203+ 9F8C              ; ------------ ----------- ------------
 204+ 9F8C              ;
 205+ 9F8C              ;   11/10/24
 206+ 9F8C
 207+ 9F8C              Puntero_objeto_en_IY
 208+ 9F8C
 209+ 9F8C E5               push hl
 210+ 9F8D
 211+ 9F8D 2D               dec l
 212+ 9F8E 2D               dec l
 213+ 9F8F 2D               dec l
 214+ 9F90 2D               dec l
 215+ 9F91 2D               dec l
 216+ 9F92 2D               dec l
 217+ 9F93
 218+ 9F93 E5               push hl
 219+ 9F94 FD E1            pop iy
 220+ 9F96
 221+ 9F96 E1               pop hl
 222+ 9F97
 223+ 9F97 C9               ret
 224+ 9F98
 225+ 9F98              ; ------------ ----------- ------------
 226+ 9F98              ;
 227+ 9F98              ;   25/9/24
 228+ 9F98
 229+ 9F98              Elimina_disparo_entidad
 230+ 9F98
 231+ 9F98 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 232+ 9F9B 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 233+ 9F9C
 234+ 9F9C E1               pop hl
 235+ 9F9D E5               push hl
 236+ 9F9E
 237+ 9F9E 2B               dec hl
 238+ 9F9F 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 239+ 9FA0
 240+ 9FA0 16 06            ld d,6                                                              ; Contador
 241+ 9FA2 AF               xor a                                                               ; Borrador
 242+ 9FA3
 243+ 9FA3 77           1 ld (hl),a
 244+ 9FA4 15               dec d
 245+ 9FA5 23               inc hl
 246+ 9FA6 20 FB            jr nz,1B
 247+ 9FA8
 248+ 9FA8 D1               pop de
 249+ 9FA9
 250+ 9FA9 21 00 00         ld hl,0
 251+ 9FAC
 252+ 9FAC C9               ret
 253+ 9FAD              ; --------------------------------------------------------------------------------------
 254+ 9FAD              ;
 255+ 9FAD              ;   12/10/24
 256+ 9FAD              ;
 257+ 9FAD
 258+ 9FAD              Genera_datos_de_impresion_disparos_Entidades
 259+ 9FAD
 260+ 9FAD 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 261+ 9FB0 47               ld b,a
 262+ 9FB1 3E 07            ld a,7
 263+ 9FB3 90               sub b
 264+ 9FB4 C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 265+ 9FB5
 266+ 9FB5 08               ex af,af
 267+ 9FB6
 268+ 9FB6              ; ---------------
 269+ 9FB6
 270+ 9FB6              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 271+ 9FB6
 272+ 9FB6 21 23 89         ld hl,Indice_de_disparos_entidades
 273+ 9FB9
 274+ 9FB9 CD B5 90     1 call Extrae_address
 275+ 9FBC
 276+ 9FBC 13               inc de
 277+ 9FBD 13               inc de
 278+ 9FBE
 279+ 9FBE ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 280+ 9FC2
 281+ 9FC2 2C               inc l
 282+ 9FC3
 283+ 9FC3 7E               ld a,(hl)
 284+ 9FC4 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 285+ 9FC5 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 286+ 9FC7
 287+ 9FC7              ; ----- ----- ----- -----
 288+ 9FC7
 289+ 9FC7 2D               dec l
 290+ 9FC8 2D               dec l
 291+ 9FC9 2D               dec l
 292+ 9FCA
 293+ 9FCA CD B5 90         call Extrae_address
 294+ 9FCD E5               push hl
 295+ 9FCE
 296+ 9FCE 1D               dec e
 297+ 9FCF
 298+ 9FCF EB               ex de,hl
 299+ 9FD0
 300+ 9FD0 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 301+ 9FD1 2D               dec l
 302+ 9FD2 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 303+ 9FD3 2D               dec l
 304+ 9FD4 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 305+ 9FD5
 306+ 9FD5 E1               pop hl                                                    ;? Puntero de impresión en HL.
 307+ 9FD6
 308+ 9FD6              Genera_scanlines_de_los_disparos_de_entidades.
 309+ 9FD6
 310+ 9FD6 FD 2A 20 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 311+ 9FDA FD 73 00         ld (iy+0),e
 312+ 9FDD FD 70 01         ld (iy+1),b
 313+ 9FE0 FD 71 02         ld (iy+2),c
 314+ 9FE3
 315+ 9FE3 FD 75 03         ld (iy+3),l
 316+ 9FE6 FD 74 04         ld (iy+4),h
 317+ 9FE9
 318+ 9FE9 CD CE 99         call NextScan
 319+ 9FEC
 320+ 9FEC FD 75 05         ld (iy+5),l
 321+ 9FEF FD 74 06         ld (iy+6),h
 322+ 9FF2
 323+ 9FF2 FD E5            push iy
 324+ 9FF4 E1               pop hl
 325+ 9FF5
 326+ 9FF5 3E 07            ld a,7
 327+ 9FF7 85               add l
 328+ 9FF8 6F               ld l,a
 329+ 9FF9
 330+ 9FF9 22 20 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 331+ 9FFC
 332+ 9FFC              ; ----- ----- ----- -----
 333+ 9FFC
 334+ 9FFC 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 335+ 9FFD 3D               dec a
 336+ 9FFE C8               ret z
 337+ 9FFF 08               ex af,af
 338+ A000
 339+ A000              Situa_en_siguiente_caja
 340+ A000
 341+ A000 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 342+ A003 18 B4            jr 1B
 343+ A005
 344+ A005              ; --------------------------------------------------------------------------------------
 345+ A005              ;
 346+ A005              ;   12/10/24
 347+ A005              ;
 348+ A005
 349+ A005              Genera_disparo_de_entidad_maldosa
 350+ A005
 351+ A005              ;   Estructura de un disparo de entidades.
 352+ A005
 353+ A005              ;   Disparo_1 defw 0								; Puntero objeto.
 354+ A005              ; 	defw 0											; Puntero de impresión.
 355+ A005              ;	defw 0											; Control.
 356+ A005
 357+ A005              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 358+ A005              ;   _de la entidad en el momento de disparar.
 359+ A005
 360+ A005              ;   El byte alto muestra la siguiente información:
 361+ A005              ;
 362+ A005              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 363+ A005              ;                        _antes de desplazarse a derecha/izquierda.
 364+ A005              ;
 365+ A005              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 366+ A005              ;
 367+ A005              ;                        10xx ..... Izquierda.
 368+ A005              ;                        01xx ..... Derecha.
 369+ A005              ;                        00xx ..... Recto.
 370+ A005
 371+ A005              ;*  Exclusiones.
 372+ A005
 373+ A005              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 374+ A005              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 375+ A005
 376+ A005              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 377+ A005
 378+ A005 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 379+ A008 A7               and a
 380+ A009 C8               ret z
 381+ A00A
 382+ A00A 3A C1 8B         ld a,(Coordenada_y)
 383+ A00D A7               and a
 384+ A00E C8               ret z
 385+ A00F
 386+ A00F 3D               dec a
 387+ A010 C8               ret z
 388+ A011
 389+ A011 FE 10            cp 16
 390+ A013 D0               ret nc
 391+ A014
 392+ A014              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 393+ A014              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 394+ A014              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 395+ A014
 396+ A014 21 35 8C         ld hl,Ctrl_5
 397+ A017 CB D6            set 2,(hl)
 398+ A019
 399+ A019 21 25 8C         ld hl,Permiso_de_disparo_Entidades
 400+ A01C 35               dec (hl)                                            ; No más disparos en este FRAME.
 401+ A01D
 402+ A01D              ;   Decrementa el numero de disparos de entidades.
 403+ A01D
 404+ A01D 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 405+ A020 35               dec (hl)
 406+ A021
 407+ A021 21 23 89         ld hl,Indice_de_disparos_entidades
 408+ A024
 409+ A024 CD B5 90     1 call Extrae_address
 410+ A027
 411+ A027 13               inc de
 412+ A028 13               inc de
 413+ A029
 414+ A029 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 415+ A02D
 416+ A02D              ;   Comprobamos si la caja está vacía.
 417+ A02D
 418+ A02D 2C               inc l
 419+ A02E
 420+ A02E 7E               ld a,(hl)
 421+ A02F A7               and a
 422+ A030 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 423+ A032
 424+ A032              ;   Caja vacía, vamos a generar un disparo.
 425+ A032              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 426+ A032
 427+ A032 CD 58 A0         call Genera_byte_inclinacion
 428+ A035
 429+ A035 7E               ld a,(hl)
 430+ A036 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 431+ A037
 432+ A037 2D               dec l
 433+ A038
 434+ A038              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 435+ A038
 436+ A038 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 437+ A03B 77               ld (hl),a
 438+ A03C
 439+ A03C 2D               dec l
 440+ A03D
 441+ A03D CD 76 A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 442+ A040
 443+ A040 70               ld (hl),b
 444+ A041 2D               dec l
 445+ A042 71               ld (hl),c
 446+ A043
 447+ A043 2D               dec l
 448+ A044
 449+ A044              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 450+ A044
 451+ A044 FD 7E 02         ld a,(iy+02)
 452+ A047 77               ld (hl),a
 453+ A048 2D               dec l
 454+ A049
 455+ A049 FD 7E 01         ld a,(iy+01)
 456+ A04C 77               ld (hl),a
 457+ A04D 2D               dec l
 458+ A04E
 459+ A04E FD 7E 00         ld a,(iy+00)
 460+ A051 77               ld (hl),a
 461+ A052
 462+ A052 C9               ret
 463+ A053
 464+ A053              ;   --- --- ---
 465+ A053
 466+ A053              Situa_en_siguiente_disparo
 467+ A053
 468+ A053 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 469+ A056 18 CC            jr 1B
 470+ A058
 471+ A058              ; --------------------------------------------------------------------------------------
 472+ A058              ;
 473+ A058              ;   09/10/24
 474+ A058              ;
 475+ A058
 476+ A058              Genera_byte_inclinacion
 477+ A058
 478+ A058 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 479+ A05A
 480+ A05A              ; Determina tendencia del disparo.
 481+ A05A
 482+ A05A 3A 75 89         ld a,(CX_Amadeus)
 483+ A05D 47               ld b,a
 484+ A05E 3A C0 8B         ld a,(Coordenada_X)
 485+ A061 90               sub b
 486+ A062 38 07            jr c,Disparo_a_derecha
 487+ A064
 488+ A064 FE 04        Disparo_a_izquierda cp 4
 489+ A066
 490+ A066 D8               ret c
 491+ A067 C8               ret z
 492+ A068
 493+ A068 CB FE            set 7,(hl)
 494+ A06A C9               ret
 495+ A06B
 496+ A06B 47           Disparo_a_derecha ld b,a
 497+ A06C 3E FF            ld a,$ff
 498+ A06E 90               sub b
 499+ A06F
 500+ A06F FE 04            cp 4
 501+ A071
 502+ A071 D8               ret c
 503+ A072 C8               ret z
 504+ A073
 505+ A073 CB F6            set 6,(hl)
 506+ A075 C9               ret
 507+ A076
 508+ A076              ; --------------------------------------------------------------------------------------
 509+ A076              ;
 510+ A076              ;   09/10/24
 511+ A076              ;
 512+ A076
 513+ A076              Modifica_puntero_de_impresion
 514+ A076
 515+ A076              ;   Puntero de impresión del disparo en BC.
 516+ A076
 517+ A076 ED 4B 38 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 518+ A07A
 519+ A07A 08               ex af,af
 520+ A07B CB 77            bit 6,a
 521+ A07D 28 06            jr z,1F
 522+ A07F
 523+ A07F FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 524+ A083 0C               inc c
 525+ A084 C9               ret
 526+ A085
 527+ A085 CB 7F        1 bit 7,a
 528+ A087 28 F6            jr z,2B
 529+ A089
 530+ A089 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 531+ A08D 0D               dec c
 532+ A08E
 533+ A08E C9               ret
 534+ A08F
 535+ A08F              ; --------------------------------------------------------------------------------------
 536+ A08F              ;
 537+ A08F              ;   31/08/24
 538+ A08F              ;
 539+ A08F
 540+ A08F              Compara_con_coordenadas_de_disparo
 541+ A08F
 542+ A08F 3A C1 8B         ld a,(Coordenada_y)
 543+ A092 47               ld b,a
 544+ A093 3A 3D 8C         ld a,(Coordenadas_disparo_certero)
 545+ A096 90               sub b
 546+ A097
 547+ A097              ; A = "0" ok
 548+ A097              ; A = "1" ok
 549+ A097
 550+ A097 28 08            jr z,Comprueba_coordenada_X
 551+ A099 3D               dec a
 552+ A09A 28 05            jr z,Comprueba_coordenada_X
 553+ A09C
 554+ A09C              ; A = "$ff" ok
 555+ A09C
 556+ A09C FE FE            cp $fe
 557+ A09E 28 01            jr z,Comprueba_coordenada_X
 558+ A0A0
 559+ A0A0 C9               ret
 560+ A0A1
 561+ A0A1              Comprueba_coordenada_X
 562+ A0A1
 563+ A0A1 3A C0 8B         ld a,(Coordenada_X)
 564+ A0A4 47               ld b,a
 565+ A0A5 21 3E 8C         ld hl,Coordenadas_disparo_certero+1
 566+ A0A8 7E               ld a,(hl)
 567+ A0A9 90               sub b
 568+ A0AA
 569+ A0AA              ; A = "0" ok
 570+ A0AA              ; A = "1" ok
 571+ A0AA
 572+ A0AA 28 09            jr z,Activa_Impacto_en_entidad
 573+ A0AC 3D               dec a
 574+ A0AD 28 06            jr z,Activa_Impacto_en_entidad
 575+ A0AF
 576+ A0AF              ; A = "2" ok
 577+ A0AF
 578+ A0AF 3D               dec a
 579+ A0B0 28 03            jr z,Activa_Impacto_en_entidad
 580+ A0B2
 581+ A0B2              ; A = "$ff"
 582+ A0B2
 583+ A0B2 FE FD            cp $fd
 584+ A0B4 C0               ret nz
 585+ A0B5
 586+ A0B5              Activa_Impacto_en_entidad
 587+ A0B5
 588+ A0B5              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 589+ A0B5
 590+ A0B5 3E 02            ld a,2
 591+ A0B7 32 C3 8B         ld (Impacto),a
 592+ A0BA
 593+ A0BA              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 594+ A0BA
 595+ A0BA 11 C0 87         ld de,Indice_Explosion_entidades
 596+ A0BD 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 597+ A0C0
 598+ A0C0 73               ld (hl),e
 599+ A0C1 23               inc hl
 600+ A0C2 72               ld (hl),d
 601+ A0C3
 602+ A0C3              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 603+ A0C3
 604+ A0C3 21 3A 8C         ld hl,Impacto2
 605+ A0C6 CB 9E            res 3,(hl)
 606+ A0C8
 607+ A0C8 C9               ret
 608+ A0C9
 609+ A0C9              ; --------------------------------------------------------------------------------------
 610+ A0C9              ;
 611+ A0C9              ;   13/10/24
 612+ A0C9              ;
 613+ A0C9
 614+ A0C9              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 615+ A0C9
 616+ A0C9              Limpia_album_de_pintado_disparos_Amadeus
 617+ A0C9
 618+ A0C9 2A 18 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 619+ A0CC 06 06            ld b,6
 620+ A0CE AF               xor a
 621+ A0CF 77           1 ld (hl),a
 622+ A0D0 2C               inc l
 623+ A0D1 10 FC            djnz 1B
 624+ A0D3
 625+ A0D3 C9               ret
 626+ A0D4
 627+ A0D4              ; --------------------------------------------------------------------------------------
 628+ A0D4              ;
 629+ A0D4              ;   29/09/24
 630+ A0D4              ;
 631+ A0D4
 632+ A0D4              Calcula_bytes_pintado_disparos
 633+ A0D4
 634+ A0D4 2A 1C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 635+ A0D7 45               ld b,l
 636+ A0D8 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 637+ A0DB 7D               ld a,l
 638+ A0DC
 639+ A0DC 90               sub b
 640+ A0DD 32 22 8C         ld (Num_de_bytes_album_de_disparos),a
 641+ A0E0
 642+ A0E0 C9               ret
 643+ A0E1
 644+ A0E1              ; --------------------------------------------------------------------------------------
 645+ A0E1              ;
 646+ A0E1              ;   29/09/24
 647+ A0E1              ;
 648+ A0E1              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 649+ A0E1              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 650+ A0E1              ;   _disparos que el álbum del FRAME actual).
 651+ A0E1
 652+ A0E1              Limpia_album_de_pintado_disparos_entidades
 653+ A0E1
 654+ A0E1 3A 22 8C         ld a,(Num_de_bytes_album_de_disparos)
 655+ A0E4 A7               and a
 656+ A0E5 28 0E            jr z,Clean_only_one
 657+ A0E7
 658+ A0E7 47               ld b,a
 659+ A0E8 3E 31            ld a,$31
 660+ A0EA 90               sub b
 661+ A0EB 47               ld b,a
 662+ A0EC AF           2 xor a
 663+ A0ED
 664+ A0ED 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 665+ A0F0 77           1 ld (hl),a
 666+ A0F1 23               inc hl
 667+ A0F2 10 FC            djnz 1B
 668+ A0F4 C9               ret
 669+ A0F5
 670+ A0F5              Clean_only_one
 671+ A0F5
 672+ A0F5 06 07            ld b,7
 673+ A0F7 18 F3            jr 2B
 674+ A0F9
 675+ A0F9              ; --------------------------------------------------------------------------------------
 676+ A0F9              ;
 677+ A0F9              ;   29/09/24
 678+ A0F9              ;
 679+ A0F9
 680+ A0F9              Motor_Disparos_Amadeus
 681+ A0F9
 682+ A0F9 21 20 89         ld hl,Disparo_Amad+1
 683+ A0FC
 684+ A0FC 34               inc (hl)
 685+ A0FD 35               dec (hl)
 686+ A0FE
 687+ A0FE C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 688+ A0FF
 689+ A0FF              ;   Esta caja contiene un disparo.
 690+ A0FF
 691+ A0FF CD 06 A1         call Consulta_Impacto
 692+ A102 CC 1F A1         call z,Mueve_disparo_Amadeus
 693+ A105
 694+ A105 C9               ret
 695+ A106
 696+ A106              ; ----------------------
 697+ A106              ;
 698+ A106              ;
 699+ A106              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 700+ A106              ;
 701+ A106              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 702+ A106
 703+ A106
 704+ A106              Consulta_Impacto
 705+ A106
 706+ A106              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 707+ A106              ;   _sea lo más coherente posible.
 708+ A106
 709+ A106 E5               push hl
 710+ A107 2B               dec hl
 711+ A108 CD FB A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 712+ A10B E1               pop hl
 713+ A10C 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 714+ A10D
 715+ A10D C8               ret z
 716+ A10E
 717+ A10E 3A 3A 8C         ld a,(Impacto2)
 718+ A111 CB DF            set 3,a
 719+ A113 32 3A 8C         ld (Impacto2),a
 720+ A116
 721+ A116 E5               push hl
 722+ A117 CD E8 A1         call Genera_coordenadas_de_disparo_Amadeus
 723+ A11A E1               pop hl
 724+ A11B CD 38 A1         call Elimina_disparo_Amadeus
 725+ A11E
 726+ A11E C9               ret
 727+ A11F
 728+ A11F              ; ----------------------
 729+ A11F              ;
 730+ A11F              ;
 731+ A11F              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 732+ A11F
 733+ A11F              Mueve_disparo_Amadeus
 734+ A11F
 735+ A11F CD B5 90         call Extrae_address
 736+ A122
 737+ A122 CD DD 99         call PreviousScan
 738+ A125 CD DD 99         call PreviousScan
 739+ A128 CD DD 99         call PreviousScan
 740+ A12B CD DD 99         call PreviousScan
 741+ A12E
 742+ A12E              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 743+ A12E
 744+ A12E 7C               ld a,h
 745+ A12F D6 40            sub $40
 746+ A131 EB               ex de,hl
 747+ A132 38 04            jr c,Elimina_disparo_Amadeus
 748+ A134
 749+ A134               ; Introduce nuevo puntero_de_impresión en la caja.
 750+ A134
 751+ A134 73               ld (hl),e
 752+ A135 23               inc hl
 753+ A136 72               ld (hl),d
 754+ A137
 755+ A137 C9               ret
 756+ A138
 757+ A138              ; ----------------------
 758+ A138              ;
 759+ A138              ;   29/9/24
 760+ A138
 761+ A138              Elimina_disparo_Amadeus
 762+ A138
 763+ A138              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 764+ A138              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 765+ A138
 766+ A138              ;   Disparo_1A defw 0									; Puntero objeto.
 767+ A138              ;   	defw 0											; Puntero de impresión.
 768+ A138
 769+ A138 2B               dec hl
 770+ A139 2B               dec hl
 771+ A13A
 772+ A13A AF               xor a
 773+ A13B 77               ld (hl),a
 774+ A13C 23               inc hl
 775+ A13D 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 776+ A13E
 777+ A13E 23               inc hl
 778+ A13F 77               ld (hl),a
 779+ A140 23               inc hl
 780+ A141 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 781+ A142
 782+ A142 3E 01            ld a,1
 783+ A144 32 24 8C         ld (Permiso_de_disparo_Amadeus),a
 784+ A147
 785+ A147 CD C9 A0         call Limpia_album_de_pintado_disparos_Amadeus
 786+ A14A
 787+ A14A AF               xor a
 788+ A14B 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 789+ A14C
 790+ A14C C9               ret
 791+ A14D
 792+ A14D              ; --------------------------------------------------------------------------------------
 793+ A14D              ;
 794+ A14D              ;   13/10/24
 795+ A14D              ;
 796+ A14D
 797+ A14D              Pinta_disparos_Amadeus
 798+ A14D
 799+ A14D 06 02            ld b,2
 800+ A14F ED 73 0C 8C      ld (Stack),sp
 801+ A153 ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 802+ A157 D1           3 pop de
 803+ A158 14               inc d
 804+ A159 15               dec d
 805+ A15A 28 1C            jr z,1F
 806+ A15C E1               pop hl
 807+ A15D
 808+ A15D              Imprime_scanlines_en_pantalla
 809+ A15D
 810+ A15D              ; 1er scanline
 811+ A15D
 812+ A15D 1A               ld a,(de)
 813+ A15E AE               xor (hl)
 814+ A15F 77               ld (hl),a
 815+ A160
 816+ A160 1C               inc e
 817+ A161 2C               inc l
 818+ A162
 819+ A162 1A               ld a,(de)
 820+ A163 AE               xor (hl)
 821+ A164 77               ld (hl),a
 822+ A165
 823+ A165 1D               dec e
 824+ A166 E1               pop hl
 825+ A167
 826+ A167              ; 2º scanline
 827+ A167
 828+ A167 1A               ld a,(de)
 829+ A168 AE               xor (hl)
 830+ A169 77               ld (hl),a
 831+ A16A
 832+ A16A 1C               inc e
 833+ A16B 2C               inc l
 834+ A16C
 835+ A16C 1A               ld a,(de)
 836+ A16D AE               xor (hl)
 837+ A16E 77               ld (hl),a
 838+ A16F
 839+ A16F 1D               dec e
 840+ A170
 841+ A170 18 06            jr 1F
 842+ A172
 843+ A172 ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 844+ A176 18 DF            jr 3B
 845+ A178 10 F8        1 djnz 2B
 846+ A17A ED 7B 0C 8C      ld sp,(Stack)
 847+ A17E C9               ret
 848+ A17F
 849+ A17F              ; --------------------------------------------------------------------------------------
 850+ A17F              ;
 851+ A17F              ;   13/10/24
 852+ A17F              ;
 853+ A17F              ;   Modifica: HL,BC y DE.
 854+ A17F
 855+ A17F
 856+ A17F              Genera_datos_de_impresion_disparos_Amadeus
 857+ A17F
 858+ A17F ED 73 0C 8C      ld (Stack),sp
 859+ A183 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 860+ A186 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 861+ A187
 862+ A187 14               inc d                                                     ;? Salimos si no hay disparo.
 863+ A188 15               dec d
 864+ A189
 865+ A189 28 0E            jr z,Salida
 866+ A18B
 867+ A18B              Genera_scanlines_de_disparo_Amadeus
 868+ A18B
 869+ A18B E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 870+ A18C              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 871+ A18C ED 7B 18 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 872+ A190
 873+ A190 C1               pop bc
 874+ A191 C1               pop bc
 875+ A192 C1               pop bc
 876+ A193
 877+ A193 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 878+ A194 CD DD 99         call PreviousScan
 879+ A197 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 880+ A198 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 881+ A199
 882+ A199              Salida
 883+ A199
 884+ A199 ED 7B 0C 8C      ld sp,(Stack)
 885+ A19D
 886+ A19D C9               ret
 887+ A19E
 888+ A19E              ; --------------------------------------------------------------------------------------
 889+ A19E              ;
 890+ A19E              ;   12/09/24
 891+ A19E              ;
 892+ A19E
 893+ A19E              Genera_disparo_Amadeus
 894+ A19E
 895+ A19E              ;*  Exclusiones.
 896+ A19E
 897+ A19E 3A 24 8C         ld a,(Permiso_de_disparo_Amadeus)
 898+ A1A1 A7               and a
 899+ A1A2 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 900+ A1A3
 901+ A1A3 3D               dec a
 902+ A1A4 32 24 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 903+ A1A7
 904+ A1A7              Define_puntero_objeto_disparo
 905+ A1A7
 906+ A1A7              ;   Inicializamos contador.
 907+ A1A7
 908+ A1A7 06 00            ld b,0
 909+ A1A9
 910+ A1A9 2A 79 89         ld hl,(p.imp.amadeus)
 911+ A1AC 2C               inc l
 912+ A1AD
 913+ A1AD 3E 80            ld a,$80
 914+ A1AF BE               cp (hl)
 915+ A1B0 28 0D            jr z,1F
 916+ A1B2
 917+ A1B2 04               inc b
 918+ A1B3
 919+ A1B3 3E 60            ld a,$60
 920+ A1B5 BE               cp (hl)
 921+ A1B6 28 07            jr z,1F
 922+ A1B8
 923+ A1B8
 924+ A1B8 04               inc b
 925+ A1B9
 926+ A1B9 3E 18            ld a,$18
 927+ A1BB BE               cp (hl)
 928+ A1BC 28 01            jr z,1F
 929+ A1BE
 930+ A1BE 04               inc b
 931+ A1BF
 932+ A1BF              ;   Calcula el Puntero_de_impresión del disparo.
 933+ A1BF
 934+ A1BF              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 935+ A1BF
 936+ A1BF CD DD 99     1 call PreviousScan
 937+ A1C2
 938+ A1C2 78               ld a,b
 939+ A1C3 CB 3F            srl a
 940+ A1C5 28 03            jr z,4F
 941+ A1C7
 942+ A1C7              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 943+ A1C7 E5               push hl
 944+ A1C8 18 02            jr 5F
 945+ A1CA 2D           4 dec l
 946+ A1CB E5               push hl
 947+ A1CC              ; ---
 948+ A1CC
 949+ A1CC              ;   Calcula el Puntero_objeto del disparo.
 950+ A1CC
 951+ A1CC 21 76 83     5 ld hl,Indice_disparo_Amadeus
 952+ A1CF 04               inc b
 953+ A1D0 05               dec b
 954+ A1D1 28 04            jr z,2F
 955+ A1D3
 956+ A1D3              ;   Nos desplazamos por el índice de disparos.
 957+ A1D3
 958+ A1D3 2C           3 inc l
 959+ A1D4 2C               inc l
 960+ A1D5 10 FC            djnz 3B
 961+ A1D7
 962+ A1D7              ; --- Guarda el Puntero_objeto del disparo en la pila.
 963+ A1D7 CD B5 90     2 call Extrae_address
 964+ A1DA E5               push hl
 965+ A1DB              ; ---
 966+ A1DB
 967+ A1DB              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 968+ A1DB              ; HL en el 1er .db de la caja.
 969+ A1DB
 970+ A1DB 21 1F 89         ld hl,Disparo_Amad
 971+ A1DE
 972+ A1DE 06 02            ld b,2
 973+ A1E0
 974+ A1E0 D1           6 pop de
 975+ A1E1 73               ld (hl),e
 976+ A1E2 23               inc hl
 977+ A1E3 72               ld (hl),d
 978+ A1E4 23               inc hl
 979+ A1E5
 980+ A1E5 10 F9            djnz 6B
 981+ A1E7
 982+ A1E7 C9               ret
 983+ A1E8
 984+ A1E8              Genera_coordenadas_de_disparo_Amadeus
 985+ A1E8
 986+ A1E8              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 987+ A1E8              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 988+ A1E8              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 989+ A1E8
 990+ A1E8 CD B5 90         call Extrae_address
 991+ A1EB CD D4 94         call Genera_coordenadas
 992+ A1EE
 993+ A1EE 3D               dec a
 994+ A1EF
 995+ A1EF 21 3D 8C         ld hl,Coordenadas_disparo_certero
 996+ A1F2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 997+ A1F3 23               inc hl
 998+ A1F4 3A C0 8B         ld a,(Coordenada_X)
 999+ A1F7 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1000+ A1F8
1001+ A1F8 AF               xor a
1002+ A1F9 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1003+ A1FA
1004+ A1FA C9               ret
1005+ A1FB
1006+ A1FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1007+ A1FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1008+ A1FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1009+ A1FB
1010+ A1FB              ; ----------------------------------------------
1011+ A1FB              ;
1012+ A1FB              ;   27/08/24
1013+ A1FB              ;
1014+ A1FB              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1015+ A1FB              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1016+ A1FB
1017+ A1FB              Detecta_impacto_en_disparo_de_Amadeus
1018+ A1FB
1019+ A1FB              Extraccion_de_datos
1020+ A1FB
1021+ A1FB 13               inc de
1022+ A1FC 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1023+ A1FD
1024+ A1FD 5E               ld e,(hl)
1025+ A1FE 23               inc hl
1026+ A1FF 56               ld d,(hl)
1027+ A200
1028+ A200 23               inc hl
1029+ A201
1030+ A201 4E               ld c,(hl)
1031+ A202 23               inc hl
1032+ A203 46               ld b,(hl)
1033+ A204
1034+ A204 C5               push bc
1035+ A205 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1036+ A206
1037+ A206              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1038+ A206
1039+ A206 CD DD 99         call PreviousScan
1040+ A209 CD DD 99         call PreviousScan
1041+ A20C
1042+ A20C              Detecta_impacto_
1043+ A20C
1044+ A20C 1A               ld a,(de)
1045+ A20D A6               and (hl)
1046+ A20E C0               ret nz
1047+ A20F
1048+ A20F 13               inc de
1049+ A210 23               inc hl
1050+ A211
1051+ A211 1A               ld a,(de)
1052+ A212 A6               and (hl)
1053+ A213 C9               ret
1054+ A214
1055+ A214              ; -------------------------------------------------------------------------------------------------------------
1056+ A214              ;
1057+ A214              ;   8/8/24
1058+ A214              ;
1059+ A214              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1060+ A214              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1061+ A214              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1062+ A214              ;
1063+ A214              ;   MODIFICA: HL,DE,BC y A.
1064+ A214              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1065+ A214              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1066+ A214
1067+ A214              Colision_Entidad_Amadeus
1068+ A214
1069+ A214              ; Posible contacto de entidad con Amadeus. ?????
1070+ A214
1071+ A214              ; Exclusiones:
1072+ A214
1073+ A214 3A 5D 8C         ld a,(Shield)
1074+ A217 A7               and a
1075+ A218 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1076+ A219
1077+ A219 21 33 8C         ld hl,Ctrl_3
1078+ A21C CB 76            bit 6,(hl)
1079+ A21E C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1080+ A21F
1081+ A21F 21 3A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1082+ A222 CB 56            bit 2,(hl)
1083+ A224 C0               ret nz
1084+ A225
1085+ A225 3A C1 8B     	ld a,(Coordenada_y)
1086+ A228 FE 14        	cp $14
1087+ A22A D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1088+ A22B
1089+ A22B 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1090+ A22E A7               and a
1091+ A22F C0               ret nz
1092+ A230
1093+ A230              Genera_coordenadas_X
1094+ A230
1095+ A230              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1096+ A230              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1097+ A230
1098+ A230              ;   Limpiamos almacenes.
1099+ A230
1100+ A230              ;    call Limpia_Coordenadas_X
1101+ A230
1102+ A230              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1103+ A230
1104+ A230 21 3F 8C         ld hl,Coordenadas_X_Entidad
1105+ A233 3A C0 8B         ld a,(Coordenada_X)
1106+ A236 CD 58 A2         call Guarda_coordenadas_X
1107+ A239
1108+ A239              ;   Almacenamos las coordenadas X de Amadeus.
1109+ A239
1110+ A239 3A 75 89         ld a,(CX_Amadeus)
1111+ A23C CD 58 A2         call Guarda_coordenadas_X
1112+ A23F CD 6C A2         call Compara_coordenadas_X
1113+ A242 C0               ret nz
1114+ A243
1115+ A243 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1116+ A245 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1117+ A248
1118+ A248 2A FF 8B         ld hl,(Puntero_store_caja)
1119+ A24B 2C               inc l
1120+ A24C 2C               inc l
1121+ A24D 2C               inc l
1122+ A24E 2C               inc l
1123+ A24F 22 3B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1124+ A252
1125+ A252 21 3A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1126+ A255 CB D6            set 2,(hl)
1127+ A257
1128+ A257 C9               ret
1129+ A258
1130+ A258               ; ----- ----- ----- ----- -----
1131+ A258
1132+ A258 77           Guarda_coordenadas_X ld (hl),a
1133+ A259 3C               inc a
1134+ A25A 2C               inc l
1135+ A25B 77               ld (hl),a
1136+ A25C 3C               inc a
1137+ A25D 2C               inc l
1138+ A25E 77               ld (hl),a
1139+ A25F 2C               inc l
1140+ A260 C9               ret
1141+ A261
1142+ A261 AF           Limpia_Coordenadas_X xor a
1143+ A262 06 06            ld b,6
1144+ A264 21 42 8C         ld hl,Coordenadas_X_Amadeus
1145+ A267 77           1 ld (hl),a
1146+ A268 23               inc hl
1147+ A269 10 FC            djnz 1B
1148+ A26B C9               ret
1149+ A26C
1150+ A26C              ; ----- ----- ----- ----- -----
1151+ A26C
1152+ A26C              Compara_coordenadas_X
1153+ A26C
1154+ A26C DD 21 3F 8C      ld ix,Coordenadas_X_Entidad
1155+ A270 DD 7E 00         ld a,(ix+0)
1156+ A273 CD 81 A2         call Comparando
1157+ A276 C8               ret z
1158+ A277
1159+ A277 3C               inc a
1160+ A278 CD 90 A2         call Comparando_1
1161+ A27B C8               ret z
1162+ A27C
1163+ A27C 3C               inc a
1164+ A27D CD 90 A2         call Comparando_1
1165+ A280 C9               ret
1166+ A281
1167+ A281              ; ----- ----- ----- ----- -----
1168+ A281              ;
1169+ A281              ;   4/12/23
1170+ A281              ;
1171+ A281              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1172+ A281
1173+ A281              Comparando
1174+ A281
1175+ A281 DD 2C            inc ixl
1176+ A283 DD 2C            inc ixl
1177+ A285 DD 2C            inc ixl
1178+ A287
1179+ A287 DD 46 00         ld b,(ix+0)
1180+ A28A DD 4E 01         ld c,(ix+1)
1181+ A28D DD 56 02         ld d,(ix+2)
1182+ A290
1183+ A290 B8           Comparando_1 cp b
1184+ A291 C8               ret z
1185+ A292 B9               cp c
1186+ A293 C8               ret z
1187+ A294 BA               cp d
1188+ A295 C9               ret
1189+ A296
1190+ A296              ; -----------------------------------------------------------------------
1191+ A296              ;
1192+ A296              ;   04/7/24
1193+ A296              ;
1194+ A296
1195+ A296              Detecta_colision_nave_entidad
1196+ A296
1197+ A296              ; Exclusiones:
1198+ A296
1199+ A296              ; Salimos de la rutina si no hay advertencia de posible colisión.
1200+ A296
1201+ A296 21 3A 8C     	ld hl,Impacto2
1202+ A299 CB 56        	bit 2,(hl)
1203+ A29B C8           	ret z
1204+ A29C
1205+ A29C              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1206+ A29C
1207+ A29C 2A 7B 89         ld hl,(Pamm_Amadeus)
1208+ A29F CD B5 90         call Extrae_address
1209+ A2A2 54               ld d,h
1210+ A2A3 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1211+ A2A4
1212+ A2A4 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1213+ A2A7 06 10            ld b,16                                        ; Contador de scanlines en B.
1214+ A2A9 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1215+ A2AC
1216+ A2AC C5           1 push bc
1217+ A2AD 06 03            ld b,3
1218+ A2AF E5               push hl
1219+ A2B0
1220+ A2B0              ; .db
1221+ A2B0
1222+ A2B0 1A           3 ld a,(de)
1223+ A2B1 A7               and a
1224+ A2B2 20 03            jr nz,4F
1225+ A2B4
1226+ A2B4 2C               inc l
1227+ A2B5 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1228+ A2B7
1229+ A2B7 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1230+ A2B9 28 04            jr z,2F
1231+ A2BB
1232+ A2BB              ; Impacto.
1233+ A2BB FD 2D            dec iyl
1234+ A2BD 28 22            jr z,5F
1235+ A2BF
1236+ A2BF 1C           2 inc e
1237+ A2C0 10 EE            djnz 3B
1238+ A2C2
1239+ A2C2 E1               pop hl
1240+ A2C3
1241+ A2C3              ; Hay salto de línea en el puntero de impresión ???
1242+ A2C3
1243+ A2C3 7C               ld a,h
1244+ A2C4 D6 57            sub $57
1245+ A2C6 20 0A            jr nz,6F
1246+ A2C8
1247+ A2C8              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1248+ A2C8
1249+ A2C8 2A 79 89         ld hl,(p.imp.amadeus)
1250+ A2CB 3E 20            ld a,$20
1251+ A2CD A7               and a
1252+ A2CE 85               add l
1253+ A2CF 6F               ld l,a
1254+ A2D0 18 01            jr 7F
1255+ A2D2
1256+ A2D2 24           6 inc h
1257+ A2D3
1258+ A2D3 C1           7 pop bc
1259+ A2D4 10 D6            djnz 1B
1260+ A2D6
1261+ A2D6              ;   Fin de la comparativa.
1262+ A2D6
1263+ A2D6              ;   NO HAY COLISIÓN !!!!!.
1264+ A2D6              ;
1265+ A2D6              ;   .db (Impacto) de Amadeus a "0".
1266+ A2D6              ;   RES el bit2 de (Impacto2).
1267+ A2D6              ;
1268+ A2D6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1269+ A2D6              ;   Lo colocamos a "0".
1270+ A2D6
1271+ A2D6 21 3A 8C         ld hl,Impacto2
1272+ A2D9 CB 96            res 2,(hl)
1273+ A2DB 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)
1274+ A2DE 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1275+ A2E0 C9               ret
1276+ A2E1
1277+ A2E1              ;   COLISIÓN !!!!!.
1278+ A2E1              ;
1279+ A2E1              ;   .db (Impacto) de Amadeus a "1".
1280+ A2E1              ;   SET el bit3 de (Impacto2).
1281+ A2E1              ;
1282+ A2E1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1283+ A2E1
1284+ A2E1 E1           5 pop hl
1285+ A2E2 C1               pop bc
1286+ A2E3
1287+ A2E3 21 78 89         ld hl,Impacto_Amadeus
1288+ A2E6 36 01            ld (hl),1
1289+ A2E8 21 3A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1290+ A2EB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1291+ A2ED
1292+ A2ED 11 C0 87         ld de,Indice_Explosion_entidades
1293+ A2F0 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1294+ A2F3
1295+ A2F3 23               inc hl
1296+ A2F4 23               inc hl
1297+ A2F5 23               inc hl
1298+ A2F6
1299+ A2F6 73               ld (hl),e
1300+ A2F7 23               inc hl
1301+ A2F8 72               ld (hl),d
1302+ A2F9
1303+ A2F9              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1304+ A2F9
1305+ A2F9 11 60 88         ld de,Indice_Explosion_Amadeus
1306+ A2FC 21 7B 89         ld hl,Pamm_Amadeus
1307+ A2FF
1308+ A2FF 73               ld (hl),e
1309+ A300 23               inc hl
1310+ A301 72               ld (hl),d
1311+ A302
1312+ A302 C9               ret
1313+ A303
1314+ A303
1315+ A303
# file closed: Disparo.asm
2055  A303
2056  A303              	SAVESNA "Pruebas.sna", START
2057  A303
2058  A303
2059  A303
2060  A303
# file closed: Banco_de_pruebas.asm
