# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B1 8A     	call Frame
  15  A104
  16  A104 3A D8 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8574
  97+ 8574 CA 85        	defw Caja_1
  98+ 8576 08 86        	defw Caja_2
  99+ 8578 46 86        	defw Caja_3
 100+ 857A 84 86        	defw Caja_4
 101+ 857C C2 86        	defw Caja_5
 102+ 857E 00 87        	defw Caja_6
 103+ 8580 3E 87        	defw Caja_7
 104+ 8582 7C 87        	defw Caja_8
 105+ 8584 BA 87        	defw Caja_9
 106+ 8586 F8 87        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85BD
 145+ 85BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85C4
 148+ 85C4 00           	db 0 											; (Columnas).
 149+ 85C5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85C7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85CA
 152+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85CA
 154+ 85CA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85CC 00 00        	defw 0											; (Posicion_actual).
 156+ 85CE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85D0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85D3
 159+ 85D3 00           	db %00000000 									; (Attr).
 160+ 85D4
 161+ 85D4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85D6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85D8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85DA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85DC
 166+ 85DC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85DE 00           	db 0											; (Cuad_objeto).
 168+ 85DF
 169+ 85DF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85E3
 171+ 85E3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85E4
 173+ 85E4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85E6 00 00        	defw 0											;	" " " " " " "
 175+ 85E8 00 00        	defw 0											;	" " " " " " "
 176+ 85EA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85EE
 178+ 85EE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85F0 00 00        	defw 0											;	" " " " " " "
 180+ 85F2 00 00        	defw 0											;	" " " " " " "
 181+ 85F4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85F8
 183+ 85F8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 184+ 85FA 00           	db 0											; (Autoriza_movimiento).
 185+ 85FB
 186+ 85FB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 187+ 85FF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 188+ 8602
 189+ 8602 00           	db 0 											; (Columnas).
 190+ 8603 00 00        	defw 0											; (Limite_horizontal).
 191+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 192+ 8608
 193+ 8608              ; ---------- ---------- ---------- ---------- ----------
 194+ 8608
 195+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 196+ 860A 00 00        	defw 0											; (Posicion_actual).
 197+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 198+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 199+ 8611
 200+ 8611 00           	db %00000000 									; (Attr).
 201+ 8612
 202+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 203+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 204+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 205+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Posicion_inicio).
 208+ 861C 00           	db 0											; (Cuad_objeto).
 209+ 861D
 210+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 211+ 8621
 212+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 213+ 8622
 214+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 215+ 8624 00 00        	defw 0											;	" " " " " " "
 216+ 8626 00 00        	defw 0											;	" " " " " " "
 217+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 862C
 219+ 862C 00 00        	db 0,0											; Variables_de_pintado
 220+ 862E 00 00        	defw 0											;	" " " " " " "
 221+ 8630 00 00        	defw 0											;	" " " " " " "
 222+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8636
 224+ 8636 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 225+ 8638 00           	db 0											; (Autoriza_movimiento).
 226+ 8639
 227+ 8639 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 228+ 863D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 229+ 8640
 230+ 8640 00           	db 0 											; (Columnas).
 231+ 8641 00 00        	defw 0											; (Limite_horizontal).
 232+ 8643 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 233+ 8646
 234+ 8646              ; ---------- ---------- ---------- ---------- ----------
 235+ 8646
 236+ 8646 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 237+ 8648 00 00        	defw 0											; (Posicion_actual).
 238+ 864A 00 00        	defw 0 											; (Puntero_objeto).
 239+ 864C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 240+ 864F
 241+ 864F 00           	db %00000000 									; (Attr).
 242+ 8650
 243+ 8650 00 00        	defw 0											; (Indice_Sprite_der).
 244+ 8652 00 00        	defw 0											; (Indice_Sprite_izq).
 245+ 8654 00 00        	defw 0											; (Puntero_DESPLZ_der).
 246+ 8656 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 247+ 8658
 248+ 8658 00 00        	defw 0											; (Posicion_inicio).
 249+ 865A 00           	db 0											; (Cuad_objeto).
 250+ 865B
 251+ 865B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 252+ 865F
 253+ 865F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 254+ 8660
 255+ 8660 00 00        	db 0,0										    ; Variables_de_borrado
 256+ 8662 00 00        	defw 0											;	" " " " " " "
 257+ 8664 00 00        	defw 0											;	" " " " " " "
 258+ 8666 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 866A
 260+ 866A 00 00        	db 0,0											; Variables_de_pintado
 261+ 866C 00 00        	defw 0											;	" " " " " " "
 262+ 866E 00 00        	defw 0											;	" " " " " " "
 263+ 8670 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 8674
 265+ 8674 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 266+ 8676 00           	db 0											; (Autoriza_movimiento).
 267+ 8677
 268+ 8677 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 269+ 867B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 270+ 867E
 271+ 867E 00           	db 0 											; (Columnas).
 272+ 867F 00 00        	defw 0											; (Limite_horizontal).
 273+ 8681 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 274+ 8684
 275+ 8684              ; ---------- ---------- ---------- ---------- ----------
 276+ 8684
 277+ 8684 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 278+ 8686 00 00        	defw 0											; (Posicion_actual).
 279+ 8688 00 00        	defw 0 											; (Puntero_objeto).
 280+ 868A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 281+ 868D
 282+ 868D 00           	db %00000000 									; (Attr).
 283+ 868E
 284+ 868E 00 00        	defw 0											; (Indice_Sprite_der).
 285+ 8690 00 00        	defw 0											; (Indice_Sprite_izq).
 286+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_der).
 287+ 8694 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 288+ 8696
 289+ 8696 00 00        	defw 0											; (Posicion_inicio).
 290+ 8698 00           	db 0											; (Cuad_objeto).
 291+ 8699
 292+ 8699 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 293+ 869D
 294+ 869D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 295+ 869E
 296+ 869E 00 00        	db 0,0										    ; Variables_de_borrado
 297+ 86A0 00 00        	defw 0											;	" " " " " " "
 298+ 86A2 00 00        	defw 0											;	" " " " " " "
 299+ 86A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A8
 301+ 86A8 00 00        	db 0,0											; Variables_de_pintado
 302+ 86AA 00 00        	defw 0											;	" " " " " " "
 303+ 86AC 00 00        	defw 0											;	" " " " " " "
 304+ 86AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 305+ 86B2
 306+ 86B2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 307+ 86B4 00           	db 0											; (Autoriza_movimiento).
 308+ 86B5
 309+ 86B5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 310+ 86B9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 311+ 86BC
 312+ 86BC 00           	db 0 											; (Columnas).
 313+ 86BD 00 00        	defw 0											; (Limite_horizontal).
 314+ 86BF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 315+ 86C2
 316+ 86C2              ; ---------- ---------- ---------- ---------- ----------
 317+ 86C2
 318+ 86C2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 319+ 86C4 00 00        	defw 0											; (Posicion_actual).
 320+ 86C6 00 00        	defw 0 											; (Puntero_objeto).
 321+ 86C8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 322+ 86CB
 323+ 86CB 00           	db %00000000 									; (Attr).
 324+ 86CC
 325+ 86CC 00 00        	defw 0											; (Indice_Sprite_der).
 326+ 86CE 00 00        	defw 0											; (Indice_Sprite_izq).
 327+ 86D0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 328+ 86D2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 329+ 86D4
 330+ 86D4 00 00        	defw 0											; (Posicion_inicio).
 331+ 86D6 00           	db 0											; (Cuad_objeto).
 332+ 86D7
 333+ 86D7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 334+ 86DB
 335+ 86DB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 336+ 86DC
 337+ 86DC 00 00        	db 0,0										    ; Variables_de_borrado
 338+ 86DE 00 00        	defw 0											;	" " " " " " "
 339+ 86E0 00 00        	defw 0											;	" " " " " " "
 340+ 86E2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E6
 342+ 86E6 00 00        	db 0,0											; Variables_de_pintado
 343+ 86E8 00 00        	defw 0											;	" " " " " " "
 344+ 86EA 00 00        	defw 0											;	" " " " " " "
 345+ 86EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 346+ 86F0
 347+ 86F0 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 348+ 86F2 00           	db 0											; (Autoriza_movimiento).
 349+ 86F3
 350+ 86F3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 351+ 86F7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 352+ 86FA
 353+ 86FA 00           	db 0 											; (Columnas).
 354+ 86FB 00 00        	defw 0											; (Limite_horizontal).
 355+ 86FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 356+ 8700
 357+ 8700              ; ---------- ---------- ---------- ---------- ----------
 358+ 8700
 359+ 8700 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 360+ 8702 00 00        	defw 0											; (Posicion_actual).
 361+ 8704 00 00        	defw 0 											; (Puntero_objeto).
 362+ 8706 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 363+ 8709
 364+ 8709 00           	db %00000000 									; (Attr).
 365+ 870A
 366+ 870A 00 00        	defw 0											; (Indice_Sprite_der).
 367+ 870C 00 00        	defw 0											; (Indice_Sprite_izq).
 368+ 870E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 369+ 8710 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 370+ 8712
 371+ 8712 00 00        	defw 0											; (Posicion_inicio).
 372+ 8714 00           	db 0											; (Cuad_objeto).
 373+ 8715
 374+ 8715 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 375+ 8719
 376+ 8719 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 377+ 871A
 378+ 871A 00 00        	db 0,0										    ; Variables_de_borrado
 379+ 871C 00 00        	defw 0											;	" " " " " " "
 380+ 871E 00 00        	defw 0											;	" " " " " " "
 381+ 8720 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8724
 383+ 8724 00 00        	db 0,0											; Variables_de_pintado
 384+ 8726 00 00        	defw 0											;	" " " " " " "
 385+ 8728 00 00        	defw 0											;	" " " " " " "
 386+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 387+ 872E
 388+ 872E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 389+ 8730 00           	db 0											; (Autoriza_movimiento).
 390+ 8731
 391+ 8731 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 392+ 8735 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 393+ 8738
 394+ 8738 00           	db 0 											; (Columnas).
 395+ 8739 00 00        	defw 0											; (Limite_horizontal).
 396+ 873B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 397+ 873E
 398+ 873E              ; ---------- ---------- ---------- ---------- ----------
 399+ 873E
 400+ 873E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 401+ 8740 00 00        	defw 0											; (Posicion_actual).
 402+ 8742 00 00        	defw 0 											; (Puntero_objeto).
 403+ 8744 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 404+ 8747
 405+ 8747 00           	db %00000000 									; (Attr).
 406+ 8748
 407+ 8748 00 00        	defw 0											; (Indice_Sprite_der).
 408+ 874A 00 00        	defw 0											; (Indice_Sprite_izq).
 409+ 874C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 410+ 874E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 411+ 8750
 412+ 8750 00 00        	defw 0											; (Posicion_inicio).
 413+ 8752 00           	db 0											; (Cuad_objeto).
 414+ 8753
 415+ 8753 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 416+ 8757
 417+ 8757 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 418+ 8758
 419+ 8758 00 00        	db 0,0										    ; Variables_de_borrado
 420+ 875A 00 00        	defw 0											;	" " " " " " "
 421+ 875C 00 00        	defw 0											;	" " " " " " "
 422+ 875E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8762
 424+ 8762 00 00        	db 0,0											; Variables_de_pintado
 425+ 8764 00 00        	defw 0											;	" " " " " " "
 426+ 8766 00 00        	defw 0											;	" " " " " " "
 427+ 8768 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 428+ 876C
 429+ 876C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 430+ 876E 00           	db 0											; (Autoriza_movimiento).
 431+ 876F
 432+ 876F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 433+ 8773 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 434+ 8776
 435+ 8776 00           	db 0 											; (Columnas).
 436+ 8777 00 00        	defw 0											; (Limite_horizontal).
 437+ 8779 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 438+ 877C
 439+ 877C              ; ---------- ---------- ---------- ---------- ----------
 440+ 877C
 441+ 877C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 442+ 877E 00 00        	defw 0											; (Posicion_actual).
 443+ 8780 00 00        	defw 0 											; (Puntero_objeto).
 444+ 8782 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 445+ 8785
 446+ 8785 00           	db %00000000 									; (Attr).
 447+ 8786
 448+ 8786 00 00        	defw 0											; (Indice_Sprite_der).
 449+ 8788 00 00        	defw 0											; (Indice_Sprite_izq).
 450+ 878A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 451+ 878C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 452+ 878E
 453+ 878E 00 00        	defw 0											; (Posicion_inicio).
 454+ 8790 00           	db 0											; (Cuad_objeto).
 455+ 8791
 456+ 8791 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 457+ 8795
 458+ 8795 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 459+ 8796
 460+ 8796 00 00        	db 0,0										    ; Variables_de_borrado
 461+ 8798 00 00        	defw 0											;	" " " " " " "
 462+ 879A 00 00        	defw 0											;	" " " " " " "
 463+ 879C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 464+ 87A0
 465+ 87A0 00 00        	db 0,0											; Variables_de_pintado
 466+ 87A2 00 00        	defw 0											;	" " " " " " "
 467+ 87A4 00 00        	defw 0											;	" " " " " " "
 468+ 87A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 469+ 87AA
 470+ 87AA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 471+ 87AC 00           	db 0											; (Autoriza_movimiento).
 472+ 87AD
 473+ 87AD 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 474+ 87B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 475+ 87B4
 476+ 87B4 00           	db 0 											; (Columnas).
 477+ 87B5 00 00        	defw 0											; (Limite_horizontal).
 478+ 87B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 479+ 87BA
 480+ 87BA              ; ---------- ---------- ---------- ---------- ----------
 481+ 87BA
 482+ 87BA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 483+ 87BC 00 00        	defw 0											; (Posicion_actual).
 484+ 87BE 00 00        	defw 0 											; (Puntero_objeto).
 485+ 87C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 486+ 87C3
 487+ 87C3 00           	db %00000000 									; (Attr).
 488+ 87C4
 489+ 87C4 00 00        	defw 0											; (Indice_Sprite_der).
 490+ 87C6 00 00        	defw 0											; (Indice_Sprite_izq).
 491+ 87C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 492+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 493+ 87CC
 494+ 87CC 00 00        	defw 0											; (Posicion_inicio).
 495+ 87CE 00           	db 0											; (Cuad_objeto).
 496+ 87CF
 497+ 87CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 498+ 87D3
 499+ 87D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 500+ 87D4
 501+ 87D4 00 00        	db 0,0										    ; Variables_de_borrado
 502+ 87D6 00 00        	defw 0											;	" " " " " " "
 503+ 87D8 00 00        	defw 0											;	" " " " " " "
 504+ 87DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 505+ 87DE
 506+ 87DE 00 00        	db 0,0											; Variables_de_pintado
 507+ 87E0 00 00        	defw 0											;	" " " " " " "
 508+ 87E2 00 00        	defw 0											;	" " " " " " "
 509+ 87E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 510+ 87E8
 511+ 87E8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 512+ 87EA 00           	db 0											; (Autoriza_movimiento).
 513+ 87EB
 514+ 87EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 515+ 87EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 516+ 87F2
 517+ 87F2 00           	db 0 											; (Columnas).
 518+ 87F3 00 00        	defw 0											; (Limite_horizontal).
 519+ 87F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 520+ 87F8
 521+ 87F8              ; ---------- ---------- ---------- ---------- ----------
 522+ 87F8
 523+ 87F8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 524+ 87FA 00 00        	defw 0											; (Posicion_actual).
 525+ 87FC 00 00        	defw 0 											; (Puntero_objeto).
 526+ 87FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 527+ 8801
 528+ 8801 00           	db %00000000 									; (Attr).
 529+ 8802
 530+ 8802 00 00        	defw 0											; (Indice_Sprite_der).
 531+ 8804 00 00        	defw 0											; (Indice_Sprite_izq).
 532+ 8806 00 00        	defw 0											; (Puntero_DESPLZ_der).
 533+ 8808 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 534+ 880A
 535+ 880A 00 00        	defw 0											; (Posicion_inicio).
 536+ 880C 00           	db 0											; (Cuad_objeto).
 537+ 880D
 538+ 880D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 539+ 8811
 540+ 8811 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 541+ 8812
 542+ 8812 00 00        	db 0,0										    ; Variables_de_borrado
 543+ 8814 00 00        	defw 0											;	" " " " " " "
 544+ 8816 00 00        	defw 0											;	" " " " " " "
 545+ 8818 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 546+ 881C
 547+ 881C 00 00        	db 0,0											; Variables_de_pintado
 548+ 881E 00 00        	defw 0											;	" " " " " " "
 549+ 8820 00 00        	defw 0											;	" " " " " " "
 550+ 8822 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 551+ 8826
 552+ 8826 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 553+ 8828 00           	db 0											; (Autoriza_movimiento).
 554+ 8829
 555+ 8829 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 556+ 882D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 557+ 8830
 558+ 8830 00           	db 0 											; (Columnas).
 559+ 8831 00 00        	defw 0											; (Limite_horizontal).
 560+ 8833 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 561+ 8836
 562+ 8836              ; -------------------------------------------------------------------------------------
 563+ 8836              ;
 564+ 8836              ;	20/05/23
 565+ 8836              ;
 566+ 8836              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 567+ 8836              ;
 568+ 8836              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 569+ 8836              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 570+ 8836              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 571+ 8836              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 572+ 8836
 573+ 8836              Indice_de_entidades
 574+ 8836
 575+ 8836 40 88        	defw Entidad_1
 576+ 8838 50 88        	defw Entidad_2
 577+ 883A 60 88        	defw Entidad_3
 578+ 883C 70 88        	defw Entidad_4
 579+ 883E 80 88        	defw Entidad_5
 580+ 8840
 581+ 8840              ;	BADSAT, (Satélite malvado).
 582+ 8840
 583+ 8840 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 584+ 8842 04           	db %00000100									; (Attr).
 585+ 8843 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 586+ 8845 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 587+ 8847 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 588+ 8849 01           	db 1											; (Cuad_objeto).
 589+ 884A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 590+ 884E E3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 591+ 8850
 592+ 8850 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 593+ 8852 02           	db %00000010									; (Attr).
 594+ 8853 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 595+ 8855 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 596+ 8857 40 50        	defw $5040                                      ; (Posicion_inicio).
 597+ 8859 01           	db 1											; (Cuad_objeto).
 598+ 885A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 599+ 885E E3 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 600+ 8860
 601+ 8860 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 602+ 8862 04           	db %00000100									; (Attr).
 603+ 8863 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 604+ 8865 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 605+ 8867 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 606+ 8869 01           	db 1											; (Cuad_objeto).
 607+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 608+ 886E E3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 609+ 8870
 610+ 8870 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 611+ 8872 01           	db %00000001									; (Attr).
 612+ 8873 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 613+ 8875 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 614+ 8877 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 615+ 8879 01           	db 1											; (Cuad_objeto).
 616+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 617+ 887E E3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 618+ 8880
 619+ 8880 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 620+ 8882 01           	db %00000001									; (Attr).
 621+ 8883 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 622+ 8885 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 623+ 8887 07 40        	defw $4007                                      ; (Posicion_inicio).
 624+ 8889 01           	db 1											; (Cuad_objeto).
 625+ 888A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 626+ 888E E3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 627+ 8890
# file closed: Cajas_y_disparos.asm
  24  8890              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8890              ; 13/05/23
   2+ 8890
   3+ 8890              Indice_de_niveles
   4+ 8890
   5+ 8890 9E 88        	defw Nivel_1
   6+ 8892 A0 88        	defw Nivel_2
   7+ 8894 AD 88        	defw Nivel_3
   8+ 8896 BD 88        	defw Nivel_4
   9+ 8898 CF 88        	defw Nivel_5
  10+ 889A
  11+ 889A              ;	...
  12+ 889A              ;	...
  13+ 889A              ;	+ Niveles ...
  14+ 889A
  15+ 889A 00 00        	defw 0
  16+ 889C 00 00        	defw 0
  17+ 889E
  18+ 889E 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 889F 01           	db 1
  20+ 88A0 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88A1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88A5 01 02
  22+ 88A7 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88AB 01 02
  23+ 88AD 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88AE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88B2 01
  25+ 88B3 03 01 01 01  	db 3,1,1,1,1
  25+ 88B7 01
  26+ 88B8 03 01 01 01  	db 3,1,1,1,1
  26+ 88BC 01
  27+ 88BD 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88BE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88C2 01
  29+ 88C3 04 01 01 01  	db 4,1,1,1,1
  29+ 88C7 01
  30+ 88C8 04 01 01 01  	db 4,1,1,1,1
  30+ 88CC 01
  31+ 88CD 02 03        	db 2,3
  32+ 88CF 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88D0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88D4 01
  34+ 88D5 05 01 01 01  	db 5,1,1,1,1
  34+ 88D9 01
  35+ 88DA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88DE 01
  36+ 88DF 05 01 01 01  	db 5,1,1,1,1
  36+ 88E3 01
  37+ 88E4
  38+ 88E4              ;---------------------------------------------------------------------------------------------------------------
  39+ 88E4              ;
  40+ 88E4              ;   21/5/23
  41+ 88E4              ;
  42+ 88E4              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88E4              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88E4              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88E4              ;	_en la caja DRAW correspondiente.
  46+ 88E4              ;
  47+ 88E4              ;	MODIFICA: HL,DE y A.
  48+ 88E4              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88E4
  50+ 88E4              Inicializa_Punteros_de_nivel
  51+ 88E4
  52+ 88E4 21 90 88     	ld hl,Indice_de_niveles
  53+ 88E7 22 0C 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 88EA CD 04 8D     	call Extrae_address
  55+ 88ED 7E           	ld a,(hl)
  56+ 88EE 32 E1 89     	ld (Numero_de_entidades),a
  57+ 88F1 23           	inc hl
  58+ 88F2 22 0E 8A     	ld (Datos_de_nivel),hl
  59+ 88F5 C9           	ret
  60+ 88F6
  61+ 88F6              ;---------------------------------------------------------------------------------------------------------------
  62+ 88F6              ;
  63+ 88F6              ;   13/5/23
  64+ 88F6              ;
  65+ 88F6              ;	Destruye A,BC,HL,DE
  66+ 88F6
  67+ 88F6              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 88F6              ;	_del juego.
  69+ 88F6
  70+ 88F6              Prepara_cajas
  71+ 88F6
  72+ 88F6              ; Preparamos los punteros de las cajas.
  73+ 88F6
  74+ 88F6 21 74 85     	ld hl,Indice_de_cajas
  75+ 88F9 CD 04 8D     	call Extrae_address
  76+ 88FC CD 39 89     	call Avanza_caja
  77+ 88FF
  78+ 88FF CD 7D 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8902
  80+ 8902 2A 0E 8A     	ld hl,(Datos_de_nivel)
  81+ 8905
  82+ 8905              ; HL está en los datos del nivel correspondiente.
  83+ 8905              ; B actuará como contador de cajas.
  84+ 8905
  85+ 8905 C5           1 push bc
  86+ 8906
  87+ 8906 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8907 CD 2A 89     	call PreparaBC
  89+ 890A
  90+ 890A 21 36 88     	ld hl,Indice_de_entidades
  91+ 890D CD 32 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8910 22 E7 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8913
  94+ 8913 CD 43 89     	call Datos_de_entidad_a_caja
  95+ 8916
  96+ 8916 2A DF 89     	ld hl,(Indice_restore_caja)
  97+ 8919 CD 04 8D     	call Extrae_address
  98+ 891C CD 39 89     	call Avanza_caja
  99+ 891F
 100+ 891F 2A 0E 8A     	ld hl,(Datos_de_nivel)
 101+ 8922 23           	inc hl
 102+ 8923 22 0E 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8926
 104+ 8926 C1           	pop bc
 105+ 8927 10 DC        	djnz 1B
 106+ 8929 C9           	ret
 107+ 892A
 108+ 892A CB 27        PreparaBC sla a
 109+ 892C D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 892E 4F           	ld c,a
 111+ 892F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8931 C9           	ret
 113+ 8932
 114+ 8932 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8933 ED 4A        	adc hl,bc
 116+ 8935 CD 04 8D     	call Extrae_address
 117+ 8938 C9           	ret
 118+ 8939
 119+ 8939 22 DB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 893C 13           	inc de
 121+ 893D 13           	inc de
 122+ 893E EB           	ex de,hl
 123+ 893F 22 DF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8942 C9           	ret
 125+ 8943
 126+ 8943              Datos_de_entidad_a_caja
 127+ 8943
 128+ 8943              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8943
 130+ 8943
 131+ 8943 ED 5B DB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8947
 133+ 8947 01 02 00     	ld bc,2
 134+ 894A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 894C
 136+ 894C 01 07 00     	ld bc,7
 137+ 894F CD 77 89     	call Situa_DE
 138+ 8952
 139+ 8952 01 05 00     	ld bc,5
 140+ 8955 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8957
 142+ 8957 01 04 00     	ld bc,4
 143+ 895A CD 77 89     	call Situa_DE
 144+ 895D
 145+ 895D 01 07 00     	ld bc,7
 146+ 8960 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8962
 148+ 8962 01 18 00     	ld bc,24
 149+ 8965 CD 77 89     	call Situa_DE
 150+ 8968
 151+ 8968 01 02 00     	ld bc,2
 152+ 896B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 896D
 154+ 896D 01 0A 00     	ld bc,10
 155+ 8970 CD 77 89     	call Situa_DE
 156+ 8973
 157+ 8973 3E 03        	ld a,3
 158+ 8975 12           	ld (de),a 									; Vuelco (Frames_explosion).
 159+ 8976
 160+ 8976 C9           	ret
 161+ 8977
 162+ 8977 EB           Situa_DE ex de,hl
 163+ 8978 A7           	and a
 164+ 8979 ED 4A        	adc hl,bc
 165+ 897B EB           	ex de,hl
 166+ 897C C9           	ret
 167+ 897D
 168+ 897D              ;---------------------------------------------------------------------------------------------------------------
 169+ 897D              ;
 170+ 897D              ;	21/5/23
 171+ 897D              ;
 172+ 897D              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 173+ 897D              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 174+ 897D              ;
 175+ 897D              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 176+ 897D              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 177+ 897D              ;	_ total de entidades que contiene (Numero_de_entidades).
 178+ 897D              ;
 179+ 897D              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 180+ 897D              ;	MODIFICA: A y B.
 181+ 897D              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 182+ 897D
 183+ 897D              Admin_num_entidades
 184+ 897D
 185+ 897D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 186+ 897D
 187+ 897D 3A E1 89     	ld a,(Numero_de_entidades)
 188+ 8980 A7           	and a
 189+ 8981              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 190+ 8981              ;	jr z,$
 191+ 8981              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 8981
 193+ 8981 20 03        	jr nz,3F
 194+ 8983
 195+ 8983              ;! RESET para pruebas. Omitir esta línea en modo normal.
 196+ 8983
 197+ 8983 CD E4 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 198+ 8986
 199+ 8986
 200+ 8986 3A E1 89     3 ld a,(Numero_de_entidades)
 201+ 8989 FE 0A        	cp 10
 202+ 898B 38 08        	jr c,1F
 203+ 898D
 204+ 898D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 205+ 898D              ; Actualizamos variables.
 206+ 898D
 207+ 898D 3E 0A        	ld a,10
 208+ 898F 32 E2 89     	ld (Numero_parcial_de_entidades),a
 209+ 8992 47           	ld b,a
 210+ 8993 18 04        	jr 2F
 211+ 8995
 212+ 8995              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 213+ 8995              ; (Numero_de_entidades)="0".
 214+ 8995
 215+ 8995 32 E2 89     1 ld (Numero_parcial_de_entidades),a
 216+ 8998 47           	ld b,a
 217+ 8999 C9           2 ret
# file closed: Niveles.asm
  25  899A
  26  899A              ; ******************************************************************************************************************************************************************************************
  27  899A              ; Constantes.
  28  899A              ; ******************************************************************************************************************************************************************************************
  29  899A              ;
  30  899A              ; 25/05/23
  31  899A              ;
  32  899A              ; Constantes generales.
  33  899A              ;
  34  899A
  35  899A              Sprite_vacio equ $f000
  36  899A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  899A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  899A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  899A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  899A
  41  899A              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  899A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  899A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  899A              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  899A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  899A              ;                               				        ; De momento situamos este almacén en $7060.
  47  899A
  48  899A              ; ******************************************************************************************************************************************************************************************
  49  899A              ; Variables.
  50  899A              ; ******************************************************************************************************************************************************************************************
  51  899A              ;
  52  899A              ; 30/05/23
  53  899A              ;
  54  899A              ; Variables de DRAW. (Motor principal).
  55  899A              ;
  56  899A              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  899A
  58  899A 00           Filas db 0												; Filas. [DRAW]
  59  899B 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  899C 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  899E 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89A0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89A1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89A2
  65  89A2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89A2
  67  89A2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89A3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89A3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89A3 00           Attr db 0												; Atributos de la entidad:
  71  89A4
  72  89A4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89A4              ;
  74  89A4              ;	COLORES: 0 ..... NEGRO
  75  89A4              ;    		 1 ..... AZUL
  76  89A4              ; 			 2 ..... ROJO
  77  89A4              ;			 3 ..... MAGENTA
  78  89A4              ; 			 4 ..... VERDE
  79  89A4              ; 			 5 ..... CIAN
  80  89A4              ;			 6 ..... AMARILLO
  81  89A4              ; 			 7 ..... BLANCO
  82  89A4
  83  89A4 00 00        Indice_Sprite_der defw 0
  84  89A6 00 00        Indice_Sprite_izq defw 0
  85  89A8 00 00        Puntero_DESPLZ_der defw 0
  86  89AA 00 00        Puntero_DESPLZ_izq defw 0
  87  89AC
  88  89AC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89AE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89AF
  91  89AF              ; Variables de objeto. (Características).
  92  89AF
  93  89AF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89B0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89B1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89B2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89B3
  98  89B3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89B4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89B4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89B4
 102  89B4 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89B6 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89B8 00 00        	defw 0
 105  89BA 00 00 00 00  	db 0,0,0,0
 106  89BE
 107  89BE 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89C0 00 00        	defw 0
 109  89C2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89C4 00 00 00 00  	db 0,0,0,0
 111  89C8
 112  89C8              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89C8
 114  89C8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89C9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89C9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89C9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89C9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89C9              ;
 120  89C9              ; 														DESCRIPCIÖN:
 121  89C9              ;
 122  89C9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89C9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89C9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89C9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89C9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89C9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89C9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89C9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89C9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89C9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89C9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89C9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89C9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89C9              ;
 136  89C9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89C9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89C9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89C9
 140  89C9 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89CA
 142  89CA              ; Movimiento.
 143  89CA
 144  89CA 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89CB 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89CD 00 00        Puntero_mov defw 0
 147  89CF 00           Contador_db_mov db 0
 148  89D0 00           Incrementa_puntero db 0
 149  89D1 00           Repetimos_db db 0
 150  89D2
 151  89D2              ; Variables de funcionamiento. [DRAW].
 152  89D2
 153  89D2 00           Columnas db 0
 154  89D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89D6
 158  89D6              ; variables de control general.
 159  89D6
 160  89D6 00           Ctrl_2 db 0
 161  89D7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89D7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89D7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89D7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89D7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89D7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89D7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89D7              ;
 169  89D7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89D7              ;														BIT 2, Este bit es activado por la rutina [Velocidad_del_movimiento] para indicar que hemos_
 171  89D7              ;															_ modificado el perfil de velocidad de la entidad. Evita que volvamos a ejecutar esta rutina_
 172  89D7              ;															_ en las sucesivas repeticiones de un mismo movimiento de la cadena.
 173  89D7
 174  89D7
 175  89D7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 176  89D8
 177  89D8              ; 62 Bytes por entidad.
 178  89D8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 179  89D8              ;					         		---------;      ;---------
 180  89D8
 181  89D8
 182  89D8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 183  89D8
 184  89D8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 185  89D9
 186  89D9              ;														DESCRIPCIÓN:
 187  89D9              ;
 188  89D9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 189  89D9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 190  89D9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 191  89D9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 192  89D9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 193  89D9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 194  89D9              ;														BIT 3, Recarga de nueva oleada.
 195  89D9              ;														BIT 4, Recarga de nueva oleada.
 196  89D9
 197  89D9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 198  89DB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 199  89DB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 200  89DB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 201  89DB
 202  89DB
 203  89DB
 204  89DB              ; Gestión de ENTIDADES y CAJAS.
 205  89DB
 206  89DB 00 00        Puntero_store_caja defw 0
 207  89DD 00 00        Puntero_restore_caja defw 0
 208  89DF 00 00        Indice_restore_caja defw 0
 209  89E1 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 210  89E2 00           Numero_parcial_de_entidades db 0
 211  89E3 00           Entidades_en_curso db 0									; ..... ..... .....
 212  89E4 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 213  89E5              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 214  89E5              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 215  89E5              ;														; _ (Numero_de_malotes)="0".
 216  89E5 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 217  89E7 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 218  89E9              ;														; _ puntero (Indice_entidades).
 219  89E9
 220  89E9
 221  89E9              ;---------------------------------------------------------------------------------------------------------------
 222  89E9              ;
 223  89E9              ; Sirven para PINTAR.
 224  89E9
 225  89E9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 226  89EB              ;														; _variable para almacenar lo posición del puntero_
 227  89EB              ; 														; _de pila, SP.
 228  89EB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 229  89ED              ;														; La utiliza la rutina [Extrae_foto_registros].
 230  89ED 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89EF              ;														; _el snapshot de los registros de la siguiente entidad.
 232  89EF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 233  89EF 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 234  89F1              ;														; _el snapshot de los registros del siguiente disparo.
 235  89F1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 236  89F1
 237  89F1              ;---------------------------------------------------------------------------------------------------------------
 238  89F1
 239  89F1              ; Gestión de Disparos.
 240  89F1
 241  89F1 00           Numero_de_disparotes db 0
 242  89F2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 243  89F4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 244  89F6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 245  89F7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 246  89F7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 247  89F7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 248  89F9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 249  89F9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 250  89F9              ;														; _produzca colisión.
 251  89F9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 252  89FB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 253  89FB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 254  89FE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 255  89FE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 256  8A01              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 257  8A01              ;---------------------------------------------------------------------------------------------------------------
 258  8A01
 259  8A01              ; Relojes y temporizaciones.
 260  8A01
 261  8A01 00           Contador_de_frames db 0
 262  8A02 04           Clock_explosion db 4
 263  8A03 1E           Clock_Entidades_en_curso db 30
 264  8A04 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 265  8A05              ;														; Repite la oleada de entidades.
 266  8A05 01           Habilita_disparo_Amadeus db 1
 267  8A06 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 268  8A07 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 269  8A08
 270  8A08 01           Habilita_disparo_entidad db 1
 271  8A09 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 272  8A0A 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 273  8A0B
 274  8A0B              ;---------------------------------------------------------------------------------------------------------------
 275  8A0B
 276  8A0B              ; Gestión de NIVELES.
 277  8A0B
 278  8A0B 00           Nivel db 0												; Nivel actual del juego.
 279  8A0C 00 00        Puntero_indice_NIVELES defw 0
 280  8A0E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 281  8A10              ; 														; _ que definen el NIVEL.
 282  8A10
 283  8A10              ;---------------------------------------------------------------------------------------------------------------
 284  8A10
 285  8A10              ; Pequeño almacén de 4 bytes para guardar los perfiles de velocidad.
 286  8A10
 287  8A10 00 00 00 00  Almacen_de_velocidades ds 4
 288  8A14
 289  8A14              ; Y todo comienza aquí .....
 290  8A14              ;
 291  8A14              ; Rutina principal *************************************************************************************************************************************************************************
 292  8A14              ;
 293  8A14              ;	14/11/22
 294  8A14
 295  8A14              START
 296  8A14
 297  8A14 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 298  8A17 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 299  8A19 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 300  8A1B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 301  8A1D F3           	DI
 302  8A1E
 303  8A1E 3E 07        	ld a,%00000111
 304  8A20 CD C0 98     	call Cls
 305  8A23
 306  8A23              ;	call Pinta_marco
 307  8A23
 308  8A23 CD E4 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 309  8A26
 310  8A26 CD DD 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 311  8A29
 312  8A29 CD F6 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 313  8A2C
 314  8A2C CD B0 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 315  8A2F              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 316  8A2F CD 8D 8D     	call Restore_entidad
 317  8A32
 318  8A32 21 E2 89     	ld hl,Numero_parcial_de_entidades
 319  8A35 46           	ld b,(hl)
 320  8A36 04           	inc b
 321  8A37 05           	dec b
 322  8A38 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 323  8A3A
 324  8A3A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 325  8A3A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 326  8A3A              ;	Pintamos el resto de entidades:
 327  8A3A
 328  8A3A              ;	INICIA ENTIDADES !!!!!
 329  8A3A
 330  8A3A C5           1 push bc  												; Guardo el contador de entidades.
 331  8A3B CD 0A 8D     	call Inicia_Puntero_objeto
 332  8A3E CD D4 98     	call Recompone_posicion_inicio
 333  8A41 CD 10 93     	call Draw
 334  8A44 CD A0 7F     	call Guarda_foto_registros
 335  8A47 CD 52 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 336  8A4A C1           	pop bc
 337  8A4B 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 338  8A4D
 339  8A4D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 340  8A4D              ; (Esto se dá cuando se inicia una nueva oleada).
 341  8A4D
 342  8A4D 3A D8 89     	ld a,(Ctrl_1)
 343  8A50 CB 5F        	bit 3,a
 344  8A52 20 18        	jr nz,5F											; Loop
 345  8A54
 346  8A54              ; 	INICIA AMADEUS !!!!!
 347  8A54
 348  8A54 CD B4 8D     3 call Restore_Amadeus
 349  8A57 CD 0A 8D     	call Inicia_Puntero_objeto
 350  8A5A CD 10 93     	call Draw
 351  8A5D CD A0 7F     	call Guarda_foto_registros
 352  8A60 11 8C 85     	ld de,Amadeus_db
 353  8A63 CD C6 8D     	call Store_Amadeus
 354  8A66
 355  8A66              ; 	INICIA DISPAROS !!!!!
 356  8A66
 357  8A66 CD C6 8C     	call Inicia_Puntero_Disparo_Entidades
 358  8A69 CD CD 8C     	call Inicia_Puntero_Disparo_Amadeus
 359  8A6C
 360  8A6C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 361  8A6C
 362  8A6C CD B0 8C     5 call Inicia_punteros_de_cajas
 363  8A6F CD 8D 8D     	call Restore_entidad
 364  8A72
 365  8A72 3A D8 89     	ld a,(Ctrl_1)
 366  8A75 CB 5F        	bit 3,a
 367  8A77 28 0A        	jr z,6F
 368  8A79
 369  8A79              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 370  8A79
 371  8A79 21 D8 89     	ld hl,Ctrl_1
 372  8A7C CB 9E        	res 3,(hl)
 373  8A7E CD D4 8C     	call Calcula_numero_de_malotes
 374  8A81 18 07        	jr 7F
 375  8A83
 376  8A83              ; ----------
 377  8A83
 378  8A83 3A E2 89     6 ld a,(Numero_parcial_de_entidades)
 379  8A86 3C           	inc a
 380  8A87 32 E4 89     	ld (Numero_de_malotes),a
 381  8A8A
 382  8A8A AF           7 xor a
 383  8A8B FB           2 ei
 384  8A8C 28 FD        	jr z,2B
 385  8A8E
 386  8A8E 3A 01 8A     	ld a,(Contador_de_frames)
 387  8A91 47           	ld b,a
 388  8A92 3A 04 8A     	ld a,(Activa_recarga_cajas)
 389  8A95 B8           	cp b
 390  8A96 28 08        	jr z,8F
 391  8A98
 392  8A98 21 D8 89     	ld hl,Ctrl_1
 393  8A9B CB E6        	set 4,(hl)
 394  8A9D AF           	xor a
 395  8A9E 18 EB        	jr 2B
 396  8AA0
 397  8AA0 21 D8 89     8 ld hl,Ctrl_1
 398  8AA3 CB A6        	res 4,(hl)
 399  8AA5 F3           	di
 400  8AA6
 401  8AA6 3A 01 8A     	ld a,(Contador_de_frames)
 402  8AA9
 403  8AA9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 404  8AA9              ;! _ IMPREDECIBLE !!!!
 405  8AA9
 406  8AA9 C6 0A        	add 10
 407  8AAB 32 03 8A     	ld (Clock_Entidades_en_curso),a
 408  8AAE
 409  8AAE C3 29 8A     	jp 4B
 410  8AB1
 411  8AB1              ; -----------------------------------------------------------------------------------
 412  8AB1
 413  8AB1              Frame
 414  8AB1
 415  8AB1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 416  8AB1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 417  8AB1
 418  8AB1              ; PINTAMOS.
 419  8AB1
 420  8AB1 3E 02            ld a,2
 421  8AB3 D3 FE            out ($fe),a
 422  8AB5 CD 14 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 423  8AB8 CD 4D 96     	call Extrae_foto_disparos
 424  8ABB 3E 01            ld a,1
 425  8ABD D3 FE            out ($fe),a
 426  8ABF
 427  8ABF              ; ----------------------------------------------------------------------
 428  8ABF
 429  8ABF              ; RELOJES.
 430  8ABF
 431  8ABF 21 01 8A     	ld hl,Contador_de_frames
 432  8AC2 34           	inc (hl)											; 0 - 255
 433  8AC3
 434  8AC3 3A 03 8A     	ld a,(Clock_Entidades_en_curso)
 435  8AC6 47           	ld b,a
 436  8AC7 3A 01 8A     	ld a,(Contador_de_frames)
 437  8ACA B8           	cp b
 438  8ACB 20 18        	jr nz,13F
 439  8ACD
 440  8ACD 3A E2 89     	ld a,(Numero_parcial_de_entidades)
 441  8AD0 47           	ld b,a
 442  8AD1 3A E3 89     	ld a,(Entidades_en_curso)
 443  8AD4 B8           	cp b
 444  8AD5 28 0E        	jr z,13F
 445  8AD7 30 0C        	jr nc,13F
 446  8AD9
 447  8AD9 3C           	inc a
 448  8ADA 32 E3 89     	ld (Entidades_en_curso),a
 449  8ADD
 450  8ADD 3A 03 8A     	ld a,(Clock_Entidades_en_curso)
 451  8AE0
 452  8AE0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 453  8AE0              ;! _ IMPREDECIBLE !!!!
 454  8AE0
 455  8AE0 C6 64        	add 100
 456  8AE2 32 03 8A     	ld (Clock_Entidades_en_curso),a
 457  8AE5
 458  8AE5 21 05 8A     13 ld hl,Habilita_disparo_Amadeus
 459  8AE8 11 07 8A     	ld de,Temporiza_disparo_Amadeus
 460  8AEB CD D0 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 461  8AEE
 462  8AEE 21 08 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 463  8AF1 11 0A 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 464  8AF4 CD D0 9D     	call Habilita_disparos
 465  8AF7
 466  8AF7              ; COLISIONES.
 467  8AF7
 468  8AF7 CD F2 91     	call Selector_de_impactos
 469  8AFA
 470  8AFA              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 471  8AFA              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 472  8AFA              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 473  8AFA
 474  8AFA AF           	xor a
 475  8AFB 32 F6 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 476  8AFE
 477  8AFE CD B0 8C     	call Inicia_punteros_de_cajas
 478  8B01 CD 8D 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 479  8B04              ; 														; _ en DRAW.
 480  8B04 3A 9A 89     	ld a,(Filas)
 481  8B07 A7           	and a
 482  8B08 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 483  8B0A CD 9F 8D     	call Incrementa_punteros_de_cajas
 484  8B0D 18 F2        	jr 12B
 485  8B0F
 486  8B0F              ; ---------------------------------------------------------------------------------------
 487  8B0F
 488  8B0F CD 6D 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 489  8B12 21 00 70     	ld hl,Album_de_fotos
 490  8B15 22 ED 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 491  8B18              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 492  8B18 3A E2 89     	ld a,(Numero_parcial_de_entidades)
 493  8B1B 47               ld b,a
 494  8B1C A7           	and a
 495  8B1D 20 14        	jr nz,2F
 496  8B1F
 497  8B1F 21 D8 89     	ld hl,Ctrl_1
 498  8B22 CB 66        	bit 4,(hl)
 499  8B24 C2 B0 8B     	jp nz,4F
 500  8B27
 501  8B27 21 D8 89     	ld hl,Ctrl_1
 502  8B2A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 503  8B2C
 504  8B2C 3A 01 8A     	ld a,(Contador_de_frames)
 505  8B2F 3C           	inc a
 506  8B30 32 04 8A     	ld (Activa_recarga_cajas),a
 507  8B33
 508  8B33              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 509  8B33
 510  8B33 3A E3 89     2 ld a,(Entidades_en_curso)
 511  8B36 A7           	and a
 512  8B37 CA B0 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 513  8B3A 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 514  8B3B
 515  8B3B              ;	ex af,af
 516  8B3B
 517  8B3B              ; Código que ejecutamos con cada entidad:
 518  8B3B              ; Impacto ???
 519  8B3B
 520  8B3B C5           15 push bc 												; Nº de entidades en curso.
 521  8B3C
 522  8B3C              ;	call Autorizacion
 523  8B3C
 524  8B3C 3A B3 89     	ld a,(Impacto)
 525  8B3F A7           	and a
 526  8B40 28 2D        	jr z,8F
 527  8B42
 528  8B42              ; Hay Impacto en esta entidad.
 529  8B42
 530  8B42 21 02 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 531  8B45 35           	dec (hl)
 532  8B46 20 62        	jr nz,6F
 533  8B48
 534  8B48              ;! Velocidad de la animación de la explosión.
 535  8B48
 536  8B48 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 537  8B4A              ;														; _,(velocidad de la explosión).
 538  8B4A CD 67 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 539  8B4D
 540  8B4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 541  8B4D
 542  8B4D 3A D6 89     	ld a,(Ctrl_2)
 543  8B50 CB 4F        	bit 1,a
 544  8B52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 545  8B54
 546  8B54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 547  8B54
 548  8B54 3A A2 89     	ld a,(CTRL_DESPLZ)
 549  8B57 A7           	and a
 550  8B58 20 08        	jr nz,21F
 551  8B5A
 552  8B5A 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 553  8B5D 22 A8 89     	ld (Puntero_DESPLZ_der),hl
 554  8B60 18 06        	jr 22F
 555  8B62
 556  8B62 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 557  8B65 22 A8 89     	ld (Puntero_DESPLZ_der),hl
 558  8B68
 559  8B68 21 D6 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 560  8B6B CB CE        	set 1,(hl)
 561  8B6D 18 22        	jr 7F
 562  8B6F
 563  8B6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 564  8B6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 565  8B6F
 566  8B6F 3A D8 89     8 ld a,(Ctrl_1)
 567  8B72 CB 57        	bit 2,a
 568  8B74 28 1B        	jr z,7F
 569  8B76
 570  8B76 2A F9 89     	ld hl,(Coordenadas_disparo_certero)
 571  8B79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 572  8B7A              ;														; E contiene la coordenada_X del disparo.
 573  8B7A 2A A0 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 574  8B7D              ;														; H FILA, (Coordenada_y de la entidad).
 575  8B7D A7           	and a
 576  8B7E ED 52        	sbc hl,de
 577  8B80
 578  8B80 CD 29 92     	call Determina_resultado_comparativa
 579  8B83
 580  8B83              ;! Debug colisiones
 581  8B83 78           	ld a,b
 582  8B84 A7           	and a
 583  8B85              ;	ld a,(Cuad_objeto)
 584  8B85              ;	inc b
 585  8B85              ;	dec b
 586  8B85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 587  8B87              ;	jr z,$
 588  8B87
 589  8B87              ;! Debug colisiones
 590  8B87
 591  8B87              ; ----- ----- -----
 592  8B87
 593  8B87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 594  8B89 32 B3 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 595  8B8C
 596  8B8C 21 D8 89     	ld hl,Ctrl_1
 597  8B8F CB 96        	res 2,(hl)
 598  8B91
 599  8B91 CD E3 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 600  8B94
 601  8B94 3A C8 89     	ld a,(Ctrl_0)
 602  8B97 CB 67        	bit 4,a
 603  8B99 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 604  8B9B
 605  8B9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 606  8B9B              ; [[[
 607  8B9B CD 28 8E     	call Detecta_disparo_entidad
 608  8B9E              ; ]]]
 609  8B9E CD 77 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 610  8BA1
 611  8BA1 21 C8 89     	ld hl,Ctrl_0
 612  8BA4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 613  8BA6 AF           	xor a
 614  8BA7 32 C9 89     	ld (Obj_dibujado),a
 615  8BAA
 616  8BAA CD 52 8D     6 call Store_Restore_cajas
 617  8BAD
 618  8BAD C1           	pop bc
 619  8BAE 10 8B        	djnz 15B
 620  8BB0
 621  8BB0              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 622  8BB0
 623  8BB0              ;	ld a,2
 624  8BB0              ;	ld (Limitador_de_entidades_x_frame),a
 625  8BB0
 626  8BB0              ; ------------------------------------
 627  8BB0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 628  8BB0              ; Hemos gestionado todas las unidades.
 629  8BB0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 630  8BB0
 631  8BB0              ;	ld hl,Ctrl_1
 632  8BB0              ;	res 2,(hl)
 633  8BB0
 634  8BB0              ; ------------------------------------
 635  8BB0
 636  8BB0              ; Tras la gestión de las entidades, ... AMADEUS.
 637  8BB0
 638  8BB0 CD B4 8D     4 call Restore_Amadeus
 639  8BB3
 640  8BB3 3A B3 89     	ld a,(Impacto)
 641  8BB6 A7           	and a
 642  8BB7 20 FE        	jr nz,$
 643  8BB9
 644  8BB9 CD 48 8C     	call Mov_Amadeus
 645  8BBC
 646  8BBC 3A C8 89     	ld a,(Ctrl_0)
 647  8BBF CB 67        	bit 4,a
 648  8BC1 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 649  8BC3
 650  8BC3 CD 77 8C     	call Guarda_foto_entidad_a_pintar
 651  8BC6
 652  8BC6 21 C8 89     3 ld hl,Ctrl_0
 653  8BC9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 654  8BCB AF           	xor a
 655  8BCC 32 C9 89     	ld (Obj_dibujado),a
 656  8BCF
 657  8BCF 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 658  8BD2 CD C6 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 659  8BD5
 660  8BD5 CD 8B 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 661  8BD8
 662  8BD8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 663  8BD8
 664  8BD8 CD EC 8C     	call Calcula_numero_de_disparotes
 665  8BDB CD D4 8C     9 call Calcula_numero_de_malotes
 666  8BDE
 667  8BDE 3E 04        	ld a,4
 668  8BE0 D3 FE        	out ($fe),a
 669  8BE2
 670  8BE2 C9           	ret
 671  8BE3
 672  8BE3              ; --------------------------------------------------------------------------------------------------------------
 673  8BE3              ;
 674  8BE3              ;	27/05/23
 675  8BE3
 676  8BE3              Mov_obj
 677  8BE3
 678  8BE3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 679  8BE3
 680  8BE3 3A D6 89     	ld a,(Ctrl_2)
 681  8BE6 CB 4F        	bit 1,a
 682  8BE8 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 683  8BEA
 684  8BEA              ; Explosión:
 685  8BEA
 686  8BEA 3A D7 89     	ld a,(Frames_explosion)
 687  8BED A7           	and a
 688  8BEE 20 11        	jr nz,4F
 689  8BF0
 690  8BF0              ; Una alimaña menos!!!!!!!!!1
 691  8BF0
 692  8BF0 CD CF 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 693  8BF3 21 E2 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 694  8BF6 35           	dec (hl)
 695  8BF7 21 E3 89     	ld hl,Entidades_en_curso
 696  8BFA 35           	dec (hl)
 697  8BFB 21 E1 89     	ld hl,Numero_de_entidades
 698  8BFE 35           	dec (hl)
 699  8BFF 18 46        	jr 3F
 700  8C01
 701  8C01              ; -----
 702  8C01
 703  8C01              ;	`Movemos´ la explosión.
 704  8C01
 705  8C01 2A A8 89     4 ld hl,(Puntero_DESPLZ_der)
 706  8C04 23           	inc hl
 707  8C05 23           	inc hl
 708  8C06 22 A8 89     	ld (Puntero_DESPLZ_der),hl
 709  8C09 CD 04 8D     	call Extrae_address
 710  8C0C 22 9E 89     	ld (Puntero_objeto),hl
 711  8C0F
 712  8C0F 21 D7 89     	ld hl,Frames_explosion
 713  8C12 35           	dec (hl)
 714  8C13
 715  8C13 CD 67 8C     	call Guarda_foto_entidad_a_borrar
 716  8C16 18 2F        	jr 3F
 717  8C18
 718  8C18 AF           2 xor a
 719  8C19 32 C9 89     	ld (Obj_dibujado),a
 720  8C1C 32 C8 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 721  8C1F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 722  8C1F              ; 														; _de la entidad.
 723  8C1F CD 81 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 724  8C22              ;														; Obj_dibujado="0".
 725  8C22              ; Movemos Entidades malignas.
 726  8C22
 727  8C22              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 728  8C22              ;	and a 												; _a movernos. (Limitador_de_entidades).
 729  8C22              ;	ret z
 730  8C22
 731  8C22 21 CB 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 732  8C25 34           	inc (hl)
 733  8C26 35           	dec (hl)                                            ; Salimos de la rutina.
 734  8C27 C8           	ret z
 735  8C28
 736  8C28 CD E5 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 737  8C2B
 738  8C2B 3A C8 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 739  8C2E CB 67        	bit 4,a
 740  8C30 C8           	ret z
 741  8C31
 742  8C31              ; Ha habido desplazamiento de la entidad maligna.
 743  8C31              ; Ha llegado a zona de AMADEUS ???
 744  8C31
 745  8C31 3A A1 89     	ld a,(Coordenada_y)
 746  8C34 FE 14        	cp $14
 747  8C36 D4 BC 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 748  8C39              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 749  8C39              ; ---------
 750  8C39
 751  8C39 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 752  8C3B 32 C9 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 753  8C3E CD 81 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 754  8C41 CD 98 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 755  8C44 CD 67 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 756  8C47 C9           3 ret													; _de la misma.
 757  8C48
 758  8C48              ; --------------------------------------------------------------------------------------------------------------
 759  8C48              ;
 760  8C48              ;	29/1/23
 761  8C48
 762  8C48              Mov_Amadeus
 763  8C48
 764  8C48 AF           	xor a
 765  8C49 32 C9 89     	ld (Obj_dibujado),a
 766  8C4C CD 81 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 767  8C4F              ;														; Obj_dibujado="0".
 768  8C4F              ; Movemos Amadeus.
 769  8C4F
 770  8C4F CD F1 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 771  8C52 3A C8 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 772  8C55 CB 67        	bit 4,a
 773  8C57 C8           	ret z
 774  8C58
 775  8C58              ; ---------
 776  8C58
 777  8C58 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 778  8C5A 32 C9 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 779  8C5D CD 81 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 780  8C60 CD 98 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 781  8C63 CD 67 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 782  8C66 C9           	ret													; _de la nave.
 783  8C67
 784  8C67              ; --------------------------------------------------------------------------------------------------------------
 785  8C67              ;
 786  8C67              ;	31/01/23
 787  8C67              ;
 788  8C67              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 789  8C67
 790  8C67              Guarda_foto_entidad_a_borrar
 791  8C67
 792  8C67 CD EA 95     	call Prepara_draw
 793  8C6A CD 24 95     	call calcula_CColumnass
 794  8C6D CD 5B 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 795  8C70 CD B0 95     	call Define_rutina_de_impresion
 796  8C73 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 797  8C76 C9           	ret
 798  8C77
 799  8C77              ; --------------------------------------------------------------------------------------------------------------
 800  8C77              ;
 801  8C77              ;	31/01/23
 802  8C77              ;
 803  8C77              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 804  8C77              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 805  8C77
 806  8C77              Guarda_foto_entidad_a_pintar
 807  8C77
 808  8C77 CD A4 8C     	call Repone_pintar
 809  8C7A CD 10 93     	call Draw
 810  8C7D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 811  8C80 C9           	ret
 812  8C81
 813  8C81              ; --------------------------------------------------------------------------------------------------------------
 814  8C81              ;
 815  8C81              ;
 816  8C81
 817  8C81 21 9A 89     Prepara_var_pintado_borrado	ld hl,Filas
 818  8C84 3A C9 89     	ld a,(Obj_dibujado)
 819  8C87 A7           	and a
 820  8C88 28 05        	jr z,1F
 821  8C8A 11 BE 89     	ld de,Variables_de_pintado
 822  8C8D 18 03        	jr 2F
 823  8C8F 11 B4 89     1 ld de,Variables_de_borrado
 824  8C92 01 08 00     2 ld bc,8
 825  8C95 ED B0        	ldir
 826  8C97 C9           	ret
 827  8C98
 828  8C98              ; --------------------------------------------------------------------------------------------------------------
 829  8C98
 830  8C98 21 B4 89     Repone_borrar ld hl,Variables_de_borrado
 831  8C9B 11 9A 89     	ld de,Filas
 832  8C9E 01 08 00     	ld bc,8
 833  8CA1 ED B0        	ldir
 834  8CA3 C9           	ret
 835  8CA4
 836  8CA4 21 BE 89     Repone_pintar ld hl,Variables_de_pintado
 837  8CA7 11 9A 89     	ld de,Filas
 838  8CAA 01 08 00     	ld bc,8
 839  8CAD ED B0        	ldir
 840  8CAF C9           	ret
 841  8CB0
 842  8CB0              ; *************************************************************************************************************************************************************
 843  8CB0              ;
 844  8CB0              ; 8/1/23
 845  8CB0              ;
 846  8CB0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 847  8CB0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 848  8CB0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 849  8CB0
 850  8CB0              ; Destruye HL y DE !!!!!
 851  8CB0
 852  8CB0              Inicia_punteros_de_cajas
 853  8CB0
 854  8CB0 21 74 85     	ld hl,Indice_de_cajas
 855  8CB3 CD 04 8D         call Extrae_address
 856  8CB6 22 DB 89         ld (Puntero_store_caja),hl
 857  8CB9 21 76 85     	ld hl,Indice_de_cajas+2
 858  8CBC 22 DF 89     	ld (Indice_restore_caja),hl
 859  8CBF CD 04 8D     	call Extrae_address
 860  8CC2 22 DD 89     	ld (Puntero_restore_caja),hl
 861  8CC5 C9               ret
 862  8CC6
 863  8CC6              ; *************************************************************************************************************************************************************
 864  8CC6              ;
 865  8CC6              ; 8/1/23
 866  8CC6              ;
 867  8CC6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 868  8CC6
 869  8CC6 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 870  8CC9 22 F2 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 871  8CCC C9           	ret
 872  8CCD 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 873  8CD0 22 F4 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 874  8CD3 C9           	ret
 875  8CD4
 876  8CD4              ; -------------------------------------------------------------------------------------------------------------
 877  8CD4              ;
 878  8CD4              ; 28/2/23
 879  8CD4              ;
 880  8CD4
 881  8CD4              Calcula_numero_de_malotes
 882  8CD4
 883  8CD4 21 00 70     	ld hl,Album_de_fotos
 884  8CD7 EB           	ex de,hl
 885  8CD8 2A ED 89     	ld hl,(Stack_snapshot)
 886  8CDB
 887  8CDB 06 00        	ld b,0
 888  8CDD 7D           	ld a,l
 889  8CDE 93           	sub e
 890  8CDF 28 07        	jr z,1F
 891  8CE1
 892  8CE1              ; Nº de malotes no es "0".
 893  8CE1
 894  8CE1 D6 06        2 sub 6
 895  8CE3 04           	inc b
 896  8CE4 A7           	and a
 897  8CE5 20 FA        	jr nz,2B
 898  8CE7 78           	ld a,b
 899  8CE8
 900  8CE8 32 E4 89     1 ld (Numero_de_malotes),a
 901  8CEB C9           	ret
 902  8CEC
 903  8CEC              ; -------------------------------------------------------------------------------------------------------------
 904  8CEC              ;
 905  8CEC              ; 28/2/23
 906  8CEC              ;
 907  8CEC
 908  8CEC              Calcula_numero_de_disparotes
 909  8CEC
 910  8CEC 21 85 70     	ld hl,Album_de_fotos_disparos
 911  8CEF EB           	ex de,hl
 912  8CF0 2A EF 89     	ld hl,(Stack_snapshot_disparos)
 913  8CF3
 914  8CF3 06 00        	ld b,0
 915  8CF5 7D           	ld a,l
 916  8CF6 93           	sub e
 917  8CF7 28 07        	jr z,1F
 918  8CF9
 919  8CF9              ; Nº de malotes no es "0".
 920  8CF9
 921  8CF9 D6 06        2 sub 6
 922  8CFB 04           	inc b
 923  8CFC A7           	and a
 924  8CFD 20 FA        	jr nz,2B
 925  8CFF 78           	ld a,b
 926  8D00
 927  8D00 32 F1 89     1 ld (Numero_de_disparotes),a
 928  8D03 C9           	ret
 929  8D04              ; *************************************************************************************************************************************************************
 930  8D04              ;
 931  8D04              ; 20/10/22
 932  8D04              ;
 933  8D04              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 934  8D04              ;
 935  8D04              ; Destruye el puntero y DE !!!!!
 936  8D04
 937  8D04 5E           Extrae_address ld e,(hl)
 938  8D05 23           	inc hl
 939  8D06 56           	ld d,(hl)
 940  8D07 2B           	dec hl
 941  8D08 EB           	ex de,hl
 942  8D09 C9           	ret
 943  8D0A
 944  8D0A              ; *************************************************************************************************************************************************************
 945  8D0A              ;
 946  8D0A              ;	7/2/23
 947  8D0A              ;
 948  8D0A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 949  8D0A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 950  8D0A              ;
 951  8D0A              ;   Destruye HL y BC !!!!!,
 952  8D0A              ;
 953  8D0A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 954  8D0A              ;					"0" ..... Izquierda.
 955  8D0A
 956  8D0A              Inicia_Puntero_objeto
 957  8D0A
 958  8D0A 3A AE 89     	ld a,(Cuad_objeto)
 959  8D0D E6 01        	and 1
 960  8D0F F5           	push af
 961  8D10 CC 2E 8D     	call z,Inicia_puntero_objeto_izq
 962  8D13 F1           	pop af
 963  8D14 28 2B        	jr z,1F
 964  8D16 CD 1B 8D     	call Inicia_puntero_objeto_der
 965  8D19 18 26        	jr 1F
 966  8D1B
 967  8D1B              ; Arrancamos desde la parte izquierda de la pantalla.
 968  8D1B              ; Iniciamos (Indice_Sprite_der).
 969  8D1B
 970  8D1B 2A A4 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 971  8D1E 22 A8 89     	ld (Puntero_DESPLZ_der),hl
 972  8D21 CD 04 8D     	call Extrae_address
 973  8D24 22 9E 89     	ld (Puntero_objeto),hl
 974  8D27
 975  8D27 2A A6 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 976  8D2A 22 AA 89     	ld (Puntero_DESPLZ_izq),hl
 977  8D2D C9           	ret
 978  8D2E
 979  8D2E              ; Arrancamos desde la parte derecha de la pantalla.
 980  8D2E              ; Iniciamos (Indice_Sprite_izq).
 981  8D2E
 982  8D2E 2A A6 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 983  8D31 22 AA 89     	ld (Puntero_DESPLZ_izq),hl
 984  8D34 CD 04 8D     	call Extrae_address
 985  8D37 22 9E 89     	ld (Puntero_objeto),hl
 986  8D3A
 987  8D3A 2A A4 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 988  8D3D 22 A8 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 989  8D40 C9           	ret
 990  8D41
 991  8D41              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 992  8D41
 993  8D41 21 48 83     1 ld hl,Amadeus
 994  8D44 ED 4B 9E 89  	ld bc,(Puntero_objeto)
 995  8D48 B7 ED 42     	sub hl,bc
 996  8D4B C0           	ret nz
 997  8D4C 21 C8 89     	ld hl,Ctrl_0
 998  8D4F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 999  8D51 C9           	ret 												; _de nuestra nave en los extremos.
1000  8D52
1001  8D52              ; *************************************************************************************************************************************************************
1002  8D52              ;
1003  8D52              ;	14/5/23
1004  8D52              ;
1005  8D52              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1006  8D52              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1007  8D52
1008  8D52              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1009  8D52              ;	_de la 2ª y 3ª entidad respectivamente.
1010  8D52
1011  8D52              Store_Restore_cajas
1012  8D52
1013  8D52 E5           	push hl
1014  8D53 D5           	push de
1015  8D54 C5            	push bc
1016  8D55
1017  8D55              ;	STORE !!!!!
1018  8D55              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1019  8D55
1020  8D55 21 9A 89     	ld hl,Filas
1021  8D58 ED 5B DB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1022  8D5C 01 3E 00     	ld bc,62
1023  8D5F ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1024  8D61
1025  8D61              ; 	Entidad_sospechosa. 20/4/23
1026  8D61
1027  8D61 3A B3 89     	ld a,(Impacto)
1028  8D64 A7           	and a
1029  8D65 28 0C        	jr z,1F
1030  8D67
1031  8D67 2A DB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1032  8D6A 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1033  8D6D A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1034  8D6E ED 4A        	adc hl,bc 											; _ "0" más adelante.
1035  8D70 22 F7 89     	ld (Entidad_sospechosa_de_colision),hl
1036  8D73
1037  8D73              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1038  8D73
1039  8D73 2A DD 89     1 ld hl,(Puntero_restore_caja)
1040  8D76 7E           	ld a,(hl)
1041  8D77 A7           	and a
1042  8D78 F5           	push af
1043  8D79 28 08        	jr z,2F
1044  8D7B
1045  8D7B 11 9A 89     	ld de,Filas
1046  8D7E 01 3E 00     	ld bc,62
1047  8D81 ED B0        	ldir
1048  8D83
1049  8D83 CD 9F 8D     2 call Incrementa_punteros_de_cajas
1050  8D86 F1           	pop af
1051  8D87 28 EA        	jr z,1B
1052  8D89
1053  8D89 C1           	pop bc
1054  8D8A D1           	pop de
1055  8D8B E1           	pop hl
1056  8D8C
1057  8D8C C9           	ret
1058  8D8D
1059  8D8D              ; **************************************************************************************************
1060  8D8D              ;
1061  8D8D              ;	12/05/23
1062  8D8D              ;
1063  8D8D              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1064  8D8D
1065  8D8D E5           Restore_entidad push hl
1066  8D8E D5           	push de
1067  8D8F C5            	push bc
1068  8D90
1069  8D90 2A DB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1070  8D93 11 9A 89     	ld de,Filas
1071  8D96 01 3E 00     	ld bc,62
1072  8D99 ED B0        	ldir
1073  8D9B
1074  8D9B C1           	pop bc
1075  8D9C D1           	pop de
1076  8D9D E1           	pop hl
1077  8D9E C9           	ret
1078  8D9F
1079  8D9F
1080  8D9F              ; **************************************************************************************************
1081  8D9F              ;
1082  8D9F              ;	08/05/23
1083  8D9F              ;
1084  8D9F              ;	Incrementamos los dos punteros de entidades. (+1).
1085  8D9F
1086  8D9F 2A DD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1087  8DA2 22 DB 89     	ld (Puntero_store_caja),hl
1088  8DA5 2A DF 89     	ld hl,(Indice_restore_caja)
1089  8DA8 23           	inc hl
1090  8DA9 23           	inc hl
1091  8DAA 22 DF 89     	ld (Indice_restore_caja),hl
1092  8DAD CD 04 8D         call Extrae_address
1093  8DB0 22 DD 89         ld (Puntero_restore_caja),hl
1094  8DB3 C9               ret
1095  8DB4
1096  8DB4              ; **************************************************************************************************
1097  8DB4              ;
1098  8DB4              ;	25/01/23
1099  8DB4              ;
1100  8DB4              ;	Restore_Amadeus
1101  8DB4              ;
1102  8DB4              ;	Cargamos en DRAW los parámetros de Amadeus.
1103  8DB4              ;
1104  8DB4
1105  8DB4 E5           Restore_Amadeus	push hl
1106  8DB5 D5           	push de
1107  8DB6 C5            	push bc
1108  8DB7 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1109  8DBA 11 9A 89     	ld de,Filas
1110  8DBD 01 3E 00     	ld bc,62
1111  8DC0 ED B0        	ldir
1112  8DC2 C1           	pop bc
1113  8DC3 D1           	pop de
1114  8DC4 E1           	pop hl
1115  8DC5 C9           	ret
1116  8DC6
1117  8DC6              ; *************************************************************************************************************************************************************
1118  8DC6              ;
1119  8DC6              ;	29/04/23
1120  8DC6              ;
1121  8DC6              ;	Store_Amadeus
1122  8DC6              ;
1123  8DC6              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1124  8DC6              ;
1125  8DC6              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1126  8DC6              ;
1127  8DC6              ;	DESTRUYE: HL y BC y DE.
1128  8DC6
1129  8DC6 21 9A 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1130  8DC9 01 3E 00     	ld bc,62
1131  8DCC ED B0        	ldir
1132  8DCE C9           	ret
1133  8DCF
1134  8DCF              ; -----------------------------------------------------------
1135  8DCF              ;
1136  8DCF              ;	27/04/23
1137  8DCF              ;
1138  8DCF              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1139  8DCF              ;
1140  8DCF              ;	Destruye: HL,BC,DE,A
1141  8DCF
1142  8DCF 21 9A 89     Borra_datos_entidad ld hl,Filas
1143  8DD2 01 3D 00     	ld bc,61
1144  8DD5 AF           	xor a
1145  8DD6 77           	ld (hl),a
1146  8DD7 11 9B 89     	ld de,Filas+1
1147  8DDA ED B0        	ldir
1148  8DDC C9           	ret
1149  8DDD
1150  8DDD              ; -----------------------------------------------------------
1151  8DDD
1152  8DDD              ; Teclado.
1153  8DDD
1154  8DDD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1155  8DDF DB FE        	in a,($fe)
1156  8DE1 E6 01        	and $01
1157  8DE3 28 02        	jr z,1f
1158  8DE5 18 F6        	jr Pulsa_ENTER
1159  8DE7 C9           1 ret
1160  8DE8
1161  8DE8              ; **************************************************************************************************
1162  8DE8              ;
1163  8DE8              ; Temporización.
1164  8DE8
1165  8DE8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1166  8DE8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1167  8DE8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1168  8DE8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1169  8DE8
1170  8DE8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1171  8DE8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1172  8DE8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1173  8DE8
1174  8DE8              ; A partir de $4f61 no hace falta DELAY.
1175  8DE8
1176  8DE8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1177  8DE8
1178  8DE8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1179  8DEB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1180  8DEC 78           	LD A,B
1181  8DED A7           	AND A
1182  8DEE 20 FB        	JR NZ,wait
1183  8DF0 C9           	RET
1184  8DF1
1185  8DF1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1186  8DF1              ;
1187  8DF1              ;	5/3/23
1188  8DF1              ;
1189  8DF1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1190  8DF1
1191  8DF1              Movimiento_Amadeus
1192  8DF1
1193  8DF1              ; Disparo.
1194  8DF1
1195  8DF1 3A 05 8A     	ld a,(Habilita_disparo_Amadeus)
1196  8DF4 A7           	and a
1197  8DF5 20 02        	jr nz,1F
1198  8DF7 18 15        	jr 2F
1199  8DF9
1200  8DF9 3E F7        1 ld a,$f7													; "5" para disparar.
1201  8DFB DB FE        	in a,($fe)
1202  8DFD E6 10        	and $10
1203  8DFF
1204  8DFF F5           	push af
1205  8E00 CC 38 8E     	call z,Genera_disparo
1206  8E03 F1           	pop af
1207  8E04 20 08        	jr nz,2F
1208  8E06
1209  8E06 3A 05 8A     	ld a,(Habilita_disparo_Amadeus)
1210  8E09 EE 01        	xor 1
1211  8E0B 32 05 8A     	ld (Habilita_disparo_Amadeus),a
1212  8E0E
1213  8E0E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1214  8E10 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1215  8E12 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1216  8E14 CC 8E 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1217  8E17 3E F7        	ld a,$f7
1218  8E19 DB FE        	in a,($fe)
1219  8E1B E6 01        	and $01
1220  8E1D C8           	ret z
1221  8E1E
1222  8E1E 3E F7        	ld a,$f7
1223  8E20 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1224  8E22 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1225  8E24 CC 70 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1226  8E27 C9           	ret
1227  8E28
1228  8E28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1229  8E28              ;
1230  8E28              ;	Rutina provisional para que los malotes cagen balas.
1231  8E28
1232  8E28              Detecta_disparo_entidad
1233  8E28
1234  8E28 3A 08 8A     	ld a,(Habilita_disparo_entidad)
1235  8E2B A7           	and a
1236  8E2C C8           	ret z
1237  8E2D 3E 7F        	ld a,$7f
1238  8E2F DB FE        	in a,($fe)
1239  8E31 E6 01        	and 1
1240  8E33 C0           	ret nz
1241  8E34 CD 38 8E     	call Genera_disparo
1242  8E37 C9           	ret
1243  8E38
1244  8E38              ; ---------------------------------------------------------------
1245  8E38
1246  8E38              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E38              ; ******************************************************************************************************************************************************************************************
   2+ 8E38              ;
   3+ 8E38              ;   17/04/23
   4+ 8E38              ;
   5+ 8E38              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E38              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E38              ;
   8+ 8E38              ;
   9+ 8E38              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E38              ;
  11+ 8E38              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E38              ;               _ hacen las entidades hacia abajo.
  13+ 8E38              ;
  14+ 8E38              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E38              ;
  16+ 8E38              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E38              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E38              ;
  19+ 8E38              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E38              ;           _ la bala.
  21+ 8E38              ;
  22+ 8E38              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E38              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E38              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E38              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E38              ;           _ en el momento de generarse la bala)).
  27+ 8E38
  28+ 8E38              Genera_disparo
  29+ 8E38
  30+ 8E38              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E38              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E38              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E38              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E38              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E38              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E38              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E38
  38+ 8E38              ; Exclusiones:
  39+ 8E38
  40+ 8E38 3A D2 89         ld a,(Columnas)
  41+ 8E3B 47               ld b,a
  42+ 8E3C 3A 9B 89         ld a,(Columns)
  43+ 8E3F B8               cp b
  44+ 8E40 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E41
  46+ 8E41              ; ----- ----- -----
  47+ 8E41
  48+ 8E41 3A C8 89         ld a,(Ctrl_0)
  49+ 8E44 CB 77            bit 6,a
  50+ 8E46 20 06            jr nz,14F
  51+ 8E48
  52+ 8E48 3A A1 89         ld a,(Coordenada_y)
  53+ 8E4B FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E4D D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E4E
  56+ 8E4E 21 00 80     14 ld hl,Indice_disparo
  57+ 8E51 3A A2 89         ld a,(CTRL_DESPLZ)
  58+ 8E54 4F               ld c,a
  59+ 8E55 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E57              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E57              ;                                            ""        ""       "f9", B="1"
  62+ 8E57              ;                                            ""        ""       "fb", B="2"
  63+ 8E57              ;                                            ""        ""       "fb", B="3"
  64+ 8E57 A7               and a
  65+ 8E58 28 10            jr z,1F
  66+ 8E5A E6 01            and 1
  67+ 8E5C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E5D
  69+ 8E5D 79               ld a,c
  70+ 8E5E 16 F9            ld d,$f9
  71+ 8E60 23           2 inc hl
  72+ 8E61 23               inc hl
  73+ 8E62 04               inc b
  74+ 8E63 BA               cp d
  75+ 8E64 28 04            jr z,1F
  76+ 8E66 14               inc d
  77+ 8E67 14               inc d
  78+ 8E68 18 F6            jr 2B
  79+ 8E6A
  80+ 8E6A CD 04 8D     1 call Extrae_address
  81+ 8E6D E5               push hl
  82+ 8E6E FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E70 DD 21 89 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E74
  85+ 8E74              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E74              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E74
  88+ 8E74 3A C8 89         ld a,(Ctrl_0)
  89+ 8E77 CB 77            bit 6,a
  90+ 8E79 20 04            jr nz,19F
  91+ 8E7B
  92+ 8E7B AF               xor a
  93+ 8E7C 32 08 8A         ld (Habilita_disparo_entidad),a
  94+ 8E7F
  95+ 8E7F 3A AE 89     19 ld a,(Cuad_objeto)
  96+ 8E82 FE 02            cp 2
  97+ 8E84 38 66            jr c,3F
  98+ 8E86 28 64            jr z,3F
  99+ 8E88
 100+ 8E88              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E88
 102+ 8E88 E6 01            and 1
 103+ 8E8A 28 30            jr z,4F
 104+ 8E8C
 105+ 8E8C              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E8C              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E8C              ;
 108+ 8E8C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E8C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E8C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E8C
 112+ 8E8C 2A 9C 89     	ld hl,(Posicion_actual)
 113+ 8E8F
 114+ 8E8F              ;   Amadeus o entidad ???.
 115+ 8E8F
 116+ 8E8F 3A C8 89         ld a,(Ctrl_0)
 117+ 8E92 CB 77            bit 6,a
 118+ 8E94 28 0A            jr z,8F
 119+ 8E96
 120+ 8E96              ; 	Dispara Amadeus.
 121+ 8E96
 122+ 8E96 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E98 CD 05 96         call PreviousScan
 124+ 8E9B CD 05 96         call PreviousScan
 125+ 8E9E
 126+ 8E9E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E9E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E9E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E9E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E9E
 131+ 8E9E 18 11            jr 10F
 132+ 8EA0
 133+ 8EA0              ; 	Dispara Entidad.
 134+ 8EA0
 135+ 8EA0 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EA3              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EA3
 138+ 8EA3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EA3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EA3
 141+ 8EA3 C5               push bc
 142+ 8EA4 06 10            ld b,16
 143+ 8EA6 CD F6 95     9 call NextScan
 144+ 8EA9 10 FB            djnz 9B
 145+ 8EAB C1               pop bc
 146+ 8EAC CD 16 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EAF 18 06            jr 17F
 148+ 8EB1
 149+ 8EB1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EB1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EB1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EB1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EB1
 154+ 8EB1 CD 16 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EB4 CD 8B 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EB7              ;                                                      ; _al generar el disparo.
 157+ 8EB7
 158+ 8EB7              ; 	LLegados a este punto tendremos:
 159+ 8EB7              ;
 160+ 8EB7              ;       Puntero_objeto_disparo en IY.
 161+ 8EB7              ;       Rutinas_de_impresion en IX.
 162+ 8EB7              ;       Puntero_de_impresion en HL.
 163+ 8EB7              ;       Impacto/Dirección en BC.
 164+ 8EB7
 165+ 8EB7 CD 1E 8F     17 call Almacena_disparo
 166+ 8EBA 18 52            jr 6F                                             ; RET.
 167+ 8EBC
 168+ 8EBC              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EBC              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EBC              ;
 171+ 8EBC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EBC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EBC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EBC
 175+ 8EBC 2A 9C 89     4 ld hl,(Posicion_actual)
 176+ 8EBF
 177+ 8EBF              ;   Amadeus o entidad ???.
 178+ 8EBF
 179+ 8EBF 3A C8 89         ld a,(Ctrl_0)
 180+ 8EC2 CB 77            bit 6,a
 181+ 8EC4 28 0A            jr z,11F
 182+ 8EC6
 183+ 8EC6              ; 	Dispara Amadeus.
 184+ 8EC6
 185+ 8EC6 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EC8 CD 05 96         call PreviousScan
 187+ 8ECB CD 05 96         call PreviousScan
 188+ 8ECE
 189+ 8ECE              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8ECE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8ECE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8ECE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8ECE
 194+ 8ECE 18 11            jr 13F
 195+ 8ED0
 196+ 8ED0              ; 	Dispara Entidad.
 197+ 8ED0
 198+ 8ED0 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8ED3              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8ED3
 201+ 8ED3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8ED3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8ED3
 204+ 8ED3 C5               push bc
 205+ 8ED4 06 10            ld b,16
 206+ 8ED6 CD F6 95     12 call NextScan
 207+ 8ED9 10 FB            djnz 12B
 208+ 8EDB C1               pop bc
 209+ 8EDC
 210+ 8EDC CD 0F 8F         call Ajusta_disparo_parte_derecha
 211+ 8EDF 18 06            jr 18F
 212+ 8EE1
 213+ 8EE1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EE1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EE1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EE1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EE1
 218+ 8EE1 CD 0F 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8EE4 CD 8B 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EE7              ;                                                       ; _al generar el disparo.
 221+ 8EE7
 222+ 8EE7              ; LLegados a este punto tendremos:
 223+ 8EE7              ;
 224+ 8EE7              ;       Puntero_objeto_disparo en IY.
 225+ 8EE7              ;       Rutinas_de_impresion en IX.
 226+ 8EE7              ;       Puntero_de_impresion en HL.
 227+ 8EE7              ;       Impacto/Dirección en BC.
 228+ 8EE7
 229+ 8EE7 CD 1E 8F     18 call Almacena_disparo
 230+ 8EEA 18 22            jr 6F                                               ; RET.
 231+ 8EEC
 232+ 8EEC              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EEC
 234+ 8EEC 28 11        3 jr z,5F
 235+ 8EEE
 236+ 8EEE              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EEE              ;
 238+ 8EEE              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EEE              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EEE              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EEE              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EEE
 243+ 8EEE              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EEE              ;	   ""        ""       "f9", B="1"
 245+ 8EEE              ;	   ""        ""       "fb", B="2"
 246+ 8EEE              ; 	   ""        ""       "fb", B="3"
 247+ 8EEE
 248+ 8EEE 2A 9C 89     	ld hl,(Posicion_actual)
 249+ 8EF1 CD F6 95     	call NextScan
 250+ 8EF4
 251+ 8EF4              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EF4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EF4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EF4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EF4
 256+ 8EF4 CD 16 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EF7
 258+ 8EF7              ; 	No se produce impacto. B="$80"
 259+ 8EF7              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EF7
 261+ 8EF7 01 80 80         ld bc,$8080
 262+ 8EFA
 263+ 8EFA              ; 	LLegados a este punto tendremos:
 264+ 8EFA              ;
 265+ 8EFA              ;       Puntero_objeto_disparo en IY.
 266+ 8EFA              ;       Rutinas_de_impresion en IX.
 267+ 8EFA              ;       Puntero_de_impresion en HL.
 268+ 8EFA              ;       Impacto/Dirección en BC.
 269+ 8EFA
 270+ 8EFA CD 1E 8F         call Almacena_disparo
 271+ 8EFD 18 0F            jr 6F                                           ; RET.
 272+ 8EFF
 273+ 8EFF              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EFF              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EFF              ;
 276+ 8EFF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EFF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EFF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EFF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EFF
 281+ 8EFF 2A 9C 89     5 ld hl,(Posicion_actual)
 282+ 8F02 CD F6 95     	call NextScan
 283+ 8F05
 284+ 8F05              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F05              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F05              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F05              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F05
 289+ 8F05 CD 0F 8F         call Ajusta_disparo_parte_derecha
 290+ 8F08
 291+ 8F08              ; 	No se produce impacto. B="$80"
 292+ 8F08              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F08
 294+ 8F08 01 80 80     15 ld bc,$8080
 295+ 8F0B
 296+ 8F0B              ; 	LLegados a este punto tendremos:
 297+ 8F0B              ;
 298+ 8F0B              ;       Puntero_objeto_disparo en IY.
 299+ 8F0B              ;       Rutinas_de_impresion en IX.
 300+ 8F0B              ;       Puntero_de_impresion en HL.
 301+ 8F0B              ;       Impacto/Dirección en BC.
 302+ 8F0B
 303+ 8F0B CD 1E 8F         call Almacena_disparo
 304+ 8F0E
 305+ 8F0E C9           6 ret
 306+ 8F0F
 307+ 8F0F              ; ----------------------------------------------------------------
 308+ 8F0F              ;
 309+ 8F0F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F0F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F0F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F0F
 313+ 8F0F 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F10 FE 02            cp 2
 315+ 8F12 38 01            jr c,1F
 316+ 8F14 23               inc hl
 317+ 8F15 C9           1 ret
 318+ 8F16
 319+ 8F16 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F17 FE 01        	cp 1
 321+ 8F19 20 01        	jr nz,1F
 322+ 8F1B 2B           	dec hl
 323+ 8F1C 2B           1 dec hl
 324+ 8F1D C9               ret
 325+ 8F1E
 326+ 8F1E              ; ----------------------------------------------------------------
 327+ 8F1E              ;
 328+ 8F1E              ;   25/02/23
 329+ 8F1E              ;
 330+ 8F1E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F1E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F1E              ;
 333+ 8F1E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F1E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F1E
 336+ 8F1E              Almacena_disparo
 337+ 8F1E
 338+ 8F1E E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F1F F1               pop af
 340+ 8F20 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F21
 342+ 8F21 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F22 E6 01            and 1
 344+ 8F24 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F26              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F26              ; 	Dispara AMADEUS.
 347+ 8F26
 348+ 8F26              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F26              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F26              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F26              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F26
 353+ 8F26 C5               push bc
 354+ 8F27 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F2A 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F2D A7               and a
 357+ 8F2E ED 42            sbc hl,bc
 358+ 8F30 CC CD 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F33 C1               pop bc
 360+ 8F34 28 54            jr z,4F
 361+ 8F36
 362+ 8F36 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F39 23               inc hl
 364+ 8F3A 23               inc hl
 365+ 8F3B 22 F4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F3E              ;                                                   ; _ Disparo_(+1).
 367+ 8F3E 18 18            jr 2F
 368+ 8F40
 369+ 8F40              ; Dispara una entidad.
 370+ 8F40
 371+ 8F40 C5           1 push bc
 372+ 8F41 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F44 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F47 A7               and a
 375+ 8F48 ED 42            sbc hl,bc
 376+ 8F4A CC C6 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F4D C1               pop bc
 378+ 8F4E 28 3A            jr z,4F
 379+ 8F50
 380+ 8F50 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F53 23               inc hl
 382+ 8F54 23               inc hl
 383+ 8F55 22 F2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F58              ;                                                   ; _ Disparo_(+1).
 385+ 8F58 CD 04 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F5B              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F5B              ;
 388+ 8F5B              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F5B              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F5B              ;                                                     Puntero_de_impresion en HL.
 391+ 8F5B              ;                                                     Impacto/Dirección en BC.
 392+ 8F5B
 393+ 8F5B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F5C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F5D 23               inc hl                                          ; _ al siguiente.
 396+ 8F5E A7               and a
 397+ 8F5F 20 C0            jr nz,3B
 398+ 8F61
 399+ 8F61 08               ex af,af
 400+ 8F62 ED 73 E9 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F66 F9               ld sp,hl
 402+ 8F67
 403+ 8F67 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F69 F5               push af                                         ; Puntero de impresión.
 405+ 8F6A FD E5            push iy                                         ; Puntero objeto.
 406+ 8F6C C5               push bc                                         ; Control.
 407+ 8F6D
 408+ 8F6D ED 7B E9 89      ld sp,(Stack)
 409+ 8F71
 410+ 8F71              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F71
 412+ 8F71 21 D8 89     	ld hl,Ctrl_1
 413+ 8F74 CB C6        	set 0,(hl)
 414+ 8F76
 415+ 8F76 DD E5        	push ix
 416+ 8F78 E1               pop hl
 417+ 8F79 F5               push af
 418+ 8F7A DD E1            pop ix
 419+ 8F7C
 420+ 8F7C CD A0 7F     	call Guarda_foto_registros
 421+ 8F7F
 422+ 8F7F 21 D8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F82 CB 86        	res 0,(hl)
 424+ 8F84
 425+ 8F84              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F84              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F84
 428+ 8F84 CD CD 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F87 CD C6 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F8A
 431+ 8F8A C9           4 ret
 432+ 8F8B
 433+ 8F8B              ; ----------------------------------------------------------------
 434+ 8F8B              ;
 435+ 8F8B              ;   4/3/23
 436+ 8F8B              ;
 437+ 8F8B              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F8B              ;   _ al generarse el disparo.
 439+ 8F8B              ;
 440+ 8F8B              ;       "$80" ..... No se produce colisión.
 441+ 8F8B              ;       "$81" ..... Se produce colisión.
 442+ 8F8B
 443+ 8F8B              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F8B              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F8B
 446+ 8F8B
 447+ 8F8B FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F8D E5               push hl                                        ; Puntero de impresión.
 449+ 8F8E
 450+ 8F8E 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F90 CD AC 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F93
 453+ 8F93 7B               ld a,e
 454+ 8F94 E6 01            and 1
 455+ 8F96 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F98
 457+ 8F98 E1               pop hl
 458+ 8F99 E5               push hl
 459+ 8F9A CD F6 95         call NextScan
 460+ 8F9D
 461+ 8F9D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F9E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FA0 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FA2              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FA2 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FA4 CD AC 8F         call Bucle_2
 467+ 8FA7
 468+ 8FA7 43           2 ld b,e
 469+ 8FA8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FA9 FD E1            pop iy
 471+ 8FAB C9               ret
 472+ 8FAC
 473+ 8FAC               ; ---------- ----------
 474+ 8FAC
 475+ 8FAC 06 02        Bucle_2 ld b,2
 476+ 8FAE FD 7E 00     2 ld a,(iy)
 477+ 8FB1 A6               and (hl)
 478+ 8FB2 28 02            jr z,1F
 479+ 8FB4 1E 81            ld e,$81
 480+ 8FB6 23           1 inc hl
 481+ 8FB7 FD 23            inc iy
 482+ 8FB9 10 F3            djnz 2B
 483+ 8FBB C9               ret
 484+ 8FBC
 485+ 8FBC              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FBC              ;
 487+ 8FBC              ;   11/04/23
 488+ 8FBC              ;
 489+ 8FBC              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FBC              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FBC              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FBC              ;
 493+ 8FBC              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FBC
 495+ 8FBC              Compara_coordenadas_X
 496+ 8FBC
 497+ 8FBC              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FBC              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FBC
 500+ 8FBC              ; Preparamos registros:
 501+ 8FBC
 502+ 8FBC 21 A0 89         ld hl,Filas+6
 503+ 8FBF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FC0 23               inc hl
 505+ 8FC1 23               inc hl
 506+ 8FC2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FC3 43               ld b,e
 508+ 8FC4 21 AE 89         ld hl,Filas+20
 509+ 8FC7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FC8 21 FE 89         ld hl,Coordenadas_X_Entidad
 511+ 8FCB CD DF 91         call Guarda_coordenadas_X
 512+ 8FCE
 513+ 8FCE              ; Preparamos registros:
 514+ 8FCE
 515+ 8FCE 21 92 85         ld hl,Amadeus_db+6
 516+ 8FD1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FD2 23               inc hl
 518+ 8FD3 23               inc hl
 519+ 8FD4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FD5 7B               ld a,e
 521+ 8FD6 08               ex af,af'
 522+ 8FD7 21 A0 85         ld hl,Amadeus_db+20
 523+ 8FDA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FDB 21 FB 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FDE CD DF 91         call Guarda_coordenadas_X
 526+ 8FE1
 527+ 8FE1              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FE1              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FE1
 530+ 8FE1 04               inc b
 531+ 8FE2 05               dec b
 532+ 8FE3 28 04            jr z,1F
 533+ 8FE5 06 03            ld b,3
 534+ 8FE7 18 02            jr 2F
 535+ 8FE9 06 02        1 ld b,2
 536+ 8FEB 08           2 ex af,af'
 537+ 8FEC 3C               inc a
 538+ 8FED 3D               dec a
 539+ 8FEE 28 04            jr z,5F
 540+ 8FF0 0E 03            ld c,3
 541+ 8FF2 18 02            jr 6F
 542+ 8FF4 0E 02        5 ld c,2
 543+ 8FF6 79           6 ld a,c
 544+ 8FF7 08               ex af,af'
 545+ 8FF8 11 FE 89         ld de,Coordenadas_X_Entidad
 546+ 8FFB 1A           4 ld a,(de)
 547+ 8FFC 21 FB 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FFF BE           3 cp (hl)
 549+ 9000 28 0E            jr z,7F
 550+ 9002 23               inc hl
 551+ 9003 0D               dec c
 552+ 9004 20 F9            jr nz,3B
 553+ 9006 13               inc de
 554+ 9007 08               ex af,af'
 555+ 9008 4F               ld c,a
 556+ 9009 08               ex af,af'
 557+ 900A 10 EF            djnz 4B
 558+ 900C
 559+ 900C              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 900C
 561+ 900C CD 1E 92     8 call Limpia_Coordenadas_X
 562+ 900F C9               ret
 563+ 9010
 564+ 9010              7
 565+ 9010 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9012 32 B3 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9015 21 F6 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9018 CB D6            set 2,(hl)
 569+ 901A 18 F0            jr 8B
 570+ 901C
 571+ 901C              ; -----------------------------------------------------------------------
 572+ 901C              ;
 573+ 901C              ;   17/04/23
 574+ 901C              ;
 575+ 901C
 576+ 901C              Detecta_colision_nave_entidad
 577+ 901C
 578+ 901C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 901C
 580+ 901C 2A 9C 89         ld hl,(Posicion_actual)
 581+ 901F CD 5B 95         call Calcula_puntero_de_impresion
 582+ 9022
 583+ 9022              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9022              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9022
 586+ 9022 DD E5            push ix
 587+ 9024 E1               pop hl
 588+ 9025 E5               push hl
 589+ 9026
 590+ 9026              ; ----- ----- -----
 591+ 9026 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9028 06 0A            ld b,10
 593+ 902A CD 5A 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 902D 7B               ld a,e
 595+ 902E FE 05            cp 5
 596+ 9030 38 0E            jr c,3F
 597+ 9032
 598+ 9032              ; LLegados a este punto:
 599+ 9032              ;
 600+ 9032              ;   HAY COLISIÓN !!!!!.
 601+ 9032              ;
 602+ 9032              ;   .db (Impacto) de Amadeus a "1".
 603+ 9032              ;   SET el bit3 de (Impacto2).
 604+ 9032              ;
 605+ 9032              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9032
 607+ 9032 21 A5 85         ld hl,Amadeus_db+25
 608+ 9035 36 01            ld (hl),1
 609+ 9037 21 F6 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 903A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 903C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 903E 18 18            jr 1F
 613+ 9040
 614+ 9040              ; -----
 615+ 9040
 616+ 9040 E1           3 pop hl
 617+ 9041 CD F6 95         call NextScan
 618+ 9044 E5               push hl
 619+ 9045 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9046 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9048 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 904A 30 0C            jr nc,1F
 623+ 904C              ;                                                  ; _ 2º scanline si esto es así.
 624+ 904C 10 DC            djnz 2B
 625+ 904E
 626+ 904E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 904E
 628+ 904E              ; LLegados a este punto:
 629+ 904E              ;
 630+ 904E              ;   NO HAY COLISIÓN !!!!!.
 631+ 904E              ;
 632+ 904E              ;   .db (Impacto) de Amadeus a "0".
 633+ 904E              ;   RES el bit2 de (Impacto2).
 634+ 904E              ;
 635+ 904E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 904E              ;   Lo colocamos a "0".
 637+ 904E
 638+ 904E 21 F6 89         ld hl,Impacto2
 639+ 9051 CB 96            res 2,(hl)
 640+ 9053 2A F7 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9056 36 00            ld (hl),0
 642+ 9058
 643+ 9058 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9059 C9               ret
 645+ 905A
 646+ 905A               ; ---------- ----------
 647+ 905A
 648+ 905A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 905B 3A 9B 89         ld a,(Columns)
 650+ 905E 47               ld b,a
 651+ 905F FD 7E 00     2 ld a,(iy)
 652+ 9062 BE               cp (hl)
 653+ 9063 28 01            jr z,1F
 654+ 9065
 655+ 9065 1C               inc e
 656+ 9066
 657+ 9066 23           1 inc hl
 658+ 9067 FD 23            inc iy
 659+ 9069 10 F4            djnz 2B
 660+ 906B C1               pop bc
 661+ 906C C9               ret
 662+ 906D
 663+ 906D              ; -------------------------------------------------------------------------------------------------------------
 664+ 906D              ;
 665+ 906D              ;   13/03/23
 666+ 906D              ;
 667+ 906D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 906D              ;
 669+ 906D              ;   DESTRUYE: HL,BC,DE y A.
 670+ 906D
 671+ 906D 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9070 7E               ld a,(hl)
 673+ 9071 A7               and a
 674+ 9072 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9073
 676+ 9073 44               ld b,h
 677+ 9074 4D               ld c,l
 678+ 9075 2A EF 89         ld hl,(Stack_snapshot_disparos)
 679+ 9078 E5               push hl
 680+ 9079 A7               and a
 681+ 907A ED 42            sbc hl,bc
 682+ 907C E5               push hl
 683+ 907D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 907E
 685+ 907E E1               pop hl
 686+ 907F 54               ld d,h
 687+ 9080 5D               ld e,l
 688+ 9081 1B               dec de
 689+ 9082 ED B8            lddr                                                ; Limpiamos.
 690+ 9084
 691+ 9084 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9087 22 EF 89         ld (Stack_snapshot_disparos),hl
 693+ 908A
 694+ 908A C9               ret
 695+ 908B
 696+ 908B              ; -------------------------------------------------------------------------------------------------------------
 697+ 908B              ;
 698+ 908B              ;   28/03/23
 699+ 908B              ;
 700+ 908B
 701+ 908B 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 908E 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9091
 704+ 9091 CD 04 8D     2 call Extrae_address
 705+ 9094 7E               ld a,(hl)
 706+ 9095 A7               and a
 707+ 9096 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 9098
 709+ 9098              ; ----- ----- ----- ----- ----- -----
 710+ 9098
 711+ 9098 C5               push bc
 712+ 9099 CD 55 91         call foto_disparo_a_borrar
 713+ 909C
 714+ 909C              ; Existe colisión con este disparo???
 715+ 909C
 716+ 909C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 909D 7E               ld a,(hl)
 718+ 909E 2B               dec hl
 719+ 909F E6 01            and 1
 720+ 90A1 28 1D            jr z,9F
 721+ 90A3
 722+ 90A3              ;   En este punto:
 723+ 90A3              ;
 724+ 90A3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90A3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90A3              ;   _con la entidad).
 727+ 90A3              ;
 728+ 90A3              ;   Disparo_2A defw 0                                ; Control.
 729+ 90A3              ;    defw 0                                          ; Puntero objeto.
 730+ 90A3              ;    defw 0                                          ; Puntero de impresión.
 731+ 90A3              ;    defw 0                                          ; Rutina de impresión.
 732+ 90A3
 733+ 90A3 E5               push hl
 734+ 90A4
 735+ 90A4 06 04            ld b,4
 736+ 90A6 23           19 inc hl
 737+ 90A7 10 FD            djnz 19B
 738+ 90A9
 739+ 90A9 CD 04 8D         call Extrae_address
 740+ 90AC CD 4D 9C         call Genera_coordenadas_disparo
 741+ 90AF
 742+ 90AF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90AF
 744+ 90AF 21 F9 89         ld hl,Coordenadas_disparo_certero
 745+ 90B2 72               ld (hl),d
 746+ 90B3 23               inc hl
 747+ 90B4 73               ld (hl),e
 748+ 90B5
 749+ 90B5              ; Elimino el disparo de la base de datos.
 750+ 90B5
 751+ 90B5 E1               pop hl
 752+ 90B6 CD D4 91         call Elimina_disparo_de_base_de_datos
 753+ 90B9 21 F6 89         ld hl,Impacto2
 754+ 90BC CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90BE
 756+ 90BE 18 06            jr 11F
 757+ 90C0
 758+ 90C0 CD 7E 91     9 call Mueve_disparo
 759+ 90C3 CD 55 91         call foto_disparo_a_borrar
 760+ 90C6
 761+ 90C6 C1           11 pop bc
 762+ 90C7 18 04            jr 7F
 763+ 90C9
 764+ 90C9              ; ----- ----- ----- ----- ----- -----
 765+ 90C9
 766+ 90C9 ED 42        1 sbc hl,bc
 767+ 90CB 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90CD 2A F4 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90D0 23               inc hl
 770+ 90D1 23               inc hl
 771+ 90D2 22 F4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90D5 18 BA            jr 2B
 773+ 90D7 CD CD 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90DA
 775+ 90DA 01 72 85         ld bc,Disparo_11
 776+ 90DD 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90E0
 778+ 90E0 CD 04 8D     5 call Extrae_address
 779+ 90E3 7E               ld a,(hl)
 780+ 90E4 A7               and a
 781+ 90E5 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90E7
 783+ 90E7              ; ----- ----- ----- ----- ----- -----
 784+ 90E7
 785+ 90E7 C5               push bc
 786+ 90E8 CD 55 91         call foto_disparo_a_borrar
 787+ 90EB
 788+ 90EB              ; Existe colisión con este disparo???
 789+ 90EB
 790+ 90EB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90EC 7E               ld a,(hl)
 792+ 90ED 2B               dec hl
 793+ 90EE E6 01            and 1
 794+ 90F0 28 48            jr z,10F
 795+ 90F2
 796+ 90F2              ; La colisión se produce con Amadeus???
 797+ 90F2              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90F2
 799+ 90F2 E5               push hl
 800+ 90F3
 801+ 90F3 06 04            ld b,4
 802+ 90F5 23           16 inc hl
 803+ 90F6 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90F8 CD 04 8D         call Extrae_address
 805+ 90FB CD 4D 9C         call Genera_coordenadas_disparo
 806+ 90FE
 807+ 90FE 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90FF FE 16            cp $16
 809+ 9101 38 22            jr c,15F
 810+ 9103
 811+ 9103              ; (Colisiones en filas 16 y 17).
 812+ 9103
 813+ 9103 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9104
 815+ 9104              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9104
 817+ 9104 21 92 85         ld hl,Amadeus_db+6
 818+ 9107 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9108 23               inc hl
 820+ 9109 23               inc hl
 821+ 910A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 910B 21 A0 85         ld hl,Amadeus_db+20
 823+ 910E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 910F 21 FB 89         ld hl,Coordenadas_X_Amadeus
 825+ 9112 CD DF 91         call Guarda_coordenadas_X
 826+ 9115
 827+ 9115 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9116
 829+ 9116              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9116
 831+ 9116 06 03            ld b,3
 832+ 9118 21 FB 89         ld hl,Coordenadas_X_Amadeus
 833+ 911B 7E           18 ld a,(hl)
 834+ 911C BA               cp d
 835+ 911D 20 03            jr nz,17F
 836+ 911F
 837+ 911F              ; Colisión Amadeus !!!!!!!!!!
 838+ 911F
 839+ 911F E1               pop hl
 840+ 9120 18 09            jr 14F
 841+ 9122
 842+ 9122 23           17 inc hl
 843+ 9123 10 F6            djnz 18B
 844+ 9125
 845+ 9125              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9125              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9125
 848+ 9125 E1           15 pop hl
 849+ 9126 23               inc hl
 850+ 9127 35               dec (hl)
 851+ 9128 2B               dec hl
 852+ 9129 18 0F            jr 10F
 853+ 912B
 854+ 912B              ; -----------------------debug
 855+ 912B
 856+ 912B              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 912B              ; _ almacén de coordenadas_X de Amadeus.
 858+ 912B
 859+ 912B E5           14 push hl
 860+ 912C CD D4 91         call Elimina_disparo_de_base_de_datos
 861+ 912F 21 F6 89         ld hl,Impacto2
 862+ 9132 CB CE            set 1,(hl)
 863+ 9134 CD 1E 92         call Limpia_Coordenadas_X
 864+ 9137
 865+ 9137 E1               pop hl
 866+ 9138 18 06            jr 12F
 867+ 913A
 868+ 913A CD 7E 91     10 call Mueve_disparo
 869+ 913D CD 55 91         call foto_disparo_a_borrar
 870+ 9140 C1           12 pop bc
 871+ 9141
 872+ 9141 18 04            jr 8F
 873+ 9143
 874+ 9143              ; ----- ----- ----- ----- ----- -----
 875+ 9143
 876+ 9143 ED 42        4 sbc hl,bc
 877+ 9145 28 0A            jr z,6F
 878+ 9147
 879+ 9147 2A F2 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 914A 23               inc hl
 881+ 914B 23               inc hl
 882+ 914C 22 F2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 914F 18 8F            jr 5B
 884+ 9151
 885+ 9151 CD C6 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9154 C9               ret
 887+ 9155
 888+ 9155              ; ------------------------------------------------------------------
 889+ 9155
 890+ 9155              foto_disparo_a_borrar
 891+ 9155
 892+ 9155 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9156 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9157 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9158
 896+ 9158 E5               push hl
 897+ 9159 23               inc hl
 898+ 915A 23               inc hl
 899+ 915B ED 73 E9 89      ld (Stack),sp
 900+ 915F F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9160 FD E1            pop iy
 902+ 9162 DD E1            pop ix
 903+ 9164 E1               pop hl
 904+ 9165 ED 7B E9 89      ld sp,(Stack)
 905+ 9169 3A D8 89         ld a,(Ctrl_1)
 906+ 916C CB C7            set 0,a
 907+ 916E 32 D8 89         ld (Ctrl_1),a
 908+ 9171 CD A0 7F         call Guarda_foto_registros
 909+ 9174 3A D8 89         ld a,(Ctrl_1)
 910+ 9177 CB 87            res 0,a
 911+ 9179 32 D8 89         ld (Ctrl_1),a
 912+ 917C E1               pop hl
 913+ 917D C9               ret
 914+ 917E
 915+ 917E E5           Mueve_disparo push hl
 916+ 917F 7E               ld a,(hl)
 917+ 9180 06 04            ld b,4
 918+ 9182 23           1 inc hl
 919+ 9183 10 FD            djnz 1B
 920+ 9185
 921+ 9185              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9185
 923+ 9185 CD 04 8D         call Extrae_address
 924+ 9188
 925+ 9188 E6 01            and 1
 926+ 918A 28 2E            jr z,2F
 927+ 918C
 928+ 918C              ; Disparo hacia arriba, (Amadeus).
 929+ 918C
 930+ 918C              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 918C              ; _ de la dificultad.
 932+ 918C
 933+ 918C CD 05 96         call PreviousScan
 934+ 918F CD 05 96         call PreviousScan
 935+ 9192 CD 05 96         call PreviousScan
 936+ 9195 CD 05 96         call PreviousScan
 937+ 9198
 938+ 9198              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 9198
 940+ 9198 7C               ld a,h
 941+ 9199 FE 40            cp $40
 942+ 919B 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 919D
 944+ 919D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 919D
 946+ 919D EB               ex de,hl
 947+ 919E 06 04            ld b,4
 948+ 91A0 2B           6 dec hl
 949+ 91A1 10 FD            djnz 6B
 950+ 91A3
 951+ 91A3 CD D4 91         call Elimina_disparo_de_base_de_datos
 952+ 91A6 E1               pop hl
 953+ 91A7 18 10            jr 7F
 954+ 91A9
 955+ 91A9              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91A9
 957+ 91A9 D5           3 push de
 958+ 91AA C5               push bc
 959+ 91AB
 960+ 91AB CD 8B 8F         call Comprueba_Colision
 961+ 91AE
 962+ 91AE              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91AE
 964+ 91AE 78               ld a,b
 965+ 91AF
 966+ 91AF C1               pop bc
 967+ 91B0 D1               pop de
 968+ 91B1
 969+ 91B1 EB               ex de,hl
 970+ 91B2
 971+ 91B2 73               ld (hl),e
 972+ 91B3 23               inc hl
 973+ 91B4 72               ld (hl),d
 974+ 91B5
 975+ 91B5 E1           4 pop hl
 976+ 91B6 23               inc hl
 977+ 91B7 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91B8 2B               dec hl
 979+ 91B9 C9           7 ret
 980+ 91BA
 981+ 91BA              ; Disparo hacia abajo, (Entidad).
 982+ 91BA
 983+ 91BA              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91BA              ;! _ de la dificultad.
 985+ 91BA
 986+ 91BA CD F6 95     2 call NextScan
 987+ 91BD CD F6 95         call NextScan
 988+ 91C0 CD F6 95         call NextScan
 989+ 91C3              ;    call NextScan
 990+ 91C3
 991+ 91C3              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91C3
 993+ 91C3 7C               ld a,h
 994+ 91C4 FE 58            cp $58
 995+ 91C6 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91C8
 997+ 91C8 EB               ex de,hl
 998+ 91C9 06 04            ld b,4
 999+ 91CB 2B           5 dec hl
1000+ 91CC 10 FD            djnz 5B
1001+ 91CE
1002+ 91CE CD D4 91         call Elimina_disparo_de_base_de_datos
1003+ 91D1 E1               pop hl
1004+ 91D2 18 E5            jr 7B
1005+ 91D4
1006+ 91D4              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91D4
1008+ 91D4 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91D7 AF               xor a
1010+ 91D8 77               ld (hl),a
1011+ 91D9 54               ld d,h
1012+ 91DA 5D               ld e,l
1013+ 91DB 13               inc de
1014+ 91DC ED B0            ldir
1015+ 91DE C9               ret
1016+ 91DF
1017+ 91DF              ; -----------------------------------------------------------------
1018+ 91DF              ;
1019+ 91DF              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 91DF              ;
1021+ 91DF              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 91DF              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 91DF              ;
1024+ 91DF              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 91DF              ;
1026+ 91DF              ;   INPUTS:
1027+ 91DF              ;
1028+ 91DF              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 91DF              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 91DF              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 91DF
1032+ 91DF              ;   MODIFICA: A, HL, DE y C
1033+ 91DF
1034+ 91DF 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 91E0 79               ld a,c
1036+ 91E1 E6 01            and 1
1037+ 91E3 20 03            jr nz,1F
1038+ 91E5 14               inc d
1039+ 91E6 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 91E8
1041+ 91E8              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 91E8              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 91E8
1044+ 91E8 15           1 dec d
1045+ 91E9 23           2 inc hl
1046+ 91EA 72               ld (hl),d
1047+ 91EB
1048+ 91EB 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 91EC A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 91ED C8               ret z
1051+ 91EE
1052+ 91EE AF               xor a
1053+ 91EF 5F               ld e,a
1054+ 91F0 18 ED            jr Guarda_coordenadas_X
1055+ 91F2
1056+ 91F2              ; -----------------------------------------------------------------
1057+ 91F2              ;
1058+ 91F2              ;   12/04/23
1059+ 91F2              ;
1060+ 91F2
1061+ 91F2 3A F6 89     Selector_de_impactos ld a,(Impacto2)
1062+ 91F5 A7               and a
1063+ 91F6 C8               ret z
1064+ 91F7
1065+ 91F7 FE 04            cp 4
1066+ 91F9 20 09            jr nz,1F
1067+ 91FB
1068+ 91FB
1069+ 91FB              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 91FB
1071+ 91FB CD 1C 90         call Detecta_colision_nave_entidad
1072+ 91FE
1073+ 91FE 21 F6 89         ld hl,Impacto2
1074+ 9201 CB 5E            bit 3,(hl)
1075+ 9203 C0               ret nz                                               ; Existe colisión, RET.
1076+ 9204
1077+ 9204              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 9204              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 9204
1080+ 9204 21 F6 89     1 ld hl,Impacto2
1081+ 9207 CB 4E            bit 1,(hl)
1082+ 9209 28 07            jr z,2F
1083+ 920B
1084+ 920B 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 920E 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9210 18 0B            jr 3F
1087+ 9212
1088+ 9212 21 F6 89     2 ld hl,Impacto2
1089+ 9215 CB 46            bit 0,(hl)
1090+ 9217 C8               ret z
1091+ 9218
1092+ 9218              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 9218
1094+ 9218 21 D8 89         ld hl,Ctrl_1
1095+ 921B CB D6            set 2,(hl)
1096+ 921D
1097+ 921D C9           3 ret
1098+ 921E
1099+ 921E              ; -----------------------------------------------------------------
1100+ 921E              ;
1101+ 921E              ;   16/04/23
1102+ 921E              ;
1103+ 921E
1104+ 921E AF           Limpia_Coordenadas_X xor a
1105+ 921F 06 06            ld b,6
1106+ 9221 21 FB 89         ld hl,Coordenadas_X_Amadeus
1107+ 9224 77           1 ld (hl),a
1108+ 9225 23               inc hl
1109+ 9226 10 FC            djnz 1B
1110+ 9228 C9               ret
1111+ 9229
1112+ 9229              ; -----------------------------------------------------------------
1113+ 9229              ;
1114+ 9229              ;   25/04/23
1115+ 9229              ;
1116+ 9229
1117+ 9229              Determina_resultado_comparativa
1118+ 9229
1119+ 9229              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 9229              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 9229              ;
1122+ 9229              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 9229              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 9229              ;
1125+ 9229              ;   SBC HL,DE
1126+ 9229
1127+ 9229              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 9229              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 9229
1130+ 9229              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 9229              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 9229
1133+ 9229
1134+ 9229 3A AE 89         ld a,(Cuad_objeto)
1135+ 922C FE 02            cp 2
1136+ 922E 28 26            jr z,2F
1137+ 9230 38 24            jr c,2F
1138+ 9232
1139+ 9232              ; Cuadrantes 3º y 4º
1140+ 9232
1141+ 9232 E6 01            and 1
1142+ 9234 28 10            jr z,4F
1143+ 9236
1144+ 9236              ; Cuadrante 3º
1145+ 9236
1146+ 9236 7C               ld a,h
1147+ 9237 06 00            ld b,0
1148+ 9239
1149+ 9239 CD C4 92         call Compara_cositas_H3
1150+ 923C
1151+ 923C 04               inc b
1152+ 923D 05               dec b
1153+ 923E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 923F
1155+ 923F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9240 06 00            ld b,0
1157+ 9242
1158+ 9242 CD D6 92         call Compara_cositas_L3
1159+ 9245 C9               ret
1160+ 9246
1161+ 9246              ; Cuadrante 4º
1162+ 9246
1163+ 9246 7C           4 ld a,h
1164+ 9247 06 00            ld b,0
1165+ 9249
1166+ 9249 CD E8 92         call Compara_cositas_H4
1167+ 924C
1168+ 924C 04               inc b
1169+ 924D 05               dec b
1170+ 924E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 924F
1172+ 924F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9250 06 00            ld b,0
1174+ 9252
1175+ 9252 CD FE 92         call Compara_cositas_L4
1176+ 9255 C9               ret
1177+ 9256
1178+ 9256              ; Cuadrantes 1º y 2º.
1179+ 9256
1180+ 9256 28 10        2 jr z,3F
1181+ 9258
1182+ 9258              ; 1er Cuadrante
1183+ 9258
1184+ 9258 7C               ld a,h
1185+ 9259 06 00            ld b,0
1186+ 925B
1187+ 925B CD 9C 92         call Compara_cositas_H1
1188+ 925E
1189+ 925E 04               inc b
1190+ 925F 05               dec b
1191+ 9260 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9261
1193+ 9261 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 9262 06 00            ld b,0
1195+ 9264
1196+ 9264 CD B2 92         call Compara_cositas_L1
1197+ 9267 C9               ret
1198+ 9268
1199+ 9268
1200+ 9268              ; 2º Cuadrante
1201+ 9268
1202+ 9268 7C           3 ld a,h
1203+ 9269 06 00            ld b,0
1204+ 926B
1205+ 926B CD 78 92         call Compara_cositas_H2
1206+ 926E
1207+ 926E 04               inc b
1208+ 926F 05               dec b
1209+ 9270 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 9271
1211+ 9271 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 9272 06 00            ld b,0
1213+ 9274
1214+ 9274 CD 8A 92         call Compara_cositas_L2
1215+ 9277 C9               ret
1216+ 9278
1217+ 9278 A7           Compara_cositas_H2 and a
1218+ 9279 28 0D            jr z,1F
1219+ 927B              ;    cp $fd
1220+ 927B              ;    jr z,1F
1221+ 927B              ;    cp $fe
1222+ 927B              ;    jr z,1F
1223+ 927B FE FF            cp $ff
1224+ 927D 28 09            jr z,1F
1225+ 927F FE 01            cp $01
1226+ 9281 28 05            jr z,1F
1227+ 9283 FE 02            cp $02
1228+ 9285 28 01            jr z,1F
1229+ 9287 C0               ret nz
1230+ 9288 04           1 inc b
1231+ 9289 C9               ret
1232+ 928A
1233+ 928A A7           Compara_cositas_L2 and a
1234+ 928B 28 0D            jr z,1F
1235+ 928D              ;    cp $fd
1236+ 928D              ;    jr z,1F
1237+ 928D FE FE            cp $fe
1238+ 928F 28 09            jr z,1F
1239+ 9291 FE FF            cp $ff
1240+ 9293 28 05            jr z,1F
1241+ 9295 FE 01            cp $01
1242+ 9297 28 01            jr z,1F
1243+ 9299              ;    cp $02
1244+ 9299              ;    jr z,1F
1245+ 9299 C0               ret nz
1246+ 929A 04           1 inc b
1247+ 929B C9               ret
1248+ 929C
1249+ 929C A7           Compara_cositas_H1 and a
1250+ 929D 28 11            jr z,1F
1251+ 929F              ;    cp $fd
1252+ 929F              ;    jr z,1F
1253+ 929F              ;    cp $fe
1254+ 929F              ;    jr z,1F
1255+ 929F FE FF            cp $ff
1256+ 92A1 28 0D            jr z,1F
1257+ 92A3 FE 01            cp $01
1258+ 92A5 28 09            jr z,1F
1259+ 92A7 FE 02            cp $02
1260+ 92A9 28 05            jr z,1F
1261+ 92AB FE 03            cp $03
1262+ 92AD 28 01            jr z,1F
1263+ 92AF C0               ret nz
1264+ 92B0 04           1 inc b
1265+ 92B1 C9               ret
1266+ 92B2
1267+ 92B2 A7           Compara_cositas_L1 and a
1268+ 92B3 28 0D            jr z,1F
1269+ 92B5              ;    cp $fd
1270+ 92B5              ;    jr z,1F
1271+ 92B5              ;    cp $fe
1272+ 92B5              ;    jr z,1F
1273+ 92B5              ;    cp $ff
1274+ 92B5              ;    jr z,1F
1275+ 92B5 FE 01            cp $01
1276+ 92B7 28 09            jr z,1F
1277+ 92B9 FE 02            cp $02
1278+ 92BB 28 05            jr z,1F
1279+ 92BD FE 03            cp $03
1280+ 92BF 28 01            jr z,1F
1281+ 92C1 C0               ret nz
1282+ 92C2 04           1 inc b
1283+ 92C3 C9               ret
1284+ 92C4
1285+ 92C4 A7           Compara_cositas_H3 and a
1286+ 92C5 28 0D            jr z,1F
1287+ 92C7              ;    cp $fd
1288+ 92C7              ;    jr z,1F
1289+ 92C7 FE FE            cp $fe
1290+ 92C9 28 09            jr z,1F
1291+ 92CB FE FF            cp $ff
1292+ 92CD 28 05            jr z,1F
1293+ 92CF FE 01            cp $01
1294+ 92D1 28 01            jr z,1F
1295+ 92D3              ;    cp $02
1296+ 92D3              ;    jr z,1F
1297+ 92D3              ;    cp $03
1298+ 92D3              ;    jr z,1F
1299+ 92D3 C0               ret nz
1300+ 92D4 04           1 inc b
1301+ 92D5 C9               ret
1302+ 92D6
1303+ 92D6 A7           Compara_cositas_L3 and a
1304+ 92D7 28 0D            jr z,1F
1305+ 92D9              ;    cp $fd
1306+ 92D9              ;    jr z,1F
1307+ 92D9              ;    cp $fe
1308+ 92D9              ;    jr z,1F
1309+ 92D9              ;    cp $ff
1310+ 92D9              ;    jr z,1F
1311+ 92D9 FE 01            cp $01
1312+ 92DB 28 09            jr z,1F
1313+ 92DD FE 02            cp $02
1314+ 92DF 28 05            jr z,1F
1315+ 92E1 FE 03            cp $03
1316+ 92E3 28 01            jr z,1F
1317+ 92E5 C0               ret nz
1318+ 92E6 04           1 inc b
1319+ 92E7 C9               ret
1320+ 92E8
1321+ 92E8 A7           Compara_cositas_H4 and a
1322+ 92E9 28 11            jr z,1F
1323+ 92EB FE FD            cp $fd
1324+ 92ED 28 0D            jr z,1F
1325+ 92EF FE FE            cp $fe
1326+ 92F1 28 09            jr z,1F
1327+ 92F3 FE FF            cp $ff
1328+ 92F5 28 05            jr z,1F
1329+ 92F7 FE 01            cp $01
1330+ 92F9 28 01            jr z,1F
1331+ 92FB              ;    cp $02
1332+ 92FB              ;    jr z,1F
1333+ 92FB              ;    cp $03
1334+ 92FB              ;    jr z,1F
1335+ 92FB C0               ret nz
1336+ 92FC 04           1 inc b
1337+ 92FD C9               ret
1338+ 92FE
1339+ 92FE A7           Compara_cositas_L4 and a
1340+ 92FF 28 0D            jr z,1F
1341+ 9301              ;    cp $fd
1342+ 9301              ;    jr z,1F
1343+ 9301 FE FE            cp $fe
1344+ 9303 28 09            jr z,1F
1345+ 9305 FE FF            cp $ff
1346+ 9307 28 05            jr z,1F
1347+ 9309 FE 01            cp $01
1348+ 930B 28 01            jr z,1F
1349+ 930D              ;    cp $02
1350+ 930D              ;    jr z,1F
1351+ 930D              ;    cp $03
1352+ 930D              ;    jr z,1F
1353+ 930D C0               ret nz
1354+ 930E 04           1 inc b
1355+ 930F C9               ret
# file closed: Disparo.asm
1247  9310              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9310              ; ******************************************************************************************************************************************************************************************
   2+ 9310              ;
   3+ 9310              ; 01/23
   4+ 9310              ;
   5+ 9310              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9310
   7+ 9310 CD EA 95     Draw call Prepara_draw
   8+ 9313 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9314 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9315 28 05        	jr z,2F
  11+ 9317
  12+ 9317 3A AE 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 931A 18 0C        	jr 1F
  14+ 931C 2A AC 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 931F 22 9C 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9322 CD B1 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9325              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9325 CD 64 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9328 3A C8 89     1 ld a,(Ctrl_0)
  20+ 932B CB 6F        	bit 5,a
  21+ 932D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 932F
  23+ 932F CD 47 93     	call Comprueba_limite_horizontal
  24+ 9332 CD D7 93     	call Comprueba_limite_vertical
  25+ 9335
  26+ 9335              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9335
  28+ 9335 CD 24 95     3 call calcula_CColumnass
  29+ 9338 CD 5B 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 933B CD B0 95     	call Define_rutina_de_impresion
  31+ 933E
  32+ 933E 3A C8 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9341 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9343 32 C8 89     	ld (Ctrl_0),a
  35+ 9346
  36+ 9346 C9           	ret
  37+ 9347
  38+ 9347              ; *******************************************************************************************************************************************************************************************
  39+ 9347              ;	21/01/23
  40+ 9347              ;
  41+ 9347              ; 	Comprueba_limite_horizontal.
  42+ 9347              ;
  43+ 9347              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9347              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9347              ;
  46+ 9347              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9347              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9347              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9347              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9347
  51+ 9347
  52+ 9347
  53+ 9347 3A C8 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 934A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 934C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 934E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9350 32 C8 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9353 18 09            jr 6F
  59+ 9355 CB 5F        1 bit 3,a
  60+ 9357 28 0A            jr z,2F
  61+ 9359 E6 F7            and $f7
  62+ 935B 32 C8 89         ld (Ctrl_0),a
  63+ 935E CD B1 94     6 call Inicializacion
  64+ 9361 18 5B            jr 5F
  65+ 9363 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9364
  67+ 9364              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9364              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9364
  70+ 9364 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9365 2A D3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9368 CD B6 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 936B 67           	ld h,a
  74+ 936C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 936D CD B6 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9370 67           	ld h,a
  77+ 9371 A7           	and a
  78+ 9372 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9374 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9375 3A AE 89     	ld a,(Cuad_objeto)
  81+ 9378 FE 02        	cp 2
  82+ 937A 38 1E        	jr c,3F
  83+ 937C 28 1C        	jr z,3F
  84+ 937E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 937F 28 23            jr z,7F
  86+ 9381 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9383 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9385 E1           	pop hl
  89+ 9386
  90+ 9386              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9386              ; _para indicar con E="2" en caso necesario.
  92+ 9386
  93+ 9386 E5               push hl
  94+ 9387 C5               push bc
  95+ 9388 CD B6 98     	call calcula_tercio
  96+ 938B FE 01        	cp 1
  97+ 938D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 938F CD BF 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9392 28 26            jr z,9F
 100+ 9394 38 24            jr c,9F
 101+ 9396 1E 00        11 ld e,0
 102+ 9398 18 22            jr 8F
 103+ 939A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 939B 28 07        	jr z, 7F
 105+ 939D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 939F 1E 00         	ld e,0
 107+ 93A1 E1           	pop hl
 108+ 93A2 18 04        	jr 4F
 109+ 93A4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93A6 18 15            jr 10F
 111+ 93A8
 112+ 93A8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93A8              ; _para indicar con E="2" en caso necesario.
 114+ 93A8
 115+ 93A8 E5           4 push hl
 116+ 93A9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93AA CD B6 98     	call calcula_tercio
 118+ 93AD FE 01        	cp 1
 119+ 93AF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93B1 CD BF 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93B4 28 04            jr z,9F
 122+ 93B6 30 02            jr nc,9F
 123+ 93B8 18 02        	jr 8F
 124+ 93BA 1E 02        9 ld e,2
 125+ 93BC C1           8 pop bc
 126+ 93BD E1           10 pop hl
 127+ 93BE C9           5 ret
 128+ 93BF
 129+ 93BF              ; --------------------
 130+ 93BF              ;
 131+ 93BF              ; 25/08/22
 132+ 93BF
 133+ 93BF CD B6 98     Comprueba_centro call calcula_tercio
 134+ 93C2 67               ld h,a
 135+ 93C3 08           	ex af,af
 136+ 93C4 FE 02        	cp 2
 137+ 93C6 38 07        	jr c,1F
 138+ 93C8 28 05        	jr z,1F
 139+ 93CA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93CD 18 03        	jr 2F
 141+ 93CF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93D2 08           2 ex af,af
 143+ 93D3 A7               and a
 144+ 93D4 ED 42            sbc hl,bc
 145+ 93D6 C9               ret
 146+ 93D7
 147+ 93D7              ; *********************************************************************************************************************************************************************************************
 148+ 93D7              ;
 149+ 93D7              ;   16/8/22
 150+ 93D7              ;
 151+ 93D7              ;	Comprueba_limite_vertical
 152+ 93D7              ;
 153+ 93D7              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93D7              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93D7              ;
 156+ 93D7
 157+ 93D7 2A 9C 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93DA 7D           	ld a,l
 159+ 93DB E6 1F        	and $1F
 160+ 93DD 57           	ld d,a
 161+ 93DE 3A D5 89     	ld a,(Limite_vertical)
 162+ 93E1 BA           	cp d 											; Límite - Posición.
 163+ 93E2 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93E3 3A AE 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93E6 CB 47        	bit 0,a
 166+ 93E8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93EA
 168+ 93EA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93EA
 170+ 93EA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93EB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93ED
 173+ 93ED              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93ED              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93ED
 176+ 93ED 3A A0 89         ld a,(Coordenada_X)
 177+ 93F0 16 0F            ld d,Centro_izquierda
 178+ 93F2 A7               and a
 179+ 93F3 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93F4 28 1E            jr z,3F
 181+ 93F6 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93F8              ;                                                    ; _salimos sin modificar nada.
 183+ 93F8 18 0E            jr 2F
 184+ 93FA 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 93FB 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 93FD
 187+ 93FD              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 93FD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 93FD
 190+ 93FD 3A A0 89         ld a,(Coordenada_X)
 191+ 9400 16 10            ld d,Centro_derecha
 192+ 9402 A7               and a
 193+ 9403 92               sub d
 194+ 9404 28 0E            jr z,3F
 195+ 9406 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9408              ;                                                    ; _salimos sin modificar nada.
 197+ 9408 CB 43        2 bit 0,e
 198+ 940A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 940C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 940D CD A1 94         call Modificaccionne
 201+ 9410 C1           	pop bc
 202+ 9411 CD B1 94         call Inicializacion
 203+ 9414 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9415
 205+ 9415              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9415
 207+ 9415 C5           4 push bc
 208+ 9416 01 9B 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9419 0A           	ld a,(bc)
 210+ 941A 3D           	dec a
 211+ 941B 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 941C 7D           	ld a,l
 213+ 941D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 941E CB 47        	bit 0,a
 215+ 9420 28 03        	jr z,5F
 216+ 9422 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9423 18 2E        	jr 7F
 218+ 9425
 219+ 9425              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9425
 221+ 9425 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9426 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9427 3A C8 89     	ld a,(Ctrl_0)
 224+ 942A CB 4F        	bit 1,a
 225+ 942C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 942E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 942F
 228+ 942F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 942F
 230+ 942F 1C               inc e
 231+ 9430 1D               dec e
 232+ 9431 20 07            jr nz,12F
 233+ 9433 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9434 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9435 22 9C 89     	ld (Posicion_actual),hl
 236+ 9438 18 44        13 jr 9F
 237+ 943A CB 43        12 bit 0,e
 238+ 943C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 943E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 943E C1           	pop bc
 241+ 943F 18 D3        	jr 3B
 242+ 9441 80           14 add b
 243+ 9442 6F               ld l,a
 244+ 9443 22 9C 89     	ld (Posicion_actual),hl
 245+ 9446 CD A1 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9449 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 944B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 944D 32 C8 89         ld (Ctrl_0),a
 249+ 9450 F1           	pop af
 250+ 9451 18 2B        	jr 9F
 251+ 9453
 252+ 9453              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9453
 254+ 9453 F5           7 push af
 255+ 9454 3A C8 89     	ld a,(Ctrl_0)
 256+ 9457 CB 47        	bit 0,a
 257+ 9459 20 1D        	jr nz,8F
 258+ 945B F1           	pop af
 259+ 945C
 260+ 945C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 945C
 262+ 945C 1C           	inc e
 263+ 945D 1D               dec e
 264+ 945E 20 07            jr nz,10F
 265+ 9460 90           	sub b
 266+ 9461 6F               ld l,a
 267+ 9462 22 9C 89     	ld (Posicion_actual),hl
 268+ 9465 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9467              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9467 CB 43        10 bit 0,e
 271+ 9469 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 946B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 946B C1           	pop bc
 274+ 946C 18 A6        	jr 3B
 275+ 946E 90           16 sub b
 276+ 946F 6F               ld l,a
 277+ 9470 22 9C 89     	ld (Posicion_actual),hl
 278+ 9473 CD A1 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9476 18 06            jr 9F
 280+ 9478 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 947A 32 C8 89         ld (Ctrl_0),a
 282+ 947D F1           	pop af
 283+ 947E C1           9 pop bc
 284+ 947F 1E 00        	ld e,0
 285+ 9481 CD B1 94         call Inicializacion
 286+ 9484 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9485 08           	ex af,af
 288+ 9486 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9487 18 8B            jr 3B
 290+ 9489
 291+ 9489              ; --------------------
 292+ 9489
 293+ 9489 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 948B CD 05 96     1 call PreviousScan
 295+ 948E 10 FB            djnz 1B
 296+ 9490 22 9C 89     	ld (Posicion_actual),hl
 297+ 9493 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9494 C9           	ret
 299+ 9495
 300+ 9495              ; --------------------
 301+ 9495
 302+ 9495 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9497 CD F6 95     1 call NextScan
 304+ 949A 10 FB            djnz 1B
 305+ 949C 22 9C 89     	ld (Posicion_actual),hl
 306+ 949F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94A0 C9           	ret
 308+ 94A1
 309+ 94A1              ; --------------------
 310+ 94A1              ;
 311+ 94A1              ;	22/01/23
 312+ 94A1              ;
 313+ 94A1              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94A1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94A1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94A1
 317+ 94A1
 318+ 94A1              Modificaccionne
 319+ 94A1
 320+ 94A1 3A AE 89     	ld a,(Cuad_objeto)
 321+ 94A4 FE 02        	cp 2
 322+ 94A6 CC 89 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94A9 DC 89 94         call c,Modifica_Pos_actual
 324+ 94AC C8           	ret z
 325+ 94AD CD 95 94         call Modifica_Pos_actual2
 326+ 94B0 C9               ret
 327+ 94B1
 328+ 94B1              ; *************************************************************************************************************************************************************************************************
 329+ 94B1              ;
 330+ 94B1              ;	13/8/22
 331+ 94B1              ;
 332+ 94B1              ;	Inicializacion
 333+ 94B1              ;
 334+ 94B1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94B1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94B1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94B1              ;
 338+ 94B1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94B1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94B1              ;	_ desaparece/aparece.
 341+ 94B1
 342+ 94B1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94B1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94B1              ;
 345+ 94B1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94B1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94B1              ; 		   [E] ="0"
 348+ 94B1
 349+ 94B1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94B1
 351+ 94B1 CD B6 98     Inicializacion call calcula_tercio
 352+ 94B4 28 36        	jr z,primit
 353+ 94B6 E6 02        	and 2
 354+ 94B8 20 07        	jr nz,segmit
 355+ 94BA 7D           	ld a,l
 356+ 94BB FE 7F        	cp $7f
 357+ 94BD 38 2D        	jr c,primit
 358+ 94BF 28 2B        	jr z,primit
 359+ 94C1 CD 1E 95     segmit call column
 360+ 94C4 38 13        	jr c,tercuad
 361+ 94C6 3E 04        cuarcuad ld a,4
 362+ 94C8 32 AE 89     	ld (Cuad_objeto),a
 363+ 94CB 21 20 48     	ld hl,$4820
 364+ 94CE 22 D3 89     	ld (Limite_horizontal),hl
 365+ 94D1 21 D5 89     	ld hl,Limite_vertical
 366+ 94D4 36 0D        	ld (hl),$0d
 367+ 94D6 08           	ex af,af
 368+ 94D7 18 3C        	jr 1F
 369+ 94D9              tercuad
 370+ 94D9 3E 03        	ld a,3
 371+ 94DB 32 AE 89     	ld (Cuad_objeto),a
 372+ 94DE 21 20 48     	ld hl,$4820
 373+ 94E1 22 D3 89     	ld (Limite_horizontal),hl
 374+ 94E4 21 D5 89     	ld hl,Limite_vertical
 375+ 94E7 36 12        	ld (hl),$12
 376+ 94E9 08           	ex af,af
 377+ 94EA 18 29        	jr 1F
 378+ 94EC CD 1E 95     primit call column
 379+ 94EF 38 13        	jr c, primcuad
 380+ 94F1              segcuad
 381+ 94F1 3E 02        	ld a,2
 382+ 94F3 32 AE 89     	ld (Cuad_objeto),a
 383+ 94F6 21 C0 4F     	ld hl,$4fc0
 384+ 94F9 22 D3 89     	ld (Limite_horizontal),hl
 385+ 94FC 21 D5 89     	ld hl,Limite_vertical
 386+ 94FF 36 0D        	ld (hl),$0d
 387+ 9501 08           	ex af,af
 388+ 9502 18 11        	jr 1F
 389+ 9504              primcuad
 390+ 9504 3E 01        	ld a,1
 391+ 9506 32 AE 89     	ld (Cuad_objeto),a
 392+ 9509 21 C0 4F     	ld hl,$4fc0
 393+ 950C 22 D3 89     	ld (Limite_horizontal),hl
 394+ 950F 21 D5 89     	ld hl,Limite_vertical
 395+ 9512 36 12        	ld (hl),$12
 396+ 9514 08           	ex af,af
 397+ 9515 CD 22 9C     1 call Genera_coordenadas
 398+ 9518 21 C8 89     	ld hl,Ctrl_0
 399+ 951B CB EE        	set 5,(hl)
 400+ 951D C9           	ret
 401+ 951E
 402+ 951E              ; ------------------------------------------------------------------------------------------------------------------
 403+ 951E
 404+ 951E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 951E              ;
 406+ 951E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 951E
 408+ 951E 7D           column ld a,l
 409+ 951F E6 1F        	and $1f
 410+ 9521 FE 10         	cp $10
 411+ 9523 C9            	ret
 412+ 9524
 413+ 9524              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9524              ;
 415+ 9524              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9524              ;
 417+ 9524              ; 14/12/22
 418+ 9524              ;
 419+ 9524              ;	Modifica: A y BC.
 420+ 9524
 421+ 9524 3A AE 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9527 E6 01        	and 1
 423+ 9529 28 17        	jr z,1F
 424+ 952B
 425+ 952B              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 952B
 427+ 952B 3A A0 89     	ld a,(Coordenada_X)
 428+ 952E 47           	ld b,a
 429+ 952F 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9530 79           	ld a,c
 431+ 9531 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9532 38 08        	jr c,2F
 433+ 9534 47           	ld b,a
 434+ 9535 79           	ld a,c
 435+ 9536 90           	sub b
 436+ 9537 32 D2 89     	ld (Columnas),a
 437+ 953A 18 1B        	jr 4F
 438+ 953C 79           2 ld a,c
 439+ 953D 32 D2 89     	ld (Columnas),a
 440+ 9540 18 15        	jr 4F
 441+ 9542
 442+ 9542              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9542
 444+ 9542 3A A0 89     1 ld a,(Coordenada_X)
 445+ 9545 81           	add c
 446+ 9546 3D           	dec a
 447+ 9547 D6 1F        	sub $1f
 448+ 9549 38 08        	jr c,3F
 449+ 954B 47           	ld b,a
 450+ 954C 79           	ld a,c
 451+ 954D 90           	sub b
 452+ 954E 32 D2 89     	ld (Columnas),a
 453+ 9551 18 04        	jr 4F
 454+ 9553 79           3 ld a,c
 455+ 9554 32 D2 89     	ld (Columnas),a
 456+ 9557 D9           4 exx
 457+ 9558 4F           	ld c,a
 458+ 9559 D9           	exx
 459+ 955A C9            ret
 460+ 955B
 461+ 955B              ; --------------------------------------------------------------------------------------------------------------------
 462+ 955B              ;
 463+ 955B              ; 7/1/23
 464+ 955B              ;
 465+ 955B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 955B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 955B              ;
 468+ 955B              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 955B              ;	DESTRUYE: HL,B Y A.
 470+ 955B
 471+ 955B 3A AE 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 955E FE 02        	cp 2
 473+ 9560 38 18        	jr c,1F
 474+ 9562 28 16        	jr z,1F
 475+ 9564 E6 01        	and 1
 476+ 9566 28 0D        	jr z,3F
 477+ 9568
 478+ 9568              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9568
 480+ 9568 CD A4 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 956B
 482+ 956B 7D           9 ld a,l
 483+ 956C E6 1F        	and $1f
 484+ 956E 28 2A        	jr z,7F
 485+ 9570 2B           	dec hl
 486+ 9571 10 F8        	djnz 9B
 487+ 9573 18 25        	jr 7F
 488+ 9575
 489+ 9575              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9575
 491+ 9575 2A 9C 89     3 ld hl,(Posicion_actual)
 492+ 9578 18 20        	jr 7F
 493+ 957A
 494+ 957A 28 14        1 jr z,2F
 495+ 957C
 496+ 957C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 957C
 498+ 957C CD A4 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 957F
 500+ 957F 7D           4 ld a,l
 501+ 9580 E6 1F        	and $1f
 502+ 9582 28 03        	jr z,6F
 503+ 9584 2B           	dec hl
 504+ 9585 10 F8        	djnz 4B
 505+ 9587 06 0F        6 ld b,15
 506+ 9589 CD 05 96     5 call PreviousScan
 507+ 958C 10 FB        	djnz 5B
 508+ 958E 18 0A        	jr 7F
 509+ 9590
 510+ 9590              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 9590
 512+ 9590 CD A4 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 9593 06 0F        	ld b,15
 514+ 9595 CD 05 96     8 call PreviousScan
 515+ 9598 10 FB        	djnz 8B
 516+ 959A
 517+ 959A E5           7 push hl
 518+ 959B DD E1        	pop ix
 519+ 959D
 520+ 959D 2A 9E 89     	ld hl,(Puntero_objeto)
 521+ 95A0 E5           	push hl
 522+ 95A1 FD E1        	pop iy
 523+ 95A3
 524+ 95A3 C9           	ret
 525+ 95A4
 526+ 95A4              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95A4              ;
 528+ 95A4              ;	2/1/23
 529+ 95A4              ;
 530+ 95A4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95A4              ;
 532+ 95A4              ;	Tras esta rutina tenemos:
 533+ 95A4              ;
 534+ 95A4              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95A4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95A4              ;
 537+ 95A4              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95A4
 539+ 95A4 2A 9C 89     Operandos ld hl,(Posicion_actual)
 540+ 95A7 3A D2 89     	ld a,(Columnas)
 541+ 95AA 3D           	dec a
 542+ 95AB 20 01        	jr nz,1F
 543+ 95AD 3C           	inc a
 544+ 95AE 47           1 ld b,a
 545+ 95AF C9           	ret
 546+ 95B0
 547+ 95B0              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95B0              ;
 549+ 95B0              ;	3/1/23
 550+ 95B0              ;
 551+ 95B0              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95B0              ;
 553+ 95B0              ;	Destruye: A,B,HL y DE.
 554+ 95B0
 555+ 95B0              Define_rutina_de_impresion
 556+ 95B0
 557+ 95B0 3A 9B 89     	ld a,(Columns)
 558+ 95B3 47           	ld b,a
 559+ 95B4 3A D2 89     	ld a,(Columnas)
 560+ 95B7 B8           	cp b
 561+ 95B8 20 0D        	jr nz,2f
 562+ 95BA
 563+ 95BA              ;	La entidad se imprime entera.
 564+ 95BA
 565+ 95BA 21 86 96     	ld hl, Indice_entidades_completas
 566+ 95BD E6 01        	and 1
 567+ 95BF 28 02        	jr z,1F
 568+ 95C1
 569+ 95C1 23           	inc hl
 570+ 95C2 23           	inc hl
 571+ 95C3
 572+ 95C3 CD 04 8D     1 call Extrae_address
 573+ 95C6 C9           	ret		;	ret
 574+ 95C7
 575+ 95C7              ;	La entidad no se imprime entera en pantalla.
 576+ 95C7
 577+ 95C7 3A AE 89     2 ld a,(Cuad_objeto)
 578+ 95CA E6 01        	and 1
 579+ 95CC 28 17        	jr z,3F
 580+ 95CE
 581+ 95CE              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95CE
 583+ 95CE 21 8A 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95D1 3A 9B 89     4 ld a,(Columns)
 585+ 95D4 E6 01        	and 1
 586+ 95D6 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95D8
 588+ 95D8 23           	inc hl
 589+ 95D9 23           	inc hl
 590+ 95DA
 591+ 95DA 3A D2 89     	ld a,(Columnas)
 592+ 95DD E6 01        	and 1
 593+ 95DF 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95E1
 595+ 95E1 23           	inc hl
 596+ 95E2 23           	inc hl
 597+ 95E3
 598+ 95E3 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95E5
 600+ 95E5 21 90 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95E8 18 E7        	jr 4B
 602+ 95EA
 603+ 95EA              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95EA              ;
 605+ 95EA              ;	Prepara_draw
 606+ 95EA              ;
 607+ 95EA              ;	Es una rutina de carga.
 608+ 95EA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95EA              ;
 610+ 95EA              ;	FUNCIONAMIENTO:
 611+ 95EA              ;
 612+ 95EA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95EA              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95EA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95EA              ;
 616+ 95EA              ;	DESTRUYE:
 617+ 95EA              ;
 618+ 95EA              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95EA
 620+ 95EA 21 9A 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95ED 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95EE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95EF 4E           	ld c,(hl)
 624+ 95F0 2A 9C 89     	ld hl,(Posicion_actual)
 625+ 95F3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95F5 C9           	ret
 627+ 95F6
 628+ 95F6              ;----------------------------------------------------------------------------------------------------------------
 629+ 95F6              ;
 630+ 95F6              ;	5/08/22
 631+ 95F6              ;
 632+ 95F6              ;   NextScan.
 633+ 95F6              ;
 634+ 95F6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95F6              ;
 636+ 95F6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95F6              ;
 638+ 95F6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95F6              ;
 640+ 95F6              ;       DESTRUIDOS: AF y HL !!!
 641+ 95F6              ;
 642+ 95F6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95F6              ;
 644+ 95F6
 645+ 95F6 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95F7 7C               ld a,h
 647+ 95F8 E6 07            and 7
 648+ 95FA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 95FB
 650+ 95FB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 95FC C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 95FE 6F               ld l,a
 653+ 95FF D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9600
 655+ 9600 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9601 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9603 67               ld h,a
 658+ 9604 C9               ret
 659+ 9605
 660+ 9605              ;----------------------------------------------------------------------------------------------------------------
 661+ 9605              ;
 662+ 9605              ;	5/08/22
 663+ 9605              ;
 664+ 9605              ;   PreviousScan.
 665+ 9605              ;
 666+ 9605              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9605              ;
 668+ 9605              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9605              ;
 670+ 9605              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9605              ;
 672+ 9605              ;       DESTRUIDOS: AF y HL !!!
 673+ 9605              ;
 674+ 9605              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9605              ;
 676+ 9605
 677+ 9605 7C           PreviousScan ld a,h
 678+ 9606 25               dec h               ; Dec H.
 679+ 9607 E6 07            and 7
 680+ 9609 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 960A
 682+ 960A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 960B D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 960D 6F               ld l,a
 685+ 960E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 960F
 687+ 960F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9610 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9612 67               ld h,a
 690+ 9613 C9               ret
 691+ 9614
 692+ 9614              ; -----------------------------------------------------------------------------------
 693+ 9614              ;
 694+ 9614              ;	28/2/23
 695+ 9614              ;
 696+ 9614              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9614              ;	Extrae fotos de Album_de_fotos.
 698+ 9614
 699+ 9614 3A E4 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9617 A7           	and a
 701+ 9618 C8           	ret z
 702+ 9619 ED 73 E9 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 961D 31 00 70     	ld sp,Album_de_fotos
 704+ 9620
 705+ 9620 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9622 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9623 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9624
 709+ 9624 ED 73 EB 89  	ld (Stack_2),sp
 710+ 9628 ED 7B E9 89  	ld sp,(Stack)
 711+ 962C
 712+ 962C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 962C
 714+ 962C 3E CD        	ld a,$cd
 715+ 962E 32 36 96     	ld (Imprime),a
 716+ 9631 EB           	ex de,hl
 717+ 9632 22 37 96     	ld (Imprime+1),hl
 718+ 9635 EB           	ex de,hl
 719+ 9636
 720+ 9636              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9636
 722+ 9636 00 00 00     Imprime db 0,0,0
 723+ 9639
 724+ 9639 3A E4 89     	ld a,(Numero_de_malotes)
 725+ 963C 3D           	dec a
 726+ 963D 28 09        	jr z,1F
 727+ 963F 32 E4 89      	ld (Numero_de_malotes),a
 728+ 9642
 729+ 9642 ED 7B EB 89   	ld sp,(Stack_2)
 730+ 9646 18 D8        	jr 2B
 731+ 9648
 732+ 9648 AF           1 xor a
 733+ 9649 32 EB 89     	ld (Stack_2),a
 734+ 964C C9           	ret
 735+ 964D
 736+ 964D              ; -----------------------------------------------------------------------------------
 737+ 964D              ;
 738+ 964D              ;	28/2/23
 739+ 964D              ;
 740+ 964D              ;	Pinta los disparos generados.
 741+ 964D
 742+ 964D              Extrae_foto_disparos
 743+ 964D
 744+ 964D 3A F1 89     	ld a,(Numero_de_disparotes)
 745+ 9650 A7           	and a
 746+ 9651 C8           	ret z
 747+ 9652 ED 73 E9 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9656 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9659
 750+ 9659 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 965B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 965C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 965D
 754+ 965D ED 73 EB 89  	ld (Stack_2),sp
 755+ 9661 ED 7B E9 89  	ld sp,(Stack)
 756+ 9665
 757+ 9665              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9665
 759+ 9665 3E CD        	ld a,$cd
 760+ 9667 32 6F 96     	ld (Imprime2),a
 761+ 966A EB           	ex de,hl
 762+ 966B 22 70 96     	ld (Imprime2+1),hl
 763+ 966E EB           	ex de,hl
 764+ 966F
 765+ 966F              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 966F
 767+ 966F 00 00 00     Imprime2 db 0,0,0
 768+ 9672
 769+ 9672 3A F1 89     	ld a,(Numero_de_disparotes)
 770+ 9675 3D           	dec a
 771+ 9676 28 09        	jr z,1F
 772+ 9678 32 F1 89      	ld (Numero_de_disparotes),a
 773+ 967B
 774+ 967B ED 7B EB 89  	ld sp,(Stack_2)
 775+ 967F 18 D8        	jr 2B
 776+ 9681
 777+ 9681 AF           1 xor a
 778+ 9682 32 EB 89     	ld (Stack_2),a
 779+ 9685 C9           	ret
 780+ 9686
# file closed: Draw_XOR.asm
1248  9686              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9686              ;   índices de Rutinas de impresión.
   2+ 9686
   3+ 9686 96 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9688 C3 96            defw Pinta_Amadeus_3x2
   5+ 968A
   6+ 968A 19 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 968C B9 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 968E 6D 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9690
  10+ 9690 43 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9692 47 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9694 FB 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9696
  14+ 9696
  15+ 9696              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9696              ;
  17+ 9696              ;   12/12/22
  18+ 9696              ;
  19+ 9696              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9696              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9696              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9696              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9696              ;
  24+ 9696              ;   Modifica: DE y HL.
  25+ 9696
  26+ 9696 ED 73 E9 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 969A FD F9        	ld sp,iy
  28+ 969C 06 10            ld b,16
  29+ 969E D1           1 pop de
  30+ 969F 7B               ld a,e
  31+ 96A0 AE               xor (hl)
  32+ 96A1 77           	ld (hl),a
  33+ 96A2 23           	inc hl
  34+ 96A3 7A               ld a,d
  35+ 96A4 AE               xor (hl)
  36+ 96A5 77           	ld (hl),a
  37+ 96A6 2B           	dec hl
  38+ 96A7 24           	inc h
  39+ 96A8 7C               ld a,h
  40+ 96A9 E6 07            and 7
  41+ 96AB 20 0A            jr nz,2F
  42+ 96AD 7D               ld a,l
  43+ 96AE C6 20            add a,$20
  44+ 96B0 6F               ld l,a
  45+ 96B1 38 04            jr c,2F
  46+ 96B3 7C               ld a,h
  47+ 96B4 D6 08            sub 8
  48+ 96B6 67               ld h,a
  49+ 96B7 7C           2 ld a,h
  50+ 96B8 FE 58            cp $58
  51+ 96BA 28 02            jr z,3F
  52+ 96BC 10 E0            djnz 1B
  53+ 96BE ED 7B E9 89  3 ld sp,(Stack)
  54+ 96C2 C9           	ret
  55+ 96C3
  56+ 96C3 ED 73 E9 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96C7 FD F9        	ld sp,iy
  58+ 96C9 06 08            ld b,8
  59+ 96CB D1           1 pop de
  60+ 96CC 7B               ld a,e
  61+ 96CD AE               xor (hl)
  62+ 96CE 77           	ld (hl),a
  63+ 96CF 23           	inc hl
  64+ 96D0 7A               ld a,d
  65+ 96D1 AE               xor (hl)
  66+ 96D2 77           	ld (hl),a
  67+ 96D3 23           	inc hl
  68+ 96D4 D1           	pop de
  69+ 96D5 7B               ld a,e
  70+ 96D6 AE               xor (hl)
  71+ 96D7 77           	ld (hl),a
  72+ 96D8 2B           	dec hl
  73+ 96D9 2B           	dec hl
  74+ 96DA 24           	inc h
  75+ 96DB 7C               ld a,h
  76+ 96DC E6 07            and 7
  77+ 96DE 20 0A            jr nz,2F
  78+ 96E0 7D               ld a,l
  79+ 96E1 C6 20            add a,$20
  80+ 96E3 6F               ld l,a
  81+ 96E4 38 04            jr c,2F
  82+ 96E6 7C               ld a,h
  83+ 96E7 D6 08            sub 8
  84+ 96E9 67               ld h,a
  85+ 96EA 7C           2 ld a,h
  86+ 96EB FE 58            cp $58
  87+ 96ED 28 25            jr z,4F
  88+ 96EF 7A               ld a,d
  89+ 96F0 AE               xor (hl)
  90+ 96F1 77               ld (hl),a
  91+ 96F2 D1           	pop de
  92+ 96F3 23           	inc hl
  93+ 96F4 7B               ld a,e
  94+ 96F5 AE               xor (hl)
  95+ 96F6 77           	ld (hl),a
  96+ 96F7 23           	inc hl
  97+ 96F8 7A               ld a,d
  98+ 96F9 AE               xor (hl)
  99+ 96FA 77           	ld (hl),a
 100+ 96FB 2B           	dec hl
 101+ 96FC 2B           	dec hl
 102+ 96FD 24           	inc h
 103+ 96FE 7C               ld a,h
 104+ 96FF E6 07            and 7
 105+ 9701 20 0A            jr nz,3F
 106+ 9703 7D               ld a,l
 107+ 9704 C6 20            add a,$20
 108+ 9706 6F               ld l,a
 109+ 9707 38 04            jr c,3F
 110+ 9709 7C               ld a,h
 111+ 970A D6 08            sub 8
 112+ 970C 67               ld h,a
 113+ 970D 7C           3 ld a,h
 114+ 970E FE 58            cp $58
 115+ 9710 28 02            jr z,4F
 116+ 9712 10 B7            djnz 1B
 117+ 9714 ED 7B E9 89  4 ld sp,(Stack)
 118+ 9718 C9           	ret
 119+ 9719
 120+ 9719              ; ---------------------------------------------------
 121+ 9719
 122+ 9719 ED 73 E9 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 971D FD F9        	ld sp,iy
 124+ 971F
 125+ 971F              ; >>>
 126+ 971F
 127+ 971F 06 10            ld b,16
 128+ 9721 D1           1 pop de
 129+ 9722 7A           	ld a,d
 130+ 9723 AE           	xor (hl)
 131+ 9724 77           	ld (hl),a
 132+ 9725 24           	inc h
 133+ 9726 7C               ld a,h
 134+ 9727 E6 07            and 7
 135+ 9729 20 0C            jr nz,2F
 136+ 972B 7D               ld a,l
 137+ 972C C6 20            add a,$20
 138+ 972E 6F               ld l,a
 139+ 972F 38 06            jr c,2F
 140+ 9731 7C               ld a,h
 141+ 9732 D6 08            sub 8
 142+ 9734 67               ld h,a
 143+ 9735 18 00            jr 2F
 144+ 9737 7C           2 ld a,h
 145+ 9738 FE 58            cp $58
 146+ 973A 28 02            jr z,3F
 147+ 973C 10 E3            djnz 1B
 148+ 973E ED 7B E9 89  3 ld sp,(Stack)
 149+ 9742 C9           	ret
 150+ 9743
 151+ 9743 ED 73 E9 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9747 FD F9        	ld sp,iy
 153+ 9749
 154+ 9749              ; >>>
 155+ 9749
 156+ 9749 06 10            ld b,16
 157+ 974B D1           1 pop de
 158+ 974C 7B           	ld a,e
 159+ 974D AE           	xor (hl)
 160+ 974E 77           	ld (hl),a
 161+ 974F 24           	inc h
 162+ 9750 7C               ld a,h
 163+ 9751 E6 07            and 7
 164+ 9753 20 0C            jr nz,2F
 165+ 9755 7D               ld a,l
 166+ 9756 C6 20            add a,$20
 167+ 9758 6F               ld l,a
 168+ 9759 38 06            jr c,2F
 169+ 975B 7C               ld a,h
 170+ 975C D6 08            sub 8
 171+ 975E 67               ld h,a
 172+ 975F 18 00            jr 2F
 173+ 9761 7C           2 ld a,h
 174+ 9762 FE 58            cp $58
 175+ 9764 28 02            jr z,3F
 176+ 9766 10 E3            djnz 1B
 177+ 9768 ED 7B E9 89  3 ld sp,(Stack)
 178+ 976C C9           	ret
 179+ 976D
 180+ 976D              ; ---------------------------------------------------
 181+ 976D
 182+ 976D ED 73 E9 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9771 FD F9        	ld sp,iy
 184+ 9773 06 08            ld b,8
 185+ 9775 D1           1 pop de
 186+ 9776 7A           	ld a,d
 187+ 9777 AE           	xor (hl)
 188+ 9778 77           	ld (hl),a
 189+ 9779 23           	inc hl
 190+ 977A D1           	pop de
 191+ 977B 7B           	ld a,e
 192+ 977C AE           	xor (hl)
 193+ 977D 77           	ld (hl),a
 194+ 977E 2B           	dec hl
 195+ 977F 24            	inc h
 196+ 9780 7C               ld a,h
 197+ 9781 E6 07            and 7
 198+ 9783 20 0A            jr nz,2F
 199+ 9785 7D               ld a,l
 200+ 9786 C6 20            add a,$20
 201+ 9788 6F               ld l,a
 202+ 9789 38 04            jr c,2F
 203+ 978B 7C               ld a,h
 204+ 978C D6 08            sub 8
 205+ 978E 67               ld h,a
 206+ 978F 7C           2 ld a,h
 207+ 9790 FE 58            cp $58
 208+ 9792 28 20            jr z,4F
 209+ 9794 D1               pop de
 210+ 9795 7B           	ld a,e
 211+ 9796 AE           	xor (hl)
 212+ 9797 77           	ld (hl),a
 213+ 9798 23           	inc hl
 214+ 9799 7A           	ld a,d
 215+ 979A AE           	xor (hl)
 216+ 979B 77           	ld (hl),a
 217+ 979C 2B           	dec hl
 218+ 979D 24           	inc h
 219+ 979E 7C               ld a,h
 220+ 979F E6 07            and 7
 221+ 97A1 20 0A            jr nz,3F
 222+ 97A3 7D               ld a,l
 223+ 97A4 C6 20            add a,$20
 224+ 97A6 6F               ld l,a
 225+ 97A7 38 04            jr c,3F
 226+ 97A9 7C               ld a,h
 227+ 97AA D6 08            sub 8
 228+ 97AC 67               ld h,a
 229+ 97AD 7C           3 ld a,h
 230+ 97AE FE 58            cp $58
 231+ 97B0 28 02            jr z,4F
 232+ 97B2 10 C1            djnz 1B
 233+ 97B4 ED 7B E9 89  4 ld sp,(Stack)
 234+ 97B8 C9           	ret
 235+ 97B9
 236+ 97B9 ED 73 E9 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97BD FD F9        	ld sp,iy
 238+ 97BF 06 08            ld b,8
 239+ 97C1 D1           1 pop de
 240+ 97C2 D1           	pop de
 241+ 97C3 7B           	ld a,e
 242+ 97C4 AE           	xor (hl)
 243+ 97C5 77           	ld (hl),a
 244+ 97C6 24            	inc h
 245+ 97C7 7C               ld a,h
 246+ 97C8 E6 07            and 7
 247+ 97CA 20 0A            jr nz,2F
 248+ 97CC 7D               ld a,l
 249+ 97CD C6 20            add a,$20
 250+ 97CF 6F               ld l,a
 251+ 97D0 38 04            jr c,2F
 252+ 97D2 7C               ld a,h
 253+ 97D3 D6 08            sub 8
 254+ 97D5 67               ld h,a
 255+ 97D6 7C           2 ld a,h
 256+ 97D7 FE 58            cp $58
 257+ 97D9 28 1B            jr z,4F
 258+ 97DB D1               pop de
 259+ 97DC 7A           	ld a,d
 260+ 97DD AE           	xor (hl)
 261+ 97DE 77           	ld (hl),a
 262+ 97DF 24           	inc h
 263+ 97E0 7C               ld a,h
 264+ 97E1 E6 07            and 7
 265+ 97E3 20 0A            jr nz,3F
 266+ 97E5 7D               ld a,l
 267+ 97E6 C6 20            add a,$20
 268+ 97E8 6F               ld l,a
 269+ 97E9 38 04            jr c,3F
 270+ 97EB 7C               ld a,h
 271+ 97EC D6 08            sub 8
 272+ 97EE 67               ld h,a
 273+ 97EF 7C           3 ld a,h
 274+ 97F0 FE 58            cp $58
 275+ 97F2 28 02            jr z,4F
 276+ 97F4 10 CB            djnz 1B
 277+ 97F6 ED 7B E9 89  4 ld sp,(Stack)
 278+ 97FA C9           	ret
 279+ 97FB
 280+ 97FB ED 73 E9 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97FF FD F9        	ld sp,iy
 282+ 9801 06 08            ld b,8
 283+ 9803 D1           1 pop de
 284+ 9804 7B           	ld a,e
 285+ 9805 AE           	xor (hl)
 286+ 9806 77           	ld (hl),a
 287+ 9807 23           	inc hl
 288+ 9808 7A           	ld a,d
 289+ 9809 AE           	xor (hl)
 290+ 980A 77           	ld (hl),a
 291+ 980B 2B           	dec hl
 292+ 980C 24             	inc h
 293+ 980D 7C               ld a,h
 294+ 980E E6 07            and 7
 295+ 9810 20 0A            jr nz,2F
 296+ 9812 7D               ld a,l
 297+ 9813 C6 20            add a,$20
 298+ 9815 6F               ld l,a
 299+ 9816 38 04            jr c,2F
 300+ 9818 7C               ld a,h
 301+ 9819 D6 08            sub 8
 302+ 981B 67               ld h,a
 303+ 981C 7C           2 ld a,h
 304+ 981D FE 58            cp $58
 305+ 981F 28 21            jr z,4F
 306+ 9821 D1               pop de
 307+ 9822 7A           	ld a,d
 308+ 9823 AE           	xor (hl)
 309+ 9824 77           	ld (hl),a
 310+ 9825 23           	inc hl
 311+ 9826 D1               pop de
 312+ 9827 7B           	ld a,e
 313+ 9828 AE           	xor (hl)
 314+ 9829 77           	ld (hl),a
 315+ 982A 2B           	dec hl
 316+ 982B 24           	inc h
 317+ 982C 7C               ld a,h
 318+ 982D E6 07            and 7
 319+ 982F 20 0A            jr nz,3F
 320+ 9831 7D               ld a,l
 321+ 9832 C6 20            add a,$20
 322+ 9834 6F               ld l,a
 323+ 9835 38 04            jr c,3F
 324+ 9837 7C               ld a,h
 325+ 9838 D6 08            sub 8
 326+ 983A 67               ld h,a
 327+ 983B 7C           3 ld a,h
 328+ 983C FE 58            cp $58
 329+ 983E 28 02            jr z,4F
 330+ 9840 10 C1            djnz 1B
 331+ 9842 ED 7B E9 89  4 ld sp,(Stack)
 332+ 9846 C9           	ret
 333+ 9847
 334+ 9847 ED 73 E9 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 984B FD F9        	ld sp,iy
 336+ 984D 06 08            ld b,8
 337+ 984F D1           1 pop de
 338+ 9850 7B           	ld a,e
 339+ 9851 AE           	xor (hl)
 340+ 9852 77           	ld (hl),a
 341+ 9853 24            	inc h
 342+ 9854 7C               ld a,h
 343+ 9855 E6 07            and 7
 344+ 9857 20 0A            jr nz,2F
 345+ 9859 7D               ld a,l
 346+ 985A C6 20            add a,$20
 347+ 985C 6F               ld l,a
 348+ 985D 38 04            jr c,2F
 349+ 985F 7C               ld a,h
 350+ 9860 D6 08            sub 8
 351+ 9862 67               ld h,a
 352+ 9863 7C           2 ld a,h
 353+ 9864 FE 58            cp $58
 354+ 9866 28 1C            jr z,4F
 355+ 9868 D1               pop de
 356+ 9869 7A           	ld a,d
 357+ 986A AE           	xor (hl)
 358+ 986B 77           	ld (hl),a
 359+ 986C 24           	inc h
 360+ 986D 7C               ld a,h
 361+ 986E E6 07            and 7
 362+ 9870 20 0A            jr nz,3F
 363+ 9872 7D               ld a,l
 364+ 9873 C6 20            add a,$20
 365+ 9875 6F               ld l,a
 366+ 9876 38 04            jr c,3F
 367+ 9878 7C               ld a,h
 368+ 9879 D6 08            sub 8
 369+ 987B 67               ld h,a
 370+ 987C 7C           3 ld a,h
 371+ 987D FE 58            cp $58
 372+ 987F 28 03            jr z,4F
 373+ 9881 D1               pop de
 374+ 9882 10 CB            djnz 1B
 375+ 9884 ED 7B E9 89  4 ld sp,(Stack)
 376+ 9888 C9           	ret
 377+ 9889
 378+ 9889              ; ---------------------------------------------------
 379+ 9889              ;
 380+ 9889              ;   27/02/23
 381+ 9889              ;
 382+ 9889              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9889              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9889              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9889
 386+ 9889 ED 73 E9 89  Pinta_Disparo ld (Stack),sp
 387+ 988D FD F9            ld sp,iy
 388+ 988F 06 04            ld b,4
 389+ 9891 D1           1 pop de
 390+ 9892 7B               ld a,e
 391+ 9893 AE               xor (hl)
 392+ 9894 77               ld (hl),a
 393+ 9895 23               inc hl
 394+ 9896 7A               ld a,d
 395+ 9897 AE               xor (hl)
 396+ 9898 77               ld (hl),a
 397+ 9899 2B               dec hl
 398+ 989A
 399+ 989A 24               inc h
 400+ 989B 7C               ld a,h
 401+ 989C E6 07            and 7
 402+ 989E 20 0A            jr nz,2F
 403+ 98A0 7D               ld a,l
 404+ 98A1 C6 20            add a,$20
 405+ 98A3 6F               ld l,a
 406+ 98A4 38 04            jr c,2F
 407+ 98A6 7C               ld a,h
 408+ 98A7 D6 08            sub 8
 409+ 98A9 67               ld h,a
 410+ 98AA 7C           2 ld a,h
 411+ 98AB FE 58            cp $58
 412+ 98AD 28 02            jr z,3F
 413+ 98AF
 414+ 98AF 10 E0            djnz 1B
 415+ 98B1 ED 7B E9 89  3 ld sp,(Stack)
 416+ 98B5 C9               ret
 417+ 98B6
# file closed: Rutinas_de_impresion_sprites.asm
1249  98B6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98B6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98B6              ;
   3+ 98B6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98B6              ;
   5+ 98B6              ; *****************************************************************************************************************************************************************************************
   6+ 98B6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98B6
   8+ 98B6 7C           calcula_tercio ld a,h
   9+ 98B7 E6 18        	and $18
  10+ 98B9 CB 2F        	sra a
  11+ 98BB CB 2F        	sra a
  12+ 98BD CB 2F        	sra a
  13+ 98BF C9           	ret
  14+ 98C0
# file closed: calcula_tercio.asm
1250  98C0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98C0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98C0              ;
   3+ 98C0              ;
   4+ 98C0              ;	CLS.
   5+ 98C0              ;
   6+ 98C0              ;	Limpia la pantalla y define sus atributos.
   7+ 98C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98C0              ;
   9+ 98C0              ;	COLORES: 0 ..... NEGRO
  10+ 98C0              ;    		 1 ..... AZUL
  11+ 98C0              ; 			 2 ..... ROJO
  12+ 98C0              ;			 3 ..... MAGENTA
  13+ 98C0              ; 			 4 ..... VERDE
  14+ 98C0              ; 			 5 ..... CIAN
  15+ 98C0              ;			 6 ..... AMARILLO
  16+ 98C0              ; 			 7 ..... BLANCO
  17+ 98C0              ;
  18+ 98C0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98C0              ;
  20+ 98C0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98C0
  22+ 98C0
  23+ 98C0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98C3 11 01 40     	LD DE,$4001
  25+ 98C6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98C9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98CB ED B0        	LDIR
  28+ 98CD 01 FF 02     	LD BC,767
  29+ 98D0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98D1 ED B0        	LDIR
  31+ 98D3 C9           	ret
  32+ 98D4
# file closed: Cls.asm
1251  98D4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98D4              ; ******************************************************************************************************************************************************************************************
   2+ 98D4              ;
   3+ 98D4              ;   20/05/23
   4+ 98D4              ;
   5+ 98D4              ;	Recompone_posicion_inicio
   6+ 98D4              ;
   7+ 98D4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98D4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98D4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98D4              ;	_ a una u otra rutina.
  11+ 98D4
  12+ 98D4              Recompone_posicion_inicio
  13+ 98D4
  14+ 98D4 2A AC 89     	ld hl,(Posicion_inicio)
  15+ 98D7 7D           	ld a,l
  16+ 98D8 E6 1F        	and $1f
  17+ 98DA 28 16        	jr z,1F
  18+ 98DC
  19+ 98DC FE 1F        	cp $1f
  20+ 98DE 28 0D        	jr z,3F
  21+ 98E0
  22+ 98E0 21 D6 89     	ld hl,Ctrl_2
  23+ 98E3 CB C6        	set 0,(hl)
  24+ 98E5 2A 9E 89     	ld hl,(Puntero_objeto)
  25+ 98E8 22 D9 89     	ld (Repone_puntero_objeto),hl
  26+ 98EB 18 08        	jr 2F
  27+ 98ED
  28+ 98ED CD 8E 9A     3 call Mov_left
  29+ 98F0 18 03        	jr 2F
  30+ 98F2
  31+ 98F2 CD 70 99     1 call Mov_right
  32+ 98F5 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98F8 22 9E 89     	ld (Puntero_objeto),hl
  34+ 98FB C9           	ret
  35+ 98FC
  36+ 98FC              ; ******************************************************************************************************************************************************************************************
  37+ 98FC              ;
  38+ 98FC              ;   27/05/23
  39+ 98FC              ;
  40+ 98FC              ;	Mov_down
  41+ 98FC              ;
  42+ 98FC              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98FC              ;
  44+ 98FC              ;
  45+ 98FC              Mov_down
  46+ 98FC
  47+ 98FC CD 5E 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98FF              ;																	; _ repone (Puntero_objeto).
  49+ 98FF 21 C8 89     	ld hl,Ctrl_0
  50+ 9902 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9904              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9904              ; 																	; _ en el caso de que no lo haya.
  53+ 9904 3A B2 89     	ld a,(Vel_down)
  54+ 9907 47           	ld b,a
  55+ 9908 2A 9C 89         ld hl,(Posicion_actual)
  56+ 990B CD B6 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 990E E6 02        	and 2
  58+ 9910 28 0F        	jr z,1F
  59+ 9912
  60+ 9912              ; Nos encontramos en el último tercio de pantalla.
  61+ 9912              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9912
  63+ 9912 7C           	ld a,h
  64+ 9913 FE 57        	cp $57
  65+ 9915 20 0A        	jr nz,1F
  66+ 9917 7D           	ld a,l
  67+ 9918 C6 20        	add $20
  68+ 991A 30 05        	jr nc,1F
  69+ 991C
  70+ 991C              ; ------------------------------
  71+ 991C CD 0C 9C     	call Reaparece_arriba
  72+ 991F              ;	call Reinicio
  73+ 991F              ; ------------------------------
  74+ 991F
  75+ 991F 18 08        	jr 3F
  76+ 9921 CD F6 95     1 call NextScan
  77+ 9924 22 9C 89     	ld (Posicion_actual),hl
  78+ 9927 10 E2            djnz 2B
  79+ 9929 CD 22 9C     3 call Genera_coordenadas
  80+ 992C C9           	ret
  81+ 992D
  82+ 992D              ; ******************************************************************************************************************************************************************************************
  83+ 992D              ;
  84+ 992D              ;   27/05/23
  85+ 992D              ;
  86+ 992D              ;	Mov_up
  87+ 992D              ;
  88+ 992D              ; 	Mueve el Sprite hacia arriba.
  89+ 992D              ;
  90+ 992D              ;
  91+ 992D              Mov_up
  92+ 992D
  93+ 992D CD 5E 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9930              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9930 21 C8 89     	ld hl,Ctrl_0
  96+ 9933 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9935              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9935              ; 																		; _ en el caso de que no lo haya.
  99+ 9935 3A B1 89     	ld a,(Vel_up)
 100+ 9938 47           	ld b,a
 101+ 9939 2A 9C 89     	ld hl,(Posicion_actual)
 102+ 993C CD B6 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 993F A7           	and a
 104+ 9940 20 10        	jr nz,1F
 105+ 9942
 106+ 9942              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9942              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9942
 109+ 9942 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9943 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9945 20 0B            jr nz,1F
 112+ 9947 7D               ld a,l
 113+ 9948 D6 20            sub $20
 114+ 994A 30 06            jr nc,1F
 115+ 994C 25               dec h
 116+ 994D
 117+ 994D              ; -----------------------------
 118+ 994D CD FC 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9950              ;	call Reinicio
 120+ 9950              ; -----------------------------
 121+ 9950
 122+ 9950 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9952 CD 05 96     1 call PreviousScan
 124+ 9955 22 9C 89     	ld (Posicion_actual),hl
 125+ 9958 10 E2            djnz 3B
 126+ 995A CD 22 9C     2 call Genera_coordenadas
 127+ 995D C9           	ret
 128+ 995E
 129+ 995E              ; -----------------------------
 130+ 995E              ;
 131+ 995E              ;	27/5/23
 132+ 995E              ;
 133+ 995E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 995E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 995E              ;
 136+ 995E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 995E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 995E              ;
 139+ 995E              ;	Modifica: A y (Puntero_objeto).
 140+ 995E
 141+ 995E 3A D6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9961 CB 47        	bit 0,a
 143+ 9963 C8           	ret z
 144+ 9964 CB 87        	res 0,a
 145+ 9966 32 D6 89     	ld (Ctrl_2),a
 146+ 9969 2A D9 89     	ld hl,(Repone_puntero_objeto)
 147+ 996C 22 9E 89     	ld (Puntero_objeto),hl
 148+ 996F C9           	ret
 149+ 9970
 150+ 9970              ; ******************************************************************************************************************************************************************************************
 151+ 9970              ;
 152+ 9970              ;	19/10/22
 153+ 9970              ;
 154+ 9970              ;	Mov_right.
 155+ 9970              ;
 156+ 9970              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9970              ;
 158+ 9970
 159+ 9970 21 C8 89     Mov_right ld hl,Ctrl_0
 160+ 9973 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9975              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9975              ; 																	; _ en el caso de que no lo haya.
 163+ 9975 3A C8 89     	ld a,(Ctrl_0)
 164+ 9978 CB 77        	bit 6,a
 165+ 997A 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 997C
 167+ 997C CD AA 9B     	call Stop_Amadeus_right
 168+ 997F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9980 18 4D        	jr 8F
 170+ 9982
 171+ 9982 3A A0 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9985 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 9987 20 46        	jr nz,8F
 174+ 9989
 175+ 9989 3A A2 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 998C A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 998D 28 40        	jr z,8F
 178+ 998F
 179+ 998F              ; ---------- ---------- ----------
 180+ 998F              ;
 181+ 998F              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 998F
 183+ 998F 3A B0 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 9992 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9994 28 11        	jr z,1F
 186+ 9996 38 06        	jr c,6F
 187+ 9998 FE 04        	cp 4
 188+ 999A 28 14        	jr z,7F
 189+ 999C 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 999E
 191+ 999E              ; ---------- ---------- ----------
 192+ 999E              ;
 193+ 999E              ; Perfiles de velocidad
 194+ 999E              ;
 195+ 999E
 196+ 999E 3A A2 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99A1 FE FE        	cp $fe
 198+ 99A3 20 2A        	jr nz,8F
 199+ 99A5 18 10        	jr 3F
 200+ 99A7 3A A2 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99AA FE FD        	cp $fd
 202+ 99AC 20 21        	jr nz,8F
 203+ 99AE 18 07        	jr 3F
 204+ 99B0 3A A2 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99B3 FE FB        	cp $fb
 206+ 99B5 20 18        	jr nz,8F
 207+ 99B7
 208+ 99B7              ; ---------- ---------- ----------
 209+ 99B7
 210+ 99B7              3
 211+ 99B7 CD EA 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99BA              ;	call Reinicio
 213+ 99BA
 214+ 99BA              ; ---------- ---------- ----------
 215+ 99BA              ;
 216+ 99BA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99BA
 218+ 99BA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99BC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99BD CD D6 99     	call DESPLZ_DER
 221+ 99C0 C1           	pop bc
 222+ 99C1 10 F9        	djnz 5B
 223+ 99C3 2A 9C 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99C6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99C7 22 9C 89     	ld (Posicion_actual),hl
 226+ 99CA CD 22 9C     	call Genera_coordenadas
 227+ 99CD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99CF
 229+ 99CF              ; ---------- ---------- ----------
 230+ 99CF
 231+ 99CF 2A 9C 89     8 ld hl,(Posicion_actual)
 232+ 99D2 CD D6 99     	call DESPLZ_DER
 233+ 99D5 C9           2 ret
 234+ 99D6
 235+ 99D6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99D6              ;
 237+ 99D6              ;	22/9/22
 238+ 99D6              ;
 239+ 99D6
 240+ 99D6 CD E5 99     DESPLZ_DER call Desplaza_derecha
 241+ 99D9 CD 31 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99DC CD 5A 9A         call Ciclo_completo
 243+ 99DF 21 C8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99E2 CB FE        	set 7,(hl)
 245+ 99E4 C9           	ret
 246+ 99E5
 247+ 99E5              ; ******************************************************************************************************************************************************************************************
 248+ 99E5              ;	15/02/23
 249+ 99E5              ;
 250+ 99E5
 251+ 99E5 3A B0 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99E8 47           	ld b,a
 253+ 99E9 2A A8 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99EC 23           1 inc hl
 255+ 99ED 23           	inc hl
 256+ 99EE 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99F0 22 A8 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99F3 CD 04 8D     	call Extrae_address
 259+ 99F6 22 9E 89     	ld (Puntero_objeto),hl
 260+ 99F9
 261+ 99F9              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99F9
 263+ 99F9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99F9              ; Cuántos movimientos hemos hecho ??
 265+ 99F9              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99F9
 267+ 99F9 2A A4 89     7 ld hl,(Indice_Sprite_der)
 268+ 99FC EB           	ex de,hl
 269+ 99FD A7           	and a
 270+ 99FE ED 52        	sbc hl,de
 271+ 9A00 CB 3D        	srl l
 272+ 9A02 3E 08        6 ld a,8
 273+ 9A04 95           	sub l
 274+ 9A05 30 1E        	jr nc,3F
 275+ 9A07
 276+ 9A07              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A07              ; B="0".
 278+ 9A07
 279+ 9A07 04           4 inc b
 280+ 9A08 3C           	inc a
 281+ 9A09 20 FC        	jr nz,4B
 282+ 9A0B 78           	ld a,b
 283+ 9A0C 08           	ex af,af
 284+ 9A0D 2A A4 89     	ld hl,(Indice_Sprite_der)
 285+ 9A10 23           5 inc hl
 286+ 9A11 23           	inc hl
 287+ 9A12 10 FC        	djnz 5B
 288+ 9A14 22 A8 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A17 CD 04 8D     	call Extrae_address
 290+ 9A1A 22 9E 89     	ld (Puntero_objeto),hl
 291+ 9A1D
 292+ 9A1D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A1D              ; _(Posicion_actual).
 294+ 9A1D
 295+ 9A1D 21 9C 89     	ld hl,Posicion_actual
 296+ 9A20 34           	inc (hl)
 297+ 9A21 08               ex af,af
 298+ 9A22 6F           	ld l,a
 299+ 9A23 18 DD        	jr 6B
 300+ 9A25
 301+ 9A25              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A25
 303+ 9A25 47           3 ld b,a
 304+ 9A26 2A A6 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A29 23           2 inc hl
 306+ 9A2A 23           	inc hl
 307+ 9A2B 10 FC        	djnz 2B
 308+ 9A2D 22 AA 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A30 C9           8 ret
 310+ 9A31
 311+ 9A31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A31              ;
 313+ 9A31              ;	24/7/22
 314+ 9A31              ;
 315+ 9A31              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A31              ;
 317+ 9A31              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A31              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A31              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A31
 321+ 9A31 3A A2 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A34 A7           	and a
 323+ 9A35 20 1F        	jr nz,1F
 324+ 9A37 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A39 32 A2 89         ld (CTRL_DESPLZ),a
 326+ 9A3C
 327+ 9A3C 21 9B 89     	ld hl,Columns
 328+ 9A3F 34           	inc (hl)
 329+ 9A40 3A AE 89     	ld a,(Cuad_objeto)
 330+ 9A43 E6 01        	and 1
 331+ 9A45 28 0F        	jr z,1F
 332+ 9A47 2A 9C 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A4A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A4B 22 9C 89     	ld (Posicion_actual),hl
 335+ 9A4E CD 22 9C     	call Genera_coordenadas
 336+ 9A51 CD B6 9B     	call Inc_CTRL_DESPLZ
 337+ 9A54 18 03        	jr 2F
 338+ 9A56 CD B6 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A59 C9           2 ret
 340+ 9A5A
 341+ 9A5A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A5A              ;
 343+ 9A5A              ;	24/7/22
 344+ 9A5A              ;
 345+ 9A5A              ;	Ciclo_completo.
 346+ 9A5A              ;
 347+ 9A5A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A5A              ;
 349+ 9A5A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A5A              ; 	Decrementamos (Columns).
 351+ 9A5A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A5A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A5A
 354+ 9A5A
 355+ 9A5A 3A A2 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A5D FE FF        	cp $ff
 357+ 9A5F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A61 E6 F0        	and $f0
 359+ 9A63 20 28        	jr nz,3F
 360+ 9A65
 361+ 9A65              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A65
 363+ 9A65 3A A2 89     	ld a,(CTRL_DESPLZ)
 364+ 9A68 47           	ld b,a
 365+ 9A69 3E F8        	ld a,$f8
 366+ 9A6B 80           	add b
 367+ 9A6C 32 A2 89     	ld (CTRL_DESPLZ),a
 368+ 9A6F 18 1C        	jr 3F
 369+ 9A71 21 9B 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A74 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A75 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A76 32 A2 89     	ld (CTRL_DESPLZ),a
 373+ 9A79 3A AE 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A7C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A7E 20 0A        	jr nz,2F
 376+ 9A80 2A 9C 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A83 23           	inc hl
 378+ 9A84 22 9C 89     	ld (Posicion_actual),hl
 379+ 9A87 CD 22 9C     	call Genera_coordenadas
 380+ 9A8A
 381+ 9A8A              ; Inicia el puntero de Sprite.
 382+ 9A8A
 383+ 9A8A CD 1B 8D     2 call Inicia_puntero_objeto_der
 384+ 9A8D C9           3 ret
 385+ 9A8E
 386+ 9A8E              ; ******************************************************************************************************************************************************************************************
 387+ 9A8E              ;
 388+ 9A8E              ;	15/02/23
 389+ 9A8E              ;
 390+ 9A8E              ;	Mov_left.
 391+ 9A8E              ;
 392+ 9A8E              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A8E              ;
 394+ 9A8E 21 C8 89     Mov_left ld hl,Ctrl_0
 395+ 9A91 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A93              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A93              ; 																	; _ en el caso de que no lo haya.
 398+ 9A93 3A C8 89     	ld a,(Ctrl_0)
 399+ 9A96 CB 77        	bit 6,a
 400+ 9A98 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A9A
 402+ 9A9A CD B0 9B     	call Stop_Amadeus_left
 403+ 9A9D C8           	ret z
 404+ 9A9E 20 4A        	jr nz,8F
 405+ 9AA0
 406+ 9AA0 3A A0 89     11 ld a,(Coordenada_X)
 407+ 9AA3 A7           	and a
 408+ 9AA4 20 44        	jr nz,8F
 409+ 9AA6
 410+ 9AA6 3A A2 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AA9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9AAA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AAC
 414+ 9AAC              ; ---------- ---------- ----------
 415+ 9AAC
 416+ 9AAC 3A AF 89     	ld a,(Vel_left)
 417+ 9AAF FE 02        	cp 2
 418+ 9AB1 28 0F        	jr z,1F
 419+ 9AB3 38 04        	jr c,6F
 420+ 9AB5 FE 04        	cp 4
 421+ 9AB7 28 12        	jr z,7F
 422+ 9AB9
 423+ 9AB9              ; ---------- ---------- ----------
 424+ 9AB9
 425+ 9AB9 3A A2 89     6 ld a,(CTRL_DESPLZ)
 426+ 9ABC FE F8        	cp $f8
 427+ 9ABE 20 2A        	jr nz,8F
 428+ 9AC0 18 10        	jr 4F
 429+ 9AC2 3A A2 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AC5 FE F9        	cp $f9
 431+ 9AC7 20 21        	jr nz,8F
 432+ 9AC9 18 07        	jr 4F
 433+ 9ACB 3A A2 89     7 ld a,(CTRL_DESPLZ)
 434+ 9ACE FE FB        	cp $fb
 435+ 9AD0 20 18        	jr nz,8F
 436+ 9AD2
 437+ 9AD2              ; ---------- ---------- ----------
 438+ 9AD2
 439+ 9AD2              4
 440+ 9AD2 CD D8 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AD5              ;	call Reinicio
 442+ 9AD5
 443+ 9AD5              ; ---------- ---------- ----------
 444+ 9AD5
 445+ 9AD5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AD7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AD8
 448+ 9AD8              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AD8              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AD8
 451+ 9AD8 CD F1 9A     	call DESPLZ_IZQ
 452+ 9ADB C1           	pop bc
 453+ 9ADC 10 F9        	djnz 5B
 454+ 9ADE 2A 9C 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9AE1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9AE2 22 9C 89     	ld (Posicion_actual),hl
 457+ 9AE5 CD 22 9C     	call Genera_coordenadas
 458+ 9AE8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AEA
 460+ 9AEA              ; ---------- ---------- ----------
 461+ 9AEA
 462+ 9AEA              ; Movemos, no hay recolocación.
 463+ 9AEA
 464+ 9AEA 2A 9C 89     8 ld hl,(Posicion_actual)
 465+ 9AED CD F1 9A     	call DESPLZ_IZQ
 466+ 9AF0 C9           2 ret
 467+ 9AF1
 468+ 9AF1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9AF1              ;
 470+ 9AF1              ;	22/9/22
 471+ 9AF1
 472+ 9AF1              DESPLZ_IZQ
 473+ 9AF1
 474+ 9AF1 CD 00 9B     	call Desplaza_izquierda
 475+ 9AF4 CD 4C 9B         call modifica_parametros_1er_DESPLZ
 476+ 9AF7 CD 74 9B     	call Ciclo_completo_2
 477+ 9AFA 21 C8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9AFD CB BE        	res 7,(hl)
 479+ 9AFF C9           	ret
 480+ 9B00
 481+ 9B00              Desplaza_izquierda
 482+ 9B00
 483+ 9B00 3A AF 89     	ld a,(Vel_left)
 484+ 9B03 47           	ld b,a
 485+ 9B04 2A AA 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B07 23           1 inc hl
 487+ 9B08 23           	inc hl
 488+ 9B09 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B0B 22 AA 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B0E CD 04 8D     	call Extrae_address
 491+ 9B11 22 9E 89     	ld (Puntero_objeto),hl
 492+ 9B14
 493+ 9B14              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B14
 495+ 9B14              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B14              ; Cuántos movimientos hemos hecho ??
 497+ 9B14              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B14
 499+ 9B14 2A A6 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B17 EB           	ex de,hl
 501+ 9B18 A7           	and a
 502+ 9B19 ED 52        	sbc hl,de
 503+ 9B1B CB 3D        	srl l
 504+ 9B1D 3E 08        6 ld a,8
 505+ 9B1F 95           	sub l
 506+ 9B20 30 1E        	jr nc,3F
 507+ 9B22
 508+ 9B22              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B22              ; B="0".
 510+ 9B22
 511+ 9B22 04           4 inc b
 512+ 9B23 3C           	inc a
 513+ 9B24 20 FC        	jr nz,4B
 514+ 9B26 78           	ld a,b
 515+ 9B27 08           	ex af,af
 516+ 9B28 2A A6 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B2B 23           5 inc hl
 518+ 9B2C 23           	inc hl
 519+ 9B2D 10 FC        	djnz 5B
 520+ 9B2F 22 AA 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B32 CD 04 8D     	call Extrae_address
 522+ 9B35 22 9E 89     	ld (Puntero_objeto),hl
 523+ 9B38
 524+ 9B38              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B38              ; _(Posicion_actual).
 526+ 9B38
 527+ 9B38 21 9C 89     	ld hl,Posicion_actual
 528+ 9B3B 35           	dec (hl)
 529+ 9B3C 08           	ex af,af
 530+ 9B3D 6F           	ld l,a
 531+ 9B3E 18 DD        	jr 6B
 532+ 9B40
 533+ 9B40              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B40
 535+ 9B40 47           3 ld b,a
 536+ 9B41 2A A4 89     	ld hl,(Indice_Sprite_der)
 537+ 9B44 23           2 inc hl
 538+ 9B45 23           	inc hl
 539+ 9B46 10 FC        	djnz 2B
 540+ 9B48 22 A8 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B4B C9           8 ret
 542+ 9B4C
 543+ 9B4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B4C              ;
 545+ 9B4C              ;	modifica_parametros_1er_DESPLZ
 546+ 9B4C              ;
 547+ 9B4C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B4C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B4C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B4C
 551+ 9B4C 3A A2 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B4F A7           	and a
 553+ 9B50 20 1E        	jr nz,1F
 554+ 9B52 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B53 32 A2 89         ld (CTRL_DESPLZ),a
 556+ 9B56 21 9B 89     	ld hl,Columns
 557+ 9B59 34           	inc (hl)
 558+ 9B5A 3A AE 89     	ld a,(Cuad_objeto)
 559+ 9B5D E6 01        	and 1
 560+ 9B5F 20 0F        	jr nz,1F
 561+ 9B61 2A 9C 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B64 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B65 22 9C 89     	ld (Posicion_actual),hl
 564+ 9B68 CD 22 9C     	call Genera_coordenadas
 565+ 9B6B CD C7 9B     	call Dec_CTRL_DESPLZ
 566+ 9B6E 18 03        	jr 2F
 567+ 9B70 CD C7 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B73 C9           2 ret
 569+ 9B74
 570+ 9B74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B74
 572+ 9B74 3A A2 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B77 FE F7        	cp $f7
 574+ 9B79 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B7B 30 2C        	jr nc,3F
 576+ 9B7D
 577+ 9B7D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B7D
 579+ 9B7D 06 00        	ld b,0
 580+ 9B7F 04           4 inc b
 581+ 9B80 3C           	inc a
 582+ 9B81 FE F7        	cp $f7
 583+ 9B83 20 FA        	jr nz,4B
 584+ 9B85 3E FF        	ld a,$ff
 585+ 9B87 90           	sub b
 586+ 9B88 32 A2 89     	ld (CTRL_DESPLZ),a
 587+ 9B8B 18 1C        	jr 3F
 588+ 9B8D
 589+ 9B8D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B8D
 591+ 9B8D 21 9B 89     1 ld hl,Columns
 592+ 9B90 35           	dec (hl)
 593+ 9B91 AF           	xor a
 594+ 9B92 32 A2 89     	ld (CTRL_DESPLZ),a
 595+ 9B95 3A AE 89     	ld a,(Cuad_objeto)
 596+ 9B98 E6 01        	and 1
 597+ 9B9A 28 0A        	jr z,2F
 598+ 9B9C 2A 9C 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9B9F 2B           	dec hl
 600+ 9BA0 22 9C 89     	ld (Posicion_actual),hl
 601+ 9BA3 CD 22 9C     	call Genera_coordenadas
 602+ 9BA6
 603+ 9BA6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BA6
 605+ 9BA6 CD 2E 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BA9 C9           3 ret
 607+ 9BAA
 608+ 9BAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BAA              ;
 610+ 9BAA              ;	19/10/22
 611+ 9BAA              ;
 612+ 9BAA              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BAA              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BAA
 615+ 9BAA 3A A0 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BAD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BAF C9           	ret
 618+ 9BB0
 619+ 9BB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BB0              ;
 621+ 9BB0              ;	19/10/22
 622+ 9BB0              ;
 623+ 9BB0              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BB0              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BB0
 626+ 9BB0 3A A0 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BB3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BB5 C9           	ret
 629+ 9BB6
 630+ 9BB6              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BB6              ;
 632+ 9BB6              ;	24/7/22
 633+ 9BB6              ;
 634+ 9BB6              ;	Inc_CTRL_DESPLZ
 635+ 9BB6              ;
 636+ 9BB6              ;
 637+ 9BB6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BB6
 639+ 9BB6 21 A2 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BB9 3A B0 89     	ld a,(Vel_right)
 641+ 9BBC A7           	and a
 642+ 9BBD 28 06        	jr z,1F
 643+ 9BBF 47           	ld b,a
 644+ 9BC0 34           3 inc (hl)
 645+ 9BC1 10 FD        	djnz 3B
 646+ 9BC3 18 01        	jr 2F
 647+ 9BC5 34           1 inc (hl)
 648+ 9BC6 C9           2 ret
 649+ 9BC7
 650+ 9BC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BC7              ;
 652+ 9BC7              ;	5/2/23
 653+ 9BC7              ;
 654+ 9BC7              ;	Dec_CTRL_DESPLZ
 655+ 9BC7              ;
 656+ 9BC7              ;
 657+ 9BC7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BC7
 659+ 9BC7 21 A2 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BCA 3A AF 89     	ld a,(Vel_left)
 661+ 9BCD A7           	and a
 662+ 9BCE 28 06        	jr z,1F
 663+ 9BD0 47           	ld b,a
 664+ 9BD1 35           3 dec (hl)
 665+ 9BD2 10 FD        	djnz 3B
 666+ 9BD4 18 01        	jr 2F
 667+ 9BD6 35           1 dec (hl)
 668+ 9BD7 C9           2 ret
 669+ 9BD8
 670+ 9BD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BD8
 672+ 9BD8 2A 9C 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BDB 01 1F 00     	ld bc,31
 674+ 9BDE A7           	and a
 675+ 9BDF ED 4A        	adc hl,bc
 676+ 9BE1 22 9C 89     	ld (Posicion_actual),hl
 677+ 9BE4 21 C8 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BE7 CB C6        	set 0,(hl)
 679+ 9BE9 C9           	ret
 680+ 9BEA
 681+ 9BEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BEA
 683+ 9BEA 2A 9C 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BED 01 1F 00     	ld bc,31
 685+ 9BF0 A7           	and a
 686+ 9BF1 ED 42        	sbc hl,bc
 687+ 9BF3 22 9C 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BF6 21 C8 89     	ld hl,Ctrl_0
 689+ 9BF9 CB CE        	set 1,(hl)
 690+ 9BFB C9           	ret
 691+ 9BFC
 692+ 9BFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9BFC
 694+ 9BFC 24           Reaparece_abajo inc h
 695+ 9BFD 01 E0 17     	ld bc,$17e0
 696+ 9C00 A7           	and a
 697+ 9C01 ED 4A        	adc hl,bc
 698+ 9C03 22 9C 89     	ld (Posicion_actual),hl
 699+ 9C06 21 C8 89     	ld hl,Ctrl_0
 700+ 9C09 CB D6        	set 2,(hl)
 701+ 9C0B C9           	ret
 702+ 9C0C
 703+ 9C0C              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C0C
 705+ 9C0C 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C0F A7           	and a
 707+ 9C10 ED 42        	sbc hl,bc
 708+ 9C12 22 9C 89     	ld (Posicion_actual),hl
 709+ 9C15 21 C8 89     	ld hl,Ctrl_0
 710+ 9C18 CB DE        	set 3,(hl)
 711+ 9C1A C9           	ret
 712+ 9C1B
 713+ 9C1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C1B
 715+ 9C1B 2A AC 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C1E 22 9C 89     	ld (Posicion_actual),hl
 717+ 9C21 C9           	ret
# file closed: Direcciones.asm
1252  9C22              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C22              ; ------------------------------------------------------------------------
   2+ 9C22              ;
   3+ 9C22              ;	02/04/23
   4+ 9C22              ;
   5+ 9C22              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C22              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C22              ;
   8+ 9C22              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C22              ;
  10+ 9C22              ;	Modifica: A,BC y DE.
  11+ 9C22
  12+ 9C22 C5           Genera_coordenadas push bc
  13+ 9C23 E5           	push hl
  14+ 9C24 D5           	push de
  15+ 9C25
  16+ 9C25 2A 9C 89     	ld hl,(Posicion_actual)
  17+ 9C28
  18+ 9C28 7D           	ld a,l
  19+ 9C29 E6 1F        	and $1f
  20+ 9C2B 32 A0 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C2E
  22+ 9C2E CD B6 98     	call calcula_tercio
  23+ 9C31 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C32
  25+ 9C32 1E 00        	ld e,0
  26+ 9C34 7D           	ld a,l
  27+ 9C35 E6 E0        	and $e0
  28+ 9C37 28 01        	jr z,1F
  29+ 9C39 04           	inc b
  30+ 9C3A
  31+ 9C3A 04           1 inc b
  32+ 9C3B 05           	dec b
  33+ 9C3C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C3E              ;														; _ , salimos.
  35+ 9C3E 1C           3 inc e
  36+ 9C3F D6 20        	sub 32
  37+ 9C41 20 FB        	jr nz,3B
  38+ 9C43 10 F5        	djnz 1B
  39+ 9C45
  40+ 9C45 7B           2 ld a,e
  41+ 9C46 32 A1 89     	ld (Coordenada_y),a
  42+ 9C49
  43+ 9C49 D1           	pop de
  44+ 9C4A E1           	pop hl
  45+ 9C4B C1           	pop bc
  46+ 9C4C
  47+ 9C4C C9           	ret
  48+ 9C4D
  49+ 9C4D              ; ------------------------------------------------------------------------
  50+ 9C4D              ;	28/05/23
  51+ 9C4D              ;
  52+ 9C4D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C4D              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C4D              ;
  55+ 9C4D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C4D              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C4D              ;
  58+ 9C4D              ;		DE="$120d"
  59+ 9C4D              ;
  60+ 9C4D              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C4D              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C4D              ;
  63+ 9C4D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C4D
  65+ 9C4D              ;	Modifica: A,BC y DE.
  66+ 9C4D
  67+ 9C4D
  68+ 9C4D              Genera_coordenadas_disparo
  69+ 9C4D
  70+ 9C4D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C4D
  72+ 9C4D 7D           	ld a,l
  73+ 9C4E E6 1F        	and $1f
  74+ 9C50 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C51 CD B6 98     	call calcula_tercio
  76+ 9C54 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C55 1E 00        	ld e,0
  78+ 9C57 7D           	ld a,l
  79+ 9C58 E6 E0        	and $e0
  80+ 9C5A 28 01        	jr z,1F
  81+ 9C5C 04           	inc b
  82+ 9C5D 1C           1 inc e
  83+ 9C5E D6 20        	sub 32
  84+ 9C60 20 FB        	jr nz,1B
  85+ 9C62 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C64 C9           	ret
  87+ 9C65
# file closed: Genera_coordenadas.asm
1253  9C65              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C65
   2+ 9C65
   3+ 9C65              ;   17/06/23
   4+ 9C65              ;
   5+ 9C65              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C65              ;
   7+ 9C65              ;   Mov_obj.asm
   8+ 9C65              ;
   9+ 9C65              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C65              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C65              ;
  12+ 9C65              ;   Codificación:
  13+ 9C65              ;
  14+ 9C65              ;   1er Byte ..... Repetición del movimiento. (0-255) pixeles.
  15+ 9C65              ;   2º Byte (Nibble alto) ..... Velocidad del movimiento (% izquierda,derecha,arriba,abajo).
  16+ 9C65              ;           (Nibble bajo) ..... Dirección del movimiento (% abajo,arriba,derecha,izquierda).
  17+ 9C65
  18+ 9C65              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  19+ 9C65
  20+ 9C65              Baile_de_BadSat
  21+ 9C65
  22+ 9C65              ; Baja decelerando.
  23+ 9C65 3E 14 18 05      db 62,20,%00011000,5,%00001000 ;(2).
  23+ 9C69 08
  24+ 9C6A
  25+ 9C6A              ; Codo: bajo y derecha.
  26+ 9C6A 01 0A 01 08      db 1,%00001010,1,%00001000,2,%00001010,1,%00001000,1,%00001010,1,%00001000,2,%00001010
  26+ 9C6E 02 0A 01 08
  26+ 9C72 01 0A 01 08
  26+ 9C76 02 0A
  27+ 9C78 01 02 01 0A      db 1,%00000010,1,%00001010,2,%00000010,1,%00001010  ;(11).
  27+ 9C7C 02 02 01 0A
  28+ 9C80
  29+ 9C80              ; Derecha ligeramente ascendente.
  30+ 9C80 02 06 04 02      db 2,%00000110,4,%00000010,1,%01000110,4,%01000010,1,%01000110,4,%01000010
  30+ 9C84 01 46 04 42
  30+ 9C88 01 46 04 42
  31+ 9C8C 01 46 04 42      db 1,%01000110,4,%01000010,1,%01000110,4,%01000010,1,%01000110,4,%01000010
  31+ 9C90 01 46 04 42
  31+ 9C94 01 46 04 42
  32+ 9C98 01 46 04 42      db 1,%01000110,4,%01000010,1,%01000110,4,%01000010,1,%01000110,4,%01000010
  32+ 9C9C 01 46 04 42
  32+ 9CA0 01 46 04 42
  33+ 9CA4 01 46 04 42      db 1,%01000110,4,%01000010,1,%01000110,4,%01000010,1,%01000110,4,%01000010
  33+ 9CA8 01 46 04 42
  33+ 9CAC 01 46 04 42
  34+ 9CB0 01 46 04 42      db 1,%01000110,4,%01000010,1,%01000110,4,%01000010,1,%01000110,4,%01000010
  34+ 9CB4 01 46 04 42
  34+ 9CB8 01 46 04 42
  35+ 9CBC 01 46 04 42      db 1,%01000110,4,%01000010,1,%01000110,4,%01000010,1,%01000110,4,%01000010
  35+ 9CC0 01 46 04 42
  35+ 9CC4 01 46 04 42
  36+ 9CC8 01 46 08 02      db 1,%01000110,8,%00000010  ;(38).
  37+ 9CCC
  38+ 9CCC              ; Codo: Derecha y bajo.
  39+ 9CCC 01 0A 02 02      db 1,%00001010,2,%00000010,1,%00001010,1,%00000010,2,%00001010,1,%00001000
  39+ 9CD0 01 0A 01 02
  39+ 9CD4 02 0A 01 08
  40+ 9CD8 01 0A 01 08      db 1,%00001010,1,%00001000,1,%00001010,1,%00001000,1,%00001010,0    ;(11).
  40+ 9CDC 01 0A 01 08
  40+ 9CE0 01 0A 00
  41+ 9CE3
  42+ 9CE3
  43+ 9CE3
  44+ 9CE3
  45+ 9CE3              ; ----- ----- ----- ----- -----
  46+ 9CE3
  47+ 9CE3 65 9C        Indice_mov_Baile_de_BadSat defw Baile_de_BadSat
  48+ 9CE5
  49+ 9CE5
  50+ 9CE5              ; ----- ----- ----- ----- -----
  51+ 9CE5              ;
  52+ 9CE5              ;   18/06/23
  53+ 9CE5
  54+ 9CE5              Movimiento
  55+ 9CE5
  56+ 9CE5 3A CF 89         ld a,(Contador_db_mov)                                      ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  57+ 9CE8 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  58+ 9CE9 28 02            jr z,1F
  59+ 9CEB
  60+ 9CEB 18 16            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  61+ 9CED
  62+ 9CED              ; Inicializa movimiento, (comienza un movimiento).
  63+ 9CED              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  64+ 9CED
  65+ 9CED              1
  66+ 9CED 3A D0 89         ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  67+ 9CF0 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  68+ 9CF2 32 D0 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  69+ 9CF5              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  70+ 9CF5 2A CD 89         ld hl,(Puntero_mov)
  71+ 9CF8 7E               ld a,(hl)
  72+ 9CF9 32 CF 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes que_
  73+ 9CFC A7               and a                                                       ; _ tiene la cadena.
  74+ 9CFD
  75+ 9CFD 28 FE            jr z,$
  76+ 9CFF
  77+ 9CFF              ;    jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento.
  78+ 9CFF
  79+ 9CFF              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Contador_db_mov).
  80+ 9CFF
  81+ 9CFF 23               inc hl
  82+ 9D00 CD 4F 9D         call Prepara_siguiente_mov
  83+ 9D03
  84+ 9D03
  85+ 9D03              Decoder
  86+ 9D03
  87+ 9D03              ; Velocidad del movimiento.
  88+ 9D03
  89+ 9D03              ; Guardo el perfil de velocidad de la entidad en una cajita y lo modifico hasta que termine este movimiento.
  90+ 9D03
  91+ 9D03 CD 6F 9D         call Velocidad_del_movimiento
  92+ 9D06 CD A7 9D         call Aplica_movimiento
  93+ 9D09
  94+ 9D09              ; ---------- --------- --------- ---------- ----------
  95+ 9D09
  96+ 9D09 3A D1 89     5 ld a,(Repetimos_db)
  97+ 9D0C A7               and a
  98+ 9D0D 28 07            jr z,6F
  99+ 9D0F 3D               dec a
 100+ 9D10 32 D1 89         ld (Repetimos_db),a
 101+ 9D13 28 01            jr z,6f
 102+ 9D15
 103+ 9D15 C9           11 ret
 104+ 9D16
 105+ 9D16              ; Pasamos al sigiente .db de la cadena de movimiento.
 106+ 9D16
 107+ 9D16 23           6 inc hl
 108+ 9D17 22 CD 89         ld (Puntero_mov),hl
 109+ 9D1A
 110+ 9D1A 21 D6 89         ld hl,Ctrl_2
 111+ 9D1D CB 96            res 2,(hl)
 112+ 9D1F CD 58 9D         call Restaura_velocidad
 113+ 9D22
 114+ 9D22 21 CF 89         ld hl,Contador_db_mov
 115+ 9D25 35               dec (hl)
 116+ 9D26 C8               ret z
 117+ 9D27
 118+ 9D27 2A CD 89         ld hl,(Puntero_mov)
 119+ 9D2A CD 4F 9D         call Prepara_siguiente_mov
 120+ 9D2D
 121+ 9D2D 18 E6            jr 11B
 122+ 9D2F
 123+ 9D2F 2A CB 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 124+ 9D32 3A D0 89         ld a,(Incrementa_puntero)
 125+ 9D35 47               ld b,a
 126+ 9D36 23           8 inc hl
 127+ 9D37 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 128+ 9D39 5E               ld e,(hl)
 129+ 9D3A 23               inc hl
 130+ 9D3B 56               ld d,(hl)
 131+ 9D3C EB               ex de,hl
 132+ 9D3D 22 CD 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 133+ 9D40 18 D3            jr 11B
 134+ 9D42
 135+ 9D42              Reinicia_el_movimiento
 136+ 9D42
 137+ 9D42 CD 64 9D         call Prepara_Puntero_mov
 138+ 9D45 AF               xor a
 139+ 9D46 32 CF 89         ld (Contador_db_mov),a
 140+ 9D49 32 D0 89         ld (Incrementa_puntero),a
 141+ 9D4C C3 E5 9C         jp Movimiento
 142+ 9D4F
 143+ 9D4F 7E           Prepara_siguiente_mov ld a,(hl)
 144+ 9D50 32 D1 89         ld (Repetimos_db),a
 145+ 9D53 23               inc hl
 146+ 9D54 22 CD 89         ld (Puntero_mov),hl
 147+ 9D57 C9               ret
 148+ 9D58
 149+ 9D58              ; ---------- --------- --------- ---------- ----------
 150+ 9D58              ;
 151+ 9D58              ;   19/6/23
 152+ 9D58              ;
 153+ 9D58              ;   Restaura los perfiles de velocidad a x1
 154+ 9D58
 155+ 9D58 3E 01        Restaura_velocidad ld a,1
 156+ 9D5A 06 04            ld b,4
 157+ 9D5C 21 AF 89         ld hl,Vel_left
 158+ 9D5F 77           1 ld (hl),a
 159+ 9D60 23               inc hl
 160+ 9D61 10 FC            djnz 1B
 161+ 9D63 C9               ret
 162+ 9D64
 163+ 9D64              ; ---------- --------- --------- ---------- ----------
 164+ 9D64              ;
 165+ 9D64              ;   11/8/22
 166+ 9D64              ;
 167+ 9D64              ;   Prepara_Puntero_mov
 168+ 9D64
 169+ 9D64 2A CB 89     Prepara_Puntero_mov ld hl,(Puntero_indice_mov)
 170+ 9D67 5E               ld e,(hl)
 171+ 9D68 23               inc hl
 172+ 9D69 56               ld d,(hl)
 173+ 9D6A EB               ex de,hl
 174+ 9D6B 22 CD 89         ld (Puntero_mov),hl
 175+ 9D6E C9               ret
 176+ 9D6F
 177+ 9D6F              ; ---------- --------- --------- ---------- ----------
 178+ 9D6F              ;
 179+ 9D6F              ;   18/06/23
 180+ 9D6F              ;
 181+ 9D6F
 182+ 9D6F              Velocidad_del_movimiento
 183+ 9D6F
 184+ 9D6F              ; Salimos de la rutina si ya hemos guardado anteriormente el perfil de velocidad.
 185+ 9D6F              ; Salimos porue ya se inició este movimiento de la cadena.
 186+ 9D6F
 187+ 9D6F 3A D6 89         ld a,(Ctrl_2)
 188+ 9D72 CB 57            bit 2,a
 189+ 9D74 C0               ret nz
 190+ 9D75
 191+ 9D75 DD 21 AF 89      ld ix,Vel_left
 192+ 9D79 2A CD 89         ld hl, (Puntero_mov)
 193+ 9D7C
 194+ 9D7C 7E               ld a,(hl)
 195+ 9D7D E6 F0            and $f0
 196+ 9D7F 28 1A            jr z,3F                                 ; RET si no vamos a modifical la velocidad.
 197+ 9D81
 198+ 9D81 CB 7E            bit 7,(hl)
 199+ 9D83 C4 A1 9D         call nz,X2_vel                          ; Vel_left
 200+ 9D86 DD 23            inc ix
 201+ 9D88 CB 76            bit 6,(hl)
 202+ 9D8A C4 A1 9D         call nz,X2_vel                          ; Vel_right
 203+ 9D8D DD 23            inc ix
 204+ 9D8F CB 6E            bit 5,(hl)
 205+ 9D91 C4 A1 9D         call nz,X2_vel                          ; Vel_up
 206+ 9D94 DD 23            inc ix
 207+ 9D96 CB 66            bit 4,(hl)
 208+ 9D98 C4 A1 9D         call nz,X2_vel                          ; Vel_down
 209+ 9D9B
 210+ 9D9B 21 D6 89     3 ld hl,Ctrl_2
 211+ 9D9E CB D6            set 2,(hl)
 212+ 9DA0 C9               ret
 213+ 9DA1
 214+ 9DA1              ; ---------- --------- --------- ---------- ----------
 215+ 9DA1              ;
 216+ 9DA1              ;   18/06/23
 217+ 9DA1              ;
 218+ 9DA1              ;   Duplica la velocidad.
 219+ 9DA1
 220+ 9DA1 3E 02        X2_vel ld a,2
 221+ 9DA3 DD 77 00         ld (ix),a
 222+ 9DA6 C9               ret
 223+ 9DA7
 224+ 9DA7              ; ---------- --------- --------- ---------- ----------
 225+ 9DA7              ;
 226+ 9DA7              ;   18/06/23
 227+ 9DA7              ;
 228+ 9DA7              ;   Aplica_movimiento.
 229+ 9DA7
 230+ 9DA7 2A CD 89     Aplica_movimiento ld hl, (Puntero_mov)
 231+ 9DAA CB 5E            bit 3,(hl)
 232+ 9DAC 28 03            jr z,1F
 233+ 9DAE CD FC 98         call Mov_down
 234+ 9DB1 2A CD 89     1 ld hl, (Puntero_mov)
 235+ 9DB4 CB 56            bit 2,(hl)
 236+ 9DB6 28 03            jr z,2F
 237+ 9DB8 CD 2D 99         call Mov_up
 238+ 9DBB 2A CD 89     2 ld hl, (Puntero_mov)
 239+ 9DBE CB 4E            bit 1,(hl)
 240+ 9DC0 28 03            jr z,3F
 241+ 9DC2 CD 70 99         call Mov_right
 242+ 9DC5 2A CD 89     3 ld hl, (Puntero_mov)
 243+ 9DC8 CB 46            bit 0,(hl)
 244+ 9DCA 28 03            jr z,4F
 245+ 9DCC CD 8E 9A         call Mov_left
 246+ 9DCF C9           4 ret
 247+ 9DD0
 248+ 9DD0
 249+ 9DD0
 250+ 9DD0
 251+ 9DD0
 252+ 9DD0
 253+ 9DD0
# file closed: Patrones_de_mov.asm
1254  9DD0              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9DD0              ; Relojes y temporizaciones.
   2+ 9DD0
   3+ 9DD0              ; ------------------------------------------------------
   4+ 9DD0              ;
   5+ 9DD0              ;	27/04/23
   6+ 9DD0              ;
   7+ 9DD0              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9DD0              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9DD0              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9DD0              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9DD0              ;
  12+ 9DD0              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9DD0              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9DD0
  15+ 9DD0              Habilita_disparos
  16+ 9DD0
  17+ 9DD0 7E           	ld a,(hl)
  18+ 9DD1 A7           	and a
  19+ 9DD2 C0           	ret nz
  20+ 9DD3
  21+ 9DD3 EB           	ex de,hl
  22+ 9DD4
  23+ 9DD4 35           	dec (hl)
  24+ 9DD5 34           	inc (hl)
  25+ 9DD6 35           	dec (hl)
  26+ 9DD7 C0           	ret nz
  27+ 9DD8
  28+ 9DD8 2B           	dec hl
  29+ 9DD9 7E           	ld a,(hl)
  30+ 9DDA 23           	inc hl
  31+ 9DDB 77           	ld (hl),a
  32+ 9DDC
  33+ 9DDC EB           	ex de,hl
  34+ 9DDD 3E 01        	ld a,1
  35+ 9DDF 77           	ld (hl),a
  36+ 9DE0 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1255  9DE1              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9DE1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9DE1              ;
   3+ 9DE1              ;	3/1/23
   4+ 9DE1              ;
   5+ 9DE1              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9DE1
   7+ 9DE1              ;	ADC HL,SP	LD (addr),SP
   8+ 9DE1              ;	ADD HL,SP	LD SP,(addr)
   9+ 9DE1              ;	ADD IX,SP	LD SP,nn
  10+ 9DE1              ; 	ADD IY,SP	LD SP,HL
  11+ 9DE1              ;				LD SP,IX
  12+ 9DE1              ;	DEC SP		LD SP,IY
  13+ 9DE1
  14+ 9DE1              ;	EX (SP),HL
  15+ 9DE1              ;	EX (SP),IX
  16+ 9DE1              ;	EX (SP),IY
  17+ 9DE1
  18+ 9DE1              ;	INC SP
  19+ 9DE1
  20+ 9DE1
  21+ 9DE1                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 E9 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D8 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A EF 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A ED 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 EF 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 ED 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B E9 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1256  7FD5
1257  7FD5              	SAVESNA "Pruebas.sna", START
1258  7FD5
1259  7FD5
1260  7FD5
1261  7FD5
# file closed: Banco_de_pruebas.asm
