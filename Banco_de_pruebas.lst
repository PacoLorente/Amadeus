# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B1 8E     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 11 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 15 8A        	defw End_Snapshot_1
 267+ 8500 19 8A        	defw End_Snapshot_2
 268+ 8502 1D 8A        	defw End_Snapshot_3
 269+ 8504 13 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 17 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1B 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1F 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  20  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 95 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 95 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  21  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BB 88        	defw Nivel_2
   7+ 88AD C8 88        	defw Nivel_3
   8+ 88AF D8 88        	defw Nivel_4
   9+ 88B1 EA 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 03           Nivel_1 db 3	                                ; Nº de entidades.
  19+ 88B8 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C0 01 02
  22+ 88C2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C6 01 02
  23+ 88C8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CD 01
  25+ 88CE 03 01 01 01  	db 3,1,1,1,1
  25+ 88D2 01
  26+ 88D3 03 01 01 01  	db 3,1,1,1,1
  26+ 88D7 01
  27+ 88D8 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DD 01
  29+ 88DE 04 01 01 01  	db 4,1,1,1,1
  29+ 88E2 01
  30+ 88E3 04 01 01 01  	db 4,1,1,1,1
  30+ 88E7 01
  31+ 88E8 02 03        	db 2,3
  32+ 88EA 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88EF 01
  34+ 88F0 05 01 01 01  	db 5,1,1,1,1
  34+ 88F4 01
  35+ 88F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F9 01
  36+ 88FA 05 01 01 01  	db 5,1,1,1,1
  36+ 88FE 01
  37+ 88FF
  38+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FF              ;
  40+ 88FF              ;   21/5/23
  41+ 88FF              ;
  42+ 88FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FF              ;	_en la caja DRAW correspondiente.
  46+ 88FF              ;
  47+ 88FF              ;	MODIFICA: HL,DE y A.
  48+ 88FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FF
  50+ 88FF              Inicializa_Punteros_de_nivel
  51+ 88FF
  52+ 88FF 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8902 22 4B 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8905 CD 87 8D     	call Extrae_address
  55+ 8908 7E           	ld a,(hl)
  56+ 8909 32 01 8A     	ld (Numero_de_entidades),a
  57+ 890C 23           	inc hl
  58+ 890D 22 4D 8A     	ld (Datos_de_nivel),hl
  59+ 8910 C9           	ret
  60+ 8911
  61+ 8911              ;---------------------------------------------------------------------------------------------------------------
  62+ 8911              ;
  63+ 8911              ;   13/5/23
  64+ 8911              ;
  65+ 8911              ;	Destruye A,BC,HL,DE
  66+ 8911
  67+ 8911              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8911              ;	_del juego.
  69+ 8911
  70+ 8911              Prepara_cajas
  71+ 8911
  72+ 8911              ; Preparamos los punteros de las cajas.
  73+ 8911
  74+ 8911 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8914 CD 87 8D     	call Extrae_address
  76+ 8917 CD 54 89     	call Avanza_caja
  77+ 891A
  78+ 891A CD 98 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891D
  80+ 891D 2A 4D 8A     	ld hl,(Datos_de_nivel)
  81+ 8920
  82+ 8920              ; HL está en los datos del nivel correspondiente.
  83+ 8920              ; B actuará como contador de cajas.
  84+ 8920
  85+ 8920 C5           1 push bc
  86+ 8921
  87+ 8921 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8922 CD 45 89     	call PreparaBC
  89+ 8925
  90+ 8925 21 85 88     	ld hl,Indice_de_entidades
  91+ 8928 CD 4D 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892B 22 07 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892E
  94+ 892E CD 5E 89     	call Datos_de_entidad_a_caja
  95+ 8931
  96+ 8931 2A FF 89     	ld hl,(Indice_restore_caja)
  97+ 8934 CD 87 8D     	call Extrae_address
  98+ 8937 CD 54 89     	call Avanza_caja
  99+ 893A
 100+ 893A 2A 4D 8A     	ld hl,(Datos_de_nivel)
 101+ 893D 23           	inc hl
 102+ 893E 22 4D 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8941
 104+ 8941 C1           	pop bc
 105+ 8942 10 DC        	djnz 1B
 106+ 8944 C9           	ret
 107+ 8945
 108+ 8945 CB 27        PreparaBC sla a
 109+ 8947 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8949 4F           	ld c,a
 111+ 894A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894C C9           	ret
 113+ 894D
 114+ 894D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894E ED 4A        	adc hl,bc
 116+ 8950 CD 87 8D     	call Extrae_address
 117+ 8953 C9           	ret
 118+ 8954
 119+ 8954 22 FB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8957 13           	inc de
 121+ 8958 13           	inc de
 122+ 8959 EB           	ex de,hl
 123+ 895A 22 FF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895D C9           	ret
 125+ 895E
 126+ 895E              Datos_de_entidad_a_caja
 127+ 895E
 128+ 895E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895E
 130+ 895E
 131+ 895E ED 5B FB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8962
 133+ 8962 01 02 00     	ld bc,2
 134+ 8965 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8967
 136+ 8967 01 07 00     	ld bc,7
 137+ 896A CD 92 89     	call Situa_DE
 138+ 896D
 139+ 896D 01 05 00     	ld bc,5
 140+ 8970 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8972
 142+ 8972 01 04 00     	ld bc,4
 143+ 8975 CD 92 89     	call Situa_DE
 144+ 8978
 145+ 8978 01 07 00     	ld bc,7
 146+ 897B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897D
 148+ 897D 01 18 00     	ld bc,24
 149+ 8980 CD 92 89     	call Situa_DE
 150+ 8983
 151+ 8983 01 02 00     	ld bc,2
 152+ 8986 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8988
 154+ 8988              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8988              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8988
 157+ 8988 01 0F 00     	ld bc,15									; *****
 158+ 898B CD 92 89     	call Situa_DE
 159+ 898E
 160+ 898E 3E 03        	ld a,3
 161+ 8990 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8991
 163+ 8991 C9           	ret
 164+ 8992
 165+ 8992 EB           Situa_DE ex de,hl
 166+ 8993 A7           	and a
 167+ 8994 ED 4A        	adc hl,bc
 168+ 8996 EB           	ex de,hl
 169+ 8997 C9           	ret
 170+ 8998
 171+ 8998              ;---------------------------------------------------------------------------------------------------------------
 172+ 8998              ;
 173+ 8998              ;	21/5/23
 174+ 8998              ;
 175+ 8998              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8998              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8998              ;
 178+ 8998              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8998              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8998              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8998              ;
 182+ 8998              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8998              ;	MODIFICA: A y B.
 184+ 8998              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8998
 186+ 8998              Admin_num_entidades
 187+ 8998
 188+ 8998              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8998
 190+ 8998 3A 01 8A     	ld a,(Numero_de_entidades)
 191+ 899B A7           	and a
 192+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899C              ;	jr z,$
 194+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899C
 196+ 899C 20 03        	jr nz,3F
 197+ 899E
 198+ 899E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899E
 200+ 899E CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A1
 202+ 89A1 3A 01 8A     3 ld a,(Numero_de_entidades)
 203+ 89A4 FE 0A        	cp 10
 204+ 89A6 38 08        	jr c,1F
 205+ 89A8
 206+ 89A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A8              ; Actualizamos variables.
 208+ 89A8
 209+ 89A8 3E 0A        	ld a,10
 210+ 89AA 32 02 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AD 47           	ld b,a
 212+ 89AE 18 04        	jr 2F
 213+ 89B0
 214+ 89B0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B0              ; (Numero_de_entidades)="0".
 216+ 89B0
 217+ 89B0 32 02 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B3 47           	ld b,a
 219+ 89B4 C9           2 ret
# file closed: Niveles.asm
  22  89B5
  23  89B5              ; ******************************************************************************************************************************************************************************************
  24  89B5              ; Constantes.
  25  89B5              ; ******************************************************************************************************************************************************************************************
  26  89B5              ;
  27  89B5              ; 25/05/23
  28  89B5              ;
  29  89B5              ; Constantes generales.
  30  89B5              ;
  31  89B5
  32  89B5              Sprite_vacio equ $f000
  33  89B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  34  89B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  35  89B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  36  89B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  37  89B5
  38  89B5              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  39  89B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  40  89B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  41  89B5              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  42  89B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  43  89B5              ;                               				        ; De momento situamos este almacén en $7060.
  44  89B5              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  45  89B5              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  46  89B5              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  47  89B5              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  48  89B5              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  49  89B5              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  50  89B5
  51  89B5              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  52  89B5
  53  89B5              ; ******************************************************************************************************************************************************************************************
  54  89B5              ; Variables.
  55  89B5              ; ******************************************************************************************************************************************************************************************
  56  89B5              ;
  57  89B5              ; 28/07/23
  58  89B5              ;
  59  89B5              ; Variables de DRAW. (Motor principal).
  60  89B5              ;
  61  89B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  62  89B5
  63  89B5 00           Filas db 0												; Filas. [DRAW]
  64  89B6 00           Columns db 0  											; Nº de columnas. [DRAW]
  65  89B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  66  89B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  67  89BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  68  89BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  69  89BD
  70  89BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  71  89BD
  72  89BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  73  89BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  74  89BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  75  89BE 00           Attr db 0												; Atributos de la entidad:
  76  89BF
  77  89BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  78  89BF              ;
  79  89BF              ;	COLORES: 0 ..... NEGRO
  80  89BF              ;    		 1 ..... AZUL
  81  89BF              ; 			 2 ..... ROJO
  82  89BF              ;			 3 ..... MAGENTA
  83  89BF              ; 			 4 ..... VERDE
  84  89BF              ; 			 5 ..... CIAN
  85  89BF              ;			 6 ..... AMARILLO
  86  89BF              ; 			 7 ..... BLANCO
  87  89BF
  88  89BF 00 00        Indice_Sprite_der defw 0
  89  89C1 00 00        Indice_Sprite_izq defw 0
  90  89C3 00 00        Puntero_DESPLZ_der defw 0
  91  89C5 00 00        Puntero_DESPLZ_izq defw 0
  92  89C7
  93  89C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  94  89C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  95  89CA
  96  89CA              ; Variables de objeto. (Características).
  97  89CA
  98  89CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  99  89CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 101  89CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 102  89CE
 103  89CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 104  89CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 105  89CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 106  89CF
 107  89CF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89D1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  89D3 00 00        	defw 0
 110  89D5 00 00 00 00  	db 0,0,0,0
 111  89D9
 112  89D9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89DB 00 00        	defw 0
 114  89DD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 115  89DF 00 00 00 00  	db 0,0,0,0
 116  89E3
 117  89E3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 118  89E3
 119  89E3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 120  89E4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 121  89E4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 122  89E4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 123  89E4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 124  89E4              ;
 125  89E4              ; 														DESCRIPCIÖN:
 126  89E4              ;
 127  89E4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 128  89E4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 129  89E4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 130  89E4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 131  89E4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 132  89E4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 133  89E4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 134  89E4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 135  89E4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 136  89E4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 137  89E4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 138  89E4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 139  89E4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 140  89E4              ;
 141  89E4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 142  89E4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 143  89E4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 144  89E4
 145  89E4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 146  89E5
 147  89E5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 148  89E5
 149  89E5 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 150  89E6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 151  89E8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 152  89EA 00 00        Puntero_indice_mov_bucle defw 0							;
 153  89EC              ;
 154  89EC              ;
 155  89EC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 156  89ED              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 157  89ED              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 158  89ED 00           Incrementa_puntero_backup db 0
 159  89EE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 160  89EF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 161  89EF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 162  89F0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 163  89F1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 164  89F2              ;
 165  89F2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 166  89F2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 167  89F2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 168  89F2              ;
 169  89F2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 170  89F2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 171  89F2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 172  89F2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 173  89F2              ;
 174  89F2              ;														;	"$ff" ..... Bucle infinito de repetición.
 175  89F2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 176  89F2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 177  89F2
 178  89F2
 179  89F2              ; Variables de funcionamiento. [DRAW].
 180  89F2
 181  89F2 00           Columnas db 0
 182  89F3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 183  89F5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  89F5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6
 186  89F6              ; variables de control general.
 187  89F6
 188  89F6 00           Ctrl_2 db 0
 189  89F7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 190  89F7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 191  89F7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 192  89F7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 193  89F7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 194  89F7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 195  89F7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 196  89F7              ;
 197  89F7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 198  89F7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 199  89F7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 200  89F7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 201  89F7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 202  89F7
 203  89F7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  89F8
 205  89F8              ;! 67 Bytes por entidad.
 206  89F8
 207  89F8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  89F8              ;					         		---------;      ;---------
 209  89F8
 210  89F8
 211  89F8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  89F8
 213  89F8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  89F9
 215  89F9              ;														DESCRIPCIÓN:
 216  89F9              ;
 217  89F9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  89F9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  89F9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  89F9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  89F9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  89F9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  89F9
 224  89F9              ;														BIT 3, Recarga de nueva oleada.
 225  89F9              ;														BIT 4, Recarga de nueva oleada.
 226  89F9              ;														BIT 5, ****
 227  89F9
 228  89F9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 229  89FB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 230  89FB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 231  89FB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 232  89FB
 233  89FB
 234  89FB
 235  89FB              ; Gestión de ENTIDADES y CAJAS.
 236  89FB
 237  89FB 00 00        Puntero_store_caja defw 0
 238  89FD 00 00        Puntero_restore_caja defw 0
 239  89FF 00 00        Indice_restore_caja defw 0
 240  8A01 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 241  8A02 00           Numero_parcial_de_entidades db 0
 242  8A03 00           Entidades_en_curso db 0									; ..... ..... .....
 243  8A04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 244  8A05              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 245  8A05              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 246  8A05              ;														; _ (Numero_de_malotes)="0".
 247  8A05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 248  8A07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 249  8A09              ;														; _ puntero (Indice_entidades).
 250  8A09
 251  8A09
 252  8A09              ;---------------------------------------------------------------------------------------------------------------
 253  8A09              ;
 254  8A09              ;	9/8/23
 255  8A09              ;
 256  8A09              ;	Álbumes.
 257  8A09
 258  8A09 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 259  8A0B              ;														; _variable para almacenar lo posición del puntero_
 260  8A0B              ; 														; _de pila, SP.
 261  8A0B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 262  8A0D              ;														; La utiliza la rutina [Extrae_foto_registros].
 263  8A0D 00 00        Stack_snapshot defw 0
 264  8A0F 00 00        Stack_snapshot_disparos defw 0
 265  8A11
 266  8A11 00 00        End_Snapshot defw 0
 267  8A13              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 268  8A13 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 269  8A15              ;														; _el snapshot de los registros del siguiente disparo.
 270  8A15              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 271  8A15 00 00        End_Snapshot_1 defw 0
 272  8A17 00 00        End_Snapshot_disparos_1 defw 0
 273  8A19 00 00        End_Snapshot_2 defw 0
 274  8A1B 00 00        End_Snapshot_disparos_2 defw 0
 275  8A1D 00 00        End_Snapshot_3 defw 0
 276  8A1F 00 00        End_Snapshot_disparos_3 defw 0
 277  8A21
 278  8A21 00 00        Puntero_indice_album_de_fotos defw 0
 279  8A23 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 280  8A25
 281  8A25 00 00        Puntero_indice_End_Snapshot defw 0
 282  8A27 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 283  8A29 00 00        Puntero_de_End_Snapshot defw 0
 284  8A2B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 285  8A2D
 286  8A2D              ;---------------------------------------------------------------------------------------------------------------
 287  8A2D
 288  8A2D              ; Gestión de Disparos.
 289  8A2D
 290  8A2D 00           Numero_de_disparotes db 0
 291  8A2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 292  8A30 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 293  8A32 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 294  8A33              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 295  8A33              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 296  8A33 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 297  8A35              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 298  8A35              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 299  8A35              ;														; _produzca colisión.
 300  8A35 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 301  8A37              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 302  8A37 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 303  8A3A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 304  8A3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 306  8A3D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 307  8A3F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 308  8A40
 309  8A40              ;---------------------------------------------------------------------------------------------------------------
 310  8A40
 311  8A40              ; Relojes y temporizaciones.
 312  8A40
 313  8A40 00           Contador_de_frames db 0
 314  8A41 04           Clock_explosion db 4
 315  8A42 1E           Clock_Entidades_en_curso db 30
 316  8A43 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 317  8A44              ;														; Repite la oleada de entidades.
 318  8A44 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 319  8A45 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 320  8A46 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 321  8A47
 322  8A47 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 323  8A48 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 324  8A49 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 325  8A4A
 326  8A4A              ;---------------------------------------------------------------------------------------------------------------
 327  8A4A
 328  8A4A              ; Gestión de NIVELES.
 329  8A4A
 330  8A4A 00           Nivel db 0												; Nivel actual del juego.
 331  8A4B 00 00        Puntero_indice_NIVELES defw 0
 332  8A4D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 333  8A4F              ; 														; _ que definen el NIVEL.
 334  8A4F              ; Y todo comienza aquí .....
 335  8A4F              ;
 336  8A4F              ; Rutina principal *************************************************************************************************************************************************************************
 337  8A4F              ;
 338  8A4F              ;	14/11/22
 339  8A4F
 340  8A4F              START
 341  8A4F
 342  8A4F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 343  8A52 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 344  8A54 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 345  8A56 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 346  8A58 F3           	DI
 347  8A59
 348  8A59 3E 07        	ld a,%00000111
 349  8A5B CD D1 99     	call Cls
 350  8A5E
 351  8A5E CD 60 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 352  8A61
 353  8A61              ; INICIALIZACIÓN.
 354  8A61
 355  8A61 CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 356  8A64
 357  8A64 CD 11 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 358  8A67
 359  8A67 CD D3 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 360  8A6A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 361  8A6A CD E9 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 362  8A6D              ;													     ; _ malotes antes de guardar ninguna foto.
 363  8A6D              ; ----------
 364  8A6D
 365  8A6D CD 10 8E     	call Restore_entidad
 366  8A70
 367  8A70 21 02 8A     	ld hl,Numero_parcial_de_entidades
 368  8A73 46           	ld b,(hl)
 369  8A74 04           	inc b
 370  8A75 05           	dec b
 371  8A76 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 372  8A78
 373  8A78              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 374  8A78              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 375  8A78              ;	Pintamos el resto de entidades:
 376  8A78
 377  8A78              ;	INICIA ENTIDADES !!!!!
 378  8A78
 379  8A78 C5           1 push bc  												; Guardo el contador de entidades.
 380  8A79
 381  8A79 CD 7A 8C     	call Inicia_entidad
 382  8A7C
 383  8A7C C1           	pop bc
 384  8A7D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 385  8A7F
 386  8A7F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 387  8A7F              ; (Esto se dá cuando se inicia una nueva oleada).
 388  8A7F
 389  8A7F 3A F8 89     	ld a,(Ctrl_1)
 390  8A82 CB 5F        	bit 3,a
 391  8A84 20 18        	jr nz,5F											; Loop
 392  8A86
 393  8A86              ; 	INICIA AMADEUS !!!!!
 394  8A86
 395  8A86 CD 37 8E     3 call Restore_Amadeus
 396  8A89 CD 8D 8D     	call Inicia_Puntero_objeto
 397  8A8C CD 07 94     	call Draw
 398  8A8F CD A0 7F     	call Guarda_foto_registros
 399  8A92 11 A4 85     	ld de,Amadeus_db
 400  8A95 CD 49 8E     	call Store_Amadeus
 401  8A98
 402  8A98              ; 	INICIA DISPAROS !!!!!
 403  8A98
 404  8A98 CD 49 8D     	call Inicia_Puntero_Disparo_Entidades
 405  8A9B CD 50 8D     	call Inicia_Puntero_Disparo_Amadeus
 406  8A9E
 407  8A9E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 408  8A9E
 409  8A9E CD D3 8C     5 call Inicia_punteros_de_cajas
 410  8AA1 CD 10 8E     	call Restore_entidad
 411  8AA4
 412  8AA4 3A F8 89     	ld a,(Ctrl_1)
 413  8AA7 CB 5F        	bit 3,a
 414  8AA9 28 0A        	jr z,6F
 415  8AAB
 416  8AAB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 417  8AAB
 418  8AAB 21 F8 89     	ld hl,Ctrl_1
 419  8AAE CB 9E        	res 3,(hl)
 420  8AB0 CD 57 8D     	call Calcula_numero_de_malotes
 421  8AB3 18 0A        	jr Main
 422  8AB5
 423  8AB5              ; ----------
 424  8AB5
 425  8AB5 3A 02 8A     6 ld a,(Numero_parcial_de_entidades)
 426  8AB8 3C           	inc a
 427  8AB9 32 04 8A     	ld (Numero_de_malotes),a
 428  8ABC
 429  8ABC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 430  8ABC              ; _ tenemos calculado (Numero_de_malotes).
 431  8ABC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 432  8ABC              ; _ para situarnos en el siguiente album.
 433  8ABC
 434  8ABC CD 1A 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 435  8ABF
 436  8ABF              ; ------------------------------------
 437  8ABF
 438  8ABF              Main
 439  8ABF
 440  8ABF FB           	ei ; Interrupciones habilitadas.
 441  8AC0
 442  8AC0              ; -----------------------------------------------------------------------
 443  8AC0              ;
 444  8AC0              ;	3/8/23
 445  8AC0
 446  8AC0 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 447  8AC3 47           	ld b,a
 448  8AC4 3A 40 8A     	ld a,(Contador_de_frames)
 449  8AC7 B8           	cp b
 450  8AC8 20 18        	jr nz,13F
 451  8ACA
 452  8ACA 3A 02 8A     	ld a,(Numero_parcial_de_entidades)
 453  8ACD 47           	ld b,a
 454  8ACE 3A 03 8A     	ld a,(Entidades_en_curso)
 455  8AD1 B8           	cp b
 456  8AD2 28 0E        	jr z,13F
 457  8AD4 30 0C        	jr nc,13F
 458  8AD6
 459  8AD6 3C           	inc a
 460  8AD7 32 03 8A     	ld (Entidades_en_curso),a
 461  8ADA
 462  8ADA 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 463  8ADD
 464  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 465  8ADD              ;! _ IMPREDECIBLE !!!!
 466  8ADD
 467  8ADD C6 64        	add 100
 468  8ADF 32 42 8A     	ld (Clock_Entidades_en_curso),a
 469  8AE2
 470  8AE2              ; Habilita disparos.
 471  8AE2
 472  8AE2 21 44 8A     13 ld hl,Disparo_Amadeus
 473  8AE5 11 46 8A     	ld de,CLOCK_repone_disparo_Amadeus
 474  8AE8 CD 96 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 475  8AEB
 476  8AEB 21 47 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 477  8AEE 11 49 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 478  8AF1 CD 96 A0     	call Habilita_disparos
 479  8AF4
 480  8AF4              ; COLISIONES.
 481  8AF4
 482  8AF4 CD E9 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 483  8AF7
 484  8AF7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 485  8AF7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 486  8AF7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 487  8AF7
 488  8AF7 AF           	xor a
 489  8AF8 32 32 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 490  8AFB
 491  8AFB CD D3 8C     	call Inicia_punteros_de_cajas
 492  8AFE CD 10 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 493  8B01              ; 														; _ en DRAW.
 494  8B01 3A B5 89     	ld a,(Filas)
 495  8B04 A7           	and a
 496  8B05 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 497  8B07 CD 22 8E     	call Incrementa_punteros_de_cajas
 498  8B0A 18 F2        	jr 12B
 499  8B0C
 500  8B0C              ; ---------------------------------------------------------------------------------------
 501  8B0C
 502  8B0C 3A 02 8A     10 ld a,(Numero_parcial_de_entidades)
 503  8B0F 47               ld b,a
 504  8B10 A7           	and a
 505  8B11 20 14        	jr nz,11F
 506  8B13
 507  8B13 21 F8 89     	ld hl,Ctrl_1
 508  8B16 CB 66        	bit 4,(hl)
 509  8B18 C2 A4 8B     	jp nz,16F
 510  8B1B
 511  8B1B 21 F8 89     	ld hl,Ctrl_1
 512  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 513  8B20
 514  8B20 3A 40 8A     	ld a,(Contador_de_frames)
 515  8B23 3C           	inc a
 516  8B24 32 43 8A     	ld (Activa_recarga_cajas),a
 517  8B27
 518  8B27              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 519  8B27
 520  8B27 3A 03 8A     11 ld a,(Entidades_en_curso)
 521  8B2A A7           	and a
 522  8B2B CA A4 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 523  8B2E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 524  8B2F
 525  8B2F              ; Código que ejecutamos con cada entidad:
 526  8B2F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 527  8B2F
 528  8B2F C5           15 push bc 												; Nº de entidades en curso.
 529  8B30
 530  8B30              ; Impacto ???
 531  8B30
 532  8B30 3A CE 89     	ld a,(Impacto)
 533  8B33 A7           	and a
 534  8B34 28 2D        	jr z,8F
 535  8B36
 536  8B36              ; Hay Impacto en esta entidad.
 537  8B36
 538  8B36 21 41 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 539  8B39 35           	dec (hl)
 540  8B3A 20 62        	jr nz,17F
 541  8B3C
 542  8B3C              ;! Velocidad de la animación de la explosión.
 543  8B3C
 544  8B3C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 545  8B3E              ;														; _,(velocidad de la explosión).
 546  8B3E CD 8A 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 547  8B41
 548  8B41              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 549  8B41
 550  8B41 3A F6 89     	ld a,(Ctrl_2)
 551  8B44 CB 4F        	bit 1,a
 552  8B46 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 553  8B48
 554  8B48              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 555  8B48
 556  8B48 3A BD 89     	ld a,(CTRL_DESPLZ)
 557  8B4B A7           	and a
 558  8B4C 20 08        	jr nz,18F
 559  8B4E
 560  8B4E 21 84 84     	ld hl,Indice_Explosion_2x2-2
 561  8B51 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 562  8B54 18 06        	jr 19F
 563  8B56
 564  8B56 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 565  8B59 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 566  8B5C
 567  8B5C 21 F6 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 568  8B5F CB CE        	set 1,(hl)
 569  8B61 18 22        	jr 7F
 570  8B63
 571  8B63              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 572  8B63              ; _con las coordenadas de la entidad almacenada en DRAW.
 573  8B63
 574  8B63 3A F8 89     8 ld a,(Ctrl_1)
 575  8B66 CB 57        	bit 2,a
 576  8B68 28 1B        	jr z,7F
 577  8B6A
 578  8B6A 2A 35 8A     	ld hl,(Coordenadas_disparo_certero)
 579  8B6D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 580  8B6E              ;														; E contiene la coordenada_X del disparo.
 581  8B6E 2A BB 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 582  8B71              ;														; H FILA, (Coordenada_y de la entidad).
 583  8B71 A7           	and a
 584  8B72 ED 52        	sbc hl,de
 585  8B74
 586  8B74 CD 20 93     	call Determina_resultado_comparativa
 587  8B77
 588  8B77 78           	ld a,b
 589  8B78 A7           	and a
 590  8B79 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 591  8B7B
 592  8B7B              ; ----- ----- -----
 593  8B7B
 594  8B7B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 595  8B7D 32 CE 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 596  8B80
 597  8B80 21 F8 89     	ld hl,Ctrl_1
 598  8B83 CB 96        	res 2,(hl)
 599  8B85
 600  8B85 CD FC 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 601  8B88
 602  8B88 3A E3 89     	ld a,(Ctrl_0)
 603  8B8B CB 67        	bit 4,a
 604  8B8D 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 605  8B8F
 606  8B8F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 607  8B8F              ; [[[
 608  8B8F CD AB 8E     	call Detecta_disparo_entidad
 609  8B92              ; ]]]
 610  8B92 CD 9A 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 611  8B95
 612  8B95 21 E3 89     	ld hl,Ctrl_0
 613  8B98 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 614  8B9A AF           	xor a
 615  8B9B 32 E4 89     	ld (Obj_dibujado),a
 616  8B9E
 617  8B9E CD D5 8D     17 call Store_Restore_cajas
 618  8BA1
 619  8BA1 C1           	pop bc
 620  8BA2 10 8B        	djnz 15B
 621  8BA4
 622  8BA4              ; ------------------------------------
 623  8BA4
 624  8BA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 625  8BA4              ; Hemos gestionado todas las unidades.
 626  8BA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 627  8BA4
 628  8BA4              ;	ld hl,Ctrl_1
 629  8BA4              ;	res 2,(hl)
 630  8BA4
 631  8BA4              ; ------------------------------------
 632  8BA4
 633  8BA4              ; Tras la gestión de las entidades, ... AMADEUS.
 634  8BA4
 635  8BA4 CD 37 8E     16 call Restore_Amadeus
 636  8BA7
 637  8BA7 3A CE 89     	ld a,(Impacto)
 638  8BAA A7           	and a
 639  8BAB 20 FE        	jr nz,$
 640  8BAD
 641  8BAD CD 5B 8C     	call Mov_Amadeus
 642  8BB0
 643  8BB0 3A E3 89     	ld a,(Ctrl_0)
 644  8BB3 CB 67        	bit 4,a
 645  8BB5 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 646  8BB7
 647  8BB7 CD 9A 8C     	call Guarda_foto_entidad_a_pintar
 648  8BBA
 649  8BBA
 650  8BBA
 651  8BBA 21 E3 89     14 ld hl,Ctrl_0
 652  8BBD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 653  8BBF AF           	xor a
 654  8BC0 32 E4 89     	ld (Obj_dibujado),a
 655  8BC3
 656  8BC3 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 657  8BC6 CD 49 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 658  8BC9
 659  8BC9              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 660  8BC9
 661  8BC9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 662  8BC9
 663  8BC9              ;	call Calcula_numero_de_disparotes
 664  8BC9
 665  8BC9 CD 1A 8D     9 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 666  8BCC              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 667  8BCC              ;														; _ interrupción.
 668  8BCC 3E 04        	ld a,4
 669  8BCE D3 FE        	out ($fe),a
 670  8BD0
 671  8BD0              ; ----------------------------------------
 672  8BD0
 673  8BD0 3A F8 89     	ld a,(Ctrl_1) 										; Existe Loop?
 674  8BD3 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 675  8BD5 CA BF 8A     	jp z,Main
 676  8BD8
 677  8BD8              ; -----
 678  8BD8              ;	(((
 679  8BD8
 680  8BD8 3A 40 8A     	ld a,(Contador_de_frames)
 681  8BDB 47           	ld b,a
 682  8BDC 3A 43 8A     	ld a,(Activa_recarga_cajas)
 683  8BDF B8           	cp b
 684  8BE0 28 08        	jr z,20F
 685  8BE2
 686  8BE2 21 F8 89     	ld hl,Ctrl_1
 687  8BE5 CB E6        	set 4,(hl)
 688  8BE7 C3 BF 8A     	jp Main
 689  8BEA
 690  8BEA 21 F8 89     20 ld hl,Ctrl_1
 691  8BED CB A6        	res 4,(hl)
 692  8BEF F3           	di
 693  8BF0
 694  8BF0 3A 40 8A     	ld a,(Contador_de_frames)
 695  8BF3
 696  8BF3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 697  8BF3              ;! _ IMPREDECIBLE !!!!
 698  8BF3
 699  8BF3 C6 0A        	add 10
 700  8BF5 32 42 8A     	ld (Clock_Entidades_en_curso),a
 701  8BF8
 702  8BF8 C3 64 8A     	jp 4B
 703  8BFB
 704  8BFB C9           	ret
 705  8BFC
 706  8BFC              ; --------------------------------------------------------------------------------------------------------------
 707  8BFC              ;
 708  8BFC              ;	27/05/23
 709  8BFC
 710  8BFC              Mov_obj
 711  8BFC
 712  8BFC              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 713  8BFC
 714  8BFC 3A F6 89     	ld a,(Ctrl_2)
 715  8BFF CB 4F        	bit 1,a
 716  8C01 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 717  8C03
 718  8C03              ; Explosión:
 719  8C03
 720  8C03 3A F7 89     	ld a,(Frames_explosion)
 721  8C06 A7           	and a
 722  8C07 20 11        	jr nz,4F
 723  8C09
 724  8C09              ; Una alimaña menos!!!!!!!!!1
 725  8C09
 726  8C09 CD 52 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 727  8C0C 21 02 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 728  8C0F 35           	dec (hl)
 729  8C10 21 03 8A     	ld hl,Entidades_en_curso
 730  8C13 35           	dec (hl)
 731  8C14 21 01 8A     	ld hl,Numero_de_entidades
 732  8C17 35           	dec (hl)
 733  8C18 18 40        	jr 3F
 734  8C1A
 735  8C1A              ; -----
 736  8C1A
 737  8C1A              ;	`Movemos´ la explosión.
 738  8C1A
 739  8C1A 2A C3 89     4 ld hl,(Puntero_DESPLZ_der)
 740  8C1D 23           	inc hl
 741  8C1E 23           	inc hl
 742  8C1F 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 743  8C22 CD 87 8D     	call Extrae_address
 744  8C25 22 B9 89     	ld (Puntero_objeto),hl
 745  8C28
 746  8C28 21 F7 89     	ld hl,Frames_explosion
 747  8C2B 35           	dec (hl)
 748  8C2C
 749  8C2C CD 8A 8C     	call Guarda_foto_entidad_a_borrar
 750  8C2F 18 29        	jr 3F
 751  8C31
 752  8C31 AF           2 xor a
 753  8C32 32 E4 89     	ld (Obj_dibujado),a
 754  8C35 32 E3 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 755  8C38              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 756  8C38              ; 														; _de la entidad.
 757  8C38 CD A4 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 758  8C3B              ;														; Obj_dibujado="0".
 759  8C3B              ; Movemos Entidades malignas.
 760  8C3B
 761  8C3B              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 762  8C3B              ;	and a 												; _a movernos. (Limitador_de_entidades).
 763  8C3B              ;	ret z
 764  8C3B
 765  8C3B CD 31 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 766  8C3E
 767  8C3E 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 768  8C41 CB 67        	bit 4,a
 769  8C43 C8           	ret z
 770  8C44
 771  8C44              ; Ha habido desplazamiento de la entidad maligna.
 772  8C44              ; Ha llegado a zona de AMADEUS ???
 773  8C44
 774  8C44 3A BC 89     	ld a,(Coordenada_y)
 775  8C47 FE 14        	cp $14
 776  8C49 D4 AE 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 777  8C4C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 778  8C4C              ; ---------
 779  8C4C
 780  8C4C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 781  8C4E 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 782  8C51 CD A4 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 783  8C54 CD BB 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 784  8C57 CD 8A 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 785  8C5A C9           3 ret													; _de la misma.
 786  8C5B
 787  8C5B              ; --------------------------------------------------------------------------------------------------------------
 788  8C5B              ;
 789  8C5B              ;	29/1/23
 790  8C5B
 791  8C5B              Mov_Amadeus
 792  8C5B
 793  8C5B AF           	xor a
 794  8C5C 32 E4 89     	ld (Obj_dibujado),a
 795  8C5F CD A4 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 796  8C62              ;														; Obj_dibujado="0".
 797  8C62              ; Movemos Amadeus.
 798  8C62
 799  8C62 CD 74 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 800  8C65 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 801  8C68 CB 67        	bit 4,a
 802  8C6A C8           	ret z
 803  8C6B
 804  8C6B              ; ---------
 805  8C6B
 806  8C6B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 807  8C6D 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 808  8C70 CD A4 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 809  8C73 CD BB 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 810  8C76 CD 8A 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 811  8C79 C9           	ret													; _de la nave.
 812  8C7A
 813  8C7A              ; -----------------------------------------------------------------------------------
 814  8C7A
 815  8C7A CD 8D 8D     Inicia_entidad	call Inicia_Puntero_objeto
 816  8C7D CD E5 99     	call Recompone_posicion_inicio
 817  8C80 CD 07 94     	call Draw
 818  8C83 CD A0 7F     	call Guarda_foto_registros
 819  8C86 CD D5 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 820  8C89 C9           	ret
 821  8C8A
 822  8C8A              ; --------------------------------------------------------------------------------------------------------------
 823  8C8A              ;
 824  8C8A              ;	31/01/23
 825  8C8A              ;
 826  8C8A              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 827  8C8A
 828  8C8A              Guarda_foto_entidad_a_borrar
 829  8C8A
 830  8C8A CD EB 96     	call Prepara_draw
 831  8C8D CD 1B 96     	call calcula_CColumnass
 832  8C90 CD 52 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 833  8C93 CD B1 96     	call Define_rutina_de_impresion
 834  8C96 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 835  8C99 C9           	ret
 836  8C9A
 837  8C9A              ; --------------------------------------------------------------------------------------------------------------
 838  8C9A              ;
 839  8C9A              ;	31/01/23
 840  8C9A              ;
 841  8C9A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 842  8C9A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 843  8C9A
 844  8C9A              Guarda_foto_entidad_a_pintar
 845  8C9A
 846  8C9A CD C7 8C     	call Repone_pintar
 847  8C9D CD 07 94     	call Draw
 848  8CA0 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 849  8CA3 C9           	ret
 850  8CA4
 851  8CA4              ; --------------------------------------------------------------------------------------------------------------
 852  8CA4              ;
 853  8CA4              ;
 854  8CA4
 855  8CA4 21 B5 89     Prepara_var_pintado_borrado	ld hl,Filas
 856  8CA7 3A E4 89     	ld a,(Obj_dibujado)
 857  8CAA A7           	and a
 858  8CAB 28 05        	jr z,1F
 859  8CAD 11 D9 89     	ld de,Variables_de_pintado
 860  8CB0 18 03        	jr 2F
 861  8CB2 11 CF 89     1 ld de,Variables_de_borrado
 862  8CB5 01 08 00     2 ld bc,8
 863  8CB8 ED B0        	ldir
 864  8CBA C9           	ret
 865  8CBB
 866  8CBB              ; --------------------------------------------------------------------------------------------------------------
 867  8CBB
 868  8CBB 21 CF 89     Repone_borrar ld hl,Variables_de_borrado
 869  8CBE 11 B5 89     	ld de,Filas
 870  8CC1 01 08 00     	ld bc,8
 871  8CC4 ED B0        	ldir
 872  8CC6 C9           	ret
 873  8CC7
 874  8CC7 21 D9 89     Repone_pintar ld hl,Variables_de_pintado
 875  8CCA 11 B5 89     	ld de,Filas
 876  8CCD 01 08 00     	ld bc,8
 877  8CD0 ED B0        	ldir
 878  8CD2 C9           	ret
 879  8CD3
 880  8CD3              ; *************************************************************************************************************************************************************
 881  8CD3              ;
 882  8CD3              ; 8/1/23
 883  8CD3              ;
 884  8CD3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 885  8CD3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 886  8CD3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 887  8CD3
 888  8CD3              ; Destruye HL y DE !!!!!
 889  8CD3
 890  8CD3              Inicia_punteros_de_cajas
 891  8CD3
 892  8CD3 21 8C 85     	ld hl,Indice_de_cajas
 893  8CD6 CD 87 8D         call Extrae_address
 894  8CD9 22 FB 89         ld (Puntero_store_caja),hl
 895  8CDC 21 8E 85     	ld hl,Indice_de_cajas+2
 896  8CDF 22 FF 89     	ld (Indice_restore_caja),hl
 897  8CE2 CD 87 8D     	call Extrae_address
 898  8CE5 22 FD 89     	ld (Puntero_restore_caja),hl
 899  8CE8 C9               ret
 900  8CE9
 901  8CE9              ; ---------------------------------------------------------------
 902  8CE9              ;
 903  8CE9              ;	9/8/23
 904  8CE9              ;
 905  8CE9              ;	Inicialización y gestión de álbumes de fotos y cajas.
 906  8CE9
 907  8CE9              Inicia_punteros_de_albumes_y_malotes
 908  8CE9
 909  8CE9 21 EC 84     	ld hl,Indice_album_de_fotos
 910  8CEC 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 911  8CEF CD 87 8D     	call Extrae_address
 912  8CF2 22 0D 8A     	ld (Stack_snapshot),hl
 913  8CF5
 914  8CF5 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 915  8CF8 22 23 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 916  8CFB CD 87 8D     	call Extrae_address
 917  8CFE 22 0F 8A     	ld (Stack_snapshot_disparos),hl
 918  8D01
 919  8D01 21 FC 84     	ld hl,Indice_End_Snapshot
 920  8D04 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 921  8D07 CD 87 8D     	call Extrae_address
 922  8D0A 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 923  8D0D
 924  8D0D 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 925  8D10 22 27 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 926  8D13 CD 87 8D     	call Extrae_address
 927  8D16 22 2B 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 928  8D19
 929  8D19 C9           	ret
 930  8D1A
 931  8D1A              ;	12/8/23
 932  8D1A
 933  8D1A              Avanza_puntero_de_album_de_fotos_y_malotes
 934  8D1A
 935  8D1A              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 936  8D1A
 937  8D1A              ; Estamos en el último álbum del índice???.
 938  8D1A
 939  8D1A 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
 940  8D1D 01 F2 84     	ld bc,Indice_album_de_fotos+6
 941  8D20 A7           	and a
 942  8D21 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 943  8D23 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 944  8D25
 945  8D25 21 F8 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 946  8D28 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 947  8D2A 76           	halt
 948  8D2B C9           	ret
 949  8D2C
 950  8D2C 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 951  8D2F 23           	inc hl
 952  8D30 23           	inc hl
 953  8D31 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 954  8D34 CD 87 8D     	call Extrae_address
 955  8D37 22 0D 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 956  8D3A
 957  8D3A 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
 958  8D3D 23           	inc hl
 959  8D3E 23           	inc hl
 960  8D3F 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 961  8D42 CD 87 8D     	call Extrae_address
 962  8D45 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 963  8D48
 964  8D48 C9           	ret
 965  8D49
 966  8D49              ; *************************************************************************************************************************************************************
 967  8D49              ;
 968  8D49              ; 8/1/23
 969  8D49              ;
 970  8D49              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 971  8D49
 972  8D49 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 973  8D4C 22 2E 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 974  8D4F C9           	ret
 975  8D50 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 976  8D53 22 30 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 977  8D56 C9           	ret
 978  8D57
 979  8D57              ; -------------------------------------------------------------------------------------------------------------
 980  8D57              ;
 981  8D57              ; 3/8/23
 982  8D57              ;
 983  8D57
 984  8D57              Calcula_numero_de_malotes
 985  8D57
 986  8D57 21 00 70     	ld hl,Album_de_fotos
 987  8D5A EB           	ex de,hl
 988  8D5B 2A 11 8A     	ld hl,(End_Snapshot)
 989  8D5E
 990  8D5E 06 00        	ld b,0
 991  8D60 7D           	ld a,l
 992  8D61 93           	sub e
 993  8D62 28 07        	jr z,1F
 994  8D64
 995  8D64              ; Nº de malotes no es "0".
 996  8D64
 997  8D64 D6 06        2 sub 6
 998  8D66 04           	inc b
 999  8D67 A7           	and a
1000  8D68 20 FA        	jr nz,2B
1001  8D6A 78           	ld a,b
1002  8D6B
1003  8D6B 32 04 8A     1 ld (Numero_de_malotes),a
1004  8D6E C9           	ret
1005  8D6F
1006  8D6F              ; -------------------------------------------------------------------------------------------------------------
1007  8D6F              ;
1008  8D6F              ; 28/2/23
1009  8D6F              ;
1010  8D6F
1011  8D6F              Calcula_numero_de_disparotes
1012  8D6F
1013  8D6F 21 0D 72     	ld hl,Album_de_fotos_disparos
1014  8D72 EB           	ex de,hl
1015  8D73 2A 2B 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1016  8D76
1017  8D76 06 00        	ld b,0
1018  8D78 7D           	ld a,l
1019  8D79 93           	sub e
1020  8D7A 28 07        	jr z,1F
1021  8D7C
1022  8D7C              ; Nº de malotes no es "0".
1023  8D7C
1024  8D7C D6 06        2 sub 6
1025  8D7E 04           	inc b
1026  8D7F A7           	and a
1027  8D80 20 FA        	jr nz,2B
1028  8D82 78           	ld a,b
1029  8D83
1030  8D83 32 2D 8A     1 ld (Numero_de_disparotes),a
1031  8D86 C9           	ret
1032  8D87
1033  8D87              ; *************************************************************************************************************************************************************
1034  8D87              ;
1035  8D87              ; 20/10/22
1036  8D87              ;
1037  8D87              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1038  8D87              ;
1039  8D87              ; Destruye el puntero y DE !!!!!
1040  8D87
1041  8D87 5E           Extrae_address ld e,(hl)
1042  8D88 23           	inc hl
1043  8D89 56           	ld d,(hl)
1044  8D8A 2B           	dec hl
1045  8D8B EB           	ex de,hl
1046  8D8C C9           	ret
1047  8D8D
1048  8D8D              ; *************************************************************************************************************************************************************
1049  8D8D              ;
1050  8D8D              ;	7/2/23
1051  8D8D              ;
1052  8D8D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1053  8D8D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1054  8D8D              ;
1055  8D8D              ;   Destruye HL y BC !!!!!,
1056  8D8D              ;
1057  8D8D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1058  8D8D              ;					"0" ..... Izquierda.
1059  8D8D
1060  8D8D              Inicia_Puntero_objeto
1061  8D8D
1062  8D8D 3A C9 89     	ld a,(Cuad_objeto)
1063  8D90 E6 01        	and 1
1064  8D92 F5           	push af
1065  8D93 CC B1 8D     	call z,Inicia_puntero_objeto_izq
1066  8D96 F1           	pop af
1067  8D97 28 2B        	jr z,1F
1068  8D99 CD 9E 8D     	call Inicia_puntero_objeto_der
1069  8D9C 18 26        	jr 1F
1070  8D9E
1071  8D9E              ; Arrancamos desde la parte izquierda de la pantalla.
1072  8D9E              ; Iniciamos (Indice_Sprite_der).
1073  8D9E
1074  8D9E 2A BF 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1075  8DA1 22 C3 89     	ld (Puntero_DESPLZ_der),hl
1076  8DA4 CD 87 8D     	call Extrae_address
1077  8DA7 22 B9 89     	ld (Puntero_objeto),hl
1078  8DAA
1079  8DAA 2A C1 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1080  8DAD 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1081  8DB0 C9           	ret
1082  8DB1
1083  8DB1              ; Arrancamos desde la parte derecha de la pantalla.
1084  8DB1              ; Iniciamos (Indice_Sprite_izq).
1085  8DB1
1086  8DB1 2A C1 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1087  8DB4 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1088  8DB7 CD 87 8D     	call Extrae_address
1089  8DBA 22 B9 89     	ld (Puntero_objeto),hl
1090  8DBD
1091  8DBD 2A BF 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1092  8DC0 22 C3 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1093  8DC3 C9           	ret
1094  8DC4
1095  8DC4              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1096  8DC4
1097  8DC4 21 40 83     1 ld hl,Amadeus
1098  8DC7 ED 4B B9 89  	ld bc,(Puntero_objeto)
1099  8DCB B7 ED 42     	sub hl,bc
1100  8DCE C0           	ret nz
1101  8DCF 21 E3 89     	ld hl,Ctrl_0
1102  8DD2 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1103  8DD4 C9           	ret 												; _de nuestra nave en los extremos.
1104  8DD5
1105  8DD5              ; *************************************************************************************************************************************************************
1106  8DD5              ;
1107  8DD5              ;	14/5/23
1108  8DD5              ;
1109  8DD5              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1110  8DD5              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1111  8DD5
1112  8DD5              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1113  8DD5              ;	_de la 2ª y 3ª entidad respectivamente.
1114  8DD5
1115  8DD5              Store_Restore_cajas
1116  8DD5
1117  8DD5 E5           	push hl
1118  8DD6 D5           	push de
1119  8DD7 C5            	push bc
1120  8DD8
1121  8DD8              ;	STORE !!!!!
1122  8DD8              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1123  8DD8
1124  8DD8 21 B5 89     	ld hl,Filas
1125  8DDB ED 5B FB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1126  8DDF 01 43 00     	ld bc,67
1127  8DE2 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1128  8DE4
1129  8DE4              ; 	Entidad_sospechosa. 20/4/23
1130  8DE4
1131  8DE4 3A CE 89     	ld a,(Impacto)
1132  8DE7 A7           	and a
1133  8DE8 28 0C        	jr z,1F
1134  8DEA
1135  8DEA 2A FB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1136  8DED 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1137  8DF0 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1138  8DF1 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1139  8DF3 22 33 8A     	ld (Entidad_sospechosa_de_colision),hl
1140  8DF6
1141  8DF6              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1142  8DF6
1143  8DF6 2A FD 89     1 ld hl,(Puntero_restore_caja)
1144  8DF9 7E           	ld a,(hl)
1145  8DFA A7           	and a
1146  8DFB F5           	push af
1147  8DFC 28 08        	jr z,2F
1148  8DFE
1149  8DFE 11 B5 89     	ld de,Filas
1150  8E01 01 43 00     	ld bc,67
1151  8E04 ED B0        	ldir
1152  8E06
1153  8E06 CD 22 8E     2 call Incrementa_punteros_de_cajas
1154  8E09 F1           	pop af
1155  8E0A 28 EA        	jr z,1B
1156  8E0C
1157  8E0C C1           	pop bc
1158  8E0D D1           	pop de
1159  8E0E E1           	pop hl
1160  8E0F
1161  8E0F C9           	ret
1162  8E10
1163  8E10              ; **************************************************************************************************
1164  8E10              ;
1165  8E10              ;	12/05/23
1166  8E10              ;
1167  8E10              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1168  8E10
1169  8E10 E5           Restore_entidad push hl
1170  8E11 D5           	push de
1171  8E12 C5            	push bc
1172  8E13
1173  8E13 2A FB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1174  8E16 11 B5 89     	ld de,Filas
1175  8E19 01 43 00     	ld bc,67
1176  8E1C ED B0        	ldir
1177  8E1E
1178  8E1E C1           	pop bc
1179  8E1F D1           	pop de
1180  8E20 E1           	pop hl
1181  8E21 C9           	ret
1182  8E22
1183  8E22
1184  8E22              ; **************************************************************************************************
1185  8E22              ;
1186  8E22              ;	08/05/23
1187  8E22              ;
1188  8E22              ;	Incrementamos los dos punteros de entidades. (+1).
1189  8E22
1190  8E22 2A FD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1191  8E25 22 FB 89     	ld (Puntero_store_caja),hl
1192  8E28 2A FF 89     	ld hl,(Indice_restore_caja)
1193  8E2B 23           	inc hl
1194  8E2C 23           	inc hl
1195  8E2D 22 FF 89     	ld (Indice_restore_caja),hl
1196  8E30 CD 87 8D         call Extrae_address
1197  8E33 22 FD 89         ld (Puntero_restore_caja),hl
1198  8E36 C9               ret
1199  8E37
1200  8E37              ; **************************************************************************************************
1201  8E37              ;
1202  8E37              ;	25/01/23
1203  8E37              ;
1204  8E37              ;	Restore_Amadeus
1205  8E37              ;
1206  8E37              ;	Cargamos en DRAW los parámetros de Amadeus.
1207  8E37              ;
1208  8E37
1209  8E37 E5           Restore_Amadeus	push hl
1210  8E38 D5           	push de
1211  8E39 C5            	push bc
1212  8E3A 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1213  8E3D 11 B5 89     	ld de,Filas
1214  8E40 01 43 00     	ld bc,67
1215  8E43 ED B0        	ldir
1216  8E45 C1           	pop bc
1217  8E46 D1           	pop de
1218  8E47 E1           	pop hl
1219  8E48 C9           	ret
1220  8E49
1221  8E49              ; *************************************************************************************************************************************************************
1222  8E49              ;
1223  8E49              ;	29/04/23
1224  8E49              ;
1225  8E49              ;	Store_Amadeus
1226  8E49              ;
1227  8E49              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1228  8E49              ;
1229  8E49              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1230  8E49              ;
1231  8E49              ;	DESTRUYE: HL y BC y DE.
1232  8E49
1233  8E49 21 B5 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1234  8E4C 01 43 00     	ld bc,67
1235  8E4F ED B0        	ldir
1236  8E51 C9           	ret
1237  8E52
1238  8E52              ; -----------------------------------------------------------
1239  8E52              ;
1240  8E52              ;	27/04/23
1241  8E52              ;
1242  8E52              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1243  8E52              ;
1244  8E52              ;	Destruye: HL,BC,DE,A
1245  8E52
1246  8E52 21 B5 89     Borra_datos_entidad ld hl,Filas
1247  8E55 01 42 00     	ld bc,66
1248  8E58 AF           	xor a
1249  8E59 77           	ld (hl),a
1250  8E5A 11 B6 89     	ld de,Filas+1
1251  8E5D ED B0        	ldir
1252  8E5F C9           	ret
1253  8E60
1254  8E60              ; -----------------------------------------------------------
1255  8E60
1256  8E60              ; Teclado.
1257  8E60
1258  8E60 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1259  8E62 DB FE        	in a,($fe)
1260  8E64 E6 01        	and $01
1261  8E66 28 02        	jr z,1f
1262  8E68 18 F6        	jr Pulsa_ENTER
1263  8E6A C9           1 ret
1264  8E6B
1265  8E6B              ; **************************************************************************************************
1266  8E6B              ;
1267  8E6B              ; Temporización.
1268  8E6B
1269  8E6B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1270  8E6B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1271  8E6B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1272  8E6B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1273  8E6B
1274  8E6B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1275  8E6B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1276  8E6B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1277  8E6B
1278  8E6B              ; A partir de $4f61 no hace falta DELAY.
1279  8E6B
1280  8E6B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1281  8E6B
1282  8E6B 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1283  8E6E 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1284  8E6F 78           	LD A,B
1285  8E70 A7           	AND A
1286  8E71 20 FB        	JR NZ,wait
1287  8E73 C9           	RET
1288  8E74
1289  8E74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1290  8E74              ;
1291  8E74              ;	5/3/23
1292  8E74              ;
1293  8E74              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1294  8E74
1295  8E74              Movimiento_Amadeus
1296  8E74
1297  8E74              ; Disparo.
1298  8E74
1299  8E74 3A 44 8A     	ld a,(Disparo_Amadeus)
1300  8E77 A7           	and a
1301  8E78 20 02        	jr nz,1F
1302  8E7A 18 15        	jr 2F
1303  8E7C
1304  8E7C 3E F7        1 ld a,$f7													; "5" para disparar.
1305  8E7E DB FE        	in a,($fe)
1306  8E80 E6 10        	and $10
1307  8E82
1308  8E82 F5           	push af
1309  8E83 CC 11 8F     	call z,Genera_disparo
1310  8E86 F1           	pop af
1311  8E87 20 08        	jr nz,2F
1312  8E89
1313  8E89 3A 44 8A     	ld a,(Disparo_Amadeus)
1314  8E8C EE 01        	xor 1
1315  8E8E 32 44 8A     	ld (Disparo_Amadeus),a
1316  8E91
1317  8E91 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1318  8E93 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1319  8E95 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1320  8E97 CC 9F 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1321  8E9A 3E F7        	ld a,$f7
1322  8E9C DB FE        	in a,($fe)
1323  8E9E E6 01        	and $01
1324  8EA0 C8           	ret z
1325  8EA1
1326  8EA1 3E F7        	ld a,$f7
1327  8EA3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1328  8EA5 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1329  8EA7 CC 81 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1330  8EAA C9           	ret
1331  8EAB
1332  8EAB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1333  8EAB              ;
1334  8EAB              ;	Rutina provisional para que los malotes cagen balas.
1335  8EAB
1336  8EAB              Detecta_disparo_entidad
1337  8EAB
1338  8EAB 3A 47 8A     	ld a,(Disparo_entidad)
1339  8EAE A7           	and a
1340  8EAF C8           	ret z
1341  8EB0
1342  8EB0              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1343  8EB0
1344  8EB0              ;	ld a,$7f				; Detecta SPACE.
1345  8EB0              ;	in a,($fe)
1346  8EB0              ;	and 1
1347  8EB0              ;	ret nz
1348  8EB0
1349  8EB0              ;	call Genera_disparo
1350  8EB0 C9           	ret
1351  8EB1
1352  8EB1              ; ----------------------------------------------------------------------
1353  8EB1              ;
1354  8EB1              ;	11/8/23
1355  8EB1
1356  8EB1              Frame
1357  8EB1
1358  8EB1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1359  8EB1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1360  8EB1
1361  8EB1              ; PINTAMOS.
1362  8EB1
1363  8EB1 F5           	push af
1364  8EB2 C5           	push bc
1365  8EB3 D5           	push de
1366  8EB4 E5           	push hl
1367  8EB5
1368  8EB5 3E 02            ld a,2
1369  8EB7 D3 FE            out ($fe),a											; Rojo.
1370  8EB9
1371  8EB9              ;;! debuggg !!!
1372  8EB9 3A 40 8A     	ld a,(Contador_de_frames)
1373  8EBC FE E5        	cp $e5	; 1er FRAME, (sin mover AMADEUS), donde nos pasamos del FRAME RATE.!!!!!
1374  8EBE 30 FE        	jr nc,$
1375  8EC0 28 FE        	jr z,$
1376  8EC2              ;;! debuggg !!!
1377  8EC2
1378  8EC2 CD 15 97     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1379  8EC5 CD 58 97     	call Extrae_foto_disparos
1380  8EC8 3E 01            ld a,1
1381  8ECA D3 FE            out ($fe),a											; Azul.
1382  8ECC
1383  8ECC              ; 	Gestiona los álbumes de fotos.
1384  8ECC
1385  8ECC CD 5F 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1386  8ECF CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1387  8ED2
1388  8ED2              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1389  8ED2
1390  8ED2 3A F8 89     	ld a,(Ctrl_1)
1391  8ED5 CB 6F        	bit 5,a
1392  8ED7 20 1E        	jr nz,1F
1393  8ED9
1394  8ED9              ; No hemos terminado de guardar el último FRAME.
1395  8ED9
1396  8ED9 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
1397  8EDC 2B           	dec hl
1398  8EDD 2B           	dec hl
1399  8EDE 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
1400  8EE1
1401  8EE1 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
1402  8EE4 2B           	dec hl
1403  8EE5 2B           	dec hl
1404  8EE6 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
1405  8EE9 CD 87 8D     	call Extrae_address
1406  8EEC 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
1407  8EEF CD 87 8D     	call Extrae_address
1408  8EF2 22 0D 8A     	ld (Stack_snapshot),hl
1409  8EF5
1410  8EF5 18 09        	jr 2F
1411  8EF7
1412  8EF7              ; FRAME completo.
1413  8EF7
1414  8EF7 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1415  8EFA CD 87 8D     	call Extrae_address
1416  8EFD 22 0D 8A     	ld (Stack_snapshot),hl
1417  8F00
1418  8F00              ;	En este punto:
1419  8F00
1420  8F00              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1421  8F00              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1422  8F00
1423  8F00              ; RELOJES.
1424  8F00
1425  8F00 21 40 8A     2 ld hl,Contador_de_frames
1426  8F03 34           	inc (hl)											; 0 - 255
1427  8F04
1428  8F04 21 F8 89     	ld hl,Ctrl_1
1429  8F07 CB AE        	res 5,(hl)
1430  8F09
1431  8F09 CD 57 8D     	call Calcula_numero_de_malotes
1432  8F0C
1433  8F0C E1           	pop hl
1434  8F0D D1           	pop de
1435  8F0E C1           	pop bc
1436  8F0F F1           	pop af
1437  8F10
1438  8F10 C9           	ret
1439  8F11
1440  8F11              ; ---------------------------------------------------------------
1441  8F11
1442  8F11              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F11              ; ******************************************************************************************************************************************************************************************
   2+ 8F11              ;
   3+ 8F11              ;   21/07/23
   4+ 8F11              ;
   5+ 8F11              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F11              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F11              ;
   8+ 8F11              ;
   9+ 8F11              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F11              ;
  11+ 8F11              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F11              ;               _ hacen las entidades hacia abajo.
  13+ 8F11              ;
  14+ 8F11              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F11              ;
  16+ 8F11              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F11              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F11              ;
  19+ 8F11              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F11              ;           _ la bala.
  21+ 8F11              ;
  22+ 8F11              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F11              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F11              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F11              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F11              ;           _ en el momento de generarse la bala)).
  27+ 8F11
  28+ 8F11              Genera_disparo
  29+ 8F11
  30+ 8F11              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F11              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F11              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F11              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F11              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F11              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F11              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F11
  38+ 8F11              ; Exclusiones:
  39+ 8F11
  40+ 8F11 3A CD 89         ld a,(Vel_down)
  41+ 8F14 47               ld b,a
  42+ 8F15 3A 3F 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F18 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F19 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F1A 3A F2 89         ld a,(Columnas)
  46+ 8F1D 47               ld b,a
  47+ 8F1E 3A B6 89         ld a,(Columns)
  48+ 8F21 B8               cp b
  49+ 8F22 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F23
  51+ 8F23              ; ----- ----- -----
  52+ 8F23
  53+ 8F23 3A E3 89         ld a,(Ctrl_0)
  54+ 8F26 CB 77            bit 6,a
  55+ 8F28 20 06            jr nz,14F
  56+ 8F2A
  57+ 8F2A 3A BC 89         ld a,(Coordenada_y)
  58+ 8F2D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F2F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F30
  61+ 8F30 21 00 80     14 ld hl,Indice_disparo
  62+ 8F33 3A BD 89         ld a,(CTRL_DESPLZ)
  63+ 8F36 4F               ld c,a
  64+ 8F37 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F39              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F39              ;                                            ""        ""       "f9", B="1"
  67+ 8F39              ;                                            ""        ""       "fb", B="2"
  68+ 8F39              ;                                            ""        ""       "fb", B="3"
  69+ 8F39 A7               and a
  70+ 8F3A 28 10            jr z,1F
  71+ 8F3C E6 01            and 1
  72+ 8F3E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F3F
  74+ 8F3F 79               ld a,c
  75+ 8F40 16 F9            ld d,$f9
  76+ 8F42 23           2 inc hl
  77+ 8F43 23               inc hl
  78+ 8F44 04               inc b
  79+ 8F45 BA               cp d
  80+ 8F46 28 04            jr z,1F
  81+ 8F48 14               inc d
  82+ 8F49 14               inc d
  83+ 8F4A 18 F6            jr 2B
  84+ 8F4C
  85+ 8F4C CD 87 8D     1 call Extrae_address
  86+ 8F4F E5               push hl
  87+ 8F50 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F52 DD 21 9A 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F56
  90+ 8F56              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F56              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F56
  93+ 8F56 3A E3 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F59 CB 77            bit 6,a
  95+ 8F5B 20 04            jr nz,19F
  96+ 8F5D
  97+ 8F5D AF               xor a
  98+ 8F5E 32 47 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F61
 100+ 8F61 3A C9 89     19 ld a,(Cuad_objeto)
 101+ 8F64 FE 02            cp 2
 102+ 8F66 38 66            jr c,3F
 103+ 8F68 28 64            jr z,3F
 104+ 8F6A
 105+ 8F6A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F6A
 107+ 8F6A E6 01            and 1
 108+ 8F6C 28 30            jr z,4F
 109+ 8F6E
 110+ 8F6E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F6E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F6E              ;
 113+ 8F6E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F6E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F6E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F6E
 117+ 8F6E 2A B7 89     	ld hl,(Posicion_actual)
 118+ 8F71
 119+ 8F71              ;   Amadeus o entidad ???.
 120+ 8F71
 121+ 8F71 3A E3 89         ld a,(Ctrl_0)
 122+ 8F74 CB 77            bit 6,a
 123+ 8F76 28 0A            jr z,8F
 124+ 8F78
 125+ 8F78              ; 	Dispara Amadeus.
 126+ 8F78
 127+ 8F78 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F7A CD 06 97         call PreviousScan
 129+ 8F7D CD 06 97         call PreviousScan
 130+ 8F80
 131+ 8F80              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F80              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F80              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F80              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F80
 136+ 8F80 18 11            jr 10F
 137+ 8F82
 138+ 8F82              ; 	Dispara Entidad.
 139+ 8F82
 140+ 8F82 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F85              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F85
 143+ 8F85              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F85              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F85
 146+ 8F85 C5               push bc
 147+ 8F86 06 10            ld b,16
 148+ 8F88 CD F7 96     9 call NextScan
 149+ 8F8B 10 FB            djnz 9B
 150+ 8F8D C1               pop bc
 151+ 8F8E CD F8 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F91 18 06            jr 17F
 153+ 8F93
 154+ 8F93              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F93              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F93              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F93              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F93
 159+ 8F93 CD F8 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F96 CD 6D 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F99              ;                                                      ; _al generar el disparo.
 162+ 8F99
 163+ 8F99              ; 	LLegados a este punto tendremos:
 164+ 8F99              ;
 165+ 8F99              ;       Puntero_objeto_disparo en IY.
 166+ 8F99              ;       Rutinas_de_impresion en IX.
 167+ 8F99              ;       Puntero_de_impresion en HL.
 168+ 8F99              ;       Impacto/Dirección en BC.
 169+ 8F99
 170+ 8F99 CD 00 90     17 call Almacena_disparo
 171+ 8F9C 18 52            jr 6F                                             ; RET.
 172+ 8F9E
 173+ 8F9E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F9E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F9E              ;
 176+ 8F9E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F9E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F9E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F9E
 180+ 8F9E 2A B7 89     4 ld hl,(Posicion_actual)
 181+ 8FA1
 182+ 8FA1              ;   Amadeus o entidad ???.
 183+ 8FA1
 184+ 8FA1 3A E3 89         ld a,(Ctrl_0)
 185+ 8FA4 CB 77            bit 6,a
 186+ 8FA6 28 0A            jr z,11F
 187+ 8FA8
 188+ 8FA8              ; 	Dispara Amadeus.
 189+ 8FA8
 190+ 8FA8 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FAA CD 06 97         call PreviousScan
 192+ 8FAD CD 06 97         call PreviousScan
 193+ 8FB0
 194+ 8FB0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FB0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FB0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FB0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FB0
 199+ 8FB0 18 11            jr 13F
 200+ 8FB2
 201+ 8FB2              ; 	Dispara Entidad.
 202+ 8FB2
 203+ 8FB2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FB5              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FB5
 206+ 8FB5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FB5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FB5
 209+ 8FB5 C5               push bc
 210+ 8FB6 06 10            ld b,16
 211+ 8FB8 CD F7 96     12 call NextScan
 212+ 8FBB 10 FB            djnz 12B
 213+ 8FBD C1               pop bc
 214+ 8FBE
 215+ 8FBE CD F1 8F         call Ajusta_disparo_parte_derecha
 216+ 8FC1 18 06            jr 18F
 217+ 8FC3
 218+ 8FC3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FC3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FC3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FC3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FC3
 223+ 8FC3 CD F1 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FC6 CD 6D 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FC9              ;                                                       ; _al generar el disparo.
 226+ 8FC9
 227+ 8FC9              ; LLegados a este punto tendremos:
 228+ 8FC9              ;
 229+ 8FC9              ;       Puntero_objeto_disparo en IY.
 230+ 8FC9              ;       Rutinas_de_impresion en IX.
 231+ 8FC9              ;       Puntero_de_impresion en HL.
 232+ 8FC9              ;       Impacto/Dirección en BC.
 233+ 8FC9
 234+ 8FC9 CD 00 90     18 call Almacena_disparo
 235+ 8FCC 18 22            jr 6F                                               ; RET.
 236+ 8FCE
 237+ 8FCE              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FCE
 239+ 8FCE 28 11        3 jr z,5F
 240+ 8FD0
 241+ 8FD0              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FD0              ;
 243+ 8FD0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FD0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FD0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FD0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FD0
 248+ 8FD0              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FD0              ;	   ""        ""       "f9", B="1"
 250+ 8FD0              ;	   ""        ""       "fb", B="2"
 251+ 8FD0              ; 	   ""        ""       "fb", B="3"
 252+ 8FD0
 253+ 8FD0 2A B7 89     	ld hl,(Posicion_actual)
 254+ 8FD3 CD F7 96     	call NextScan
 255+ 8FD6
 256+ 8FD6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FD6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FD6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FD6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FD6
 261+ 8FD6 CD F8 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FD9
 263+ 8FD9              ; 	No se produce impacto. B="$80"
 264+ 8FD9              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FD9
 266+ 8FD9 01 80 80         ld bc,$8080
 267+ 8FDC
 268+ 8FDC              ; 	LLegados a este punto tendremos:
 269+ 8FDC              ;
 270+ 8FDC              ;       Puntero_objeto_disparo en IY.
 271+ 8FDC              ;       Rutinas_de_impresion en IX.
 272+ 8FDC              ;       Puntero_de_impresion en HL.
 273+ 8FDC              ;       Impacto/Dirección en BC.
 274+ 8FDC
 275+ 8FDC CD 00 90         call Almacena_disparo
 276+ 8FDF 18 0F            jr 6F                                           ; RET.
 277+ 8FE1
 278+ 8FE1              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FE1              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FE1              ;
 281+ 8FE1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FE1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FE1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FE1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FE1
 286+ 8FE1 2A B7 89     5 ld hl,(Posicion_actual)
 287+ 8FE4 CD F7 96     	call NextScan
 288+ 8FE7
 289+ 8FE7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FE7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FE7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FE7
 294+ 8FE7 CD F1 8F         call Ajusta_disparo_parte_derecha
 295+ 8FEA
 296+ 8FEA              ; 	No se produce impacto. B="$80"
 297+ 8FEA              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FEA
 299+ 8FEA 01 80 80     15 ld bc,$8080
 300+ 8FED
 301+ 8FED              ; 	LLegados a este punto tendremos:
 302+ 8FED              ;
 303+ 8FED              ;       Puntero_objeto_disparo en IY.
 304+ 8FED              ;       Rutinas_de_impresion en IX.
 305+ 8FED              ;       Puntero_de_impresion en HL.
 306+ 8FED              ;       Impacto/Dirección en BC.
 307+ 8FED
 308+ 8FED CD 00 90         call Almacena_disparo
 309+ 8FF0
 310+ 8FF0 C9           6 ret
 311+ 8FF1
 312+ 8FF1              ; ----------------------------------------------------------------
 313+ 8FF1              ;
 314+ 8FF1              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FF1              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FF1              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FF1
 318+ 8FF1 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FF2 FE 02            cp 2
 320+ 8FF4 38 01            jr c,1F
 321+ 8FF6 23               inc hl
 322+ 8FF7 C9           1 ret
 323+ 8FF8
 324+ 8FF8 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FF9 FE 01        	cp 1
 326+ 8FFB 20 01        	jr nz,1F
 327+ 8FFD 2B           	dec hl
 328+ 8FFE 2B           1 dec hl
 329+ 8FFF C9               ret
 330+ 9000
 331+ 9000              ; ----------------------------------------------------------------
 332+ 9000              ;
 333+ 9000              ;   25/02/23
 334+ 9000              ;
 335+ 9000              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9000              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9000              ;
 338+ 9000              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9000              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9000
 341+ 9000              Almacena_disparo
 342+ 9000
 343+ 9000 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9001 F1               pop af
 345+ 9002 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9003
 347+ 9003 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9004 E6 01            and 1
 349+ 9006 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9008              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9008              ; 	Dispara AMADEUS.
 352+ 9008
 353+ 9008              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9008              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9008              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9008              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9008
 358+ 9008 C5               push bc
 359+ 9009 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 900C 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 900F A7               and a
 362+ 9010 ED 42            sbc hl,bc
 363+ 9012 CC 50 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9015 C1               pop bc
 365+ 9016 28 54            jr z,4F
 366+ 9018
 367+ 9018 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 901B 23               inc hl
 369+ 901C 23               inc hl
 370+ 901D 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9020              ;                                                   ; _ Disparo_(+1).
 372+ 9020 18 18            jr 2F
 373+ 9022
 374+ 9022              ; Dispara una entidad.
 375+ 9022
 376+ 9022 C5           1 push bc
 377+ 9023 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9026 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9029 A7               and a
 380+ 902A ED 42            sbc hl,bc
 381+ 902C CC 49 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 902F C1               pop bc
 383+ 9030 28 3A            jr z,4F
 384+ 9032
 385+ 9032 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9035 23               inc hl
 387+ 9036 23               inc hl
 388+ 9037 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 903A              ;                                                   ; _ Disparo_(+1).
 390+ 903A CD 87 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 903D              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 903D              ;
 393+ 903D              ;                                                     Puntero_objeto_disparo en IY.
 394+ 903D              ;                                                     Rutinas_de_impresion en IX.
 395+ 903D              ;                                                     Puntero_de_impresion en HL.
 396+ 903D              ;                                                     Impacto/Dirección en BC.
 397+ 903D
 398+ 903D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 903E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 903F 23               inc hl                                          ; _ al siguiente.
 401+ 9040 A7               and a
 402+ 9041 20 C0            jr nz,3B
 403+ 9043
 404+ 9043 08               ex af,af
 405+ 9044 ED 73 09 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9048 F9               ld sp,hl
 407+ 9049
 408+ 9049 DD E5            push ix                                         ; Rutina de impresión.
 409+ 904B F5               push af                                         ; Puntero de impresión.
 410+ 904C FD E5            push iy                                         ; Puntero objeto.
 411+ 904E C5               push bc                                         ; Control.
 412+ 904F
 413+ 904F ED 7B 09 8A      ld sp,(Stack)
 414+ 9053
 415+ 9053              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9053
 417+ 9053 21 F8 89     	ld hl,Ctrl_1
 418+ 9056 CB C6        	set 0,(hl)
 419+ 9058
 420+ 9058 DD E5        	push ix
 421+ 905A E1               pop hl
 422+ 905B F5               push af
 423+ 905C DD E1            pop ix
 424+ 905E
 425+ 905E CD A0 7F     	call Guarda_foto_registros
 426+ 9061
 427+ 9061 21 F8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9064 CB 86        	res 0,(hl)
 429+ 9066
 430+ 9066              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9066              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9066
 433+ 9066 CD 50 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9069 CD 49 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 906C
 436+ 906C C9           4 ret
 437+ 906D
 438+ 906D              ; ----------------------------------------------------------------
 439+ 906D              ;
 440+ 906D              ;   4/3/23
 441+ 906D              ;
 442+ 906D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 906D              ;   _ al generarse el disparo.
 444+ 906D              ;
 445+ 906D              ;       "$80" ..... No se produce colisión.
 446+ 906D              ;       "$81" ..... Se produce colisión.
 447+ 906D              ;
 448+ 906D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 906D              ;         _ que forman el disparo.
 450+ 906D
 451+ 906D
 452+ 906D              Comprueba_Colision
 453+ 906D
 454+ 906D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 906D
 456+ 906D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 906F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9070
 459+ 9070 CD A6 90         call Modifica_H_Velocidad_disparo
 460+ 9073
 461+ 9073 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9074 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9076 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9078
 465+ 9078 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 907A CD 96 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 907D
 468+ 907D 7B               ld a,e
 469+ 907E E6 01            and 1
 470+ 9080 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9082              ;                                                  ; _ para activar IMPACTO.
 472+ 9082 E1               pop hl
 473+ 9083 E5               push hl
 474+ 9084 CD F7 96         call NextScan
 475+ 9087
 476+ 9087 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9088 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 908A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 908C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 908C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 908E CD 96 90         call Bucle_2
 482+ 9091
 483+ 9091 43           1 ld b,e
 484+ 9092 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9093 FD E1            pop iy
 486+ 9095 C9               ret
 487+ 9096
 488+ 9096              ; ---------- ----------
 489+ 9096
 490+ 9096 06 02        Bucle_2 ld b,2
 491+ 9098 FD 7E 00     2 ld a,(iy)
 492+ 909B A6               and (hl)
 493+ 909C 28 02            jr z,1F
 494+ 909E 1E 81            ld e,$81
 495+ 90A0 23           1 inc hl
 496+ 90A1 FD 23            inc iy
 497+ 90A3 10 F3            djnz 2B
 498+ 90A5 C9               ret
 499+ 90A6
 500+ 90A6              ; ---------- ----------
 501+ 90A6              ;
 502+ 90A6              ;   21/7/23
 503+ 90A6
 504+ 90A6              Modifica_H_Velocidad_disparo
 505+ 90A6
 506+ 90A6 3A 3F 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90A9 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90AB D0               ret nc                                         ; _ incrementamos H.
 509+ 90AC 24               inc h
 510+ 90AD
 511+ 90AD C9               ret
 512+ 90AE
 513+ 90AE              ; -------------------------------------------------------------------------------------------------------------
 514+ 90AE              ;
 515+ 90AE              ;   11/04/23
 516+ 90AE              ;
 517+ 90AE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90AE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90AE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90AE              ;
 521+ 90AE              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90AE
 523+ 90AE              Compara_coordenadas_X
 524+ 90AE
 525+ 90AE              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90AE              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90AE
 528+ 90AE              ; Preparamos registros:
 529+ 90AE
 530+ 90AE 21 BB 89         ld hl,Filas+6
 531+ 90B1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90B2 23               inc hl
 533+ 90B3 23               inc hl
 534+ 90B4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90B5 43               ld b,e
 536+ 90B6
 537+ 90B6 21 C9 89         ld hl,Filas+20
 538+ 90B9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90BA 21 3A 8A         ld hl,Coordenadas_X_Entidad
 540+ 90BD CD D9 92         call Guarda_coordenadas_X
 541+ 90C0
 542+ 90C0              ; Preparamos registros:
 543+ 90C0
 544+ 90C0 21 AA 85         ld hl,Amadeus_db+6
 545+ 90C3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90C4 23               inc hl
 547+ 90C5 23               inc hl
 548+ 90C6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90C7 7B               ld a,e
 550+ 90C8 08               ex af,af'
 551+ 90C9 21 B8 85         ld hl,Amadeus_db+20
 552+ 90CC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90CD 21 37 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90D0 CD D9 92         call Guarda_coordenadas_X
 555+ 90D3
 556+ 90D3              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90D3              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90D3
 559+ 90D3 04               inc b
 560+ 90D4 05               dec b
 561+ 90D5 28 04            jr z,1F
 562+ 90D7 06 03            ld b,3
 563+ 90D9 18 02            jr 2F
 564+ 90DB 06 02        1 ld b,2
 565+ 90DD 08           2 ex af,af'
 566+ 90DE 3C               inc a
 567+ 90DF 3D               dec a
 568+ 90E0 28 04            jr z,5F
 569+ 90E2 0E 03            ld c,3
 570+ 90E4 18 02            jr 6F
 571+ 90E6 0E 02        5 ld c,2
 572+ 90E8 79           6 ld a,c
 573+ 90E9 08               ex af,af'
 574+ 90EA 11 3A 8A         ld de,Coordenadas_X_Entidad
 575+ 90ED 1A           4 ld a,(de)
 576+ 90EE 21 37 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90F1 BE           3 cp (hl)
 578+ 90F2 28 0E            jr z,7F
 579+ 90F4 23               inc hl
 580+ 90F5 0D               dec c
 581+ 90F6 20 F9            jr nz,3B
 582+ 90F8 13               inc de
 583+ 90F9 08               ex af,af'
 584+ 90FA 4F               ld c,a
 585+ 90FB 08               ex af,af'
 586+ 90FC 10 EF            djnz 4B
 587+ 90FE
 588+ 90FE              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90FE
 590+ 90FE CD 15 93     8 call Limpia_Coordenadas_X
 591+ 9101 C9               ret
 592+ 9102
 593+ 9102 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9104 32 CE 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9107 21 32 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 910A CB D6            set 2,(hl)
 597+ 910C 18 F0            jr 8B
 598+ 910E
 599+ 910E              ; -----------------------------------------------------------------------
 600+ 910E              ;
 601+ 910E              ;   17/04/23
 602+ 910E              ;
 603+ 910E
 604+ 910E              Detecta_colision_nave_entidad
 605+ 910E
 606+ 910E              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 910E
 608+ 910E 2A B7 89         ld hl,(Posicion_actual)
 609+ 9111 CD 52 96         call Calcula_puntero_de_impresion
 610+ 9114
 611+ 9114              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9114              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9114
 614+ 9114 DD E5            push ix
 615+ 9116 E1               pop hl
 616+ 9117 E5               push hl
 617+ 9118
 618+ 9118              ; ----- ----- -----
 619+ 9118 1E 00            ld e,0                                         ; Indica impacto.
 620+ 911A 06 0A            ld b,10
 621+ 911C CD 4C 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 911F 7B               ld a,e
 623+ 9120 FE 05            cp 5
 624+ 9122 38 0E            jr c,3F
 625+ 9124
 626+ 9124              ; LLegados a este punto:
 627+ 9124              ;
 628+ 9124              ;   HAY COLISIÓN !!!!!.
 629+ 9124              ;
 630+ 9124              ;   .db (Impacto) de Amadeus a "1".
 631+ 9124              ;   SET el bit3 de (Impacto2).
 632+ 9124              ;
 633+ 9124              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9124
 635+ 9124 21 BD 85         ld hl,Amadeus_db+25
 636+ 9127 36 01            ld (hl),1
 637+ 9129 21 32 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 912C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 912E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9130 18 18            jr 1F
 641+ 9132
 642+ 9132              ; -----
 643+ 9132
 644+ 9132 E1           3 pop hl
 645+ 9133 CD F7 96         call NextScan
 646+ 9136 E5               push hl
 647+ 9137 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9138 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 913A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 913C 30 0C            jr nc,1F
 651+ 913E              ;                                                  ; _ 2º scanline si esto es así.
 652+ 913E 10 DC            djnz 2B
 653+ 9140
 654+ 9140              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9140
 656+ 9140              ; LLegados a este punto:
 657+ 9140              ;
 658+ 9140              ;   NO HAY COLISIÓN !!!!!.
 659+ 9140              ;
 660+ 9140              ;   .db (Impacto) de Amadeus a "0".
 661+ 9140              ;   RES el bit2 de (Impacto2).
 662+ 9140              ;
 663+ 9140              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9140              ;   Lo colocamos a "0".
 665+ 9140
 666+ 9140 21 32 8A         ld hl,Impacto2
 667+ 9143 CB 96            res 2,(hl)
 668+ 9145 2A 33 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9148 36 00            ld (hl),0
 670+ 914A
 671+ 914A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 914B C9               ret
 673+ 914C
 674+ 914C               ; ---------- ----------
 675+ 914C
 676+ 914C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 914D 3A B6 89         ld a,(Columns)
 678+ 9150 47               ld b,a
 679+ 9151 FD 7E 00     2 ld a,(iy)
 680+ 9154 BE               cp (hl)
 681+ 9155 28 01            jr z,1F
 682+ 9157
 683+ 9157 1C               inc e
 684+ 9158
 685+ 9158 23           1 inc hl
 686+ 9159 FD 23            inc iy
 687+ 915B 10 F4            djnz 2B
 688+ 915D C1               pop bc
 689+ 915E C9               ret
 690+ 915F
 691+ 915F              ; -------------------------------------------------------------------------------------------------------------
 692+ 915F              ;
 693+ 915F              ;   13/03/23
 694+ 915F              ;
 695+ 915F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 915F              ;
 697+ 915F              ;   DESTRUYE: HL,BC,DE y A.
 698+ 915F
 699+ 915F 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9162 7E               ld a,(hl)
 701+ 9163 A7               and a
 702+ 9164 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9165
 704+ 9165 44               ld b,h
 705+ 9166 4D               ld c,l
 706+ 9167 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
 707+ 916A E5               push hl
 708+ 916B A7               and a
 709+ 916C ED 42            sbc hl,bc
 710+ 916E E5               push hl
 711+ 916F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9170
 713+ 9170 E1               pop hl
 714+ 9171 54               ld d,h
 715+ 9172 5D               ld e,l
 716+ 9173 1B               dec de
 717+ 9174 ED B8            lddr                                                ; Limpiamos.
 718+ 9176
 719+ 9176 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9179 22 0F 8A         ld (Stack_snapshot_disparos),hl
 721+ 917C
 722+ 917C C9               ret
 723+ 917D
 724+ 917D              ; -------------------------------------------------------------------------------------------------------------
 725+ 917D              ;
 726+ 917D              ;   18/07/23
 727+ 917D              ;
 728+ 917D
 729+ 917D              Motor_de_disparos
 730+ 917D
 731+ 917D              ; Gestiona DISPAROS DE AMADEUS.
 732+ 917D
 733+ 917D 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9180 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9183
 736+ 9183 CD 87 8D     2 call Extrae_address
 737+ 9186 7E               ld a,(hl)
 738+ 9187 A7               and a
 739+ 9188 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 918A
 741+ 918A              ; ----- ----- ----- ----- ----- -----
 742+ 918A
 743+ 918A C5               push bc
 744+ 918B CD 4F 92         call foto_disparo_a_borrar
 745+ 918E
 746+ 918E              ; Existe colisión con este disparo???
 747+ 918E
 748+ 918E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 918F 7E               ld a,(hl)
 750+ 9190 2B               dec hl
 751+ 9191 E6 01            and 1
 752+ 9193 28 1D            jr z,9F
 753+ 9195
 754+ 9195              ;   En este punto:
 755+ 9195              ;
 756+ 9195              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9195              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9195              ;   _con la entidad).
 759+ 9195              ;
 760+ 9195              ;   Disparo_2A defw 0                                ; Control.
 761+ 9195              ;    defw 0                                          ; Puntero objeto.
 762+ 9195              ;    defw 0                                          ; Puntero de impresión.
 763+ 9195              ;    defw 0                                          ; Rutina de impresión.
 764+ 9195
 765+ 9195 E5               push hl
 766+ 9196
 767+ 9196 06 04            ld b,4
 768+ 9198 23           19 inc hl
 769+ 9199 10 FD            djnz 19B
 770+ 919B
 771+ 919B CD 87 8D         call Extrae_address
 772+ 919E CD 7D 9D         call Genera_coordenadas_disparo
 773+ 91A1
 774+ 91A1              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91A1
 776+ 91A1 21 35 8A         ld hl,Coordenadas_disparo_certero
 777+ 91A4 72               ld (hl),d
 778+ 91A5 23               inc hl
 779+ 91A6 73               ld (hl),e
 780+ 91A7
 781+ 91A7              ; Elimino el disparo de la base de datos.
 782+ 91A7
 783+ 91A7 E1               pop hl
 784+ 91A8 CD CE 92         call Elimina_disparo_de_base_de_datos
 785+ 91AB 21 32 8A         ld hl,Impacto2
 786+ 91AE CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91B0
 788+ 91B0 18 06            jr 11F
 789+ 91B2
 790+ 91B2 CD 78 92     9 call Mueve_disparo
 791+ 91B5 CD 4F 92         call foto_disparo_a_borrar
 792+ 91B8
 793+ 91B8 C1           11 pop bc
 794+ 91B9 18 04            jr 7F
 795+ 91BB
 796+ 91BB              ; ----- ----- ----- ----- ----- -----
 797+ 91BB
 798+ 91BB ED 42        1 sbc hl,bc
 799+ 91BD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91BF
 801+ 91BF 2A 30 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91C2 23               inc hl
 803+ 91C3 23               inc hl
 804+ 91C4 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91C7 18 BA            jr 2B
 806+ 91C9
 807+ 91C9 CD 50 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91CC              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91CC
 810+ 91CC              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91CC
 812+ 91CC 01 8A 85         ld bc,Disparo_11
 813+ 91CF 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91D2
 815+ 91D2 CD 87 8D     5 call Extrae_address
 816+ 91D5 7E               ld a,(hl)
 817+ 91D6 A7               and a
 818+ 91D7 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91D9
 820+ 91D9              ; ----- ----- ----- ----- ----- -----
 821+ 91D9
 822+ 91D9 C5               push bc
 823+ 91DA CD 4F 92         call foto_disparo_a_borrar
 824+ 91DD
 825+ 91DD              ; Existe colisión con este disparo???
 826+ 91DD
 827+ 91DD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91DE 7E               ld a,(hl)
 829+ 91DF 2B               dec hl
 830+ 91E0 E6 01            and 1
 831+ 91E2 28 4D            jr z,10F
 832+ 91E4
 833+ 91E4              ;! La colisión se produce con Amadeus???
 834+ 91E4              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91E4
 836+ 91E4 E5               push hl
 837+ 91E5
 838+ 91E5 06 04            ld b,4
 839+ 91E7 23           16 inc hl
 840+ 91E8 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91EA
 842+ 91EA CD 87 8D         call Extrae_address
 843+ 91ED CD 7D 9D         call Genera_coordenadas_disparo
 844+ 91F0
 845+ 91F0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91F1 FE 16            cp $16
 847+ 91F3 38 2A            jr c,15F
 848+ 91F5
 849+ 91F5
 850+ 91F5              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91F5
 852+ 91F5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91F6
 854+ 91F6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91F6
 856+ 91F6
 857+ 91F6 2A 3D 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91F9
 859+ 91F9              ; Coordenada X de Amadeus en D.
 860+ 91F9
 861+ 91F9 7D               ld a,l
 862+ 91FA E6 1F            and $1F
 863+ 91FC 57               ld d,a
 864+ 91FD
 865+ 91FD 21 AC 85         ld hl,Amadeus_db+8
 866+ 9200 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9201
 868+ 9201 21 37 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9204 CD D9 92         call Guarda_coordenadas_X
 870+ 9207
 871+ 9207 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9208
 873+ 9208              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9208
 875+ 9208 06 02            ld b,2
 876+ 920A C5           20 push bc
 877+ 920B
 878+ 920B 06 03            ld b,3
 879+ 920D 21 37 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9210 7E           18 ld a,(hl)
 881+ 9211 BA               cp d
 882+ 9212 20 04            jr nz,17F
 883+ 9214
 884+ 9214              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9214
 886+ 9214 C1               pop bc
 887+ 9215 E1               pop hl
 888+ 9216 18 0D            jr 14F
 889+ 9218
 890+ 9218 23           17 inc hl
 891+ 9219 10 F5            djnz 18B
 892+ 921B
 893+ 921B 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 921C
 895+ 921C C1               pop bc
 896+ 921D 10 EB            djnz 20B
 897+ 921F
 898+ 921F
 899+ 921F              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 921F              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 921F
 902+ 921F E1           15 pop hl
 903+ 9220 23               inc hl
 904+ 9221 35               dec (hl)
 905+ 9222 2B               dec hl
 906+ 9223 18 0C            jr 10F
 907+ 9225
 908+ 9225              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9225              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9225
 911+ 9225 E5           14 push hl
 912+ 9226 CD CE 92         call Elimina_disparo_de_base_de_datos
 913+ 9229 21 32 8A         ld hl,Impacto2
 914+ 922C CB CE            set 1,(hl)
 915+ 922E E1               pop hl
 916+ 922F 18 06            jr 12F
 917+ 9231
 918+ 9231              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9231
 920+ 9231 CD 78 92     10 call Mueve_disparo
 921+ 9234 CD 4F 92         call foto_disparo_a_borrar
 922+ 9237 C1           12 pop bc
 923+ 9238
 924+ 9238 18 04            jr 8F
 925+ 923A
 926+ 923A              ; ----- ----- ----- ----- ----- -----
 927+ 923A
 928+ 923A ED 42        4 sbc hl,bc
 929+ 923C 28 0A            jr z,6F
 930+ 923E
 931+ 923E 2A 2E 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9241 23               inc hl
 933+ 9242 23               inc hl
 934+ 9243 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9246 18 8A            jr 5B
 936+ 9248
 937+ 9248 CD 49 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 924B CD 15 93         call Limpia_Coordenadas_X
 939+ 924E C9               ret
 940+ 924F
 941+ 924F              ; ------------------------------------------------------------------
 942+ 924F
 943+ 924F              foto_disparo_a_borrar
 944+ 924F
 945+ 924F 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9250 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9251 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9252
 949+ 9252 E5               push hl
 950+ 9253 23               inc hl
 951+ 9254 23               inc hl
 952+ 9255 ED 73 09 8A      ld (Stack),sp
 953+ 9259 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 925A FD E1            pop iy
 955+ 925C DD E1            pop ix
 956+ 925E E1               pop hl
 957+ 925F ED 7B 09 8A      ld sp,(Stack)
 958+ 9263 3A F8 89         ld a,(Ctrl_1)
 959+ 9266 CB C7            set 0,a
 960+ 9268 32 F8 89         ld (Ctrl_1),a
 961+ 926B CD A0 7F         call Guarda_foto_registros
 962+ 926E 3A F8 89         ld a,(Ctrl_1)
 963+ 9271 CB 87            res 0,a
 964+ 9273 32 F8 89         ld (Ctrl_1),a
 965+ 9276 E1               pop hl
 966+ 9277 C9               ret
 967+ 9278
 968+ 9278              ;---------------------------------------------------
 969+ 9278              ;
 970+ 9278              ;   18/07/23
 971+ 9278              ;
 972+ 9278
 973+ 9278              Mueve_disparo
 974+ 9278
 975+ 9278              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9278              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9278              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9278
 979+ 9278 E5               push hl
 980+ 9279
 981+ 9279 7E               ld a,(hl)
 982+ 927A
 983+ 927A 06 04            ld b,4
 984+ 927C 23           1 inc hl
 985+ 927D 10 FD            djnz 1B
 986+ 927F
 987+ 927F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 927F
 989+ 927F CD 87 8D         call Extrae_address
 990+ 9282
 991+ 9282 E6 01            and 1
 992+ 9284 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9286
 994+ 9286              ; Disparo hacia arriba, (Amadeus).
 995+ 9286
 996+ 9286              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9286              ; _ de la dificultad.
 998+ 9286
 999+ 9286 CD 06 97         call PreviousScan
1000+ 9289 CD 06 97         call PreviousScan
1001+ 928C CD 06 97         call PreviousScan
1002+ 928F CD 06 97         call PreviousScan
1003+ 9292
1004+ 9292              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9292
1006+ 9292 7C               ld a,h
1007+ 9293 FE 40            cp $40
1008+ 9295 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9297
1010+ 9297              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9297
1012+ 9297 EB               ex de,hl
1013+ 9298 06 04            ld b,4
1014+ 929A 2B           6 dec hl
1015+ 929B 10 FD            djnz 6B
1016+ 929D
1017+ 929D CD CE 92         call Elimina_disparo_de_base_de_datos
1018+ 92A0 E1               pop hl
1019+ 92A1 18 10            jr 7F
1020+ 92A3
1021+ 92A3              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92A3              ; HL contiene el puntero de impresión del disparo.
1023+ 92A3              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92A3
1025+ 92A3 D5           3 push de
1026+ 92A4 C5               push bc
1027+ 92A5
1028+ 92A5 CD 6D 90         call Comprueba_Colision
1029+ 92A8
1030+ 92A8              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92A8
1032+ 92A8 78               ld a,b
1033+ 92A9
1034+ 92A9 C1               pop bc
1035+ 92AA D1               pop de
1036+ 92AB
1037+ 92AB EB               ex de,hl
1038+ 92AC
1039+ 92AC 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92AD 23               inc hl                                      ; _ movimiento.
1041+ 92AE 72               ld (hl),d
1042+ 92AF
1043+ 92AF E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92B0
1045+ 92B0 23               inc hl                                      ; _ en curso.
1046+ 92B1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92B2 2B               dec hl
1048+ 92B3
1049+ 92B3 C9           7 ret
1050+ 92B4
1051+ 92B4              ; Disparo hacia abajo, (Entidad).
1052+ 92B4
1053+ 92B4 3A 3F 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92B7 47               ld b,a
1055+ 92B8
1056+ 92B8 CD F7 96     4 call NextScan
1057+ 92BB 10 FB            djnz 4B
1058+ 92BD
1059+ 92BD              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92BD
1061+ 92BD 7C               ld a,h
1062+ 92BE FE 58            cp $58
1063+ 92C0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92C2
1065+ 92C2 EB               ex de,hl
1066+ 92C3 06 04            ld b,4
1067+ 92C5 2B           5 dec hl
1068+ 92C6 10 FD            djnz 5B
1069+ 92C8
1070+ 92C8 CD CE 92         call Elimina_disparo_de_base_de_datos
1071+ 92CB E1               pop hl
1072+ 92CC 18 E5            jr 7B
1073+ 92CE
1074+ 92CE              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92CE
1076+ 92CE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92D1 AF               xor a
1078+ 92D2 77               ld (hl),a
1079+ 92D3 54               ld d,h
1080+ 92D4 5D               ld e,l
1081+ 92D5 13               inc de
1082+ 92D6 ED B0            ldir
1083+ 92D8 C9               ret
1084+ 92D9
1085+ 92D9              ; -----------------------------------------------------------------
1086+ 92D9              ;
1087+ 92D9              ;   19/7/23
1088+ 92D9              ;
1089+ 92D9              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92D9              ;
1091+ 92D9              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92D9              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92D9              ;
1094+ 92D9              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92D9              ;
1096+ 92D9              ;   INPUTS:
1097+ 92D9              ;
1098+ 92D9              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92D9              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92D9
1101+ 92D9              ;   MODIFICA: A, HL, BC y DE.
1102+ 92D9
1103+ 92D9              Guarda_coordenadas_X
1104+ 92D9
1105+ 92D9 7B               ld a,e
1106+ 92DA A7               and a
1107+ 92DB 20 04            jr nz,1F
1108+ 92DD
1109+ 92DD 06 02            ld b,2
1110+ 92DF 18 02            jr 2F
1111+ 92E1
1112+ 92E1 06 03        1 ld b,3
1113+ 92E3 72           2 ld (hl),d
1114+ 92E4 23               inc hl
1115+ 92E5 14               inc d
1116+ 92E6 10 FB            djnz 2B
1117+ 92E8
1118+ 92E8 C9               ret
1119+ 92E9
1120+ 92E9              ; -----------------------------------------------------------------
1121+ 92E9              ;
1122+ 92E9              ;   12/04/23
1123+ 92E9              ;
1124+ 92E9
1125+ 92E9 3A 32 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92EC A7               and a
1127+ 92ED C8               ret z
1128+ 92EE
1129+ 92EE FE 04            cp 4
1130+ 92F0 20 09            jr nz,1F
1131+ 92F2
1132+ 92F2
1133+ 92F2              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92F2
1135+ 92F2 CD 0E 91         call Detecta_colision_nave_entidad
1136+ 92F5
1137+ 92F5 21 32 8A         ld hl,Impacto2
1138+ 92F8 CB 5E            bit 3,(hl)
1139+ 92FA C0               ret nz                                               ; Existe colisión, RET.
1140+ 92FB
1141+ 92FB              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92FB              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92FB
1144+ 92FB 21 32 8A     1 ld hl,Impacto2
1145+ 92FE CB 4E            bit 1,(hl)
1146+ 9300 28 07            jr z,2F
1147+ 9302
1148+ 9302 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9305 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9307 18 0B            jr 3F
1151+ 9309
1152+ 9309 21 32 8A     2 ld hl,Impacto2
1153+ 930C CB 46            bit 0,(hl)
1154+ 930E C8               ret z
1155+ 930F
1156+ 930F              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 930F
1158+ 930F 21 F8 89         ld hl,Ctrl_1
1159+ 9312 CB D6            set 2,(hl)
1160+ 9314
1161+ 9314 C9           3 ret
1162+ 9315
1163+ 9315              ; -----------------------------------------------------------------
1164+ 9315              ;
1165+ 9315              ;   19/7/23
1166+ 9315              ;
1167+ 9315              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9315
1169+ 9315 AF           Limpia_Coordenadas_X xor a
1170+ 9316 06 06            ld b,6
1171+ 9318 21 37 8A         ld hl,Coordenadas_X_Amadeus
1172+ 931B 77           1 ld (hl),a
1173+ 931C 23               inc hl
1174+ 931D 10 FC            djnz 1B
1175+ 931F C9               ret
1176+ 9320
1177+ 9320              ; -----------------------------------------------------------------
1178+ 9320              ;
1179+ 9320              ;   25/04/23
1180+ 9320              ;
1181+ 9320
1182+ 9320              Determina_resultado_comparativa
1183+ 9320
1184+ 9320              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9320              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9320              ;
1187+ 9320              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9320              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9320              ;
1190+ 9320              ;   SBC HL,DE
1191+ 9320
1192+ 9320              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9320              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9320
1195+ 9320              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9320              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9320
1198+ 9320
1199+ 9320 3A C9 89         ld a,(Cuad_objeto)
1200+ 9323 FE 02            cp 2
1201+ 9325 28 26            jr z,2F
1202+ 9327 38 24            jr c,2F
1203+ 9329
1204+ 9329              ; Cuadrantes 3º y 4º
1205+ 9329
1206+ 9329 E6 01            and 1
1207+ 932B 28 10            jr z,4F
1208+ 932D
1209+ 932D              ; Cuadrante 3º
1210+ 932D
1211+ 932D 7C               ld a,h
1212+ 932E 06 00            ld b,0
1213+ 9330
1214+ 9330 CD BB 93         call Compara_cositas_H3
1215+ 9333
1216+ 9333 04               inc b
1217+ 9334 05               dec b
1218+ 9335 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9336
1220+ 9336 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9337 06 00            ld b,0
1222+ 9339
1223+ 9339 CD CD 93         call Compara_cositas_L3
1224+ 933C C9               ret
1225+ 933D
1226+ 933D              ; Cuadrante 4º
1227+ 933D
1228+ 933D 7C           4 ld a,h
1229+ 933E 06 00            ld b,0
1230+ 9340
1231+ 9340 CD DF 93         call Compara_cositas_H4
1232+ 9343
1233+ 9343 04               inc b
1234+ 9344 05               dec b
1235+ 9345 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9346
1237+ 9346 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9347 06 00            ld b,0
1239+ 9349
1240+ 9349 CD F5 93         call Compara_cositas_L4
1241+ 934C C9               ret
1242+ 934D
1243+ 934D              ; Cuadrantes 1º y 2º.
1244+ 934D
1245+ 934D 28 10        2 jr z,3F
1246+ 934F
1247+ 934F              ; 1er Cuadrante
1248+ 934F
1249+ 934F 7C               ld a,h
1250+ 9350 06 00            ld b,0
1251+ 9352
1252+ 9352 CD 93 93         call Compara_cositas_H1
1253+ 9355
1254+ 9355 04               inc b
1255+ 9356 05               dec b
1256+ 9357 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9358
1258+ 9358 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9359 06 00            ld b,0
1260+ 935B
1261+ 935B CD A9 93         call Compara_cositas_L1
1262+ 935E C9               ret
1263+ 935F
1264+ 935F
1265+ 935F              ; 2º Cuadrante
1266+ 935F
1267+ 935F 7C           3 ld a,h
1268+ 9360 06 00            ld b,0
1269+ 9362
1270+ 9362 CD 6F 93         call Compara_cositas_H2
1271+ 9365
1272+ 9365 04               inc b
1273+ 9366 05               dec b
1274+ 9367 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9368
1276+ 9368 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9369 06 00            ld b,0
1278+ 936B
1279+ 936B CD 81 93         call Compara_cositas_L2
1280+ 936E C9               ret
1281+ 936F
1282+ 936F A7           Compara_cositas_H2 and a
1283+ 9370 28 0D            jr z,1F
1284+ 9372              ;    cp $fd
1285+ 9372              ;    jr z,1F
1286+ 9372              ;    cp $fe
1287+ 9372              ;    jr z,1F
1288+ 9372 FE FF            cp $ff
1289+ 9374 28 09            jr z,1F
1290+ 9376 FE 01            cp $01
1291+ 9378 28 05            jr z,1F
1292+ 937A FE 02            cp $02
1293+ 937C 28 01            jr z,1F
1294+ 937E C0               ret nz
1295+ 937F 04           1 inc b
1296+ 9380 C9               ret
1297+ 9381
1298+ 9381 A7           Compara_cositas_L2 and a
1299+ 9382 28 0D            jr z,1F
1300+ 9384              ;    cp $fd
1301+ 9384              ;    jr z,1F
1302+ 9384 FE FE            cp $fe
1303+ 9386 28 09            jr z,1F
1304+ 9388 FE FF            cp $ff
1305+ 938A 28 05            jr z,1F
1306+ 938C FE 01            cp $01
1307+ 938E 28 01            jr z,1F
1308+ 9390              ;    cp $02
1309+ 9390              ;    jr z,1F
1310+ 9390 C0               ret nz
1311+ 9391 04           1 inc b
1312+ 9392 C9               ret
1313+ 9393
1314+ 9393 A7           Compara_cositas_H1 and a
1315+ 9394 28 11            jr z,1F
1316+ 9396              ;    cp $fd
1317+ 9396              ;    jr z,1F
1318+ 9396              ;    cp $fe
1319+ 9396              ;    jr z,1F
1320+ 9396 FE FF            cp $ff
1321+ 9398 28 0D            jr z,1F
1322+ 939A FE 01            cp $01
1323+ 939C 28 09            jr z,1F
1324+ 939E FE 02            cp $02
1325+ 93A0 28 05            jr z,1F
1326+ 93A2 FE 03            cp $03
1327+ 93A4 28 01            jr z,1F
1328+ 93A6 C0               ret nz
1329+ 93A7 04           1 inc b
1330+ 93A8 C9               ret
1331+ 93A9
1332+ 93A9 A7           Compara_cositas_L1 and a
1333+ 93AA 28 0D            jr z,1F
1334+ 93AC              ;    cp $fd
1335+ 93AC              ;    jr z,1F
1336+ 93AC              ;    cp $fe
1337+ 93AC              ;    jr z,1F
1338+ 93AC              ;    cp $ff
1339+ 93AC              ;    jr z,1F
1340+ 93AC FE 01            cp $01
1341+ 93AE 28 09            jr z,1F
1342+ 93B0 FE 02            cp $02
1343+ 93B2 28 05            jr z,1F
1344+ 93B4 FE 03            cp $03
1345+ 93B6 28 01            jr z,1F
1346+ 93B8 C0               ret nz
1347+ 93B9 04           1 inc b
1348+ 93BA C9               ret
1349+ 93BB
1350+ 93BB A7           Compara_cositas_H3 and a
1351+ 93BC 28 0D            jr z,1F
1352+ 93BE              ;    cp $fd
1353+ 93BE              ;    jr z,1F
1354+ 93BE FE FE            cp $fe
1355+ 93C0 28 09            jr z,1F
1356+ 93C2 FE FF            cp $ff
1357+ 93C4 28 05            jr z,1F
1358+ 93C6 FE 01            cp $01
1359+ 93C8 28 01            jr z,1F
1360+ 93CA              ;    cp $02
1361+ 93CA              ;    jr z,1F
1362+ 93CA              ;    cp $03
1363+ 93CA              ;    jr z,1F
1364+ 93CA C0               ret nz
1365+ 93CB 04           1 inc b
1366+ 93CC C9               ret
1367+ 93CD
1368+ 93CD A7           Compara_cositas_L3 and a
1369+ 93CE 28 0D            jr z,1F
1370+ 93D0              ;    cp $fd
1371+ 93D0              ;    jr z,1F
1372+ 93D0              ;    cp $fe
1373+ 93D0              ;    jr z,1F
1374+ 93D0              ;    cp $ff
1375+ 93D0              ;    jr z,1F
1376+ 93D0 FE 01            cp $01
1377+ 93D2 28 09            jr z,1F
1378+ 93D4 FE 02            cp $02
1379+ 93D6 28 05            jr z,1F
1380+ 93D8 FE 03            cp $03
1381+ 93DA 28 01            jr z,1F
1382+ 93DC C0               ret nz
1383+ 93DD 04           1 inc b
1384+ 93DE C9               ret
1385+ 93DF
1386+ 93DF A7           Compara_cositas_H4 and a
1387+ 93E0 28 11            jr z,1F
1388+ 93E2 FE FD            cp $fd
1389+ 93E4 28 0D            jr z,1F
1390+ 93E6 FE FE            cp $fe
1391+ 93E8 28 09            jr z,1F
1392+ 93EA FE FF            cp $ff
1393+ 93EC 28 05            jr z,1F
1394+ 93EE FE 01            cp $01
1395+ 93F0 28 01            jr z,1F
1396+ 93F2              ;    cp $02
1397+ 93F2              ;    jr z,1F
1398+ 93F2              ;    cp $03
1399+ 93F2              ;    jr z,1F
1400+ 93F2 C0               ret nz
1401+ 93F3 04           1 inc b
1402+ 93F4 C9               ret
1403+ 93F5
1404+ 93F5 A7           Compara_cositas_L4 and a
1405+ 93F6 28 0D            jr z,1F
1406+ 93F8              ;    cp $fd
1407+ 93F8              ;    jr z,1F
1408+ 93F8 FE FE            cp $fe
1409+ 93FA 28 09            jr z,1F
1410+ 93FC FE FF            cp $ff
1411+ 93FE 28 05            jr z,1F
1412+ 9400 FE 01            cp $01
1413+ 9402 28 01            jr z,1F
1414+ 9404              ;    cp $02
1415+ 9404              ;    jr z,1F
1416+ 9404              ;    cp $03
1417+ 9404              ;    jr z,1F
1418+ 9404 C0               ret nz
1419+ 9405 04           1 inc b
1420+ 9406 C9               ret
# file closed: Disparo.asm
1443  9407              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9407              ; ******************************************************************************************************************************************************************************************
   2+ 9407              ;
   3+ 9407              ; 26/06/23
   4+ 9407              ;
   5+ 9407              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9407
   7+ 9407 CD EB 96     Draw call Prepara_draw
   8+ 940A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 940B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 940C 28 05        	jr z,2F
  11+ 940E
  12+ 940E 3A C9 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9411 18 0C        	jr 1F
  14+ 9413
  15+ 9413 2A C7 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9416 22 B7 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9419 CD A8 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 941C              ;													; _la esquina superior izquierda de la pantalla.
  19+ 941C CD F9 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 941F
  21+ 941F 3A E3 89     1 ld a,(Ctrl_0)
  22+ 9422 CB 6F        	bit 5,a
  23+ 9424 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9426
  25+ 9426 CD 3E 94     	call Comprueba_limite_horizontal
  26+ 9429 CD CE 94     	call Comprueba_limite_vertical
  27+ 942C
  28+ 942C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 942C              ; -----------------------
  30+ 942C              ; -----------------------
  31+ 942C              ; -----------------------
  32+ 942C
  33+ 942C CD 1B 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 942F CD 52 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9432 CD B1 96     	call Define_rutina_de_impresion
  36+ 9435
  37+ 9435 3A E3 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9438 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 943A 32 E3 89     	ld (Ctrl_0),a
  40+ 943D
  41+ 943D C9           	ret
  42+ 943E
  43+ 943E              ; *******************************************************************************************************************************************************************************************
  44+ 943E              ;	21/01/23
  45+ 943E              ;
  46+ 943E              ; 	Comprueba_limite_horizontal.
  47+ 943E              ;
  48+ 943E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 943E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 943E              ;
  51+ 943E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 943E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 943E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 943E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 943E
  56+ 943E
  57+ 943E
  58+ 943E 3A E3 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9441 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9443 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9445 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9447 32 E3 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 944A 18 09            jr 6F
  64+ 944C CB 5F        1 bit 3,a
  65+ 944E 28 0A            jr z,2F
  66+ 9450 E6 F7            and $f7
  67+ 9452 32 E3 89         ld (Ctrl_0),a
  68+ 9455 CD A8 95     6 call Inicializacion
  69+ 9458 18 5B            jr 5F
  70+ 945A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 945B
  72+ 945B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 945B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 945B
  75+ 945B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 945C 2A F3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 945F CD C7 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9462 67           	ld h,a
  79+ 9463 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9464 CD C7 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9467 67           	ld h,a
  82+ 9468 A7           	and a
  83+ 9469 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 946B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 946C 3A C9 89     	ld a,(Cuad_objeto)
  86+ 946F FE 02        	cp 2
  87+ 9471 38 1E        	jr c,3F
  88+ 9473 28 1C        	jr z,3F
  89+ 9475 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9476 28 23            jr z,7F
  91+ 9478 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 947A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 947C E1           	pop hl
  94+ 947D
  95+ 947D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 947D              ; _para indicar con E="2" en caso necesario.
  97+ 947D
  98+ 947D E5               push hl
  99+ 947E C5               push bc
 100+ 947F CD C7 99     	call calcula_tercio
 101+ 9482 FE 01        	cp 1
 102+ 9484 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9486 CD B6 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9489 28 26            jr z,9F
 105+ 948B 38 24            jr c,9F
 106+ 948D 1E 00        11 ld e,0
 107+ 948F 18 22            jr 8F
 108+ 9491 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9492 28 07        	jr z, 7F
 110+ 9494 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9496 1E 00         	ld e,0
 112+ 9498 E1           	pop hl
 113+ 9499 18 04        	jr 4F
 114+ 949B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 949D 18 15            jr 10F
 116+ 949F
 117+ 949F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 949F              ; _para indicar con E="2" en caso necesario.
 119+ 949F
 120+ 949F E5           4 push hl
 121+ 94A0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94A1 CD C7 99     	call calcula_tercio
 123+ 94A4 FE 01        	cp 1
 124+ 94A6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94A8 CD B6 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94AB 28 04            jr z,9F
 127+ 94AD 30 02            jr nc,9F
 128+ 94AF 18 02        	jr 8F
 129+ 94B1 1E 02        9 ld e,2
 130+ 94B3 C1           8 pop bc
 131+ 94B4 E1           10 pop hl
 132+ 94B5 C9           5 ret
 133+ 94B6
 134+ 94B6              ; --------------------
 135+ 94B6              ;
 136+ 94B6              ; 25/08/22
 137+ 94B6
 138+ 94B6 CD C7 99     Comprueba_centro call calcula_tercio
 139+ 94B9 67               ld h,a
 140+ 94BA 08           	ex af,af
 141+ 94BB FE 02        	cp 2
 142+ 94BD 38 07        	jr c,1F
 143+ 94BF 28 05        	jr z,1F
 144+ 94C1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94C4 18 03        	jr 2F
 146+ 94C6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94C9 08           2 ex af,af
 148+ 94CA A7               and a
 149+ 94CB ED 42            sbc hl,bc
 150+ 94CD C9               ret
 151+ 94CE
 152+ 94CE              ; *********************************************************************************************************************************************************************************************
 153+ 94CE              ;
 154+ 94CE              ;   16/8/22
 155+ 94CE              ;
 156+ 94CE              ;	Comprueba_limite_vertical
 157+ 94CE              ;
 158+ 94CE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94CE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94CE              ;
 161+ 94CE
 162+ 94CE 2A B7 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94D1 7D           	ld a,l
 164+ 94D2 E6 1F        	and $1F
 165+ 94D4 57           	ld d,a
 166+ 94D5 3A F5 89     	ld a,(Limite_vertical)
 167+ 94D8 BA           	cp d 											; Límite - Posición.
 168+ 94D9 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94DA 3A C9 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94DD CB 47        	bit 0,a
 171+ 94DF 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94E1
 173+ 94E1              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94E1
 175+ 94E1 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94E2 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94E4
 178+ 94E4              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94E4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94E4
 181+ 94E4 3A BB 89         ld a,(Coordenada_X)
 182+ 94E7 16 0F            ld d,Centro_izquierda
 183+ 94E9 A7               and a
 184+ 94EA 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94EB 28 1E            jr z,3F
 186+ 94ED 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94EF              ;                                                    ; _salimos sin modificar nada.
 188+ 94EF 18 0E            jr 2F
 189+ 94F1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94F2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94F4
 192+ 94F4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94F4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94F4
 195+ 94F4 3A BB 89         ld a,(Coordenada_X)
 196+ 94F7 16 10            ld d,Centro_derecha
 197+ 94F9 A7               and a
 198+ 94FA 92               sub d
 199+ 94FB 28 0E            jr z,3F
 200+ 94FD 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94FF              ;                                                    ; _salimos sin modificar nada.
 202+ 94FF CB 43        2 bit 0,e
 203+ 9501 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9503 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9504 CD 98 95         call Modificaccionne
 206+ 9507 C1           	pop bc
 207+ 9508 CD A8 95         call Inicializacion
 208+ 950B C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 950C
 210+ 950C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 950C
 212+ 950C C5           4 push bc
 213+ 950D 01 B6 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9510 0A           	ld a,(bc)
 215+ 9511 3D           	dec a
 216+ 9512 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9513 7D           	ld a,l
 218+ 9514 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9515 CB 47        	bit 0,a
 220+ 9517 28 03        	jr z,5F
 221+ 9519 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 951A 18 2E        	jr 7F
 223+ 951C
 224+ 951C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 951C
 226+ 951C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 951D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 951E 3A E3 89     	ld a,(Ctrl_0)
 229+ 9521 CB 4F        	bit 1,a
 230+ 9523 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9525 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9526
 233+ 9526              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9526
 235+ 9526 1C               inc e
 236+ 9527 1D               dec e
 237+ 9528 20 07            jr nz,12F
 238+ 952A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 952B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 952C 22 B7 89     	ld (Posicion_actual),hl
 241+ 952F 18 44        13 jr 9F
 242+ 9531 CB 43        12 bit 0,e
 243+ 9533 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9535              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9535 C1           	pop bc
 246+ 9536 18 D3        	jr 3B
 247+ 9538 80           14 add b
 248+ 9539 6F               ld l,a
 249+ 953A 22 B7 89     	ld (Posicion_actual),hl
 250+ 953D CD 98 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9540 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9542 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9544 32 E3 89         ld (Ctrl_0),a
 254+ 9547 F1           	pop af
 255+ 9548 18 2B        	jr 9F
 256+ 954A
 257+ 954A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 954A
 259+ 954A F5           7 push af
 260+ 954B 3A E3 89     	ld a,(Ctrl_0)
 261+ 954E CB 47        	bit 0,a
 262+ 9550 20 1D        	jr nz,8F
 263+ 9552 F1           	pop af
 264+ 9553
 265+ 9553              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9553
 267+ 9553 1C           	inc e
 268+ 9554 1D               dec e
 269+ 9555 20 07            jr nz,10F
 270+ 9557 90           	sub b
 271+ 9558 6F               ld l,a
 272+ 9559 22 B7 89     	ld (Posicion_actual),hl
 273+ 955C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 955E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 955E CB 43        10 bit 0,e
 276+ 9560 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9562              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9562 C1           	pop bc
 279+ 9563 18 A6        	jr 3B
 280+ 9565 90           16 sub b
 281+ 9566 6F               ld l,a
 282+ 9567 22 B7 89     	ld (Posicion_actual),hl
 283+ 956A CD 98 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 956D 18 06            jr 9F
 285+ 956F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9571 32 E3 89         ld (Ctrl_0),a
 287+ 9574 F1           	pop af
 288+ 9575 C1           9 pop bc
 289+ 9576 1E 00        	ld e,0
 290+ 9578 CD A8 95         call Inicializacion
 291+ 957B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 957C 08           	ex af,af
 293+ 957D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 957E 18 8B            jr 3B
 295+ 9580
 296+ 9580              ; --------------------
 297+ 9580
 298+ 9580 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9582 CD 06 97     1 call PreviousScan
 300+ 9585 10 FB            djnz 1B
 301+ 9587 22 B7 89     	ld (Posicion_actual),hl
 302+ 958A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 958B C9           	ret
 304+ 958C
 305+ 958C              ; --------------------
 306+ 958C
 307+ 958C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 958E CD F7 96     1 call NextScan
 309+ 9591 10 FB            djnz 1B
 310+ 9593 22 B7 89     	ld (Posicion_actual),hl
 311+ 9596 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9597 C9           	ret
 313+ 9598
 314+ 9598              ; --------------------
 315+ 9598              ;
 316+ 9598              ;	22/01/23
 317+ 9598              ;
 318+ 9598              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9598              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9598              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9598
 322+ 9598
 323+ 9598              Modificaccionne
 324+ 9598
 325+ 9598 3A C9 89     	ld a,(Cuad_objeto)
 326+ 959B FE 02        	cp 2
 327+ 959D CC 80 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95A0 DC 80 95         call c,Modifica_Pos_actual
 329+ 95A3 C8           	ret z
 330+ 95A4 CD 8C 95         call Modifica_Pos_actual2
 331+ 95A7 C9               ret
 332+ 95A8
 333+ 95A8              ; *************************************************************************************************************************************************************************************************
 334+ 95A8              ;
 335+ 95A8              ;	13/8/22
 336+ 95A8              ;
 337+ 95A8              ;	Inicializacion
 338+ 95A8              ;
 339+ 95A8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95A8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95A8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95A8              ;
 343+ 95A8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95A8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95A8              ;	_ desaparece/aparece.
 346+ 95A8
 347+ 95A8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95A8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95A8              ;
 350+ 95A8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95A8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95A8              ; 		   [E] ="0"
 353+ 95A8
 354+ 95A8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95A8
 356+ 95A8 CD C7 99     Inicializacion call calcula_tercio
 357+ 95AB 28 36        	jr z,primit
 358+ 95AD E6 02        	and 2
 359+ 95AF 20 07        	jr nz,segmit
 360+ 95B1 7D           	ld a,l
 361+ 95B2 FE 7F        	cp $7f
 362+ 95B4 38 2D        	jr c,primit
 363+ 95B6 28 2B        	jr z,primit
 364+ 95B8 CD 15 96     segmit call column
 365+ 95BB 38 13        	jr c,tercuad
 366+ 95BD 3E 04        cuarcuad ld a,4
 367+ 95BF 32 C9 89     	ld (Cuad_objeto),a
 368+ 95C2 21 20 48     	ld hl,$4820
 369+ 95C5 22 F3 89     	ld (Limite_horizontal),hl
 370+ 95C8 21 F5 89     	ld hl,Limite_vertical
 371+ 95CB 36 0D        	ld (hl),$0d
 372+ 95CD 08           	ex af,af
 373+ 95CE 18 3C        	jr 1F
 374+ 95D0              tercuad
 375+ 95D0 3E 03        	ld a,3
 376+ 95D2 32 C9 89     	ld (Cuad_objeto),a
 377+ 95D5 21 20 48     	ld hl,$4820
 378+ 95D8 22 F3 89     	ld (Limite_horizontal),hl
 379+ 95DB 21 F5 89     	ld hl,Limite_vertical
 380+ 95DE 36 12        	ld (hl),$12
 381+ 95E0 08           	ex af,af
 382+ 95E1 18 29        	jr 1F
 383+ 95E3 CD 15 96     primit call column
 384+ 95E6 38 13        	jr c, primcuad
 385+ 95E8              segcuad
 386+ 95E8 3E 02        	ld a,2
 387+ 95EA 32 C9 89     	ld (Cuad_objeto),a
 388+ 95ED 21 C0 4F     	ld hl,$4fc0
 389+ 95F0 22 F3 89     	ld (Limite_horizontal),hl
 390+ 95F3 21 F5 89     	ld hl,Limite_vertical
 391+ 95F6 36 0D        	ld (hl),$0d
 392+ 95F8 08           	ex af,af
 393+ 95F9 18 11        	jr 1F
 394+ 95FB              primcuad
 395+ 95FB 3E 01        	ld a,1
 396+ 95FD 32 C9 89     	ld (Cuad_objeto),a
 397+ 9600 21 C0 4F     	ld hl,$4fc0
 398+ 9603 22 F3 89     	ld (Limite_horizontal),hl
 399+ 9606 21 F5 89     	ld hl,Limite_vertical
 400+ 9609 36 12        	ld (hl),$12
 401+ 960B 08           	ex af,af
 402+ 960C CD 52 9D     1 call Genera_coordenadas
 403+ 960F 21 E3 89     	ld hl,Ctrl_0
 404+ 9612 CB EE        	set 5,(hl)
 405+ 9614 C9           	ret
 406+ 9615
 407+ 9615              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9615
 409+ 9615              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9615              ;
 411+ 9615              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9615
 413+ 9615 7D           column ld a,l
 414+ 9616 E6 1F        	and $1f
 415+ 9618 FE 10         	cp $10
 416+ 961A C9            	ret
 417+ 961B
 418+ 961B              ; --------------------------------------------------------------------------------------------------------------------
 419+ 961B              ;
 420+ 961B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 961B              ;
 422+ 961B              ; 14/12/22
 423+ 961B              ;
 424+ 961B              ;	Modifica: A y BC.
 425+ 961B
 426+ 961B 3A C9 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 961E E6 01        	and 1
 428+ 9620 28 17        	jr z,1F
 429+ 9622
 430+ 9622              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9622
 432+ 9622 3A BB 89     	ld a,(Coordenada_X)
 433+ 9625 47           	ld b,a
 434+ 9626 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9627 79           	ld a,c
 436+ 9628 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9629 38 08        	jr c,2F
 438+ 962B 47           	ld b,a
 439+ 962C 79           	ld a,c
 440+ 962D 90           	sub b
 441+ 962E 32 F2 89     	ld (Columnas),a
 442+ 9631 18 1B        	jr 4F
 443+ 9633 79           2 ld a,c
 444+ 9634 32 F2 89     	ld (Columnas),a
 445+ 9637 18 15        	jr 4F
 446+ 9639
 447+ 9639              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9639
 449+ 9639 3A BB 89     1 ld a,(Coordenada_X)
 450+ 963C 81           	add c
 451+ 963D 3D           	dec a
 452+ 963E D6 1F        	sub $1f
 453+ 9640 38 08        	jr c,3F
 454+ 9642 47           	ld b,a
 455+ 9643 79           	ld a,c
 456+ 9644 90           	sub b
 457+ 9645 32 F2 89     	ld (Columnas),a
 458+ 9648 18 04        	jr 4F
 459+ 964A 79           3 ld a,c
 460+ 964B 32 F2 89     	ld (Columnas),a
 461+ 964E D9           4 exx
 462+ 964F 4F           	ld c,a
 463+ 9650 D9           	exx
 464+ 9651 C9            ret
 465+ 9652
 466+ 9652              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9652              ;
 468+ 9652              ;   19/7/23
 469+ 9652              ;
 470+ 9652              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9652              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9652              ;
 473+ 9652              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9652              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9652              ;
 476+ 9652              ;	DESTRUYE: HL,B Y A.
 477+ 9652
 478+ 9652 3A C9 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9655 FE 02        	cp 2
 480+ 9657 38 18        	jr c,1F
 481+ 9659 28 16        	jr z,1F
 482+ 965B E6 01        	and 1
 483+ 965D 28 0D        	jr z,3F
 484+ 965F
 485+ 965F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 965F
 487+ 965F CD A5 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9662
 489+ 9662 7D           9 ld a,l
 490+ 9663 E6 1F        	and $1f
 491+ 9665 28 2A        	jr z,7F
 492+ 9667 2B           	dec hl
 493+ 9668 10 F8        	djnz 9B
 494+ 966A 18 25        	jr 7F
 495+ 966C
 496+ 966C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 966C
 498+ 966C 2A B7 89     3 ld hl,(Posicion_actual)
 499+ 966F 18 20        	jr 7F
 500+ 9671
 501+ 9671 28 14        1 jr z,2F
 502+ 9673
 503+ 9673              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9673
 505+ 9673 CD A5 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9676
 507+ 9676 7D           4 ld a,l
 508+ 9677 E6 1F        	and $1f
 509+ 9679 28 03        	jr z,6F
 510+ 967B 2B           	dec hl
 511+ 967C 10 F8        	djnz 4B
 512+ 967E 06 0F        6 ld b,15
 513+ 9680 CD 06 97     5 call PreviousScan
 514+ 9683 10 FB        	djnz 5B
 515+ 9685 18 0A        	jr 7F
 516+ 9687
 517+ 9687              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9687
 519+ 9687 CD A5 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 968A 06 0F        	ld b,15
 521+ 968C CD 06 97     8 call PreviousScan
 522+ 968F 10 FB        	djnz 8B
 523+ 9691
 524+ 9691 E5           7 push hl
 525+ 9692 DD E1        	pop ix
 526+ 9694
 527+ 9694 2A B9 89     	ld hl,(Puntero_objeto)
 528+ 9697 E5           	push hl
 529+ 9698 FD E1        	pop iy
 530+ 969A
 531+ 969A              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 969A
 533+ 969A 3A E3 89     	ld a,(Ctrl_0)
 534+ 969D CB 77        	bit 6,a
 535+ 969F C8           	ret z
 536+ 96A0
 537+ 96A0              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96A0              ; _ entidad / Amadeus´.
 539+ 96A0
 540+ 96A0 DD 22 3D 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96A4
 542+ 96A4 C9           	ret
 543+ 96A5
 544+ 96A5              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96A5              ;
 546+ 96A5              ;	2/1/23
 547+ 96A5              ;
 548+ 96A5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96A5              ;
 550+ 96A5              ;	Tras esta rutina tenemos:
 551+ 96A5              ;
 552+ 96A5              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96A5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96A5              ;
 555+ 96A5              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96A5
 557+ 96A5 2A B7 89     Operandos ld hl,(Posicion_actual)
 558+ 96A8 3A F2 89     	ld a,(Columnas)
 559+ 96AB 3D           	dec a
 560+ 96AC 20 01        	jr nz,1F
 561+ 96AE 3C           	inc a
 562+ 96AF 47           1 ld b,a
 563+ 96B0 C9           	ret
 564+ 96B1
 565+ 96B1              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96B1              ;
 567+ 96B1              ;	3/1/23
 568+ 96B1              ;
 569+ 96B1              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96B1              ;
 571+ 96B1              ;	Destruye: A,B,HL y DE.
 572+ 96B1
 573+ 96B1              Define_rutina_de_impresion
 574+ 96B1
 575+ 96B1 3A B6 89     	ld a,(Columns)
 576+ 96B4 47           	ld b,a
 577+ 96B5 3A F2 89     	ld a,(Columnas)
 578+ 96B8 B8           	cp b
 579+ 96B9 20 0D        	jr nz,2f
 580+ 96BB
 581+ 96BB              ;	La entidad se imprime entera.
 582+ 96BB
 583+ 96BB 21 97 97     	ld hl, Indice_entidades_completas
 584+ 96BE E6 01        	and 1
 585+ 96C0 28 02        	jr z,1F
 586+ 96C2
 587+ 96C2 23           	inc hl
 588+ 96C3 23           	inc hl
 589+ 96C4
 590+ 96C4 CD 87 8D     1 call Extrae_address
 591+ 96C7 C9           	ret		;	ret
 592+ 96C8
 593+ 96C8              ;	La entidad no se imprime entera en pantalla.
 594+ 96C8
 595+ 96C8 3A C9 89     2 ld a,(Cuad_objeto)
 596+ 96CB E6 01        	and 1
 597+ 96CD 28 17        	jr z,3F
 598+ 96CF
 599+ 96CF              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96CF
 601+ 96CF 21 9B 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96D2 3A B6 89     4 ld a,(Columns)
 603+ 96D5 E6 01        	and 1
 604+ 96D7 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96D9
 606+ 96D9 23           	inc hl
 607+ 96DA 23           	inc hl
 608+ 96DB
 609+ 96DB 3A F2 89     	ld a,(Columnas)
 610+ 96DE E6 01        	and 1
 611+ 96E0 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96E2
 613+ 96E2 23           	inc hl
 614+ 96E3 23           	inc hl
 615+ 96E4
 616+ 96E4 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96E6
 618+ 96E6 21 A1 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96E9 18 E7        	jr 4B
 620+ 96EB
 621+ 96EB              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96EB              ;
 623+ 96EB              ;	Prepara_draw
 624+ 96EB              ;
 625+ 96EB              ;	Es una rutina de carga.
 626+ 96EB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96EB              ;
 628+ 96EB              ;	FUNCIONAMIENTO:
 629+ 96EB              ;
 630+ 96EB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96EB              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96EB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96EB              ;
 634+ 96EB              ;	DESTRUYE:
 635+ 96EB              ;
 636+ 96EB              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96EB
 638+ 96EB 21 B5 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96EE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96EF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96F0 4E           	ld c,(hl)
 642+ 96F1 2A B7 89     	ld hl,(Posicion_actual)
 643+ 96F4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96F6 C9           	ret
 645+ 96F7
 646+ 96F7              ;----------------------------------------------------------------------------------------------------------------
 647+ 96F7              ;
 648+ 96F7              ;	5/08/22
 649+ 96F7              ;
 650+ 96F7              ;   NextScan.
 651+ 96F7              ;
 652+ 96F7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96F7              ;
 654+ 96F7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96F7              ;
 656+ 96F7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96F7              ;
 658+ 96F7              ;       DESTRUIDOS: AF y HL !!!
 659+ 96F7              ;
 660+ 96F7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96F7              ;
 662+ 96F7
 663+ 96F7 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96F8 7C               ld a,h
 665+ 96F9 E6 07            and 7
 666+ 96FB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96FC
 668+ 96FC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96FD C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96FF 6F               ld l,a
 671+ 9700 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9701
 673+ 9701 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9702 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9704 67               ld h,a
 676+ 9705 C9               ret
 677+ 9706
 678+ 9706              ;----------------------------------------------------------------------------------------------------------------
 679+ 9706              ;
 680+ 9706              ;	5/08/22
 681+ 9706              ;
 682+ 9706              ;   PreviousScan.
 683+ 9706              ;
 684+ 9706              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9706              ;
 686+ 9706              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9706              ;
 688+ 9706              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9706              ;
 690+ 9706              ;       DESTRUIDOS: AF y HL !!!
 691+ 9706              ;
 692+ 9706              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9706              ;
 694+ 9706
 695+ 9706 7C           PreviousScan ld a,h
 696+ 9707 25               dec h               ; Dec H.
 697+ 9708 E6 07            and 7
 698+ 970A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 970B
 700+ 970B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 970C D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 970E 6F               ld l,a
 703+ 970F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9710
 705+ 9710 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9711 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9713 67               ld h,a
 708+ 9714 C9               ret
 709+ 9715
 710+ 9715              ; -----------------------------------------------------------------------------------
 711+ 9715              ;
 712+ 9715              ;	31/7/23
 713+ 9715              ;
 714+ 9715              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9715              ;	Extrae fotos de Album_de_fotos.
 716+ 9715
 717+ 9715              Extrae_foto_entidades
 718+ 9715
 719+ 9715              ;	ld a,(Contador_de_frames)
 720+ 9715              ;	cp $1e
 721+ 9715              ;	jr z,$
 722+ 9715
 723+ 9715 21 01 70     	ld hl,Album_de_fotos+1
 724+ 9718 7E           	ld a,(hl)
 725+ 9719 A7           	and a
 726+ 971A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 971B
 728+ 971B 3A 04 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 971E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 971F C8           	ret z
 731+ 9720
 732+ 9720              ; -----------------------------------
 733+ 9720
 734+ 9720 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9724 31 00 70     	ld sp,Album_de_fotos
 736+ 9727
 737+ 9727 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 9729 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 972A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 972B
 741+ 972B ED 73 0B 8A  	ld (Stack_2),sp
 742+ 972F ED 7B 09 8A  	ld sp,(Stack)
 743+ 9733
 744+ 9733              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9733
 746+ 9733 3E CD        	ld a,$cd
 747+ 9735 32 3D 97     	ld (Imprime),a
 748+ 9738 EB           	ex de,hl
 749+ 9739 22 3E 97     	ld (Imprime+1),hl
 750+ 973C EB           	ex de,hl
 751+ 973D
 752+ 973D              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 973D
 754+ 973D 00 00 00     Imprime db 0,0,0
 755+ 9740
 756+ 9740 ED 73 09 8A  	ld (Stack),sp
 757+ 9744
 758+ 9744 3A 04 8A     	ld a,(Numero_de_malotes)
 759+ 9747 3D           	dec a
 760+ 9748 28 09        	jr z,1F
 761+ 974A 32 04 8A      	ld (Numero_de_malotes),a
 762+ 974D
 763+ 974D ED 7B 0B 8A  	ld sp,(Stack_2)
 764+ 9751 18 D4        	jr 2B
 765+ 9753
 766+ 9753 AF           1 xor a
 767+ 9754 32 0B 8A     	ld (Stack_2),a
 768+ 9757
 769+ 9757 C9           	ret
 770+ 9758
 771+ 9758              ; -----------------------------------------------------------------------------------
 772+ 9758              ;
 773+ 9758              ;	28/2/23
 774+ 9758              ;
 775+ 9758              ;	Pinta los disparos generados.
 776+ 9758
 777+ 9758              Extrae_foto_disparos
 778+ 9758
 779+ 9758 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 780+ 975B 7E               ld a,(hl)
 781+ 975C A7               and a
 782+ 975D C8               ret z
 783+ 975E
 784+ 975E 3A 2D 8A     	ld a,(Numero_de_disparotes)
 785+ 9761 A7           	and a
 786+ 9762 C8           	ret z
 787+ 9763 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9767 31 0D 72     	ld sp,Album_de_fotos_disparos
 789+ 976A
 790+ 976A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 976C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 976D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 976E
 794+ 976E ED 73 0B 8A  	ld (Stack_2),sp
 795+ 9772 ED 7B 09 8A  	ld sp,(Stack)
 796+ 9776
 797+ 9776              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9776
 799+ 9776 3E CD        	ld a,$cd
 800+ 9778 32 80 97     	ld (Imprime2),a
 801+ 977B EB           	ex de,hl
 802+ 977C 22 81 97     	ld (Imprime2+1),hl
 803+ 977F EB           	ex de,hl
 804+ 9780
 805+ 9780              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9780
 807+ 9780 00 00 00     Imprime2 db 0,0,0
 808+ 9783
 809+ 9783 3A 2D 8A     	ld a,(Numero_de_disparotes)
 810+ 9786 3D           	dec a
 811+ 9787 28 09        	jr z,1F
 812+ 9789 32 2D 8A      	ld (Numero_de_disparotes),a
 813+ 978C
 814+ 978C ED 7B 0B 8A  	ld sp,(Stack_2)
 815+ 9790 18 D8        	jr 2B
 816+ 9792
 817+ 9792 AF           1 xor a
 818+ 9793 32 0B 8A     	ld (Stack_2),a
 819+ 9796 C9           	ret
 820+ 9797
# file closed: Draw_XOR.asm
1444  9797              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9797              ;   índices de Rutinas de impresión.
   2+ 9797
   3+ 9797 A7 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9799 D4 97            defw Pinta_Amadeus_3x2
   5+ 979B
   6+ 979B 2A 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 979D CA 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 979F 7E 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97A1
  10+ 97A1 54 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97A3 58 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97A5 0C 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97A7
  14+ 97A7
  15+ 97A7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97A7              ;
  17+ 97A7              ;   12/12/22
  18+ 97A7              ;
  19+ 97A7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97A7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97A7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97A7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97A7              ;
  24+ 97A7              ;   Modifica: DE y HL.
  25+ 97A7
  26+ 97A7 ED 73 09 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97AB FD F9        	ld sp,iy
  28+ 97AD 06 10            ld b,16
  29+ 97AF D1           1 pop de
  30+ 97B0 7B               ld a,e
  31+ 97B1 AE               xor (hl)
  32+ 97B2 77           	ld (hl),a
  33+ 97B3 23           	inc hl
  34+ 97B4 7A               ld a,d
  35+ 97B5 AE               xor (hl)
  36+ 97B6 77           	ld (hl),a
  37+ 97B7 2B           	dec hl
  38+ 97B8 24           	inc h
  39+ 97B9 7C               ld a,h
  40+ 97BA E6 07            and 7
  41+ 97BC 20 0A            jr nz,2F
  42+ 97BE 7D               ld a,l
  43+ 97BF C6 20            add a,$20
  44+ 97C1 6F               ld l,a
  45+ 97C2 38 04            jr c,2F
  46+ 97C4 7C               ld a,h
  47+ 97C5 D6 08            sub 8
  48+ 97C7 67               ld h,a
  49+ 97C8 7C           2 ld a,h
  50+ 97C9 FE 58            cp $58
  51+ 97CB 28 02            jr z,3F
  52+ 97CD 10 E0            djnz 1B
  53+ 97CF ED 7B 09 8A  3 ld sp,(Stack)
  54+ 97D3 C9           	ret
  55+ 97D4
  56+ 97D4 ED 73 09 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97D8 FD F9        	ld sp,iy
  58+ 97DA 06 08            ld b,8
  59+ 97DC D1           1 pop de
  60+ 97DD 7B               ld a,e
  61+ 97DE AE               xor (hl)
  62+ 97DF 77           	ld (hl),a
  63+ 97E0 23           	inc hl
  64+ 97E1 7A               ld a,d
  65+ 97E2 AE               xor (hl)
  66+ 97E3 77           	ld (hl),a
  67+ 97E4 23           	inc hl
  68+ 97E5 D1           	pop de
  69+ 97E6 7B               ld a,e
  70+ 97E7 AE               xor (hl)
  71+ 97E8 77           	ld (hl),a
  72+ 97E9 2B           	dec hl
  73+ 97EA 2B           	dec hl
  74+ 97EB 24           	inc h
  75+ 97EC 7C               ld a,h
  76+ 97ED E6 07            and 7
  77+ 97EF 20 0A            jr nz,2F
  78+ 97F1 7D               ld a,l
  79+ 97F2 C6 20            add a,$20
  80+ 97F4 6F               ld l,a
  81+ 97F5 38 04            jr c,2F
  82+ 97F7 7C               ld a,h
  83+ 97F8 D6 08            sub 8
  84+ 97FA 67               ld h,a
  85+ 97FB 7C           2 ld a,h
  86+ 97FC FE 58            cp $58
  87+ 97FE 28 25            jr z,4F
  88+ 9800 7A               ld a,d
  89+ 9801 AE               xor (hl)
  90+ 9802 77               ld (hl),a
  91+ 9803 D1           	pop de
  92+ 9804 23           	inc hl
  93+ 9805 7B               ld a,e
  94+ 9806 AE               xor (hl)
  95+ 9807 77           	ld (hl),a
  96+ 9808 23           	inc hl
  97+ 9809 7A               ld a,d
  98+ 980A AE               xor (hl)
  99+ 980B 77           	ld (hl),a
 100+ 980C 2B           	dec hl
 101+ 980D 2B           	dec hl
 102+ 980E 24           	inc h
 103+ 980F 7C               ld a,h
 104+ 9810 E6 07            and 7
 105+ 9812 20 0A            jr nz,3F
 106+ 9814 7D               ld a,l
 107+ 9815 C6 20            add a,$20
 108+ 9817 6F               ld l,a
 109+ 9818 38 04            jr c,3F
 110+ 981A 7C               ld a,h
 111+ 981B D6 08            sub 8
 112+ 981D 67               ld h,a
 113+ 981E 7C           3 ld a,h
 114+ 981F FE 58            cp $58
 115+ 9821 28 02            jr z,4F
 116+ 9823 10 B7            djnz 1B
 117+ 9825 ED 7B 09 8A  4 ld sp,(Stack)
 118+ 9829 C9           	ret
 119+ 982A
 120+ 982A              ; ---------------------------------------------------
 121+ 982A
 122+ 982A ED 73 09 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 982E FD F9        	ld sp,iy
 124+ 9830
 125+ 9830              ; >>>
 126+ 9830
 127+ 9830 06 10            ld b,16
 128+ 9832 D1           1 pop de
 129+ 9833 7A           	ld a,d
 130+ 9834 AE           	xor (hl)
 131+ 9835 77           	ld (hl),a
 132+ 9836 24           	inc h
 133+ 9837 7C               ld a,h
 134+ 9838 E6 07            and 7
 135+ 983A 20 0C            jr nz,2F
 136+ 983C 7D               ld a,l
 137+ 983D C6 20            add a,$20
 138+ 983F 6F               ld l,a
 139+ 9840 38 06            jr c,2F
 140+ 9842 7C               ld a,h
 141+ 9843 D6 08            sub 8
 142+ 9845 67               ld h,a
 143+ 9846 18 00            jr 2F
 144+ 9848 7C           2 ld a,h
 145+ 9849 FE 58            cp $58
 146+ 984B 28 02            jr z,3F
 147+ 984D 10 E3            djnz 1B
 148+ 984F ED 7B 09 8A  3 ld sp,(Stack)
 149+ 9853 C9           	ret
 150+ 9854
 151+ 9854 ED 73 09 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9858 FD F9        	ld sp,iy
 153+ 985A
 154+ 985A              ; >>>
 155+ 985A
 156+ 985A 06 10            ld b,16
 157+ 985C D1           1 pop de
 158+ 985D 7B           	ld a,e
 159+ 985E AE           	xor (hl)
 160+ 985F 77           	ld (hl),a
 161+ 9860 24           	inc h
 162+ 9861 7C               ld a,h
 163+ 9862 E6 07            and 7
 164+ 9864 20 0C            jr nz,2F
 165+ 9866 7D               ld a,l
 166+ 9867 C6 20            add a,$20
 167+ 9869 6F               ld l,a
 168+ 986A 38 06            jr c,2F
 169+ 986C 7C               ld a,h
 170+ 986D D6 08            sub 8
 171+ 986F 67               ld h,a
 172+ 9870 18 00            jr 2F
 173+ 9872 7C           2 ld a,h
 174+ 9873 FE 58            cp $58
 175+ 9875 28 02            jr z,3F
 176+ 9877 10 E3            djnz 1B
 177+ 9879 ED 7B 09 8A  3 ld sp,(Stack)
 178+ 987D C9           	ret
 179+ 987E
 180+ 987E              ; ---------------------------------------------------
 181+ 987E
 182+ 987E ED 73 09 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9882 FD F9        	ld sp,iy
 184+ 9884 06 08            ld b,8
 185+ 9886 D1           1 pop de
 186+ 9887 7A           	ld a,d
 187+ 9888 AE           	xor (hl)
 188+ 9889 77           	ld (hl),a
 189+ 988A 23           	inc hl
 190+ 988B D1           	pop de
 191+ 988C 7B           	ld a,e
 192+ 988D AE           	xor (hl)
 193+ 988E 77           	ld (hl),a
 194+ 988F 2B           	dec hl
 195+ 9890 24            	inc h
 196+ 9891 7C               ld a,h
 197+ 9892 E6 07            and 7
 198+ 9894 20 0A            jr nz,2F
 199+ 9896 7D               ld a,l
 200+ 9897 C6 20            add a,$20
 201+ 9899 6F               ld l,a
 202+ 989A 38 04            jr c,2F
 203+ 989C 7C               ld a,h
 204+ 989D D6 08            sub 8
 205+ 989F 67               ld h,a
 206+ 98A0 7C           2 ld a,h
 207+ 98A1 FE 58            cp $58
 208+ 98A3 28 20            jr z,4F
 209+ 98A5 D1               pop de
 210+ 98A6 7B           	ld a,e
 211+ 98A7 AE           	xor (hl)
 212+ 98A8 77           	ld (hl),a
 213+ 98A9 23           	inc hl
 214+ 98AA 7A           	ld a,d
 215+ 98AB AE           	xor (hl)
 216+ 98AC 77           	ld (hl),a
 217+ 98AD 2B           	dec hl
 218+ 98AE 24           	inc h
 219+ 98AF 7C               ld a,h
 220+ 98B0 E6 07            and 7
 221+ 98B2 20 0A            jr nz,3F
 222+ 98B4 7D               ld a,l
 223+ 98B5 C6 20            add a,$20
 224+ 98B7 6F               ld l,a
 225+ 98B8 38 04            jr c,3F
 226+ 98BA 7C               ld a,h
 227+ 98BB D6 08            sub 8
 228+ 98BD 67               ld h,a
 229+ 98BE 7C           3 ld a,h
 230+ 98BF FE 58            cp $58
 231+ 98C1 28 02            jr z,4F
 232+ 98C3 10 C1            djnz 1B
 233+ 98C5 ED 7B 09 8A  4 ld sp,(Stack)
 234+ 98C9 C9           	ret
 235+ 98CA
 236+ 98CA ED 73 09 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98CE FD F9        	ld sp,iy
 238+ 98D0 06 08            ld b,8
 239+ 98D2 D1           1 pop de
 240+ 98D3 D1           	pop de
 241+ 98D4 7B           	ld a,e
 242+ 98D5 AE           	xor (hl)
 243+ 98D6 77           	ld (hl),a
 244+ 98D7 24            	inc h
 245+ 98D8 7C               ld a,h
 246+ 98D9 E6 07            and 7
 247+ 98DB 20 0A            jr nz,2F
 248+ 98DD 7D               ld a,l
 249+ 98DE C6 20            add a,$20
 250+ 98E0 6F               ld l,a
 251+ 98E1 38 04            jr c,2F
 252+ 98E3 7C               ld a,h
 253+ 98E4 D6 08            sub 8
 254+ 98E6 67               ld h,a
 255+ 98E7 7C           2 ld a,h
 256+ 98E8 FE 58            cp $58
 257+ 98EA 28 1B            jr z,4F
 258+ 98EC D1               pop de
 259+ 98ED 7A           	ld a,d
 260+ 98EE AE           	xor (hl)
 261+ 98EF 77           	ld (hl),a
 262+ 98F0 24           	inc h
 263+ 98F1 7C               ld a,h
 264+ 98F2 E6 07            and 7
 265+ 98F4 20 0A            jr nz,3F
 266+ 98F6 7D               ld a,l
 267+ 98F7 C6 20            add a,$20
 268+ 98F9 6F               ld l,a
 269+ 98FA 38 04            jr c,3F
 270+ 98FC 7C               ld a,h
 271+ 98FD D6 08            sub 8
 272+ 98FF 67               ld h,a
 273+ 9900 7C           3 ld a,h
 274+ 9901 FE 58            cp $58
 275+ 9903 28 02            jr z,4F
 276+ 9905 10 CB            djnz 1B
 277+ 9907 ED 7B 09 8A  4 ld sp,(Stack)
 278+ 990B C9           	ret
 279+ 990C
 280+ 990C ED 73 09 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9910 FD F9        	ld sp,iy
 282+ 9912 06 08            ld b,8
 283+ 9914 D1           1 pop de
 284+ 9915 7B           	ld a,e
 285+ 9916 AE           	xor (hl)
 286+ 9917 77           	ld (hl),a
 287+ 9918 23           	inc hl
 288+ 9919 7A           	ld a,d
 289+ 991A AE           	xor (hl)
 290+ 991B 77           	ld (hl),a
 291+ 991C 2B           	dec hl
 292+ 991D 24             	inc h
 293+ 991E 7C               ld a,h
 294+ 991F E6 07            and 7
 295+ 9921 20 0A            jr nz,2F
 296+ 9923 7D               ld a,l
 297+ 9924 C6 20            add a,$20
 298+ 9926 6F               ld l,a
 299+ 9927 38 04            jr c,2F
 300+ 9929 7C               ld a,h
 301+ 992A D6 08            sub 8
 302+ 992C 67               ld h,a
 303+ 992D 7C           2 ld a,h
 304+ 992E FE 58            cp $58
 305+ 9930 28 21            jr z,4F
 306+ 9932 D1               pop de
 307+ 9933 7A           	ld a,d
 308+ 9934 AE           	xor (hl)
 309+ 9935 77           	ld (hl),a
 310+ 9936 23           	inc hl
 311+ 9937 D1               pop de
 312+ 9938 7B           	ld a,e
 313+ 9939 AE           	xor (hl)
 314+ 993A 77           	ld (hl),a
 315+ 993B 2B           	dec hl
 316+ 993C 24           	inc h
 317+ 993D 7C               ld a,h
 318+ 993E E6 07            and 7
 319+ 9940 20 0A            jr nz,3F
 320+ 9942 7D               ld a,l
 321+ 9943 C6 20            add a,$20
 322+ 9945 6F               ld l,a
 323+ 9946 38 04            jr c,3F
 324+ 9948 7C               ld a,h
 325+ 9949 D6 08            sub 8
 326+ 994B 67               ld h,a
 327+ 994C 7C           3 ld a,h
 328+ 994D FE 58            cp $58
 329+ 994F 28 02            jr z,4F
 330+ 9951 10 C1            djnz 1B
 331+ 9953 ED 7B 09 8A  4 ld sp,(Stack)
 332+ 9957 C9           	ret
 333+ 9958
 334+ 9958 ED 73 09 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 995C FD F9        	ld sp,iy
 336+ 995E 06 08            ld b,8
 337+ 9960 D1           1 pop de
 338+ 9961 7B           	ld a,e
 339+ 9962 AE           	xor (hl)
 340+ 9963 77           	ld (hl),a
 341+ 9964 24            	inc h
 342+ 9965 7C               ld a,h
 343+ 9966 E6 07            and 7
 344+ 9968 20 0A            jr nz,2F
 345+ 996A 7D               ld a,l
 346+ 996B C6 20            add a,$20
 347+ 996D 6F               ld l,a
 348+ 996E 38 04            jr c,2F
 349+ 9970 7C               ld a,h
 350+ 9971 D6 08            sub 8
 351+ 9973 67               ld h,a
 352+ 9974 7C           2 ld a,h
 353+ 9975 FE 58            cp $58
 354+ 9977 28 1C            jr z,4F
 355+ 9979 D1               pop de
 356+ 997A 7A           	ld a,d
 357+ 997B AE           	xor (hl)
 358+ 997C 77           	ld (hl),a
 359+ 997D 24           	inc h
 360+ 997E 7C               ld a,h
 361+ 997F E6 07            and 7
 362+ 9981 20 0A            jr nz,3F
 363+ 9983 7D               ld a,l
 364+ 9984 C6 20            add a,$20
 365+ 9986 6F               ld l,a
 366+ 9987 38 04            jr c,3F
 367+ 9989 7C               ld a,h
 368+ 998A D6 08            sub 8
 369+ 998C 67               ld h,a
 370+ 998D 7C           3 ld a,h
 371+ 998E FE 58            cp $58
 372+ 9990 28 03            jr z,4F
 373+ 9992 D1               pop de
 374+ 9993 10 CB            djnz 1B
 375+ 9995 ED 7B 09 8A  4 ld sp,(Stack)
 376+ 9999 C9           	ret
 377+ 999A
 378+ 999A              ; ---------------------------------------------------
 379+ 999A              ;
 380+ 999A              ;   27/02/23
 381+ 999A              ;
 382+ 999A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 999A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 999A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 999A
 386+ 999A ED 73 09 8A  Pinta_Disparo ld (Stack),sp
 387+ 999E FD F9            ld sp,iy
 388+ 99A0 06 03            ld b,3
 389+ 99A2 D1           1 pop de
 390+ 99A3 7B               ld a,e
 391+ 99A4 AE               xor (hl)
 392+ 99A5 77               ld (hl),a
 393+ 99A6 23               inc hl
 394+ 99A7 7A               ld a,d
 395+ 99A8 AE               xor (hl)
 396+ 99A9 77               ld (hl),a
 397+ 99AA 2B               dec hl
 398+ 99AB
 399+ 99AB 24               inc h
 400+ 99AC 7C               ld a,h
 401+ 99AD E6 07            and 7
 402+ 99AF 20 0A            jr nz,2F
 403+ 99B1 7D               ld a,l
 404+ 99B2 C6 20            add a,$20
 405+ 99B4 6F               ld l,a
 406+ 99B5 38 04            jr c,2F
 407+ 99B7 7C               ld a,h
 408+ 99B8 D6 08            sub 8
 409+ 99BA 67               ld h,a
 410+ 99BB 7C           2 ld a,h
 411+ 99BC FE 58            cp $58
 412+ 99BE 28 02            jr z,3F
 413+ 99C0
 414+ 99C0 10 E0            djnz 1B
 415+ 99C2 ED 7B 09 8A  3 ld sp,(Stack)
 416+ 99C6 C9               ret
 417+ 99C7
# file closed: Rutinas_de_impresion_sprites.asm
1445  99C7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99C7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99C7              ;
   3+ 99C7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99C7              ;
   5+ 99C7              ; *****************************************************************************************************************************************************************************************
   6+ 99C7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99C7
   8+ 99C7 7C           calcula_tercio ld a,h
   9+ 99C8 E6 18        	and $18
  10+ 99CA CB 2F        	sra a
  11+ 99CC CB 2F        	sra a
  12+ 99CE CB 2F        	sra a
  13+ 99D0 C9           	ret
  14+ 99D1
# file closed: calcula_tercio.asm
1446  99D1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99D1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99D1              ;
   3+ 99D1              ;
   4+ 99D1              ;	CLS.
   5+ 99D1              ;
   6+ 99D1              ;	Limpia la pantalla y define sus atributos.
   7+ 99D1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99D1              ;
   9+ 99D1              ;	COLORES: 0 ..... NEGRO
  10+ 99D1              ;    		 1 ..... AZUL
  11+ 99D1              ; 			 2 ..... ROJO
  12+ 99D1              ;			 3 ..... MAGENTA
  13+ 99D1              ; 			 4 ..... VERDE
  14+ 99D1              ; 			 5 ..... CIAN
  15+ 99D1              ;			 6 ..... AMARILLO
  16+ 99D1              ; 			 7 ..... BLANCO
  17+ 99D1              ;
  18+ 99D1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99D1              ;
  20+ 99D1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99D1
  22+ 99D1
  23+ 99D1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99D4 11 01 40     	LD DE,$4001
  25+ 99D7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99DA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99DC ED B0        	LDIR
  28+ 99DE 01 FF 02     	LD BC,767
  29+ 99E1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99E2 ED B0        	LDIR
  31+ 99E4 C9           	ret
  32+ 99E5
# file closed: Cls.asm
1447  99E5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E5              ; ******************************************************************************************************************************************************************************************
   2+ 99E5              ;
   3+ 99E5              ;   20/05/23
   4+ 99E5              ;
   5+ 99E5              ;	Recompone_posicion_inicio
   6+ 99E5              ;
   7+ 99E5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99E5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99E5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99E5              ;	_ a una u otra rutina.
  11+ 99E5
  12+ 99E5              Recompone_posicion_inicio
  13+ 99E5
  14+ 99E5 2A C7 89     	ld hl,(Posicion_inicio)
  15+ 99E8 7D           	ld a,l
  16+ 99E9 E6 1F        	and $1f
  17+ 99EB 28 16        	jr z,1F
  18+ 99ED
  19+ 99ED FE 1F        	cp $1f
  20+ 99EF 28 0D        	jr z,3F
  21+ 99F1
  22+ 99F1 21 F6 89     	ld hl,Ctrl_2
  23+ 99F4 CB C6        	set 0,(hl)
  24+ 99F6 2A B9 89     	ld hl,(Puntero_objeto)
  25+ 99F9 22 F9 89     	ld (Repone_puntero_objeto),hl
  26+ 99FC 18 08        	jr 2F
  27+ 99FE
  28+ 99FE CD 9F 9B     3 call Mov_left
  29+ 9A01 18 03        	jr 2F
  30+ 9A03
  31+ 9A03 CD 81 9A     1 call Mov_right
  32+ 9A06 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A09 22 B9 89     	ld (Puntero_objeto),hl
  34+ 9A0C C9           	ret
  35+ 9A0D
  36+ 9A0D              ; ******************************************************************************************************************************************************************************************
  37+ 9A0D              ;
  38+ 9A0D              ;   27/05/23
  39+ 9A0D              ;
  40+ 9A0D              ;	Mov_down
  41+ 9A0D              ;
  42+ 9A0D              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A0D              ;
  44+ 9A0D              ;
  45+ 9A0D              Mov_down
  46+ 9A0D
  47+ 9A0D CD 6F 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A10              ;																	; _ repone (Puntero_objeto).
  49+ 9A10 21 E3 89     	ld hl,Ctrl_0
  50+ 9A13 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A15              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A15              ; 																	; _ en el caso de que no lo haya.
  53+ 9A15 3A CD 89     	ld a,(Vel_down)
  54+ 9A18 47           	ld b,a
  55+ 9A19 2A B7 89         ld hl,(Posicion_actual)
  56+ 9A1C CD C7 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A1F E6 02        	and 2
  58+ 9A21 28 0F        	jr z,1F
  59+ 9A23
  60+ 9A23              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A23              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A23
  63+ 9A23 7C           	ld a,h
  64+ 9A24 FE 57        	cp $57
  65+ 9A26 20 0A        	jr nz,1F
  66+ 9A28
  67+ 9A28 7D           	ld a,l
  68+ 9A29 C6 20        	add $20
  69+ 9A2B 30 05        	jr nc,1F
  70+ 9A2D
  71+ 9A2D              ; ------------------------------
  72+ 9A2D              ;	call Reaparece_arriba
  73+ 9A2D CD 2C 9D     	call Reinicio
  74+ 9A30              ; ------------------------------
  75+ 9A30
  76+ 9A30 18 08        	jr 3F
  77+ 9A32 CD F7 96     1 call NextScan
  78+ 9A35 22 B7 89     	ld (Posicion_actual),hl
  79+ 9A38 10 E2            djnz 2B
  80+ 9A3A CD 52 9D     3 call Genera_coordenadas
  81+ 9A3D C9           	ret
  82+ 9A3E
  83+ 9A3E              ; ******************************************************************************************************************************************************************************************
  84+ 9A3E              ;
  85+ 9A3E              ;   27/05/23
  86+ 9A3E              ;
  87+ 9A3E              ;	Mov_up
  88+ 9A3E              ;
  89+ 9A3E              ; 	Mueve el Sprite hacia arriba.
  90+ 9A3E              ;
  91+ 9A3E              ;
  92+ 9A3E              Mov_up
  93+ 9A3E
  94+ 9A3E CD 6F 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A41              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A41 21 E3 89     	ld hl,Ctrl_0
  97+ 9A44 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A46              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A46              ; 																		; _ en el caso de que no lo haya.
 100+ 9A46 3A CC 89     	ld a,(Vel_up)
 101+ 9A49 47           	ld b,a
 102+ 9A4A 2A B7 89     	ld hl,(Posicion_actual)
 103+ 9A4D CD C7 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A50 A7           	and a
 105+ 9A51 20 10        	jr nz,1F
 106+ 9A53
 107+ 9A53              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A53              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A53
 110+ 9A53 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A54 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A56 20 0B            jr nz,1F
 113+ 9A58 7D               ld a,l
 114+ 9A59 D6 20            sub $20
 115+ 9A5B 30 06            jr nc,1F
 116+ 9A5D 25               dec h
 117+ 9A5E
 118+ 9A5E              ; -----------------------------
 119+ 9A5E CD 0D 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A61              ;	call Reinicio
 121+ 9A61              ; -----------------------------
 122+ 9A61
 123+ 9A61 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A63 CD 06 97     1 call PreviousScan
 125+ 9A66 22 B7 89     	ld (Posicion_actual),hl
 126+ 9A69 10 E2            djnz 3B
 127+ 9A6B CD 52 9D     2 call Genera_coordenadas
 128+ 9A6E C9           	ret
 129+ 9A6F
 130+ 9A6F              ; -----------------------------
 131+ 9A6F              ;
 132+ 9A6F              ;	27/5/23
 133+ 9A6F              ;
 134+ 9A6F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A6F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A6F              ;
 137+ 9A6F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A6F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A6F              ;
 140+ 9A6F              ;	Modifica: A y (Puntero_objeto).
 141+ 9A6F
 142+ 9A6F 3A F6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A72 CB 47        	bit 0,a
 144+ 9A74 C8           	ret z
 145+ 9A75 CB 87        	res 0,a
 146+ 9A77 32 F6 89     	ld (Ctrl_2),a
 147+ 9A7A 2A F9 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A7D 22 B9 89     	ld (Puntero_objeto),hl
 149+ 9A80 C9           	ret
 150+ 9A81
 151+ 9A81              ; ******************************************************************************************************************************************************************************************
 152+ 9A81              ;
 153+ 9A81              ;	19/10/22
 154+ 9A81              ;
 155+ 9A81              ;	Mov_right.
 156+ 9A81              ;
 157+ 9A81              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A81              ;
 159+ 9A81
 160+ 9A81 21 E3 89     Mov_right ld hl,Ctrl_0
 161+ 9A84 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A86              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A86              ; 																	; _ en el caso de que no lo haya.
 164+ 9A86 3A E3 89     	ld a,(Ctrl_0)
 165+ 9A89 CB 77        	bit 6,a
 166+ 9A8B 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A8D
 168+ 9A8D CD BB 9C     	call Stop_Amadeus_right
 169+ 9A90 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A91 18 4D        	jr 8F
 171+ 9A93
 172+ 9A93 3A BB 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A96 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A98 20 46        	jr nz,8F
 175+ 9A9A
 176+ 9A9A 3A BD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A9D A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A9E 28 40        	jr z,8F
 179+ 9AA0
 180+ 9AA0              ; ---------- ---------- ----------
 181+ 9AA0              ;
 182+ 9AA0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AA0
 184+ 9AA0 3A CB 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AA3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AA5 28 11        	jr z,1F
 187+ 9AA7 38 06        	jr c,6F
 188+ 9AA9 FE 04        	cp 4
 189+ 9AAB 28 14        	jr z,7F
 190+ 9AAD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AAF
 192+ 9AAF              ; ---------- ---------- ----------
 193+ 9AAF              ;
 194+ 9AAF              ; Perfiles de velocidad
 195+ 9AAF              ;
 196+ 9AAF
 197+ 9AAF 3A BD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AB2 FE FE        	cp $fe
 199+ 9AB4 20 2A        	jr nz,8F
 200+ 9AB6 18 10        	jr 3F
 201+ 9AB8 3A BD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9ABB FE FD        	cp $fd
 203+ 9ABD 20 21        	jr nz,8F
 204+ 9ABF 18 07        	jr 3F
 205+ 9AC1 3A BD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AC4 FE FB        	cp $fb
 207+ 9AC6 20 18        	jr nz,8F
 208+ 9AC8
 209+ 9AC8              ; ---------- ---------- ----------
 210+ 9AC8
 211+ 9AC8              3
 212+ 9AC8 CD FB 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ACB              ;	call Reinicio
 214+ 9ACB
 215+ 9ACB              ; ---------- ---------- ----------
 216+ 9ACB              ;
 217+ 9ACB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ACB
 219+ 9ACB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9ACD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9ACE CD E7 9A     	call DESPLZ_DER
 222+ 9AD1 C1           	pop bc
 223+ 9AD2 10 F9        	djnz 5B
 224+ 9AD4 2A B7 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AD7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AD8 22 B7 89     	ld (Posicion_actual),hl
 227+ 9ADB CD 52 9D     	call Genera_coordenadas
 228+ 9ADE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AE0
 230+ 9AE0              ; ---------- ---------- ----------
 231+ 9AE0
 232+ 9AE0 2A B7 89     8 ld hl,(Posicion_actual)
 233+ 9AE3 CD E7 9A     	call DESPLZ_DER
 234+ 9AE6 C9           2 ret
 235+ 9AE7
 236+ 9AE7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AE7              ;
 238+ 9AE7              ;	22/9/22
 239+ 9AE7              ;
 240+ 9AE7
 241+ 9AE7 CD F6 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AEA CD 42 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AED CD 6B 9B         call Ciclo_completo
 244+ 9AF0 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AF3 CB FE        	set 7,(hl)
 246+ 9AF5 C9           	ret
 247+ 9AF6
 248+ 9AF6              ; ******************************************************************************************************************************************************************************************
 249+ 9AF6              ;	15/02/23
 250+ 9AF6              ;
 251+ 9AF6
 252+ 9AF6 3A CB 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9AF9 47           	ld b,a
 254+ 9AFA 2A C3 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AFD 23           1 inc hl
 256+ 9AFE 23           	inc hl
 257+ 9AFF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B01 22 C3 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B04 CD 87 8D     	call Extrae_address
 260+ 9B07 22 B9 89     	ld (Puntero_objeto),hl
 261+ 9B0A
 262+ 9B0A              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B0A
 264+ 9B0A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B0A              ; Cuántos movimientos hemos hecho ??
 266+ 9B0A              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B0A
 268+ 9B0A 2A BF 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B0D EB           	ex de,hl
 270+ 9B0E A7           	and a
 271+ 9B0F ED 52        	sbc hl,de
 272+ 9B11 CB 3D        	srl l
 273+ 9B13 3E 08        6 ld a,8
 274+ 9B15 95           	sub l
 275+ 9B16 30 1E        	jr nc,3F
 276+ 9B18
 277+ 9B18              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B18              ; B="0".
 279+ 9B18
 280+ 9B18 04           4 inc b
 281+ 9B19 3C           	inc a
 282+ 9B1A 20 FC        	jr nz,4B
 283+ 9B1C 78           	ld a,b
 284+ 9B1D 08           	ex af,af
 285+ 9B1E 2A BF 89     	ld hl,(Indice_Sprite_der)
 286+ 9B21 23           5 inc hl
 287+ 9B22 23           	inc hl
 288+ 9B23 10 FC        	djnz 5B
 289+ 9B25 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B28 CD 87 8D     	call Extrae_address
 291+ 9B2B 22 B9 89     	ld (Puntero_objeto),hl
 292+ 9B2E
 293+ 9B2E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B2E              ; _(Posicion_actual).
 295+ 9B2E
 296+ 9B2E 21 B7 89     	ld hl,Posicion_actual
 297+ 9B31 34           	inc (hl)
 298+ 9B32 08               ex af,af
 299+ 9B33 6F           	ld l,a
 300+ 9B34 18 DD        	jr 6B
 301+ 9B36
 302+ 9B36              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B36
 304+ 9B36 47           3 ld b,a
 305+ 9B37 2A C1 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B3A 23           2 inc hl
 307+ 9B3B 23           	inc hl
 308+ 9B3C 10 FC        	djnz 2B
 309+ 9B3E 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B41 C9           8 ret
 311+ 9B42
 312+ 9B42              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B42              ;
 314+ 9B42              ;	24/7/22
 315+ 9B42              ;
 316+ 9B42              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B42              ;
 318+ 9B42              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B42              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B42              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B42
 322+ 9B42 3A BD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B45 A7           	and a
 324+ 9B46 20 1F        	jr nz,1F
 325+ 9B48 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B4A 32 BD 89         ld (CTRL_DESPLZ),a
 327+ 9B4D
 328+ 9B4D 21 B6 89     	ld hl,Columns
 329+ 9B50 34           	inc (hl)
 330+ 9B51 3A C9 89     	ld a,(Cuad_objeto)
 331+ 9B54 E6 01        	and 1
 332+ 9B56 28 0F        	jr z,1F
 333+ 9B58 2A B7 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B5B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B5C 22 B7 89     	ld (Posicion_actual),hl
 336+ 9B5F CD 52 9D     	call Genera_coordenadas
 337+ 9B62 CD C7 9C     	call Inc_CTRL_DESPLZ
 338+ 9B65 18 03        	jr 2F
 339+ 9B67 CD C7 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B6A C9           2 ret
 341+ 9B6B
 342+ 9B6B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B6B              ;
 344+ 9B6B              ;	24/7/22
 345+ 9B6B              ;
 346+ 9B6B              ;	Ciclo_completo.
 347+ 9B6B              ;
 348+ 9B6B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B6B              ;
 350+ 9B6B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B6B              ; 	Decrementamos (Columns).
 352+ 9B6B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B6B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B6B
 355+ 9B6B
 356+ 9B6B 3A BD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B6E FE FF        	cp $ff
 358+ 9B70 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B72 E6 F0        	and $f0
 360+ 9B74 20 28        	jr nz,3F
 361+ 9B76
 362+ 9B76              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B76
 364+ 9B76 3A BD 89     	ld a,(CTRL_DESPLZ)
 365+ 9B79 47           	ld b,a
 366+ 9B7A 3E F8        	ld a,$f8
 367+ 9B7C 80           	add b
 368+ 9B7D 32 BD 89     	ld (CTRL_DESPLZ),a
 369+ 9B80 18 1C        	jr 3F
 370+ 9B82 21 B6 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B85 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B86 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B87 32 BD 89     	ld (CTRL_DESPLZ),a
 374+ 9B8A 3A C9 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B8D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B8F 20 0A        	jr nz,2F
 377+ 9B91 2A B7 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B94 23           	inc hl
 379+ 9B95 22 B7 89     	ld (Posicion_actual),hl
 380+ 9B98 CD 52 9D     	call Genera_coordenadas
 381+ 9B9B
 382+ 9B9B              ; Inicia el puntero de Sprite.
 383+ 9B9B
 384+ 9B9B CD 9E 8D     2 call Inicia_puntero_objeto_der
 385+ 9B9E C9           3 ret
 386+ 9B9F
 387+ 9B9F              ; ******************************************************************************************************************************************************************************************
 388+ 9B9F              ;
 389+ 9B9F              ;	15/02/23
 390+ 9B9F              ;
 391+ 9B9F              ;	Mov_left.
 392+ 9B9F              ;
 393+ 9B9F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B9F              ;
 395+ 9B9F 21 E3 89     Mov_left ld hl,Ctrl_0
 396+ 9BA2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BA4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BA4              ; 																	; _ en el caso de que no lo haya.
 399+ 9BA4 3A E3 89     	ld a,(Ctrl_0)
 400+ 9BA7 CB 77        	bit 6,a
 401+ 9BA9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BAB
 403+ 9BAB CD C1 9C     	call Stop_Amadeus_left
 404+ 9BAE C8           	ret z
 405+ 9BAF 20 4A        	jr nz,8F
 406+ 9BB1
 407+ 9BB1 3A BB 89     11 ld a,(Coordenada_X)
 408+ 9BB4 A7           	and a
 409+ 9BB5 20 44        	jr nz,8F
 410+ 9BB7
 411+ 9BB7 3A BD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BBA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BBB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BBD
 415+ 9BBD              ; ---------- ---------- ----------
 416+ 9BBD
 417+ 9BBD 3A CA 89     	ld a,(Vel_left)
 418+ 9BC0 FE 02        	cp 2
 419+ 9BC2 28 0F        	jr z,1F
 420+ 9BC4 38 04        	jr c,6F
 421+ 9BC6 FE 04        	cp 4
 422+ 9BC8 28 12        	jr z,7F
 423+ 9BCA
 424+ 9BCA              ; ---------- ---------- ----------
 425+ 9BCA
 426+ 9BCA 3A BD 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BCD FE F8        	cp $f8
 428+ 9BCF 20 2A        	jr nz,8F
 429+ 9BD1 18 10        	jr 4F
 430+ 9BD3 3A BD 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BD6 FE F9        	cp $f9
 432+ 9BD8 20 21        	jr nz,8F
 433+ 9BDA 18 07        	jr 4F
 434+ 9BDC 3A BD 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BDF FE FB        	cp $fb
 436+ 9BE1 20 18        	jr nz,8F
 437+ 9BE3
 438+ 9BE3              ; ---------- ---------- ----------
 439+ 9BE3
 440+ 9BE3              4
 441+ 9BE3 CD E9 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BE6              ;	call Reinicio
 443+ 9BE6
 444+ 9BE6              ; ---------- ---------- ----------
 445+ 9BE6
 446+ 9BE6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BE8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BE9
 449+ 9BE9              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BE9              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BE9
 452+ 9BE9 CD 02 9C     	call DESPLZ_IZQ
 453+ 9BEC C1           	pop bc
 454+ 9BED 10 F9        	djnz 5B
 455+ 9BEF 2A B7 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BF2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BF3 22 B7 89     	ld (Posicion_actual),hl
 458+ 9BF6 CD 52 9D     	call Genera_coordenadas
 459+ 9BF9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BFB
 461+ 9BFB              ; ---------- ---------- ----------
 462+ 9BFB
 463+ 9BFB              ; Movemos, no hay recolocación.
 464+ 9BFB
 465+ 9BFB 2A B7 89     8 ld hl,(Posicion_actual)
 466+ 9BFE CD 02 9C     	call DESPLZ_IZQ
 467+ 9C01 C9           2 ret
 468+ 9C02
 469+ 9C02              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C02              ;
 471+ 9C02              ;	22/9/22
 472+ 9C02
 473+ 9C02              DESPLZ_IZQ
 474+ 9C02
 475+ 9C02 CD 11 9C     	call Desplaza_izquierda
 476+ 9C05 CD 5D 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C08 CD 85 9C     	call Ciclo_completo_2
 478+ 9C0B 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C0E CB BE        	res 7,(hl)
 480+ 9C10 C9           	ret
 481+ 9C11
 482+ 9C11              Desplaza_izquierda
 483+ 9C11
 484+ 9C11 3A CA 89     	ld a,(Vel_left)
 485+ 9C14 47           	ld b,a
 486+ 9C15 2A C5 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C18 23           1 inc hl
 488+ 9C19 23           	inc hl
 489+ 9C1A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C1C 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C1F CD 87 8D     	call Extrae_address
 492+ 9C22 22 B9 89     	ld (Puntero_objeto),hl
 493+ 9C25
 494+ 9C25              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C25
 496+ 9C25              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C25              ; Cuántos movimientos hemos hecho ??
 498+ 9C25              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C25
 500+ 9C25 2A C1 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C28 EB           	ex de,hl
 502+ 9C29 A7           	and a
 503+ 9C2A ED 52        	sbc hl,de
 504+ 9C2C CB 3D        	srl l
 505+ 9C2E 3E 08        6 ld a,8
 506+ 9C30 95           	sub l
 507+ 9C31 30 1E        	jr nc,3F
 508+ 9C33
 509+ 9C33              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C33              ; B="0".
 511+ 9C33
 512+ 9C33 04           4 inc b
 513+ 9C34 3C           	inc a
 514+ 9C35 20 FC        	jr nz,4B
 515+ 9C37 78           	ld a,b
 516+ 9C38 08           	ex af,af
 517+ 9C39 2A C1 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C3C 23           5 inc hl
 519+ 9C3D 23           	inc hl
 520+ 9C3E 10 FC        	djnz 5B
 521+ 9C40 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C43 CD 87 8D     	call Extrae_address
 523+ 9C46 22 B9 89     	ld (Puntero_objeto),hl
 524+ 9C49
 525+ 9C49              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C49              ; _(Posicion_actual).
 527+ 9C49
 528+ 9C49 21 B7 89     	ld hl,Posicion_actual
 529+ 9C4C 35           	dec (hl)
 530+ 9C4D 08           	ex af,af
 531+ 9C4E 6F           	ld l,a
 532+ 9C4F 18 DD        	jr 6B
 533+ 9C51
 534+ 9C51              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C51
 536+ 9C51 47           3 ld b,a
 537+ 9C52 2A BF 89     	ld hl,(Indice_Sprite_der)
 538+ 9C55 23           2 inc hl
 539+ 9C56 23           	inc hl
 540+ 9C57 10 FC        	djnz 2B
 541+ 9C59 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C5C C9           8 ret
 543+ 9C5D
 544+ 9C5D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C5D              ;
 546+ 9C5D              ;	modifica_parametros_1er_DESPLZ
 547+ 9C5D              ;
 548+ 9C5D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C5D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C5D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C5D
 552+ 9C5D 3A BD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C60 A7           	and a
 554+ 9C61 20 1E        	jr nz,1F
 555+ 9C63 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C64 32 BD 89         ld (CTRL_DESPLZ),a
 557+ 9C67 21 B6 89     	ld hl,Columns
 558+ 9C6A 34           	inc (hl)
 559+ 9C6B 3A C9 89     	ld a,(Cuad_objeto)
 560+ 9C6E E6 01        	and 1
 561+ 9C70 20 0F        	jr nz,1F
 562+ 9C72 2A B7 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C75 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C76 22 B7 89     	ld (Posicion_actual),hl
 565+ 9C79 CD 52 9D     	call Genera_coordenadas
 566+ 9C7C CD D8 9C     	call Dec_CTRL_DESPLZ
 567+ 9C7F 18 03        	jr 2F
 568+ 9C81 CD D8 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C84 C9           2 ret
 570+ 9C85
 571+ 9C85              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C85
 573+ 9C85 3A BD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C88 FE F7        	cp $f7
 575+ 9C8A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C8C 30 2C        	jr nc,3F
 577+ 9C8E
 578+ 9C8E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C8E
 580+ 9C8E 06 00        	ld b,0
 581+ 9C90 04           4 inc b
 582+ 9C91 3C           	inc a
 583+ 9C92 FE F7        	cp $f7
 584+ 9C94 20 FA        	jr nz,4B
 585+ 9C96 3E FF        	ld a,$ff
 586+ 9C98 90           	sub b
 587+ 9C99 32 BD 89     	ld (CTRL_DESPLZ),a
 588+ 9C9C 18 1C        	jr 3F
 589+ 9C9E
 590+ 9C9E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C9E
 592+ 9C9E 21 B6 89     1 ld hl,Columns
 593+ 9CA1 35           	dec (hl)
 594+ 9CA2 AF           	xor a
 595+ 9CA3 32 BD 89     	ld (CTRL_DESPLZ),a
 596+ 9CA6 3A C9 89     	ld a,(Cuad_objeto)
 597+ 9CA9 E6 01        	and 1
 598+ 9CAB 28 0A        	jr z,2F
 599+ 9CAD 2A B7 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CB0 2B           	dec hl
 601+ 9CB1 22 B7 89     	ld (Posicion_actual),hl
 602+ 9CB4 CD 52 9D     	call Genera_coordenadas
 603+ 9CB7
 604+ 9CB7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CB7
 606+ 9CB7 CD B1 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CBA C9           3 ret
 608+ 9CBB
 609+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CBB              ;
 611+ 9CBB              ;	19/10/22
 612+ 9CBB              ;
 613+ 9CBB              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CBB              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CBB
 616+ 9CBB 3A BB 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CBE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CC0 C9           	ret
 619+ 9CC1
 620+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CC1              ;
 622+ 9CC1              ;	19/10/22
 623+ 9CC1              ;
 624+ 9CC1              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CC1              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CC1
 627+ 9CC1 3A BB 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CC4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CC6 C9           	ret
 630+ 9CC7
 631+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CC7              ;
 633+ 9CC7              ;	24/7/22
 634+ 9CC7              ;
 635+ 9CC7              ;	Inc_CTRL_DESPLZ
 636+ 9CC7              ;
 637+ 9CC7              ;
 638+ 9CC7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CC7
 640+ 9CC7 21 BD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CCA 3A CB 89     	ld a,(Vel_right)
 642+ 9CCD A7           	and a
 643+ 9CCE 28 06        	jr z,1F
 644+ 9CD0 47           	ld b,a
 645+ 9CD1 34           3 inc (hl)
 646+ 9CD2 10 FD        	djnz 3B
 647+ 9CD4 18 01        	jr 2F
 648+ 9CD6 34           1 inc (hl)
 649+ 9CD7 C9           2 ret
 650+ 9CD8
 651+ 9CD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CD8              ;
 653+ 9CD8              ;	5/2/23
 654+ 9CD8              ;
 655+ 9CD8              ;	Dec_CTRL_DESPLZ
 656+ 9CD8              ;
 657+ 9CD8              ;
 658+ 9CD8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CD8
 660+ 9CD8 21 BD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CDB 3A CA 89     	ld a,(Vel_left)
 662+ 9CDE A7           	and a
 663+ 9CDF 28 06        	jr z,1F
 664+ 9CE1 47           	ld b,a
 665+ 9CE2 35           3 dec (hl)
 666+ 9CE3 10 FD        	djnz 3B
 667+ 9CE5 18 01        	jr 2F
 668+ 9CE7 35           1 dec (hl)
 669+ 9CE8 C9           2 ret
 670+ 9CE9
 671+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CE9
 673+ 9CE9 2A B7 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CEC 01 1F 00     	ld bc,31
 675+ 9CEF A7           	and a
 676+ 9CF0 ED 4A        	adc hl,bc
 677+ 9CF2 22 B7 89     	ld (Posicion_actual),hl
 678+ 9CF5 21 E3 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CF8 CB C6        	set 0,(hl)
 680+ 9CFA C9           	ret
 681+ 9CFB
 682+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CFB
 684+ 9CFB 2A B7 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CFE 01 1F 00     	ld bc,31
 686+ 9D01 A7           	and a
 687+ 9D02 ED 42        	sbc hl,bc
 688+ 9D04 22 B7 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D07 21 E3 89     	ld hl,Ctrl_0
 690+ 9D0A CB CE        	set 1,(hl)
 691+ 9D0C C9           	ret
 692+ 9D0D
 693+ 9D0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D0D
 695+ 9D0D 24           Reaparece_abajo inc h
 696+ 9D0E 01 E0 17     	ld bc,$17e0
 697+ 9D11 A7           	and a
 698+ 9D12 ED 4A        	adc hl,bc
 699+ 9D14 22 B7 89     	ld (Posicion_actual),hl
 700+ 9D17 21 E3 89     	ld hl,Ctrl_0
 701+ 9D1A CB D6        	set 2,(hl)
 702+ 9D1C C9           	ret
 703+ 9D1D
 704+ 9D1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D1D
 706+ 9D1D 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D20 A7           	and a
 708+ 9D21 ED 42        	sbc hl,bc
 709+ 9D23 22 B7 89     	ld (Posicion_actual),hl
 710+ 9D26 21 E3 89     	ld hl,Ctrl_0
 711+ 9D29 CB DE        	set 3,(hl)
 712+ 9D2B C9           	ret
 713+ 9D2C
 714+ 9D2C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D2C              ;
 716+ 9D2C              ;	15/07/23
 717+ 9D2C
 718+ 9D2C              Reinicio
 719+ 9D2C
 720+ 9D2C              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D2C
 722+ 9D2C AF           	xor a
 723+ 9D2D 21 EA 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D30 CD 4E 9D     	call Limpia_contenido_hl
 725+ 9D33
 726+ 9D33 21 B7 89     	ld hl,Posicion_actual
 727+ 9D36 CD 4E 9D     	call Limpia_contenido_hl
 728+ 9D39
 729+ 9D39 CD 6F A0     	call Inicializa_Puntero_indice_mov
 730+ 9D3C CD F9 9F     	call Inicia_Puntero_mov
 731+ 9D3F
 732+ 9D3F 21 EC 89     	ld hl,Incrementa_puntero
 733+ 9D42 06 05        	ld b,5
 734+ 9D44 77           1 ld (hl),a
 735+ 9D45 23           	inc hl
 736+ 9D46 10 FC        	djnz 1B
 737+ 9D48
 738+ 9D48 21 F6 89     	ld hl,Ctrl_2
 739+ 9D4B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D4D
 741+ 9D4D C9           	ret
 742+ 9D4E
 743+ 9D4E 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D4F 23           	inc hl
 745+ 9D50 77           	ld (hl),a
 746+ 9D51 C9           	ret
 747+ 9D52
 748+ 9D52
# file closed: Direcciones.asm
1448  9D52              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D52              ; ------------------------------------------------------------------------
   2+ 9D52              ;
   3+ 9D52              ;	02/04/23
   4+ 9D52              ;
   5+ 9D52              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D52              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D52              ;
   8+ 9D52              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D52              ;
  10+ 9D52              ;	Modifica: A,BC y DE.
  11+ 9D52
  12+ 9D52 C5           Genera_coordenadas push bc
  13+ 9D53 E5           	push hl
  14+ 9D54 D5           	push de
  15+ 9D55
  16+ 9D55 2A B7 89     	ld hl,(Posicion_actual)
  17+ 9D58
  18+ 9D58 7D           	ld a,l
  19+ 9D59 E6 1F        	and $1f
  20+ 9D5B 32 BB 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D5E
  22+ 9D5E CD C7 99     	call calcula_tercio
  23+ 9D61 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D62
  25+ 9D62 1E 00        	ld e,0
  26+ 9D64 7D           	ld a,l
  27+ 9D65 E6 E0        	and $e0
  28+ 9D67 28 01        	jr z,1F
  29+ 9D69 04           	inc b
  30+ 9D6A
  31+ 9D6A 04           1 inc b
  32+ 9D6B 05           	dec b
  33+ 9D6C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D6E              ;														; _ , salimos.
  35+ 9D6E 1C           3 inc e
  36+ 9D6F D6 20        	sub 32
  37+ 9D71 20 FB        	jr nz,3B
  38+ 9D73 10 F5        	djnz 1B
  39+ 9D75
  40+ 9D75 7B           2 ld a,e
  41+ 9D76 32 BC 89     	ld (Coordenada_y),a
  42+ 9D79
  43+ 9D79 D1           	pop de
  44+ 9D7A E1           	pop hl
  45+ 9D7B C1           	pop bc
  46+ 9D7C
  47+ 9D7C C9           	ret
  48+ 9D7D
  49+ 9D7D              ; ------------------------------------------------------------------------
  50+ 9D7D              ;	28/05/23
  51+ 9D7D              ;
  52+ 9D7D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D7D              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D7D              ;
  55+ 9D7D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D7D              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D7D              ;
  58+ 9D7D              ;		DE="$120d"
  59+ 9D7D              ;
  60+ 9D7D              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D7D              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D7D              ;
  63+ 9D7D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D7D
  65+ 9D7D              ;	Modifica: A,BC y DE.
  66+ 9D7D
  67+ 9D7D
  68+ 9D7D              Genera_coordenadas_disparo
  69+ 9D7D
  70+ 9D7D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D7D
  72+ 9D7D 7D           	ld a,l
  73+ 9D7E E6 1F        	and $1f
  74+ 9D80 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D81 CD C7 99     	call calcula_tercio
  76+ 9D84 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D85 1E 00        	ld e,0
  78+ 9D87 7D           	ld a,l
  79+ 9D88 E6 E0        	and $e0
  80+ 9D8A 28 01        	jr z,1F
  81+ 9D8C 04           	inc b
  82+ 9D8D 1C           1 inc e
  83+ 9D8E D6 20        	sub 32
  84+ 9D90 20 FB        	jr nz,1B
  85+ 9D92 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D94 C9           	ret
  87+ 9D95
# file closed: Genera_coordenadas.asm
1449  9D95              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D95
   2+ 9D95
   3+ 9D95              ;   07/07/23
   4+ 9D95              ;
   5+ 9D95              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D95              ;
   7+ 9D95              ;   Codificación:
   8+ 9D95              ;
   9+ 9D95              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D95              ;
  11+ 9D95              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D95              ;
  13+ 9D95              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D95              ;
  15+ 9D95              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D95              ;
  17+ 9D95              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D95              ;                               ..... %01000010 Vel_up 4
  19+ 9D95              ;                                               Vel_down 2
  20+ 9D95              ;                               ..... $42
  21+ 9D95              ;
  22+ 9D95              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D95              ;
  24+ 9D95              ;                               ..... %01000010 Vel_left 4
  25+ 9D95              ;                                               Vel_right 2
  26+ 9D95              ;                               ..... $42
  27+ 9D95              ;
  28+ 9D95              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D95              ;
  30+ 9D95              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D95              ;
  32+ 9D95              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D95              ;
  34+ 9D95              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D95              ;                                     $53
  36+ 9D95              ;
  37+ 9D95              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D95              ;
  39+ 9D95              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D95              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D95              ;
  42+ 9D95              ;                       Arriba ..... $81
  43+ 9D95              ;                       Arriba - izquierda ..... $a1
  44+ 9D95              ;                       Arriba - derecha ..... $91
  45+ 9D95              ;
  46+ 9D95              ;                       Abajo ..... $41
  47+ 9D95              ;                       Abajo - izquierda ..... $61
  48+ 9D95              ;                       Abajo - derecha ..... $51
  49+ 9D95              ;
  50+ 9D95              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D95              ;
  52+ 9D95              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D95              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D95              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D95              ;
  56+ 9D95              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D95              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D95              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D95              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D95              ;
  61+ 9D95              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D95              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D95              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D95              ;
  65+ 9D95              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D95              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D95              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D95              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D95
  70+ 9D95              ; ----- ----- ----- ----- -----
  71+ 9D95
  72+ 9D95 C1 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D97 C9 9D            defw F_1
  74+ 9D99 D3 9D            defw F_2
  75+ 9D9B DD 9D            defw Codo_abajo_derecha
  76+ 9D9D 11 9E            defw Derecha_y_subiendo
  77+ 9D9F 1B 9E            defw Derecha_y_subiendo_1
  78+ 9DA1 25 9E            defw F_3
  79+ 9DA3 2F 9E            defw F_4
  80+ 9DA5 39 9E            defw Derecha_y_bajando
  81+ 9DA7 43 9E            defw Derecha_y_bajando_1
  82+ 9DA9 4D 9E            defw Derecha_y_bajando_2
  83+ 9DAB 57 9E            defw Codo_derecha_abajo
  84+ 9DAD 87 9E            defw Codo_abajo_izq.
  85+ 9DAF BB 9E            defw Izquierda_y_subiendo
  86+ 9DB1 C5 9E            defw Izquierda_y_subiendo_1
  87+ 9DB3 CF 9E            defw F_5
  88+ 9DB5 D9 9E            defw F_6
  89+ 9DB7 E3 9E            defw Izquierda_y_bajando
  90+ 9DB9 ED 9E            defw Izquierda_y_bajando_1
  91+ 9DBB F7 9E            defw Izquierda_y_bajando_2
  92+ 9DBD 01 9F            defw Codo_izquierda_abajo
  93+ 9DBF 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DC1
  95+ 9DC1 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DC5 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DC9
  98+ 9DC9 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DCD 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DD1 08 00
 100+ 9DD3 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD7 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DDB 0F FE
 102+ 9DDD
 103+ 9DDD 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DE5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DE9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DED 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DF1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DF5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DF9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DFD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E01 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E05 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E09 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E0D 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E11
 117+ 9E11 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E15 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E19 06 00
 119+ 9E1B
 120+ 9E1B 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E1F 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E23 02 00
 122+ 9E25
 123+ 9E25 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E29 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E2D 04 00
 125+ 9E2F 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E33 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E37 08 00
 127+ 9E39
 128+ 9E39 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E3D 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E41 02 00
 130+ 9E43
 131+ 9E43 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E47 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E4B 06 00
 133+ 9E4D
 134+ 9E4D 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E51 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E55 06 00
 136+ 9E57
 137+ 9E57              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E57
 139+ 9E57 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E5B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E5F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E67 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E6B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E6F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E73 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E77 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E7B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E7F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E83 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E87
 152+ 9E87 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E8B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E8F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E93 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E97 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E9B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E9F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EA3 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA7 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EAB 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EAF 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EB3 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB7 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EBB
 166+ 9EBB 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EBF 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EC3 06 00
 168+ 9EC5
 169+ 9EC5 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EC9 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ECD 02 00
 171+ 9ECF
 172+ 9ECF 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ED3 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED7 04 00
 174+ 9ED9 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EDD 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EE1 08 00
 176+ 9EE3
 177+ 9EE3 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE7 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EEB 02 00
 179+ 9EED
 180+ 9EED 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EF1 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EF5 06 00
 182+ 9EF7
 183+ 9EF7 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EFB 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EFF 06 00
 185+ 9F01
 186+ 9F01 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F05 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F09 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F0D 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F11 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F15 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F19 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F1D 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F21 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F25 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F29 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F2D 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F31
 199+ 9F31              ; ----- ----- ----- ----- -----
 200+ 9F31              ;
 201+ 9F31              ;   27/06/23
 202+ 9F31
 203+ 9F31              Movimiento
 204+ 9F31
 205+ 9F31              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F31
 207+ 9F31              ;    ld hl,(Posicion_actual)
 208+ 9F31
 209+ 9F31 3A F6 89         ld a,(Ctrl_2)
 210+ 9F34 CB 57            bit 2,a
 211+ 9F36 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F38
 213+ 9F38 2A E8 89         ld hl,(Puntero_mov)
 214+ 9F3B 7E               ld a,(hl)
 215+ 9F3C
 216+ 9F3C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F3C
 218+ 9F3C              Inicia_desplazamiento.
 219+ 9F3C
 220+ 9F3C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F3C
 222+ 9F3C CD 30 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F3F
 224+ 9F3F              ; Iniciamos (Repetimos_mov).
 225+ 9F3F
 226+ 9F3F 7E               ld a,(hl)
 227+ 9F40 E6 0F            and $0f
 228+ 9F42 32 EE 89         ld (Repetimos_desplazamiento),a
 229+ 9F45 32 EF 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F48
 231+ 9F48              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F48
 233+ 9F48 23               inc hl
 234+ 9F49 7E               ld a,(hl)
 235+ 9F4A 32 F1 89         ld (Cola_de_desplazamiento),a
 236+ 9F4D 2B               dec hl
 237+ 9F4E
 238+ 9F4E 21 F6 89         ld hl,Ctrl_2
 239+ 9F51 CB D6            set 2,(hl)
 240+ 9F53
 241+ 9F53              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F53              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F53
 244+ 9F53              Desplazamiento_iniciado
 245+ 9F53
 246+ 9F53 CD 04 A0         call Aplica_desplazamiento
 247+ 9F56
 248+ 9F56 3A F6 89         ld a,(Ctrl_2)
 249+ 9F59 CB 67            bit 4,a
 250+ 9F5B C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F5C
 252+ 9F5C 21 EE 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F5F 35               dec (hl)
 254+ 9F60 C0               ret nz
 255+ 9F61
 256+ 9F61              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F61              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F61              ; Analiza (Cola_de_desplazamiento).
 259+ 9F61
 260+ 9F61 3A F1 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F64 A7               and a
 262+ 9F65 CC 59 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F68 28 30            jr z,Reinicia_el_movimiento
 264+ 9F6A
 265+ 9F6A FE FF            cp $ff
 266+ 9F6C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F6E
 268+ 9F6E FE FE            cp $fe
 269+ 9F70 CC DD 9F         call z,Fijamos_bucle
 270+ 9F73 28 25            jr z,Reinicia_el_movimiento
 271+ 9F75
 272+ 9F75 FE FD            cp $fd
 273+ 9F77 20 11            jr nz,1F
 274+ 9F79
 275+ 9F79              ; ---
 276+ 9F79              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F79
 278+ 9F79 3A F6 89         ld a,(Ctrl_2)
 279+ 9F7C CB 5F            bit 3,a
 280+ 9F7E 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F80
 282+ 9F80              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F80
 284+ 9F80 21 F6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F83 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F85
 287+ 9F85 CD EE 9F         call Inicia_Repetimos_movimiento
 288+ 9F88 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F8A              ; ---
 290+ 9F8A
 291+ 9F8A FE 01        1 cp 1
 292+ 9F8C CA C7 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F8F
 294+ 9F8F 3D               dec a
 295+ 9F90 32 F1 89         ld (Cola_de_desplazamiento),a
 296+ 9F93
 297+ 9F93 3A EF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F96 32 EE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F99              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F99 C9               ret
 301+ 9F9A
 302+ 9F9A              Reinicia_el_movimiento
 303+ 9F9A
 304+ 9F9A 3A F6 89         ld a,(Ctrl_2)
 305+ 9F9D CB 5F            bit 3,a
 306+ 9F9F 28 1B            jr z,2F
 307+ 9FA1
 308+ 9FA1              ; (Cola_de_desplazamiento)="254".
 309+ 9FA1
 310+ 9FA1 21 F0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FA4 35               dec (hl)
 312+ 9FA5 20 15            jr nz,2F
 313+ 9FA7
 314+ 9FA7              ; Fin de las repeticiones del último movimiento.
 315+ 9FA7
 316+ 9FA7 21 F6 89         ld hl,Ctrl_2
 317+ 9FAA CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FAC
 319+ 9FAC 2A E8 89         ld hl,(Puntero_mov)
 320+ 9FAF 23               inc hl
 321+ 9FB0 23               inc hl
 322+ 9FB1 23               inc hl
 323+ 9FB2 22 E8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FB5              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FB5 7E               ld a,(hl)
 326+ 9FB6 32 F1 89         ld (Cola_de_desplazamiento),a
 327+ 9FB9
 328+ 9FB9 C3 61 9F         jp Cola
 329+ 9FBC
 330+ 9FBC
 331+ 9FBC CD F9 9F     2 call Inicia_Puntero_mov
 332+ 9FBF
 333+ 9FBF 21 F6 89         ld hl,Ctrl_2
 334+ 9FC2 CB 96            res 2,(hl)
 335+ 9FC4
 336+ 9FC4 C3 31 9F         jp Movimiento
 337+ 9FC7
 338+ 9FC7              Siguiente_desplazamiento
 339+ 9FC7
 340+ 9FC7              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FC7              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FC7
 343+ 9FC7 21 F6 89         ld hl,Ctrl_2
 344+ 9FCA CB 96            res 2,(hl)
 345+ 9FCC
 346+ 9FCC 2A E8 89         ld hl,(Puntero_mov)
 347+ 9FCF 23               inc hl
 348+ 9FD0 23               inc hl
 349+ 9FD1 22 E8 89         ld (Puntero_mov),hl
 350+ 9FD4
 351+ 9FD4 7E               ld a,(hl)
 352+ 9FD5 A7               and a
 353+ 9FD6 CC 59 A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FD9 CA 9A 9F         jp z,Reinicia_el_movimiento
 355+ 9FDC
 356+ 9FDC C9               ret
 357+ 9FDD              ; Subrutinas -----------------------------------------
 358+ 9FDD              ; ---------- --------- --------- ---------- ----------
 359+ 9FDD              ;
 360+ 9FDD              ;   24/07/23
 361+ 9FDD              ;
 362+ 9FDD              ;   Fijamos_bucle
 363+ 9FDD              ;
 364+ 9FDD              ;
 365+ 9FDD
 366+ 9FDD              Fijamos_bucle
 367+ 9FDD
 368+ 9FDD 3A EC 89         ld a,(Incrementa_puntero)
 369+ 9FE0 3C               inc a
 370+ 9FE1 32 ED 89         ld (Incrementa_puntero_backup),a
 371+ 9FE4
 372+ 9FE4 CD 59 A0         call Incrementa_Puntero_indice_mov
 373+ 9FE7 2A E6 89         ld hl,(Puntero_indice_mov)
 374+ 9FEA 22 EA 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FED C9               ret
 376+ 9FEE
 377+ 9FEE              ; ---------- --------- --------- ---------- ----------
 378+ 9FEE              ;
 379+ 9FEE              ;   07/7/23
 380+ 9FEE              ;
 381+ 9FEE              ;   Inicia_Repetimos_movimiento
 382+ 9FEE              ;
 383+ 9FEE              ;
 384+ 9FEE
 385+ 9FEE              Inicia_Repetimos_movimiento
 386+ 9FEE
 387+ 9FEE              ; Iniciamos (Repetimos_movimiento).
 388+ 9FEE
 389+ 9FEE DD 2A E8 89      ld ix,(Puntero_mov)
 390+ 9FF2 DD 7E 02         ld a,(ix+2)
 391+ 9FF5 32 F0 89         ld (Repetimos_movimiento),a
 392+ 9FF8
 393+ 9FF8 C9               ret
 394+ 9FF9
 395+ 9FF9              ; ---------- --------- --------- ---------- ----------
 396+ 9FF9              ;
 397+ 9FF9              ;   26/6/23
 398+ 9FF9              ;
 399+ 9FF9              ;   Inicia_Puntero_mov
 400+ 9FF9              ;
 401+ 9FF9              ;
 402+ 9FF9
 403+ 9FF9 2A E6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FFC 5E               ld e,(hl)
 405+ 9FFD 23               inc hl
 406+ 9FFE 56               ld d,(hl)
 407+ 9FFF EB               ex de,hl
 408+ A000 22 E8 89         ld (Puntero_mov),hl
 409+ A003 C9               ret
 410+ A004
 411+ A004              ; ---------- --------- --------- ---------- ----------
 412+ A004              ;
 413+ A004              ;   27/06/23
 414+ A004              ;
 415+ A004              ;   Aplica_movimiento.
 416+ A004
 417+ A004              Aplica_desplazamiento
 418+ A004
 419+ A004              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A004
 421+ A004 2A E8 89         ld hl, (Puntero_mov)
 422+ A007
 423+ A007 7E               ld a,(hl)
 424+ A008 E6 F0            and $f0
 425+ A00A C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A00B
 427+ A00B CB 7E            bit 7,(hl)
 428+ A00D 28 03            jr z,1F
 429+ A00F CD 3E 9A         call Mov_up
 430+ A012 2A E8 89     1 ld hl, (Puntero_mov)
 431+ A015 CB 76            bit 6,(hl)
 432+ A017 28 03            jr z,2F
 433+ A019 CD 0D 9A         call Mov_down
 434+ A01C 2A E8 89     2 ld hl, (Puntero_mov)
 435+ A01F CB 6E            bit 5,(hl)
 436+ A021 28 03            jr z,3F
 437+ A023 CD 9F 9B         call Mov_left
 438+ A026 2A E8 89     3 ld hl, (Puntero_mov)
 439+ A029 CB 66            bit 4,(hl)
 440+ A02B C8               ret z
 441+ A02C CD 81 9A         call Mov_right
 442+ A02F C9               ret
 443+ A030
 444+ A030              ; ---------- --------- --------- ---------- ----------
 445+ A030              ;
 446+ A030              ;   26/06/23
 447+ A030              ;
 448+ A030              ;   Ajusta_velocidad_desplazamiento.
 449+ A030
 450+ A030              Ajusta_velocidad_desplazamiento
 451+ A030
 452+ A030              ; 1er byte de la cadena de movimiento.
 453+ A030              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A030
 455+ A030 CD 4E A0         call Extrae_nibble_alto
 456+ A033
 457+ A033 32 CC 89         ld (Vel_up),a
 458+ A036 79               ld a,c
 459+ A037 E6 0F            and $0f
 460+ A039 32 CD 89         ld (Vel_down),a
 461+ A03C
 462+ A03C              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A03C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A03C
 465+ A03C 23               inc hl
 466+ A03D CD 4E A0         call Extrae_nibble_alto
 467+ A040
 468+ A040 32 CA 89         ld (Vel_left),a
 469+ A043 79               ld a,c
 470+ A044 E6 0F            and $0f
 471+ A046 32 CB 89         ld (Vel_right),a
 472+ A049
 473+ A049              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A049
 475+ A049 23               inc hl
 476+ A04A 22 E8 89         ld (Puntero_mov),hl
 477+ A04D C9               ret
 478+ A04E
 479+ A04E 06 04        Extrae_nibble_alto ld b,4
 480+ A050 7E               ld a,(hl)
 481+ A051 4F               ld c,a
 482+ A052 E6 F0            and $f0
 483+ A054 CB 3F        1 srl a
 484+ A056 10 FC            djnz 1B
 485+ A058 C9               ret
 486+ A059
 487+ A059              ; ---------- --------- --------- ---------- ----------
 488+ A059              ;
 489+ A059              ;   5/7/23
 490+ A059              ;
 491+ A059              ;   Incrementa_Puntero_indice_mov
 492+ A059
 493+ A059              Incrementa_Puntero_indice_mov
 494+ A059
 495+ A059 21 EC 89         ld hl,Incrementa_puntero
 496+ A05C 34               inc (hl)
 497+ A05D
 498+ A05D 2A E6 89         ld hl,(Puntero_indice_mov)
 499+ A060 01 02 00         ld bc,2
 500+ A063 A7               and a
 501+ A064 09               add hl,bc
 502+ A065 22 E6 89         ld (Puntero_indice_mov),hl
 503+ A068
 504+ A068 7E               ld a,(hl)
 505+ A069 A7               and a
 506+ A06A
 507+ A06A              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A06A
 509+ A06A              ;    jr z,$
 510+ A06A
 511+ A06A              ;! Reinicia el Patrón de movimiento.
 512+ A06A
 513+ A06A CC 6F A0         call z,Inicializa_Puntero_indice_mov
 514+ A06D
 515+ A06D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A06E
 517+ A06E C9               ret
 518+ A06F
 519+ A06F
 520+ A06F              ; ---------- --------- --------- ---------- ----------
 521+ A06F              ;
 522+ A06F              ;   24/07/23
 523+ A06F              ;
 524+ A06F              ;   Inicializa_Puntero_indice_mov
 525+ A06F
 526+ A06F              Inicializa_Puntero_indice_mov
 527+ A06F
 528+ A06F              ; Existe etiqueta de bucle principal???
 529+ A06F
 530+ A06F 2A EA 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A072 24               inc h
 532+ A073 25               dec h
 533+ A074 28 05            jr z,2F
 534+ A076
 535+ A076 22 E6 89         ld (Puntero_indice_mov),hl
 536+ A079 18 14            jr 3F
 537+ A07B
 538+ A07B              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A07B
 540+ A07B 3A EC 89     2 ld a,(Incrementa_puntero)
 541+ A07E 47               ld b,a
 542+ A07F
 543+ A07F 2A E6 89         ld hl,(Puntero_indice_mov)
 544+ A082 2B           1 dec hl
 545+ A083 2B               dec hl
 546+ A084 10 FC            djnz 1B
 547+ A086 22 E6 89         ld (Puntero_indice_mov),hl
 548+ A089
 549+ A089 AF               xor a
 550+ A08A 32 EC 89         ld (Incrementa_puntero),a
 551+ A08D 18 06            jr 4F
 552+ A08F
 553+ A08F 3A ED 89     3 ld a,(Incrementa_puntero_backup)
 554+ A092 32 EC 89         ld (Incrementa_puntero),a
 555+ A095 C9           4 ret
 556+ A096
 557+ A096
 558+ A096
# file closed: Patrones_de_mov.asm
1450  A096              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A096              ; Relojes y temporizaciones.
   2+ A096
   3+ A096              ; ------------------------------------------------------
   4+ A096              ;
   5+ A096              ;	16/7/23
   6+ A096              ;
   7+ A096              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A096              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A096              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A096              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A096              ;
  12+ A096              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A096              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A096
  15+ A096              ; Disparo_entidad db 1
  16+ A096              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A096              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A096
  19+ A096              Habilita_disparos
  20+ A096
  21+ A096 7E           	ld a,(hl)
  22+ A097 A7           	and a
  23+ A098 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A099
  25+ A099 EB           	ex de,hl
  26+ A09A
  27+ A09A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A09B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A09C
  30+ A09C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A09C
  32+ A09C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A09D 7E           	ld a,(hl)
  34+ A09E 23           	inc hl
  35+ A09F 77           	ld (hl),a
  36+ A0A0
  37+ A0A0 EB           	ex de,hl						; Habilitamos disparo.
  38+ A0A1 3E 01        	ld a,1
  39+ A0A3 77           	ld (hl),a
  40+ A0A4 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1451  A0A5              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0A5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0A5              ;
   3+ A0A5              ;	9/8/23
   4+ A0A5              ;
   5+ A0A5              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0A5
   7+ A0A5              ;	ADC HL,SP	LD (addr),SP
   8+ A0A5              ;	ADD HL,SP	LD SP,(addr)
   9+ A0A5              ;	ADD IX,SP	LD SP,nn
  10+ A0A5              ; 	ADD IY,SP	LD SP,HL
  11+ A0A5              ;				LD SP,IX
  12+ A0A5              ;	DEC SP		LD SP,IY
  13+ A0A5
  14+ A0A5              ;	EX (SP),HL
  15+ A0A5              ;	EX (SP),IX
  16+ A0A5              ;	EX (SP),IY
  17+ A0A5
  18+ A0A5              ;	INC SP
  19+ A0A5
  20+ A0A5                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;	ld a,(Contador_de_frames)
  32+ 7FA0              ;	cp $e7
  33+ 7FA0              ;	jr z,$
  34+ 7FA0
  35+ 7FA0
  36+ 7FA0 ED 73 09 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  38+ 7FA7
  39+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  40+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  41+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  42+ 7FAC
  43+ 7FAC 3A F8 89         ld a,(Ctrl_1)
  44+ 7FAF CB 47            bit 0,a
  45+ 7FB1 28 05            jr z,2F
  46+ 7FB3
  47+ 7FB3 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
  48+ 7FB6 18 03            jr 4F
  49+ 7FB8
  50+ 7FB8 2A 0D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  51+ 7FBB
  52+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  53+ 7FBD
  54+ 7FBD D1           1 pop de
  55+ 7FBE 73               ld (hl),e
  56+ 7FBF 23               inc hl
  57+ 7FC0 72               ld (hl),d
  58+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  59+ 7FC2 10 F9            djnz 1B
  60+ 7FC4
  61+ 7FC4 CB 47            bit 0,a
  62+ 7FC6 28 05            jr z,5F
  63+ 7FC8
  64+ 7FC8 22 0F 8A         ld (Stack_snapshot_disparos),hl
  65+ 7FCB 18 03            jr 6F
  66+ 7FCD
  67+ 7FCD 22 0D 8A     5 ld (Stack_snapshot),hl
  68+ 7FD0 ED 7B 09 8A  6 ld sp,(Stack)
  69+ 7FD4
  70+ 7FD4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  71+ 7FD4
  72+ 7FD4 5D               ld e,l
  73+ 7FD5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  74+ 7FD6
  75+ 7FD6 2A 29 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  76+ 7FD9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  77+ 7FDA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  78+ 7FDB 72               ld (hl),d                                     ; _ álbum a otro.
  79+ 7FDC
  80+ 7FDC C9               ret
  81+ 7FDD
  82+ 7FDD              ; ------------------------------------------------
  83+ 7FDD              ;
  84+ 7FDD              ;   3/08/23
  85+ 7FDD              ;
  86+ 7FDD              ;   La rutina estará situada justo después de:
  87+ 7FDD              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  88+ 7FDD              ;
  89+ 7FDD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  90+ 7FDD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  91+ 7FDD
  92+ 7FDD                  org $7419
  93+ 7419
  94+ 7419              Gestiona_albumes_de_fotos
  95+ 7419
  96+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  97+ 7419              ;   Vaciamos Album_de_fotos.
  98+ 7419
  99+ 7419              ;   Album_de_fotos. Contiene datos ???
 100+ 7419
 101+ 7419 21 01 70         ld hl,Album_de_fotos+1
 102+ 741C 7E               ld a,(hl)
 103+ 741D A7               and a
 104+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 105+ 7420
 106+ 7420 2A 11 8A         ld hl,(End_Snapshot)
 107+ 7423 01 00 70         ld bc,Album_de_fotos
 108+ 7426 11 01 70         ld de,Album_de_fotos+1
 109+ 7429 AF               xor a
 110+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 111+ 742B
 112+ 742B CD BB 74         call Limpia_album
 113+ 742E
 114+ 742E 21 00 00         ld hl,0
 115+ 7431 22 11 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 116+ 7434
 117+ 7434              ; ----- ----- ----- -----
 118+ 7434
 119+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 120+ 7434
 121+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 122+ 7437 7E               ld a,(hl)
 123+ 7438 A7               and a
 124+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 125+ 743B              ;                               ; _ información del album2 al album1.
 126+ 743B
 127+ 743B              ; ----- ----- ----- -----
 128+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 129+ 743B
 130+ 743B 2A 15 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 131+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 132+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 133+ 7444
 134+ 7444 CD BB 74         call Limpia_album
 135+ 7447
 136+ 7447              ;   Calculamos (End_Snapshot)
 137+ 7447
 138+ 7447 A7               and a
 139+ 7448 ED 4A            adc hl,bc
 140+ 744A 22 11 8A         ld (End_Snapshot),hl
 141+ 744D
 142+ 744D              ;   Limpiamos Album_de_fotos_1.
 143+ 744D
 144+ 744D 2A 15 8A         ld hl,(End_Snapshot_1)
 145+ 7450 01 84 70         ld bc,Album_de_fotos_1
 146+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 147+ 7456 AF               xor a
 148+ 7457 02               ld (bc),a
 149+ 7458
 150+ 7458 CD BB 74         call Limpia_album
 151+ 745B
 152+ 745B 21 00 00         ld hl,0
 153+ 745E 22 15 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 154+ 7461
 155+ 7461              ; ----- ----- ----- -----
 156+ 7461
 157+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 158+ 7461
 159+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 160+ 7464 7E               ld a,(hl)
 161+ 7465 A7               and a
 162+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 163+ 7468              ;                               ; _ información del album3 al album2.
 164+ 7468              ; ----- ----- ----- -----
 165+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 166+ 7468
 167+ 7468 2A 19 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 168+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 169+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 170+ 7471
 171+ 7471 CD BB 74         call Limpia_album
 172+ 7474
 173+ 7474              ;   Calculamos (End_Snapshot_1):
 174+ 7474
 175+ 7474 A7               and a
 176+ 7475 ED 4A            adc hl,bc
 177+ 7477 22 15 8A         ld (End_Snapshot_1),hl
 178+ 747A
 179+ 747A              ;   Limpiamos Album_de_fotos_2.
 180+ 747A
 181+ 747A 2A 19 8A         ld hl,(End_Snapshot_2)
 182+ 747D 01 07 71         ld bc,Album_de_fotos_2
 183+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 184+ 7483 AF               xor a
 185+ 7484 02               ld (bc),a
 186+ 7485
 187+ 7485 CD BB 74         call Limpia_album
 188+ 7488
 189+ 7488 21 00 00         ld hl,0
 190+ 748B 22 19 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 191+ 748E
 192+ 748E              ; ----- ----- ----- -----
 193+ 748E
 194+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 195+ 748E
 196+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 197+ 7491 7E               ld a,(hl)
 198+ 7492 A7               and a
 199+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 200+ 7494
 201+ 7494              ; ----- ----- ----- -----
 202+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 203+ 7494
 204+ 7494 2A 1D 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 205+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 206+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 207+ 749D
 208+ 749D CD BB 74         call Limpia_album
 209+ 74A0
 210+ 74A0              ;   Calculamos (End_Snapshot_2):
 211+ 74A0
 212+ 74A0 A7               and a
 213+ 74A1 ED 4A            adc hl,bc
 214+ 74A3 22 19 8A         ld (End_Snapshot_2),hl
 215+ 74A6
 216+ 74A6              ;   Limpiamos Album_de_fotos_3.
 217+ 74A6
 218+ 74A6 2A 1D 8A         ld hl,(End_Snapshot_3)
 219+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 220+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 221+ 74AF AF               xor a
 222+ 74B0 02               ld (bc),a
 223+ 74B1
 224+ 74B1 CD BB 74         call Limpia_album
 225+ 74B4
 226+ 74B4 21 00 00         ld hl,0
 227+ 74B7 22 1D 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 228+ 74BA C9               ret
 229+ 74BB
 230+ 74BB              ; ----------------------------------------------------
 231+ 74BB              ;
 232+ 74BB              ;   10/8/23
 233+ 74BB              ;
 234+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 235+ 74BB              ;
 236+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 237+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 238+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 239+ 74BB
 240+ 74BB              ;    ld hl,(End_Snapshot)
 241+ 74BB              ;    ld bc,Album_de_fotos
 242+ 74BB              ;    ld de,Album_de_fotos+1
 243+ 74BB
 244+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 245+ 74BB
 246+ 74BB              Limpia_album
 247+ 74BB D5               push de            ; Guardo DESTINO.
 248+ 74BC C5               push bc            ; Guardo ORIGEN.
 249+ 74BD ED 42            sbc hl,bc
 250+ 74BF 4D               ld c,l
 251+ 74C0 44               ld b,h
 252+ 74C1 E1               pop hl
 253+ 74C2 C5               push bc
 254+ 74C3 ED B0            ldir
 255+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 256+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 257+ 74C7 C9               ret                         ; _ a otro).
 258+ 74C8              ;
 259+ 74C8
 260+ 74C8              ; -----------------------------------------------
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
 265+ 74C8
# file closed: Guarda_foto_registros.asm
1452  74C8
1453  74C8              	SAVESNA "Pruebas.sna", START
1454  74C8
1455  74C8
1456  74C8
1457  74C8
# file closed: Banco_de_pruebas.asm
