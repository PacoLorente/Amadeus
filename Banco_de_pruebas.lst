# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E8 8A     	call Frame
  15  A104
  16  A104 3A 0A 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 0C 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  27  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 856C
  97+ 856C C7 85        	defw Caja_1
  98+ 856E 0A 86        	defw Caja_2
  99+ 8570 4D 86        	defw Caja_3
 100+ 8572 90 86        	defw Caja_4
 101+ 8574 D3 86        	defw Caja_5
 102+ 8576 16 87        	defw Caja_6
 103+ 8578 59 87        	defw Caja_7
 104+ 857A 9C 87        	defw Caja_8
 105+ 857C DF 87        	defw Caja_9
 106+ 857E 22 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85BE
 149+ 85BE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85C0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85C1
 152+ 85C1 00           	db 0 											; (Columnas).
 153+ 85C2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85C4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85C7
 156+ 85C7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85C7
 158+ 85C7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85C9 00 00        	defw 0											; (Posicion_actual).
 160+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85D0
 163+ 85D0 00           	db %00000000 									; (Attr).
 164+ 85D1
 165+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85D9
 170+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85DB 00           	db 0											; (Cuad_objeto).
 172+ 85DC
 173+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85E0
 175+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85E1
 177+ 85E1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85E3 00 00        	defw 0											;	" " " " " " "
 179+ 85E5 00 00        	defw 0											;	" " " " " " "
 180+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85ED 00 00        	defw 0											;	" " " " " " "
 184+ 85EF 00 00        	defw 0											;	" " " " " " "
 185+ 85F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85F5
 187+ 85F5 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 85F7
 189+ 85F7 00           	db 0											; (Autoriza_movimiento).
 190+ 85F8 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 85FC 00 00
 191+ 85FE 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8601
 193+ 8601 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8603 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8604
 196+ 8604 00           	db 0 											; (Columnas).
 197+ 8605 00 00        	defw 0											; (Limite_horizontal).
 198+ 8607 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 860A
 200+ 860A              ; ---------- ---------- ---------- ---------- ----------
 201+ 860A
 202+ 860A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 860C 00 00        	defw 0											; (Posicion_actual).
 204+ 860E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8610 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8613
 207+ 8613 00           	db %00000000 									; (Attr).
 208+ 8614
 209+ 8614 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8616 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 861C
 214+ 861C 00 00        	defw 0											; (Posicion_inicio).
 215+ 861E 00           	db 0											; (Cuad_objeto).
 216+ 861F
 217+ 861F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8623
 219+ 8623 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8624
 221+ 8624 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8626 00 00        	defw 0											;	" " " " " " "
 223+ 8628 00 00        	defw 0											;	" " " " " " "
 224+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 862E
 226+ 862E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8630 00 00        	defw 0											;	" " " " " " "
 228+ 8632 00 00        	defw 0											;	" " " " " " "
 229+ 8634 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 863A
 233+ 863A 00           	db 0											; (Autoriza_movimiento).
 234+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 863F 00 00
 235+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8644
 237+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8647
 240+ 8647 00           	db 0 											; (Columnas).
 241+ 8648 00 00        	defw 0											; (Limite_horizontal).
 242+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 864D
 244+ 864D              ; ---------- ---------- ---------- ---------- ----------
 245+ 864D
 246+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 864F 00 00        	defw 0											; (Posicion_actual).
 248+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8656
 251+ 8656 00           	db %00000000 									; (Attr).
 252+ 8657
 253+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 865F
 258+ 865F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8661 00           	db 0											; (Cuad_objeto).
 260+ 8662
 261+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8666
 263+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8667
 265+ 8667 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8669 00 00        	defw 0											;	" " " " " " "
 267+ 866B 00 00        	defw 0											;	" " " " " " "
 268+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8671
 270+ 8671 00 00        	db 0,0											; Variables_de_pintado
 271+ 8673 00 00        	defw 0											;	" " " " " " "
 272+ 8675 00 00        	defw 0											;	" " " " " " "
 273+ 8677 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 867B
 275+ 867B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 867D
 277+ 867D 00           	db 0											; (Autoriza_movimiento).
 278+ 867E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8682 00 00
 279+ 8684 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8687
 281+ 8687 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 283+ 868A
 284+ 868A 00           	db 0 											; (Columnas).
 285+ 868B 00 00        	defw 0											; (Limite_horizontal).
 286+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 8690
 288+ 8690              ; ---------- ---------- ---------- ---------- ----------
 289+ 8690
 290+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 8692 00 00        	defw 0											; (Posicion_actual).
 292+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 293+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 8699
 295+ 8699 00           	db %00000000 									; (Attr).
 296+ 869A
 297+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86A2
 302+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86A4 00           	db 0											; (Cuad_objeto).
 304+ 86A5
 305+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86A9
 307+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86AA
 309+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86AC 00 00        	defw 0											;	" " " " " " "
 311+ 86AE 00 00        	defw 0											;	" " " " " " "
 312+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86B4
 314+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86B6 00 00        	defw 0											;	" " " " " " "
 316+ 86B8 00 00        	defw 0											;	" " " " " " "
 317+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86BE
 319+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86C0
 321+ 86C0 00           	db 0											; (Autoriza_movimiento).
 322+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86C5 00 00
 323+ 86C7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86CA
 325+ 86CA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86CC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86CD
 328+ 86CD 00           	db 0 											; (Columnas).
 329+ 86CE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86D0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86D3
 332+ 86D3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86D3
 334+ 86D3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86D5 00 00        	defw 0											; (Posicion_actual).
 336+ 86D7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86D9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86DC
 339+ 86DC 00           	db %00000000 									; (Attr).
 340+ 86DD
 341+ 86DD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86DF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86E3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86E5
 346+ 86E5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86E7 00           	db 0											; (Cuad_objeto).
 348+ 86E8
 349+ 86E8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86EC
 351+ 86EC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86ED
 353+ 86ED 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86EF 00 00        	defw 0											;	" " " " " " "
 355+ 86F1 00 00        	defw 0											;	" " " " " " "
 356+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86F7
 358+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 359+ 86F9 00 00        	defw 0											;	" " " " " " "
 360+ 86FB 00 00        	defw 0											;	" " " " " " "
 361+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8701
 363+ 8701 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8703
 365+ 8703 00           	db 0											; (Autoriza_movimiento).
 366+ 8704 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8708 00 00
 367+ 870A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 870D
 369+ 870D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 870F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8710
 372+ 8710 00           	db 0 											; (Columnas).
 373+ 8711 00 00        	defw 0											; (Limite_horizontal).
 374+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8716
 376+ 8716              ; ---------- ---------- ---------- ---------- ----------
 377+ 8716
 378+ 8716 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8718 00 00        	defw 0											; (Posicion_actual).
 380+ 871A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 871C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 871F
 383+ 871F 00           	db %00000000 									; (Attr).
 384+ 8720
 385+ 8720 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8722 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8724 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8728
 390+ 8728 00 00        	defw 0											; (Posicion_inicio).
 391+ 872A 00           	db 0											; (Cuad_objeto).
 392+ 872B
 393+ 872B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 872F
 395+ 872F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8730
 397+ 8730 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8732 00 00        	defw 0											;	" " " " " " "
 399+ 8734 00 00        	defw 0											;	" " " " " " "
 400+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 873A
 402+ 873A 00 00        	db 0,0											; Variables_de_pintado
 403+ 873C 00 00        	defw 0											;	" " " " " " "
 404+ 873E 00 00        	defw 0											;	" " " " " " "
 405+ 8740 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8744
 407+ 8744 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8746
 409+ 8746 00           	db 0											; (Autoriza_movimiento).
 410+ 8747 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 874B 00 00
 411+ 874D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8750
 413+ 8750 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8752 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8753
 416+ 8753 00           	db 0 											; (Columnas).
 417+ 8754 00 00        	defw 0											; (Limite_horizontal).
 418+ 8756 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8759
 420+ 8759              ; ---------- ---------- ---------- ---------- ----------
 421+ 8759
 422+ 8759 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 875B 00 00        	defw 0											; (Posicion_actual).
 424+ 875D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 875F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8762
 427+ 8762 00           	db %00000000 									; (Attr).
 428+ 8763
 429+ 8763 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8765 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8769 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 876B
 434+ 876B 00 00        	defw 0											; (Posicion_inicio).
 435+ 876D 00           	db 0											; (Cuad_objeto).
 436+ 876E
 437+ 876E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8772
 439+ 8772 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8773
 441+ 8773 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8775 00 00        	defw 0											;	" " " " " " "
 443+ 8777 00 00        	defw 0											;	" " " " " " "
 444+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 877D
 446+ 877D 00 00        	db 0,0											; Variables_de_pintado
 447+ 877F 00 00        	defw 0											;	" " " " " " "
 448+ 8781 00 00        	defw 0											;	" " " " " " "
 449+ 8783 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8787
 451+ 8787 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8789
 453+ 8789 00           	db 0											; (Autoriza_movimiento).
 454+ 878A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 878E 00 00
 455+ 8790 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 8793
 457+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 459+ 8796
 460+ 8796 00           	db 0 											; (Columnas).
 461+ 8797 00 00        	defw 0											; (Limite_horizontal).
 462+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 879C
 464+ 879C              ; ---------- ---------- ---------- ---------- ----------
 465+ 879C
 466+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 879E 00 00        	defw 0											; (Posicion_actual).
 468+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87A5
 471+ 87A5 00           	db %00000000 									; (Attr).
 472+ 87A6
 473+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87AE
 478+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87B0 00           	db 0											; (Cuad_objeto).
 480+ 87B1
 481+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87B5
 483+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87B6
 485+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87B8 00 00        	defw 0											;	" " " " " " "
 487+ 87BA 00 00        	defw 0											;	" " " " " " "
 488+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87C0
 490+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87C2 00 00        	defw 0											;	" " " " " " "
 492+ 87C4 00 00        	defw 0											;	" " " " " " "
 493+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87CA
 495+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87CC
 497+ 87CC 00           	db 0											; (Autoriza_movimiento).
 498+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87D1 00 00
 499+ 87D3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87D6
 501+ 87D6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87D8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87D9
 504+ 87D9 00           	db 0 											; (Columnas).
 505+ 87DA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87DC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87DF
 508+ 87DF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87DF
 510+ 87DF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87E1 00 00        	defw 0											; (Posicion_actual).
 512+ 87E3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87E8
 515+ 87E8 00           	db %00000000 									; (Attr).
 516+ 87E9
 517+ 87E9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87EB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 87F1
 522+ 87F1 00 00        	defw 0											; (Posicion_inicio).
 523+ 87F3 00           	db 0											; (Cuad_objeto).
 524+ 87F4
 525+ 87F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 87F8
 527+ 87F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 87F9
 529+ 87F9 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 87FB 00 00        	defw 0											;	" " " " " " "
 531+ 87FD 00 00        	defw 0											;	" " " " " " "
 532+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8803
 534+ 8803 00 00        	db 0,0											; Variables_de_pintado
 535+ 8805 00 00        	defw 0											;	" " " " " " "
 536+ 8807 00 00        	defw 0											;	" " " " " " "
 537+ 8809 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 880D
 539+ 880D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 880F
 541+ 880F 00           	db 0											; (Autoriza_movimiento).
 542+ 8810 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8814 00 00
 543+ 8816 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8819
 545+ 8819 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 881B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 881C
 548+ 881C 00           	db 0 											; (Columnas).
 549+ 881D 00 00        	defw 0											; (Limite_horizontal).
 550+ 881F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8822
 552+ 8822              ; ---------- ---------- ---------- ---------- ----------
 553+ 8822
 554+ 8822 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8824 00 00        	defw 0											; (Posicion_actual).
 556+ 8826 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8828 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 882B
 559+ 882B 00           	db %00000000 									; (Attr).
 560+ 882C
 561+ 882C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 882E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8832 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8834
 566+ 8834 00 00        	defw 0											; (Posicion_inicio).
 567+ 8836 00           	db 0											; (Cuad_objeto).
 568+ 8837
 569+ 8837 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 883B
 571+ 883B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 883C
 573+ 883C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 883E 00 00        	defw 0											;	" " " " " " "
 575+ 8840 00 00        	defw 0											;	" " " " " " "
 576+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8846
 578+ 8846 00 00        	db 0,0											; Variables_de_pintado
 579+ 8848 00 00        	defw 0											;	" " " " " " "
 580+ 884A 00 00        	defw 0											;	" " " " " " "
 581+ 884C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8850
 583+ 8850 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8852
 585+ 8852 00           	db 0											; (Autoriza_movimiento).
 586+ 8853 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8857 00 00
 587+ 8859 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 885C
 589+ 885C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 885E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 885F
 592+ 885F 00           	db 0 											; (Columnas).
 593+ 8860 00 00        	defw 0											; (Limite_horizontal).
 594+ 8862 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8865
 596+ 8865              ; -------------------------------------------------------------------------------------
 597+ 8865              ;
 598+ 8865              ;	20/05/23
 599+ 8865              ;
 600+ 8865              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8865              ;
 602+ 8865              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8865              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8865              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8865              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8865
 607+ 8865              Indice_de_entidades
 608+ 8865
 609+ 8865 6F 88        	defw Entidad_1
 610+ 8867 7F 88        	defw Entidad_2
 611+ 8869 8F 88        	defw Entidad_3
 612+ 886B 9F 88        	defw Entidad_4
 613+ 886D AF 88        	defw Entidad_5
 614+ 886F
 615+ 886F              ;	BADSAT, (Satélite malvado).
 616+ 886F
 617+ 886F 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 618+ 8871 04           	db %00000100									; (Attr).
 619+ 8872 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 620+ 8874 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 621+ 8876 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 622+ 8878 01           	db 1											; (Cuad_objeto).
 623+ 8879 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 624+ 887D D3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 625+ 887F
 626+ 887F 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 627+ 8881 02           	db %00000010									; (Attr).
 628+ 8882 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 629+ 8884 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 630+ 8886 40 50        	defw $5040                                      ; (Posicion_inicio).
 631+ 8888 01           	db 1											; (Cuad_objeto).
 632+ 8889 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 633+ 888D D3 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 634+ 888F
 635+ 888F 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 636+ 8891 04           	db %00000100									; (Attr).
 637+ 8892 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 638+ 8894 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 639+ 8896 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 640+ 8898 01           	db 1											; (Cuad_objeto).
 641+ 8899 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 642+ 889D D3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 643+ 889F
 644+ 889F 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 645+ 88A1 01           	db %00000001									; (Attr).
 646+ 88A2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 647+ 88A4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 648+ 88A6 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 649+ 88A8 01           	db 1											; (Cuad_objeto).
 650+ 88A9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 651+ 88AD D3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 652+ 88AF
 653+ 88AF 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 654+ 88B1 01           	db %00000001									; (Attr).
 655+ 88B2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 656+ 88B4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 657+ 88B6 07 40        	defw $4007                                      ; (Posicion_inicio).
 658+ 88B8 01           	db 1											; (Cuad_objeto).
 659+ 88B9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 660+ 88BD D3 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 661+ 88BF
# file closed: Cajas_y_disparos.asm
  28  88BF              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BF              ; 13/05/23
   2+ 88BF
   3+ 88BF              Indice_de_niveles
   4+ 88BF
   5+ 88BF CD 88        	defw Nivel_1
   6+ 88C1 CF 88        	defw Nivel_2
   7+ 88C3 DC 88        	defw Nivel_3
   8+ 88C5 EC 88        	defw Nivel_4
   9+ 88C7 FE 88        	defw Nivel_5
  10+ 88C9
  11+ 88C9              ;	...
  12+ 88C9              ;	...
  13+ 88C9              ;	+ Niveles ...
  14+ 88C9
  15+ 88C9 00 00        	defw 0
  16+ 88CB 00 00        	defw 0
  17+ 88CD
  18+ 88CD 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CE 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CF 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D4 01 02
  22+ 88D6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88DA 01 02
  23+ 88DC 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88E1 01
  25+ 88E2 03 01 01 01  	db 3,1,1,1,1
  25+ 88E6 01
  26+ 88E7 03 01 01 01  	db 3,1,1,1,1
  26+ 88EB 01
  27+ 88EC 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88F1 01
  29+ 88F2 04 01 01 01  	db 4,1,1,1,1
  29+ 88F6 01
  30+ 88F7 04 01 01 01  	db 4,1,1,1,1
  30+ 88FB 01
  31+ 88FC 02 03        	db 2,3
  32+ 88FE 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8903 01
  34+ 8904 05 01 01 01  	db 5,1,1,1,1
  34+ 8908 01
  35+ 8909 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890D 01
  36+ 890E 05 01 01 01  	db 5,1,1,1,1
  36+ 8912 01
  37+ 8913
  38+ 8913              ;---------------------------------------------------------------------------------------------------------------
  39+ 8913              ;
  40+ 8913              ;   21/5/23
  41+ 8913              ;
  42+ 8913              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8913              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8913              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8913              ;	_en la caja DRAW correspondiente.
  46+ 8913              ;
  47+ 8913              ;	MODIFICA: HL,DE y A.
  48+ 8913              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8913
  50+ 8913              Inicializa_Punteros_de_nivel
  51+ 8913
  52+ 8913 21 BF 88     	ld hl,Indice_de_niveles
  53+ 8916 22 43 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8919 CD 35 8D     	call Extrae_address
  55+ 891C 7E           	ld a,(hl)
  56+ 891D 32 15 8A     	ld (Numero_de_entidades),a
  57+ 8920 23           	inc hl
  58+ 8921 22 45 8A     	ld (Datos_de_nivel),hl
  59+ 8924 C9           	ret
  60+ 8925
  61+ 8925              ;---------------------------------------------------------------------------------------------------------------
  62+ 8925              ;
  63+ 8925              ;   13/5/23
  64+ 8925              ;
  65+ 8925              ;	Destruye A,BC,HL,DE
  66+ 8925
  67+ 8925              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8925              ;	_del juego.
  69+ 8925
  70+ 8925              Prepara_cajas
  71+ 8925
  72+ 8925              ; Preparamos los punteros de las cajas.
  73+ 8925
  74+ 8925 21 6C 85     	ld hl,Indice_de_cajas
  75+ 8928 CD 35 8D     	call Extrae_address
  76+ 892B CD 68 89     	call Avanza_caja
  77+ 892E
  78+ 892E CD AC 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8931
  80+ 8931 2A 45 8A     	ld hl,(Datos_de_nivel)
  81+ 8934
  82+ 8934              ; HL está en los datos del nivel correspondiente.
  83+ 8934              ; B actuará como contador de cajas.
  84+ 8934
  85+ 8934 C5           1 push bc
  86+ 8935
  87+ 8935 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8936 CD 59 89     	call PreparaBC
  89+ 8939
  90+ 8939 21 65 88     	ld hl,Indice_de_entidades
  91+ 893C CD 61 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893F 22 1B 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8942
  94+ 8942 CD 72 89     	call Datos_de_entidad_a_caja
  95+ 8945
  96+ 8945 2A 13 8A     	ld hl,(Indice_restore_caja)
  97+ 8948 CD 35 8D     	call Extrae_address
  98+ 894B CD 68 89     	call Avanza_caja
  99+ 894E
 100+ 894E 2A 45 8A     	ld hl,(Datos_de_nivel)
 101+ 8951 23           	inc hl
 102+ 8952 22 45 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8955
 104+ 8955 C1           	pop bc
 105+ 8956 10 DC        	djnz 1B
 106+ 8958 C9           	ret
 107+ 8959
 108+ 8959 CB 27        PreparaBC sla a
 109+ 895B D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895D 4F           	ld c,a
 111+ 895E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8960 C9           	ret
 113+ 8961
 114+ 8961 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8962 ED 4A        	adc hl,bc
 116+ 8964 CD 35 8D     	call Extrae_address
 117+ 8967 C9           	ret
 118+ 8968
 119+ 8968 22 0F 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 896B 13           	inc de
 121+ 896C 13           	inc de
 122+ 896D EB           	ex de,hl
 123+ 896E 22 13 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8971 C9           	ret
 125+ 8972
 126+ 8972              Datos_de_entidad_a_caja
 127+ 8972
 128+ 8972              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8972
 130+ 8972
 131+ 8972 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8976
 133+ 8976 01 02 00     	ld bc,2
 134+ 8979 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 897B
 136+ 897B 01 07 00     	ld bc,7
 137+ 897E CD A6 89     	call Situa_DE
 138+ 8981
 139+ 8981 01 05 00     	ld bc,5
 140+ 8984 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8986
 142+ 8986 01 04 00     	ld bc,4
 143+ 8989 CD A6 89     	call Situa_DE
 144+ 898C
 145+ 898C 01 07 00     	ld bc,7
 146+ 898F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8991
 148+ 8991 01 18 00     	ld bc,24
 149+ 8994 CD A6 89     	call Situa_DE
 150+ 8997
 151+ 8997 01 02 00     	ld bc,2
 152+ 899A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 899C
 154+ 899C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 899C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 899C
 157+ 899C 01 0F 00     	ld bc,15									; *****
 158+ 899F CD A6 89     	call Situa_DE
 159+ 89A2
 160+ 89A2 3E 03        	ld a,3
 161+ 89A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A5
 163+ 89A5 C9           	ret
 164+ 89A6
 165+ 89A6 EB           Situa_DE ex de,hl
 166+ 89A7 A7           	and a
 167+ 89A8 ED 4A        	adc hl,bc
 168+ 89AA EB           	ex de,hl
 169+ 89AB C9           	ret
 170+ 89AC
 171+ 89AC              ;---------------------------------------------------------------------------------------------------------------
 172+ 89AC              ;
 173+ 89AC              ;	21/5/23
 174+ 89AC              ;
 175+ 89AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89AC              ;
 178+ 89AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89AC              ;
 182+ 89AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89AC              ;	MODIFICA: A y B.
 184+ 89AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89AC
 186+ 89AC              Admin_num_entidades
 187+ 89AC
 188+ 89AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89AC
 190+ 89AC 3A 15 8A     	ld a,(Numero_de_entidades)
 191+ 89AF A7           	and a
 192+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89B0              ;	jr z,$
 194+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89B0
 196+ 89B0 20 03        	jr nz,3F
 197+ 89B2
 198+ 89B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89B2
 200+ 89B2 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B5
 202+ 89B5
 203+ 89B5 3A 15 8A     3 ld a,(Numero_de_entidades)
 204+ 89B8 FE 0A        	cp 10
 205+ 89BA 38 08        	jr c,1F
 206+ 89BC
 207+ 89BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89BC              ; Actualizamos variables.
 209+ 89BC
 210+ 89BC 3E 0A        	ld a,10
 211+ 89BE 32 16 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89C1 47           	ld b,a
 213+ 89C2 18 04        	jr 2F
 214+ 89C4
 215+ 89C4              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C4              ; (Numero_de_entidades)="0".
 217+ 89C4
 218+ 89C4 32 16 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C7 47           	ld b,a
 220+ 89C8 C9           2 ret
# file closed: Niveles.asm
  29  89C9
  30  89C9              ; ******************************************************************************************************************************************************************************************
  31  89C9              ; Constantes.
  32  89C9              ; ******************************************************************************************************************************************************************************************
  33  89C9              ;
  34  89C9              ; 25/05/23
  35  89C9              ;
  36  89C9              ; Constantes generales.
  37  89C9              ;
  38  89C9
  39  89C9              Sprite_vacio equ $f000
  40  89C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C9
  45  89C9              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C9              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C9              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C9
  52  89C9              ; ******************************************************************************************************************************************************************************************
  53  89C9              ; Variables.
  54  89C9              ; ******************************************************************************************************************************************************************************************
  55  89C9              ;
  56  89C9              ; 01/07/23
  57  89C9              ;
  58  89C9              ; Variables de DRAW. (Motor principal).
  59  89C9              ;
  60  89C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  61  89C9
  62  89C9 00           Filas db 0												; Filas. [DRAW]
  63  89CA 00           Columns db 0  											; Nº de columnas. [DRAW]
  64  89CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  65  89CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  66  89CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  67  89D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  68  89D1
  69  89D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  70  89D1
  71  89D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  72  89D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  73  89D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  74  89D2 00           Attr db 0												; Atributos de la entidad:
  75  89D3
  76  89D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  77  89D3              ;
  78  89D3              ;	COLORES: 0 ..... NEGRO
  79  89D3              ;    		 1 ..... AZUL
  80  89D3              ; 			 2 ..... ROJO
  81  89D3              ;			 3 ..... MAGENTA
  82  89D3              ; 			 4 ..... VERDE
  83  89D3              ; 			 5 ..... CIAN
  84  89D3              ;			 6 ..... AMARILLO
  85  89D3              ; 			 7 ..... BLANCO
  86  89D3
  87  89D3 00 00        Indice_Sprite_der defw 0
  88  89D5 00 00        Indice_Sprite_izq defw 0
  89  89D7 00 00        Puntero_DESPLZ_der defw 0
  90  89D9 00 00        Puntero_DESPLZ_izq defw 0
  91  89DB
  92  89DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  93  89DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  94  89DE
  95  89DE              ; Variables de objeto. (Características).
  96  89DE
  97  89DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  98  89DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  99  89E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 100  89E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 101  89E2
 102  89E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 103  89E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 104  89E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 105  89E3
 106  89E3 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  89E5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  89E7 00 00        	defw 0
 109  89E9 00 00 00 00  	db 0,0,0,0
 110  89ED
 111  89ED 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89EF 00 00        	defw 0
 113  89F1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89F3 00 00 00 00  	db 0,0,0,0
 115  89F7
 116  89F7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 117  89F7
 118  89F7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 119  89F8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 120  89F8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 121  89F8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 122  89F8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 123  89F8              ;
 124  89F8              ; 														DESCRIPCIÖN:
 125  89F8              ;
 126  89F8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 127  89F8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 128  89F8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 129  89F8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 130  89F8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 131  89F8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 132  89F8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 133  89F8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 134  89F8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 135  89F8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 136  89F8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 137  89F8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 138  89F8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 139  89F8              ;
 140  89F8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 141  89F8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 142  89F8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 143  89F8
 144  89F8 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 145  89F9
 146  89F9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 147  89F9
 148  89F9 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 149  89FA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 150  89FC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 151  89FE 00 00        Puntero_indice_mov_bucle defw 0							;
 152  8A00              ;
 153  8A00              ;
 154  8A00 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 155  8A01              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 156  8A01              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 157  8A01 00           Incrementa_puntero_backup db 0
 158  8A02 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 159  8A03              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 160  8A03 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 161  8A04 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 162  8A05 00           Cola_de_desplazamiento db 0								; Este byte indica:
 163  8A06              ;
 164  8A06              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 165  8A06              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 166  8A06              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 167  8A06              ;
 168  8A06              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 169  8A06              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 170  8A06              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 171  8A06              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 172  8A06              ;
 173  8A06              ;														;	"$ff" ..... Bucle infinito de repetición.
 174  8A06              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 175  8A06              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 176  8A06
 177  8A06
 178  8A06              ; Variables de funcionamiento. [DRAW].
 179  8A06
 180  8A06 00           Columnas db 0
 181  8A07 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 182  8A09              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 183  8A09 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  8A0A
 185  8A0A              ; variables de control general.
 186  8A0A
 187  8A0A 00           Ctrl_2 db 0
 188  8A0B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 189  8A0B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 190  8A0B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 191  8A0B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 192  8A0B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 193  8A0B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 194  8A0B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 195  8A0B              ;
 196  8A0B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 197  8A0B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 198  8A0B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 199  8A0B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 200  8A0B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 201  8A0B
 202  8A0B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 203  8A0C
 204  8A0C              ;! 67 Bytes por entidad.
 205  8A0C
 206  8A0C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 207  8A0C              ;					         		---------;      ;---------
 208  8A0C
 209  8A0C
 210  8A0C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 211  8A0C
 212  8A0C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 213  8A0D
 214  8A0D              ;														DESCRIPCIÓN:
 215  8A0D              ;
 216  8A0D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 217  8A0D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 218  8A0D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 219  8A0D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 220  8A0D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 221  8A0D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 222  8A0D              ;														BIT 3, Recarga de nueva oleada.
 223  8A0D              ;														BIT 4, Recarga de nueva oleada.
 224  8A0D
 225  8A0D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 226  8A0F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 227  8A0F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 228  8A0F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 229  8A0F
 230  8A0F
 231  8A0F
 232  8A0F              ; Gestión de ENTIDADES y CAJAS.
 233  8A0F
 234  8A0F 00 00        Puntero_store_caja defw 0
 235  8A11 00 00        Puntero_restore_caja defw 0
 236  8A13 00 00        Indice_restore_caja defw 0
 237  8A15 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 238  8A16 00           Numero_parcial_de_entidades db 0
 239  8A17 00           Entidades_en_curso db 0									; ..... ..... .....
 240  8A18 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 241  8A19              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 242  8A19              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 243  8A19              ;														; _ (Numero_de_malotes)="0".
 244  8A19 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 245  8A1B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 246  8A1D              ;														; _ puntero (Indice_entidades).
 247  8A1D
 248  8A1D
 249  8A1D              ;---------------------------------------------------------------------------------------------------------------
 250  8A1D              ;
 251  8A1D              ; Sirven para PINTAR.
 252  8A1D
 253  8A1D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 254  8A1F              ;														; _variable para almacenar lo posición del puntero_
 255  8A1F              ; 														; _de pila, SP.
 256  8A1F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 257  8A21              ;														; La utiliza la rutina [Extrae_foto_registros].
 258  8A21 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 259  8A23              ;														; _el snapshot de los registros de la siguiente entidad.
 260  8A23              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 261  8A23 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 262  8A25              ;														; _el snapshot de los registros del siguiente disparo.
 263  8A25              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 264  8A25
 265  8A25              ;---------------------------------------------------------------------------------------------------------------
 266  8A25
 267  8A25              ; Gestión de Disparos.
 268  8A25
 269  8A25 00           Numero_de_disparotes db 0
 270  8A26 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 271  8A28 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 272  8A2A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 273  8A2B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 274  8A2B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 275  8A2B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 276  8A2D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 277  8A2D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 278  8A2D              ;														; _produzca colisión.
 279  8A2D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 280  8A2F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 281  8A2F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 282  8A32              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 283  8A32 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 284  8A35              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 285  8A35 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 286  8A37 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 287  8A38
 288  8A38              ;---------------------------------------------------------------------------------------------------------------
 289  8A38
 290  8A38              ; Relojes y temporizaciones.
 291  8A38
 292  8A38 00           Contador_de_frames db 0
 293  8A39 04           Clock_explosion db 4
 294  8A3A 1E           Clock_Entidades_en_curso db 30
 295  8A3B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 296  8A3C              ;														; Repite la oleada de entidades.
 297  8A3C 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 298  8A3D 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 299  8A3E 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 300  8A3F
 301  8A3F 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 302  8A40 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 303  8A41 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 304  8A42
 305  8A42              ;---------------------------------------------------------------------------------------------------------------
 306  8A42
 307  8A42              ; Gestión de NIVELES.
 308  8A42
 309  8A42 00           Nivel db 0												; Nivel actual del juego.
 310  8A43 00 00        Puntero_indice_NIVELES defw 0
 311  8A45 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 312  8A47              ; 														; _ que definen el NIVEL.
 313  8A47              ; Y todo comienza aquí .....
 314  8A47              ;
 315  8A47              ; Rutina principal *************************************************************************************************************************************************************************
 316  8A47              ;
 317  8A47              ;	14/11/22
 318  8A47
 319  8A47              START
 320  8A47
 321  8A47 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 322  8A4A 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 323  8A4C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 324  8A4E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 325  8A50 F3           	DI
 326  8A51
 327  8A51 3E 07        	ld a,%00000111
 328  8A53 CD 0F 99     	call Cls
 329  8A56
 330  8A56              ;	call Pinta_marco
 331  8A56
 332  8A56 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 333  8A59
 334  8A59 CD 0E 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 335  8A5C
 336  8A5C CD 25 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 337  8A5F
 338  8A5F CD E1 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 339  8A62              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 340  8A62 CD BE 8D     	call Restore_entidad
 341  8A65
 342  8A65 21 16 8A     	ld hl,Numero_parcial_de_entidades
 343  8A68 46           	ld b,(hl)
 344  8A69 04           	inc b
 345  8A6A 05           	dec b
 346  8A6B 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 347  8A6D
 348  8A6D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 349  8A6D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 350  8A6D              ;	Pintamos el resto de entidades:
 351  8A6D
 352  8A6D              ;	INICIA ENTIDADES !!!!!
 353  8A6D
 354  8A6D C5           1 push bc  												; Guardo el contador de entidades.
 355  8A6E
 356  8A6E CD D8 8A     	call Inicia_entidad
 357  8A71
 358  8A71 C1           	pop bc
 359  8A72 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 360  8A74
 361  8A74              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 362  8A74              ; (Esto se dá cuando se inicia una nueva oleada).
 363  8A74
 364  8A74 3A 0C 8A     	ld a,(Ctrl_1)
 365  8A77 CB 5F        	bit 3,a
 366  8A79 20 18        	jr nz,5F											; Loop
 367  8A7B
 368  8A7B              ; 	INICIA AMADEUS !!!!!
 369  8A7B
 370  8A7B CD E5 8D     3 call Restore_Amadeus
 371  8A7E CD 3B 8D     	call Inicia_Puntero_objeto
 372  8A81 CD 55 93     	call Draw
 373  8A84 CD A0 7F     	call Guarda_foto_registros
 374  8A87 11 84 85     	ld de,Amadeus_db
 375  8A8A CD F7 8D     	call Store_Amadeus
 376  8A8D
 377  8A8D              ; 	INICIA DISPAROS !!!!!
 378  8A8D
 379  8A8D CD F7 8C     	call Inicia_Puntero_Disparo_Entidades
 380  8A90 CD FE 8C     	call Inicia_Puntero_Disparo_Amadeus
 381  8A93
 382  8A93              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 383  8A93
 384  8A93 CD E1 8C     5 call Inicia_punteros_de_cajas
 385  8A96 CD BE 8D     	call Restore_entidad
 386  8A99
 387  8A99 3A 0C 8A     	ld a,(Ctrl_1)
 388  8A9C CB 5F        	bit 3,a
 389  8A9E 28 0A        	jr z,6F
 390  8AA0
 391  8AA0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 392  8AA0
 393  8AA0 21 0C 8A     	ld hl,Ctrl_1
 394  8AA3 CB 9E        	res 3,(hl)
 395  8AA5 CD 05 8D     	call Calcula_numero_de_malotes
 396  8AA8 18 07        	jr 7F
 397  8AAA
 398  8AAA              ; ----------
 399  8AAA
 400  8AAA 3A 16 8A     6 ld a,(Numero_parcial_de_entidades)
 401  8AAD 3C           	inc a
 402  8AAE 32 18 8A     	ld (Numero_de_malotes),a
 403  8AB1
 404  8AB1 AF           7 xor a
 405  8AB2 FB           2 ei
 406  8AB3 28 FD        	jr z,2B
 407  8AB5
 408  8AB5 3A 38 8A     	ld a,(Contador_de_frames)
 409  8AB8 47           	ld b,a
 410  8AB9 3A 3B 8A     	ld a,(Activa_recarga_cajas)
 411  8ABC B8           	cp b
 412  8ABD 28 08        	jr z,8F
 413  8ABF
 414  8ABF 21 0C 8A     	ld hl,Ctrl_1
 415  8AC2 CB E6        	set 4,(hl)
 416  8AC4 AF           	xor a
 417  8AC5 18 EB        	jr 2B
 418  8AC7
 419  8AC7 21 0C 8A     8 ld hl,Ctrl_1
 420  8ACA CB A6        	res 4,(hl)
 421  8ACC F3           	di
 422  8ACD
 423  8ACD 3A 38 8A     	ld a,(Contador_de_frames)
 424  8AD0
 425  8AD0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 426  8AD0              ;! _ IMPREDECIBLE !!!!
 427  8AD0
 428  8AD0 C6 0A        	add 10
 429  8AD2 32 3A 8A     	ld (Clock_Entidades_en_curso),a
 430  8AD5
 431  8AD5 C3 5C 8A     	jp 4B
 432  8AD8
 433  8AD8              ; -----------------------------------------------------------------------------------
 434  8AD8
 435  8AD8 CD 3B 8D     Inicia_entidad	call Inicia_Puntero_objeto
 436  8ADB CD 23 99     	call Recompone_posicion_inicio
 437  8ADE CD 55 93     	call Draw
 438  8AE1 CD A0 7F     	call Guarda_foto_registros
 439  8AE4 CD 83 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 440  8AE7 C9           	ret
 441  8AE8
 442  8AE8              ; -----------------------------------------------------------------------------------
 443  8AE8
 444  8AE8              Frame
 445  8AE8
 446  8AE8              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 447  8AE8              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 448  8AE8
 449  8AE8              ; PINTAMOS.
 450  8AE8
 451  8AE8 3E 02            ld a,2
 452  8AEA D3 FE            out ($fe),a
 453  8AEC CD 63 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 454  8AEF CD 9C 96     	call Extrae_foto_disparos
 455  8AF2 3E 01            ld a,1
 456  8AF4 D3 FE            out ($fe),a
 457  8AF6
 458  8AF6              ; ----------------------------------------------------------------------
 459  8AF6
 460  8AF6              ; RELOJES.
 461  8AF6
 462  8AF6 21 38 8A     	ld hl,Contador_de_frames
 463  8AF9 34           	inc (hl)											; 0 - 255
 464  8AFA
 465  8AFA 3A 3A 8A     	ld a,(Clock_Entidades_en_curso)
 466  8AFD 47           	ld b,a
 467  8AFE 3A 38 8A     	ld a,(Contador_de_frames)
 468  8B01 B8           	cp b
 469  8B02 20 18        	jr nz,13F
 470  8B04
 471  8B04 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 472  8B07 47           	ld b,a
 473  8B08 3A 17 8A     	ld a,(Entidades_en_curso)
 474  8B0B B8           	cp b
 475  8B0C 28 0E        	jr z,13F
 476  8B0E 30 0C        	jr nc,13F
 477  8B10
 478  8B10 3C           	inc a
 479  8B11 32 17 8A     	ld (Entidades_en_curso),a
 480  8B14
 481  8B14 3A 3A 8A     	ld a,(Clock_Entidades_en_curso)
 482  8B17
 483  8B17              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 484  8B17              ;! _ IMPREDECIBLE !!!!
 485  8B17
 486  8B17 C6 64        	add 100
 487  8B19 32 3A 8A     	ld (Clock_Entidades_en_curso),a
 488  8B1C
 489  8B1C              ; Habilita disparos.
 490  8B1C
 491  8B1C 21 3C 8A     13 ld hl,Disparo_Amadeus
 492  8B1F 11 3E 8A     	ld de,CLOCK_repone_disparo_Amadeus
 493  8B22 CD D4 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 494  8B25
 495  8B25 21 3F 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 496  8B28 11 41 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 497  8B2B CD D4 9F     	call Habilita_disparos
 498  8B2E
 499  8B2E              ; COLISIONES.
 500  8B2E
 501  8B2E CD 37 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 502  8B31
 503  8B31              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 504  8B31              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 505  8B31              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 506  8B31
 507  8B31 AF           	xor a
 508  8B32 32 2A 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 509  8B35
 510  8B35 CD E1 8C     	call Inicia_punteros_de_cajas
 511  8B38 CD BE 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 512  8B3B              ; 														; _ en DRAW.
 513  8B3B 3A C9 89     	ld a,(Filas)
 514  8B3E A7           	and a
 515  8B3F 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 516  8B41 CD D0 8D     	call Incrementa_punteros_de_cajas
 517  8B44 18 F2        	jr 12B
 518  8B46
 519  8B46              ; ---------------------------------------------------------------------------------------
 520  8B46
 521  8B46 CD AD 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 522  8B49 21 00 70     	ld hl,Album_de_fotos
 523  8B4C 22 21 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 524  8B4F              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 525  8B4F 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 526  8B52 47               ld b,a
 527  8B53 A7           	and a
 528  8B54 20 14        	jr nz,2F
 529  8B56
 530  8B56 21 0C 8A     	ld hl,Ctrl_1
 531  8B59 CB 66        	bit 4,(hl)
 532  8B5B C2 E7 8B     	jp nz,4F
 533  8B5E
 534  8B5E 21 0C 8A     	ld hl,Ctrl_1
 535  8B61 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 536  8B63
 537  8B63 3A 38 8A     	ld a,(Contador_de_frames)
 538  8B66 3C           	inc a
 539  8B67 32 3B 8A     	ld (Activa_recarga_cajas),a
 540  8B6A
 541  8B6A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 542  8B6A
 543  8B6A 3A 17 8A     2 ld a,(Entidades_en_curso)
 544  8B6D A7           	and a
 545  8B6E CA E7 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 546  8B71 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 547  8B72
 548  8B72              ; Código que ejecutamos con cada entidad:
 549  8B72              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 550  8B72
 551  8B72 C5           15 push bc 												; Nº de entidades en curso.
 552  8B73
 553  8B73              ; Impacto ???
 554  8B73
 555  8B73 3A E2 89     33 ld a,(Impacto)
 556  8B76 A7           	and a
 557  8B77 28 2D        	jr z,8F
 558  8B79
 559  8B79              ; Hay Impacto en esta entidad.
 560  8B79
 561  8B79 21 39 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 562  8B7C 35           	dec (hl)
 563  8B7D 20 62        	jr nz,6F
 564  8B7F
 565  8B7F              ;! Velocidad de la animación de la explosión.
 566  8B7F
 567  8B7F 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 568  8B81              ;														; _,(velocidad de la explosión).
 569  8B81 CD 98 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 570  8B84
 571  8B84              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 572  8B84
 573  8B84 3A 0A 8A     	ld a,(Ctrl_2)
 574  8B87 CB 4F        	bit 1,a
 575  8B89 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 576  8B8B
 577  8B8B              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 578  8B8B
 579  8B8B 3A D1 89     	ld a,(CTRL_DESPLZ)
 580  8B8E A7           	and a
 581  8B8F 20 08        	jr nz,21F
 582  8B91
 583  8B91 21 84 84     	ld hl,Indice_Explosion_2x2-2
 584  8B94 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 585  8B97 18 06        	jr 22F
 586  8B99
 587  8B99 21 EE 83     21 ld hl,Indice_Explosion_2x3-2
 588  8B9C 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 589  8B9F
 590  8B9F 21 0A 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 591  8BA2 CB CE        	set 1,(hl)
 592  8BA4 18 22        	jr 7F
 593  8BA6
 594  8BA6              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 595  8BA6              ; _con las coordenadas de la entidad almacenada en DRAW.
 596  8BA6
 597  8BA6 3A 0C 8A     8 ld a,(Ctrl_1)
 598  8BA9 CB 57        	bit 2,a
 599  8BAB 28 1B        	jr z,7F
 600  8BAD
 601  8BAD 2A 2D 8A     	ld hl,(Coordenadas_disparo_certero)
 602  8BB0 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 603  8BB1              ;														; E contiene la coordenada_X del disparo.
 604  8BB1 2A CF 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 605  8BB4              ;														; H FILA, (Coordenada_y de la entidad).
 606  8BB4 A7           	and a
 607  8BB5 ED 52        	sbc hl,de
 608  8BB7
 609  8BB7 CD 6E 92     	call Determina_resultado_comparativa
 610  8BBA
 611  8BBA 78           	ld a,b
 612  8BBB A7           	and a
 613  8BBC 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 614  8BBE
 615  8BBE              ; ----- ----- -----
 616  8BBE
 617  8BBE 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 618  8BC0 32 E2 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 619  8BC3
 620  8BC3 21 0C 8A     	ld hl,Ctrl_1
 621  8BC6 CB 96        	res 2,(hl)
 622  8BC8
 623  8BC8 CD 1A 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 624  8BCB
 625  8BCB 3A F7 89     	ld a,(Ctrl_0)
 626  8BCE CB 67        	bit 4,a
 627  8BD0 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 628  8BD2
 629  8BD2              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 630  8BD2              ; [[[
 631  8BD2 CD 59 8E     	call Detecta_disparo_entidad
 632  8BD5              ; ]]]
 633  8BD5 CD A8 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 634  8BD8
 635  8BD8 21 F7 89     	ld hl,Ctrl_0
 636  8BDB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 637  8BDD AF           	xor a
 638  8BDE 32 F8 89     	ld (Obj_dibujado),a
 639  8BE1
 640  8BE1 CD 83 8D     6 call Store_Restore_cajas
 641  8BE4
 642  8BE4 C1           	pop bc
 643  8BE5 10 8B        	djnz 15B
 644  8BE7
 645  8BE7              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 646  8BE7
 647  8BE7              ;	ld a,2
 648  8BE7              ;	ld (Limitador_de_entidades_x_frame),a
 649  8BE7
 650  8BE7              ; ------------------------------------
 651  8BE7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 652  8BE7              ; Hemos gestionado todas las unidades.
 653  8BE7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 654  8BE7
 655  8BE7              ;	ld hl,Ctrl_1
 656  8BE7              ;	res 2,(hl)
 657  8BE7
 658  8BE7              ; ------------------------------------
 659  8BE7
 660  8BE7              ; Tras la gestión de las entidades, ... AMADEUS.
 661  8BE7
 662  8BE7 CD E5 8D     4 call Restore_Amadeus
 663  8BEA
 664  8BEA 3A E2 89     	ld a,(Impacto)
 665  8BED A7           	and a
 666  8BEE 20 FE        	jr nz,$
 667  8BF0
 668  8BF0 CD 79 8C     	call Mov_Amadeus
 669  8BF3
 670  8BF3 3A F7 89     	ld a,(Ctrl_0)
 671  8BF6 CB 67        	bit 4,a
 672  8BF8 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 673  8BFA
 674  8BFA CD A8 8C     	call Guarda_foto_entidad_a_pintar
 675  8BFD
 676  8BFD 21 F7 89     3 ld hl,Ctrl_0
 677  8C00 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 678  8C02 AF           	xor a
 679  8C03 32 F8 89     	ld (Obj_dibujado),a
 680  8C06
 681  8C06 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 682  8C09 CD F7 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 683  8C0C
 684  8C0C CD CB 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 685  8C0F
 686  8C0F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 687  8C0F
 688  8C0F CD 1D 8D     	call Calcula_numero_de_disparotes
 689  8C12 CD 05 8D     9 call Calcula_numero_de_malotes
 690  8C15
 691  8C15 3E 04        	ld a,4
 692  8C17 D3 FE        	out ($fe),a
 693  8C19
 694  8C19 C9           	ret
 695  8C1A
 696  8C1A              ; --------------------------------------------------------------------------------------------------------------
 697  8C1A              ;
 698  8C1A              ;	27/05/23
 699  8C1A
 700  8C1A              Mov_obj
 701  8C1A
 702  8C1A              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 703  8C1A
 704  8C1A 3A 0A 8A     	ld a,(Ctrl_2)
 705  8C1D CB 4F        	bit 1,a
 706  8C1F 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 707  8C21
 708  8C21              ; Explosión:
 709  8C21
 710  8C21 3A 0B 8A     	ld a,(Frames_explosion)
 711  8C24 A7           	and a
 712  8C25 20 11        	jr nz,4F
 713  8C27
 714  8C27              ; Una alimaña menos!!!!!!!!!1
 715  8C27
 716  8C27 CD 00 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 717  8C2A 21 16 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 718  8C2D 35           	dec (hl)
 719  8C2E 21 17 8A     	ld hl,Entidades_en_curso
 720  8C31 35           	dec (hl)
 721  8C32 21 15 8A     	ld hl,Numero_de_entidades
 722  8C35 35           	dec (hl)
 723  8C36 18 40        	jr 3F
 724  8C38
 725  8C38              ; -----
 726  8C38
 727  8C38              ;	`Movemos´ la explosión.
 728  8C38
 729  8C38 2A D7 89     4 ld hl,(Puntero_DESPLZ_der)
 730  8C3B 23           	inc hl
 731  8C3C 23           	inc hl
 732  8C3D 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 733  8C40 CD 35 8D     	call Extrae_address
 734  8C43 22 CD 89     	ld (Puntero_objeto),hl
 735  8C46
 736  8C46 21 0B 8A     	ld hl,Frames_explosion
 737  8C49 35           	dec (hl)
 738  8C4A
 739  8C4A CD 98 8C     	call Guarda_foto_entidad_a_borrar
 740  8C4D 18 29        	jr 3F
 741  8C4F
 742  8C4F AF           2 xor a
 743  8C50 32 F8 89     	ld (Obj_dibujado),a
 744  8C53 32 F7 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 745  8C56              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 746  8C56              ; 														; _de la entidad.
 747  8C56 CD B2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 748  8C59              ;														; Obj_dibujado="0".
 749  8C59              ; Movemos Entidades malignas.
 750  8C59
 751  8C59              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 752  8C59              ;	and a 												; _a movernos. (Limitador_de_entidades).
 753  8C59              ;	ret z
 754  8C59
 755  8C59 CD 6F 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 756  8C5C
 757  8C5C 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 758  8C5F CB 67        	bit 4,a
 759  8C61 C8           	ret z
 760  8C62
 761  8C62              ; Ha habido desplazamiento de la entidad maligna.
 762  8C62              ; Ha llegado a zona de AMADEUS ???
 763  8C62
 764  8C62 3A D0 89     	ld a,(Coordenada_y)
 765  8C65 FE 14        	cp $14
 766  8C67 D4 FC 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 767  8C6A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 768  8C6A              ; ---------
 769  8C6A
 770  8C6A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 771  8C6C 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 772  8C6F CD B2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 773  8C72 CD C9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 774  8C75 CD 98 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 775  8C78 C9           3 ret													; _de la misma.
 776  8C79
 777  8C79              ; --------------------------------------------------------------------------------------------------------------
 778  8C79              ;
 779  8C79              ;	29/1/23
 780  8C79
 781  8C79              Mov_Amadeus
 782  8C79
 783  8C79 AF           	xor a
 784  8C7A 32 F8 89     	ld (Obj_dibujado),a
 785  8C7D CD B2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 786  8C80              ;														; Obj_dibujado="0".
 787  8C80              ; Movemos Amadeus.
 788  8C80
 789  8C80 CD 22 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 790  8C83 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 791  8C86 CB 67        	bit 4,a
 792  8C88 C8           	ret z
 793  8C89
 794  8C89              ; ---------
 795  8C89
 796  8C89 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 797  8C8B 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 798  8C8E CD B2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 799  8C91 CD C9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 800  8C94 CD 98 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 801  8C97 C9           	ret													; _de la nave.
 802  8C98
 803  8C98              ; --------------------------------------------------------------------------------------------------------------
 804  8C98              ;
 805  8C98              ;	31/01/23
 806  8C98              ;
 807  8C98              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 808  8C98
 809  8C98              Guarda_foto_entidad_a_borrar
 810  8C98
 811  8C98 CD 39 96     	call Prepara_draw
 812  8C9B CD 69 95     	call calcula_CColumnass
 813  8C9E CD A0 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 814  8CA1 CD FF 95     	call Define_rutina_de_impresion
 815  8CA4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 816  8CA7 C9           	ret
 817  8CA8
 818  8CA8              ; --------------------------------------------------------------------------------------------------------------
 819  8CA8              ;
 820  8CA8              ;	31/01/23
 821  8CA8              ;
 822  8CA8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 823  8CA8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 824  8CA8
 825  8CA8              Guarda_foto_entidad_a_pintar
 826  8CA8
 827  8CA8 CD D5 8C     	call Repone_pintar
 828  8CAB CD 55 93     	call Draw
 829  8CAE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 830  8CB1 C9           	ret
 831  8CB2
 832  8CB2              ; --------------------------------------------------------------------------------------------------------------
 833  8CB2              ;
 834  8CB2              ;
 835  8CB2
 836  8CB2 21 C9 89     Prepara_var_pintado_borrado	ld hl,Filas
 837  8CB5 3A F8 89     	ld a,(Obj_dibujado)
 838  8CB8 A7           	and a
 839  8CB9 28 05        	jr z,1F
 840  8CBB 11 ED 89     	ld de,Variables_de_pintado
 841  8CBE 18 03        	jr 2F
 842  8CC0 11 E3 89     1 ld de,Variables_de_borrado
 843  8CC3 01 08 00     2 ld bc,8
 844  8CC6 ED B0        	ldir
 845  8CC8 C9           	ret
 846  8CC9
 847  8CC9              ; --------------------------------------------------------------------------------------------------------------
 848  8CC9
 849  8CC9 21 E3 89     Repone_borrar ld hl,Variables_de_borrado
 850  8CCC 11 C9 89     	ld de,Filas
 851  8CCF 01 08 00     	ld bc,8
 852  8CD2 ED B0        	ldir
 853  8CD4 C9           	ret
 854  8CD5
 855  8CD5 21 ED 89     Repone_pintar ld hl,Variables_de_pintado
 856  8CD8 11 C9 89     	ld de,Filas
 857  8CDB 01 08 00     	ld bc,8
 858  8CDE ED B0        	ldir
 859  8CE0 C9           	ret
 860  8CE1
 861  8CE1              ; *************************************************************************************************************************************************************
 862  8CE1              ;
 863  8CE1              ; 8/1/23
 864  8CE1              ;
 865  8CE1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 866  8CE1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 867  8CE1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 868  8CE1
 869  8CE1              ; Destruye HL y DE !!!!!
 870  8CE1
 871  8CE1              Inicia_punteros_de_cajas
 872  8CE1
 873  8CE1 21 6C 85     	ld hl,Indice_de_cajas
 874  8CE4 CD 35 8D         call Extrae_address
 875  8CE7 22 0F 8A         ld (Puntero_store_caja),hl
 876  8CEA 21 6E 85     	ld hl,Indice_de_cajas+2
 877  8CED 22 13 8A     	ld (Indice_restore_caja),hl
 878  8CF0 CD 35 8D     	call Extrae_address
 879  8CF3 22 11 8A     	ld (Puntero_restore_caja),hl
 880  8CF6 C9               ret
 881  8CF7
 882  8CF7              ; *************************************************************************************************************************************************************
 883  8CF7              ;
 884  8CF7              ; 8/1/23
 885  8CF7              ;
 886  8CF7              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 887  8CF7
 888  8CF7 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 889  8CFA 22 26 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 890  8CFD C9           	ret
 891  8CFE 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 892  8D01 22 28 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 893  8D04 C9           	ret
 894  8D05
 895  8D05              ; -------------------------------------------------------------------------------------------------------------
 896  8D05              ;
 897  8D05              ; 28/2/23
 898  8D05              ;
 899  8D05
 900  8D05              Calcula_numero_de_malotes
 901  8D05
 902  8D05 21 00 70     	ld hl,Album_de_fotos
 903  8D08 EB           	ex de,hl
 904  8D09 2A 21 8A     	ld hl,(Stack_snapshot)
 905  8D0C
 906  8D0C 06 00        	ld b,0
 907  8D0E 7D           	ld a,l
 908  8D0F 93           	sub e
 909  8D10 28 07        	jr z,1F
 910  8D12
 911  8D12              ; Nº de malotes no es "0".
 912  8D12
 913  8D12 D6 06        2 sub 6
 914  8D14 04           	inc b
 915  8D15 A7           	and a
 916  8D16 20 FA        	jr nz,2B
 917  8D18 78           	ld a,b
 918  8D19
 919  8D19 32 18 8A     1 ld (Numero_de_malotes),a
 920  8D1C C9           	ret
 921  8D1D
 922  8D1D              ; -------------------------------------------------------------------------------------------------------------
 923  8D1D              ;
 924  8D1D              ; 28/2/23
 925  8D1D              ;
 926  8D1D
 927  8D1D              Calcula_numero_de_disparotes
 928  8D1D
 929  8D1D 21 85 70     	ld hl,Album_de_fotos_disparos
 930  8D20 EB           	ex de,hl
 931  8D21 2A 23 8A     	ld hl,(Stack_snapshot_disparos)
 932  8D24
 933  8D24 06 00        	ld b,0
 934  8D26 7D           	ld a,l
 935  8D27 93           	sub e
 936  8D28 28 07        	jr z,1F
 937  8D2A
 938  8D2A              ; Nº de malotes no es "0".
 939  8D2A
 940  8D2A D6 06        2 sub 6
 941  8D2C 04           	inc b
 942  8D2D A7           	and a
 943  8D2E 20 FA        	jr nz,2B
 944  8D30 78           	ld a,b
 945  8D31
 946  8D31 32 25 8A     1 ld (Numero_de_disparotes),a
 947  8D34 C9           	ret
 948  8D35              ; *************************************************************************************************************************************************************
 949  8D35              ;
 950  8D35              ; 20/10/22
 951  8D35              ;
 952  8D35              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 953  8D35              ;
 954  8D35              ; Destruye el puntero y DE !!!!!
 955  8D35
 956  8D35 5E           Extrae_address ld e,(hl)
 957  8D36 23           	inc hl
 958  8D37 56           	ld d,(hl)
 959  8D38 2B           	dec hl
 960  8D39 EB           	ex de,hl
 961  8D3A C9           	ret
 962  8D3B
 963  8D3B              ; *************************************************************************************************************************************************************
 964  8D3B              ;
 965  8D3B              ;	7/2/23
 966  8D3B              ;
 967  8D3B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 968  8D3B              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 969  8D3B              ;
 970  8D3B              ;   Destruye HL y BC !!!!!,
 971  8D3B              ;
 972  8D3B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 973  8D3B              ;					"0" ..... Izquierda.
 974  8D3B
 975  8D3B              Inicia_Puntero_objeto
 976  8D3B
 977  8D3B 3A DD 89     	ld a,(Cuad_objeto)
 978  8D3E E6 01        	and 1
 979  8D40 F5           	push af
 980  8D41 CC 5F 8D     	call z,Inicia_puntero_objeto_izq
 981  8D44 F1           	pop af
 982  8D45 28 2B        	jr z,1F
 983  8D47 CD 4C 8D     	call Inicia_puntero_objeto_der
 984  8D4A 18 26        	jr 1F
 985  8D4C
 986  8D4C              ; Arrancamos desde la parte izquierda de la pantalla.
 987  8D4C              ; Iniciamos (Indice_Sprite_der).
 988  8D4C
 989  8D4C 2A D3 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 990  8D4F 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 991  8D52 CD 35 8D     	call Extrae_address
 992  8D55 22 CD 89     	ld (Puntero_objeto),hl
 993  8D58
 994  8D58 2A D5 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 995  8D5B 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 996  8D5E C9           	ret
 997  8D5F
 998  8D5F              ; Arrancamos desde la parte derecha de la pantalla.
 999  8D5F              ; Iniciamos (Indice_Sprite_izq).
1000  8D5F
1001  8D5F 2A D5 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1002  8D62 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1003  8D65 CD 35 8D     	call Extrae_address
1004  8D68 22 CD 89     	ld (Puntero_objeto),hl
1005  8D6B
1006  8D6B 2A D3 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1007  8D6E 22 D7 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1008  8D71 C9           	ret
1009  8D72
1010  8D72              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1011  8D72
1012  8D72 21 40 83     1 ld hl,Amadeus
1013  8D75 ED 4B CD 89  	ld bc,(Puntero_objeto)
1014  8D79 B7 ED 42     	sub hl,bc
1015  8D7C C0           	ret nz
1016  8D7D 21 F7 89     	ld hl,Ctrl_0
1017  8D80 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1018  8D82 C9           	ret 												; _de nuestra nave en los extremos.
1019  8D83
1020  8D83              ; *************************************************************************************************************************************************************
1021  8D83              ;
1022  8D83              ;	14/5/23
1023  8D83              ;
1024  8D83              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1025  8D83              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1026  8D83
1027  8D83              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1028  8D83              ;	_de la 2ª y 3ª entidad respectivamente.
1029  8D83
1030  8D83              Store_Restore_cajas
1031  8D83
1032  8D83 E5           	push hl
1033  8D84 D5           	push de
1034  8D85 C5            	push bc
1035  8D86
1036  8D86              ;	STORE !!!!!
1037  8D86              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1038  8D86
1039  8D86 21 C9 89     	ld hl,Filas
1040  8D89 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1041  8D8D 01 43 00     	ld bc,67
1042  8D90 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1043  8D92
1044  8D92              ; 	Entidad_sospechosa. 20/4/23
1045  8D92
1046  8D92 3A E2 89     	ld a,(Impacto)
1047  8D95 A7           	and a
1048  8D96 28 0C        	jr z,1F
1049  8D98
1050  8D98 2A 0F 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1051  8D9B 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1052  8D9E A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1053  8D9F ED 4A        	adc hl,bc 											; _ "0" más adelante.
1054  8DA1 22 2B 8A     	ld (Entidad_sospechosa_de_colision),hl
1055  8DA4
1056  8DA4              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1057  8DA4
1058  8DA4 2A 11 8A     1 ld hl,(Puntero_restore_caja)
1059  8DA7 7E           	ld a,(hl)
1060  8DA8 A7           	and a
1061  8DA9 F5           	push af
1062  8DAA 28 08        	jr z,2F
1063  8DAC
1064  8DAC 11 C9 89     	ld de,Filas
1065  8DAF 01 43 00     	ld bc,67
1066  8DB2 ED B0        	ldir
1067  8DB4
1068  8DB4 CD D0 8D     2 call Incrementa_punteros_de_cajas
1069  8DB7 F1           	pop af
1070  8DB8 28 EA        	jr z,1B
1071  8DBA
1072  8DBA C1           	pop bc
1073  8DBB D1           	pop de
1074  8DBC E1           	pop hl
1075  8DBD
1076  8DBD C9           	ret
1077  8DBE
1078  8DBE              ; **************************************************************************************************
1079  8DBE              ;
1080  8DBE              ;	12/05/23
1081  8DBE              ;
1082  8DBE              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1083  8DBE
1084  8DBE E5           Restore_entidad push hl
1085  8DBF D5           	push de
1086  8DC0 C5            	push bc
1087  8DC1
1088  8DC1 2A 0F 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1089  8DC4 11 C9 89     	ld de,Filas
1090  8DC7 01 43 00     	ld bc,67
1091  8DCA ED B0        	ldir
1092  8DCC
1093  8DCC C1           	pop bc
1094  8DCD D1           	pop de
1095  8DCE E1           	pop hl
1096  8DCF C9           	ret
1097  8DD0
1098  8DD0
1099  8DD0              ; **************************************************************************************************
1100  8DD0              ;
1101  8DD0              ;	08/05/23
1102  8DD0              ;
1103  8DD0              ;	Incrementamos los dos punteros de entidades. (+1).
1104  8DD0
1105  8DD0 2A 11 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1106  8DD3 22 0F 8A     	ld (Puntero_store_caja),hl
1107  8DD6 2A 13 8A     	ld hl,(Indice_restore_caja)
1108  8DD9 23           	inc hl
1109  8DDA 23           	inc hl
1110  8DDB 22 13 8A     	ld (Indice_restore_caja),hl
1111  8DDE CD 35 8D         call Extrae_address
1112  8DE1 22 11 8A         ld (Puntero_restore_caja),hl
1113  8DE4 C9               ret
1114  8DE5
1115  8DE5              ; **************************************************************************************************
1116  8DE5              ;
1117  8DE5              ;	25/01/23
1118  8DE5              ;
1119  8DE5              ;	Restore_Amadeus
1120  8DE5              ;
1121  8DE5              ;	Cargamos en DRAW los parámetros de Amadeus.
1122  8DE5              ;
1123  8DE5
1124  8DE5 E5           Restore_Amadeus	push hl
1125  8DE6 D5           	push de
1126  8DE7 C5            	push bc
1127  8DE8 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1128  8DEB 11 C9 89     	ld de,Filas
1129  8DEE 01 43 00     	ld bc,67
1130  8DF1 ED B0        	ldir
1131  8DF3 C1           	pop bc
1132  8DF4 D1           	pop de
1133  8DF5 E1           	pop hl
1134  8DF6 C9           	ret
1135  8DF7
1136  8DF7              ; *************************************************************************************************************************************************************
1137  8DF7              ;
1138  8DF7              ;	29/04/23
1139  8DF7              ;
1140  8DF7              ;	Store_Amadeus
1141  8DF7              ;
1142  8DF7              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1143  8DF7              ;
1144  8DF7              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1145  8DF7              ;
1146  8DF7              ;	DESTRUYE: HL y BC y DE.
1147  8DF7
1148  8DF7 21 C9 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1149  8DFA 01 43 00     	ld bc,67
1150  8DFD ED B0        	ldir
1151  8DFF C9           	ret
1152  8E00
1153  8E00              ; -----------------------------------------------------------
1154  8E00              ;
1155  8E00              ;	27/04/23
1156  8E00              ;
1157  8E00              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1158  8E00              ;
1159  8E00              ;	Destruye: HL,BC,DE,A
1160  8E00
1161  8E00 21 C9 89     Borra_datos_entidad ld hl,Filas
1162  8E03 01 42 00     	ld bc,66
1163  8E06 AF           	xor a
1164  8E07 77           	ld (hl),a
1165  8E08 11 CA 89     	ld de,Filas+1
1166  8E0B ED B0        	ldir
1167  8E0D C9           	ret
1168  8E0E
1169  8E0E              ; -----------------------------------------------------------
1170  8E0E
1171  8E0E              ; Teclado.
1172  8E0E
1173  8E0E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1174  8E10 DB FE        	in a,($fe)
1175  8E12 E6 01        	and $01
1176  8E14 28 02        	jr z,1f
1177  8E16 18 F6        	jr Pulsa_ENTER
1178  8E18 C9           1 ret
1179  8E19
1180  8E19              ; **************************************************************************************************
1181  8E19              ;
1182  8E19              ; Temporización.
1183  8E19
1184  8E19              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1185  8E19              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1186  8E19              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1187  8E19              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1188  8E19
1189  8E19              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1190  8E19              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1191  8E19              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1192  8E19
1193  8E19              ; A partir de $4f61 no hace falta DELAY.
1194  8E19
1195  8E19              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1196  8E19
1197  8E19 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1198  8E1C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1199  8E1D 78           	LD A,B
1200  8E1E A7           	AND A
1201  8E1F 20 FB        	JR NZ,wait
1202  8E21 C9           	RET
1203  8E22
1204  8E22              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1205  8E22              ;
1206  8E22              ;	5/3/23
1207  8E22              ;
1208  8E22              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1209  8E22
1210  8E22              Movimiento_Amadeus
1211  8E22
1212  8E22              ; Disparo.
1213  8E22
1214  8E22 3A 3C 8A     	ld a,(Disparo_Amadeus)
1215  8E25 A7           	and a
1216  8E26 20 02        	jr nz,1F
1217  8E28 18 15        	jr 2F
1218  8E2A
1219  8E2A 3E F7        1 ld a,$f7													; "5" para disparar.
1220  8E2C DB FE        	in a,($fe)
1221  8E2E E6 10        	and $10
1222  8E30
1223  8E30 F5           	push af
1224  8E31 CC 5F 8E     	call z,Genera_disparo
1225  8E34 F1           	pop af
1226  8E35 20 08        	jr nz,2F
1227  8E37
1228  8E37 3A 3C 8A     	ld a,(Disparo_Amadeus)
1229  8E3A EE 01        	xor 1
1230  8E3C 32 3C 8A     	ld (Disparo_Amadeus),a
1231  8E3F
1232  8E3F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1233  8E41 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1234  8E43 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1235  8E45 CC DD 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1236  8E48 3E F7        	ld a,$f7
1237  8E4A DB FE        	in a,($fe)
1238  8E4C E6 01        	and $01
1239  8E4E C8           	ret z
1240  8E4F
1241  8E4F 3E F7        	ld a,$f7
1242  8E51 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1243  8E53 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1244  8E55 CC BF 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1245  8E58 C9           	ret
1246  8E59
1247  8E59              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1248  8E59              ;
1249  8E59              ;	Rutina provisional para que los malotes cagen balas.
1250  8E59
1251  8E59              Detecta_disparo_entidad
1252  8E59
1253  8E59 3A 3F 8A     	ld a,(Disparo_entidad)
1254  8E5C A7           	and a
1255  8E5D C8           	ret z
1256  8E5E
1257  8E5E              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1258  8E5E
1259  8E5E              ;	ld a,$7f				; Detecta SPACE.
1260  8E5E              ;	in a,($fe)
1261  8E5E              ;	and 1
1262  8E5E              ;	ret nz
1263  8E5E
1264  8E5E              ;	call Genera_disparo
1265  8E5E C9           	ret
1266  8E5F
1267  8E5F              ; ---------------------------------------------------------------
1268  8E5F
1269  8E5F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E5F              ; ******************************************************************************************************************************************************************************************
   2+ 8E5F              ;
   3+ 8E5F              ;   21/07/23
   4+ 8E5F              ;
   5+ 8E5F              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E5F              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E5F              ;
   8+ 8E5F              ;
   9+ 8E5F              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E5F              ;
  11+ 8E5F              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E5F              ;               _ hacen las entidades hacia abajo.
  13+ 8E5F              ;
  14+ 8E5F              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E5F              ;
  16+ 8E5F              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E5F              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E5F              ;
  19+ 8E5F              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E5F              ;           _ la bala.
  21+ 8E5F              ;
  22+ 8E5F              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E5F              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E5F              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E5F              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E5F              ;           _ en el momento de generarse la bala)).
  27+ 8E5F
  28+ 8E5F              Genera_disparo
  29+ 8E5F
  30+ 8E5F              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E5F              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E5F              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E5F              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E5F              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E5F              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E5F              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E5F
  38+ 8E5F              ; Exclusiones:
  39+ 8E5F
  40+ 8E5F 3A E1 89         ld a,(Vel_down)
  41+ 8E62 47               ld b,a
  42+ 8E63 3A 37 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E66 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E67 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E68 3A 06 8A         ld a,(Columnas)
  46+ 8E6B 47               ld b,a
  47+ 8E6C 3A CA 89         ld a,(Columns)
  48+ 8E6F B8               cp b
  49+ 8E70 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E71
  51+ 8E71              ; ----- ----- -----
  52+ 8E71
  53+ 8E71 3A F7 89         ld a,(Ctrl_0)
  54+ 8E74 CB 77            bit 6,a
  55+ 8E76 20 06            jr nz,14F
  56+ 8E78
  57+ 8E78 3A D0 89         ld a,(Coordenada_y)
  58+ 8E7B FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E7D D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E7E
  61+ 8E7E 21 00 80     14 ld hl,Indice_disparo
  62+ 8E81 3A D1 89         ld a,(CTRL_DESPLZ)
  63+ 8E84 4F               ld c,a
  64+ 8E85 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E87              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E87              ;                                            ""        ""       "f9", B="1"
  67+ 8E87              ;                                            ""        ""       "fb", B="2"
  68+ 8E87              ;                                            ""        ""       "fb", B="3"
  69+ 8E87 A7               and a
  70+ 8E88 28 10            jr z,1F
  71+ 8E8A E6 01            and 1
  72+ 8E8C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E8D
  74+ 8E8D 79               ld a,c
  75+ 8E8E 16 F9            ld d,$f9
  76+ 8E90 23           2 inc hl
  77+ 8E91 23               inc hl
  78+ 8E92 04               inc b
  79+ 8E93 BA               cp d
  80+ 8E94 28 04            jr z,1F
  81+ 8E96 14               inc d
  82+ 8E97 14               inc d
  83+ 8E98 18 F6            jr 2B
  84+ 8E9A
  85+ 8E9A CD 35 8D     1 call Extrae_address
  86+ 8E9D E5               push hl
  87+ 8E9E FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EA0 DD 21 D8 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EA4
  90+ 8EA4              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EA4              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EA4
  93+ 8EA4 3A F7 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EA7 CB 77            bit 6,a
  95+ 8EA9 20 04            jr nz,19F
  96+ 8EAB
  97+ 8EAB AF               xor a
  98+ 8EAC 32 3F 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EAF
 100+ 8EAF 3A DD 89     19 ld a,(Cuad_objeto)
 101+ 8EB2 FE 02            cp 2
 102+ 8EB4 38 66            jr c,3F
 103+ 8EB6 28 64            jr z,3F
 104+ 8EB8
 105+ 8EB8              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EB8
 107+ 8EB8 E6 01            and 1
 108+ 8EBA 28 30            jr z,4F
 109+ 8EBC
 110+ 8EBC              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EBC              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EBC              ;
 113+ 8EBC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EBC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EBC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EBC
 117+ 8EBC 2A CB 89     	ld hl,(Posicion_actual)
 118+ 8EBF
 119+ 8EBF              ;   Amadeus o entidad ???.
 120+ 8EBF
 121+ 8EBF 3A F7 89         ld a,(Ctrl_0)
 122+ 8EC2 CB 77            bit 6,a
 123+ 8EC4 28 0A            jr z,8F
 124+ 8EC6
 125+ 8EC6              ; 	Dispara Amadeus.
 126+ 8EC6
 127+ 8EC6 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EC8 CD 54 96         call PreviousScan
 129+ 8ECB CD 54 96         call PreviousScan
 130+ 8ECE
 131+ 8ECE              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8ECE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8ECE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8ECE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8ECE
 136+ 8ECE 18 11            jr 10F
 137+ 8ED0
 138+ 8ED0              ; 	Dispara Entidad.
 139+ 8ED0
 140+ 8ED0 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8ED3              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8ED3
 143+ 8ED3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8ED3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8ED3
 146+ 8ED3 C5               push bc
 147+ 8ED4 06 10            ld b,16
 148+ 8ED6 CD 45 96     9 call NextScan
 149+ 8ED9 10 FB            djnz 9B
 150+ 8EDB C1               pop bc
 151+ 8EDC CD 46 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EDF 18 06            jr 17F
 153+ 8EE1
 154+ 8EE1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EE1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EE1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EE1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EE1
 159+ 8EE1 CD 46 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EE4 CD BB 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EE7              ;                                                      ; _al generar el disparo.
 162+ 8EE7
 163+ 8EE7              ; 	LLegados a este punto tendremos:
 164+ 8EE7              ;
 165+ 8EE7              ;       Puntero_objeto_disparo en IY.
 166+ 8EE7              ;       Rutinas_de_impresion en IX.
 167+ 8EE7              ;       Puntero_de_impresion en HL.
 168+ 8EE7              ;       Impacto/Dirección en BC.
 169+ 8EE7
 170+ 8EE7 CD 4E 8F     17 call Almacena_disparo
 171+ 8EEA 18 52            jr 6F                                             ; RET.
 172+ 8EEC
 173+ 8EEC              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EEC              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EEC              ;
 176+ 8EEC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EEC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EEC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EEC
 180+ 8EEC 2A CB 89     4 ld hl,(Posicion_actual)
 181+ 8EEF
 182+ 8EEF              ;   Amadeus o entidad ???.
 183+ 8EEF
 184+ 8EEF 3A F7 89         ld a,(Ctrl_0)
 185+ 8EF2 CB 77            bit 6,a
 186+ 8EF4 28 0A            jr z,11F
 187+ 8EF6
 188+ 8EF6              ; 	Dispara Amadeus.
 189+ 8EF6
 190+ 8EF6 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EF8 CD 54 96         call PreviousScan
 192+ 8EFB CD 54 96         call PreviousScan
 193+ 8EFE
 194+ 8EFE              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EFE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EFE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EFE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EFE
 199+ 8EFE 18 11            jr 13F
 200+ 8F00
 201+ 8F00              ; 	Dispara Entidad.
 202+ 8F00
 203+ 8F00 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F03              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F03
 206+ 8F03              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F03              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F03
 209+ 8F03 C5               push bc
 210+ 8F04 06 10            ld b,16
 211+ 8F06 CD 45 96     12 call NextScan
 212+ 8F09 10 FB            djnz 12B
 213+ 8F0B C1               pop bc
 214+ 8F0C
 215+ 8F0C CD 3F 8F         call Ajusta_disparo_parte_derecha
 216+ 8F0F 18 06            jr 18F
 217+ 8F11
 218+ 8F11              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F11              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F11              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F11              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F11
 223+ 8F11 CD 3F 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F14 CD BB 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F17              ;                                                       ; _al generar el disparo.
 226+ 8F17
 227+ 8F17              ; LLegados a este punto tendremos:
 228+ 8F17              ;
 229+ 8F17              ;       Puntero_objeto_disparo en IY.
 230+ 8F17              ;       Rutinas_de_impresion en IX.
 231+ 8F17              ;       Puntero_de_impresion en HL.
 232+ 8F17              ;       Impacto/Dirección en BC.
 233+ 8F17
 234+ 8F17 CD 4E 8F     18 call Almacena_disparo
 235+ 8F1A 18 22            jr 6F                                               ; RET.
 236+ 8F1C
 237+ 8F1C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F1C
 239+ 8F1C 28 11        3 jr z,5F
 240+ 8F1E
 241+ 8F1E              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F1E              ;
 243+ 8F1E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F1E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F1E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F1E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F1E
 248+ 8F1E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F1E              ;	   ""        ""       "f9", B="1"
 250+ 8F1E              ;	   ""        ""       "fb", B="2"
 251+ 8F1E              ; 	   ""        ""       "fb", B="3"
 252+ 8F1E
 253+ 8F1E 2A CB 89     	ld hl,(Posicion_actual)
 254+ 8F21 CD 45 96     	call NextScan
 255+ 8F24
 256+ 8F24              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F24              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F24              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F24              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F24
 261+ 8F24 CD 46 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F27
 263+ 8F27              ; 	No se produce impacto. B="$80"
 264+ 8F27              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F27
 266+ 8F27 01 80 80         ld bc,$8080
 267+ 8F2A
 268+ 8F2A              ; 	LLegados a este punto tendremos:
 269+ 8F2A              ;
 270+ 8F2A              ;       Puntero_objeto_disparo en IY.
 271+ 8F2A              ;       Rutinas_de_impresion en IX.
 272+ 8F2A              ;       Puntero_de_impresion en HL.
 273+ 8F2A              ;       Impacto/Dirección en BC.
 274+ 8F2A
 275+ 8F2A CD 4E 8F         call Almacena_disparo
 276+ 8F2D 18 0F            jr 6F                                           ; RET.
 277+ 8F2F
 278+ 8F2F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F2F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F2F              ;
 281+ 8F2F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F2F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F2F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F2F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F2F
 286+ 8F2F 2A CB 89     5 ld hl,(Posicion_actual)
 287+ 8F32 CD 45 96     	call NextScan
 288+ 8F35
 289+ 8F35              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F35              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F35              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F35              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F35
 294+ 8F35 CD 3F 8F         call Ajusta_disparo_parte_derecha
 295+ 8F38
 296+ 8F38              ; 	No se produce impacto. B="$80"
 297+ 8F38              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F38
 299+ 8F38 01 80 80     15 ld bc,$8080
 300+ 8F3B
 301+ 8F3B              ; 	LLegados a este punto tendremos:
 302+ 8F3B              ;
 303+ 8F3B              ;       Puntero_objeto_disparo en IY.
 304+ 8F3B              ;       Rutinas_de_impresion en IX.
 305+ 8F3B              ;       Puntero_de_impresion en HL.
 306+ 8F3B              ;       Impacto/Dirección en BC.
 307+ 8F3B
 308+ 8F3B CD 4E 8F         call Almacena_disparo
 309+ 8F3E
 310+ 8F3E C9           6 ret
 311+ 8F3F
 312+ 8F3F              ; ----------------------------------------------------------------
 313+ 8F3F              ;
 314+ 8F3F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F3F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F3F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F3F
 318+ 8F3F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F40 FE 02            cp 2
 320+ 8F42 38 01            jr c,1F
 321+ 8F44 23               inc hl
 322+ 8F45 C9           1 ret
 323+ 8F46
 324+ 8F46 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F47 FE 01        	cp 1
 326+ 8F49 20 01        	jr nz,1F
 327+ 8F4B 2B           	dec hl
 328+ 8F4C 2B           1 dec hl
 329+ 8F4D C9               ret
 330+ 8F4E
 331+ 8F4E              ; ----------------------------------------------------------------
 332+ 8F4E              ;
 333+ 8F4E              ;   25/02/23
 334+ 8F4E              ;
 335+ 8F4E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F4E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F4E              ;
 338+ 8F4E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F4E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F4E
 341+ 8F4E              Almacena_disparo
 342+ 8F4E
 343+ 8F4E E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F4F F1               pop af
 345+ 8F50 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F51
 347+ 8F51 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F52 E6 01            and 1
 349+ 8F54 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F56              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F56              ; 	Dispara AMADEUS.
 352+ 8F56
 353+ 8F56              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F56              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F56              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F56              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F56
 358+ 8F56 C5               push bc
 359+ 8F57 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F5A 2A 28 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F5D A7               and a
 362+ 8F5E ED 42            sbc hl,bc
 363+ 8F60 CC FE 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F63 C1               pop bc
 365+ 8F64 28 54            jr z,4F
 366+ 8F66
 367+ 8F66 2A 28 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F69 23               inc hl
 369+ 8F6A 23               inc hl
 370+ 8F6B 22 28 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F6E              ;                                                   ; _ Disparo_(+1).
 372+ 8F6E 18 18            jr 2F
 373+ 8F70
 374+ 8F70              ; Dispara una entidad.
 375+ 8F70
 376+ 8F70 C5           1 push bc
 377+ 8F71 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F74 2A 26 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F77 A7               and a
 380+ 8F78 ED 42            sbc hl,bc
 381+ 8F7A CC F7 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F7D C1               pop bc
 383+ 8F7E 28 3A            jr z,4F
 384+ 8F80
 385+ 8F80 2A 26 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F83 23               inc hl
 387+ 8F84 23               inc hl
 388+ 8F85 22 26 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F88              ;                                                   ; _ Disparo_(+1).
 390+ 8F88 CD 35 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F8B              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F8B              ;
 393+ 8F8B              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F8B              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F8B              ;                                                     Puntero_de_impresion en HL.
 396+ 8F8B              ;                                                     Impacto/Dirección en BC.
 397+ 8F8B
 398+ 8F8B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F8C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F8D 23               inc hl                                          ; _ al siguiente.
 401+ 8F8E A7               and a
 402+ 8F8F 20 C0            jr nz,3B
 403+ 8F91
 404+ 8F91 08               ex af,af
 405+ 8F92 ED 73 1D 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F96 F9               ld sp,hl
 407+ 8F97
 408+ 8F97 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F99 F5               push af                                         ; Puntero de impresión.
 410+ 8F9A FD E5            push iy                                         ; Puntero objeto.
 411+ 8F9C C5               push bc                                         ; Control.
 412+ 8F9D
 413+ 8F9D ED 7B 1D 8A      ld sp,(Stack)
 414+ 8FA1
 415+ 8FA1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FA1
 417+ 8FA1 21 0C 8A     	ld hl,Ctrl_1
 418+ 8FA4 CB C6        	set 0,(hl)
 419+ 8FA6
 420+ 8FA6 DD E5        	push ix
 421+ 8FA8 E1               pop hl
 422+ 8FA9 F5               push af
 423+ 8FAA DD E1            pop ix
 424+ 8FAC
 425+ 8FAC CD A0 7F     	call Guarda_foto_registros
 426+ 8FAF
 427+ 8FAF 21 0C 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FB2 CB 86        	res 0,(hl)
 429+ 8FB4
 430+ 8FB4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FB4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FB4
 433+ 8FB4 CD FE 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FB7 CD F7 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FBA
 436+ 8FBA C9           4 ret
 437+ 8FBB
 438+ 8FBB              ; ----------------------------------------------------------------
 439+ 8FBB              ;
 440+ 8FBB              ;   4/3/23
 441+ 8FBB              ;
 442+ 8FBB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FBB              ;   _ al generarse el disparo.
 444+ 8FBB              ;
 445+ 8FBB              ;       "$80" ..... No se produce colisión.
 446+ 8FBB              ;       "$81" ..... Se produce colisión.
 447+ 8FBB              ;
 448+ 8FBB              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FBB              ;         _ que forman el disparo.
 450+ 8FBB
 451+ 8FBB
 452+ 8FBB              Comprueba_Colision
 453+ 8FBB
 454+ 8FBB              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FBB
 456+ 8FBB FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FBD E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FBE
 459+ 8FBE CD F4 8F         call Modifica_H_Velocidad_disparo
 460+ 8FC1
 461+ 8FC1 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FC2 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FC4 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FC6
 465+ 8FC6 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FC8 CD E4 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FCB
 468+ 8FCB 7B               ld a,e
 469+ 8FCC E6 01            and 1
 470+ 8FCE 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FD0              ;                                                  ; _ para activar IMPACTO.
 472+ 8FD0 E1               pop hl
 473+ 8FD1 E5               push hl
 474+ 8FD2 CD 45 96         call NextScan
 475+ 8FD5
 476+ 8FD5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FD6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FD8 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FDA              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FDA 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FDC CD E4 8F         call Bucle_2
 482+ 8FDF
 483+ 8FDF 43           1 ld b,e
 484+ 8FE0 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FE1 FD E1            pop iy
 486+ 8FE3 C9               ret
 487+ 8FE4
 488+ 8FE4              ; ---------- ----------
 489+ 8FE4
 490+ 8FE4 06 02        Bucle_2 ld b,2
 491+ 8FE6 FD 7E 00     2 ld a,(iy)
 492+ 8FE9 A6               and (hl)
 493+ 8FEA 28 02            jr z,1F
 494+ 8FEC 1E 81            ld e,$81
 495+ 8FEE 23           1 inc hl
 496+ 8FEF FD 23            inc iy
 497+ 8FF1 10 F3            djnz 2B
 498+ 8FF3 C9               ret
 499+ 8FF4
 500+ 8FF4              ; ---------- ----------
 501+ 8FF4              ;
 502+ 8FF4              ;   21/7/23
 503+ 8FF4
 504+ 8FF4              Modifica_H_Velocidad_disparo
 505+ 8FF4
 506+ 8FF4 3A 37 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FF7 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FF9 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FFA 24               inc h
 510+ 8FFB
 511+ 8FFB C9               ret
 512+ 8FFC
 513+ 8FFC              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FFC              ;
 515+ 8FFC              ;   11/04/23
 516+ 8FFC              ;
 517+ 8FFC              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FFC              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FFC              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FFC              ;
 521+ 8FFC              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FFC
 523+ 8FFC              Compara_coordenadas_X
 524+ 8FFC
 525+ 8FFC              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FFC              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FFC
 528+ 8FFC              ; Preparamos registros:
 529+ 8FFC
 530+ 8FFC 21 CF 89         ld hl,Filas+6
 531+ 8FFF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9000 23               inc hl
 533+ 9001 23               inc hl
 534+ 9002 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9003 43               ld b,e
 536+ 9004
 537+ 9004 21 DD 89         ld hl,Filas+20
 538+ 9007 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9008 21 32 8A         ld hl,Coordenadas_X_Entidad
 540+ 900B CD 27 92         call Guarda_coordenadas_X
 541+ 900E
 542+ 900E              ; Preparamos registros:
 543+ 900E
 544+ 900E 21 8A 85         ld hl,Amadeus_db+6
 545+ 9011 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9012 23               inc hl
 547+ 9013 23               inc hl
 548+ 9014 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9015 7B               ld a,e
 550+ 9016 08               ex af,af'
 551+ 9017 21 98 85         ld hl,Amadeus_db+20
 552+ 901A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 901B 21 2F 8A         ld hl,Coordenadas_X_Amadeus
 554+ 901E CD 27 92         call Guarda_coordenadas_X
 555+ 9021
 556+ 9021              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9021              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9021
 559+ 9021 04               inc b
 560+ 9022 05               dec b
 561+ 9023 28 04            jr z,1F
 562+ 9025 06 03            ld b,3
 563+ 9027 18 02            jr 2F
 564+ 9029 06 02        1 ld b,2
 565+ 902B 08           2 ex af,af'
 566+ 902C 3C               inc a
 567+ 902D 3D               dec a
 568+ 902E 28 04            jr z,5F
 569+ 9030 0E 03            ld c,3
 570+ 9032 18 02            jr 6F
 571+ 9034 0E 02        5 ld c,2
 572+ 9036 79           6 ld a,c
 573+ 9037 08               ex af,af'
 574+ 9038 11 32 8A         ld de,Coordenadas_X_Entidad
 575+ 903B 1A           4 ld a,(de)
 576+ 903C 21 2F 8A         ld hl,Coordenadas_X_Amadeus
 577+ 903F BE           3 cp (hl)
 578+ 9040 28 0E            jr z,7F
 579+ 9042 23               inc hl
 580+ 9043 0D               dec c
 581+ 9044 20 F9            jr nz,3B
 582+ 9046 13               inc de
 583+ 9047 08               ex af,af'
 584+ 9048 4F               ld c,a
 585+ 9049 08               ex af,af'
 586+ 904A 10 EF            djnz 4B
 587+ 904C
 588+ 904C              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 904C
 590+ 904C CD 63 92     8 call Limpia_Coordenadas_X
 591+ 904F C9               ret
 592+ 9050
 593+ 9050 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9052 32 E2 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9055 21 2A 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9058 CB D6            set 2,(hl)
 597+ 905A 18 F0            jr 8B
 598+ 905C
 599+ 905C              ; -----------------------------------------------------------------------
 600+ 905C              ;
 601+ 905C              ;   17/04/23
 602+ 905C              ;
 603+ 905C
 604+ 905C              Detecta_colision_nave_entidad
 605+ 905C
 606+ 905C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 905C
 608+ 905C 2A CB 89         ld hl,(Posicion_actual)
 609+ 905F CD A0 95         call Calcula_puntero_de_impresion
 610+ 9062
 611+ 9062              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9062              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9062
 614+ 9062 DD E5            push ix
 615+ 9064 E1               pop hl
 616+ 9065 E5               push hl
 617+ 9066
 618+ 9066              ; ----- ----- -----
 619+ 9066 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9068 06 0A            ld b,10
 621+ 906A CD 9A 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 906D 7B               ld a,e
 623+ 906E FE 05            cp 5
 624+ 9070 38 0E            jr c,3F
 625+ 9072
 626+ 9072              ; LLegados a este punto:
 627+ 9072              ;
 628+ 9072              ;   HAY COLISIÓN !!!!!.
 629+ 9072              ;
 630+ 9072              ;   .db (Impacto) de Amadeus a "1".
 631+ 9072              ;   SET el bit3 de (Impacto2).
 632+ 9072              ;
 633+ 9072              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9072
 635+ 9072 21 9D 85         ld hl,Amadeus_db+25
 636+ 9075 36 01            ld (hl),1
 637+ 9077 21 2A 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 907A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 907C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 907E 18 18            jr 1F
 641+ 9080
 642+ 9080              ; -----
 643+ 9080
 644+ 9080 E1           3 pop hl
 645+ 9081 CD 45 96         call NextScan
 646+ 9084 E5               push hl
 647+ 9085 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9086 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9088 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 908A 30 0C            jr nc,1F
 651+ 908C              ;                                                  ; _ 2º scanline si esto es así.
 652+ 908C 10 DC            djnz 2B
 653+ 908E
 654+ 908E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 908E
 656+ 908E              ; LLegados a este punto:
 657+ 908E              ;
 658+ 908E              ;   NO HAY COLISIÓN !!!!!.
 659+ 908E              ;
 660+ 908E              ;   .db (Impacto) de Amadeus a "0".
 661+ 908E              ;   RES el bit2 de (Impacto2).
 662+ 908E              ;
 663+ 908E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 908E              ;   Lo colocamos a "0".
 665+ 908E
 666+ 908E 21 2A 8A         ld hl,Impacto2
 667+ 9091 CB 96            res 2,(hl)
 668+ 9093 2A 2B 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9096 36 00            ld (hl),0
 670+ 9098
 671+ 9098 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9099 C9               ret
 673+ 909A
 674+ 909A               ; ---------- ----------
 675+ 909A
 676+ 909A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 909B 3A CA 89         ld a,(Columns)
 678+ 909E 47               ld b,a
 679+ 909F FD 7E 00     2 ld a,(iy)
 680+ 90A2 BE               cp (hl)
 681+ 90A3 28 01            jr z,1F
 682+ 90A5
 683+ 90A5 1C               inc e
 684+ 90A6
 685+ 90A6 23           1 inc hl
 686+ 90A7 FD 23            inc iy
 687+ 90A9 10 F4            djnz 2B
 688+ 90AB C1               pop bc
 689+ 90AC C9               ret
 690+ 90AD
 691+ 90AD              ; -------------------------------------------------------------------------------------------------------------
 692+ 90AD              ;
 693+ 90AD              ;   13/03/23
 694+ 90AD              ;
 695+ 90AD              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90AD              ;
 697+ 90AD              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90AD
 699+ 90AD 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90B0 7E               ld a,(hl)
 701+ 90B1 A7               and a
 702+ 90B2 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90B3
 704+ 90B3 44               ld b,h
 705+ 90B4 4D               ld c,l
 706+ 90B5 2A 23 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90B8 E5               push hl
 708+ 90B9 A7               and a
 709+ 90BA ED 42            sbc hl,bc
 710+ 90BC E5               push hl
 711+ 90BD C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90BE
 713+ 90BE E1               pop hl
 714+ 90BF 54               ld d,h
 715+ 90C0 5D               ld e,l
 716+ 90C1 1B               dec de
 717+ 90C2 ED B8            lddr                                                ; Limpiamos.
 718+ 90C4
 719+ 90C4 21 85 70         ld hl,Album_de_fotos_disparos
 720+ 90C7 22 23 8A         ld (Stack_snapshot_disparos),hl
 721+ 90CA
 722+ 90CA C9               ret
 723+ 90CB
 724+ 90CB              ; -------------------------------------------------------------------------------------------------------------
 725+ 90CB              ;
 726+ 90CB              ;   18/07/23
 727+ 90CB              ;
 728+ 90CB
 729+ 90CB              Motor_de_disparos
 730+ 90CB
 731+ 90CB              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90CB
 733+ 90CB 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90CE 2A 28 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90D1
 736+ 90D1 CD 35 8D     2 call Extrae_address
 737+ 90D4 7E               ld a,(hl)
 738+ 90D5 A7               and a
 739+ 90D6 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90D8
 741+ 90D8              ; ----- ----- ----- ----- ----- -----
 742+ 90D8
 743+ 90D8 C5               push bc
 744+ 90D9 CD 9D 91         call foto_disparo_a_borrar
 745+ 90DC
 746+ 90DC              ; Existe colisión con este disparo???
 747+ 90DC
 748+ 90DC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90DD 7E               ld a,(hl)
 750+ 90DE 2B               dec hl
 751+ 90DF E6 01            and 1
 752+ 90E1 28 1D            jr z,9F
 753+ 90E3
 754+ 90E3              ;   En este punto:
 755+ 90E3              ;
 756+ 90E3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90E3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90E3              ;   _con la entidad).
 759+ 90E3              ;
 760+ 90E3              ;   Disparo_2A defw 0                                ; Control.
 761+ 90E3              ;    defw 0                                          ; Puntero objeto.
 762+ 90E3              ;    defw 0                                          ; Puntero de impresión.
 763+ 90E3              ;    defw 0                                          ; Rutina de impresión.
 764+ 90E3
 765+ 90E3 E5               push hl
 766+ 90E4
 767+ 90E4 06 04            ld b,4
 768+ 90E6 23           19 inc hl
 769+ 90E7 10 FD            djnz 19B
 770+ 90E9
 771+ 90E9 CD 35 8D         call Extrae_address
 772+ 90EC CD BB 9C         call Genera_coordenadas_disparo
 773+ 90EF
 774+ 90EF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90EF
 776+ 90EF 21 2D 8A         ld hl,Coordenadas_disparo_certero
 777+ 90F2 72               ld (hl),d
 778+ 90F3 23               inc hl
 779+ 90F4 73               ld (hl),e
 780+ 90F5
 781+ 90F5              ; Elimino el disparo de la base de datos.
 782+ 90F5
 783+ 90F5 E1               pop hl
 784+ 90F6 CD 1C 92         call Elimina_disparo_de_base_de_datos
 785+ 90F9 21 2A 8A         ld hl,Impacto2
 786+ 90FC CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90FE
 788+ 90FE 18 06            jr 11F
 789+ 9100
 790+ 9100 CD C6 91     9 call Mueve_disparo
 791+ 9103 CD 9D 91         call foto_disparo_a_borrar
 792+ 9106
 793+ 9106 C1           11 pop bc
 794+ 9107 18 04            jr 7F
 795+ 9109
 796+ 9109              ; ----- ----- ----- ----- ----- -----
 797+ 9109
 798+ 9109 ED 42        1 sbc hl,bc
 799+ 910B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 910D
 801+ 910D 2A 28 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9110 23               inc hl
 803+ 9111 23               inc hl
 804+ 9112 22 28 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9115 18 BA            jr 2B
 806+ 9117
 807+ 9117 CD FE 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 911A              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 911A
 810+ 911A              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 911A
 812+ 911A 01 6A 85         ld bc,Disparo_11
 813+ 911D 2A 26 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9120
 815+ 9120 CD 35 8D     5 call Extrae_address
 816+ 9123 7E               ld a,(hl)
 817+ 9124 A7               and a
 818+ 9125 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9127
 820+ 9127              ; ----- ----- ----- ----- ----- -----
 821+ 9127
 822+ 9127 C5               push bc
 823+ 9128 CD 9D 91         call foto_disparo_a_borrar
 824+ 912B
 825+ 912B              ; Existe colisión con este disparo???
 826+ 912B
 827+ 912B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 912C 7E               ld a,(hl)
 829+ 912D 2B               dec hl
 830+ 912E E6 01            and 1
 831+ 9130 28 4D            jr z,10F
 832+ 9132
 833+ 9132              ;! La colisión se produce con Amadeus???
 834+ 9132              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9132
 836+ 9132 E5               push hl
 837+ 9133
 838+ 9133 06 04            ld b,4
 839+ 9135 23           16 inc hl
 840+ 9136 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9138
 842+ 9138 CD 35 8D         call Extrae_address
 843+ 913B CD BB 9C         call Genera_coordenadas_disparo
 844+ 913E
 845+ 913E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 913F FE 16            cp $16
 847+ 9141 38 2A            jr c,15F
 848+ 9143
 849+ 9143
 850+ 9143              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9143
 852+ 9143 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9144
 854+ 9144              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9144
 856+ 9144
 857+ 9144 2A 35 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9147
 859+ 9147              ; Coordenada X de Amadeus en D.
 860+ 9147
 861+ 9147 7D               ld a,l
 862+ 9148 E6 1F            and $1F
 863+ 914A 57               ld d,a
 864+ 914B
 865+ 914B 21 8C 85         ld hl,Amadeus_db+8
 866+ 914E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 914F
 868+ 914F 21 2F 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9152 CD 27 92         call Guarda_coordenadas_X
 870+ 9155
 871+ 9155 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9156
 873+ 9156              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9156
 875+ 9156 06 02            ld b,2
 876+ 9158 C5           20 push bc
 877+ 9159
 878+ 9159 06 03            ld b,3
 879+ 915B 21 2F 8A         ld hl,Coordenadas_X_Amadeus
 880+ 915E 7E           18 ld a,(hl)
 881+ 915F BA               cp d
 882+ 9160 20 04            jr nz,17F
 883+ 9162
 884+ 9162              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9162
 886+ 9162 C1               pop bc
 887+ 9163 E1               pop hl
 888+ 9164 18 0D            jr 14F
 889+ 9166
 890+ 9166 23           17 inc hl
 891+ 9167 10 F5            djnz 18B
 892+ 9169
 893+ 9169 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 916A
 895+ 916A C1               pop bc
 896+ 916B 10 EB            djnz 20B
 897+ 916D
 898+ 916D
 899+ 916D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 916D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 916D
 902+ 916D E1           15 pop hl
 903+ 916E 23               inc hl
 904+ 916F 35               dec (hl)
 905+ 9170 2B               dec hl
 906+ 9171 18 0C            jr 10F
 907+ 9173
 908+ 9173              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9173              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9173
 911+ 9173 E5           14 push hl
 912+ 9174 CD 1C 92         call Elimina_disparo_de_base_de_datos
 913+ 9177 21 2A 8A         ld hl,Impacto2
 914+ 917A CB CE            set 1,(hl)
 915+ 917C E1               pop hl
 916+ 917D 18 06            jr 12F
 917+ 917F
 918+ 917F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 917F
 920+ 917F CD C6 91     10 call Mueve_disparo
 921+ 9182 CD 9D 91         call foto_disparo_a_borrar
 922+ 9185 C1           12 pop bc
 923+ 9186
 924+ 9186 18 04            jr 8F
 925+ 9188
 926+ 9188              ; ----- ----- ----- ----- ----- -----
 927+ 9188
 928+ 9188 ED 42        4 sbc hl,bc
 929+ 918A 28 0A            jr z,6F
 930+ 918C
 931+ 918C 2A 26 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 918F 23               inc hl
 933+ 9190 23               inc hl
 934+ 9191 22 26 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9194 18 8A            jr 5B
 936+ 9196
 937+ 9196 CD F7 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9199 CD 63 92         call Limpia_Coordenadas_X
 939+ 919C C9               ret
 940+ 919D
 941+ 919D              ; ------------------------------------------------------------------
 942+ 919D
 943+ 919D              foto_disparo_a_borrar
 944+ 919D
 945+ 919D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 919E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 919F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91A0
 949+ 91A0 E5               push hl
 950+ 91A1 23               inc hl
 951+ 91A2 23               inc hl
 952+ 91A3 ED 73 1D 8A      ld (Stack),sp
 953+ 91A7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91A8 FD E1            pop iy
 955+ 91AA DD E1            pop ix
 956+ 91AC E1               pop hl
 957+ 91AD ED 7B 1D 8A      ld sp,(Stack)
 958+ 91B1 3A 0C 8A         ld a,(Ctrl_1)
 959+ 91B4 CB C7            set 0,a
 960+ 91B6 32 0C 8A         ld (Ctrl_1),a
 961+ 91B9 CD A0 7F         call Guarda_foto_registros
 962+ 91BC 3A 0C 8A         ld a,(Ctrl_1)
 963+ 91BF CB 87            res 0,a
 964+ 91C1 32 0C 8A         ld (Ctrl_1),a
 965+ 91C4 E1               pop hl
 966+ 91C5 C9               ret
 967+ 91C6
 968+ 91C6              ;---------------------------------------------------
 969+ 91C6              ;
 970+ 91C6              ;   18/07/23
 971+ 91C6              ;
 972+ 91C6
 973+ 91C6              Mueve_disparo
 974+ 91C6
 975+ 91C6              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91C6              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91C6              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91C6
 979+ 91C6 E5               push hl
 980+ 91C7
 981+ 91C7 7E               ld a,(hl)
 982+ 91C8
 983+ 91C8 06 04            ld b,4
 984+ 91CA 23           1 inc hl
 985+ 91CB 10 FD            djnz 1B
 986+ 91CD
 987+ 91CD              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91CD
 989+ 91CD CD 35 8D         call Extrae_address
 990+ 91D0
 991+ 91D0 E6 01            and 1
 992+ 91D2 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91D4
 994+ 91D4              ; Disparo hacia arriba, (Amadeus).
 995+ 91D4
 996+ 91D4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91D4              ; _ de la dificultad.
 998+ 91D4
 999+ 91D4 CD 54 96         call PreviousScan
1000+ 91D7 CD 54 96         call PreviousScan
1001+ 91DA CD 54 96         call PreviousScan
1002+ 91DD CD 54 96         call PreviousScan
1003+ 91E0
1004+ 91E0              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91E0
1006+ 91E0 7C               ld a,h
1007+ 91E1 FE 40            cp $40
1008+ 91E3 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91E5
1010+ 91E5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91E5
1012+ 91E5 EB               ex de,hl
1013+ 91E6 06 04            ld b,4
1014+ 91E8 2B           6 dec hl
1015+ 91E9 10 FD            djnz 6B
1016+ 91EB
1017+ 91EB CD 1C 92         call Elimina_disparo_de_base_de_datos
1018+ 91EE E1               pop hl
1019+ 91EF 18 10            jr 7F
1020+ 91F1
1021+ 91F1              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91F1              ; HL contiene el puntero de impresión del disparo.
1023+ 91F1              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91F1
1025+ 91F1 D5           3 push de
1026+ 91F2 C5               push bc
1027+ 91F3
1028+ 91F3 CD BB 8F         call Comprueba_Colision
1029+ 91F6
1030+ 91F6              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91F6
1032+ 91F6 78               ld a,b
1033+ 91F7
1034+ 91F7 C1               pop bc
1035+ 91F8 D1               pop de
1036+ 91F9
1037+ 91F9 EB               ex de,hl
1038+ 91FA
1039+ 91FA 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91FB 23               inc hl                                      ; _ movimiento.
1041+ 91FC 72               ld (hl),d
1042+ 91FD
1043+ 91FD E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91FE
1045+ 91FE 23               inc hl                                      ; _ en curso.
1046+ 91FF 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9200 2B               dec hl
1048+ 9201
1049+ 9201 C9           7 ret
1050+ 9202
1051+ 9202              ; Disparo hacia abajo, (Entidad).
1052+ 9202
1053+ 9202 3A 37 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9205 47               ld b,a
1055+ 9206
1056+ 9206 CD 45 96     4 call NextScan
1057+ 9209 10 FB            djnz 4B
1058+ 920B
1059+ 920B              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 920B
1061+ 920B 7C               ld a,h
1062+ 920C FE 58            cp $58
1063+ 920E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9210
1065+ 9210 EB               ex de,hl
1066+ 9211 06 04            ld b,4
1067+ 9213 2B           5 dec hl
1068+ 9214 10 FD            djnz 5B
1069+ 9216
1070+ 9216 CD 1C 92         call Elimina_disparo_de_base_de_datos
1071+ 9219 E1               pop hl
1072+ 921A 18 E5            jr 7B
1073+ 921C
1074+ 921C              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 921C
1076+ 921C 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 921F AF               xor a
1078+ 9220 77               ld (hl),a
1079+ 9221 54               ld d,h
1080+ 9222 5D               ld e,l
1081+ 9223 13               inc de
1082+ 9224 ED B0            ldir
1083+ 9226 C9               ret
1084+ 9227
1085+ 9227              ; -----------------------------------------------------------------
1086+ 9227              ;
1087+ 9227              ;   19/7/23
1088+ 9227              ;
1089+ 9227              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9227              ;
1091+ 9227              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9227              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9227              ;
1094+ 9227              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9227              ;
1096+ 9227              ;   INPUTS:
1097+ 9227              ;
1098+ 9227              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9227              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9227
1101+ 9227              ;   MODIFICA: A, HL, BC y DE.
1102+ 9227
1103+ 9227              Guarda_coordenadas_X
1104+ 9227
1105+ 9227 7B               ld a,e
1106+ 9228 A7               and a
1107+ 9229 20 04            jr nz,1F
1108+ 922B
1109+ 922B 06 02            ld b,2
1110+ 922D 18 02            jr 2F
1111+ 922F
1112+ 922F 06 03        1 ld b,3
1113+ 9231 72           2 ld (hl),d
1114+ 9232 23               inc hl
1115+ 9233 14               inc d
1116+ 9234 10 FB            djnz 2B
1117+ 9236
1118+ 9236 C9               ret
1119+ 9237
1120+ 9237              ; -----------------------------------------------------------------
1121+ 9237              ;
1122+ 9237              ;   12/04/23
1123+ 9237              ;
1124+ 9237
1125+ 9237 3A 2A 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 923A A7               and a
1127+ 923B C8               ret z
1128+ 923C
1129+ 923C FE 04            cp 4
1130+ 923E 20 09            jr nz,1F
1131+ 9240
1132+ 9240
1133+ 9240              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9240
1135+ 9240 CD 5C 90         call Detecta_colision_nave_entidad
1136+ 9243
1137+ 9243 21 2A 8A         ld hl,Impacto2
1138+ 9246 CB 5E            bit 3,(hl)
1139+ 9248 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9249
1141+ 9249              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9249              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9249
1144+ 9249 21 2A 8A     1 ld hl,Impacto2
1145+ 924C CB 4E            bit 1,(hl)
1146+ 924E 28 07            jr z,2F
1147+ 9250
1148+ 9250 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9253 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9255 18 0B            jr 3F
1151+ 9257
1152+ 9257 21 2A 8A     2 ld hl,Impacto2
1153+ 925A CB 46            bit 0,(hl)
1154+ 925C C8               ret z
1155+ 925D
1156+ 925D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 925D
1158+ 925D 21 0C 8A         ld hl,Ctrl_1
1159+ 9260 CB D6            set 2,(hl)
1160+ 9262
1161+ 9262 C9           3 ret
1162+ 9263
1163+ 9263              ; -----------------------------------------------------------------
1164+ 9263              ;
1165+ 9263              ;   19/7/23
1166+ 9263              ;
1167+ 9263              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9263
1169+ 9263 AF           Limpia_Coordenadas_X xor a
1170+ 9264 06 06            ld b,6
1171+ 9266 21 2F 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9269 77           1 ld (hl),a
1173+ 926A 23               inc hl
1174+ 926B 10 FC            djnz 1B
1175+ 926D C9               ret
1176+ 926E
1177+ 926E              ; -----------------------------------------------------------------
1178+ 926E              ;
1179+ 926E              ;   25/04/23
1180+ 926E              ;
1181+ 926E
1182+ 926E              Determina_resultado_comparativa
1183+ 926E
1184+ 926E              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 926E              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 926E              ;
1187+ 926E              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 926E              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 926E              ;
1190+ 926E              ;   SBC HL,DE
1191+ 926E
1192+ 926E              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 926E              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 926E
1195+ 926E              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 926E              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 926E
1198+ 926E
1199+ 926E 3A DD 89         ld a,(Cuad_objeto)
1200+ 9271 FE 02            cp 2
1201+ 9273 28 26            jr z,2F
1202+ 9275 38 24            jr c,2F
1203+ 9277
1204+ 9277              ; Cuadrantes 3º y 4º
1205+ 9277
1206+ 9277 E6 01            and 1
1207+ 9279 28 10            jr z,4F
1208+ 927B
1209+ 927B              ; Cuadrante 3º
1210+ 927B
1211+ 927B 7C               ld a,h
1212+ 927C 06 00            ld b,0
1213+ 927E
1214+ 927E CD 09 93         call Compara_cositas_H3
1215+ 9281
1216+ 9281 04               inc b
1217+ 9282 05               dec b
1218+ 9283 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9284
1220+ 9284 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9285 06 00            ld b,0
1222+ 9287
1223+ 9287 CD 1B 93         call Compara_cositas_L3
1224+ 928A C9               ret
1225+ 928B
1226+ 928B              ; Cuadrante 4º
1227+ 928B
1228+ 928B 7C           4 ld a,h
1229+ 928C 06 00            ld b,0
1230+ 928E
1231+ 928E CD 2D 93         call Compara_cositas_H4
1232+ 9291
1233+ 9291 04               inc b
1234+ 9292 05               dec b
1235+ 9293 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9294
1237+ 9294 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9295 06 00            ld b,0
1239+ 9297
1240+ 9297 CD 43 93         call Compara_cositas_L4
1241+ 929A C9               ret
1242+ 929B
1243+ 929B              ; Cuadrantes 1º y 2º.
1244+ 929B
1245+ 929B 28 10        2 jr z,3F
1246+ 929D
1247+ 929D              ; 1er Cuadrante
1248+ 929D
1249+ 929D 7C               ld a,h
1250+ 929E 06 00            ld b,0
1251+ 92A0
1252+ 92A0 CD E1 92         call Compara_cositas_H1
1253+ 92A3
1254+ 92A3 04               inc b
1255+ 92A4 05               dec b
1256+ 92A5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92A6
1258+ 92A6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92A7 06 00            ld b,0
1260+ 92A9
1261+ 92A9 CD F7 92         call Compara_cositas_L1
1262+ 92AC C9               ret
1263+ 92AD
1264+ 92AD
1265+ 92AD              ; 2º Cuadrante
1266+ 92AD
1267+ 92AD 7C           3 ld a,h
1268+ 92AE 06 00            ld b,0
1269+ 92B0
1270+ 92B0 CD BD 92         call Compara_cositas_H2
1271+ 92B3
1272+ 92B3 04               inc b
1273+ 92B4 05               dec b
1274+ 92B5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92B6
1276+ 92B6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92B7 06 00            ld b,0
1278+ 92B9
1279+ 92B9 CD CF 92         call Compara_cositas_L2
1280+ 92BC C9               ret
1281+ 92BD
1282+ 92BD A7           Compara_cositas_H2 and a
1283+ 92BE 28 0D            jr z,1F
1284+ 92C0              ;    cp $fd
1285+ 92C0              ;    jr z,1F
1286+ 92C0              ;    cp $fe
1287+ 92C0              ;    jr z,1F
1288+ 92C0 FE FF            cp $ff
1289+ 92C2 28 09            jr z,1F
1290+ 92C4 FE 01            cp $01
1291+ 92C6 28 05            jr z,1F
1292+ 92C8 FE 02            cp $02
1293+ 92CA 28 01            jr z,1F
1294+ 92CC C0               ret nz
1295+ 92CD 04           1 inc b
1296+ 92CE C9               ret
1297+ 92CF
1298+ 92CF A7           Compara_cositas_L2 and a
1299+ 92D0 28 0D            jr z,1F
1300+ 92D2              ;    cp $fd
1301+ 92D2              ;    jr z,1F
1302+ 92D2 FE FE            cp $fe
1303+ 92D4 28 09            jr z,1F
1304+ 92D6 FE FF            cp $ff
1305+ 92D8 28 05            jr z,1F
1306+ 92DA FE 01            cp $01
1307+ 92DC 28 01            jr z,1F
1308+ 92DE              ;    cp $02
1309+ 92DE              ;    jr z,1F
1310+ 92DE C0               ret nz
1311+ 92DF 04           1 inc b
1312+ 92E0 C9               ret
1313+ 92E1
1314+ 92E1 A7           Compara_cositas_H1 and a
1315+ 92E2 28 11            jr z,1F
1316+ 92E4              ;    cp $fd
1317+ 92E4              ;    jr z,1F
1318+ 92E4              ;    cp $fe
1319+ 92E4              ;    jr z,1F
1320+ 92E4 FE FF            cp $ff
1321+ 92E6 28 0D            jr z,1F
1322+ 92E8 FE 01            cp $01
1323+ 92EA 28 09            jr z,1F
1324+ 92EC FE 02            cp $02
1325+ 92EE 28 05            jr z,1F
1326+ 92F0 FE 03            cp $03
1327+ 92F2 28 01            jr z,1F
1328+ 92F4 C0               ret nz
1329+ 92F5 04           1 inc b
1330+ 92F6 C9               ret
1331+ 92F7
1332+ 92F7 A7           Compara_cositas_L1 and a
1333+ 92F8 28 0D            jr z,1F
1334+ 92FA              ;    cp $fd
1335+ 92FA              ;    jr z,1F
1336+ 92FA              ;    cp $fe
1337+ 92FA              ;    jr z,1F
1338+ 92FA              ;    cp $ff
1339+ 92FA              ;    jr z,1F
1340+ 92FA FE 01            cp $01
1341+ 92FC 28 09            jr z,1F
1342+ 92FE FE 02            cp $02
1343+ 9300 28 05            jr z,1F
1344+ 9302 FE 03            cp $03
1345+ 9304 28 01            jr z,1F
1346+ 9306 C0               ret nz
1347+ 9307 04           1 inc b
1348+ 9308 C9               ret
1349+ 9309
1350+ 9309 A7           Compara_cositas_H3 and a
1351+ 930A 28 0D            jr z,1F
1352+ 930C              ;    cp $fd
1353+ 930C              ;    jr z,1F
1354+ 930C FE FE            cp $fe
1355+ 930E 28 09            jr z,1F
1356+ 9310 FE FF            cp $ff
1357+ 9312 28 05            jr z,1F
1358+ 9314 FE 01            cp $01
1359+ 9316 28 01            jr z,1F
1360+ 9318              ;    cp $02
1361+ 9318              ;    jr z,1F
1362+ 9318              ;    cp $03
1363+ 9318              ;    jr z,1F
1364+ 9318 C0               ret nz
1365+ 9319 04           1 inc b
1366+ 931A C9               ret
1367+ 931B
1368+ 931B A7           Compara_cositas_L3 and a
1369+ 931C 28 0D            jr z,1F
1370+ 931E              ;    cp $fd
1371+ 931E              ;    jr z,1F
1372+ 931E              ;    cp $fe
1373+ 931E              ;    jr z,1F
1374+ 931E              ;    cp $ff
1375+ 931E              ;    jr z,1F
1376+ 931E FE 01            cp $01
1377+ 9320 28 09            jr z,1F
1378+ 9322 FE 02            cp $02
1379+ 9324 28 05            jr z,1F
1380+ 9326 FE 03            cp $03
1381+ 9328 28 01            jr z,1F
1382+ 932A C0               ret nz
1383+ 932B 04           1 inc b
1384+ 932C C9               ret
1385+ 932D
1386+ 932D A7           Compara_cositas_H4 and a
1387+ 932E 28 11            jr z,1F
1388+ 9330 FE FD            cp $fd
1389+ 9332 28 0D            jr z,1F
1390+ 9334 FE FE            cp $fe
1391+ 9336 28 09            jr z,1F
1392+ 9338 FE FF            cp $ff
1393+ 933A 28 05            jr z,1F
1394+ 933C FE 01            cp $01
1395+ 933E 28 01            jr z,1F
1396+ 9340              ;    cp $02
1397+ 9340              ;    jr z,1F
1398+ 9340              ;    cp $03
1399+ 9340              ;    jr z,1F
1400+ 9340 C0               ret nz
1401+ 9341 04           1 inc b
1402+ 9342 C9               ret
1403+ 9343
1404+ 9343 A7           Compara_cositas_L4 and a
1405+ 9344 28 0D            jr z,1F
1406+ 9346              ;    cp $fd
1407+ 9346              ;    jr z,1F
1408+ 9346 FE FE            cp $fe
1409+ 9348 28 09            jr z,1F
1410+ 934A FE FF            cp $ff
1411+ 934C 28 05            jr z,1F
1412+ 934E FE 01            cp $01
1413+ 9350 28 01            jr z,1F
1414+ 9352              ;    cp $02
1415+ 9352              ;    jr z,1F
1416+ 9352              ;    cp $03
1417+ 9352              ;    jr z,1F
1418+ 9352 C0               ret nz
1419+ 9353 04           1 inc b
1420+ 9354 C9               ret
# file closed: Disparo.asm
1270  9355              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9355              ; ******************************************************************************************************************************************************************************************
   2+ 9355              ;
   3+ 9355              ; 26/06/23
   4+ 9355              ;
   5+ 9355              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9355
   7+ 9355 CD 39 96     Draw call Prepara_draw
   8+ 9358 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9359 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 935A 28 05        	jr z,2F
  11+ 935C
  12+ 935C 3A DD 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 935F 18 0C        	jr 1F
  14+ 9361
  15+ 9361 2A DB 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9364 22 CB 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9367 CD F6 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 936A              ;													; _la esquina superior izquierda de la pantalla.
  19+ 936A CD 37 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 936D
  21+ 936D 3A F7 89     1 ld a,(Ctrl_0)
  22+ 9370 CB 6F        	bit 5,a
  23+ 9372 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9374
  25+ 9374 CD 8C 93     	call Comprueba_limite_horizontal
  26+ 9377 CD 1C 94     	call Comprueba_limite_vertical
  27+ 937A
  28+ 937A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 937A              ; -----------------------
  30+ 937A              ; -----------------------
  31+ 937A              ; -----------------------
  32+ 937A
  33+ 937A CD 69 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 937D CD A0 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9380 CD FF 95     	call Define_rutina_de_impresion
  36+ 9383
  37+ 9383 3A F7 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9386 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9388 32 F7 89     	ld (Ctrl_0),a
  40+ 938B
  41+ 938B C9           	ret
  42+ 938C
  43+ 938C              ; *******************************************************************************************************************************************************************************************
  44+ 938C              ;	21/01/23
  45+ 938C              ;
  46+ 938C              ; 	Comprueba_limite_horizontal.
  47+ 938C              ;
  48+ 938C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 938C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 938C              ;
  51+ 938C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 938C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 938C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 938C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 938C
  56+ 938C
  57+ 938C
  58+ 938C 3A F7 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 938F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9391 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9393 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9395 32 F7 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9398 18 09            jr 6F
  64+ 939A CB 5F        1 bit 3,a
  65+ 939C 28 0A            jr z,2F
  66+ 939E E6 F7            and $f7
  67+ 93A0 32 F7 89         ld (Ctrl_0),a
  68+ 93A3 CD F6 94     6 call Inicializacion
  69+ 93A6 18 5B            jr 5F
  70+ 93A8 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93A9
  72+ 93A9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93A9              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93A9
  75+ 93A9 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93AA 2A 07 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93AD CD 05 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93B0 67           	ld h,a
  79+ 93B1 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93B2 CD 05 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93B5 67           	ld h,a
  82+ 93B6 A7           	and a
  83+ 93B7 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93B9 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93BA 3A DD 89     	ld a,(Cuad_objeto)
  86+ 93BD FE 02        	cp 2
  87+ 93BF 38 1E        	jr c,3F
  88+ 93C1 28 1C        	jr z,3F
  89+ 93C3 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93C4 28 23            jr z,7F
  91+ 93C6 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93C8 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93CA E1           	pop hl
  94+ 93CB
  95+ 93CB              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93CB              ; _para indicar con E="2" en caso necesario.
  97+ 93CB
  98+ 93CB E5               push hl
  99+ 93CC C5               push bc
 100+ 93CD CD 05 99     	call calcula_tercio
 101+ 93D0 FE 01        	cp 1
 102+ 93D2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93D4 CD 04 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93D7 28 26            jr z,9F
 105+ 93D9 38 24            jr c,9F
 106+ 93DB 1E 00        11 ld e,0
 107+ 93DD 18 22            jr 8F
 108+ 93DF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93E0 28 07        	jr z, 7F
 110+ 93E2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93E4 1E 00         	ld e,0
 112+ 93E6 E1           	pop hl
 113+ 93E7 18 04        	jr 4F
 114+ 93E9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93EB 18 15            jr 10F
 116+ 93ED
 117+ 93ED              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93ED              ; _para indicar con E="2" en caso necesario.
 119+ 93ED
 120+ 93ED E5           4 push hl
 121+ 93EE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93EF CD 05 99     	call calcula_tercio
 123+ 93F2 FE 01        	cp 1
 124+ 93F4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93F6 CD 04 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93F9 28 04            jr z,9F
 127+ 93FB 30 02            jr nc,9F
 128+ 93FD 18 02        	jr 8F
 129+ 93FF 1E 02        9 ld e,2
 130+ 9401 C1           8 pop bc
 131+ 9402 E1           10 pop hl
 132+ 9403 C9           5 ret
 133+ 9404
 134+ 9404              ; --------------------
 135+ 9404              ;
 136+ 9404              ; 25/08/22
 137+ 9404
 138+ 9404 CD 05 99     Comprueba_centro call calcula_tercio
 139+ 9407 67               ld h,a
 140+ 9408 08           	ex af,af
 141+ 9409 FE 02        	cp 2
 142+ 940B 38 07        	jr c,1F
 143+ 940D 28 05        	jr z,1F
 144+ 940F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9412 18 03        	jr 2F
 146+ 9414 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9417 08           2 ex af,af
 148+ 9418 A7               and a
 149+ 9419 ED 42            sbc hl,bc
 150+ 941B C9               ret
 151+ 941C
 152+ 941C              ; *********************************************************************************************************************************************************************************************
 153+ 941C              ;
 154+ 941C              ;   16/8/22
 155+ 941C              ;
 156+ 941C              ;	Comprueba_limite_vertical
 157+ 941C              ;
 158+ 941C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 941C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 941C              ;
 161+ 941C
 162+ 941C 2A CB 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 941F 7D           	ld a,l
 164+ 9420 E6 1F        	and $1F
 165+ 9422 57           	ld d,a
 166+ 9423 3A 09 8A     	ld a,(Limite_vertical)
 167+ 9426 BA           	cp d 											; Límite - Posición.
 168+ 9427 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9428 3A DD 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 942B CB 47        	bit 0,a
 171+ 942D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 942F
 173+ 942F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 942F
 175+ 942F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9430 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9432
 178+ 9432              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9432              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9432
 181+ 9432 3A CF 89         ld a,(Coordenada_X)
 182+ 9435 16 0F            ld d,Centro_izquierda
 183+ 9437 A7               and a
 184+ 9438 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9439 28 1E            jr z,3F
 186+ 943B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 943D              ;                                                    ; _salimos sin modificar nada.
 188+ 943D 18 0E            jr 2F
 189+ 943F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9440 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9442
 192+ 9442              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9442              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9442
 195+ 9442 3A CF 89         ld a,(Coordenada_X)
 196+ 9445 16 10            ld d,Centro_derecha
 197+ 9447 A7               and a
 198+ 9448 92               sub d
 199+ 9449 28 0E            jr z,3F
 200+ 944B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 944D              ;                                                    ; _salimos sin modificar nada.
 202+ 944D CB 43        2 bit 0,e
 203+ 944F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9451 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9452 CD E6 94         call Modificaccionne
 206+ 9455 C1           	pop bc
 207+ 9456 CD F6 94         call Inicializacion
 208+ 9459 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 945A
 210+ 945A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 945A
 212+ 945A C5           4 push bc
 213+ 945B 01 CA 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 945E 0A           	ld a,(bc)
 215+ 945F 3D           	dec a
 216+ 9460 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9461 7D           	ld a,l
 218+ 9462 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9463 CB 47        	bit 0,a
 220+ 9465 28 03        	jr z,5F
 221+ 9467 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9468 18 2E        	jr 7F
 223+ 946A
 224+ 946A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 946A
 226+ 946A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 946B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 946C 3A F7 89     	ld a,(Ctrl_0)
 229+ 946F CB 4F        	bit 1,a
 230+ 9471 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9473 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9474
 233+ 9474              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9474
 235+ 9474 1C               inc e
 236+ 9475 1D               dec e
 237+ 9476 20 07            jr nz,12F
 238+ 9478 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9479 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 947A 22 CB 89     	ld (Posicion_actual),hl
 241+ 947D 18 44        13 jr 9F
 242+ 947F CB 43        12 bit 0,e
 243+ 9481 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9483              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9483 C1           	pop bc
 246+ 9484 18 D3        	jr 3B
 247+ 9486 80           14 add b
 248+ 9487 6F               ld l,a
 249+ 9488 22 CB 89     	ld (Posicion_actual),hl
 250+ 948B CD E6 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 948E 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9490 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9492 32 F7 89         ld (Ctrl_0),a
 254+ 9495 F1           	pop af
 255+ 9496 18 2B        	jr 9F
 256+ 9498
 257+ 9498              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9498
 259+ 9498 F5           7 push af
 260+ 9499 3A F7 89     	ld a,(Ctrl_0)
 261+ 949C CB 47        	bit 0,a
 262+ 949E 20 1D        	jr nz,8F
 263+ 94A0 F1           	pop af
 264+ 94A1
 265+ 94A1              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94A1
 267+ 94A1 1C           	inc e
 268+ 94A2 1D               dec e
 269+ 94A3 20 07            jr nz,10F
 270+ 94A5 90           	sub b
 271+ 94A6 6F               ld l,a
 272+ 94A7 22 CB 89     	ld (Posicion_actual),hl
 273+ 94AA 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94AC              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94AC CB 43        10 bit 0,e
 276+ 94AE 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94B0              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94B0 C1           	pop bc
 279+ 94B1 18 A6        	jr 3B
 280+ 94B3 90           16 sub b
 281+ 94B4 6F               ld l,a
 282+ 94B5 22 CB 89     	ld (Posicion_actual),hl
 283+ 94B8 CD E6 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94BB 18 06            jr 9F
 285+ 94BD E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94BF 32 F7 89         ld (Ctrl_0),a
 287+ 94C2 F1           	pop af
 288+ 94C3 C1           9 pop bc
 289+ 94C4 1E 00        	ld e,0
 290+ 94C6 CD F6 94         call Inicializacion
 291+ 94C9 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94CA 08           	ex af,af
 293+ 94CB F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94CC 18 8B            jr 3B
 295+ 94CE
 296+ 94CE              ; --------------------
 297+ 94CE
 298+ 94CE 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94D0 CD 54 96     1 call PreviousScan
 300+ 94D3 10 FB            djnz 1B
 301+ 94D5 22 CB 89     	ld (Posicion_actual),hl
 302+ 94D8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94D9 C9           	ret
 304+ 94DA
 305+ 94DA              ; --------------------
 306+ 94DA
 307+ 94DA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94DC CD 45 96     1 call NextScan
 309+ 94DF 10 FB            djnz 1B
 310+ 94E1 22 CB 89     	ld (Posicion_actual),hl
 311+ 94E4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94E5 C9           	ret
 313+ 94E6
 314+ 94E6              ; --------------------
 315+ 94E6              ;
 316+ 94E6              ;	22/01/23
 317+ 94E6              ;
 318+ 94E6              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94E6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94E6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94E6
 322+ 94E6
 323+ 94E6              Modificaccionne
 324+ 94E6
 325+ 94E6 3A DD 89     	ld a,(Cuad_objeto)
 326+ 94E9 FE 02        	cp 2
 327+ 94EB CC CE 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94EE DC CE 94         call c,Modifica_Pos_actual
 329+ 94F1 C8           	ret z
 330+ 94F2 CD DA 94         call Modifica_Pos_actual2
 331+ 94F5 C9               ret
 332+ 94F6
 333+ 94F6              ; *************************************************************************************************************************************************************************************************
 334+ 94F6              ;
 335+ 94F6              ;	13/8/22
 336+ 94F6              ;
 337+ 94F6              ;	Inicializacion
 338+ 94F6              ;
 339+ 94F6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94F6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94F6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94F6              ;
 343+ 94F6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94F6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94F6              ;	_ desaparece/aparece.
 346+ 94F6
 347+ 94F6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94F6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94F6              ;
 350+ 94F6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94F6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94F6              ; 		   [E] ="0"
 353+ 94F6
 354+ 94F6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94F6
 356+ 94F6 CD 05 99     Inicializacion call calcula_tercio
 357+ 94F9 28 36        	jr z,primit
 358+ 94FB E6 02        	and 2
 359+ 94FD 20 07        	jr nz,segmit
 360+ 94FF 7D           	ld a,l
 361+ 9500 FE 7F        	cp $7f
 362+ 9502 38 2D        	jr c,primit
 363+ 9504 28 2B        	jr z,primit
 364+ 9506 CD 63 95     segmit call column
 365+ 9509 38 13        	jr c,tercuad
 366+ 950B 3E 04        cuarcuad ld a,4
 367+ 950D 32 DD 89     	ld (Cuad_objeto),a
 368+ 9510 21 20 48     	ld hl,$4820
 369+ 9513 22 07 8A     	ld (Limite_horizontal),hl
 370+ 9516 21 09 8A     	ld hl,Limite_vertical
 371+ 9519 36 0D        	ld (hl),$0d
 372+ 951B 08           	ex af,af
 373+ 951C 18 3C        	jr 1F
 374+ 951E              tercuad
 375+ 951E 3E 03        	ld a,3
 376+ 9520 32 DD 89     	ld (Cuad_objeto),a
 377+ 9523 21 20 48     	ld hl,$4820
 378+ 9526 22 07 8A     	ld (Limite_horizontal),hl
 379+ 9529 21 09 8A     	ld hl,Limite_vertical
 380+ 952C 36 12        	ld (hl),$12
 381+ 952E 08           	ex af,af
 382+ 952F 18 29        	jr 1F
 383+ 9531 CD 63 95     primit call column
 384+ 9534 38 13        	jr c, primcuad
 385+ 9536              segcuad
 386+ 9536 3E 02        	ld a,2
 387+ 9538 32 DD 89     	ld (Cuad_objeto),a
 388+ 953B 21 C0 4F     	ld hl,$4fc0
 389+ 953E 22 07 8A     	ld (Limite_horizontal),hl
 390+ 9541 21 09 8A     	ld hl,Limite_vertical
 391+ 9544 36 0D        	ld (hl),$0d
 392+ 9546 08           	ex af,af
 393+ 9547 18 11        	jr 1F
 394+ 9549              primcuad
 395+ 9549 3E 01        	ld a,1
 396+ 954B 32 DD 89     	ld (Cuad_objeto),a
 397+ 954E 21 C0 4F     	ld hl,$4fc0
 398+ 9551 22 07 8A     	ld (Limite_horizontal),hl
 399+ 9554 21 09 8A     	ld hl,Limite_vertical
 400+ 9557 36 12        	ld (hl),$12
 401+ 9559 08           	ex af,af
 402+ 955A CD 90 9C     1 call Genera_coordenadas
 403+ 955D 21 F7 89     	ld hl,Ctrl_0
 404+ 9560 CB EE        	set 5,(hl)
 405+ 9562 C9           	ret
 406+ 9563
 407+ 9563              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9563
 409+ 9563              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9563              ;
 411+ 9563              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9563
 413+ 9563 7D           column ld a,l
 414+ 9564 E6 1F        	and $1f
 415+ 9566 FE 10         	cp $10
 416+ 9568 C9            	ret
 417+ 9569
 418+ 9569              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9569              ;
 420+ 9569              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9569              ;
 422+ 9569              ; 14/12/22
 423+ 9569              ;
 424+ 9569              ;	Modifica: A y BC.
 425+ 9569
 426+ 9569 3A DD 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 956C E6 01        	and 1
 428+ 956E 28 17        	jr z,1F
 429+ 9570
 430+ 9570              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9570
 432+ 9570 3A CF 89     	ld a,(Coordenada_X)
 433+ 9573 47           	ld b,a
 434+ 9574 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9575 79           	ld a,c
 436+ 9576 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9577 38 08        	jr c,2F
 438+ 9579 47           	ld b,a
 439+ 957A 79           	ld a,c
 440+ 957B 90           	sub b
 441+ 957C 32 06 8A     	ld (Columnas),a
 442+ 957F 18 1B        	jr 4F
 443+ 9581 79           2 ld a,c
 444+ 9582 32 06 8A     	ld (Columnas),a
 445+ 9585 18 15        	jr 4F
 446+ 9587
 447+ 9587              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9587
 449+ 9587 3A CF 89     1 ld a,(Coordenada_X)
 450+ 958A 81           	add c
 451+ 958B 3D           	dec a
 452+ 958C D6 1F        	sub $1f
 453+ 958E 38 08        	jr c,3F
 454+ 9590 47           	ld b,a
 455+ 9591 79           	ld a,c
 456+ 9592 90           	sub b
 457+ 9593 32 06 8A     	ld (Columnas),a
 458+ 9596 18 04        	jr 4F
 459+ 9598 79           3 ld a,c
 460+ 9599 32 06 8A     	ld (Columnas),a
 461+ 959C D9           4 exx
 462+ 959D 4F           	ld c,a
 463+ 959E D9           	exx
 464+ 959F C9            ret
 465+ 95A0
 466+ 95A0              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95A0              ;
 468+ 95A0              ;   19/7/23
 469+ 95A0              ;
 470+ 95A0              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95A0              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95A0              ;
 473+ 95A0              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95A0              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95A0              ;
 476+ 95A0              ;	DESTRUYE: HL,B Y A.
 477+ 95A0
 478+ 95A0 3A DD 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95A3 FE 02        	cp 2
 480+ 95A5 38 18        	jr c,1F
 481+ 95A7 28 16        	jr z,1F
 482+ 95A9 E6 01        	and 1
 483+ 95AB 28 0D        	jr z,3F
 484+ 95AD
 485+ 95AD              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95AD
 487+ 95AD CD F3 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95B0
 489+ 95B0 7D           9 ld a,l
 490+ 95B1 E6 1F        	and $1f
 491+ 95B3 28 2A        	jr z,7F
 492+ 95B5 2B           	dec hl
 493+ 95B6 10 F8        	djnz 9B
 494+ 95B8 18 25        	jr 7F
 495+ 95BA
 496+ 95BA              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95BA
 498+ 95BA 2A CB 89     3 ld hl,(Posicion_actual)
 499+ 95BD 18 20        	jr 7F
 500+ 95BF
 501+ 95BF 28 14        1 jr z,2F
 502+ 95C1
 503+ 95C1              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95C1
 505+ 95C1 CD F3 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95C4
 507+ 95C4 7D           4 ld a,l
 508+ 95C5 E6 1F        	and $1f
 509+ 95C7 28 03        	jr z,6F
 510+ 95C9 2B           	dec hl
 511+ 95CA 10 F8        	djnz 4B
 512+ 95CC 06 0F        6 ld b,15
 513+ 95CE CD 54 96     5 call PreviousScan
 514+ 95D1 10 FB        	djnz 5B
 515+ 95D3 18 0A        	jr 7F
 516+ 95D5
 517+ 95D5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95D5
 519+ 95D5 CD F3 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95D8 06 0F        	ld b,15
 521+ 95DA CD 54 96     8 call PreviousScan
 522+ 95DD 10 FB        	djnz 8B
 523+ 95DF
 524+ 95DF E5           7 push hl
 525+ 95E0 DD E1        	pop ix
 526+ 95E2
 527+ 95E2 2A CD 89     	ld hl,(Puntero_objeto)
 528+ 95E5 E5           	push hl
 529+ 95E6 FD E1        	pop iy
 530+ 95E8
 531+ 95E8              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95E8
 533+ 95E8 3A F7 89     	ld a,(Ctrl_0)
 534+ 95EB CB 77        	bit 6,a
 535+ 95ED C8           	ret z
 536+ 95EE
 537+ 95EE              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95EE              ; _ entidad / Amadeus´.
 539+ 95EE
 540+ 95EE DD 22 35 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95F2
 542+ 95F2 C9           	ret
 543+ 95F3
 544+ 95F3              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95F3              ;
 546+ 95F3              ;	2/1/23
 547+ 95F3              ;
 548+ 95F3              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95F3              ;
 550+ 95F3              ;	Tras esta rutina tenemos:
 551+ 95F3              ;
 552+ 95F3              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95F3              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95F3              ;
 555+ 95F3              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95F3
 557+ 95F3 2A CB 89     Operandos ld hl,(Posicion_actual)
 558+ 95F6 3A 06 8A     	ld a,(Columnas)
 559+ 95F9 3D           	dec a
 560+ 95FA 20 01        	jr nz,1F
 561+ 95FC 3C           	inc a
 562+ 95FD 47           1 ld b,a
 563+ 95FE C9           	ret
 564+ 95FF
 565+ 95FF              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95FF              ;
 567+ 95FF              ;	3/1/23
 568+ 95FF              ;
 569+ 95FF              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95FF              ;
 571+ 95FF              ;	Destruye: A,B,HL y DE.
 572+ 95FF
 573+ 95FF              Define_rutina_de_impresion
 574+ 95FF
 575+ 95FF 3A CA 89     	ld a,(Columns)
 576+ 9602 47           	ld b,a
 577+ 9603 3A 06 8A     	ld a,(Columnas)
 578+ 9606 B8           	cp b
 579+ 9607 20 0D        	jr nz,2f
 580+ 9609
 581+ 9609              ;	La entidad se imprime entera.
 582+ 9609
 583+ 9609 21 D5 96     	ld hl, Indice_entidades_completas
 584+ 960C E6 01        	and 1
 585+ 960E 28 02        	jr z,1F
 586+ 9610
 587+ 9610 23           	inc hl
 588+ 9611 23           	inc hl
 589+ 9612
 590+ 9612 CD 35 8D     1 call Extrae_address
 591+ 9615 C9           	ret		;	ret
 592+ 9616
 593+ 9616              ;	La entidad no se imprime entera en pantalla.
 594+ 9616
 595+ 9616 3A DD 89     2 ld a,(Cuad_objeto)
 596+ 9619 E6 01        	and 1
 597+ 961B 28 17        	jr z,3F
 598+ 961D
 599+ 961D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 961D
 601+ 961D 21 D9 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9620 3A CA 89     4 ld a,(Columns)
 603+ 9623 E6 01        	and 1
 604+ 9625 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9627
 606+ 9627 23           	inc hl
 607+ 9628 23           	inc hl
 608+ 9629
 609+ 9629 3A 06 8A     	ld a,(Columnas)
 610+ 962C E6 01        	and 1
 611+ 962E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9630
 613+ 9630 23           	inc hl
 614+ 9631 23           	inc hl
 615+ 9632
 616+ 9632 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9634
 618+ 9634 21 DF 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9637 18 E7        	jr 4B
 620+ 9639
 621+ 9639              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9639              ;
 623+ 9639              ;	Prepara_draw
 624+ 9639              ;
 625+ 9639              ;	Es una rutina de carga.
 626+ 9639              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9639              ;
 628+ 9639              ;	FUNCIONAMIENTO:
 629+ 9639              ;
 630+ 9639              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9639              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9639              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9639              ;
 634+ 9639              ;	DESTRUYE:
 635+ 9639              ;
 636+ 9639              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9639
 638+ 9639 21 C9 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 963C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 963D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 963E 4E           	ld c,(hl)
 642+ 963F 2A CB 89     	ld hl,(Posicion_actual)
 643+ 9642 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9644 C9           	ret
 645+ 9645
 646+ 9645              ;----------------------------------------------------------------------------------------------------------------
 647+ 9645              ;
 648+ 9645              ;	5/08/22
 649+ 9645              ;
 650+ 9645              ;   NextScan.
 651+ 9645              ;
 652+ 9645              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9645              ;
 654+ 9645              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9645              ;
 656+ 9645              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9645              ;
 658+ 9645              ;       DESTRUIDOS: AF y HL !!!
 659+ 9645              ;
 660+ 9645              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9645              ;
 662+ 9645
 663+ 9645 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9646 7C               ld a,h
 665+ 9647 E6 07            and 7
 666+ 9649 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 964A
 668+ 964A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 964B C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 964D 6F               ld l,a
 671+ 964E D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 964F
 673+ 964F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9650 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9652 67               ld h,a
 676+ 9653 C9               ret
 677+ 9654
 678+ 9654              ;----------------------------------------------------------------------------------------------------------------
 679+ 9654              ;
 680+ 9654              ;	5/08/22
 681+ 9654              ;
 682+ 9654              ;   PreviousScan.
 683+ 9654              ;
 684+ 9654              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9654              ;
 686+ 9654              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9654              ;
 688+ 9654              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9654              ;
 690+ 9654              ;       DESTRUIDOS: AF y HL !!!
 691+ 9654              ;
 692+ 9654              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9654              ;
 694+ 9654
 695+ 9654 7C           PreviousScan ld a,h
 696+ 9655 25               dec h               ; Dec H.
 697+ 9656 E6 07            and 7
 698+ 9658 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9659
 700+ 9659 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 965A D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 965C 6F               ld l,a
 703+ 965D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 965E
 705+ 965E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 965F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9661 67               ld h,a
 708+ 9662 C9               ret
 709+ 9663
 710+ 9663              ; -----------------------------------------------------------------------------------
 711+ 9663              ;
 712+ 9663              ;	28/2/23
 713+ 9663              ;
 714+ 9663              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9663              ;	Extrae fotos de Album_de_fotos.
 716+ 9663
 717+ 9663 3A 18 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 718+ 9666 A7           	and a
 719+ 9667 C8           	ret z
 720+ 9668 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 721+ 966C 31 00 70     	ld sp,Album_de_fotos
 722+ 966F
 723+ 966F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 724+ 9671 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 725+ 9672 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 726+ 9673
 727+ 9673 ED 73 1F 8A  	ld (Stack_2),sp
 728+ 9677 ED 7B 1D 8A  	ld sp,(Stack)
 729+ 967B
 730+ 967B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 731+ 967B
 732+ 967B 3E CD        	ld a,$cd
 733+ 967D 32 85 96     	ld (Imprime),a
 734+ 9680 EB           	ex de,hl
 735+ 9681 22 86 96     	ld (Imprime+1),hl
 736+ 9684 EB           	ex de,hl
 737+ 9685
 738+ 9685              ; Ejecuta la llamada:	CALL $xx,xx
 739+ 9685
 740+ 9685 00 00 00     Imprime db 0,0,0
 741+ 9688
 742+ 9688 3A 18 8A     	ld a,(Numero_de_malotes)
 743+ 968B 3D           	dec a
 744+ 968C 28 09        	jr z,1F
 745+ 968E 32 18 8A      	ld (Numero_de_malotes),a
 746+ 9691
 747+ 9691 ED 7B 1F 8A   	ld sp,(Stack_2)
 748+ 9695 18 D8        	jr 2B
 749+ 9697
 750+ 9697 AF           1 xor a
 751+ 9698 32 1F 8A     	ld (Stack_2),a
 752+ 969B C9           	ret
 753+ 969C
 754+ 969C              ; -----------------------------------------------------------------------------------
 755+ 969C              ;
 756+ 969C              ;	28/2/23
 757+ 969C              ;
 758+ 969C              ;	Pinta los disparos generados.
 759+ 969C
 760+ 969C              Extrae_foto_disparos
 761+ 969C
 762+ 969C 3A 25 8A     	ld a,(Numero_de_disparotes)
 763+ 969F A7           	and a
 764+ 96A0 C8           	ret z
 765+ 96A1 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 766+ 96A5 31 85 70     	ld sp,Album_de_fotos_disparos
 767+ 96A8
 768+ 96A8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 769+ 96AA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 770+ 96AB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 771+ 96AC
 772+ 96AC ED 73 1F 8A  	ld (Stack_2),sp
 773+ 96B0 ED 7B 1D 8A  	ld sp,(Stack)
 774+ 96B4
 775+ 96B4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 776+ 96B4
 777+ 96B4 3E CD        	ld a,$cd
 778+ 96B6 32 BE 96     	ld (Imprime2),a
 779+ 96B9 EB           	ex de,hl
 780+ 96BA 22 BF 96     	ld (Imprime2+1),hl
 781+ 96BD EB           	ex de,hl
 782+ 96BE
 783+ 96BE              ; Ejecuta la llamada:	CALL $xx,xx
 784+ 96BE
 785+ 96BE 00 00 00     Imprime2 db 0,0,0
 786+ 96C1
 787+ 96C1 3A 25 8A     	ld a,(Numero_de_disparotes)
 788+ 96C4 3D           	dec a
 789+ 96C5 28 09        	jr z,1F
 790+ 96C7 32 25 8A      	ld (Numero_de_disparotes),a
 791+ 96CA
 792+ 96CA ED 7B 1F 8A  	ld sp,(Stack_2)
 793+ 96CE 18 D8        	jr 2B
 794+ 96D0
 795+ 96D0 AF           1 xor a
 796+ 96D1 32 1F 8A     	ld (Stack_2),a
 797+ 96D4 C9           	ret
 798+ 96D5
# file closed: Draw_XOR.asm
1271  96D5              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96D5              ;   índices de Rutinas de impresión.
   2+ 96D5
   3+ 96D5 E5 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96D7 12 97            defw Pinta_Amadeus_3x2
   5+ 96D9
   6+ 96D9 68 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96DB 08 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96DD BC 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96DF
  10+ 96DF 92 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96E1 96 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96E3 4A 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96E5
  14+ 96E5
  15+ 96E5              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96E5              ;
  17+ 96E5              ;   12/12/22
  18+ 96E5              ;
  19+ 96E5              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96E5              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96E5              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96E5              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96E5              ;
  24+ 96E5              ;   Modifica: DE y HL.
  25+ 96E5
  26+ 96E5 ED 73 1D 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96E9 FD F9        	ld sp,iy
  28+ 96EB 06 10            ld b,16
  29+ 96ED D1           1 pop de
  30+ 96EE 7B               ld a,e
  31+ 96EF AE               xor (hl)
  32+ 96F0 77           	ld (hl),a
  33+ 96F1 23           	inc hl
  34+ 96F2 7A               ld a,d
  35+ 96F3 AE               xor (hl)
  36+ 96F4 77           	ld (hl),a
  37+ 96F5 2B           	dec hl
  38+ 96F6 24           	inc h
  39+ 96F7 7C               ld a,h
  40+ 96F8 E6 07            and 7
  41+ 96FA 20 0A            jr nz,2F
  42+ 96FC 7D               ld a,l
  43+ 96FD C6 20            add a,$20
  44+ 96FF 6F               ld l,a
  45+ 9700 38 04            jr c,2F
  46+ 9702 7C               ld a,h
  47+ 9703 D6 08            sub 8
  48+ 9705 67               ld h,a
  49+ 9706 7C           2 ld a,h
  50+ 9707 FE 58            cp $58
  51+ 9709 28 02            jr z,3F
  52+ 970B 10 E0            djnz 1B
  53+ 970D ED 7B 1D 8A  3 ld sp,(Stack)
  54+ 9711 C9           	ret
  55+ 9712
  56+ 9712 ED 73 1D 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9716 FD F9        	ld sp,iy
  58+ 9718 06 08            ld b,8
  59+ 971A D1           1 pop de
  60+ 971B 7B               ld a,e
  61+ 971C AE               xor (hl)
  62+ 971D 77           	ld (hl),a
  63+ 971E 23           	inc hl
  64+ 971F 7A               ld a,d
  65+ 9720 AE               xor (hl)
  66+ 9721 77           	ld (hl),a
  67+ 9722 23           	inc hl
  68+ 9723 D1           	pop de
  69+ 9724 7B               ld a,e
  70+ 9725 AE               xor (hl)
  71+ 9726 77           	ld (hl),a
  72+ 9727 2B           	dec hl
  73+ 9728 2B           	dec hl
  74+ 9729 24           	inc h
  75+ 972A 7C               ld a,h
  76+ 972B E6 07            and 7
  77+ 972D 20 0A            jr nz,2F
  78+ 972F 7D               ld a,l
  79+ 9730 C6 20            add a,$20
  80+ 9732 6F               ld l,a
  81+ 9733 38 04            jr c,2F
  82+ 9735 7C               ld a,h
  83+ 9736 D6 08            sub 8
  84+ 9738 67               ld h,a
  85+ 9739 7C           2 ld a,h
  86+ 973A FE 58            cp $58
  87+ 973C 28 25            jr z,4F
  88+ 973E 7A               ld a,d
  89+ 973F AE               xor (hl)
  90+ 9740 77               ld (hl),a
  91+ 9741 D1           	pop de
  92+ 9742 23           	inc hl
  93+ 9743 7B               ld a,e
  94+ 9744 AE               xor (hl)
  95+ 9745 77           	ld (hl),a
  96+ 9746 23           	inc hl
  97+ 9747 7A               ld a,d
  98+ 9748 AE               xor (hl)
  99+ 9749 77           	ld (hl),a
 100+ 974A 2B           	dec hl
 101+ 974B 2B           	dec hl
 102+ 974C 24           	inc h
 103+ 974D 7C               ld a,h
 104+ 974E E6 07            and 7
 105+ 9750 20 0A            jr nz,3F
 106+ 9752 7D               ld a,l
 107+ 9753 C6 20            add a,$20
 108+ 9755 6F               ld l,a
 109+ 9756 38 04            jr c,3F
 110+ 9758 7C               ld a,h
 111+ 9759 D6 08            sub 8
 112+ 975B 67               ld h,a
 113+ 975C 7C           3 ld a,h
 114+ 975D FE 58            cp $58
 115+ 975F 28 02            jr z,4F
 116+ 9761 10 B7            djnz 1B
 117+ 9763 ED 7B 1D 8A  4 ld sp,(Stack)
 118+ 9767 C9           	ret
 119+ 9768
 120+ 9768              ; ---------------------------------------------------
 121+ 9768
 122+ 9768 ED 73 1D 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 976C FD F9        	ld sp,iy
 124+ 976E
 125+ 976E              ; >>>
 126+ 976E
 127+ 976E 06 10            ld b,16
 128+ 9770 D1           1 pop de
 129+ 9771 7A           	ld a,d
 130+ 9772 AE           	xor (hl)
 131+ 9773 77           	ld (hl),a
 132+ 9774 24           	inc h
 133+ 9775 7C               ld a,h
 134+ 9776 E6 07            and 7
 135+ 9778 20 0C            jr nz,2F
 136+ 977A 7D               ld a,l
 137+ 977B C6 20            add a,$20
 138+ 977D 6F               ld l,a
 139+ 977E 38 06            jr c,2F
 140+ 9780 7C               ld a,h
 141+ 9781 D6 08            sub 8
 142+ 9783 67               ld h,a
 143+ 9784 18 00            jr 2F
 144+ 9786 7C           2 ld a,h
 145+ 9787 FE 58            cp $58
 146+ 9789 28 02            jr z,3F
 147+ 978B 10 E3            djnz 1B
 148+ 978D ED 7B 1D 8A  3 ld sp,(Stack)
 149+ 9791 C9           	ret
 150+ 9792
 151+ 9792 ED 73 1D 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9796 FD F9        	ld sp,iy
 153+ 9798
 154+ 9798              ; >>>
 155+ 9798
 156+ 9798 06 10            ld b,16
 157+ 979A D1           1 pop de
 158+ 979B 7B           	ld a,e
 159+ 979C AE           	xor (hl)
 160+ 979D 77           	ld (hl),a
 161+ 979E 24           	inc h
 162+ 979F 7C               ld a,h
 163+ 97A0 E6 07            and 7
 164+ 97A2 20 0C            jr nz,2F
 165+ 97A4 7D               ld a,l
 166+ 97A5 C6 20            add a,$20
 167+ 97A7 6F               ld l,a
 168+ 97A8 38 06            jr c,2F
 169+ 97AA 7C               ld a,h
 170+ 97AB D6 08            sub 8
 171+ 97AD 67               ld h,a
 172+ 97AE 18 00            jr 2F
 173+ 97B0 7C           2 ld a,h
 174+ 97B1 FE 58            cp $58
 175+ 97B3 28 02            jr z,3F
 176+ 97B5 10 E3            djnz 1B
 177+ 97B7 ED 7B 1D 8A  3 ld sp,(Stack)
 178+ 97BB C9           	ret
 179+ 97BC
 180+ 97BC              ; ---------------------------------------------------
 181+ 97BC
 182+ 97BC ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97C0 FD F9        	ld sp,iy
 184+ 97C2 06 08            ld b,8
 185+ 97C4 D1           1 pop de
 186+ 97C5 7A           	ld a,d
 187+ 97C6 AE           	xor (hl)
 188+ 97C7 77           	ld (hl),a
 189+ 97C8 23           	inc hl
 190+ 97C9 D1           	pop de
 191+ 97CA 7B           	ld a,e
 192+ 97CB AE           	xor (hl)
 193+ 97CC 77           	ld (hl),a
 194+ 97CD 2B           	dec hl
 195+ 97CE 24            	inc h
 196+ 97CF 7C               ld a,h
 197+ 97D0 E6 07            and 7
 198+ 97D2 20 0A            jr nz,2F
 199+ 97D4 7D               ld a,l
 200+ 97D5 C6 20            add a,$20
 201+ 97D7 6F               ld l,a
 202+ 97D8 38 04            jr c,2F
 203+ 97DA 7C               ld a,h
 204+ 97DB D6 08            sub 8
 205+ 97DD 67               ld h,a
 206+ 97DE 7C           2 ld a,h
 207+ 97DF FE 58            cp $58
 208+ 97E1 28 20            jr z,4F
 209+ 97E3 D1               pop de
 210+ 97E4 7B           	ld a,e
 211+ 97E5 AE           	xor (hl)
 212+ 97E6 77           	ld (hl),a
 213+ 97E7 23           	inc hl
 214+ 97E8 7A           	ld a,d
 215+ 97E9 AE           	xor (hl)
 216+ 97EA 77           	ld (hl),a
 217+ 97EB 2B           	dec hl
 218+ 97EC 24           	inc h
 219+ 97ED 7C               ld a,h
 220+ 97EE E6 07            and 7
 221+ 97F0 20 0A            jr nz,3F
 222+ 97F2 7D               ld a,l
 223+ 97F3 C6 20            add a,$20
 224+ 97F5 6F               ld l,a
 225+ 97F6 38 04            jr c,3F
 226+ 97F8 7C               ld a,h
 227+ 97F9 D6 08            sub 8
 228+ 97FB 67               ld h,a
 229+ 97FC 7C           3 ld a,h
 230+ 97FD FE 58            cp $58
 231+ 97FF 28 02            jr z,4F
 232+ 9801 10 C1            djnz 1B
 233+ 9803 ED 7B 1D 8A  4 ld sp,(Stack)
 234+ 9807 C9           	ret
 235+ 9808
 236+ 9808 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 980C FD F9        	ld sp,iy
 238+ 980E 06 08            ld b,8
 239+ 9810 D1           1 pop de
 240+ 9811 D1           	pop de
 241+ 9812 7B           	ld a,e
 242+ 9813 AE           	xor (hl)
 243+ 9814 77           	ld (hl),a
 244+ 9815 24            	inc h
 245+ 9816 7C               ld a,h
 246+ 9817 E6 07            and 7
 247+ 9819 20 0A            jr nz,2F
 248+ 981B 7D               ld a,l
 249+ 981C C6 20            add a,$20
 250+ 981E 6F               ld l,a
 251+ 981F 38 04            jr c,2F
 252+ 9821 7C               ld a,h
 253+ 9822 D6 08            sub 8
 254+ 9824 67               ld h,a
 255+ 9825 7C           2 ld a,h
 256+ 9826 FE 58            cp $58
 257+ 9828 28 1B            jr z,4F
 258+ 982A D1               pop de
 259+ 982B 7A           	ld a,d
 260+ 982C AE           	xor (hl)
 261+ 982D 77           	ld (hl),a
 262+ 982E 24           	inc h
 263+ 982F 7C               ld a,h
 264+ 9830 E6 07            and 7
 265+ 9832 20 0A            jr nz,3F
 266+ 9834 7D               ld a,l
 267+ 9835 C6 20            add a,$20
 268+ 9837 6F               ld l,a
 269+ 9838 38 04            jr c,3F
 270+ 983A 7C               ld a,h
 271+ 983B D6 08            sub 8
 272+ 983D 67               ld h,a
 273+ 983E 7C           3 ld a,h
 274+ 983F FE 58            cp $58
 275+ 9841 28 02            jr z,4F
 276+ 9843 10 CB            djnz 1B
 277+ 9845 ED 7B 1D 8A  4 ld sp,(Stack)
 278+ 9849 C9           	ret
 279+ 984A
 280+ 984A ED 73 1D 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 984E FD F9        	ld sp,iy
 282+ 9850 06 08            ld b,8
 283+ 9852 D1           1 pop de
 284+ 9853 7B           	ld a,e
 285+ 9854 AE           	xor (hl)
 286+ 9855 77           	ld (hl),a
 287+ 9856 23           	inc hl
 288+ 9857 7A           	ld a,d
 289+ 9858 AE           	xor (hl)
 290+ 9859 77           	ld (hl),a
 291+ 985A 2B           	dec hl
 292+ 985B 24             	inc h
 293+ 985C 7C               ld a,h
 294+ 985D E6 07            and 7
 295+ 985F 20 0A            jr nz,2F
 296+ 9861 7D               ld a,l
 297+ 9862 C6 20            add a,$20
 298+ 9864 6F               ld l,a
 299+ 9865 38 04            jr c,2F
 300+ 9867 7C               ld a,h
 301+ 9868 D6 08            sub 8
 302+ 986A 67               ld h,a
 303+ 986B 7C           2 ld a,h
 304+ 986C FE 58            cp $58
 305+ 986E 28 21            jr z,4F
 306+ 9870 D1               pop de
 307+ 9871 7A           	ld a,d
 308+ 9872 AE           	xor (hl)
 309+ 9873 77           	ld (hl),a
 310+ 9874 23           	inc hl
 311+ 9875 D1               pop de
 312+ 9876 7B           	ld a,e
 313+ 9877 AE           	xor (hl)
 314+ 9878 77           	ld (hl),a
 315+ 9879 2B           	dec hl
 316+ 987A 24           	inc h
 317+ 987B 7C               ld a,h
 318+ 987C E6 07            and 7
 319+ 987E 20 0A            jr nz,3F
 320+ 9880 7D               ld a,l
 321+ 9881 C6 20            add a,$20
 322+ 9883 6F               ld l,a
 323+ 9884 38 04            jr c,3F
 324+ 9886 7C               ld a,h
 325+ 9887 D6 08            sub 8
 326+ 9889 67               ld h,a
 327+ 988A 7C           3 ld a,h
 328+ 988B FE 58            cp $58
 329+ 988D 28 02            jr z,4F
 330+ 988F 10 C1            djnz 1B
 331+ 9891 ED 7B 1D 8A  4 ld sp,(Stack)
 332+ 9895 C9           	ret
 333+ 9896
 334+ 9896 ED 73 1D 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 989A FD F9        	ld sp,iy
 336+ 989C 06 08            ld b,8
 337+ 989E D1           1 pop de
 338+ 989F 7B           	ld a,e
 339+ 98A0 AE           	xor (hl)
 340+ 98A1 77           	ld (hl),a
 341+ 98A2 24            	inc h
 342+ 98A3 7C               ld a,h
 343+ 98A4 E6 07            and 7
 344+ 98A6 20 0A            jr nz,2F
 345+ 98A8 7D               ld a,l
 346+ 98A9 C6 20            add a,$20
 347+ 98AB 6F               ld l,a
 348+ 98AC 38 04            jr c,2F
 349+ 98AE 7C               ld a,h
 350+ 98AF D6 08            sub 8
 351+ 98B1 67               ld h,a
 352+ 98B2 7C           2 ld a,h
 353+ 98B3 FE 58            cp $58
 354+ 98B5 28 1C            jr z,4F
 355+ 98B7 D1               pop de
 356+ 98B8 7A           	ld a,d
 357+ 98B9 AE           	xor (hl)
 358+ 98BA 77           	ld (hl),a
 359+ 98BB 24           	inc h
 360+ 98BC 7C               ld a,h
 361+ 98BD E6 07            and 7
 362+ 98BF 20 0A            jr nz,3F
 363+ 98C1 7D               ld a,l
 364+ 98C2 C6 20            add a,$20
 365+ 98C4 6F               ld l,a
 366+ 98C5 38 04            jr c,3F
 367+ 98C7 7C               ld a,h
 368+ 98C8 D6 08            sub 8
 369+ 98CA 67               ld h,a
 370+ 98CB 7C           3 ld a,h
 371+ 98CC FE 58            cp $58
 372+ 98CE 28 03            jr z,4F
 373+ 98D0 D1               pop de
 374+ 98D1 10 CB            djnz 1B
 375+ 98D3 ED 7B 1D 8A  4 ld sp,(Stack)
 376+ 98D7 C9           	ret
 377+ 98D8
 378+ 98D8              ; ---------------------------------------------------
 379+ 98D8              ;
 380+ 98D8              ;   27/02/23
 381+ 98D8              ;
 382+ 98D8              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98D8              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98D8              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98D8
 386+ 98D8 ED 73 1D 8A  Pinta_Disparo ld (Stack),sp
 387+ 98DC FD F9            ld sp,iy
 388+ 98DE 06 03            ld b,3
 389+ 98E0 D1           1 pop de
 390+ 98E1 7B               ld a,e
 391+ 98E2 AE               xor (hl)
 392+ 98E3 77               ld (hl),a
 393+ 98E4 23               inc hl
 394+ 98E5 7A               ld a,d
 395+ 98E6 AE               xor (hl)
 396+ 98E7 77               ld (hl),a
 397+ 98E8 2B               dec hl
 398+ 98E9
 399+ 98E9 24               inc h
 400+ 98EA 7C               ld a,h
 401+ 98EB E6 07            and 7
 402+ 98ED 20 0A            jr nz,2F
 403+ 98EF 7D               ld a,l
 404+ 98F0 C6 20            add a,$20
 405+ 98F2 6F               ld l,a
 406+ 98F3 38 04            jr c,2F
 407+ 98F5 7C               ld a,h
 408+ 98F6 D6 08            sub 8
 409+ 98F8 67               ld h,a
 410+ 98F9 7C           2 ld a,h
 411+ 98FA FE 58            cp $58
 412+ 98FC 28 02            jr z,3F
 413+ 98FE
 414+ 98FE 10 E0            djnz 1B
 415+ 9900 ED 7B 1D 8A  3 ld sp,(Stack)
 416+ 9904 C9               ret
 417+ 9905
# file closed: Rutinas_de_impresion_sprites.asm
1272  9905              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9905              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9905              ;
   3+ 9905              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9905              ;
   5+ 9905              ; *****************************************************************************************************************************************************************************************
   6+ 9905              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9905
   8+ 9905 7C           calcula_tercio ld a,h
   9+ 9906 E6 18        	and $18
  10+ 9908 CB 2F        	sra a
  11+ 990A CB 2F        	sra a
  12+ 990C CB 2F        	sra a
  13+ 990E C9           	ret
  14+ 990F
# file closed: calcula_tercio.asm
1273  990F              	include "Cls.asm"
# file opened: Cls.asm
   1+ 990F              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 990F              ;
   3+ 990F              ;
   4+ 990F              ;	CLS.
   5+ 990F              ;
   6+ 990F              ;	Limpia la pantalla y define sus atributos.
   7+ 990F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 990F              ;
   9+ 990F              ;	COLORES: 0 ..... NEGRO
  10+ 990F              ;    		 1 ..... AZUL
  11+ 990F              ; 			 2 ..... ROJO
  12+ 990F              ;			 3 ..... MAGENTA
  13+ 990F              ; 			 4 ..... VERDE
  14+ 990F              ; 			 5 ..... CIAN
  15+ 990F              ;			 6 ..... AMARILLO
  16+ 990F              ; 			 7 ..... BLANCO
  17+ 990F              ;
  18+ 990F              ;	INPUT: A contiene los atributos de pantalla.
  19+ 990F              ;
  20+ 990F              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 990F
  22+ 990F
  23+ 990F 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9912 11 01 40     	LD DE,$4001
  25+ 9915 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9918 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 991A ED B0        	LDIR
  28+ 991C 01 FF 02     	LD BC,767
  29+ 991F 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9920 ED B0        	LDIR
  31+ 9922 C9           	ret
  32+ 9923
# file closed: Cls.asm
1274  9923              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9923              ; ******************************************************************************************************************************************************************************************
   2+ 9923              ;
   3+ 9923              ;   20/05/23
   4+ 9923              ;
   5+ 9923              ;	Recompone_posicion_inicio
   6+ 9923              ;
   7+ 9923              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9923              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9923              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9923              ;	_ a una u otra rutina.
  11+ 9923
  12+ 9923              Recompone_posicion_inicio
  13+ 9923
  14+ 9923 2A DB 89     	ld hl,(Posicion_inicio)
  15+ 9926 7D           	ld a,l
  16+ 9927 E6 1F        	and $1f
  17+ 9929 28 16        	jr z,1F
  18+ 992B
  19+ 992B FE 1F        	cp $1f
  20+ 992D 28 0D        	jr z,3F
  21+ 992F
  22+ 992F 21 0A 8A     	ld hl,Ctrl_2
  23+ 9932 CB C6        	set 0,(hl)
  24+ 9934 2A CD 89     	ld hl,(Puntero_objeto)
  25+ 9937 22 0D 8A     	ld (Repone_puntero_objeto),hl
  26+ 993A 18 08        	jr 2F
  27+ 993C
  28+ 993C CD DD 9A     3 call Mov_left
  29+ 993F 18 03        	jr 2F
  30+ 9941
  31+ 9941 CD BF 99     1 call Mov_right
  32+ 9944 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9947 22 CD 89     	ld (Puntero_objeto),hl
  34+ 994A C9           	ret
  35+ 994B
  36+ 994B              ; ******************************************************************************************************************************************************************************************
  37+ 994B              ;
  38+ 994B              ;   27/05/23
  39+ 994B              ;
  40+ 994B              ;	Mov_down
  41+ 994B              ;
  42+ 994B              ; 	Mueve el Sprite X px hacia abajo.
  43+ 994B              ;
  44+ 994B              ;
  45+ 994B              Mov_down
  46+ 994B
  47+ 994B CD AD 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 994E              ;																	; _ repone (Puntero_objeto).
  49+ 994E 21 F7 89     	ld hl,Ctrl_0
  50+ 9951 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9953              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9953              ; 																	; _ en el caso de que no lo haya.
  53+ 9953 3A E1 89     	ld a,(Vel_down)
  54+ 9956 47           	ld b,a
  55+ 9957 2A CB 89         ld hl,(Posicion_actual)
  56+ 995A CD 05 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 995D E6 02        	and 2
  58+ 995F 28 0F        	jr z,1F
  59+ 9961
  60+ 9961              ; Nos encontramos en el último tercio de pantalla.
  61+ 9961              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9961
  63+ 9961 7C           	ld a,h
  64+ 9962 FE 57        	cp $57
  65+ 9964 20 0A        	jr nz,1F
  66+ 9966
  67+ 9966 7D           	ld a,l
  68+ 9967 C6 20        	add $20
  69+ 9969 30 05        	jr nc,1F
  70+ 996B
  71+ 996B              ; ------------------------------
  72+ 996B              ;	call Reaparece_arriba
  73+ 996B CD 6A 9C     	call Reinicio
  74+ 996E              ; ------------------------------
  75+ 996E
  76+ 996E 18 08        	jr 3F
  77+ 9970 CD 45 96     1 call NextScan
  78+ 9973 22 CB 89     	ld (Posicion_actual),hl
  79+ 9976 10 E2            djnz 2B
  80+ 9978 CD 90 9C     3 call Genera_coordenadas
  81+ 997B C9           	ret
  82+ 997C
  83+ 997C              ; ******************************************************************************************************************************************************************************************
  84+ 997C              ;
  85+ 997C              ;   27/05/23
  86+ 997C              ;
  87+ 997C              ;	Mov_up
  88+ 997C              ;
  89+ 997C              ; 	Mueve el Sprite hacia arriba.
  90+ 997C              ;
  91+ 997C              ;
  92+ 997C              Mov_up
  93+ 997C
  94+ 997C CD AD 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 997F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 997F 21 F7 89     	ld hl,Ctrl_0
  97+ 9982 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9984              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9984              ; 																		; _ en el caso de que no lo haya.
 100+ 9984 3A E0 89     	ld a,(Vel_up)
 101+ 9987 47           	ld b,a
 102+ 9988 2A CB 89     	ld hl,(Posicion_actual)
 103+ 998B CD 05 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 998E A7           	and a
 105+ 998F 20 10        	jr nz,1F
 106+ 9991
 107+ 9991              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9991              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9991
 110+ 9991 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9992 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9994 20 0B            jr nz,1F
 113+ 9996 7D               ld a,l
 114+ 9997 D6 20            sub $20
 115+ 9999 30 06            jr nc,1F
 116+ 999B 25               dec h
 117+ 999C
 118+ 999C              ; -----------------------------
 119+ 999C CD 4B 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 999F              ;	call Reinicio
 121+ 999F              ; -----------------------------
 122+ 999F
 123+ 999F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99A1 CD 54 96     1 call PreviousScan
 125+ 99A4 22 CB 89     	ld (Posicion_actual),hl
 126+ 99A7 10 E2            djnz 3B
 127+ 99A9 CD 90 9C     2 call Genera_coordenadas
 128+ 99AC C9           	ret
 129+ 99AD
 130+ 99AD              ; -----------------------------
 131+ 99AD              ;
 132+ 99AD              ;	27/5/23
 133+ 99AD              ;
 134+ 99AD              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99AD              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99AD              ;
 137+ 99AD              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99AD              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99AD              ;
 140+ 99AD              ;	Modifica: A y (Puntero_objeto).
 141+ 99AD
 142+ 99AD 3A 0A 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99B0 CB 47        	bit 0,a
 144+ 99B2 C8           	ret z
 145+ 99B3 CB 87        	res 0,a
 146+ 99B5 32 0A 8A     	ld (Ctrl_2),a
 147+ 99B8 2A 0D 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99BB 22 CD 89     	ld (Puntero_objeto),hl
 149+ 99BE C9           	ret
 150+ 99BF
 151+ 99BF              ; ******************************************************************************************************************************************************************************************
 152+ 99BF              ;
 153+ 99BF              ;	19/10/22
 154+ 99BF              ;
 155+ 99BF              ;	Mov_right.
 156+ 99BF              ;
 157+ 99BF              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99BF              ;
 159+ 99BF
 160+ 99BF 21 F7 89     Mov_right ld hl,Ctrl_0
 161+ 99C2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99C4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99C4              ; 																	; _ en el caso de que no lo haya.
 164+ 99C4 3A F7 89     	ld a,(Ctrl_0)
 165+ 99C7 CB 77        	bit 6,a
 166+ 99C9 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99CB
 168+ 99CB CD F9 9B     	call Stop_Amadeus_right
 169+ 99CE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99CF 18 4D        	jr 8F
 171+ 99D1
 172+ 99D1 3A CF 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99D6 20 46        	jr nz,8F
 175+ 99D8
 176+ 99D8 3A D1 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99DC 28 40        	jr z,8F
 179+ 99DE
 180+ 99DE              ; ---------- ---------- ----------
 181+ 99DE              ;
 182+ 99DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99DE
 184+ 99DE 3A DF 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99E3 28 11        	jr z,1F
 187+ 99E5 38 06        	jr c,6F
 188+ 99E7 FE 04        	cp 4
 189+ 99E9 28 14        	jr z,7F
 190+ 99EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 99ED
 192+ 99ED              ; ---------- ---------- ----------
 193+ 99ED              ;
 194+ 99ED              ; Perfiles de velocidad
 195+ 99ED              ;
 196+ 99ED
 197+ 99ED 3A D1 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 99F0 FE FE        	cp $fe
 199+ 99F2 20 2A        	jr nz,8F
 200+ 99F4 18 10        	jr 3F
 201+ 99F6 3A D1 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 99F9 FE FD        	cp $fd
 203+ 99FB 20 21        	jr nz,8F
 204+ 99FD 18 07        	jr 3F
 205+ 99FF 3A D1 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A02 FE FB        	cp $fb
 207+ 9A04 20 18        	jr nz,8F
 208+ 9A06
 209+ 9A06              ; ---------- ---------- ----------
 210+ 9A06
 211+ 9A06              3
 212+ 9A06 CD 39 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A09              ;	call Reinicio
 214+ 9A09
 215+ 9A09              ; ---------- ---------- ----------
 216+ 9A09              ;
 217+ 9A09              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A09
 219+ 9A09 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A0B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A0C CD 25 9A     	call DESPLZ_DER
 222+ 9A0F C1           	pop bc
 223+ 9A10 10 F9        	djnz 5B
 224+ 9A12 2A CB 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A15 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A16 22 CB 89     	ld (Posicion_actual),hl
 227+ 9A19 CD 90 9C     	call Genera_coordenadas
 228+ 9A1C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A1E
 230+ 9A1E              ; ---------- ---------- ----------
 231+ 9A1E
 232+ 9A1E 2A CB 89     8 ld hl,(Posicion_actual)
 233+ 9A21 CD 25 9A     	call DESPLZ_DER
 234+ 9A24 C9           2 ret
 235+ 9A25
 236+ 9A25              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A25              ;
 238+ 9A25              ;	22/9/22
 239+ 9A25              ;
 240+ 9A25
 241+ 9A25 CD 34 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A28 CD 80 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A2B CD A9 9A         call Ciclo_completo
 244+ 9A2E 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A31 CB FE        	set 7,(hl)
 246+ 9A33 C9           	ret
 247+ 9A34
 248+ 9A34              ; ******************************************************************************************************************************************************************************************
 249+ 9A34              ;	15/02/23
 250+ 9A34              ;
 251+ 9A34
 252+ 9A34 3A DF 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A37 47           	ld b,a
 254+ 9A38 2A D7 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A3B 23           1 inc hl
 256+ 9A3C 23           	inc hl
 257+ 9A3D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A3F 22 D7 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A42 CD 35 8D     	call Extrae_address
 260+ 9A45 22 CD 89     	ld (Puntero_objeto),hl
 261+ 9A48
 262+ 9A48              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A48
 264+ 9A48              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A48              ; Cuántos movimientos hemos hecho ??
 266+ 9A48              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A48
 268+ 9A48 2A D3 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A4B EB           	ex de,hl
 270+ 9A4C A7           	and a
 271+ 9A4D ED 52        	sbc hl,de
 272+ 9A4F CB 3D        	srl l
 273+ 9A51 3E 08        6 ld a,8
 274+ 9A53 95           	sub l
 275+ 9A54 30 1E        	jr nc,3F
 276+ 9A56
 277+ 9A56              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A56              ; B="0".
 279+ 9A56
 280+ 9A56 04           4 inc b
 281+ 9A57 3C           	inc a
 282+ 9A58 20 FC        	jr nz,4B
 283+ 9A5A 78           	ld a,b
 284+ 9A5B 08           	ex af,af
 285+ 9A5C 2A D3 89     	ld hl,(Indice_Sprite_der)
 286+ 9A5F 23           5 inc hl
 287+ 9A60 23           	inc hl
 288+ 9A61 10 FC        	djnz 5B
 289+ 9A63 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9A66 CD 35 8D     	call Extrae_address
 291+ 9A69 22 CD 89     	ld (Puntero_objeto),hl
 292+ 9A6C
 293+ 9A6C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A6C              ; _(Posicion_actual).
 295+ 9A6C
 296+ 9A6C 21 CB 89     	ld hl,Posicion_actual
 297+ 9A6F 34           	inc (hl)
 298+ 9A70 08               ex af,af
 299+ 9A71 6F           	ld l,a
 300+ 9A72 18 DD        	jr 6B
 301+ 9A74
 302+ 9A74              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A74
 304+ 9A74 47           3 ld b,a
 305+ 9A75 2A D5 89     	ld hl,(Indice_Sprite_izq)
 306+ 9A78 23           2 inc hl
 307+ 9A79 23           	inc hl
 308+ 9A7A 10 FC        	djnz 2B
 309+ 9A7C 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A7F C9           8 ret
 311+ 9A80
 312+ 9A80              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A80              ;
 314+ 9A80              ;	24/7/22
 315+ 9A80              ;
 316+ 9A80              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A80              ;
 318+ 9A80              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A80              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A80              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A80
 322+ 9A80 3A D1 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A83 A7           	and a
 324+ 9A84 20 1F        	jr nz,1F
 325+ 9A86 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A88 32 D1 89         ld (CTRL_DESPLZ),a
 327+ 9A8B
 328+ 9A8B 21 CA 89     	ld hl,Columns
 329+ 9A8E 34           	inc (hl)
 330+ 9A8F 3A DD 89     	ld a,(Cuad_objeto)
 331+ 9A92 E6 01        	and 1
 332+ 9A94 28 0F        	jr z,1F
 333+ 9A96 2A CB 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A99 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A9A 22 CB 89     	ld (Posicion_actual),hl
 336+ 9A9D CD 90 9C     	call Genera_coordenadas
 337+ 9AA0 CD 05 9C     	call Inc_CTRL_DESPLZ
 338+ 9AA3 18 03        	jr 2F
 339+ 9AA5 CD 05 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AA8 C9           2 ret
 341+ 9AA9
 342+ 9AA9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AA9              ;
 344+ 9AA9              ;	24/7/22
 345+ 9AA9              ;
 346+ 9AA9              ;	Ciclo_completo.
 347+ 9AA9              ;
 348+ 9AA9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AA9              ;
 350+ 9AA9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AA9              ; 	Decrementamos (Columns).
 352+ 9AA9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AA9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AA9
 355+ 9AA9
 356+ 9AA9 3A D1 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AAC FE FF        	cp $ff
 358+ 9AAE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AB0 E6 F0        	and $f0
 360+ 9AB2 20 28        	jr nz,3F
 361+ 9AB4
 362+ 9AB4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AB4
 364+ 9AB4 3A D1 89     	ld a,(CTRL_DESPLZ)
 365+ 9AB7 47           	ld b,a
 366+ 9AB8 3E F8        	ld a,$f8
 367+ 9ABA 80           	add b
 368+ 9ABB 32 D1 89     	ld (CTRL_DESPLZ),a
 369+ 9ABE 18 1C        	jr 3F
 370+ 9AC0 21 CA 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AC3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AC4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AC5 32 D1 89     	ld (CTRL_DESPLZ),a
 374+ 9AC8 3A DD 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9ACB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9ACD 20 0A        	jr nz,2F
 377+ 9ACF 2A CB 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AD2 23           	inc hl
 379+ 9AD3 22 CB 89     	ld (Posicion_actual),hl
 380+ 9AD6 CD 90 9C     	call Genera_coordenadas
 381+ 9AD9
 382+ 9AD9              ; Inicia el puntero de Sprite.
 383+ 9AD9
 384+ 9AD9 CD 4C 8D     2 call Inicia_puntero_objeto_der
 385+ 9ADC C9           3 ret
 386+ 9ADD
 387+ 9ADD              ; ******************************************************************************************************************************************************************************************
 388+ 9ADD              ;
 389+ 9ADD              ;	15/02/23
 390+ 9ADD              ;
 391+ 9ADD              ;	Mov_left.
 392+ 9ADD              ;
 393+ 9ADD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9ADD              ;
 395+ 9ADD 21 F7 89     Mov_left ld hl,Ctrl_0
 396+ 9AE0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9AE2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9AE2              ; 																	; _ en el caso de que no lo haya.
 399+ 9AE2 3A F7 89     	ld a,(Ctrl_0)
 400+ 9AE5 CB 77        	bit 6,a
 401+ 9AE7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9AE9
 403+ 9AE9 CD FF 9B     	call Stop_Amadeus_left
 404+ 9AEC C8           	ret z
 405+ 9AED 20 4A        	jr nz,8F
 406+ 9AEF
 407+ 9AEF 3A CF 89     11 ld a,(Coordenada_X)
 408+ 9AF2 A7           	and a
 409+ 9AF3 20 44        	jr nz,8F
 410+ 9AF5
 411+ 9AF5 3A D1 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9AF8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9AF9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9AFB
 415+ 9AFB              ; ---------- ---------- ----------
 416+ 9AFB
 417+ 9AFB 3A DE 89     	ld a,(Vel_left)
 418+ 9AFE FE 02        	cp 2
 419+ 9B00 28 0F        	jr z,1F
 420+ 9B02 38 04        	jr c,6F
 421+ 9B04 FE 04        	cp 4
 422+ 9B06 28 12        	jr z,7F
 423+ 9B08
 424+ 9B08              ; ---------- ---------- ----------
 425+ 9B08
 426+ 9B08 3A D1 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B0B FE F8        	cp $f8
 428+ 9B0D 20 2A        	jr nz,8F
 429+ 9B0F 18 10        	jr 4F
 430+ 9B11 3A D1 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B14 FE F9        	cp $f9
 432+ 9B16 20 21        	jr nz,8F
 433+ 9B18 18 07        	jr 4F
 434+ 9B1A 3A D1 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B1D FE FB        	cp $fb
 436+ 9B1F 20 18        	jr nz,8F
 437+ 9B21
 438+ 9B21              ; ---------- ---------- ----------
 439+ 9B21
 440+ 9B21              4
 441+ 9B21 CD 27 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B24              ;	call Reinicio
 443+ 9B24
 444+ 9B24              ; ---------- ---------- ----------
 445+ 9B24
 446+ 9B24 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B26 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B27
 449+ 9B27              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B27              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B27
 452+ 9B27 CD 40 9B     	call DESPLZ_IZQ
 453+ 9B2A C1           	pop bc
 454+ 9B2B 10 F9        	djnz 5B
 455+ 9B2D 2A CB 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B30 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B31 22 CB 89     	ld (Posicion_actual),hl
 458+ 9B34 CD 90 9C     	call Genera_coordenadas
 459+ 9B37 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B39
 461+ 9B39              ; ---------- ---------- ----------
 462+ 9B39
 463+ 9B39              ; Movemos, no hay recolocación.
 464+ 9B39
 465+ 9B39 2A CB 89     8 ld hl,(Posicion_actual)
 466+ 9B3C CD 40 9B     	call DESPLZ_IZQ
 467+ 9B3F C9           2 ret
 468+ 9B40
 469+ 9B40              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B40              ;
 471+ 9B40              ;	22/9/22
 472+ 9B40
 473+ 9B40              DESPLZ_IZQ
 474+ 9B40
 475+ 9B40 CD 4F 9B     	call Desplaza_izquierda
 476+ 9B43 CD 9B 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B46 CD C3 9B     	call Ciclo_completo_2
 478+ 9B49 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B4C CB BE        	res 7,(hl)
 480+ 9B4E C9           	ret
 481+ 9B4F
 482+ 9B4F              Desplaza_izquierda
 483+ 9B4F
 484+ 9B4F 3A DE 89     	ld a,(Vel_left)
 485+ 9B52 47           	ld b,a
 486+ 9B53 2A D9 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B56 23           1 inc hl
 488+ 9B57 23           	inc hl
 489+ 9B58 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B5A 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B5D CD 35 8D     	call Extrae_address
 492+ 9B60 22 CD 89     	ld (Puntero_objeto),hl
 493+ 9B63
 494+ 9B63              ; Modifica (Puntero_DESPLZ_der).
 495+ 9B63
 496+ 9B63              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9B63              ; Cuántos movimientos hemos hecho ??
 498+ 9B63              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9B63
 500+ 9B63 2A D5 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9B66 EB           	ex de,hl
 502+ 9B67 A7           	and a
 503+ 9B68 ED 52        	sbc hl,de
 504+ 9B6A CB 3D        	srl l
 505+ 9B6C 3E 08        6 ld a,8
 506+ 9B6E 95           	sub l
 507+ 9B6F 30 1E        	jr nc,3F
 508+ 9B71
 509+ 9B71              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9B71              ; B="0".
 511+ 9B71
 512+ 9B71 04           4 inc b
 513+ 9B72 3C           	inc a
 514+ 9B73 20 FC        	jr nz,4B
 515+ 9B75 78           	ld a,b
 516+ 9B76 08           	ex af,af
 517+ 9B77 2A D5 89     	ld hl,(Indice_Sprite_izq)
 518+ 9B7A 23           5 inc hl
 519+ 9B7B 23           	inc hl
 520+ 9B7C 10 FC        	djnz 5B
 521+ 9B7E 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9B81 CD 35 8D     	call Extrae_address
 523+ 9B84 22 CD 89     	ld (Puntero_objeto),hl
 524+ 9B87
 525+ 9B87              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9B87              ; _(Posicion_actual).
 527+ 9B87
 528+ 9B87 21 CB 89     	ld hl,Posicion_actual
 529+ 9B8A 35           	dec (hl)
 530+ 9B8B 08           	ex af,af
 531+ 9B8C 6F           	ld l,a
 532+ 9B8D 18 DD        	jr 6B
 533+ 9B8F
 534+ 9B8F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9B8F
 536+ 9B8F 47           3 ld b,a
 537+ 9B90 2A D3 89     	ld hl,(Indice_Sprite_der)
 538+ 9B93 23           2 inc hl
 539+ 9B94 23           	inc hl
 540+ 9B95 10 FC        	djnz 2B
 541+ 9B97 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9B9A C9           8 ret
 543+ 9B9B
 544+ 9B9B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9B9B              ;
 546+ 9B9B              ;	modifica_parametros_1er_DESPLZ
 547+ 9B9B              ;
 548+ 9B9B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9B9B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9B9B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9B9B
 552+ 9B9B 3A D1 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9B9E A7           	and a
 554+ 9B9F 20 1E        	jr nz,1F
 555+ 9BA1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BA2 32 D1 89         ld (CTRL_DESPLZ),a
 557+ 9BA5 21 CA 89     	ld hl,Columns
 558+ 9BA8 34           	inc (hl)
 559+ 9BA9 3A DD 89     	ld a,(Cuad_objeto)
 560+ 9BAC E6 01        	and 1
 561+ 9BAE 20 0F        	jr nz,1F
 562+ 9BB0 2A CB 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BB3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BB4 22 CB 89     	ld (Posicion_actual),hl
 565+ 9BB7 CD 90 9C     	call Genera_coordenadas
 566+ 9BBA CD 16 9C     	call Dec_CTRL_DESPLZ
 567+ 9BBD 18 03        	jr 2F
 568+ 9BBF CD 16 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BC2 C9           2 ret
 570+ 9BC3
 571+ 9BC3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9BC3
 573+ 9BC3 3A D1 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9BC6 FE F7        	cp $f7
 575+ 9BC8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9BCA 30 2C        	jr nc,3F
 577+ 9BCC
 578+ 9BCC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9BCC
 580+ 9BCC 06 00        	ld b,0
 581+ 9BCE 04           4 inc b
 582+ 9BCF 3C           	inc a
 583+ 9BD0 FE F7        	cp $f7
 584+ 9BD2 20 FA        	jr nz,4B
 585+ 9BD4 3E FF        	ld a,$ff
 586+ 9BD6 90           	sub b
 587+ 9BD7 32 D1 89     	ld (CTRL_DESPLZ),a
 588+ 9BDA 18 1C        	jr 3F
 589+ 9BDC
 590+ 9BDC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9BDC
 592+ 9BDC 21 CA 89     1 ld hl,Columns
 593+ 9BDF 35           	dec (hl)
 594+ 9BE0 AF           	xor a
 595+ 9BE1 32 D1 89     	ld (CTRL_DESPLZ),a
 596+ 9BE4 3A DD 89     	ld a,(Cuad_objeto)
 597+ 9BE7 E6 01        	and 1
 598+ 9BE9 28 0A        	jr z,2F
 599+ 9BEB 2A CB 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9BEE 2B           	dec hl
 601+ 9BEF 22 CB 89     	ld (Posicion_actual),hl
 602+ 9BF2 CD 90 9C     	call Genera_coordenadas
 603+ 9BF5
 604+ 9BF5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9BF5
 606+ 9BF5 CD 5F 8D     2 call Inicia_puntero_objeto_izq
 607+ 9BF8 C9           3 ret
 608+ 9BF9
 609+ 9BF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9BF9              ;
 611+ 9BF9              ;	19/10/22
 612+ 9BF9              ;
 613+ 9BF9              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9BF9              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9BF9
 616+ 9BF9 3A CF 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9BFC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9BFE C9           	ret
 619+ 9BFF
 620+ 9BFF              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9BFF              ;
 622+ 9BFF              ;	19/10/22
 623+ 9BFF              ;
 624+ 9BFF              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9BFF              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9BFF
 627+ 9BFF 3A CF 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C02 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C04 C9           	ret
 630+ 9C05
 631+ 9C05              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C05              ;
 633+ 9C05              ;	24/7/22
 634+ 9C05              ;
 635+ 9C05              ;	Inc_CTRL_DESPLZ
 636+ 9C05              ;
 637+ 9C05              ;
 638+ 9C05              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C05
 640+ 9C05 21 D1 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C08 3A DF 89     	ld a,(Vel_right)
 642+ 9C0B A7           	and a
 643+ 9C0C 28 06        	jr z,1F
 644+ 9C0E 47           	ld b,a
 645+ 9C0F 34           3 inc (hl)
 646+ 9C10 10 FD        	djnz 3B
 647+ 9C12 18 01        	jr 2F
 648+ 9C14 34           1 inc (hl)
 649+ 9C15 C9           2 ret
 650+ 9C16
 651+ 9C16              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C16              ;
 653+ 9C16              ;	5/2/23
 654+ 9C16              ;
 655+ 9C16              ;	Dec_CTRL_DESPLZ
 656+ 9C16              ;
 657+ 9C16              ;
 658+ 9C16              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C16
 660+ 9C16 21 D1 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C19 3A DE 89     	ld a,(Vel_left)
 662+ 9C1C A7           	and a
 663+ 9C1D 28 06        	jr z,1F
 664+ 9C1F 47           	ld b,a
 665+ 9C20 35           3 dec (hl)
 666+ 9C21 10 FD        	djnz 3B
 667+ 9C23 18 01        	jr 2F
 668+ 9C25 35           1 dec (hl)
 669+ 9C26 C9           2 ret
 670+ 9C27
 671+ 9C27              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C27
 673+ 9C27 2A CB 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C2A 01 1F 00     	ld bc,31
 675+ 9C2D A7           	and a
 676+ 9C2E ED 4A        	adc hl,bc
 677+ 9C30 22 CB 89     	ld (Posicion_actual),hl
 678+ 9C33 21 F7 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C36 CB C6        	set 0,(hl)
 680+ 9C38 C9           	ret
 681+ 9C39
 682+ 9C39              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C39
 684+ 9C39 2A CB 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C3C 01 1F 00     	ld bc,31
 686+ 9C3F A7           	and a
 687+ 9C40 ED 42        	sbc hl,bc
 688+ 9C42 22 CB 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C45 21 F7 89     	ld hl,Ctrl_0
 690+ 9C48 CB CE        	set 1,(hl)
 691+ 9C4A C9           	ret
 692+ 9C4B
 693+ 9C4B              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C4B
 695+ 9C4B 24           Reaparece_abajo inc h
 696+ 9C4C 01 E0 17     	ld bc,$17e0
 697+ 9C4F A7           	and a
 698+ 9C50 ED 4A        	adc hl,bc
 699+ 9C52 22 CB 89     	ld (Posicion_actual),hl
 700+ 9C55 21 F7 89     	ld hl,Ctrl_0
 701+ 9C58 CB D6        	set 2,(hl)
 702+ 9C5A C9           	ret
 703+ 9C5B
 704+ 9C5B              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C5B
 706+ 9C5B 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C5E A7           	and a
 708+ 9C5F ED 42        	sbc hl,bc
 709+ 9C61 22 CB 89     	ld (Posicion_actual),hl
 710+ 9C64 21 F7 89     	ld hl,Ctrl_0
 711+ 9C67 CB DE        	set 3,(hl)
 712+ 9C69 C9           	ret
 713+ 9C6A
 714+ 9C6A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9C6A              ;
 716+ 9C6A              ;	15/07/23
 717+ 9C6A
 718+ 9C6A              Reinicio
 719+ 9C6A
 720+ 9C6A              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9C6A
 722+ 9C6A AF           	xor a
 723+ 9C6B 21 FE 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9C6E CD 8C 9C     	call Limpia_contenido_hl
 725+ 9C71
 726+ 9C71 21 CB 89     	ld hl,Posicion_actual
 727+ 9C74 CD 8C 9C     	call Limpia_contenido_hl
 728+ 9C77
 729+ 9C77 CD AD 9F     	call Inicializa_Puntero_indice_mov
 730+ 9C7A CD 37 9F     	call Inicia_Puntero_mov
 731+ 9C7D
 732+ 9C7D 21 00 8A     	ld hl,Incrementa_puntero
 733+ 9C80 06 05        	ld b,5
 734+ 9C82 77           1 ld (hl),a
 735+ 9C83 23           	inc hl
 736+ 9C84 10 FC        	djnz 1B
 737+ 9C86
 738+ 9C86 21 0A 8A     	ld hl,Ctrl_2
 739+ 9C89 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9C8B
 741+ 9C8B C9           	ret
 742+ 9C8C
 743+ 9C8C 77           Limpia_contenido_hl	ld (hl),a
 744+ 9C8D 23           	inc hl
 745+ 9C8E 77           	ld (hl),a
 746+ 9C8F C9           	ret
 747+ 9C90
 748+ 9C90
# file closed: Direcciones.asm
1275  9C90              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C90              ; ------------------------------------------------------------------------
   2+ 9C90              ;
   3+ 9C90              ;	02/04/23
   4+ 9C90              ;
   5+ 9C90              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C90              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C90              ;
   8+ 9C90              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C90              ;
  10+ 9C90              ;	Modifica: A,BC y DE.
  11+ 9C90
  12+ 9C90 C5           Genera_coordenadas push bc
  13+ 9C91 E5           	push hl
  14+ 9C92 D5           	push de
  15+ 9C93
  16+ 9C93 2A CB 89     	ld hl,(Posicion_actual)
  17+ 9C96
  18+ 9C96 7D           	ld a,l
  19+ 9C97 E6 1F        	and $1f
  20+ 9C99 32 CF 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C9C
  22+ 9C9C CD 05 99     	call calcula_tercio
  23+ 9C9F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CA0
  25+ 9CA0 1E 00        	ld e,0
  26+ 9CA2 7D           	ld a,l
  27+ 9CA3 E6 E0        	and $e0
  28+ 9CA5 28 01        	jr z,1F
  29+ 9CA7 04           	inc b
  30+ 9CA8
  31+ 9CA8 04           1 inc b
  32+ 9CA9 05           	dec b
  33+ 9CAA 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CAC              ;														; _ , salimos.
  35+ 9CAC 1C           3 inc e
  36+ 9CAD D6 20        	sub 32
  37+ 9CAF 20 FB        	jr nz,3B
  38+ 9CB1 10 F5        	djnz 1B
  39+ 9CB3
  40+ 9CB3 7B           2 ld a,e
  41+ 9CB4 32 D0 89     	ld (Coordenada_y),a
  42+ 9CB7
  43+ 9CB7 D1           	pop de
  44+ 9CB8 E1           	pop hl
  45+ 9CB9 C1           	pop bc
  46+ 9CBA
  47+ 9CBA C9           	ret
  48+ 9CBB
  49+ 9CBB              ; ------------------------------------------------------------------------
  50+ 9CBB              ;	28/05/23
  51+ 9CBB              ;
  52+ 9CBB              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CBB              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CBB              ;
  55+ 9CBB              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CBB              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CBB              ;
  58+ 9CBB              ;		DE="$120d"
  59+ 9CBB              ;
  60+ 9CBB              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CBB              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CBB              ;
  63+ 9CBB              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CBB
  65+ 9CBB              ;	Modifica: A,BC y DE.
  66+ 9CBB
  67+ 9CBB
  68+ 9CBB              Genera_coordenadas_disparo
  69+ 9CBB
  70+ 9CBB              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CBB
  72+ 9CBB 7D           	ld a,l
  73+ 9CBC E6 1F        	and $1f
  74+ 9CBE 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CBF CD 05 99     	call calcula_tercio
  76+ 9CC2 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CC3 1E 00        	ld e,0
  78+ 9CC5 7D           	ld a,l
  79+ 9CC6 E6 E0        	and $e0
  80+ 9CC8 28 01        	jr z,1F
  81+ 9CCA 04           	inc b
  82+ 9CCB 1C           1 inc e
  83+ 9CCC D6 20        	sub 32
  84+ 9CCE 20 FB        	jr nz,1B
  85+ 9CD0 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CD2 C9           	ret
  87+ 9CD3
# file closed: Genera_coordenadas.asm
1276  9CD3              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CD3
   2+ 9CD3
   3+ 9CD3              ;   07/07/23
   4+ 9CD3              ;
   5+ 9CD3              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CD3              ;
   7+ 9CD3              ;   Codificación:
   8+ 9CD3              ;
   9+ 9CD3              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CD3              ;
  11+ 9CD3              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CD3              ;
  13+ 9CD3              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CD3              ;
  15+ 9CD3              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CD3              ;
  17+ 9CD3              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CD3              ;                               ..... %01000010 Vel_up 4
  19+ 9CD3              ;                                               Vel_down 2
  20+ 9CD3              ;                               ..... $42
  21+ 9CD3              ;
  22+ 9CD3              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CD3              ;
  24+ 9CD3              ;                               ..... %01000010 Vel_left 4
  25+ 9CD3              ;                                               Vel_right 2
  26+ 9CD3              ;                               ..... $42
  27+ 9CD3              ;
  28+ 9CD3              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CD3              ;
  30+ 9CD3              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CD3              ;
  32+ 9CD3              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CD3              ;
  34+ 9CD3              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CD3              ;                                     $53
  36+ 9CD3              ;
  37+ 9CD3              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CD3              ;
  39+ 9CD3              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CD3              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CD3              ;
  42+ 9CD3              ;                       Arriba ..... $81
  43+ 9CD3              ;                       Arriba - izquierda ..... $a1
  44+ 9CD3              ;                       Arriba - derecha ..... $91
  45+ 9CD3              ;
  46+ 9CD3              ;                       Abajo ..... $41
  47+ 9CD3              ;                       Abajo - izquierda ..... $61
  48+ 9CD3              ;                       Abajo - derecha ..... $51
  49+ 9CD3              ;
  50+ 9CD3              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CD3              ;
  52+ 9CD3              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CD3              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CD3              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CD3              ;
  56+ 9CD3              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CD3              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CD3              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CD3              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CD3              ;
  61+ 9CD3              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CD3              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CD3              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CD3              ;
  65+ 9CD3              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CD3              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CD3              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CD3              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CD3
  70+ 9CD3              ; ----- ----- ----- ----- -----
  71+ 9CD3
  72+ 9CD3 FF 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CD5 07 9D            defw F_1
  74+ 9CD7 11 9D            defw F_2
  75+ 9CD9 1B 9D            defw Codo_abajo_derecha
  76+ 9CDB 4F 9D            defw Derecha_y_subiendo
  77+ 9CDD 59 9D            defw Derecha_y_subiendo_1
  78+ 9CDF 63 9D            defw F_3
  79+ 9CE1 6D 9D            defw F_4
  80+ 9CE3 77 9D            defw Derecha_y_bajando
  81+ 9CE5 81 9D            defw Derecha_y_bajando_1
  82+ 9CE7 8B 9D            defw Derecha_y_bajando_2
  83+ 9CE9 95 9D            defw Codo_derecha_abajo
  84+ 9CEB C5 9D            defw Codo_abajo_izq.
  85+ 9CED F9 9D            defw Izquierda_y_subiendo
  86+ 9CEF 03 9E            defw Izquierda_y_subiendo_1
  87+ 9CF1 0D 9E            defw F_5
  88+ 9CF3 17 9E            defw F_6
  89+ 9CF5 21 9E            defw Izquierda_y_bajando
  90+ 9CF7 2B 9E            defw Izquierda_y_bajando_1
  91+ 9CF9 35 9E            defw Izquierda_y_bajando_2
  92+ 9CFB 3F 9E            defw Codo_izquierda_abajo
  93+ 9CFD 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CFF
  95+ 9CFF 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D03 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D07
  98+ 9D07 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D0B 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D0F 08 00
 100+ 9D11 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D15 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D19 0F FE
 102+ 9D1B
 103+ 9D1B 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D1F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D23 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D27 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D2B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D2F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D33 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D37 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D3B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D3F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D43 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D47 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D4B 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D4F
 117+ 9D4F 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D53 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D57 06 00
 119+ 9D59
 120+ 9D59 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D5D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D61 02 00
 122+ 9D63
 123+ 9D63 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D67 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D6B 04 00
 125+ 9D6D 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D71 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D75 08 00
 127+ 9D77
 128+ 9D77 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D7B 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D7F 02 00
 130+ 9D81
 131+ 9D81 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D85 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D89 06 00
 133+ 9D8B
 134+ 9D8B 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D8F 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D93 06 00
 136+ 9D95
 137+ 9D95              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D95
 139+ 9D95 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D99 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D9D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DA1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DA5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DA9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DAD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DB1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DB5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DB9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DBD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DC1 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DC5
 152+ 9DC5 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DC9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DCD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DD1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DD5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DD9 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9DDD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9DE1 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DE5 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9DE9 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9DED 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DF1 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DF5 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DF9
 166+ 9DF9 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DFD 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E01 06 00
 168+ 9E03
 169+ 9E03 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E07 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E0B 02 00
 171+ 9E0D
 172+ 9E0D 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E11 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E15 04 00
 174+ 9E17 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E1B 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E1F 08 00
 176+ 9E21
 177+ 9E21 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E25 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E29 02 00
 179+ 9E2B
 180+ 9E2B 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E2F 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E33 06 00
 182+ 9E35
 183+ 9E35 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E39 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E3D 06 00
 185+ 9E3F
 186+ 9E3F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E43 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E47 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E4B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E4F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E53 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E57 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E5B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E5F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E63 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E67 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E6B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E6F
 199+ 9E6F              ; ----- ----- ----- ----- -----
 200+ 9E6F              ;
 201+ 9E6F              ;   27/06/23
 202+ 9E6F
 203+ 9E6F              Movimiento
 204+ 9E6F
 205+ 9E6F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E6F
 207+ 9E6F              ;    ld hl,(Posicion_actual)
 208+ 9E6F
 209+ 9E6F 3A 0A 8A         ld a,(Ctrl_2)
 210+ 9E72 CB 57            bit 2,a
 211+ 9E74 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E76
 213+ 9E76 2A FC 89         ld hl,(Puntero_mov)
 214+ 9E79 7E               ld a,(hl)
 215+ 9E7A
 216+ 9E7A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E7A
 218+ 9E7A              Inicia_desplazamiento.
 219+ 9E7A
 220+ 9E7A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E7A
 222+ 9E7A CD 6E 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E7D
 224+ 9E7D              ; Iniciamos (Repetimos_mov).
 225+ 9E7D
 226+ 9E7D 7E               ld a,(hl)
 227+ 9E7E E6 0F            and $0f
 228+ 9E80 32 02 8A         ld (Repetimos_desplazamiento),a
 229+ 9E83 32 03 8A         ld (Repetimos_desplazamiento_backup),a
 230+ 9E86
 231+ 9E86              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E86
 233+ 9E86 23               inc hl
 234+ 9E87 7E               ld a,(hl)
 235+ 9E88 32 05 8A         ld (Cola_de_desplazamiento),a
 236+ 9E8B 2B               dec hl
 237+ 9E8C
 238+ 9E8C 21 0A 8A         ld hl,Ctrl_2
 239+ 9E8F CB D6            set 2,(hl)
 240+ 9E91
 241+ 9E91              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E91              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E91
 244+ 9E91              Desplazamiento_iniciado
 245+ 9E91
 246+ 9E91 CD 42 9F         call Aplica_desplazamiento
 247+ 9E94
 248+ 9E94 3A 0A 8A         ld a,(Ctrl_2)
 249+ 9E97 CB 67            bit 4,a
 250+ 9E99 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E9A
 252+ 9E9A 21 02 8A     3 ld hl,Repetimos_desplazamiento
 253+ 9E9D 35               dec (hl)
 254+ 9E9E C0               ret nz
 255+ 9E9F
 256+ 9E9F              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E9F              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E9F              ; Analiza (Cola_de_desplazamiento).
 259+ 9E9F
 260+ 9E9F 3A 05 8A     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EA2 A7               and a
 262+ 9EA3 CC 97 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EA6 28 30            jr z,Reinicia_el_movimiento
 264+ 9EA8
 265+ 9EA8 FE FF            cp $ff
 266+ 9EAA 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EAC
 268+ 9EAC FE FE            cp $fe
 269+ 9EAE CC 1B 9F         call z,Fijamos_bucle
 270+ 9EB1 28 25            jr z,Reinicia_el_movimiento
 271+ 9EB3
 272+ 9EB3 FE FD            cp $fd
 273+ 9EB5 20 11            jr nz,1F
 274+ 9EB7
 275+ 9EB7              ; ---
 276+ 9EB7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EB7
 278+ 9EB7 3A 0A 8A         ld a,(Ctrl_2)
 279+ 9EBA CB 5F            bit 3,a
 280+ 9EBC 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EBE
 282+ 9EBE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EBE
 284+ 9EBE 21 0A 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EC1 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EC3
 287+ 9EC3 CD 2C 9F         call Inicia_Repetimos_movimiento
 288+ 9EC6 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EC8              ; ---
 290+ 9EC8
 291+ 9EC8 FE 01        1 cp 1
 292+ 9ECA CA 05 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9ECD
 294+ 9ECD 3D               dec a
 295+ 9ECE 32 05 8A         ld (Cola_de_desplazamiento),a
 296+ 9ED1
 297+ 9ED1 3A 03 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9ED4 32 02 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9ED7              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9ED7 C9               ret
 301+ 9ED8
 302+ 9ED8              Reinicia_el_movimiento
 303+ 9ED8
 304+ 9ED8 3A 0A 8A         ld a,(Ctrl_2)
 305+ 9EDB CB 5F            bit 3,a
 306+ 9EDD 28 1B            jr z,2F
 307+ 9EDF
 308+ 9EDF              ; (Cola_de_desplazamiento)="254".
 309+ 9EDF
 310+ 9EDF 21 04 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9EE2 35               dec (hl)
 312+ 9EE3 20 15            jr nz,2F
 313+ 9EE5
 314+ 9EE5              ; Fin de las repeticiones del último movimiento.
 315+ 9EE5
 316+ 9EE5 21 0A 8A         ld hl,Ctrl_2
 317+ 9EE8 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9EEA
 319+ 9EEA 2A FC 89         ld hl,(Puntero_mov)
 320+ 9EED 23               inc hl
 321+ 9EEE 23               inc hl
 322+ 9EEF 23               inc hl
 323+ 9EF0 22 FC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EF3              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EF3 7E               ld a,(hl)
 326+ 9EF4 32 05 8A         ld (Cola_de_desplazamiento),a
 327+ 9EF7
 328+ 9EF7 C3 9F 9E         jp Cola
 329+ 9EFA
 330+ 9EFA
 331+ 9EFA CD 37 9F     2 call Inicia_Puntero_mov
 332+ 9EFD
 333+ 9EFD 21 0A 8A         ld hl,Ctrl_2
 334+ 9F00 CB 96            res 2,(hl)
 335+ 9F02
 336+ 9F02 C3 6F 9E         jp Movimiento
 337+ 9F05
 338+ 9F05              Siguiente_desplazamiento
 339+ 9F05
 340+ 9F05              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F05              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F05
 343+ 9F05 21 0A 8A         ld hl,Ctrl_2
 344+ 9F08 CB 96            res 2,(hl)
 345+ 9F0A
 346+ 9F0A 2A FC 89         ld hl,(Puntero_mov)
 347+ 9F0D 23               inc hl
 348+ 9F0E 23               inc hl
 349+ 9F0F 22 FC 89         ld (Puntero_mov),hl
 350+ 9F12
 351+ 9F12 7E               ld a,(hl)
 352+ 9F13 A7               and a
 353+ 9F14 CC 97 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F17 CA D8 9E         jp z,Reinicia_el_movimiento
 355+ 9F1A
 356+ 9F1A C9               ret
 357+ 9F1B              ; Subrutinas -----------------------------------------
 358+ 9F1B              ; ---------- --------- --------- ---------- ----------
 359+ 9F1B              ;
 360+ 9F1B              ;   24/07/23
 361+ 9F1B              ;
 362+ 9F1B              ;   Fijamos_bucle
 363+ 9F1B              ;
 364+ 9F1B              ;
 365+ 9F1B
 366+ 9F1B              Fijamos_bucle
 367+ 9F1B
 368+ 9F1B 3A 00 8A         ld a,(Incrementa_puntero)
 369+ 9F1E 3C               inc a
 370+ 9F1F 32 01 8A         ld (Incrementa_puntero_backup),a
 371+ 9F22
 372+ 9F22 CD 97 9F         call Incrementa_Puntero_indice_mov
 373+ 9F25 2A FA 89         ld hl,(Puntero_indice_mov)
 374+ 9F28 22 FE 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F2B C9               ret
 376+ 9F2C
 377+ 9F2C              ; ---------- --------- --------- ---------- ----------
 378+ 9F2C              ;
 379+ 9F2C              ;   07/7/23
 380+ 9F2C              ;
 381+ 9F2C              ;   Inicia_Repetimos_movimiento
 382+ 9F2C              ;
 383+ 9F2C              ;
 384+ 9F2C
 385+ 9F2C              Inicia_Repetimos_movimiento
 386+ 9F2C
 387+ 9F2C              ; Iniciamos (Repetimos_movimiento).
 388+ 9F2C
 389+ 9F2C DD 2A FC 89      ld ix,(Puntero_mov)
 390+ 9F30 DD 7E 02         ld a,(ix+2)
 391+ 9F33 32 04 8A         ld (Repetimos_movimiento),a
 392+ 9F36
 393+ 9F36 C9               ret
 394+ 9F37
 395+ 9F37              ; ---------- --------- --------- ---------- ----------
 396+ 9F37              ;
 397+ 9F37              ;   26/6/23
 398+ 9F37              ;
 399+ 9F37              ;   Inicia_Puntero_mov
 400+ 9F37              ;
 401+ 9F37              ;
 402+ 9F37
 403+ 9F37 2A FA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F3A 5E               ld e,(hl)
 405+ 9F3B 23               inc hl
 406+ 9F3C 56               ld d,(hl)
 407+ 9F3D EB               ex de,hl
 408+ 9F3E 22 FC 89         ld (Puntero_mov),hl
 409+ 9F41 C9               ret
 410+ 9F42
 411+ 9F42              ; ---------- --------- --------- ---------- ----------
 412+ 9F42              ;
 413+ 9F42              ;   27/06/23
 414+ 9F42              ;
 415+ 9F42              ;   Aplica_movimiento.
 416+ 9F42
 417+ 9F42              Aplica_desplazamiento
 418+ 9F42
 419+ 9F42              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F42
 421+ 9F42 2A FC 89         ld hl, (Puntero_mov)
 422+ 9F45
 423+ 9F45 7E               ld a,(hl)
 424+ 9F46 E6 F0            and $f0
 425+ 9F48 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F49
 427+ 9F49 CB 7E            bit 7,(hl)
 428+ 9F4B 28 03            jr z,1F
 429+ 9F4D CD 7C 99         call Mov_up
 430+ 9F50 2A FC 89     1 ld hl, (Puntero_mov)
 431+ 9F53 CB 76            bit 6,(hl)
 432+ 9F55 28 03            jr z,2F
 433+ 9F57 CD 4B 99         call Mov_down
 434+ 9F5A 2A FC 89     2 ld hl, (Puntero_mov)
 435+ 9F5D CB 6E            bit 5,(hl)
 436+ 9F5F 28 03            jr z,3F
 437+ 9F61 CD DD 9A         call Mov_left
 438+ 9F64 2A FC 89     3 ld hl, (Puntero_mov)
 439+ 9F67 CB 66            bit 4,(hl)
 440+ 9F69 C8               ret z
 441+ 9F6A CD BF 99         call Mov_right
 442+ 9F6D C9               ret
 443+ 9F6E
 444+ 9F6E              ; ---------- --------- --------- ---------- ----------
 445+ 9F6E              ;
 446+ 9F6E              ;   26/06/23
 447+ 9F6E              ;
 448+ 9F6E              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F6E
 450+ 9F6E              Ajusta_velocidad_desplazamiento
 451+ 9F6E
 452+ 9F6E              ; 1er byte de la cadena de movimiento.
 453+ 9F6E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F6E
 455+ 9F6E CD 8C 9F         call Extrae_nibble_alto
 456+ 9F71
 457+ 9F71 32 E0 89         ld (Vel_up),a
 458+ 9F74 79               ld a,c
 459+ 9F75 E6 0F            and $0f
 460+ 9F77 32 E1 89         ld (Vel_down),a
 461+ 9F7A
 462+ 9F7A              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F7A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F7A
 465+ 9F7A 23               inc hl
 466+ 9F7B CD 8C 9F         call Extrae_nibble_alto
 467+ 9F7E
 468+ 9F7E 32 DE 89         ld (Vel_left),a
 469+ 9F81 79               ld a,c
 470+ 9F82 E6 0F            and $0f
 471+ 9F84 32 DF 89         ld (Vel_right),a
 472+ 9F87
 473+ 9F87              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F87
 475+ 9F87 23               inc hl
 476+ 9F88 22 FC 89         ld (Puntero_mov),hl
 477+ 9F8B C9               ret
 478+ 9F8C
 479+ 9F8C 06 04        Extrae_nibble_alto ld b,4
 480+ 9F8E 7E               ld a,(hl)
 481+ 9F8F 4F               ld c,a
 482+ 9F90 E6 F0            and $f0
 483+ 9F92 CB 3F        1 srl a
 484+ 9F94 10 FC            djnz 1B
 485+ 9F96 C9               ret
 486+ 9F97
 487+ 9F97              ; ---------- --------- --------- ---------- ----------
 488+ 9F97              ;
 489+ 9F97              ;   5/7/23
 490+ 9F97              ;
 491+ 9F97              ;   Incrementa_Puntero_indice_mov
 492+ 9F97
 493+ 9F97              Incrementa_Puntero_indice_mov
 494+ 9F97
 495+ 9F97 21 00 8A         ld hl,Incrementa_puntero
 496+ 9F9A 34               inc (hl)
 497+ 9F9B
 498+ 9F9B 2A FA 89         ld hl,(Puntero_indice_mov)
 499+ 9F9E 01 02 00         ld bc,2
 500+ 9FA1 A7               and a
 501+ 9FA2 09               add hl,bc
 502+ 9FA3 22 FA 89         ld (Puntero_indice_mov),hl
 503+ 9FA6
 504+ 9FA6 7E               ld a,(hl)
 505+ 9FA7 A7               and a
 506+ 9FA8
 507+ 9FA8              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FA8
 509+ 9FA8              ;    jr z,$
 510+ 9FA8
 511+ 9FA8              ;! Reinicia el Patrón de movimiento.
 512+ 9FA8
 513+ 9FA8 CC AD 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FAB
 515+ 9FAB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FAC
 517+ 9FAC C9               ret
 518+ 9FAD
 519+ 9FAD
 520+ 9FAD              ; ---------- --------- --------- ---------- ----------
 521+ 9FAD              ;
 522+ 9FAD              ;   24/07/23
 523+ 9FAD              ;
 524+ 9FAD              ;   Inicializa_Puntero_indice_mov
 525+ 9FAD
 526+ 9FAD              Inicializa_Puntero_indice_mov
 527+ 9FAD
 528+ 9FAD              ; Existe etiqueta de bucle principal???
 529+ 9FAD
 530+ 9FAD 2A FE 89         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FB0 24               inc h
 532+ 9FB1 25               dec h
 533+ 9FB2 28 05            jr z,2F
 534+ 9FB4
 535+ 9FB4 22 FA 89         ld (Puntero_indice_mov),hl
 536+ 9FB7 18 14            jr 3F
 537+ 9FB9
 538+ 9FB9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FB9
 540+ 9FB9 3A 00 8A     2 ld a,(Incrementa_puntero)
 541+ 9FBC 47               ld b,a
 542+ 9FBD
 543+ 9FBD 2A FA 89         ld hl,(Puntero_indice_mov)
 544+ 9FC0 2B           1 dec hl
 545+ 9FC1 2B               dec hl
 546+ 9FC2 10 FC            djnz 1B
 547+ 9FC4 22 FA 89         ld (Puntero_indice_mov),hl
 548+ 9FC7
 549+ 9FC7 AF               xor a
 550+ 9FC8 32 00 8A         ld (Incrementa_puntero),a
 551+ 9FCB 18 06            jr 4F
 552+ 9FCD
 553+ 9FCD 3A 01 8A     3 ld a,(Incrementa_puntero_backup)
 554+ 9FD0 32 00 8A         ld (Incrementa_puntero),a
 555+ 9FD3 C9           4 ret
 556+ 9FD4
 557+ 9FD4
 558+ 9FD4
# file closed: Patrones_de_mov.asm
1277  9FD4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9FD4              ; Relojes y temporizaciones.
   2+ 9FD4
   3+ 9FD4              ; ------------------------------------------------------
   4+ 9FD4              ;
   5+ 9FD4              ;	16/7/23
   6+ 9FD4              ;
   7+ 9FD4              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9FD4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9FD4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9FD4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9FD4              ;
  12+ 9FD4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9FD4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9FD4
  15+ 9FD4              ; Disparo_entidad db 1
  16+ 9FD4              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9FD4              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9FD4
  19+ 9FD4              Habilita_disparos
  20+ 9FD4
  21+ 9FD4 7E           	ld a,(hl)
  22+ 9FD5 A7           	and a
  23+ 9FD6 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9FD7
  25+ 9FD7 EB           	ex de,hl
  26+ 9FD8
  27+ 9FD8 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9FD9 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9FDA
  30+ 9FDA              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9FDA
  32+ 9FDA 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9FDB 7E           	ld a,(hl)
  34+ 9FDC 23           	inc hl
  35+ 9FDD 77           	ld (hl),a
  36+ 9FDE
  37+ 9FDE EB           	ex de,hl						; Habilitamos disparo.
  38+ 9FDF 3E 01        	ld a,1
  39+ 9FE1 77           	ld (hl),a
  40+ 9FE2 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1278  9FE3              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FE3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FE3              ;
   3+ 9FE3              ;	3/1/23
   4+ 9FE3              ;
   5+ 9FE3              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FE3
   7+ 9FE3              ;	ADC HL,SP	LD (addr),SP
   8+ 9FE3              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FE3              ;	ADD IX,SP	LD SP,nn
  10+ 9FE3              ; 	ADD IY,SP	LD SP,HL
  11+ 9FE3              ;				LD SP,IX
  12+ 9FE3              ;	DEC SP		LD SP,IY
  13+ 9FE3
  14+ 9FE3              ;	EX (SP),HL
  15+ 9FE3              ;	EX (SP),IX
  16+ 9FE3              ;	EX (SP),IY
  17+ 9FE3
  18+ 9FE3              ;	INC SP
  19+ 9FE3
  20+ 9FE3
  21+ 9FE3                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 1D 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 0C 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 23 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 21 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 23 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 21 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 1D 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1279  7FD5
1280  7FD5              	SAVESNA "Pruebas.sna", START
1281  7FD5
1282  7FD5
1283  7FD5
1284  7FD5
# file closed: Banco_de_pruebas.asm
