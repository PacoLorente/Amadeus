# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 28 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD F9 9E     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 60 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 70 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD A6 94     	call Cls
 517  8CA2 CD 55 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD A2 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD EA 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3 CD 04 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 529  8CB6 CD D2 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 530  8CB9              ;														   _reponiendo entidades eliminadas.
 531  8CB9 CD 38 93     	call Prepara_Cajas_de_Entidades
 532  8CBC
 533  8CBC
 534  8CBC              ;	Inicia los álbumes de líneas.
 535  8CBC
 536  8CBC CD A3 90     	call Inicia_albumes_de_lineas
 537  8CBF              ;
 538  8CBF CD B3 90     	call Inicia_albumes_de_lineas_Amadeus
 539  8CC2 CD C0 90     	call Inicia_albumes_de_disparos
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD 91 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD 75 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD D4 93     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 4C 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD 81 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD DC 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 60 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD BF 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 3F 9F     	call Motor_de_disparos_entidades
 596  8D04 CD D4 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD 71 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 06 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD EA 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 06 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA B1 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD 94 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A CD 2D 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 663  8D4D ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 664  8D51
 665  8D51              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 666  8D51
 667  8D51              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 668  8D51              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 669  8D51
 670  8D51 3A 6C 8C     	ld a,(Impacto2)
 671  8D54 CB 5F        	bit 3,a
 672  8D56 C4 6B A1     	call nz,Compara_con_coordenadas_de_disparo
 673  8D59
 674  8D59 3A F2 8B     	ld a,(Impacto)
 675  8D5C CB 4F        	bit 1,a
 676  8D5E C4 3D 92     	call nz,Genera_explosion
 677  8D61 20 31        	jr nz,Gestiona_siguiente_entidad
 678  8D63
 679  8D63 3A F2 8B     	ld a,(Impacto)
 680  8D66 A7           	and a
 681  8D67 28 0C        	jr z,3F
 682  8D69
 683  8D69              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D69
 685  8D69              ; 5/7/24
 686  8D69              ; Nota importante:
 687  8D69              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D69              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D69              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D69
 691  8D69 3A BB 89     	ld a,(Impacto_Amadeus)
 692  8D6C A7           	and a
 693  8D6D C4 3D 92     	call nz,Genera_explosion
 694  8D70 20 22        	jr nz,Gestiona_siguiente_entidad
 695  8D72
 696  8D72              ; Falsa colisión !!!
 697  8D72
 698  8D72 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D75
 700  8D75              ; -------------------------------------------
 701  8D75
 702  8D75 CD 4A 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D78 CD 72 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D7B CD 3A 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 705  8D7E CD E6 94     	call Genera_datos_de_impresion
 706  8D81 CD F7 93     	call Decrementa_Contador_de_mov_masticados
 707  8D84
 708  8D84              ; -------------------------------------------
 709  8D84
 710  8D84              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 711  8D84
 712  8D84 2A F3 8B     	ld hl,(Puntero_de_impresion)
 713  8D87 CD BA 94     	call Genera_coordenadas
 714  8D8A
 715  8D8A              ; TODO: Generamos disparo ???
 716  8D8A
 717  8D8A 3A 57 8C     	ld a,(Permiso_de_disparo_Entidades)
 718  8D8D A7           	and a
 719  8D8E C4 1B 8E     	call nz,Entidad_genera_disparo_si_procede
 720  8D91
 721  8D91 CD EF A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 722  8D94
 723  8D94              Gestiona_siguiente_entidad
 724  8D94
 725  8D94 CD C9 93      	call Store_Restore_cajas
 726  8D97 C1           	pop bc
 727  8D98 10 AF        	djnz 2B
 728  8D9A
 729  8D9A              ; Hemos gestionado todas las entidades.
 730  8D9A              ; ----- ----- -----
 731  8D9A
 732  8D9A CD 5E 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 733  8D9D CD 75 8F     	call Ordena_tabla_de_impresion
 734  8DA0 CD DC 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 735  8DA3
 736  8DA3 CD 1B 8F     	call Borra_diferencia
 737  8DA6
 738  8DA6 3A 65 8C     	ld a,(Ctrl_3)
 739  8DA9 CB 5F        	bit 3,a
 740  8DAB 20 04        	jr nz,Gestion_de_Amadeus
 741  8DAD
 742  8DAD EB           	ex de,hl
 743  8DAE 71           	ld (hl),c
 744  8DAF 2C           	inc l
 745  8DB0 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 746  8DB1
 747  8DB1              ;! GESTIONA AMADEUS !!!!!!!!!!
 748  8DB1
 749  8DB1              Gestion_de_Amadeus
 750  8DB1
 751  8DB1 21 65 8C     	ld hl,Ctrl_3
 752  8DB4 CB 76        	bit 6,(hl)
 753  8DB6 28 13        	jr z,Amadeus_vivo
 754  8DB8
 755  8DB8              ; Amadeus ha sido destruido.
 756  8DB8              ; Decrementa (Temp_new_live).
 757  8DB8
 758  8DB8 21 79 8C     	ld hl,Temp_new_live
 759  8DBB 35           	dec (hl)
 760  8DBC 20 26        	jr nz,End_frame
 761  8DBE
 762  8DBE              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 763  8DBE
 764  8DBE 21 92 8C     	ld hl,Lives
 765  8DC1 35           	dec (hl)
 766  8DC2
 767  8DC2              ;! Fin del juego
 768  8DC2
 769  8DC2 F3           	di
 770  8DC3 28 FE        	jr z,$
 771  8DC5 FB           	ei
 772  8DC6
 773  8DC6              ; Nueva nave.
 774  8DC6
 775  8DC6 CD 38 8E     	call Reinicia_Amadeus
 776  8DC9 18 19        	jr End_frame
 777  8DCB
 778  8DCB              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 779  8DCB
 780  8DCB              Amadeus_vivo
 781  8DCB
 782  8DCB 3A BB 89     	ld a,(Impacto_Amadeus)
 783  8DCE A7           	and a
 784  8DCF C4 6D 92     	call nz, Genera_explosion_Amadeus
 785  8DD2 20 10        	jr nz, End_frame
 786  8DD4
 787  8DD4 CD 1A 92     	call Teclado
 788  8DD7 21 65 8C     	ld hl,Ctrl_3
 789  8DDA
 790  8DDA CB 6E        	bit 5,(hl)
 791  8DDC 28 06        	jr z,End_frame
 792  8DDE
 793  8DDE              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 794  8DDE
 795  8DDE CD AF 8E     	call Change_Amadeus
 796  8DE1 CD 81 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 797  8DE4
 798  8DE4              End_frame
 799  8DE4
 800  8DE4              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 801  8DE4              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 802  8DE4
 803  8DE4 CD 96 A0     	call Genera_datos_de_impresion_disparos_Entidades
 804  8DE7 CD 5A A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 805  8DEA CD B0 A1     	call Calcula_bytes_pintado_disparos
 806  8DED CD BD A1     	call Limpia_album_de_pintado_disparos_entidades
 807  8DF0
 808  8DF0              ; ------------ ------------- --------------
 809  8DF0
 810  8DF0 2A 43 8C     	ld hl,(Album_de_borrado)
 811  8DF3 22 5F 8C     	ld (Scanlines_album_SP),hl
 812  8DF6
 813  8DF6 21 65 8C     	ld hl,Ctrl_3
 814  8DF9 CB C6        	set 0,(hl) 											; Indica Frame completo.
 815  8DFB CB 9E        	res 3,(hl)
 816  8DFD CB A6        	res 4,(hl)
 817  8DFF
 818  8DFF AF           	xor a
 819  8E00 D3 FE        	out ($fe),a
 820  8E02
 821  8E02 76           	halt
 822  8E03
 823  8E03              ; ----------------------------------------
 824  8E03
 825  8E03              ;	ld a,(Ctrl_1) 										; Existe Loop?
 826  8E03              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 827  8E03 CA FE 8C     	jp z,Main
 828  8E06
 829  8E06              ;------------------------------------------
 830  8E06              ;
 831  8E06              ;	07/11/24
 832  8E06
 833  8E06              Autoriza_disparo_de_entidades
 834  8E06
 835  8E06 3E 01        	ld a,1
 836  8E08 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 837  8E0B
 838  8E0B 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 839  8E0E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 840  8E10 38 02        	jr c,1F
 841  8E12
 842  8E12              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 843  8E12              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 844  8E12              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 845  8E12
 846  8E12 D6 03        	sub 3
 847  8E14
 848  8E14 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 849  8E17 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 850  8E1A
 851  8E1A C9           	ret
 852  8E1B
 853  8E1B              ;------------------------------------------
 854  8E1B              ;
 855  8E1B              ;	14/09/24
 856  8E1B              ;
 857  8E1B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 858  8E1B
 859  8E1B              Entidad_genera_disparo_si_procede
 860  8E1B
 861  8E1B 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 862  8E1E CB 06        	rlc (hl)
 863  8E20
 864  8E20 DC E6 A0     	call c,Genera_disparo_de_entidad_maldosa
 865  8E23
 866  8E23 C9           	ret
 867  8E24
 868  8E24              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 869  8E24              ;
 870  8E24              ;	30/09/24
 871  8E24
 872  8E24              Actuaiza_sp_de_disparos_de_entidades
 873  8E24
 874  8E24 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 875  8E27 23           	inc hl
 876  8E28 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 877  8E2B
 878  8E2B 11 FD 88     	ld de,Numeros_aleatorios+7
 879  8E2E 7B           	ld a,e
 880  8E2F 95           	sub l
 881  8E30 C0           	ret nz
 882  8E31
 883  8E31 21 F6 88     1 ld hl,Numeros_aleatorios
 884  8E34 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 885  8E37 C9           	ret
 886  8E38
 887  8E38              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 888  8E38              ;
 889  8E38              ;	24/07/24
 890  8E38
 891  8E38              Reinicia_Amadeus
 892  8E38
 893  8E38              ;	Reinicia posición y estado.
 894  8E38
 895  8E38 21 CF 50     	ld hl,$50cf
 896  8E3B 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 897  8E3E 21 CC DC     	ld hl,$dccc
 898  8E41 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 899  8E44 21 3D 00     	ld hl,$003d
 900  8E47 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 901  8E4A
 902  8E4A              ;	limpiamos el álbum de borrado.
 903  8E4A
 904  8E4A 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 905  8E4D
 906  8E4D AF           	xor a
 907  8E4E 77           	ld (hl),a
 908  8E4F
 909  8E4F E5           	push hl
 910  8E50 D1           	pop de
 911  8E51 13           	inc de
 912  8E52
 913  8E52 01 23 00     	ld bc,35
 914  8E55 ED B0        	ldir
 915  8E57
 916  8E57 CD 81 90     	call Genera_datos_de_impresion_Amadeus
 917  8E5A
 918  8E5A              ;	Reinicia temporizaciones.
 919  8E5A
 920  8E5A CD 60 91     	call Inicia_Shield
 921  8E5D
 922  8E5D 3E 5A        	ld a,90
 923  8E5F 32 8F 8C     	ld (Shield),a
 924  8E62
 925  8E62 3E 64        	ld a,100
 926  8E64 32 79 8C     	ld (Temp_new_live),a
 927  8E67
 928  8E67              ; 	Restauramos el FLAG: Amadeus vivo.
 929  8E67
 930  8E67 21 65 8C     	ld hl,Ctrl_3
 931  8E6A CB B6        	res 6,(hl)
 932  8E6C
 933  8E6C              ;	Fuerza la impresión de la nave en el siguiente frame.
 934  8E6C
 935  8E6C 21 65 8C      	ld hl,Ctrl_3
 936  8E6F CB EE        	set 5,(hl)
 937  8E71
 938  8E71 C9           	ret
 939  8E72
 940  8E72              ; --------------------------------------------------------------------------------------------------------------
 941  8E72              ;
 942  8E72              ;	7/11/24
 943  8E72
 944  8E72              Ajusta_velocidad_entidad
 945  8E72
 946  8E72 3A F9 8B     	ld a,(Velocidad)
 947  8E75 A7           	and a
 948  8E76 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 949  8E77              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 950  8E77              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 951  8E77
 952  8E77
 953  8E77              ; Incrementa (Contador_de_vueltas)x2.
 954  8E77              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 955  8E77
 956  8E77              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 957  8E77              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 958  8E77              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 959  8E77              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 960  8E77              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 961  8E77
 962  8E77
 963  8E77 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 964  8E79 32 F9 8B     	ld (Velocidad),a
 965  8E7C E6 10        	and $10
 966  8E7E C8           	ret z
 967  8E7F
 968  8E7F              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 969  8E7F
 970  8E7F 3A F1 8B     	ld a,(Contador_de_vueltas)
 971  8E82 CB 2F        	sra a
 972  8E84 CB 2F        	sra a
 973  8E86 32 F9 8B     	ld (Velocidad),a
 974  8E89
 975  8E89 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 976  8E8C 23           	inc hl
 977  8E8D 23           	inc hl
 978  8E8E 23           	inc hl
 979  8E8F 23           	inc hl
 980  8E90 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 981  8E93
 982  8E93 C9           	ret
 983  8E94
 984  8E94              ; --------------------------------------------------------------------------------------------------------------
 985  8E94              ;
 986  8E94              ;	25/08/24
 987  8E94
 988  8E94              Change
 989  8E94
 990  8E94 3A 5C 8C     	ld a,(Switch)
 991  8E97 EE 01        	xor 1
 992  8E99 32 5C 8C     	ld (Switch),a
 993  8E9C 2A 41 8C     	ld hl,(Album_de_pintado)
 994  8E9F ED 5B 43 8C  	ld de,(Album_de_borrado)
 995  8EA3 EB           	ex de,hl
 996  8EA4 22 41 8C     	ld (Album_de_pintado),hl
 997  8EA7 22 5F 8C     	ld (Scanlines_album_SP),hl
 998  8EAA ED 53 43 8C  	ld (Album_de_borrado),de
 999  8EAE C9           	ret
1000  8EAF
1001  8EAF              Change_Amadeus
1002  8EAF
1003  8EAF 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1004  8EB2 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1005  8EB6 EB           	ex de,hl
1006  8EB7 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1007  8EBA ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1008  8EBE C9           	ret
1009  8EBF
1010  8EBF              Change_Disparos
1011  8EBF
1012  8EBF              ; Álbumes de Amadeus.
1013  8EBF
1014  8EBF 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1015  8EC2 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1016  8EC6 EB           	ex de,hl
1017  8EC7 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1018  8ECA ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1019  8ECE CD A5 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1020  8ED1
1021  8ED1              ; Álbumes de entidades.
1022  8ED1
1023  8ED1 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1024  8ED4 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1025  8ED8 EB           	ex de,hl
1026  8ED9 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1027  8EDC ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1028  8EE0 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1029  8EE3
1030  8EE3 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1031  8EE6 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1032  8EE9
1033  8EE9 C9           	ret
1034  8EEA
1035  8EEA              ; ------------------------------------
1036  8EEA              ;
1037  8EEA              ; 1/05/24
1038  8EEA
1039  8EEA              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1040  8EEA              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1041  8EEA
1042  8EEA              ;	DESTRUYE: HL,DE,A
1043  8EEA              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1044  8EEA
1045  8EEA              ;	Variables implicadas: (RND_SP).
1046  8EEA
1047  8EEA              Extrae_numero_aleatorio_y_avanza
1048  8EEA
1049  8EEA 21 00 89     	ld hl,Tabla_de_pintado
1050  8EED EB           	ex de,hl
1051  8EEE 2A 7A 8C     	ld hl,(RND_SP)
1052  8EF1 EB           	ex de,hl
1053  8EF2 A7           	and a
1054  8EF3 ED 52        	sbc hl,de
1055  8EF5
1056  8EF5 2A 7A 8C     	ld hl,(RND_SP)
1057  8EF8 20 06        	jr nz,1F
1058  8EFA
1059  8EFA              ; Sitúa HL al principio de la tabla de nº aleatorios.
1060  8EFA
1061  8EFA 21 F6 88     	ld hl,Numeros_aleatorios
1062  8EFD 22 7A 8C     	ld (RND_SP),HL
1063  8F00
1064  8F00              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1065  8F00
1066  8F00 7E           1 ld a,(hl)
1067  8F01 23           	inc hl
1068  8F02 22 7A 8C     	ld (RND_SP),hl
1069  8F05 C9           	ret
1070  8F06
1071  8F06              ; ------------------------------------
1072  8F06              ;
1073  8F06              ; 1/05/24
1074  8F06
1075  8F06              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1076  8F06              ; (1 a 4 segundos).
1077  8F06              ; Actualizamos (Clock_next_entity) con A.
1078  8F06
1079  8F06              ;	DESTRUYE: A y B.
1080  8F06              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1081  8F06              ;			 Actualiza (Clock_next_entity) con A.
1082  8F06
1083  8F06              ;	Variables implicadas: (Clock_next_entity).
1084  8F06
1085  8F06              ; Notas:
1086  8F06
1087  8F06              ; 	$32 1 seg.
1088  8F06              ; 	$64 2 seg.
1089  8F06              ; 	$96 3 seg.
1090  8F06              ; 	$c8 4 seg.
1091  8F06              ; 	$fa 5 seg.
1092  8F06
1093  8F06              ; $ffff 1310,7 seg, 22 minutos.
1094  8F06
1095  8F06              ;	$0100  5 seg. aproximadamente.
1096  8F06              ;	$0200 10 seg. aproximadamente.
1097  8F06              ;	$0300 15 seg. aproximadamente.
1098  8F06              ;	$0400 20 seg. aproximadamente.
1099  8F06              ;	$0500 25 seg. aproximadamente.
1100  8F06              ;	$0600 30 seg. aproximadamente.
1101  8F06
1102  8F06              Define_Clock_next_entity
1103  8F06
1104  8F06 FE 34        	cp $34
1105  8F08 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1106  8F0A
1107  8F0A              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1108  8F0A
1109  8F0A 4F           3 ld c,a
1110  8F0B 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1111  8F0D 2A 78 5C     	ld hl,(FRAMES)
1112  8F10 A7           	and a
1113  8F11 ED 4A        	adc hl,bc
1114  8F13 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1115  8F16 C9           	ret
1116  8F17
1117  8F17 3E 34        1 ld a,$34
1118  8F19 18 EF        	jr 3B
1119  8F1B
1120  8F1B              ; ------------------------------------
1121  8F1B              ;
1122  8F1B              ; 18/03/24
1123  8F1B
1124  8F1B              Borra_diferencia
1125  8F1B
1126  8F1B ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1127  8F1F
1128  8F1F 3A 5C 8C     	ld a,(Switch)
1129  8F22 A7           	and a
1130  8F23 28 08        	jr z,2F
1131  8F25
1132  8F25 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1133  8F28 11 5A 8C     	ld de,Techo_Scanlines_album_2
1134  8F2B 18 06        	jr 3F
1135  8F2D
1136  8F2D 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1137  8F30 11 58 8C     	ld de,Techo_Scanlines_album
1138  8F33
1139  8F33              ; Diferencia.
1140  8F33
1141  8F33 ED 42        3 sbc hl,bc
1142  8F35
1143  8F35 C8           	ret z
1144  8F36 D8           	ret c
1145  8F37
1146  8F37              ; Nuevo techo, (más bajo que el anterior).
1147  8F37              ; Fijamos nuevo techo y borramos bytes sobrantes.
1148  8F37
1149  8F37 EB           	ex de,hl
1150  8F38
1151  8F38 71           	ld (hl),c
1152  8F39 2C           	inc l
1153  8F3A 70           	ld (hl),b
1154  8F3B
1155  8F3B AF           	xor a
1156  8F3C 43           	ld b,e
1157  8F3D
1158  8F3D 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1159  8F40
1160  8F40 77           1 ld (hl),a
1161  8F41 23           	inc hl
1162  8F42 10 FC        	djnz 1B
1163  8F44
1164  8F44              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1165  8F44
1166  8F44 21 65 8C     	ld hl,Ctrl_3
1167  8F47 CB DE        	set 3,(hl)
1168  8F49
1169  8F49 C9           	ret
1170  8F4A
1171  8F4A              ; --------------------------------------------------------------------------------------------------------------
1172  8F4A              ;
1173  8F4A              ;	26/3/24
1174  8F4A
1175  8F4A              Recauda_informacion_de_entidad_en_curso
1176  8F4A
1177  8F4A              ; Almacena la Coordenada Y de la entidad en curso.
1178  8F4A
1179  8F4A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1180  8F4A
1181  8F4A 3A F0 8B     	ld a,(Coordenada_y)
1182  8F4D 2A 61 8C     	ld hl,(India_SP)
1183  8F50 77           	ld (hl),a
1184  8F51 2C           	inc l
1185  8F52
1186  8F52              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1187  8F52
1188  8F52 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1189  8F56
1190  8F56 73           	ld (hl),e
1191  8F57 2C           	inc l
1192  8F58 72           	ld (hl),d
1193  8F59 2C           	inc l
1194  8F5A
1195  8F5A 22 61 8C     	ld (India_SP),hl
1196  8F5D
1197  8F5D C9           	ret
1198  8F5E
1199  8F5E              ; --------------------------------------------------------------------------------------------------------------
1200  8F5E              ;
1201  8F5E              ;	27/03/24
1202  8F5E              ;
1203  8F5E
1204  8F5E              Inicializa_India_y_limpia_Tabla_de_impresion
1205  8F5E
1206  8F5E 2A 61 8C     	ld hl,(India_SP)
1207  8F61 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1208  8F64
1209  8F64 79           	ld a,c
1210  8F65 95           	sub l
1211  8F66 28 06        	jr z,2F
1212  8F68 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1213  8F69              ;														; _ y pasamos a inicializar (India_SP).
1214  8F69 AF           	xor a
1215  8F6A
1216  8F6A 77           1 ld (hl),a
1217  8F6B 2C           	inc l
1218  8F6C 10 FC        	djnz 1B												; Limpia Tabla.
1219  8F6E
1220  8F6E 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1221  8F71 22 61 8C     	ld (India_SP),hl
1222  8F74
1223  8F74 C9           	ret
1224  8F75
1225  8F75              ; --------------------------------------------------------------------------------------------------------------
1226  8F75              ;
1227  8F75              ;	31/3/24
1228  8F75
1229  8F75              Ordena_tabla_de_impresion
1230  8F75
1231  8F75              ; 5794 T/states.
1232  8F75              ; 6278 T/states.
1233  8F75              ; 5310 T/states.
1234  8F75
1235  8F75              ; Inicializamos punteros (India_SP) e (India_2_SP).
1236  8F75              ; Inicializamos contador de comparaciones, [C].
1237  8F75              ; Cargamos los registros A y B para efectuar comparación.
1238  8F75
1239  8F75 FD 2E 00     	ld iyl,0
1240  8F78
1241  8F78 3A 38 8C     	ld a,(Entidades_en_curso)
1242  8F7B FE 04        	cp 4 	;	4
1243  8F7D D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1244  8F7E
1245  8F7E 3D           	dec a
1246  8F7F 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1247  8F80 51           	ld d,c 										; Copia de respaldo.
1248  8F81
1249  8F81 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1250  8F82
1251  8F82 21 03 89     	ld hl,Tabla_de_pintado+3
1252  8F85 46           	ld b,(hl)
1253  8F86 22 63 8C     	ld (India_2_SP),hl
1254  8F89
1255  8F89 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1256  8F8A DC B2 8F     	call c, Avanza_India_2_SP
1257  8F8D CC B2 8F     	call z, Avanza_India_2_SP
1258  8F90
1259  8F90 FD 2D        	dec iyl
1260  8F92 28 18        	jr z,2F
1261  8F94
1262  8F94
1263  8F94              ; --------------------------------------------------------------------------------------------------------------
1264  8F94              ;
1265  8F94              ;	7/4/24
1266  8F94
1267  8F94              Trueque
1268  8F94
1269  8F94              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1270  8F94              ;  			A contiene en nº de fila de (India_SP).
1271  8F94              ;			HL contiene (India_2_SP).
1272  8F94
1273  8F94 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1274  8F95 E5           	push hl										; Preservo (India_2_SP).
1275  8F96
1276  8F96 ED 5B 61 8C  	ld de,(India_SP)
1277  8F9A EB           	ex de,hl
1278  8F9B 70           	ld (hl),b
1279  8F9C 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1280  8F9D
1281  8F9D CD DE 8F     	call Intercambia_1_byte
1282  8FA0 CD DE 8F     	call Intercambia_1_byte
1283  8FA3
1284  8FA3
1285  8FA3              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1286  8FA3              ; Recuperamos (India_2_SP) en HL.
1287  8FA3
1288  8FA3 2A 61 8C     	ld hl,(India_SP)
1289  8FA6 7E           	ld a,(hl)
1290  8FA7
1291  8FA7 E1           	pop hl
1292  8FA8 D1           	pop de
1293  8FA9
1294  8FA9              ; --------------------------------------------------------------------------------------------------------------
1295  8FA9
1296  8FA9 CD B2 8F     	call Avanza_India_2_SP
1297  8FAC
1298  8FAC 14           2 inc d
1299  8FAD 15           	dec d
1300  8FAE C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1301  8FAF 18 D8        	jr 1B
1302  8FB1
1303  8FB1 C9           	ret
1304  8FB2
1305  8FB2              ; ----- ----- ----- ----- -----
1306  8FB2
1307  8FB2              Avanza_India_2_SP
1308  8FB2
1309  8FB2 0D           	dec c
1310  8FB3 28 0A        	jr z,Avanza_punteros_indios
1311  8FB5
1312  8FB5 FD 2C        	inc iyl
1313  8FB7
1314  8FB7 2C           	inc l
1315  8FB8 2C           	inc l
1316  8FB9 2C           	inc l
1317  8FBA
1318  8FBA 46           	ld b,(hl)
1319  8FBB 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1320  8FBE
1321  8FBE C9           	ret
1322  8FBF
1323  8FBF              ; ----- ----- ----- ----- -----
1324  8FBF
1325  8FBF              Avanza_punteros_indios
1326  8FBF
1327  8FBF 15           	dec d
1328  8FC0 28 15        	jr z,Prepara_salida
1329  8FC2
1330  8FC2 4A           	ld c,d
1331  8FC3
1332  8FC3 2A 61 8C     	ld hl,(India_SP)
1333  8FC6 2C           	inc l
1334  8FC7 2C           	inc l
1335  8FC8 2C           	inc l
1336  8FC9 7E           	ld a,(hl)
1337  8FCA 22 61 8C     	ld (India_SP),hl
1338  8FCD
1339  8FCD 2C           	inc l
1340  8FCE 2C           	inc l
1341  8FCF 2C           	inc l
1342  8FD0 46           	ld b,(hl)
1343  8FD1 22 63 8C     	ld (India_2_SP),hl
1344  8FD4
1345  8FD4 FD 2C        	inc iyl
1346  8FD6
1347  8FD6 C9           	ret
1348  8FD7
1349  8FD7              Prepara_salida
1350  8FD7
1351  8FD7 21 00 89     	ld hl,Tabla_de_pintado
1352  8FDA 22 61 8C     	ld (India_SP),hl
1353  8FDD C9           	ret
1354  8FDE
1355  8FDE
1356  8FDE 2C           Intercambia_1_byte inc l
1357  8FDF 1C           	inc e
1358  8FE0 46           	ld b,(hl)
1359  8FE1 1A           	ld a,(de)
1360  8FE2 EB           	ex de,hl
1361  8FE3 70           	ld (hl),b
1362  8FE4 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1363  8FE5 C9           	ret
1364  8FE6
1365  8FE6              ; -----------------------------------------------------------------------------------
1366  8FE6              ;
1367  8FE6              ;	20/01/24
1368  8FE6              ;
1369  8FE6              ;
1370  8FE6
1371  8FE6              Construye_movimientos_masticados_entidad
1372  8FE6
1373  8FE6 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1374  8FE9 E5           	push hl
1375  8FEA CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1376  8FED              ;															; _ el (Contador_de_mov_masticados).
1377  8FED CD F8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1378  8FF0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1379  8FF0 CD D2 99     	call Recompone_posicion_inicio
1380  8FF3
1381  8FF3 CD 02 97     1 call Draw
1382  8FF6 CD 12 90     	call Guarda_movimiento_masticado
1383  8FF9
1384  8FF9 CD 7F 9D     	call Movimiento
1385  8FFC
1386  8FFC 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1387  8FFF CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1388  9001 28 F0        	jr z,1B
1389  9003
1390  9003              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1391  9003              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1392  9003
1393  9003 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1394  9004 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1395  9007
1396  9007              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1397  9007
1398  9007 CD E3 9E     	call Situa_en_contador_general_de_mov_masticados
1399  900A
1400  900A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1401  900A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1402  900A
1403  900A ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1404  900E
1405  900E 71           	ld (hl),c
1406  900F 23           	inc hl
1407  9010 70           	ld (hl),b
1408  9011
1409  9011 C9           	ret
1410  9012
1411  9012              ; -----------------------------------------------------------------------------------
1412  9012              ;
1413  9012              ;	28/12/23
1414  9012              ;
1415  9012              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1416  9012              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1417  9012
1418  9012              Guarda_movimiento_masticado
1419  9012
1420  9012 ED 73 3D 8C  	ld (Stack),sp
1421  9016 ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1422  901A
1423  901A DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1424  901C FD E5            push iy 												; Pushea Puntero_objeto.
1425  901E
1426  901E ED 7B 3D 8C      ld sp,(Stack)
1427  9022
1428  9022 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1429  9025 23           	inc hl
1430  9026 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1431  9029
1432  9029 CD 2D 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1433  902C              ;															; _ el (Contador_de_mov_masticados).
1434  902C C9               ret
1435  902D
1436  902D              ; --------------------------------------------------------------------------------------------------------------
1437  902D              ;
1438  902D              ;	12/1/24
1439  902D              ;
1440  902D              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1441  902D
1442  902D              Actualiza_Puntero_de_almacen_de_mov_masticados
1443  902D
1444  902D 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1445  9030 01 04 00     	ld bc,4
1446  9033 A7           	and a
1447  9034 ED 4A        	adc hl,bc
1448  9036 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1449  9039 C9           	ret
1450  903A
1451  903A              ; --------------------------------------------------------------------------------------------------------------
1452  903A              ;
1453  903A              ;	24/03/24
1454  903A              ;
1455  903A              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1456  903A              ;
1457  903A              ;	IX contiene el puntero de impresión.
1458  903A              ;	DE contiene (Puntero_objeto).
1459  903A
1460  903A
1461  903A              Cargamos_registros_con_mov_masticado
1462  903A
1463  903A ED 73 3D 8C  	ld (Stack),sp
1464  903E ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1465  9042
1466  9042 D1           	pop de 															; DE contiene Puntero_objeto
1467  9043 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1468  9045
1469  9045 ED 73 F5 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1470  9049 ED 7B 3D 8C  	ld sp,(Stack)
1471  904D
1472  904D 7B           	ld a,e
1473  904E 82           	add d															; Comprueba si ya no hay datos en el almacén.
1474  904F
1475  904F CC FF 93     	call z,Reinicia_entidad_maliciosa
1476  9052
1477  9052 C9           	ret
1478  9053
1479  9053              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1480  9053              ;
1481  9053              ;	22/7/24
1482  9053
1483  9053              Cargamos_registros_con_explosion
1484  9053
1485  9053
1486  9053 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1487  9056 CD F2 90     	call Extrae_address
1488  9059
1489  9059 5D           	ld e,l
1490  905A 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1491  905B
1492  905B DD 2A F3 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1493  905F
1494  905F C9           	ret
1495  9060
1496  9060
1497  9060              Cargamos_registros_con_explosion_Amadeus
1498  9060
1499  9060 2A BE 89     	ld hl,(Pamm_Amadeus)
1500  9063 CD F2 90     	call Extrae_address
1501  9066
1502  9066 5D           	ld e,l
1503  9067 54           	ld d,h
1504  9068
1505  9068 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1506  906C
1507  906C C9           	ret
1508  906D
1509  906D              ; --------------------------------------------------------------------------------------------------------------
1510  906D              ;
1511  906D              ;	17/06/24
1512  906D              ;
1513  906D              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1514  906D              ;
1515  906D              ;	IX contiene el puntero de impresión.
1516  906D              ;	DE contiene (Puntero_objeto).
1517  906D
1518  906D
1519  906D              Cargamos_registros_con_mov_masticado_Amadeus
1520  906D
1521  906D ED 73 3D 8C  	ld (Stack),sp
1522  9071 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1523  9075 D1           	pop de 															; DE contiene Puntero_objeto
1524  9076 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1525  9078 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1526  907C ED 7B 3D 8C  	ld sp,(Stack)
1527  9080 C9           	ret
1528  9081
1529  9081              ; ---------------------------------------------------------------------------------------------------------------------
1530  9081              ;
1531  9081              ;	18/6/24
1532  9081              ;
1533  9081              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1534  9081
1535  9081              Genera_datos_de_impresion_Amadeus
1536  9081
1537  9081 3A BB 89     	ld a,(Impacto_Amadeus)
1538  9084 A7           	and a
1539  9085 20 03        	jr nz,1F
1540  9087
1541  9087              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1542  9087              ; _apuntando a la correspondiente explosión.
1543  9087
1544  9087 CD 6D 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1545  908A
1546  908A DD 7D        1 ld a,ixl
1547  908C E6 1F        	and $1f
1548  908E 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1549  9091
1550  9091 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1551  9094 E5           	push hl
1552  9095
1553  9095 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1554  9098 22 5F 8C     	ld (Scanlines_album_SP),hl
1555  909B
1556  909B CD E6 94     	call Genera_datos_de_impresion
1557  909E
1558  909E E1           	pop hl
1559  909F 22 5F 8C     	ld (Scanlines_album_SP),hl
1560  90A2
1561  90A2 C9           	ret
1562  90A3
1563  90A3              ; ---------------------------------------------------------------------------------------------------------------------
1564  90A3              ;
1565  90A3              ;	13/03/24
1566  90A3              ;
1567  90A3              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1568  90A3
1569  90A3              Inicia_albumes_de_lineas
1570  90A3
1571  90A3 21 00 80     	ld hl,Scanlines_album
1572  90A6 22 41 8C     	ld (Album_de_pintado),hl
1573  90A9 22 5F 8C     	ld (Scanlines_album_SP),hl
1574  90AC
1575  90AC 21 1A 81     	ld hl,Scanlines_album_2
1576  90AF 22 43 8C     	ld (Album_de_borrado),hl
1577  90B2
1578  90B2 C9           	ret
1579  90B3
1580  90B3              Inicia_albumes_de_lineas_Amadeus
1581  90B3
1582  90B3 21 34 82     	ld hl,Amadeus_scanlines_album
1583  90B6 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1584  90B9 21 58 82     	ld hl,Amadeus_scanlines_album_2
1585  90BC 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1586  90BF
1587  90BF C9           	ret
1588  90C0
1589  90C0              Inicia_albumes_de_disparos
1590  90C0
1591  90C0 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1592  90C3 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1593  90C6 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1594  90C9 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1595  90CC
1596  90CC 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1597  90CF 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1598  90D2 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1599  90D5
1600  90D5 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1601  90D8 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1602  90DB
1603  90DB C9           	ret
1604  90DC
1605  90DC              ; ---------------------------------------------------------------------------------------------------------------------
1606  90DC              ;
1607  90DC              ; 8/1/23
1608  90DC              ;
1609  90DC              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1610  90DC              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1611  90DC              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1612  90DC
1613  90DC              ; Destruye HL y DE !!!!!
1614  90DC
1615  90DC              Inicia_punteros_de_cajas
1616  90DC
1617  90DC 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1618  90DF CD F2 90         call Extrae_address
1619  90E2 22 2E 8C         ld (Puntero_store_caja),hl
1620  90E5 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1621  90E8 22 32 8C     	ld (Indice_restore_caja),hl
1622  90EB CD F2 90     	call Extrae_address
1623  90EE 22 30 8C     	ld (Puntero_restore_caja),hl
1624  90F1 C9               ret
1625  90F2
1626  90F2              ; *************************************************************************************************************************************************************
1627  90F2
1628  90F2              ;
1629  90F2              ; 20/10/22
1630  90F2              ;
1631  90F2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1632  90F2              ;
1633  90F2              ; Destruye el puntero y DE !!!!!
1634  90F2
1635  90F2 5E           Extrae_address ld e,(hl)
1636  90F3 23           	inc hl
1637  90F4 56           	ld d,(hl)
1638  90F5 2B           	dec hl
1639  90F6 EB           	ex de,hl
1640  90F7 C9           	ret
1641  90F8
1642  90F8              ; *************************************************************************************************************************************************************
1643  90F8              ;
1644  90F8              ;	20/1/24
1645  90F8              ;
1646  90F8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1647  90F8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1648  90F8              ;
1649  90F8              ;   Destruye HL y BC !!!!!,
1650  90F8              ;
1651  90F8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1652  90F8              ;					"0" ..... Izquierda.
1653  90F8
1654  90F8              Inicia_Puntero_objeto
1655  90F8
1656  90F8 3A 0D 8C     	ld a,(Cuad_objeto)
1657  90FB E6 01        	and 1
1658  90FD F5           	push af
1659  90FE CC 1A 91     	call z,Inicia_puntero_objeto_izq
1660  9101 F1           	pop af
1661  9102 C8           	ret z
1662  9103 CD 07 91     	call Inicia_puntero_objeto_der
1663  9106 C9           	ret
1664  9107
1665  9107              ; Arrancamos desde la parte izquierda de la pantalla.
1666  9107              ; Iniciamos (Indice_Sprite_der).
1667  9107
1668  9107 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1669  910A 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1670  910D CD F2 90     	call Extrae_address
1671  9110 22 00 8C     	ld (Puntero_objeto),hl
1672  9113
1673  9113 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1674  9116 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1675  9119 C9           	ret
1676  911A
1677  911A              ; Arrancamos desde la parte derecha de la pantalla.
1678  911A              ; Iniciamos (Indice_Sprite_izq).
1679  911A
1680  911A 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1681  911D 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1682  9120 CD F2 90     	call Extrae_address
1683  9123 22 00 8C     	ld (Puntero_objeto),hl
1684  9126
1685  9126 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1686  9129 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1687  912C C9           	ret
1688  912D
1689  912D              ; **************************************************************************************************
1690  912D              ;
1691  912D              ;	06/07/24
1692  912D              ;
1693  912D              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1694  912D
1695  912D              Restore_entidad
1696  912D
1697  912D 2A 2E 8C     	ld hl,(Puntero_store_caja)
1698  9130 7E           	ld a,(hl)
1699  9131 A7           	and a
1700  9132 CC 40 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1701  9135 28 F6        	jr z,Restore_entidad
1702  9137
1703  9137 11 EE 8B     	ld de,Bandeja_DRAW
1704  913A 01 0C 00     	ld bc,12
1705  913D ED B0        	ldir
1706  913F C9           	ret
1707  9140
1708  9140              ; **************************************************************************************************
1709  9140              ;
1710  9140              ;	08/05/23
1711  9140              ;
1712  9140              ;	Incrementamos los dos punteros de entidades. (+1).
1713  9140
1714  9140              Incrementa_punteros_de_cajas
1715  9140
1716  9140 2A 30 8C     	ld hl,(Puntero_restore_caja)
1717  9143 22 2E 8C     	ld (Puntero_store_caja),hl
1718  9146 2A 32 8C     	ld hl,(Indice_restore_caja)
1719  9149 23           	inc hl
1720  914A 23           	inc hl
1721  914B 22 32 8C     	ld (Indice_restore_caja),hl
1722  914E CD F2 90         call Extrae_address
1723  9151 22 30 8C         ld (Puntero_restore_caja),hl
1724  9154 C9               ret
1725  9155
1726  9155              ; -----------------------------------------------------------
1727  9155
1728  9155              ; Teclado.
1729  9155
1730  9155 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1731  9157 DB FE        	in a,($fe)
1732  9159 E6 01        	and $01
1733  915B 28 02        	jr z,1f
1734  915D 18 F6        	jr Pulsa_ENTER
1735  915F C9           1 ret
1736  9160
1737  9160              ; **************************************************************************************************
1738  9160              ;
1739  9160              ; Temporización.
1740  9160
1741  9160              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1742  9160              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1743  9160              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1744  9160              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1745  9160
1746  9160              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1747  9160              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1748  9160              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1749  9160
1750  9160              ; A partir de $4f61 no hace falta DELAY.
1751  9160
1752  9160              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1753  9160
1754  9160              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1755  9160              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1756  9160              ;	LD A,B
1757  9160              ;	AND A
1758  9160              ;	JR NZ,wait
1759  9160              ;	RET
1760  9160
1761  9160              ; ---------------------------------------------------------------------------------------------------------------
1762  9160              ;
1763  9160              ;	13/07/24
1764  9160              ;
1765  9160
1766  9160              Inicia_Shield
1767  9160
1768  9160 21 89 8C     	ld hl,Datos_Shield
1769  9163 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1770  9166
1771  9166 7E           	ld a,(hl)
1772  9167 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1773  916A
1774  916A 3E 01        	ld a,1
1775  916C 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1776  916F
1777  916F C9           	ret
1778  9170
1779  9170              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1780  9170              ;
1781  9170              ;	4/6/24
1782  9170              ;
1783  9170              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1784  9170              ;
1785  9170              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1786  9170              ;
1787  9170
1788  9170              Actualiza_pantalla
1789  9170
1790  9170 3E 02        	ld a,2
1791  9172 D3 FE        	out ($fe),a
1792  9174
1793  9174 3A 65 8C     	ld a,(Ctrl_3)
1794  9177 CB 57        	bit 2,a
1795  9179 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1796  917B
1797  917B              Borrando_entidades
1798  917B
1799  917B 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1800  917E CD F2 90     	call Extrae_address
1801  9181 24           	inc h
1802  9182 25           	dec h
1803  9183 28 05        	jr z,Pintando_entidades
1804  9185 CD DF 95     	call Pinta_Sprites
1805  9188 18 F1        	jr Borrando_entidades
1806  918A
1807  918A              Pintando_entidades
1808  918A
1809  918A 2A 61 8C     	ld hl,(India_SP)
1810  918D 2C           	inc l
1811  918E CD F2 90     	call Extrae_address
1812  9191 24           	inc h
1813  9192 25           	dec h
1814  9193 28 0E        	jr z,Ejecuta_escudo
1815  9195 1C           	inc e
1816  9196 1C           	inc e
1817  9197 ED 53 61 8C  	ld (India_SP),de
1818  919B CD F2 90     	call Extrae_address
1819  919E CD DF 95     	call Pinta_Sprites
1820  91A1 18 E7        	jr Pintando_entidades
1821  91A3
1822  91A3              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1823  91A3
1824  91A3              Ejecuta_escudo
1825  91A3
1826  91A3 3A 8F 8C     	ld a,(Shield)
1827  91A6 A7           	and a
1828  91A7 20 2F        	jr nz,Aplica_Shield
1829  91A9
1830  91A9              Borrando_Amadeus
1831  91A9
1832  91A9 21 65 8C     	ld hl,Ctrl_3
1833  91AC CB 6E        	bit 5,(hl)
1834  91AE 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1835  91B0
1836  91B0 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1837  91B3 CD F2 90     	call Extrae_address
1838  91B6 24           	inc h
1839  91B7 25           	dec h
1840  91B8 28 03        	jr z,Pintando_Amadeus
1841  91BA CD DF 95     	call Pinta_Sprites
1842  91BD
1843  91BD              Pintando_Amadeus
1844  91BD
1845  91BD 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1846  91C0 CD F2 90     	call Extrae_address
1847  91C3 24           	inc h
1848  91C4 25           	dec h
1849  91C5 28 03        	jr z,1F
1850  91C7 CD DF 95     	call Pinta_Sprites
1851  91CA
1852  91CA              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1853  91CA
1854  91CA 21 65 8C     1 ld hl,Ctrl_3
1855  91CD CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1856  91CF CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1857  91D1 CB AE        	res 5,(hl)
1858  91D3
1859  91D3 3E 01        	ld a,1												; Borde azul.
1860  91D5 D3 FE        	out ($fe),a
1861  91D7
1862  91D7 C9           	ret
1863  91D8
1864  91D8              Aplica_Shield
1865  91D8
1866  91D8              ;	Bit 1 "1" (Shield_3) Sólo borra.
1867  91D8              ;		  "0"     ""     Borra/Pinta.
1868  91D8              ;	Bit 2    ""  RET.	 No borra, no pinta.
1869  91D8
1870  91D8 21 91 8C     	ld hl,Shield_3
1871  91DB
1872  91DB CB 5E        	bit 3,(hl)
1873  91DD 20 DE        	jr nz,Pintando_Amadeus
1874  91DF
1875  91DF CB 56        	bit 2,(hl)
1876  91E1 20 E7        	jr nz,1B
1877  91E3
1878  91E3 CB 4E        	bit 1,(hl)
1879  91E5 C4 EC 91     	call nz,Borra_Amadeus_shield
1880  91E8
1881  91E8 28 BF        	jr z,Borrando_Amadeus
1882  91EA 18 DE        	jr 1B
1883  91EC
1884  91EC              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1885  91EC
1886  91EC              Borra_Amadeus_shield
1887  91EC
1888  91EC 3A 65 8C     	ld a,(Ctrl_3)
1889  91EF CB 6F        	bit 5,a
1890  91F1 28 08        	jr z,1F
1891  91F3
1892  91F3 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1893  91F6 CD F2 90     	call Extrae_address
1894  91F9 18 06        	jr 2F
1895  91FB
1896  91FB 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1897  91FE CD F2 90     	call Extrae_address
1898  9201
1899  9201 CD DF 95     2 call Pinta_Sprites
1900  9204
1901  9204 AF           	xor a
1902  9205 3C           	inc a											; Asegura NZ en la salida de la rutina.
1903  9206
1904  9206 C9           	ret
1905  9207
1906  9207              Pinta_Amadeus_shield
1907  9207
1908  9207 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1909  920A CD F2 90     	call Extrae_address
1910  920D CD DF 95     	call Pinta_Sprites
1911  9210
1912  9210 AF           	xor a
1913  9211 3C           	inc a											; Asegura NZ en la salida de la rutina.
1914  9212
1915  9212 C9           	ret
1916  9213
1917  9213              Borra_Pinta_Amadeus_shield
1918  9213
1919  9213 CD EC 91     	call Borra_Amadeus_shield
1920  9216 CD 07 92     	call Pinta_Amadeus_shield
1921  9219 C9           	ret
1922  921A
1923  921A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1924  921A              ;
1925  921A              ;	19/6/24
1926  921A              ;
1927  921A
1928  921A              Teclado
1929  921A
1930  921A              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1931  921A
1932  921A 3E F7        	ld a,$f7												; "5" para disparar.
1933  921C DB FE        	in a,($fe)
1934  921E E6 10        	and $10
1935  9220
1936  9220 CC 79 A2     	call z,Genera_disparo_Amadeus
1937  9223
1938  9223 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1939  9225 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1940  9227 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1941  9229 CC 4C 9D         call z,Amadeus_a_izquierda
1942  922C
1943  922C 3E F7        	ld a,$f7
1944  922E DB FE        	in a,($fe)
1945  9230 E6 01        	and $01
1946  9232 C8           	ret z
1947  9233
1948  9233 3E F7        	ld a,$f7
1949  9235 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1950  9237 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1951  9239 CC 64 9D     	call z,Amadeus_a_derecha
1952  923C
1953  923C C9           	ret
1954  923D
1955  923D              ; ------------------------------------------------------------------------------------------------------------------------
1956  923D              ;
1957  923D              ;	06/07/24
1958  923D              ;
1959  923D
1960  923D              Genera_explosion
1961  923D
1962  923D 21 77 8C     	ld hl,Clock_explosion
1963  9240 35           	dec (hl)
1964  9241 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1965  9243
1966  9243              Borra_entidad_colisionada
1967  9243
1968  9243 CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1969  9246 CD 53 90     	call Cargamos_registros_con_explosion
1970  9249 CD E6 94     	call Genera_datos_de_impresion
1971  924C
1972  924C AF           	xor a
1973  924D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1974  924E
1975  924E C9           	ret
1976  924F
1977  924F              Siguiente_frame_explosion
1978  924F
1979  924F 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1980  9251
1981  9251              ; Avanza Frame de explosión.
1982  9251
1983  9251 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1984  9254 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1985  9257
1986  9257 79           	ld a,c
1987  9258 95           	sub l
1988  9259 20 0B        	jr nz,1F
1989  925B
1990  925B              ; Fín de la entidad !!!!!!!!!!!!!
1991  925B
1992  925B 21 37 8C     	ld hl,Numero_parcial_de_entidades
1993  925E 35           	dec (hl)
1994  925F 23           	inc hl
1995  9260 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1996  9261
1997  9261 CD D4 93     	call Limpiamos_bandeja_DRAW
1998  9264 18 DD        	jr Borra_entidad_colisionada
1999  9266
2000  9266 23           1 inc hl
2001  9267 23           	inc hl
2002  9268 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2003  926B 18 D6        	jr Borra_entidad_colisionada
2004  926D
2005  926D              ; ----- ----- ----- ----- -----
2006  926D
2007  926D              Genera_explosion_Amadeus
2008  926D
2009  926D 21 78 8C     	ld hl,Clock_explosion_Amadeus
2010  9270 35           	dec (hl)
2011  9271 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2012  9273
2013  9273              Borra_Amadeus_impactado
2014  9273
2015  9273 CD AF 8E     	call Change_Amadeus
2016  9276 CD 60 90     	call Cargamos_registros_con_explosion_Amadeus
2017  9279 CD 81 90     	call Genera_datos_de_impresion_Amadeus
2018  927C
2019  927C 21 65 8C     	ld hl,Ctrl_3
2020  927F CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2021  9281
2022  9281 AF           	xor a
2023  9282 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2024  9283
2025  9283 C9           	ret
2026  9284
2027  9284              Siguiente_frame_explosion_Amadeus
2028  9284
2029  9284 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2030  9286
2031  9286              ; Avanza Frame de explosión.
2032  9286
2033  9286 2A BE 89     	ld hl,(Pamm_Amadeus)
2034  9289 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2035  928C
2036  928C 79           	ld a,c
2037  928D 95           	sub l
2038  928E 20 0B        	jr nz,1F
2039  9290
2040  9290              ; Fín de Amadeus !!!!!!!!!!!!!
2041  9290              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2042  9290
2043  9290 AF           	xor a
2044  9291 32 BB 89     	ld (Impacto_Amadeus),a
2045  9294 21 65 8C     	ld hl,Ctrl_3
2046  9297 CB F6        	set 6,(hl)
2047  9299
2048  9299 18 D8        	jr Borra_Amadeus_impactado
2049  929B
2050  929B 23           1 inc hl
2051  929C 23           	inc hl
2052  929D 22 BE 89     	ld (Pamm_Amadeus),hl
2053  92A0 18 D1        	jr Borra_Amadeus_impactado
2054  92A2
2055  92A2              ; ---------------------------------------------------------------
2056  92A2
2057  92A2              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92A2              ; ******************************************************************************************************************************************************************************************
   2+ 92A2              ;
   3+ 92A2              ;   21/04/24
   4+ 92A2              ;
   5+ 92A2              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92A2              ;   (XOR) bit a bit.
   7+ 92A2              ;
   8+ 92A2              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92A2
  10+ 92A2              Derivando_RND
  11+ 92A2
  12+ 92A2 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92A5
  14+ 92A5 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92A7 C5               push bc
  16+ 92A8              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92A8 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92AB              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92AB
  20+ 92AB A7           6 and a                                 ; Carry a "0".
  21+ 92AC CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92AE 30 02            jr nc,1F
  23+ 92B0
  24+ 92B0 CB C1            set 0,c
  25+ 92B2
  26+ 92B2 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92B3 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92B5 5F               ld e,a
  29+ 92B6
  30+ 92B6 7A               ld a,d
  31+ 92B7 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92B9 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92BB
  34+ 92BB CB 3F            srl a
  35+ 92BD
  36+ 92BD AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92BE
  38+ 92BE 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92BF 28 04            jr z,4F
  40+ 92C1
  41+ 92C1 CB FF            set 7,a
  42+ 92C3 18 02            jr 5F
  43+ 92C5
  44+ 92C5 CB BF        4 res 7,a
  45+ 92C7
  46+ 92C7 CB 21        5 sla c
  47+ 92C9 10 E0            djnz 6B
  48+ 92CB
  49+ 92CB 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92CC
  51+ 92CC 77               ld (hl),a
  52+ 92CD 23               inc hl
  53+ 92CE C1               pop bc
  54+ 92CF 10 D4            djnz 3B
  55+ 92D1
  56+ 92D1 C9               ret
  57+ 92D2
  58+ 92D2
  59+ 92D2
# file closed: RND_Derivando.asm
2058  92D2              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92D2              ;---------------------------------------------------------------------------------------------------------------
   2+ 92D2              ;
   3+ 92D2              ;   13/11/24
   4+ 92D2
   5+ 92D2              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92D2
   7+ 92D2              Genera_movimientos_masticados_del_nivel
   8+ 92D2
   9+ 92D2              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92D2
  11+ 92D2              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92D2              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92D2              ;	(Datos_de_nivel) apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92D2
  15+ 92D2 2D           	dec l
  16+ 92D3 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 92D4 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 92D5 4E           	ld c,(hl)
  19+ 92D6
  20+ 92D6 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 92D7 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 92D8
  23+ 92D8              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 92D8
  25+ 92D8 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 92D9
  27+ 92D9 CD 17 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 92DC
  29+ 92DC              ;	Caja Master inicializada ???
  30+ 92DC
  31+ 92DC 7E           	ld a,(hl)
  32+ 92DD A7           	and a
  33+ 92DE 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 92E0
  35+ 92E0              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 92E0
  37+ 92E0 C1           	pop bc
  38+ 92E1 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 92E2 C5           	push bc
  40+ 92E3
  41+ 92E3 CD BF 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 92E6 CD 48 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 92E9
  44+ 92E9 3A EE 8B     	ld a,(Tipo)
  45+ 92EC CD 27 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 92EF
  47+ 92EF              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 92EF
  49+ 92EF              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 92EF              ;	ld a,(hl)
  51+ 92EF              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 92EF
  53+ 92EF              ;	ld hl,Posicion_inicio
  54+ 92EF              ;	ld (hl),a
  55+ 92EF
  56+ 92EF              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 92EF              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 92EF
  59+ 92EF CD E6 8F     	call Construye_movimientos_masticados_entidad
  60+ 92F2
  61+ 92F2              ; 	Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
  62+ 92F2              ; 	(Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
  63+ 92F2              ; 	(Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
  64+ 92F2              ; 	Contador_general_de_mov_masticados de este tipo de entidad actualizado.
  65+ 92F2              ; 	Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
  66+ 92F2
  67+ 92F2 2A 34 8C     	ld hl,(Puntero_indice_master)
  68+ 92F5 CD F2 90     	call Extrae_address
  69+ 92F8
  70+ 92F8 5D           	ld e,l
  71+ 92F9 54           	ld d,h
  72+ 92FA
  73+ 92FA CD 75 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  74+ 92FD
  75+ 92FD              Movimientos_masticados_construidos
  76+ 92FD
  77+ 92FD C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  78+ 92FE
  79+ 92FE E1           	pop hl														; Pop (Datos_de_nivel).
  80+ 92FF 2C           	inc l														; Datos_de_nivel +1 en HL.
  81+ 9300
  82+ 9300 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  83+ 9301 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  84+ 9303
  85+ 9303 C9           	ret
  86+ 9304
  87+ 9304              ;---------------------------------------------------------------------------------------------------------------
  88+ 9304              ;
  89+ 9304              ;   9/11/24
  90+ 9304              ;
  91+ 9304              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  92+ 9304              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  93+ 9304              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  94+ 9304              ;	_ de la 1ª entidad del Nivel.
  95+ 9304              ;
  96+ 9304              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  97+ 9304
  98+ 9304              ;	MODIFICA: HL,DE y A.
  99+ 9304              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
 100+ 9304
 101+ 9304              Inicializa_1er_Nivel
 102+ 9304
 103+ 9304              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 104+ 9304
 105+ 9304 21 D2 8B     	ld hl,Indice_de_niveles
 106+ 9307 CD F2 90     	call Extrae_address
 107+ 930A ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 108+ 930E
 109+ 930E 7E           	ld a,(hl)
 110+ 930F 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 111+ 9312
 112+ 9312 2C           	inc l
 113+ 9313 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 114+ 9316
 115+ 9316 C9           	ret
 116+ 9317
 117+ 9317              ; ----------------------
 118+ 9317              ;
 119+ 9317              ;	13/11/24
 120+ 9317              ;
 121+ 9317
 122+ 9317              Situa_en_Caja_Master
 123+ 9317
 124+ 9317 CD 33 94         call Calcula_salto_en_BC
 125+ 931A 21 61 89         ld hl,Indice_de_cajas_master
 126+ 931D A7               and a
 127+ 931E ED 4A            adc hl,bc
 128+ 9320 22 34 8C       	ld (Puntero_indice_master),hl
 129+ 9323 CD F2 90     	call Extrae_address
 130+ 9326 C9           	ret
 131+ 9327
 132+ 9327              ; ----------------------
 133+ 9327
 134+ 9327              ; Fija_velocidades ld de,Perfiles_de_velocidad
 135+ 9327              ; 	ld bc,4
 136+ 9327              ; 	ldir
 137+ 9327              ; 	ret
 138+ 9327
 139+ 9327 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 140+ 9328 CD 33 94         call Calcula_salto_en_BC
 141+ 932B 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 142+ 932E A7               and a
 143+ 932F ED 4A            adc hl,bc
 144+ 9331 CD F2 90         call Extrae_address
 145+ 9334 22 1F 8C         ld (Puntero_indice_mov),hl
 146+ 9337 C9               ret
 147+ 9338
 148+ 9338              ;---------------------------------------------------------------------------------------------------------------
 149+ 9338              ;
 150+ 9338              ;   13/11/24
 151+ 9338              ;
 152+ 9338              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 153+ 9338
 154+ 9338
 155+ 9338              Prepara_Cajas_de_Entidades
 156+ 9338
 157+ 9338              ; Preparamos los punteros de las cajas de entidades:
 158+ 9338
 159+ 9338 CD DC 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 160+ 933B              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 161+ 933B CD 7E 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 162+ 933E
 163+ 933E 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 164+ 9341
 165+ 9341              ; En este punto:
 166+ 9341              ;
 167+ 9341              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 168+ 9341              ; B contiene (Numero_parcial_de_entidades).
 169+ 9341
 170+ 9341 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 171+ 9342
 172+ 9342 7E           	ld a,(hl)
 173+ 9343
 174+ 9343 CD 17 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 175+ 9346
 176+ 9346 ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 177+ 934A 01 0C 00     	ld bc,12
 178+ 934D ED B0        	ldir
 179+ 934F
 180+ 934F 18 FE        	jr $
 181+ 9351
 182+ 9351              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 183+ 9351
 184+ 9351
 185+ 9351              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 186+ 9351
 187+ 9351              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 188+ 9351              ;	_ de este tipo de entidad.
 189+ 9351
 190+ 9351 CD E3 9E     	call Situa_en_contador_general_de_mov_masticados
 191+ 9354 CD F0 9E     	call Transfiere_datos_de_contadores
 192+ 9357
 193+ 9357 18 03        	jr 4F
 194+ 9359
 195+ 9359 CD E6 8F     3 call Construye_movimientos_masticados_entidad
 196+ 935C
 197+ 935C              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 198+ 935C              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 199+ 935C              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 200+ 935C              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 201+ 935C              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 202+ 935C
 203+ 935C              ;	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 204+ 935C              ;																; _ Mov_masticados ya generados.
 205+ 935C
 206+ 935C CD 3A 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 207+ 935F
 208+ 935F DD E5        	push ix
 209+ 9361 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 210+ 9362
 211+ 9362 D5           	push de
 212+ 9363 CD BA 94     	call Genera_coordenadas
 213+ 9366
 214+ 9366 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 215+ 936A CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 216+ 936D D1           	pop de
 217+ 936E
 218+ 936E CD E6 94     	call Genera_datos_de_impresion
 219+ 9371              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 220+ 9371              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 221+ 9371              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 222+ 9371              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 223+ 9371
 224+ 9371 CD F7 93     	call Decrementa_Contador_de_mov_masticados
 225+ 9374
 226+ 9374              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 227+ 9374
 228+ 9374 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 229+ 9378 CD 75 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 230+ 937B
 231+ 937B CD D4 93     	call Limpiamos_bandeja_DRAW
 232+ 937E CD 40 91     	call Incrementa_punteros_de_cajas
 233+ 9381
 234+ 9381              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 235+ 9381              ; _ entidad del Nivel.
 236+ 9381
 237+ 9381 3A 66 8C     	ld a,(Ctrl_4)
 238+ 9384 E6 F0        	and $f0
 239+ 9386 32 66 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 240+ 9389
 241+ 9389              ; Siguiente entidad del Nivel.
 242+ 9389
 243+ 9389 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 244+ 938C 23           	inc hl 														; _ entidad del Nivel.
 245+ 938D
 246+ 938D C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 247+ 938E
 248+ 938E 10 B1        	djnz 1B
 249+ 9390
 250+ 9390 C9           	ret
 251+ 9391
 252+ 9391              ; -------------------------------------------------------------------------------------------------------------------
 253+ 9391              ;
 254+ 9391              ;	27/5/24
 255+ 9391              ;
 256+ 9391              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 257+ 9391              ;
 258+ 9391
 259+ 9391              ; 	Cargamos la definición de Amadeus en DRAW.
 260+ 9391              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 261+ 9391
 262+ 9391 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 263+ 9394 CD 48 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 264+ 9397
 265+ 9397
 266+ 9397              Construye_movimientos_masticados_Amadeus
 267+ 9397
 268+ 9397 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 269+ 939A CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 270+ 939D              ;															; _ el (Contador_de_mov_masticados).
 271+ 939D CD F8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 272+ 93A0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 273+ 93A0
 274+ 93A0              ; Generamos movimientos masticados de Amadeus.
 275+ 93A0
 276+ 93A0 06 79        	ld b,121												; $0079, 121d.
 277+ 93A2
 278+ 93A2 C5           1 push bc
 279+ 93A3 CD 02 97     	call Draw
 280+ 93A6 CD 12 90     	call Guarda_movimiento_masticado
 281+ 93A9
 282+ 93A9 CD 76 9A     	call Mov_right
 283+ 93AC CD 76 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 284+ 93AF
 285+ 93AF C1           	pop bc
 286+ 93B0 10 F0        	djnz 1B
 287+ 93B2
 288+ 93B2              ; Todos los movimientos masticados de Amadeus se han creado.
 289+ 93B2
 290+ 93B2              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 291+ 93B2              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 292+ 93B2
 293+ 93B2 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 294+ 93B5 01 08 00     	ld bc,8
 295+ 93B8 A7           	and a
 296+ 93B9 ED 42        	sbc hl,bc
 297+ 93BB 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 298+ 93BE
 299+ 93BE C9           	ret
 300+ 93BF
 301+ 93BF              ; ---------------------------------------------------------------------
 302+ 93BF              ;
 303+ 93BF              ;	10/02/24
 304+ 93BF              ;
 305+ 93BF              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 306+ 93BF              ;
 307+ 93BF              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 308+ 93BF
 309+ 93BF              Definicion_segun_tipo
 310+ 93BF
 311+ 93BF CD 33 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 312+ 93C2 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 313+ 93C5 CD 3E 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 314+ 93C8 C9           	ret
 315+ 93C9
 316+ 93C9              ; ---------------------------------------------------------------------
 317+ 93C9              ;
 318+ 93C9              ;	6/7/24
 319+ 93C9
 320+ 93C9
 321+ 93C9              Store_Restore_cajas
 322+ 93C9
 323+ 93C9 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 324+ 93CD CD 75 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 325+ 93D0 CD 40 91     	call Incrementa_punteros_de_cajas
 326+ 93D3 C9           	ret
 327+ 93D4
 328+ 93D4              ; ---------------------------------------------------------------------
 329+ 93D4              ;
 330+ 93D4              ;	23/6/24
 331+ 93D4              ;
 332+ 93D4              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 333+ 93D4              ;
 334+ 93D4              ;	MODIFY: HL
 335+ 93D4
 336+ 93D4              Limpiamos_bandeja_DRAW
 337+ 93D4
 338+ 93D4 ED 73 3D 8C  	ld (Stack),sp
 339+ 93D8 31 13 8C     	ld sp,Vel_left
 340+ 93DB
 341+ 93DB AF           	xor a
 342+ 93DC 67           	ld h,a
 343+ 93DD 6F           	ld l,a
 344+ 93DE
 345+ 93DE E5           	push hl
 346+ 93DF E5           	push hl
 347+ 93E0 E5           	push hl
 348+ 93E1 E5           	push hl
 349+ 93E2 E5           	push hl
 350+ 93E3 E5           	push hl
 351+ 93E4 E5           	push hl
 352+ 93E5 E5           	push hl
 353+ 93E6 E5           	push hl
 354+ 93E7 E5           	push hl
 355+ 93E8 E5           	push hl
 356+ 93E9 E5           	push hl
 357+ 93EA E5           	push hl
 358+ 93EB E5           	push hl
 359+ 93EC E5           	push hl
 360+ 93ED E5           	push hl
 361+ 93EE E5           	push hl
 362+ 93EF E5           	push hl
 363+ 93F0
 364+ 93F0 33           	inc sp
 365+ 93F1
 366+ 93F1 E5           	push hl
 367+ 93F2 ED 7B 3D 8C  	ld sp,(Stack)
 368+ 93F6
 369+ 93F6 C9           	ret
 370+ 93F7
 371+ 93F7              ; ---------------------------------------------------------------------
 372+ 93F7              ;
 373+ 93F7              ;	24/03/24
 374+ 93F7
 375+ 93F7 2A F7 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 376+ 93FA 2B           	dec hl
 377+ 93FB 22 F7 8B     	ld (Contador_de_mov_masticados),hl
 378+ 93FE C9           	ret
 379+ 93FF
 380+ 93FF              ; ---------------------------------------------------------------------
 381+ 93FF              ;
 382+ 93FF              ;	7/11/24
 383+ 93FF
 384+ 93FF              Reinicia_entidad_maliciosa
 385+ 93FF
 386+ 93FF              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 387+ 93FF
 388+ 93FF CD E3 9E     	call Situa_en_contador_general_de_mov_masticados
 389+ 9402 CD F0 9E     	call Transfiere_datos_de_contadores
 390+ 9405
 391+ 9405              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 392+ 9405
 393+ 9405 3A EE 8B     	ld a,(Tipo)
 394+ 9408 CD BF 93     	call Definicion_segun_tipo
 395+ 940B
 396+ 940B E5           	push hl
 397+ 940C DD E1        	pop ix
 398+ 940E
 399+ 940E DD 6E 0B     	ld l,(ix+11)
 400+ 9411 DD 66 0C     	ld h,(ix+12)
 401+ 9414
 402+ 9414 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 403+ 9417
 404+ 9417 CD 3A 90     	call Cargamos_registros_con_mov_masticado
 405+ 941A
 406+ 941A              ; Incrementa (Contador_de_vueltas)x2.
 407+ 941A              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 408+ 941A
 409+ 941A              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 410+ 941A              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 411+ 941A              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 412+ 941A              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 413+ 941A              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 414+ 941A
 415+ 941A 21 F1 8B     	ld hl,Contador_de_vueltas
 416+ 941D CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 417+ 941F
 418+ 941F 7E           	ld a,(hl)
 419+ 9420 CB 2F        	sra a
 420+ 9422 CB 2F        	sra a
 421+ 9424
 422+ 9424 32 F9 8B     	ld (Velocidad),a
 423+ 9427
 424+ 9427 3E 40        	ld a,$40
 425+ 9429 BE           	cp (hl)
 426+ 942A C0           	ret nz
 427+ 942B
 428+ 942B              ; Límitador.
 429+ 942B
 430+ 942B              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 431+ 942B
 432+ 942B CB 2E        	sra (hl)
 433+ 942D 21 F9 8B     	ld hl,Velocidad
 434+ 9430 CB 2E        	sra (hl)
 435+ 9432
 436+ 9432 C9           	ret
 437+ 9433
 438+ 9433              ;	------------------------------------------------------------------------------------
 439+ 9433              ;
 440+ 9433              ;	09/11/24
 441+ 9433              ;
 442+ 9433              ;	INPUTS:	A contiene el (Tipo) de entidad.
 443+ 9433              ;
 444+ 9433              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 445+ 9433              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 446+ 9433
 447+ 9433 A7           Calcula_salto_en_BC and a
 448+ 9434 28 04        	jr z,1F
 449+ 9436 CB 27        	sla a
 450+ 9438 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 451+ 943A 4F           1 ld c,a
 452+ 943B 06 00        	ld b,0
 453+ 943D C9           	ret
 454+ 943E
 455+ 943E              ; ------------------------------------------------------------------
 456+ 943E              ;
 457+ 943E              ;	19/1/24
 458+ 943E              ;
 459+ 943E              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 460+ 943E              ;	Actualiza (Datos_de_entidad) con esa dirección.
 461+ 943E
 462+ 943E A7           Situa_en_datos_de_definicion and a
 463+ 943F ED 4A        	adc hl,bc
 464+ 9441 CD F2 90     	call Extrae_address
 465+ 9444 22 3B 8C         ld (Datos_de_entidad),hl
 466+ 9447 C9           	ret
 467+ 9448
 468+ 9448              ; ------------------------------------------------------------------
 469+ 9448
 470+ 9448              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 471+ 9448              ; 	inc de
 472+ 9448              ; 	inc de
 473+ 9448              ; 	ex de,hl
 474+ 9448              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 475+ 9448              ; 	ret
 476+ 9448
 477+ 9448              ; ----------------------------------------------------------------------------------------------------------
 478+ 9448              ;
 479+ 9448              ;	24/6/24
 480+ 9448              ;
 481+ 9448              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 482+ 9448              ;	_ de entidad.
 483+ 9448              ;
 484+ 9448              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 485+ 9448              ;
 486+ 9448              ;
 487+ 9448              ;	MODIFICA: HL,DE y BC
 488+ 9448
 489+ 9448
 490+ 9448              Definicion_de_entidad_a_bandeja_DRAW
 491+ 9448
 492+ 9448 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 493+ 944B 7E           	ld a,(hl) 									; Volcamos Tipo.
 494+ 944C 12           	ld (de),a
 495+ 944D 23           	inc hl
 496+ 944E              ;
 497+ 944E 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 498+ 9451 01 02 00     	ld bc,2
 499+ 9454 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 500+ 9456              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 501+ 9456 11 F1 8B     	ld de,Contador_de_vueltas
 502+ 9459 7E           	ld a,(hl)
 503+ 945A 12           	ld (de),a
 504+ 945B 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 505+ 945C
 506+ 945C 11 03 8C     	ld de,Indice_Sprite_der
 507+ 945F 01 04 00     	ld bc,4
 508+ 9462 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 509+ 9464
 510+ 9464 11 0B 8C     	ld de,Posicion_inicio
 511+ 9467 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 512+ 946A ED B0        	ldir 									; Vuelco (Frames_explosion).
 513+ 946C
 514+ 946C 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 515+ 946F 01 02 00     	ld bc,2
 516+ 9472 ED B0        	ldir
 517+ 9474
 518+ 9474 C9           	ret
 519+ 9475
 520+ 9475              ; ----------------------------------------------------------------------------------------------------------
 521+ 9475              ;
 522+ 9475              ;	1/8/24
 523+ 9475              ;
 524+ 9475
 525+ 9475              Parametros_de_bandeja_DRAW_a_caja
 526+ 9475
 527+ 9475 21 EE 8B     	ld hl,Bandeja_DRAW
 528+ 9478 01 0C 00     	ld bc,12
 529+ 947B ED B0        	ldir
 530+ 947D C9           	ret
 531+ 947E
 532+ 947E              ;---------------------------------------------------------------------------------------------------------------
 533+ 947E              ;
 534+ 947E              ;	13/11/24
 535+ 947E              ;
 536+ 947E              ;	INICIALIZA (Numero_parcial_de_entidades).
 537+ 947E              ;
 538+ 947E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 539+ 947E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 540+ 947E
 541+ 947E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 542+ 947E              ;			- Actualiza (Numero_de_entidades).
 543+ 947E
 544+ 947E              ;	MODIFICA: A y B.
 545+ 947E
 546+ 947E
 547+ 947E              Inicializa_Numero_parcial_de_entidades
 548+ 947E
 549+ 947E 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 550+ 9481 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 551+ 9483 38 0E        	jr c,1F
 552+ 9485 28 0C        	jr z,1F
 553+ 9487
 554+ 9487              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 555+ 9487              ; Actualizamos variables.
 556+ 9487
 557+ 9487 D6 06        	sub 6
 558+ 9489 32 36 8C     	ld (Numero_de_entidades),a
 559+ 948C 3E 06        	ld a,6
 560+ 948E 32 37 8C     	ld (Numero_parcial_de_entidades),a
 561+ 9491 47           	ld b,a
 562+ 9492 C9           	ret
 563+ 9493
 564+ 9493              ; El nº total de entidades no supera el nº de cajas de entidades.
 565+ 9493              ; (Numero_de_entidades)="0".
 566+ 9493
 567+ 9493 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 568+ 9496 47           	ld b,a
 569+ 9497 AF           	xor a
 570+ 9498 32 36 8C     	ld (Numero_de_entidades),a
 571+ 949B C9           	ret
 572+ 949C
# file closed: Rutinas_de_inicio_y_niveles.asm
2059  949C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 949C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 949C              ;
   3+ 949C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 949C              ;
   5+ 949C              ; *****************************************************************************************************************************************************************************************
   6+ 949C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 949C
   8+ 949C 7C           calcula_tercio ld a,h
   9+ 949D E6 18        	and $18
  10+ 949F CB 2F        	sra a
  11+ 94A1 CB 2F        	sra a
  12+ 94A3 CB 2F        	sra a
  13+ 94A5 C9           	ret
  14+ 94A6
# file closed: calcula_tercio.asm
2060  94A6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94A6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94A6              ;
   3+ 94A6              ;
   4+ 94A6              ;	CLS.
   5+ 94A6              ;
   6+ 94A6              ;	Limpia la pantalla y define sus atributos.
   7+ 94A6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94A6              ;
   9+ 94A6              ;	COLORES: 0 ..... NEGRO
  10+ 94A6              ;    		 1 ..... AZUL
  11+ 94A6              ; 			 2 ..... ROJO
  12+ 94A6              ;			 3 ..... MAGENTA
  13+ 94A6              ; 			 4 ..... VERDE
  14+ 94A6              ; 			 5 ..... CIAN
  15+ 94A6              ;			 6 ..... AMARILLO
  16+ 94A6              ; 			 7 ..... BLANCO
  17+ 94A6              ;
  18+ 94A6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94A6              ;
  20+ 94A6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94A6
  22+ 94A6
  23+ 94A6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94A9 11 01 40     	LD DE,$4001
  25+ 94AC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94AF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94B1 ED B0        	LDIR
  28+ 94B3 01 FF 02     	LD BC,767
  29+ 94B6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94B7 ED B0        	LDIR
  31+ 94B9 C9           	ret
  32+ 94BA
# file closed: Cls.asm
2061  94BA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94BA              ; ------------------------------------------------------------------------
   2+ 94BA              ;
   3+ 94BA              ;	30/1/24
   4+ 94BA              ;
   5+ 94BA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94BA              ;	Fila superior "0", Columna izquierda "0".
   7+ 94BA              ;
   8+ 94BA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94BA              ;
  10+ 94BA              ;	Modifica: A,BC y DE.
  11+ 94BA
  12+ 94BA 7D           Genera_coordenadas ld a,l
  13+ 94BB E6 1F        	and $1f
  14+ 94BD 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94C0
  16+ 94C0 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94C1 FE 40        	cp $40
  18+ 94C3 38 1C        	jr c,4F
  19+ 94C5
  20+ 94C5 CD 9C 94     	call calcula_tercio
  21+ 94C8 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94C9
  23+ 94C9 1E 00        	ld e,0
  24+ 94CB 7D           	ld a,l
  25+ 94CC E6 E0        	and $e0
  26+ 94CE 28 01        	jr z,1F
  27+ 94D0 04           	inc b
  28+ 94D1
  29+ 94D1 04           1 inc b
  30+ 94D2 05           	dec b
  31+ 94D3 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94D5              ;														; _ , salimos.
  33+ 94D5 1C           3 inc e
  34+ 94D6 D6 20        	sub 32
  35+ 94D8 20 FB        	jr nz,3B
  36+ 94DA 10 F5        	djnz 1B
  37+ 94DC
  38+ 94DC 7B           2 ld a,e
  39+ 94DD 32 F0 8B     	ld (Coordenada_y),a
  40+ 94E0 C9           	ret
  41+ 94E1
  42+ 94E1 AF           4 xor a
  43+ 94E2 32 F0 8B     	ld (Coordenada_y),a
  44+ 94E5 C9           	ret
  45+ 94E6
# file closed: Genera_coordenadas.asm
2062  94E6              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94E6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94E6              ;
   3+ 94E6              ;	20/09/24
   4+ 94E6              ;
   5+ 94E6              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94E6              ;   DE contiene Puntero_objeto.
   7+ 94E6              ;   IX contiene el Puntero de impresión.
   8+ 94E6
   9+ 94E6              Genera_datos_de_impresion
  10+ 94E6
  11+ 94E6 ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94EA
  13+ 94EA 31 F5 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94ED DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94EF
  16+ 94EF 2A 5F 8C         ld hl,(Scanlines_album_SP)
  17+ 94F2
  18+ 94F2 3E 05            ld a,5
  19+ 94F4 85               add l
  20+ 94F5 6F               ld l,a
  21+ 94F6
  22+ 94F6 F9               ld sp,hl
  23+ 94F7 22 5F 8C         ld (Scanlines_album_SP),hl
  24+ 94FA
  25+ 94FA 21 00 00         ld hl,0
  26+ 94FD
  27+ 94FD DD E5            push ix
  28+ 94FF 3B               dec sp
  29+ 9500 ED 7A            adc hl,sp
  30+ 9502 D5               push de
  31+ 9503
  32+ 9503              ; Recuperamos SP.
  33+ 9503
  34+ 9503 ED 7B 3D 8C      ld sp,(Stack)
  35+ 9507
  36+ 9507 E5               push hl
  37+ 9508 F1               pop af
  38+ 9509 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 950A
  40+ 950A              ; Tenemos el encabezado listo.
  41+ 950A              ; Preparamos registros para generar los scanlines.
  42+ 950A
  43+ 950A DD E5            push ix
  44+ 950C E1               pop hl                                          ; 1er scanline en HL.
  45+ 950D
  46+ 950D ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  47+ 9511
  48+ 9511              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9511              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9511
  51+ 9511 7C               ld a,h
  52+ 9512 FE 50            cp $50
  53+ 9514 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9516
  55+ 9516 20 05            jr nz,2F
  56+ 9518
  57+ 9518 7D               ld a,l
  58+ 9519 FE E0            cp $e0
  59+ 951B 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 951D
  61+ 951D 7D           2 ld a,l
  62+ 951E FE C0            cp $c0
  63+ 9520 D2 B6 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9523
  65+ 9523              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9523
  67+ 9523 CD B4 99         call NextScan
  68+ 9526 EB               ex de,hl
  69+ 9527
  70+ 9527 73               ld (hl),e
  71+ 9528 23               inc hl
  72+ 9529 72               ld (hl),d
  73+ 952A 23               inc hl
  74+ 952B
  75+ 952B EB               ex de,hl
  76+ 952C
  77+ 952C CD B4 99         call NextScan
  78+ 952F EB               ex de,hl
  79+ 9530
  80+ 9530 73               ld (hl),e
  81+ 9531 23               inc hl
  82+ 9532 72               ld (hl),d
  83+ 9533 23               inc hl
  84+ 9534
  85+ 9534 EB               ex de,hl
  86+ 9535
  87+ 9535 CD B4 99         call NextScan
  88+ 9538 EB               ex de,hl
  89+ 9539
  90+ 9539 73               ld (hl),e
  91+ 953A 23               inc hl
  92+ 953B 72               ld (hl),d
  93+ 953C 23               inc hl
  94+ 953D
  95+ 953D EB               ex de,hl
  96+ 953E
  97+ 953E CD B4 99         call NextScan
  98+ 9541 EB               ex de,hl
  99+ 9542
 100+ 9542 73               ld (hl),e
 101+ 9543 23               inc hl
 102+ 9544 72               ld (hl),d
 103+ 9545 23               inc hl
 104+ 9546
 105+ 9546 EB               ex de,hl
 106+ 9547
 107+ 9547 CD B4 99         call NextScan
 108+ 954A EB               ex de,hl
 109+ 954B
 110+ 954B 73               ld (hl),e
 111+ 954C 23               inc hl
 112+ 954D 72               ld (hl),d
 113+ 954E 23               inc hl
 114+ 954F
 115+ 954F EB               ex de,hl
 116+ 9550
 117+ 9550 CD B4 99         call NextScan
 118+ 9553 EB               ex de,hl
 119+ 9554
 120+ 9554 73               ld (hl),e
 121+ 9555 23               inc hl
 122+ 9556 72               ld (hl),d
 123+ 9557 23               inc hl
 124+ 9558
 125+ 9558 EB               ex de,hl
 126+ 9559
 127+ 9559 CD B4 99         call NextScan
 128+ 955C EB               ex de,hl
 129+ 955D
 130+ 955D 73               ld (hl),e
 131+ 955E 23               inc hl
 132+ 955F 72               ld (hl),d
 133+ 9560 23               inc hl
 134+ 9561
 135+ 9561 EB               ex de,hl
 136+ 9562
 137+ 9562 CD B4 99         call NextScan
 138+ 9565 EB               ex de,hl
 139+ 9566
 140+ 9566 73               ld (hl),e
 141+ 9567 23               inc hl
 142+ 9568 72               ld (hl),d
 143+ 9569 23               inc hl
 144+ 956A
 145+ 956A EB               ex de,hl
 146+ 956B
 147+ 956B CD B4 99         call NextScan
 148+ 956E EB               ex de,hl
 149+ 956F
 150+ 956F 73               ld (hl),e
 151+ 9570 23               inc hl
 152+ 9571 72               ld (hl),d
 153+ 9572 23               inc hl
 154+ 9573
 155+ 9573 EB               ex de,hl
 156+ 9574
 157+ 9574 CD B4 99         call NextScan
 158+ 9577 EB               ex de,hl
 159+ 9578
 160+ 9578 73               ld (hl),e
 161+ 9579 23               inc hl
 162+ 957A 72               ld (hl),d
 163+ 957B 23               inc hl
 164+ 957C
 165+ 957C EB               ex de,hl
 166+ 957D
 167+ 957D CD B4 99         call NextScan
 168+ 9580 EB               ex de,hl
 169+ 9581
 170+ 9581 73               ld (hl),e
 171+ 9582 23               inc hl
 172+ 9583 72               ld (hl),d
 173+ 9584 23               inc hl
 174+ 9585
 175+ 9585 EB               ex de,hl
 176+ 9586
 177+ 9586 CD B4 99         call NextScan
 178+ 9589 EB               ex de,hl
 179+ 958A
 180+ 958A 73               ld (hl),e
 181+ 958B 23               inc hl
 182+ 958C 72               ld (hl),d
 183+ 958D 23               inc hl
 184+ 958E
 185+ 958E EB               ex de,hl
 186+ 958F
 187+ 958F CD B4 99         call NextScan
 188+ 9592 EB               ex de,hl
 189+ 9593
 190+ 9593 73               ld (hl),e
 191+ 9594 23               inc hl
 192+ 9595 72               ld (hl),d
 193+ 9596 23               inc hl
 194+ 9597
 195+ 9597 EB               ex de,hl
 196+ 9598
 197+ 9598 CD B4 99         call NextScan
 198+ 959B EB               ex de,hl
 199+ 959C
 200+ 959C 73               ld (hl),e
 201+ 959D 23               inc hl
 202+ 959E 72               ld (hl),d
 203+ 959F 23               inc hl
 204+ 95A0
 205+ 95A0 EB               ex de,hl
 206+ 95A1
 207+ 95A1 CD B4 99         call NextScan
 208+ 95A4 EB               ex de,hl
 209+ 95A5
 210+ 95A5              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95A5              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95A5              ;   _ generar sus scanlines.
 213+ 95A5
 214+ 95A5              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95A5
 216+ 95A5 73               ld (hl),e
 217+ 95A6 23               inc hl
 218+ 95A7 72               ld (hl),d
 219+ 95A8 23               inc hl
 220+ 95A9
 221+ 95A9              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95A9
 223+ 95A9 22 5F 8C         ld (Scanlines_album_SP),hl
 224+ 95AC
 225+ 95AC EB               ex de,hl
 226+ 95AD
 227+ 95AD              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95AD
 229+ 95AD              ;    call NextScan
 230+ 95AD              ;    call NextScan
 231+ 95AD
 232+ 95AD 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95B0
 234+ 95B0              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95B0
 236+ 95B0 08               ex af,af
 237+ 95B1
 238+ 95B1 F5               push af
 239+ 95B2 E1               pop hl
 240+ 95B3
 241+ 95B3 36 10            ld (hl),16
 242+ 95B5
 243+ 95B5 C9               ret
 244+ 95B6
 245+ 95B6              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95B6
 247+ 95B6              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95B6
 249+ 95B6 3E 57            ld a,$57
 250+ 95B8 94               sub h
 251+ 95B9 47               ld b,a
 252+ 95BA
 253+ 95BA 3E DF            ld a,$df
 254+ 95BC BD               cp l
 255+ 95BD 38 04            jr c,1F
 256+ 95BF
 257+ 95BF 3E 08            ld a,8
 258+ 95C1 80               add b
 259+ 95C2 47               ld b,a
 260+ 95C3
 261+ 95C3              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95C3              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95C3
 264+ 95C3 48           1 ld c,b
 265+ 95C4 0C               inc c
 266+ 95C5
 267+ 95C5 04               inc b
 268+ 95C6 05               dec b
 269+ 95C7 20 02            jr nz,3F
 270+ 95C9
 271+ 95C9 18 0B            jr 6F
 272+ 95CB
 273+ 95CB CD B4 99     3 call NextScan
 274+ 95CE EB               ex de,hl
 275+ 95CF
 276+ 95CF 73               ld (hl),e
 277+ 95D0 23               inc hl
 278+ 95D1 72               ld (hl),d
 279+ 95D2 23               inc hl
 280+ 95D3
 281+ 95D3 EB               ex de,hl
 282+ 95D4 10 F5            djnz 3B
 283+ 95D6
 284+ 95D6 ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 285+ 95DA
 286+ 95DA 08           5 ex af,af
 287+ 95DB F5               push af
 288+ 95DC E1               pop hl
 289+ 95DD
 290+ 95DD 71               ld (hl),c
 291+ 95DE
 292+ 95DE C9               ret
 293+ 95DF
# file closed: Genera_datos_de_impresion.asm
2063  95DF              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95DF              ; -----------------------------------------------------------------------------
   2+ 95DF              ;
   3+ 95DF              ;   11/03/24
   4+ 95DF              ;
   5+ 95DF
   6+ 95DF              Pinta_Sprites
   7+ 95DF
   8+ 95DF              ;    ld hl,(Scanlines_album_SP)
   9+ 95DF              ;    call Extrae_address
  10+ 95DF
  11+ 95DF              ;    inc h
  12+ 95DF              ;    dec h
  13+ 95DF              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95DF
  15+ 95DF ED 73 3D 8C      ld (Stack),sp
  16+ 95E3
  17+ 95E3 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95E4              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95E4 2C               inc l
  20+ 95E5 2C               inc l
  21+ 95E6
  22+ 95E6 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95E7
  24+ 95E7 2C               inc l
  25+ 95E8 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95E9
  27+ 95E9              ;   Seleccionamos rutina de impresión:
  28+ 95E9
  29+ 95E9 3E 10            ld a,16
  30+ 95EB B8               cp b
  31+ 95EC C2 E8 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95EF
  33+ 95EF              ;   Rutinas:
  34+ 95EF
  35+ 95EF              Pinta_rapido    ;   1520 t/states.
  36+ 95EF
  37+ 95EF E1               pop hl
  38+ 95F0
  39+ 95F0 1A               ld a,(de)
  40+ 95F1 AE               xor (hl)
  41+ 95F2 77               ld (hl),a
  42+ 95F3 2C               inc l
  43+ 95F4 1C               inc e
  44+ 95F5 1A               ld a,(de)
  45+ 95F6 AE               xor (hl)
  46+ 95F7 77               ld (hl),a
  47+ 95F8 2C               inc l
  48+ 95F9 1C               inc e
  49+ 95FA 1A               ld a,(de)
  50+ 95FB AE               xor (hl)
  51+ 95FC 77               ld (hl),a
  52+ 95FD 13               inc de
  53+ 95FE
  54+ 95FE E1               pop hl
  55+ 95FF
  56+ 95FF 1A               ld a,(de)
  57+ 9600 AE               xor (hl)
  58+ 9601 77               ld (hl),a
  59+ 9602 2C               inc l
  60+ 9603 1C               inc e
  61+ 9604 1A               ld a,(de)
  62+ 9605 AE               xor (hl)
  63+ 9606 77               ld (hl),a
  64+ 9607 2C               inc l
  65+ 9608 1C               inc e
  66+ 9609 1A               ld a,(de)
  67+ 960A AE               xor (hl)
  68+ 960B 77               ld (hl),a
  69+ 960C 13               inc de
  70+ 960D
  71+ 960D E1               pop hl
  72+ 960E
  73+ 960E 1A               ld a,(de)
  74+ 960F AE               xor (hl)
  75+ 9610 77               ld (hl),a
  76+ 9611 2C               inc l
  77+ 9612 1C               inc e
  78+ 9613 1A               ld a,(de)
  79+ 9614 AE               xor (hl)
  80+ 9615 77               ld (hl),a
  81+ 9616 2C               inc l
  82+ 9617 1C               inc e
  83+ 9618 1A               ld a,(de)
  84+ 9619 AE               xor (hl)
  85+ 961A 77               ld (hl),a
  86+ 961B 13               inc de
  87+ 961C
  88+ 961C E1               pop hl
  89+ 961D
  90+ 961D 1A               ld a,(de)
  91+ 961E AE               xor (hl)
  92+ 961F 77               ld (hl),a
  93+ 9620 2C               inc l
  94+ 9621 1C               inc e
  95+ 9622 1A               ld a,(de)
  96+ 9623 AE               xor (hl)
  97+ 9624 77               ld (hl),a
  98+ 9625 2C               inc l
  99+ 9626 1C               inc e
 100+ 9627 1A               ld a,(de)
 101+ 9628 AE               xor (hl)
 102+ 9629 77               ld (hl),a
 103+ 962A 13               inc de
 104+ 962B
 105+ 962B E1               pop hl
 106+ 962C
 107+ 962C 1A               ld a,(de)
 108+ 962D AE               xor (hl)
 109+ 962E 77               ld (hl),a
 110+ 962F 2C               inc l
 111+ 9630 1C               inc e
 112+ 9631 1A               ld a,(de)
 113+ 9632 AE               xor (hl)
 114+ 9633 77               ld (hl),a
 115+ 9634 2C               inc l
 116+ 9635 1C               inc e
 117+ 9636 1A               ld a,(de)
 118+ 9637 AE               xor (hl)
 119+ 9638 77               ld (hl),a
 120+ 9639 13               inc de
 121+ 963A
 122+ 963A E1               pop hl
 123+ 963B
 124+ 963B 1A               ld a,(de)
 125+ 963C AE               xor (hl)
 126+ 963D 77               ld (hl),a
 127+ 963E 2C               inc l
 128+ 963F 1C               inc e
 129+ 9640 1A               ld a,(de)
 130+ 9641 AE               xor (hl)
 131+ 9642 77               ld (hl),a
 132+ 9643 2C               inc l
 133+ 9644 1C               inc e
 134+ 9645 1A               ld a,(de)
 135+ 9646 AE               xor (hl)
 136+ 9647 77               ld (hl),a
 137+ 9648 13               inc de
 138+ 9649
 139+ 9649 E1               pop hl
 140+ 964A
 141+ 964A 1A               ld a,(de)
 142+ 964B AE               xor (hl)
 143+ 964C 77               ld (hl),a
 144+ 964D 2C               inc l
 145+ 964E 1C               inc e
 146+ 964F 1A               ld a,(de)
 147+ 9650 AE               xor (hl)
 148+ 9651 77               ld (hl),a
 149+ 9652 2C               inc l
 150+ 9653 1C               inc e
 151+ 9654 1A               ld a,(de)
 152+ 9655 AE               xor (hl)
 153+ 9656 77               ld (hl),a
 154+ 9657 13               inc de
 155+ 9658
 156+ 9658 E1               pop hl
 157+ 9659
 158+ 9659 1A               ld a,(de)
 159+ 965A AE               xor (hl)
 160+ 965B 77               ld (hl),a
 161+ 965C 2C               inc l
 162+ 965D 1C               inc e
 163+ 965E 1A               ld a,(de)
 164+ 965F AE               xor (hl)
 165+ 9660 77               ld (hl),a
 166+ 9661 2C               inc l
 167+ 9662 1C               inc e
 168+ 9663 1A               ld a,(de)
 169+ 9664 AE               xor (hl)
 170+ 9665 77               ld (hl),a
 171+ 9666 13               inc de
 172+ 9667
 173+ 9667 E1               pop hl
 174+ 9668
 175+ 9668 1A               ld a,(de)
 176+ 9669 AE               xor (hl)
 177+ 966A 77               ld (hl),a
 178+ 966B 2C               inc l
 179+ 966C 1C               inc e
 180+ 966D 1A               ld a,(de)
 181+ 966E AE               xor (hl)
 182+ 966F 77               ld (hl),a
 183+ 9670 2C               inc l
 184+ 9671 1C               inc e
 185+ 9672 1A               ld a,(de)
 186+ 9673 AE               xor (hl)
 187+ 9674 77               ld (hl),a
 188+ 9675 13               inc de
 189+ 9676
 190+ 9676 E1               pop hl
 191+ 9677
 192+ 9677 1A               ld a,(de)
 193+ 9678 AE               xor (hl)
 194+ 9679 77               ld (hl),a
 195+ 967A 2C               inc l
 196+ 967B 1C               inc e
 197+ 967C 1A               ld a,(de)
 198+ 967D AE               xor (hl)
 199+ 967E 77               ld (hl),a
 200+ 967F 2C               inc l
 201+ 9680 1C               inc e
 202+ 9681 1A               ld a,(de)
 203+ 9682 AE               xor (hl)
 204+ 9683 77               ld (hl),a
 205+ 9684 13               inc de
 206+ 9685
 207+ 9685 E1               pop hl
 208+ 9686
 209+ 9686 1A               ld a,(de)
 210+ 9687 AE               xor (hl)
 211+ 9688 77               ld (hl),a
 212+ 9689 2C               inc l
 213+ 968A 1C               inc e
 214+ 968B 1A               ld a,(de)
 215+ 968C AE               xor (hl)
 216+ 968D 77               ld (hl),a
 217+ 968E 2C               inc l
 218+ 968F 1C               inc e
 219+ 9690 1A               ld a,(de)
 220+ 9691 AE               xor (hl)
 221+ 9692 77               ld (hl),a
 222+ 9693 13               inc de
 223+ 9694
 224+ 9694 E1               pop hl
 225+ 9695
 226+ 9695 1A               ld a,(de)
 227+ 9696 AE               xor (hl)
 228+ 9697 77               ld (hl),a
 229+ 9698 2C               inc l
 230+ 9699 1C               inc e
 231+ 969A 1A               ld a,(de)
 232+ 969B AE               xor (hl)
 233+ 969C 77               ld (hl),a
 234+ 969D 2C               inc l
 235+ 969E 1C               inc e
 236+ 969F 1A               ld a,(de)
 237+ 96A0 AE               xor (hl)
 238+ 96A1 77               ld (hl),a
 239+ 96A2 13               inc de
 240+ 96A3
 241+ 96A3 E1               pop hl
 242+ 96A4
 243+ 96A4 1A               ld a,(de)
 244+ 96A5 AE               xor (hl)
 245+ 96A6 77               ld (hl),a
 246+ 96A7 2C               inc l
 247+ 96A8 1C               inc e
 248+ 96A9 1A               ld a,(de)
 249+ 96AA AE               xor (hl)
 250+ 96AB 77               ld (hl),a
 251+ 96AC 2C               inc l
 252+ 96AD 1C               inc e
 253+ 96AE 1A               ld a,(de)
 254+ 96AF AE               xor (hl)
 255+ 96B0 77               ld (hl),a
 256+ 96B1 13               inc de
 257+ 96B2
 258+ 96B2 E1               pop hl
 259+ 96B3
 260+ 96B3 1A               ld a,(de)
 261+ 96B4 AE               xor (hl)
 262+ 96B5 77               ld (hl),a
 263+ 96B6 2C               inc l
 264+ 96B7 1C               inc e
 265+ 96B8 1A               ld a,(de)
 266+ 96B9 AE               xor (hl)
 267+ 96BA 77               ld (hl),a
 268+ 96BB 2C               inc l
 269+ 96BC 1C               inc e
 270+ 96BD 1A               ld a,(de)
 271+ 96BE AE               xor (hl)
 272+ 96BF 77               ld (hl),a
 273+ 96C0 13               inc de
 274+ 96C1
 275+ 96C1 E1               pop hl
 276+ 96C2
 277+ 96C2 1A               ld a,(de)
 278+ 96C3 AE               xor (hl)
 279+ 96C4 77               ld (hl),a
 280+ 96C5 2C               inc l
 281+ 96C6 1C               inc e
 282+ 96C7 1A               ld a,(de)
 283+ 96C8 AE               xor (hl)
 284+ 96C9 77               ld (hl),a
 285+ 96CA 2C               inc l
 286+ 96CB 1C               inc e
 287+ 96CC 1A               ld a,(de)
 288+ 96CD AE               xor (hl)
 289+ 96CE 77               ld (hl),a
 290+ 96CF 13               inc de
 291+ 96D0
 292+ 96D0 E1               pop hl
 293+ 96D1
 294+ 96D1 1A               ld a,(de)
 295+ 96D2 AE               xor (hl)
 296+ 96D3 77               ld (hl),a
 297+ 96D4 2C               inc l
 298+ 96D5 1C               inc e
 299+ 96D6 1A               ld a,(de)
 300+ 96D7 AE               xor (hl)
 301+ 96D8 77               ld (hl),a
 302+ 96D9 2C               inc l
 303+ 96DA 1C               inc e
 304+ 96DB 1A               ld a,(de)
 305+ 96DC AE               xor (hl)
 306+ 96DD 77               ld (hl),a
 307+ 96DE 13               inc de
 308+ 96DF
 309+ 96DF ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 96E3 ED 7B 3D 8C      ld sp,(Stack)
 311+ 96E7 C9               ret
 312+ 96E8
 313+ 96E8              Pinta_lento
 314+ 96E8
 315+ 96E8 E1           1 pop hl
 316+ 96E9
 317+ 96E9 1A               ld a,(de)
 318+ 96EA AE               xor (hl)
 319+ 96EB 77               ld (hl),a
 320+ 96EC 2C               inc l
 321+ 96ED 1C               inc e
 322+ 96EE 1A               ld a,(de)
 323+ 96EF AE               xor (hl)
 324+ 96F0 77               ld (hl),a
 325+ 96F1 2C               inc l
 326+ 96F2 1C               inc e
 327+ 96F3 1A               ld a,(de)
 328+ 96F4 AE               xor (hl)
 329+ 96F5 77               ld (hl),a
 330+ 96F6 13               inc de
 331+ 96F7
 332+ 96F7 10 EF            djnz 1B
 333+ 96F9
 334+ 96F9 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 96FD ED 7B 3D 8C      ld sp,(Stack)
 336+ 9701 C9               ret
# file closed: Pinta_Sprites.asm
2064  9702              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9702              ; ******************************************************************************************************************************************************************************************
   2+ 9702              ;
   3+ 9702              ; 26/06/23
   4+ 9702              ;
   5+ 9702              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9702
   7+ 9702              Draw
   8+ 9702
   9+ 9702 CD A8 99     	call Prepara_draw
  10+ 9705 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9706 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9707 28 05        	jr z,2F
  13+ 9709
  14+ 9709 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 970C 18 0C        	jr 1F
  16+ 970E
  17+ 970E 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9711 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9714 CD A0 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9717              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9717
  22+ 9717 CD 47 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 971A
  24+ 971A 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 971D CB 6F        	bit 5,a
  26+ 971F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9721
  28+ 9721 CD 36 97     	call Comprueba_limite_horizontal
  29+ 9724 CD C6 97     	call Comprueba_limite_vertical
  30+ 9727
  31+ 9727              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9727              ; -----------------------
  33+ 9727              ; -----------------------
  34+ 9727              ; -----------------------
  35+ 9727
  36+ 9727 CD 1C 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 972A CD 53 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 972D
  39+ 972D 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9730 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9732 32 FB 8B     	ld (Ctrl_0),a
  42+ 9735
  43+ 9735 C9           	ret
  44+ 9736
  45+ 9736              ; *******************************************************************************************************************************************************************************************
  46+ 9736              ;	21/01/23
  47+ 9736              ;
  48+ 9736              ; 	Comprueba_limite_horizontal.
  49+ 9736              ;
  50+ 9736              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9736              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9736              ;
  53+ 9736              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9736              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9736              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9736              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9736
  58+ 9736
  59+ 9736
  60+ 9736 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9739 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 973B 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 973D E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 973F 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9742 18 09            jr 6F
  66+ 9744 CB 5F        1 bit 3,a
  67+ 9746 28 0A            jr z,2F
  68+ 9748 E6 F7            and $f7
  69+ 974A 32 FB 8B         ld (Ctrl_0),a
  70+ 974D CD A0 98     6 call Inicializacion
  71+ 9750 18 5B            jr 5F
  72+ 9752 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9753
  74+ 9753              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9753              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9753
  77+ 9753 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9754 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9757 CD 9C 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 975A 67           	ld h,a
  81+ 975B EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 975C CD 9C 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 975F 67           	ld h,a
  84+ 9760 A7           	and a
  85+ 9761 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9763 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9764 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 9767 FE 02        	cp 2
  89+ 9769 38 1E        	jr c,3F
  90+ 976B 28 1C        	jr z,3F
  91+ 976D 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 976E 28 23            jr z,7F
  93+ 9770 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9772 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9774 E1           	pop hl
  96+ 9775
  97+ 9775              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9775              ; _para indicar con E="2" en caso necesario.
  99+ 9775
 100+ 9775 E5               push hl
 101+ 9776 C5               push bc
 102+ 9777 CD 9C 94     	call calcula_tercio
 103+ 977A FE 01        	cp 1
 104+ 977C 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 977E CD AE 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9781 28 26            jr z,9F
 107+ 9783 38 24            jr c,9F
 108+ 9785 1E 00        11 ld e,0
 109+ 9787 18 22            jr 8F
 110+ 9789 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 978A 28 07        	jr z, 7F
 112+ 978C 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 978E 1E 00         	ld e,0
 114+ 9790 E1           	pop hl
 115+ 9791 18 04        	jr 4F
 116+ 9793 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9795 18 15            jr 10F
 118+ 9797
 119+ 9797              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9797              ; _para indicar con E="2" en caso necesario.
 121+ 9797
 122+ 9797 E5           4 push hl
 123+ 9798 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9799 CD 9C 94     	call calcula_tercio
 125+ 979C FE 01        	cp 1
 126+ 979E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A0 CD AE 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97A3 28 04            jr z,9F
 129+ 97A5 30 02            jr nc,9F
 130+ 97A7 18 02        	jr 8F
 131+ 97A9 1E 02        9 ld e,2
 132+ 97AB C1           8 pop bc
 133+ 97AC E1           10 pop hl
 134+ 97AD C9           5 ret
 135+ 97AE
 136+ 97AE              ; --------------------
 137+ 97AE              ;
 138+ 97AE              ; 25/08/22
 139+ 97AE
 140+ 97AE CD 9C 94     Comprueba_centro call calcula_tercio
 141+ 97B1 67               ld h,a
 142+ 97B2 08           	ex af,af
 143+ 97B3 FE 02        	cp 2
 144+ 97B5 38 07        	jr c,1F
 145+ 97B7 28 05        	jr z,1F
 146+ 97B9 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97BC 18 03        	jr 2F
 148+ 97BE 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C1 08           2 ex af,af
 150+ 97C2 A7               and a
 151+ 97C3 ED 42            sbc hl,bc
 152+ 97C5 C9               ret
 153+ 97C6
 154+ 97C6              ; *********************************************************************************************************************************************************************************************
 155+ 97C6              ;
 156+ 97C6              ;   16/8/22
 157+ 97C6              ;
 158+ 97C6              ;	Comprueba_limite_vertical
 159+ 97C6              ;
 160+ 97C6              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97C6              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97C6              ;
 163+ 97C6
 164+ 97C6 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97C9 7D           	ld a,l
 166+ 97CA E6 1F        	and $1F
 167+ 97CC 57           	ld d,a
 168+ 97CD 3A 11 8C     	ld a,(Limite_vertical)
 169+ 97D0 BA           	cp d 											; Límite - Posición.
 170+ 97D1 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97D2 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97D5 CB 47        	bit 0,a
 173+ 97D7 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97D9
 175+ 97D9              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97D9
 177+ 97D9 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97DA 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97DC
 180+ 97DC              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97DC              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97DC
 183+ 97DC 3A EF 8B         ld a,(Coordenada_X)
 184+ 97DF 16 0F            ld d,Centro_izquierda
 185+ 97E1 A7               and a
 186+ 97E2 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97E3 28 1E            jr z,3F
 188+ 97E5 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97E7              ;                                                    ; _salimos sin modificar nada.
 190+ 97E7 18 0E            jr 2F
 191+ 97E9 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97EA 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97EC
 194+ 97EC              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97EC              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97EC
 197+ 97EC 3A EF 8B         ld a,(Coordenada_X)
 198+ 97EF 16 10            ld d,Centro_derecha
 199+ 97F1 A7               and a
 200+ 97F2 92               sub d
 201+ 97F3 28 0E            jr z,3F
 202+ 97F5 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97F7              ;                                                    ; _salimos sin modificar nada.
 204+ 97F7 CB 43        2 bit 0,e
 205+ 97F9 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97FB C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97FC CD 90 98         call Modificaccionne
 208+ 97FF C1           	pop bc
 209+ 9800 CD A0 98         call Inicializacion
 210+ 9803 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9804
 212+ 9804              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9804
 214+ 9804 C5           4 push bc
 215+ 9805 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9808 0A           	ld a,(bc)
 217+ 9809 3D           	dec a
 218+ 980A 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 980B 7D           	ld a,l
 220+ 980C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 980D CB 47        	bit 0,a
 222+ 980F 28 03        	jr z,5F
 223+ 9811 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9812 18 2E        	jr 7F
 225+ 9814
 226+ 9814              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9814
 228+ 9814 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9815 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9816 3A FB 8B     	ld a,(Ctrl_0)
 231+ 9819 CB 4F        	bit 1,a
 232+ 981B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 981D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 981E
 235+ 981E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 981E
 237+ 981E 1C               inc e
 238+ 981F 1D               dec e
 239+ 9820 20 07            jr nz,12F
 240+ 9822 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9823 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9824 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9827 18 44        13 jr 9F
 244+ 9829 CB 43        12 bit 0,e
 245+ 982B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 982D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 982D C1           	pop bc
 248+ 982E 18 D3        	jr 3B
 249+ 9830 80           14 add b
 250+ 9831 6F               ld l,a
 251+ 9832 22 FE 8B     	ld (Posicion_actual),hl
 252+ 9835 CD 90 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9838 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 983A E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 983C 32 FB 8B         ld (Ctrl_0),a
 256+ 983F F1           	pop af
 257+ 9840 18 2B        	jr 9F
 258+ 9842
 259+ 9842              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9842
 261+ 9842 F5           7 push af
 262+ 9843 3A FB 8B     	ld a,(Ctrl_0)
 263+ 9846 CB 47        	bit 0,a
 264+ 9848 20 1D        	jr nz,8F
 265+ 984A F1           	pop af
 266+ 984B
 267+ 984B              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 984B
 269+ 984B 1C           	inc e
 270+ 984C 1D               dec e
 271+ 984D 20 07            jr nz,10F
 272+ 984F 90           	sub b
 273+ 9850 6F               ld l,a
 274+ 9851 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9854 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9856              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9856 CB 43        10 bit 0,e
 278+ 9858 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 985A              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 985A C1           	pop bc
 281+ 985B 18 A6        	jr 3B
 282+ 985D 90           16 sub b
 283+ 985E 6F               ld l,a
 284+ 985F 22 FE 8B     	ld (Posicion_actual),hl
 285+ 9862 CD 90 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9865 18 06            jr 9F
 287+ 9867 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9869 32 FB 8B         ld (Ctrl_0),a
 289+ 986C F1           	pop af
 290+ 986D C1           9 pop bc
 291+ 986E 1E 00        	ld e,0
 292+ 9870 CD A0 98         call Inicializacion
 293+ 9873 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9874 08           	ex af,af
 295+ 9875 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9876 18 8B            jr 3B
 297+ 9878
 298+ 9878              ; --------------------
 299+ 9878
 300+ 9878 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 987A CD C3 99     1 call PreviousScan
 302+ 987D 10 FB            djnz 1B
 303+ 987F 22 FE 8B     	ld (Posicion_actual),hl
 304+ 9882 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9883 C9           	ret
 306+ 9884
 307+ 9884              ; --------------------
 308+ 9884
 309+ 9884 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9886 CD B4 99     1 call NextScan
 311+ 9889 10 FB            djnz 1B
 312+ 988B 22 FE 8B     	ld (Posicion_actual),hl
 313+ 988E AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 988F C9           	ret
 315+ 9890
 316+ 9890              ; --------------------
 317+ 9890              ;
 318+ 9890              ;	22/01/23
 319+ 9890              ;
 320+ 9890              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9890              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9890              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9890
 324+ 9890
 325+ 9890              Modificaccionne
 326+ 9890
 327+ 9890 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 9893 FE 02        	cp 2
 329+ 9895 CC 78 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9898 DC 78 98         call c,Modifica_Pos_actual
 331+ 989B C8           	ret z
 332+ 989C CD 84 98         call Modifica_Pos_actual2
 333+ 989F C9               ret
 334+ 98A0
 335+ 98A0              ; *************************************************************************************************************************************************************************************************
 336+ 98A0              ;
 337+ 98A0              ;	13/8/22
 338+ 98A0              ;
 339+ 98A0              ;	Inicializacion
 340+ 98A0              ;
 341+ 98A0              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A0              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A0              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A0              ;
 345+ 98A0              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A0              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A0              ;	_ desaparece/aparece.
 348+ 98A0
 349+ 98A0              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A0              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A0              ;
 352+ 98A0              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A0              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A0              ; 		   [E] ="0"
 355+ 98A0
 356+ 98A0              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A0
 358+ 98A0 CD 9C 94     Inicializacion call calcula_tercio
 359+ 98A3 28 36        	jr z,primit
 360+ 98A5 E6 02        	and 2
 361+ 98A7 20 07        	jr nz,segmit
 362+ 98A9 7D           	ld a,l
 363+ 98AA FE 7F        	cp $7f
 364+ 98AC 38 2D        	jr c,primit
 365+ 98AE 28 2B        	jr z,primit
 366+ 98B0 CD 16 99     segmit call column
 367+ 98B3 38 13        	jr c,tercuad
 368+ 98B5 3E 04        cuarcuad ld a,4
 369+ 98B7 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98BA 21 20 48     	ld hl,$4820
 371+ 98BD 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98C0 21 11 8C     	ld hl,Limite_vertical
 373+ 98C3 36 0D        	ld (hl),$0d
 374+ 98C5 08           	ex af,af
 375+ 98C6 18 3C        	jr 1F
 376+ 98C8              tercuad
 377+ 98C8 3E 03        	ld a,3
 378+ 98CA 32 0D 8C     	ld (Cuad_objeto),a
 379+ 98CD 21 20 48     	ld hl,$4820
 380+ 98D0 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 98D3 21 11 8C     	ld hl,Limite_vertical
 382+ 98D6 36 12        	ld (hl),$12
 383+ 98D8 08           	ex af,af
 384+ 98D9 18 29        	jr 1F
 385+ 98DB CD 16 99     primit call column
 386+ 98DE 38 13        	jr c, primcuad
 387+ 98E0              segcuad
 388+ 98E0 3E 02        	ld a,2
 389+ 98E2 32 0D 8C     	ld (Cuad_objeto),a
 390+ 98E5 21 C0 4F     	ld hl,$4fc0
 391+ 98E8 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 98EB 21 11 8C     	ld hl,Limite_vertical
 393+ 98EE 36 0D        	ld (hl),$0d
 394+ 98F0 08           	ex af,af
 395+ 98F1 18 11        	jr 1F
 396+ 98F3              primcuad
 397+ 98F3 3E 01        	ld a,1
 398+ 98F5 32 0D 8C     	ld (Cuad_objeto),a
 399+ 98F8 21 C0 4F     	ld hl,$4fc0
 400+ 98FB 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 98FE 21 11 8C     	ld hl,Limite_vertical
 402+ 9901 36 12        	ld (hl),$12
 403+ 9903 08           	ex af,af
 404+ 9904
 405+ 9904 C5           1 push bc
 406+ 9905 E5           	push hl
 407+ 9906 D5           	push de
 408+ 9907
 409+ 9907 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 990A CD BA 94     	call Genera_coordenadas
 411+ 990D
 412+ 990D D1           	pop de
 413+ 990E E1           	pop hl
 414+ 990F C1           	pop bc
 415+ 9910
 416+ 9910 21 FB 8B     	ld hl,Ctrl_0
 417+ 9913 CB EE        	set 5,(hl)
 418+ 9915 C9           	ret
 419+ 9916
 420+ 9916              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9916
 422+ 9916              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9916              ;
 424+ 9916              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9916
 426+ 9916 7D           column ld a,l
 427+ 9917 E6 1F        	and $1f
 428+ 9919 FE 10         	cp $10
 429+ 991B C9            	ret
 430+ 991C
 431+ 991C              ; --------------------------------------------------------------------------------------------------------------------
 432+ 991C              ;
 433+ 991C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 991C              ;
 435+ 991C              ; 14/12/22
 436+ 991C              ;
 437+ 991C              ;	Modifica: A y BC.
 438+ 991C
 439+ 991C 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 991F E6 01        	and 1
 441+ 9921 28 17        	jr z,1F
 442+ 9923
 443+ 9923              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9923
 445+ 9923 3A EF 8B     	ld a,(Coordenada_X)
 446+ 9926 47           	ld b,a
 447+ 9927 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9928 79           	ld a,c
 449+ 9929 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 992A 38 08        	jr c,2F
 451+ 992C 47           	ld b,a
 452+ 992D 79           	ld a,c
 453+ 992E 90           	sub b
 454+ 992F 32 0E 8C     	ld (Columnas),a
 455+ 9932 18 1B        	jr 4F
 456+ 9934 79           2 ld a,c
 457+ 9935 32 0E 8C     	ld (Columnas),a
 458+ 9938 18 15        	jr 4F
 459+ 993A
 460+ 993A              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 993A
 462+ 993A 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 993D 81           	add c
 464+ 993E 3D           	dec a
 465+ 993F D6 1F        	sub $1f
 466+ 9941 38 08        	jr c,3F
 467+ 9943 47           	ld b,a
 468+ 9944 79           	ld a,c
 469+ 9945 90           	sub b
 470+ 9946 32 0E 8C     	ld (Columnas),a
 471+ 9949 18 04        	jr 4F
 472+ 994B 79           3 ld a,c
 473+ 994C 32 0E 8C     	ld (Columnas),a
 474+ 994F D9           4 exx
 475+ 9950 4F           	ld c,a
 476+ 9951 D9           	exx
 477+ 9952 C9            ret
 478+ 9953
 479+ 9953              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9953              ;
 481+ 9953              ;   19/7/23
 482+ 9953              ;
 483+ 9953              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9953              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9953              ;
 486+ 9953              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9953              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9953              ;
 489+ 9953              ;	DESTRUYE: HL,B Y A.
 490+ 9953
 491+ 9953 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9956 FE 02        	cp 2
 493+ 9958 38 18        	jr c,1F
 494+ 995A 28 16        	jr z,1F
 495+ 995C E6 01        	and 1
 496+ 995E 28 0D        	jr z,3F
 497+ 9960
 498+ 9960              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9960
 500+ 9960 CD 9C 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9963
 502+ 9963 7D           9 ld a,l
 503+ 9964 E6 1F        	and $1f
 504+ 9966 28 2A        	jr z,7F
 505+ 9968 2B           	dec hl
 506+ 9969 10 F8        	djnz 9B
 507+ 996B 18 25        	jr 7F
 508+ 996D
 509+ 996D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 996D
 511+ 996D 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 9970 18 20        	jr 7F
 513+ 9972
 514+ 9972 28 14        1 jr z,2F
 515+ 9974
 516+ 9974              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9974
 518+ 9974 CD 9C 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9977
 520+ 9977 7D           4 ld a,l
 521+ 9978 E6 1F        	and $1f
 522+ 997A 28 03        	jr z,6F
 523+ 997C 2B           	dec hl
 524+ 997D 10 F8        	djnz 4B
 525+ 997F 06 0F        6 ld b,15
 526+ 9981 CD C3 99     5 call PreviousScan
 527+ 9984 10 FB        	djnz 5B
 528+ 9986 18 0A        	jr 7F
 529+ 9988
 530+ 9988              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9988
 532+ 9988 CD 9C 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 998B 06 0F        	ld b,15
 534+ 998D CD C3 99     8 call PreviousScan
 535+ 9990 10 FB        	djnz 8B
 536+ 9992
 537+ 9992 E5           7 push hl
 538+ 9993 DD E1        	pop ix
 539+ 9995
 540+ 9995 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 9998 E5           	push hl
 542+ 9999 FD E1        	pop iy
 543+ 999B
 544+ 999B C9           	ret
 545+ 999C
 546+ 999C              ; --------------------------------------------------------------------------------------------------------------------
 547+ 999C              ;
 548+ 999C              ;	2/1/23
 549+ 999C              ;
 550+ 999C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 999C              ;
 552+ 999C              ;	Tras esta rutina tenemos:
 553+ 999C              ;
 554+ 999C              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 999C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 999C              ;
 557+ 999C              ;	DESTRUYE!!!!! HL,B y A.
 558+ 999C
 559+ 999C 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 999F 3A 0E 8C     	ld a,(Columnas)
 561+ 99A2 3D           	dec a
 562+ 99A3 20 01        	jr nz,1F
 563+ 99A5 3C           	inc a
 564+ 99A6 47           1 ld b,a
 565+ 99A7 C9           	ret
 566+ 99A8
 567+ 99A8              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99A8              ;
 569+ 99A8              ;	Prepara_draw
 570+ 99A8              ;
 571+ 99A8              ;	Es una rutina de carga.
 572+ 99A8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99A8              ;
 574+ 99A8              ;	FUNCIONAMIENTO:
 575+ 99A8              ;
 576+ 99A8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99A8              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99A8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99A8              ;
 580+ 99A8              ;	DESTRUYE:
 581+ 99A8              ;
 582+ 99A8              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99A8
 584+ 99A8 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99AB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99AC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99AD 4E           	ld c,(hl)
 588+ 99AE 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99B1 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99B3 C9           	ret
 591+ 99B4
 592+ 99B4              ;----------------------------------------------------------------------------------------------------------------
 593+ 99B4              ;
 594+ 99B4              ;	5/08/22
 595+ 99B4              ;
 596+ 99B4              ;   NextScan.
 597+ 99B4              ;
 598+ 99B4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99B4              ;
 600+ 99B4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99B4              ;
 602+ 99B4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99B4              ;
 604+ 99B4              ;       DESTRUIDOS: AF y HL !!!
 605+ 99B4              ;
 606+ 99B4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99B4              ;
 608+ 99B4
 609+ 99B4 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99B5 7C               ld a,h
 611+ 99B6 E6 07            and 7
 612+ 99B8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99B9
 614+ 99B9 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99BA C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99BC 6F               ld l,a
 617+ 99BD D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99BE
 619+ 99BE 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99BF D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C1 67               ld h,a
 622+ 99C2 C9               ret
 623+ 99C3
 624+ 99C3              ;----------------------------------------------------------------------------------------------------------------
 625+ 99C3              ;
 626+ 99C3              ;	5/08/22
 627+ 99C3              ;
 628+ 99C3              ;   PreviousScan.
 629+ 99C3              ;
 630+ 99C3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99C3              ;
 632+ 99C3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99C3              ;
 634+ 99C3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99C3              ;
 636+ 99C3              ;       DESTRUIDOS: AF y HL !!!
 637+ 99C3              ;
 638+ 99C3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99C3              ;
 640+ 99C3
 641+ 99C3 7C           PreviousScan ld a,h
 642+ 99C4 25               dec h               ; Dec H.
 643+ 99C5 E6 07            and 7
 644+ 99C7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99C8
 646+ 99C8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99C9 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99CB 6F               ld l,a
 649+ 99CC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99CD
 651+ 99CD 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99CE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D0 67               ld h,a
 654+ 99D1 C9               ret
 655+ 99D2
 656+ 99D2
 657+ 99D2
 658+ 99D2
 659+ 99D2
 660+ 99D2
 661+ 99D2
 662+ 99D2
 663+ 99D2
 664+ 99D2
 665+ 99D2
 666+ 99D2
# file closed: Draw_XOR.asm
2065  99D2              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D2
   2+ 99D2              ; ******************************************************************************************************************************************************************************************
   3+ 99D2              ;
   4+ 99D2              ;   20/05/23
   5+ 99D2              ;
   6+ 99D2              ;	Recompone_posicion_inicio
   7+ 99D2              ;
   8+ 99D2              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99D2              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99D2              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99D2              ;	_ a una u otra rutina.
  12+ 99D2
  13+ 99D2              Recompone_posicion_inicio
  14+ 99D2
  15+ 99D2 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 99D5 7D           	ld a,l
  17+ 99D6 E6 1F        	and $1f
  18+ 99D8 28 16        	jr z,1F
  19+ 99DA
  20+ 99DA FE 1F        	cp $1f
  21+ 99DC 28 0D        	jr z,3F
  22+ 99DE
  23+ 99DE 21 FA 8B     	ld hl,Ctrl_2
  24+ 99E1 CB C6        	set 0,(hl)
  25+ 99E3 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 99E6 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 99E9 18 08        	jr 2F
  28+ 99EB
  29+ 99EB CD 99 9B     3 call Mov_left
  30+ 99EE 18 03        	jr 2F
  31+ 99F0
  32+ 99F0 CD 76 9A     1 call Mov_right
  33+ 99F3 21 80 F8     2 ld hl,Sprite_vacio
  34+ 99F6 22 00 8C     	ld (Puntero_objeto),hl
  35+ 99F9 C9           	ret
  36+ 99FA
  37+ 99FA              ; ******************************************************************************************************************************************************************************************
  38+ 99FA              ;
  39+ 99FA              ;   27/05/23
  40+ 99FA              ;
  41+ 99FA              ;	Mov_down
  42+ 99FA              ;
  43+ 99FA              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99FA              ;
  45+ 99FA              ;
  46+ 99FA              Mov_down
  47+ 99FA
  48+ 99FA CD 64 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99FD              ;																	; _ repone (Puntero_objeto).
  50+ 99FD 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A00 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A02              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A02              ; 																	; _ en el caso de que no lo haya.
  54+ 9A02 3A 16 8C     	ld a,(Vel_down)
  55+ 9A05 47           	ld b,a
  56+ 9A06 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A09 CD 9C 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A0C E6 02        	and 2
  59+ 9A0E 28 17        	jr z,1F
  60+ 9A10
  61+ 9A10              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A10              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A10
  64+ 9A10 7C           	ld a,h
  65+ 9A11 FE 57        	cp $57
  66+ 9A13 20 12        	jr nz,1F
  67+ 9A15
  68+ 9A15 7D           	ld a,l
  69+ 9A16 C6 20        	add $20
  70+ 9A18 30 0D        	jr nc,1F
  71+ 9A1A
  72+ 9A1A              ; ------------------------------
  73+ 9A1A              ;
  74+ 9A1A              ;	12/01/24
  75+ 9A1A
  76+ 9A1A              ;	call Reaparece_arriba
  77+ 9A1A CD 26 9D     	call Reinicio
  78+ 9A1D
  79+ 9A1D              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A1D
  81+ 9A1D 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A20 CB CF        	set 1,a
  83+ 9A22 32 65 8C     	ld (Ctrl_3),a
  84+ 9A25
  85+ 9A25 18 08        	jr 3F
  86+ 9A27              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A27              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A27              ; ------------------------------
  89+ 9A27
  90+ 9A27 CD B4 99     1 call NextScan
  91+ 9A2A 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A2D 10 DA            djnz 2B
  93+ 9A2F CD BA 94     3 call Genera_coordenadas
  94+ 9A32 C9           	ret
  95+ 9A33
  96+ 9A33              ; ******************************************************************************************************************************************************************************************
  97+ 9A33              ;
  98+ 9A33              ;   27/05/23
  99+ 9A33              ;
 100+ 9A33              ;	Mov_up
 101+ 9A33              ;
 102+ 9A33              ; 	Mueve el Sprite hacia arriba.
 103+ 9A33              ;
 104+ 9A33              ;
 105+ 9A33              Mov_up
 106+ 9A33
 107+ 9A33 CD 64 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A36              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A36 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A39 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A3B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A3B              ; 																		; _ en el caso de que no lo haya.
 113+ 9A3B 3A 15 8C     	ld a,(Vel_up)
 114+ 9A3E 47           	ld b,a
 115+ 9A3F 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A42 CD 9C 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A45 A7           	and a
 118+ 9A46 20 10        	jr nz,1F
 119+ 9A48
 120+ 9A48              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A48              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A48
 123+ 9A48 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A49 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A4B 20 0B            jr nz,1F
 126+ 9A4D 7D               ld a,l
 127+ 9A4E D6 20            sub $20
 128+ 9A50 30 06            jr nc,1F
 129+ 9A52 25               dec h
 130+ 9A53
 131+ 9A53              ; -----------------------------
 132+ 9A53 CD 07 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A56              ;	call Reinicio
 134+ 9A56              ; -----------------------------
 135+ 9A56
 136+ 9A56 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A58 CD C3 99     1 call PreviousScan
 138+ 9A5B 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A5E 10 E2            djnz 3B
 140+ 9A60 CD BA 94     2 call Genera_coordenadas
 141+ 9A63 C9           	ret
 142+ 9A64
 143+ 9A64              ; -----------------------------
 144+ 9A64              ;
 145+ 9A64              ;	27/5/23
 146+ 9A64              ;
 147+ 9A64              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A64              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A64              ;
 150+ 9A64              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A64              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A64              ;
 153+ 9A64              ;	Modifica: A y (Puntero_objeto).
 154+ 9A64
 155+ 9A64 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A67 CB 47        	bit 0,a
 157+ 9A69 C8           	ret z
 158+ 9A6A CB 87        	res 0,a
 159+ 9A6C 32 FA 8B     	ld (Ctrl_2),a
 160+ 9A6F 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A72 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9A75 C9           	ret
 163+ 9A76
 164+ 9A76              ; ******************************************************************************************************************************************************************************************
 165+ 9A76              ;
 166+ 9A76              ;	19/10/22
 167+ 9A76              ;
 168+ 9A76              ;	Mov_right.
 169+ 9A76              ;
 170+ 9A76              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A76              ;
 172+ 9A76
 173+ 9A76 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A79 CB 77        	bit 6,a
 175+ 9A7B 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A7D
 177+ 9A7D CD B5 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A80 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A81
 180+ 9A81 21 FB 8B     	ld hl,Ctrl_0
 181+ 9A84 CB E6        	set 4,(hl)
 182+ 9A86 18 52        	jr 8F
 183+ 9A88
 184+ 9A88 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9A8B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A8D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A8D              ; 																	; _ en el caso de que no lo haya.
 188+ 9A8D 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A90 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A92 20 46        	jr nz,8F
 191+ 9A94
 192+ 9A94 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A97 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A98 28 40        	jr z,8F
 195+ 9A9A
 196+ 9A9A              ; ---------- ---------- ----------
 197+ 9A9A              ;
 198+ 9A9A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A9A
 200+ 9A9A 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A9D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A9F 28 11        	jr z,1F
 203+ 9AA1 38 06        	jr c,6F
 204+ 9AA3 FE 04        	cp 4
 205+ 9AA5 28 14        	jr z,7F
 206+ 9AA7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AA9
 208+ 9AA9              ; ---------- ---------- ----------
 209+ 9AA9              ;
 210+ 9AA9              ; Perfiles de velocidad
 211+ 9AA9              ;
 212+ 9AA9
 213+ 9AA9 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AAC FE FE        	cp $fe
 215+ 9AAE 20 2A        	jr nz,8F
 216+ 9AB0 18 10        	jr 3F
 217+ 9AB2 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AB5 FE FD        	cp $fd
 219+ 9AB7 20 21        	jr nz,8F
 220+ 9AB9 18 07        	jr 3F
 221+ 9ABB 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ABE FE FB        	cp $fb
 223+ 9AC0 20 18        	jr nz,8F
 224+ 9AC2
 225+ 9AC2              ; ---------- ---------- ----------
 226+ 9AC2
 227+ 9AC2              3
 228+ 9AC2 CD F5 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AC5              ;	call Reinicio
 230+ 9AC5
 231+ 9AC5              ; ---------- ---------- ----------
 232+ 9AC5              ;
 233+ 9AC5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AC5
 235+ 9AC5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AC7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AC8 CD E1 9A     	call DESPLZ_DER
 238+ 9ACB C1           	pop bc
 239+ 9ACC 10 F9        	djnz 5B
 240+ 9ACE 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AD2 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9AD5 CD BA 94     	call Genera_coordenadas
 244+ 9AD8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9ADA
 246+ 9ADA              ; ---------- ---------- ----------
 247+ 9ADA
 248+ 9ADA 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9ADD CD E1 9A     	call DESPLZ_DER
 250+ 9AE0 C9           2 ret
 251+ 9AE1
 252+ 9AE1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE1              ;
 254+ 9AE1              ;	22/9/22
 255+ 9AE1              ;
 256+ 9AE1
 257+ 9AE1 CD F0 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AE4 CD 3C 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AE7 CD 65 9B         call Ciclo_completo
 260+ 9AEA 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AED CB FE        	set 7,(hl)
 262+ 9AEF C9           	ret
 263+ 9AF0
 264+ 9AF0              ; ******************************************************************************************************************************************************************************************
 265+ 9AF0              ;	15/02/23
 266+ 9AF0              ;
 267+ 9AF0
 268+ 9AF0 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9AF3 47           	ld b,a
 270+ 9AF4 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AF7 23           1 inc hl
 272+ 9AF8 23           	inc hl
 273+ 9AF9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AFB 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AFE CD F2 90     	call Extrae_address
 276+ 9B01 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B04
 278+ 9B04              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B04
 280+ 9B04              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B04              ; Cuántos movimientos hemos hecho ??
 282+ 9B04              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B04
 284+ 9B04 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B07 EB           	ex de,hl
 286+ 9B08 A7           	and a
 287+ 9B09 ED 52        	sbc hl,de
 288+ 9B0B CB 3D        	srl l
 289+ 9B0D 3E 08        6 ld a,8
 290+ 9B0F 95           	sub l
 291+ 9B10 30 1E        	jr nc,3F
 292+ 9B12
 293+ 9B12              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B12              ; B="0".
 295+ 9B12
 296+ 9B12 04           4 inc b
 297+ 9B13 3C           	inc a
 298+ 9B14 20 FC        	jr nz,4B
 299+ 9B16 78           	ld a,b
 300+ 9B17 08           	ex af,af
 301+ 9B18 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B1B 23           5 inc hl
 303+ 9B1C 23           	inc hl
 304+ 9B1D 10 FC        	djnz 5B
 305+ 9B1F 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B22 CD F2 90     	call Extrae_address
 307+ 9B25 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B28
 309+ 9B28              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B28              ; _(Posicion_actual).
 311+ 9B28
 312+ 9B28 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B2B 34           	inc (hl)
 314+ 9B2C 08               ex af,af
 315+ 9B2D 6F           	ld l,a
 316+ 9B2E 18 DD        	jr 6B
 317+ 9B30
 318+ 9B30              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B30
 320+ 9B30 47           3 ld b,a
 321+ 9B31 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B34 23           2 inc hl
 323+ 9B35 23           	inc hl
 324+ 9B36 10 FC        	djnz 2B
 325+ 9B38 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B3B C9           8 ret
 327+ 9B3C
 328+ 9B3C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B3C              ;
 330+ 9B3C              ;	24/7/22
 331+ 9B3C              ;
 332+ 9B3C              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B3C              ;
 334+ 9B3C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B3C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B3C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B3C
 338+ 9B3C 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B3F A7           	and a
 340+ 9B40 20 1F        	jr nz,1F
 341+ 9B42 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B44 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B47
 344+ 9B47 21 FD 8B     	ld hl,Columns
 345+ 9B4A 34           	inc (hl)
 346+ 9B4B 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B4E E6 01        	and 1
 348+ 9B50 28 0F        	jr z,1F
 349+ 9B52 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B55 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B56 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B59 CD BA 94     	call Genera_coordenadas
 353+ 9B5C CD C1 9C     	call Inc_CTRL_DESPLZ
 354+ 9B5F 18 03        	jr 2F
 355+ 9B61 CD C1 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B64 C9           2 ret
 357+ 9B65
 358+ 9B65              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B65              ;
 360+ 9B65              ;	24/7/22
 361+ 9B65              ;
 362+ 9B65              ;	Ciclo_completo.
 363+ 9B65              ;
 364+ 9B65              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B65              ;
 366+ 9B65              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B65              ; 	Decrementamos (Columns).
 368+ 9B65              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B65              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B65
 371+ 9B65
 372+ 9B65 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B68 FE FF        	cp $ff
 374+ 9B6A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B6C E6 F0        	and $f0
 376+ 9B6E 20 28        	jr nz,3F
 377+ 9B70
 378+ 9B70              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B70
 380+ 9B70 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B73 47           	ld b,a
 382+ 9B74 3E F8        	ld a,$f8
 383+ 9B76 80           	add b
 384+ 9B77 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9B7A 18 1C        	jr 3F
 386+ 9B7C 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B7F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B80 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B81 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9B84 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B87 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B89 20 0A        	jr nz,2F
 393+ 9B8B 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B8E 23           	inc hl
 395+ 9B8F 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9B92 CD BA 94     	call Genera_coordenadas
 397+ 9B95
 398+ 9B95              ; Inicia el puntero de Sprite.
 399+ 9B95
 400+ 9B95 CD 07 91     2 call Inicia_puntero_objeto_der
 401+ 9B98 C9           3 ret
 402+ 9B99
 403+ 9B99              ; ******************************************************************************************************************************************************************************************
 404+ 9B99              ;
 405+ 9B99              ;	15/02/23
 406+ 9B99              ;
 407+ 9B99              ;	Mov_left.
 408+ 9B99              ;
 409+ 9B99              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B99              ;
 411+ 9B99              Mov_left
 412+ 9B99
 413+ 9B99 21 FB 8B     	ld hl,Ctrl_0
 414+ 9B9C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B9E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B9E              ; 																	; _ en el caso de que no lo haya.
 417+ 9B9E 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BA1 CB 77        	bit 6,a
 419+ 9BA3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BA5
 421+ 9BA5 CD BB 9C     	call Stop_Amadeus_left
 422+ 9BA8 C8           	ret z
 423+ 9BA9 20 4A        	jr nz,8F
 424+ 9BAB
 425+ 9BAB 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BAE A7           	and a
 427+ 9BAF 20 44        	jr nz,8F
 428+ 9BB1
 429+ 9BB1 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BB4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BB5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BB7
 433+ 9BB7              ; ---------- ---------- ----------
 434+ 9BB7
 435+ 9BB7 3A 13 8C     	ld a,(Vel_left)
 436+ 9BBA FE 02        	cp 2
 437+ 9BBC 28 0F        	jr z,1F
 438+ 9BBE 38 04        	jr c,6F
 439+ 9BC0 FE 04        	cp 4
 440+ 9BC2 28 12        	jr z,7F
 441+ 9BC4
 442+ 9BC4              ; ---------- ---------- ----------
 443+ 9BC4
 444+ 9BC4 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BC7 FE F8        	cp $f8
 446+ 9BC9 20 2A        	jr nz,8F
 447+ 9BCB 18 10        	jr 4F
 448+ 9BCD 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BD0 FE F9        	cp $f9
 450+ 9BD2 20 21        	jr nz,8F
 451+ 9BD4 18 07        	jr 4F
 452+ 9BD6 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BD9 FE FB        	cp $fb
 454+ 9BDB 20 18        	jr nz,8F
 455+ 9BDD
 456+ 9BDD              ; ---------- ---------- ----------
 457+ 9BDD
 458+ 9BDD              4
 459+ 9BDD CD E3 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE0              ;	call Reinicio
 461+ 9BE0
 462+ 9BE0              ; ---------- ---------- ----------
 463+ 9BE0
 464+ 9BE0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BE2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BE3
 467+ 9BE3              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BE3              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BE3
 470+ 9BE3 CD FC 9B     	call DESPLZ_IZQ
 471+ 9BE6 C1           	pop bc
 472+ 9BE7 10 F9        	djnz 5B
 473+ 9BE9 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BEC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BED 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9BF0 CD BA 94     	call Genera_coordenadas
 477+ 9BF3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BF5
 479+ 9BF5              ; ---------- ---------- ----------
 480+ 9BF5
 481+ 9BF5              ; Movemos, no hay recolocación.
 482+ 9BF5
 483+ 9BF5 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9BF8 CD FC 9B     	call DESPLZ_IZQ
 485+ 9BFB C9           2 ret
 486+ 9BFC
 487+ 9BFC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BFC              ;
 489+ 9BFC              ;	22/9/22
 490+ 9BFC
 491+ 9BFC              DESPLZ_IZQ
 492+ 9BFC
 493+ 9BFC CD 0B 9C     	call Desplaza_izquierda
 494+ 9BFF CD 57 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C02 CD 7F 9C     	call Ciclo_completo_2
 496+ 9C05 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C08 CB BE        	res 7,(hl)
 498+ 9C0A C9           	ret
 499+ 9C0B
 500+ 9C0B              Desplaza_izquierda
 501+ 9C0B
 502+ 9C0B 3A 13 8C     	ld a,(Vel_left)
 503+ 9C0E 47           	ld b,a
 504+ 9C0F 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C12 23           1 inc hl
 506+ 9C13 23           	inc hl
 507+ 9C14 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C16 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C19 CD F2 90     	call Extrae_address
 510+ 9C1C 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C1F
 512+ 9C1F              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C1F
 514+ 9C1F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C1F              ; Cuántos movimientos hemos hecho ??
 516+ 9C1F              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C1F
 518+ 9C1F 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C22 EB           	ex de,hl
 520+ 9C23 A7           	and a
 521+ 9C24 ED 52        	sbc hl,de
 522+ 9C26 CB 3D        	srl l
 523+ 9C28 3E 08        6 ld a,8
 524+ 9C2A 95           	sub l
 525+ 9C2B 30 1E        	jr nc,3F
 526+ 9C2D
 527+ 9C2D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C2D              ; B="0".
 529+ 9C2D
 530+ 9C2D 04           4 inc b
 531+ 9C2E 3C           	inc a
 532+ 9C2F 20 FC        	jr nz,4B
 533+ 9C31 78           	ld a,b
 534+ 9C32 08           	ex af,af
 535+ 9C33 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C36 23           5 inc hl
 537+ 9C37 23           	inc hl
 538+ 9C38 10 FC        	djnz 5B
 539+ 9C3A 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C3D CD F2 90     	call Extrae_address
 541+ 9C40 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C43
 543+ 9C43              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C43              ; _(Posicion_actual).
 545+ 9C43
 546+ 9C43 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C46 35           	dec (hl)
 548+ 9C47 08           	ex af,af
 549+ 9C48 6F           	ld l,a
 550+ 9C49 18 DD        	jr 6B
 551+ 9C4B
 552+ 9C4B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C4B
 554+ 9C4B 47           3 ld b,a
 555+ 9C4C 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C4F 23           2 inc hl
 557+ 9C50 23           	inc hl
 558+ 9C51 10 FC        	djnz 2B
 559+ 9C53 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C56 C9           8 ret
 561+ 9C57
 562+ 9C57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C57              ;
 564+ 9C57              ;	modifica_parametros_1er_DESPLZ
 565+ 9C57              ;
 566+ 9C57              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C57              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C57              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C57
 570+ 9C57 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C5A A7           	and a
 572+ 9C5B 20 1E        	jr nz,1F
 573+ 9C5D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C5E 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C61 21 FD 8B     	ld hl,Columns
 576+ 9C64 34           	inc (hl)
 577+ 9C65 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9C68 E6 01        	and 1
 579+ 9C6A 20 0F        	jr nz,1F
 580+ 9C6C 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C6F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C70 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9C73 CD BA 94     	call Genera_coordenadas
 584+ 9C76 CD D2 9C     	call Dec_CTRL_DESPLZ
 585+ 9C79 18 03        	jr 2F
 586+ 9C7B CD D2 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C7E C9           2 ret
 588+ 9C7F
 589+ 9C7F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C7F
 591+ 9C7F 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C82 FE F7        	cp $f7
 593+ 9C84 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C86 30 2C        	jr nc,3F
 595+ 9C88
 596+ 9C88              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C88
 598+ 9C88 06 00        	ld b,0
 599+ 9C8A 04           4 inc b
 600+ 9C8B 3C           	inc a
 601+ 9C8C FE F7        	cp $f7
 602+ 9C8E 20 FA        	jr nz,4B
 603+ 9C90 3E FF        	ld a,$ff
 604+ 9C92 90           	sub b
 605+ 9C93 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9C96 18 1C        	jr 3F
 607+ 9C98
 608+ 9C98              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C98
 610+ 9C98 21 FD 8B     1 ld hl,Columns
 611+ 9C9B 35           	dec (hl)
 612+ 9C9C AF           	xor a
 613+ 9C9D 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CA0 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CA3 E6 01        	and 1
 616+ 9CA5 28 0A        	jr z,2F
 617+ 9CA7 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CAA 2B           	dec hl
 619+ 9CAB 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CAE CD BA 94     	call Genera_coordenadas
 621+ 9CB1
 622+ 9CB1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB1
 624+ 9CB1 CD 1A 91     2 call Inicia_puntero_objeto_izq
 625+ 9CB4 C9           3 ret
 626+ 9CB5
 627+ 9CB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CB5              ;
 629+ 9CB5              ;	19/10/22
 630+ 9CB5              ;
 631+ 9CB5              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CB5              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CB5
 634+ 9CB5 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CB8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CBA C9           	ret
 637+ 9CBB
 638+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CBB              ;
 640+ 9CBB              ;	19/10/22
 641+ 9CBB              ;
 642+ 9CBB              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CBB              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CBB
 645+ 9CBB 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CBE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC0 C9           	ret
 648+ 9CC1
 649+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC1              ;
 651+ 9CC1              ;	24/7/22
 652+ 9CC1              ;
 653+ 9CC1              ;	Inc_CTRL_DESPLZ
 654+ 9CC1              ;
 655+ 9CC1              ;
 656+ 9CC1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC1
 658+ 9CC1 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CC4 3A 14 8C     	ld a,(Vel_right)
 660+ 9CC7 A7           	and a
 661+ 9CC8 28 06        	jr z,1F
 662+ 9CCA 47           	ld b,a
 663+ 9CCB 34           3 inc (hl)
 664+ 9CCC 10 FD        	djnz 3B
 665+ 9CCE 18 01        	jr 2F
 666+ 9CD0 34           1 inc (hl)
 667+ 9CD1 C9           2 ret
 668+ 9CD2
 669+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CD2              ;
 671+ 9CD2              ;	5/2/23
 672+ 9CD2              ;
 673+ 9CD2              ;	Dec_CTRL_DESPLZ
 674+ 9CD2              ;
 675+ 9CD2              ;
 676+ 9CD2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CD2
 678+ 9CD2 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CD5 3A 13 8C     	ld a,(Vel_left)
 680+ 9CD8 A7           	and a
 681+ 9CD9 28 06        	jr z,1F
 682+ 9CDB 47           	ld b,a
 683+ 9CDC 35           3 dec (hl)
 684+ 9CDD 10 FD        	djnz 3B
 685+ 9CDF 18 01        	jr 2F
 686+ 9CE1 35           1 dec (hl)
 687+ 9CE2 C9           2 ret
 688+ 9CE3
 689+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CE3
 691+ 9CE3 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CE6 01 1F 00     	ld bc,31
 693+ 9CE9 A7           	and a
 694+ 9CEA ED 4A        	adc hl,bc
 695+ 9CEC 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9CEF 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CF2 CB C6        	set 0,(hl)
 698+ 9CF4 C9           	ret
 699+ 9CF5
 700+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CF5
 702+ 9CF5 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CF8 01 1F 00     	ld bc,31
 704+ 9CFB A7           	and a
 705+ 9CFC ED 42        	sbc hl,bc
 706+ 9CFE 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D01 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D04 CB CE        	set 1,(hl)
 709+ 9D06 C9           	ret
 710+ 9D07
 711+ 9D07              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D07
 713+ 9D07 24           Reaparece_abajo inc h
 714+ 9D08 01 E0 17     	ld bc,$17e0
 715+ 9D0B A7           	and a
 716+ 9D0C ED 4A        	adc hl,bc
 717+ 9D0E 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D11 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D14 CB D6        	set 2,(hl)
 720+ 9D16 C9           	ret
 721+ 9D17
 722+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D17
 724+ 9D17 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D1A A7           	and a
 726+ 9D1B ED 42        	sbc hl,bc
 727+ 9D1D 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D20 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D23 CB DE        	set 3,(hl)
 730+ 9D25 C9           	ret
 731+ 9D26
 732+ 9D26              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D26              ;
 734+ 9D26              ;	15/07/23
 735+ 9D26
 736+ 9D26              Reinicio
 737+ 9D26
 738+ 9D26              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D26
 740+ 9D26 AF           	xor a
 741+ 9D27 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D2A CD 48 9D     	call Limpia_contenido_hl
 743+ 9D2D
 744+ 9D2D 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D30 CD 48 9D     	call Limpia_contenido_hl
 746+ 9D33
 747+ 9D33 CD 27 93     	call Situa_Puntero_indice_mov
 748+ 9D36 CD 47 9E     	call Inicia_Puntero_mov
 749+ 9D39
 750+ 9D39 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D3C 06 05        	ld b,5
 752+ 9D3E 77           1 ld (hl),a
 753+ 9D3F 23           	inc hl
 754+ 9D40 10 FC        	djnz 1B
 755+ 9D42
 756+ 9D42 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D45 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D47
 759+ 9D47 C9           	ret
 760+ 9D48
 761+ 9D48 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D49 23           	inc hl
 763+ 9D4A 77           	ld (hl),a
 764+ 9D4B C9           	ret
 765+ 9D4C
 766+ 9D4C              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D4C              ;
 768+ 9D4C              ;	18/6/24
 769+ 9D4C              ;
 770+ 9D4C
 771+ 9D4C              Amadeus_a_izquierda
 772+ 9D4C
 773+ 9D4C              ;	Actualiza contador de movimientos.
 774+ 9D4C
 775+ 9D4C 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D4F 35           	dec (hl)
 777+ 9D50 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D52
 779+ 9D52 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D55 2B           	dec hl
 781+ 9D56 2B           	dec hl
 782+ 9D57 2B           	dec hl
 783+ 9D58 2B           	dec hl
 784+ 9D59 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D5C
 786+ 9D5C 21 65 8C     	ld hl,Ctrl_3
 787+ 9D5F CB EE        	set 5,(hl)
 788+ 9D61
 789+ 9D61 C9           	ret
 790+ 9D62
 791+ 9D62 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D63 C9           	ret
 793+ 9D64
 794+ 9D64
 795+ 9D64              Amadeus_a_derecha
 796+ 9D64
 797+ 9D64              ;	Actualiza contador de movimientos.
 798+ 9D64
 799+ 9D64 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9D67 34           	inc (hl)
 801+ 9D68 3E 7A        	ld a,$7a
 802+ 9D6A BE           	cp (hl)
 803+ 9D6B 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D6D
 805+ 9D6D 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D70 23           	inc hl
 807+ 9D71 23           	inc hl
 808+ 9D72 23           	inc hl
 809+ 9D73 23           	inc hl
 810+ 9D74 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D77
 812+ 9D77 21 65 8C     	ld hl,Ctrl_3
 813+ 9D7A CB EE        	set 5,(hl)
 814+ 9D7C C9           	ret
 815+ 9D7D
 816+ 9D7D 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D7E C9           	ret
# file closed: Direcciones.asm
2066  9D7F              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D7F              ; ----- ----- ----- ----- -----
   2+ 9D7F              ;
   3+ 9D7F              ;   28/12/23
   4+ 9D7F
   5+ 9D7F              Movimiento
   6+ 9D7F
   7+ 9D7F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D7F
   9+ 9D7F 3A FA 8B         ld a,(Ctrl_2)
  10+ 9D82 CB 57            bit 2,a
  11+ 9D84 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D86
  13+ 9D86 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9D89 7E               ld a,(hl)
  15+ 9D8A
  16+ 9D8A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D8A
  18+ 9D8A              Inicia_desplazamiento.
  19+ 9D8A
  20+ 9D8A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D8A
  22+ 9D8A CD 7D 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D8D
  24+ 9D8D              ; Iniciamos (Repetimos_mov).
  25+ 9D8D
  26+ 9D8D 7E               ld a,(hl)
  27+ 9D8E E6 0F            and $0f
  28+ 9D90 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9D93 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9D96
  31+ 9D96              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D96
  33+ 9D96 23               inc hl
  34+ 9D97 7E               ld a,(hl)
  35+ 9D98 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9D9B 2B               dec hl
  37+ 9D9C
  38+ 9D9C 21 FA 8B         ld hl,Ctrl_2
  39+ 9D9F CB D6            set 2,(hl)
  40+ 9DA1
  41+ 9DA1              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA1              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA1
  44+ 9DA1              Desplazamiento_iniciado
  45+ 9DA1
  46+ 9DA1 CD 51 9E         call Aplica_desplazamiento
  47+ 9DA4
  48+ 9DA4              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DA4
  50+ 9DA4 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DA7 CB 4F            bit 1,a
  52+ 9DA9 C0               ret nz
  53+ 9DAA
  54+ 9DAA 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DAD 35               dec (hl)
  56+ 9DAE C0               ret nz
  57+ 9DAF
  58+ 9DAF              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DAF              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DAF              ; Analiza (Cola_de_desplazamiento).
  61+ 9DAF
  62+ 9DAF 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DB2 A7               and a
  64+ 9DB3 CC A6 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DB6 28 30            jr z,Reinicia_el_movimiento
  66+ 9DB8
  67+ 9DB8 FE FF            cp $ff
  68+ 9DBA 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DBC
  70+ 9DBC FE FE            cp $fe
  71+ 9DBE CC 2B 9E         call z,Fijamos_bucle
  72+ 9DC1 28 25            jr z,Reinicia_el_movimiento
  73+ 9DC3
  74+ 9DC3 FE FD            cp $fd
  75+ 9DC5 20 11            jr nz,1F
  76+ 9DC7
  77+ 9DC7              ; ---
  78+ 9DC7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DC7
  80+ 9DC7 3A FA 8B         ld a,(Ctrl_2)
  81+ 9DCA CB 5F            bit 3,a
  82+ 9DCC 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DCE
  84+ 9DCE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DCE
  86+ 9DCE 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD1 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DD3
  89+ 9DD3 CD 3C 9E         call Inicia_Repetimos_movimiento
  90+ 9DD6 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DD8              ; ---
  92+ 9DD8
  93+ 9DD8 FE 01        1 cp 1
  94+ 9DDA CA 15 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DDD
  96+ 9DDD 3D               dec a
  97+ 9DDE 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9DE1
  99+ 9DE1 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DE4 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DE7              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DE7 C9               ret
 103+ 9DE8
 104+ 9DE8              Reinicia_el_movimiento
 105+ 9DE8
 106+ 9DE8 3A FA 8B         ld a,(Ctrl_2)
 107+ 9DEB CB 5F            bit 3,a
 108+ 9DED 28 1B            jr z,2F
 109+ 9DEF
 110+ 9DEF              ; (Cola_de_desplazamiento)="254".
 111+ 9DEF
 112+ 9DEF 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DF2 35               dec (hl)
 114+ 9DF3 20 15            jr nz,2F
 115+ 9DF5
 116+ 9DF5              ; Fin de las repeticiones del último movimiento.
 117+ 9DF5
 118+ 9DF5 21 FA 8B         ld hl,Ctrl_2
 119+ 9DF8 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DFA
 121+ 9DFA 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9DFD 23               inc hl
 123+ 9DFE 23               inc hl
 124+ 9DFF 23               inc hl
 125+ 9E00 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E03              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E03 7E               ld a,(hl)
 128+ 9E04 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E07
 130+ 9E07 C3 AF 9D         jp Cola
 131+ 9E0A
 132+ 9E0A CD 47 9E     2 call Inicia_Puntero_mov
 133+ 9E0D
 134+ 9E0D 21 FA 8B         ld hl,Ctrl_2
 135+ 9E10 CB 96            res 2,(hl)
 136+ 9E12
 137+ 9E12 C3 7F 9D         jp Movimiento
 138+ 9E15
 139+ 9E15              Siguiente_desplazamiento
 140+ 9E15
 141+ 9E15              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E15              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E15
 144+ 9E15 21 FA 8B         ld hl,Ctrl_2
 145+ 9E18 CB 96            res 2,(hl)
 146+ 9E1A
 147+ 9E1A 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E1D 23               inc hl
 149+ 9E1E 23               inc hl
 150+ 9E1F 22 21 8C         ld (Puntero_mov),hl
 151+ 9E22
 152+ 9E22 7E               ld a,(hl)
 153+ 9E23 A7               and a
 154+ 9E24 CC A6 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E27 CA E8 9D         jp z,Reinicia_el_movimiento
 156+ 9E2A
 157+ 9E2A C9               ret
 158+ 9E2B
 159+ 9E2B              ; Subrutinas -----------------------------------------
 160+ 9E2B              ; ---------- --------- --------- ---------- ----------
 161+ 9E2B              ;
 162+ 9E2B              ;   24/07/23
 163+ 9E2B              ;
 164+ 9E2B              ;   Fijamos_bucle
 165+ 9E2B              ;
 166+ 9E2B              ;
 167+ 9E2B
 168+ 9E2B              Fijamos_bucle
 169+ 9E2B
 170+ 9E2B 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E2E 3C               inc a
 172+ 9E2F 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E32
 174+ 9E32 CD A6 9E         call Incrementa_Puntero_indice_mov
 175+ 9E35 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E38 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E3B C9               ret
 178+ 9E3C
 179+ 9E3C              ; ---------- --------- --------- ---------- ----------
 180+ 9E3C              ;
 181+ 9E3C              ;   07/7/23
 182+ 9E3C              ;
 183+ 9E3C              ;   Inicia_Repetimos_movimiento
 184+ 9E3C              ;
 185+ 9E3C              ;
 186+ 9E3C
 187+ 9E3C              Inicia_Repetimos_movimiento
 188+ 9E3C
 189+ 9E3C              ; Iniciamos (Repetimos_movimiento).
 190+ 9E3C
 191+ 9E3C DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E40 DD 7E 02         ld a,(ix+2)
 193+ 9E43 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E46
 195+ 9E46 C9               ret
 196+ 9E47
 197+ 9E47              ; ---------- --------- --------- ---------- ----------
 198+ 9E47              ;
 199+ 9E47              ;   26/6/23
 200+ 9E47              ;
 201+ 9E47              ;   Inicia_Puntero_mov
 202+ 9E47              ;
 203+ 9E47              ;
 204+ 9E47
 205+ 9E47 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E4A CD F2 90         call Extrae_address
 207+ 9E4D 22 21 8C         ld (Puntero_mov),hl
 208+ 9E50 C9               ret
 209+ 9E51
 210+ 9E51              ; ---------- --------- --------- ---------- ----------
 211+ 9E51              ;
 212+ 9E51              ;   27/06/23
 213+ 9E51              ;
 214+ 9E51              ;   Aplica_movimiento.
 215+ 9E51
 216+ 9E51              Aplica_desplazamiento
 217+ 9E51
 218+ 9E51              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E51
 220+ 9E51 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E54
 222+ 9E54 7E               ld a,(hl)
 223+ 9E55 E6 F0            and $f0
 224+ 9E57 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E58
 226+ 9E58 CB 7E            bit 7,(hl)
 227+ 9E5A 28 03            jr z,1F
 228+ 9E5C CD 33 9A         call Mov_up
 229+ 9E5F 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9E62 CB 76            bit 6,(hl)
 231+ 9E64 28 03            jr z,2F
 232+ 9E66 CD FA 99         call Mov_down
 233+ 9E69
 234+ 9E69              ; Se ha aplicado reinicio ???
 235+ 9E69              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E69
 237+ 9E69              ;    ld a,(Ctrl_3)
 238+ 9E69              ;    bit 1,a
 239+ 9E69              ;    ret nz
 240+ 9E69
 241+ 9E69 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9E6C CB 6E            bit 5,(hl)
 243+ 9E6E 28 03            jr z,3F
 244+ 9E70 CD 99 9B         call Mov_left
 245+ 9E73 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9E76 CB 66            bit 4,(hl)
 247+ 9E78 C8               ret z
 248+ 9E79 CD 76 9A         call Mov_right
 249+ 9E7C C9               ret
 250+ 9E7D
 251+ 9E7D              ; ---------- --------- --------- ---------- ----------
 252+ 9E7D              ;
 253+ 9E7D              ;   26/06/23
 254+ 9E7D              ;
 255+ 9E7D              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E7D
 257+ 9E7D              Ajusta_velocidad_desplazamiento
 258+ 9E7D
 259+ 9E7D              ; 1er byte de la cadena de movimiento.
 260+ 9E7D              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E7D
 262+ 9E7D CD 9B 9E         call Extrae_nibble_alto
 263+ 9E80
 264+ 9E80 32 15 8C         ld (Vel_up),a
 265+ 9E83 79               ld a,c
 266+ 9E84 E6 0F            and $0f
 267+ 9E86 32 16 8C         ld (Vel_down),a
 268+ 9E89
 269+ 9E89              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E89              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E89
 272+ 9E89 23               inc hl
 273+ 9E8A CD 9B 9E         call Extrae_nibble_alto
 274+ 9E8D
 275+ 9E8D 32 13 8C         ld (Vel_left),a
 276+ 9E90 79               ld a,c
 277+ 9E91 E6 0F            and $0f
 278+ 9E93 32 14 8C         ld (Vel_right),a
 279+ 9E96
 280+ 9E96              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E96
 282+ 9E96 23               inc hl
 283+ 9E97 22 21 8C         ld (Puntero_mov),hl
 284+ 9E9A C9               ret
 285+ 9E9B
 286+ 9E9B 06 04        Extrae_nibble_alto ld b,4
 287+ 9E9D 7E               ld a,(hl)
 288+ 9E9E 4F               ld c,a
 289+ 9E9F E6 F0            and $f0
 290+ 9EA1 CB 3F        1 srl a
 291+ 9EA3 10 FC            djnz 1B
 292+ 9EA5 C9               ret
 293+ 9EA6
 294+ 9EA6              ; ---------- --------- --------- ---------- ----------
 295+ 9EA6              ;
 296+ 9EA6              ;   5/7/23
 297+ 9EA6              ;
 298+ 9EA6              ;   Incrementa_Puntero_indice_mov
 299+ 9EA6
 300+ 9EA6              Incrementa_Puntero_indice_mov
 301+ 9EA6
 302+ 9EA6 21 25 8C         ld hl,Incrementa_puntero
 303+ 9EA9 34               inc (hl)
 304+ 9EAA
 305+ 9EAA 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9EAD 01 02 00         ld bc,2
 307+ 9EB0 A7               and a
 308+ 9EB1 09               add hl,bc
 309+ 9EB2 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EB5
 311+ 9EB5 7E               ld a,(hl)
 312+ 9EB6 A7               and a
 313+ 9EB7
 314+ 9EB7              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EB7
 316+ 9EB7              ;    jr z,$
 317+ 9EB7
 318+ 9EB7              ;! Reinicia el Patrón de movimiento.
 319+ 9EB7
 320+ 9EB7 CC BC 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EBA
 322+ 9EBA AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EBB
 324+ 9EBB C9               ret
 325+ 9EBC
 326+ 9EBC              ; ---------- --------- --------- ---------- ----------
 327+ 9EBC              ;
 328+ 9EBC              ;   15/01/24
 329+ 9EBC              ;
 330+ 9EBC              ;   Inicializa_Puntero_indice_mov
 331+ 9EBC
 332+ 9EBC              Inicializa_Puntero_indice_mov_2
 333+ 9EBC
 334+ 9EBC              ; Existe etiqueta de bucle principal???
 335+ 9EBC
 336+ 9EBC 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EBF 24               inc h
 338+ 9EC0 25               dec h
 339+ 9EC1 28 05            jr z,2F
 340+ 9EC3
 341+ 9EC3 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9EC6 18 14            jr 3F
 343+ 9EC8
 344+ 9EC8              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EC8
 346+ 9EC8 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9ECB 47               ld b,a
 348+ 9ECC
 349+ 9ECC 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9ECF 2B           1 dec hl
 351+ 9ED0 2B               dec hl
 352+ 9ED1 10 FC            djnz 1B
 353+ 9ED3 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9ED6
 355+ 9ED6 AF               xor a
 356+ 9ED7 32 25 8C         ld (Incrementa_puntero),a
 357+ 9EDA 18 06            jr 4F
 358+ 9EDC
 359+ 9EDC 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9EDF 32 25 8C         ld (Incrementa_puntero),a
 361+ 9EE2 C9           4 ret
 362+ 9EE3
 363+ 9EE3              ; ----------------------------------------------------------------------
 364+ 9EE3              ;
 365+ 9EE3              ;   30/01/24
 366+ 9EE3              ;
 367+ 9EE3              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EE3
 369+ 9EE3 3A EE 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EE6 CD 33 94         call Calcula_salto_en_BC
 371+ 9EE9 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EEC A7               and a
 373+ 9EED ED 4A            adc hl,bc
 374+ 9EEF C9               ret
 375+ 9EF0
 376+ 9EF0              ; ----------------------------------------------------------------------
 377+ 9EF0              ;
 378+ 9EF0              ;   30/01/24
 379+ 9EF0              ;
 380+ 9EF0              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF0              ;
 382+ 9EF0              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF0
 384+ 9EF0 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF1 23               inc hl
 386+ 9EF2 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EF3 69               ld l,c
 388+ 9EF4 60               ld h,b
 389+ 9EF5 22 F7 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EF8 C9               ret
 391+ 9EF9
# file closed: Movimiento.asm
2067  9EF9              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EF9              ; --------------------------------------------------------------------------------------
   2+ 9EF9              ;
   3+ 9EF9              ;   25/10/24
   4+ 9EF9              ;
   5+ 9EF9
   6+ 9EF9              Pinta_disparos_Entidades
   7+ 9EF9
   8+ 9EF9 ED 73 3D 8C      ld (Stack),sp
   9+ 9EFD ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F01
  11+ 9F01 3E 02            ld a,2
  12+ 9F03 08               ex af,af
  13+ 9F04
  14+ 9F04 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F06              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F06              ;                                     _ No encontraría "0".
  17+ 9F06 FD E1        4 pop iy
  18+ 9F08 D1               pop de                          ; 1er .db IYL
  19+ 9F09              ;                                   ; 2º  .db IYH
  20+ 9F09              ;                                   ; 3er .db E.
  21+ 9F09              ;   Album vacío ???
  22+ 9F09
  23+ 9F09 FD 7D            ld a,iyl
  24+ 9F0B FD 84            add iyh
  25+ 9F0D 83               add e
  26+ 9F0E 28 1F            jr z,1F
  27+ 9F10
  28+ 9F10              ;   Imprime album, (contiene datos).
  29+ 9F10
  30+ 9F10 3B               dec sp
  31+ 9F11
  32+ 9F11 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F12
  34+ 9F12              ; Imprime el 1er scanline del disparo.
  35+ 9F12
  36+ 9F12 FD 7D            ld a,iyl
  37+ 9F14 AE               xor (hl)
  38+ 9F15 77               ld (hl),a
  39+ 9F16
  40+ 9F16 2C               inc l
  41+ 9F17
  42+ 9F17 FD 7C            ld a,iyh
  43+ 9F19 AE               xor (hl)
  44+ 9F1A 77               ld (hl),a
  45+ 9F1B
  46+ 9F1B 2C               inc l
  47+ 9F1C
  48+ 9F1C 7B               ld a,e
  49+ 9F1D AE               xor (hl)
  50+ 9F1E 77               ld (hl),a
  51+ 9F1F
  52+ 9F1F              ; Imprime el 2º scanline del disparo.
  53+ 9F1F
  54+ 9F1F E1               pop hl
  55+ 9F20
  56+ 9F20 FD 7D            ld a,iyl
  57+ 9F22 AE               xor (hl)
  58+ 9F23 77               ld (hl),a
  59+ 9F24
  60+ 9F24 2C               inc l
  61+ 9F25
  62+ 9F25 FD 7C            ld a,iyh
  63+ 9F27 AE               xor (hl)
  64+ 9F28 77               ld (hl),a
  65+ 9F29
  66+ 9F29 2C               inc l
  67+ 9F2A
  68+ 9F2A 7B               ld a,e
  69+ 9F2B AE               xor (hl)
  70+ 9F2C 77               ld (hl),a
  71+ 9F2D
  72+ 9F2D 10 D7            djnz 4B
  73+ 9F2F
  74+ 9F2F 08           1 ex af,af
  75+ 9F30 3D               dec a
  76+ 9F31 20 05            jr nz,2F
  77+ 9F33
  78+ 9F33 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F37 C9               ret
  80+ 9F38
  81+ 9F38 ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F3C 08               ex af,af
  83+ 9F3D 18 C5            jr 3B
  84+ 9F3F
  85+ 9F3F              ; --------------------------------------------------------------------------------------
  86+ 9F3F              ;
  87+ 9F3F              ;   30/10/24
  88+ 9F3F              ;
  89+ 9F3F
  90+ 9F3F              Motor_de_disparos_entidades
  91+ 9F3F
  92+ 9F3F 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F42 FE 07            cp 7
  94+ 9F44 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F45
  96+ 9F45 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F47 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F4A
  99+ 9F4A CD F2 90     1 call Extrae_address
 100+ 9F4D 1C               inc e
 101+ 9F4E 1C               inc e
 102+ 9F4F ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F53
 104+ 9F53               ; Caja vacía ???
 105+ 9F53
 106+ 9F53 2D               dec l
 107+ 9F54 7E               ld a,(hl)
 108+ 9F55 A7               and a
 109+ 9F56 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F58
 111+ 9F58              ; --- Trabajamos con caja:
 112+ 9F58
 113+ 9F58 2C               inc l
 114+ 9F59
 115+ 9F59              ; --- Existe posibilidad de impacto ???
 116+ 9F59
 117+ 9F59 CB 46            bit 0,(hl)
 118+ 9F5B C4 9B 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F5E 20 37            jr nz,3F
 120+ 9F60
 121+ 9F60 CD 22 A0         call Rota_disparo_si_procede
 122+ 9F63
 123+ 9F63              ; ------------------------------------------------------------
 124+ 9F63
 125+ 9F63 2D               dec l
 126+ 9F64 2D               dec l
 127+ 9F65
 128+ 9F65 CD F2 90         call Extrae_address
 129+ 9F68
 130+ 9F68              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F68              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F68
 133+ 9F68 3A 67 8C         ld a,(Ctrl_5)
 134+ 9F6B CB 57            bit 2,a
 135+ 9F6D 28 09            jr z,4F
 136+ 9F6F
 137+ 9F6F CB 97            res 2,a
 138+ 9F71 32 67 8C         ld (Ctrl_5),a
 139+ 9F74 2C               inc l
 140+ 9F75 2C               inc l
 141+ 9F76 18 0C            jr 5F
 142+ 9F78
 143+ 9F78 CB 5F        4 bit 3,a
 144+ 9F7A 28 08            jr z,5F
 145+ 9F7C
 146+ 9F7C CB 9F            res 3,a
 147+ 9F7E 32 67 8C         ld (Ctrl_5),a
 148+ 9F81 2D               dec l
 149+ 9F82 2D               dec l
 150+ 9F83 2D               dec l
 151+ 9F84
 152+ 9F84              ; ---------------------------------------------------------------------
 153+ 9F84
 154+ 9F84              ;! Velocidad del disparo de entidades.
 155+ 9F84
 156+ 9F84 CD B4 99     5 call NextScan
 157+ 9F87 CD B4 99         call NextScan
 158+ 9F8A
 159+ 9F8A              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9F8A
 161+ 9F8A CD FF 9F         call Fin_de_disparo_de_entidad
 162+ 9F8D
 163+ 9F8D EB               ex de,hl
 164+ 9F8E
 165+ 9F8E 73               ld (hl),e
 166+ 9F8F 23               inc hl
 167+ 9F90 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9F91
 169+ 9F91 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9F94 18 02            jr 2F
 171+ 9F96
 172+ 9F96 C9               ret
 173+ 9F97
 174+ 9F97 EB           3 ex de,hl
 175+ 9F98 10 B0        2 djnz 1B
 176+ 9F9A
 177+ 9F9A C9               ret
 178+ 9F9B
 179+ 9F9B              ; ------------- ------------- ------------
 180+ 9F9B              ;
 181+ 9F9B              ;   1/11/24
 182+ 9F9B
 183+ 9F9B              Comprueba_impacto_con_Amadeus
 184+ 9F9B
 185+ 9F9B              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9F9B              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9F9B
 188+ 9F9B              ;   Modificamos registros, así que guardamos ...
 189+ 9F9B
 190+ 9F9B C5               push bc
 191+ 9F9C E5               push hl
 192+ 9F9D D5               push de
 193+ 9F9E
 194+ 9F9E 2D               dec l
 195+ 9F9F 2D               dec l
 196+ 9FA0
 197+ 9FA0 CD F2 90         call Extrae_address
 198+ 9FA3
 199+ 9FA3 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FA6 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FA7
 202+ 9FA7 7D               ld a,l
 203+ 9FA8 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FAA
 205+ 9FAA 06 03            ld b,3
 206+ 9FAC
 207+ 9FAC B9           1 cp c
 208+ 9FAD 28 15            jr z,Coincidencia
 209+ 9FAF 0C               inc c
 210+ 9FB0 10 FA            djnz 1B
 211+ 9FB2
 212+ 9FB2 0D               dec c
 213+ 9FB3 0D               dec c
 214+ 9FB4 0D               dec c
 215+ 9FB5
 216+ 9FB5 3C               inc a
 217+ 9FB6 B9               cp c
 218+ 9FB7 28 0B            jr z,Coincidencia
 219+ 9FB9
 220+ 9FB9 3C               inc a
 221+ 9FBA B9               cp c
 222+ 9FBB 28 07            jr z,Coincidencia
 223+ 9FBD
 224+ 9FBD D1           2 pop de
 225+ 9FBE E1               pop hl
 226+ 9FBF C1               pop bc
 227+ 9FC0
 228+ 9FC0              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FC0
 230+ 9FC0 CB 86            res 0,(hl)
 231+ 9FC2 AF               xor a                       ; Z before RET.
 232+ 9FC3 C9               ret
 233+ 9FC4
 234+ 9FC4              Coincidencia
 235+ 9FC4
 236+ 9FC4              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FC4              ;   Existe posibilidad de impacto.
 238+ 9FC4              ;   Vamos a averiguarlo ...
 239+ 9FC4
 240+ 9FC4 1D               dec e
 241+ 9FC5 1D               dec e
 242+ 9FC6 1D               dec e
 243+ 9FC7
 244+ 9FC7              ; DE en Puntero_objeto del disparo.
 245+ 9FC7              ; HL en Puntero_de_impresión del disparo.
 246+ 9FC7
 247+ 9FC7              ; Comparador:
 248+ 9FC7
 249+ 9FC7 06 03            ld b,3
 250+ 9FC9
 251+ 9FC9 1A           3 ld a,(de)
 252+ 9FCA 4F               ld c,a
 253+ 9FCB A6               and (hl)
 254+ 9FCC B9               cp c
 255+ 9FCD 20 06            jr nz,Amadeus_impactado
 256+ 9FCF
 257+ 9FCF 2C               inc l
 258+ 9FD0 1C               inc e
 259+ 9FD1
 260+ 9FD1 10 F6            djnz 3B
 261+ 9FD3
 262+ 9FD3 18 E8            jr 2B
 263+ 9FD5
 264+ 9FD5              Amadeus_impactado
 265+ 9FD5
 266+ 9FD5              ; Borramos disparo.
 267+ 9FD5
 268+ 9FD5 D1               pop de
 269+ 9FD6 E1               pop hl
 270+ 9FD7
 271+ 9FD7 E5               push hl
 272+ 9FD8 D5               push de
 273+ 9FD9
 274+ 9FD9 CD 8D A0         call Borra_6_bytes
 275+ 9FDC
 276+ 9FDC 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FDF 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ 9FE0
 279+ 9FE0              ; Iniciamos el proceso de explosión de Amadeus.
 280+ 9FE0
 281+ 9FE0 21 BB 89         ld hl,Impacto_Amadeus
 282+ 9FE3 36 01            ld (hl),1
 283+ 9FE5
 284+ 9FE5              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ 9FE5              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ 9FE5
 287+ 9FE5 3A BC 89         ld a,(p.imp.amadeus)
 288+ 9FE8 FE DE            cp $de
 289+ 9FEA 20 04            jr nz,1F
 290+ 9FEC
 291+ 9FEC 3D               dec a
 292+ 9FED 32 BC 89         ld (p.imp.amadeus),a
 293+ 9FF0
 294+ 9FF0              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ 9FF0
 296+ 9FF0 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ 9FF3 21 BE 89         ld hl,Pamm_Amadeus
 298+ 9FF6
 299+ 9FF6 73               ld (hl),e
 300+ 9FF7 23               inc hl
 301+ 9FF8 72               ld (hl),d
 302+ 9FF9
 303+ 9FF9 D1               pop de
 304+ 9FFA E1               pop hl
 305+ 9FFB C1               pop bc
 306+ 9FFC
 307+ 9FFC AF               xor a
 308+ 9FFD 3C               inc a               ; NZ before RET.
 309+ 9FFE C9               ret
 310+ 9FFF
 311+ 9FFF              ; ------------- ------------- ------------
 312+ 9FFF              ;
 313+ 9FFF              ;   31/10/24
 314+ 9FFF
 315+ 9FFF              Fin_de_disparo_de_entidad
 316+ 9FFF
 317+ 9FFF              ; Estamos en zona de Amadeus ??
 318+ 9FFF
 319+ 9FFF 7C               ld a,h
 320+ A000 FE 54            cp $54
 321+ A002 38 0D            jr c,1F
 322+ A004
 323+ A004 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A005
 325+ A005 5D               ld e,l
 326+ A006 54               ld d,h
 327+ A007
 328+ A007 21 E0 57         ld hl,$57e0
 329+ A00A ED 52            sbc hl,de
 330+ A00C
 331+ A00C 38 6F            jr c,Elimina_disparo_entidad
 332+ A00E
 333+ A00E 6B               ld l,e
 334+ A00F 62               ld h,d
 335+ A010
 336+ A010 D1               pop de
 337+ A011
 338+ A011 7C           1 ld a,h
 339+ A012 FE 50            cp $50
 340+ A014 D8               ret c
 341+ A015
 342+ A015 7D               ld a,l
 343+ A016 FE C0            cp $c0
 344+ A018 D8               ret c
 345+ A019
 346+ A019              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A019              ; Así podremos comprobar si hay colisión más adelante.
 348+ A019
 349+ A019 1C               inc e
 350+ A01A 1C               inc e
 351+ A01B
 352+ A01B EB               ex de,hl
 353+ A01C CB C6            set 0,(hl)
 354+ A01E EB               ex de,hl
 355+ A01F
 356+ A01F 1D               dec e
 357+ A020 1D               dec e
 358+ A021
 359+ A021 C9               ret
 360+ A022
 361+ A022              ; ----------------------------------------------------------
 362+ A022              ;
 363+ A022              ;   08/10/24
 364+ A022
 365+ A022              ;   Estructura de un disparo de entidades.
 366+ A022
 367+ A022              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A022              ; 	defw 0											; Puntero de impresión.
 369+ A022              ;	defw 0											; Control.
 370+ A022
 371+ A022              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A022              ;   _de la entidad en el momento de disparar.
 373+ A022
 374+ A022              ;   El byte alto muestra la siguiente información:
 375+ A022              ;
 376+ A022              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A022              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A022              ;
 379+ A022              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A022              ;
 381+ A022              ;                        10xx ..... Izquierda.
 382+ A022              ;                        01xx ..... Derecha.
 383+ A022              ;                        00xx ..... Recto.
 384+ A022
 385+ A022              Rota_disparo_si_procede
 386+ A022
 387+ A022              ;   Nos situamos en el byte alto de (Control).
 388+ A022
 389+ A022 CB 76            bit 6,(hl)
 390+ A024 20 2D            jr nz,Rota_a_derecha
 391+ A026 CB 7E            bit 7,(hl)
 392+ A028 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A029
 394+ A029              Rota_a_izq
 395+ A029
 396+ A029 E5               push hl
 397+ A02A
 398+ A02A 7D               ld a,l
 399+ A02B D6 05            sub 5
 400+ A02D 6F               ld l,a
 401+ A02E
 402+ A02E E5               push hl
 403+ A02F FD E1            pop iy
 404+ A031
 405+ A031 A7               and a
 406+ A032
 407+ A032 FD CB 02 16      rl (iy+02)
 408+ A036 FD CB 01 16      rl (iy+01)
 409+ A03A FD CB 00 16      rl (iy+00)
 410+ A03E
 411+ A03E 30 3B            jr nc,Exit
 412+ A040
 413+ A040              ; Desplazamiento completo hasta Carry.
 414+ A040              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A040
 416+ A040 FD 36 02 03      ld (iy+02),$03
 417+ A044 FD 36 01 00      ld (iy+01),$00
 418+ A048 FD 36 00 00      ld (iy+00),$00
 419+ A04C
 420+ A04C 21 67 8C         ld hl,Ctrl_5
 421+ A04F CB DE            set 3,(hl)
 422+ A051
 423+ A051 18 28            jr Exit
 424+ A053
 425+ A053              Rota_a_derecha
 426+ A053
 427+ A053 E5               push hl
 428+ A054
 429+ A054 7D               ld a,l
 430+ A055 D6 05            sub 5
 431+ A057 6F               ld l,a
 432+ A058
 433+ A058 E5               push hl
 434+ A059 FD E1            pop iy
 435+ A05B
 436+ A05B A7               and a
 437+ A05C
 438+ A05C FD CB 00 1E      rr (iy+00)
 439+ A060 FD CB 01 1E      rr (iy+01)
 440+ A064 FD CB 02 1E      rr (iy+02)
 441+ A068
 442+ A068 30 11            jr nc,Exit
 443+ A06A
 444+ A06A              ; Desplazamiento completo hasta Carry.
 445+ A06A              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A06A
 447+ A06A FD 36 00 01      ld (iy+00),$01
 448+ A06E FD 36 01 80      ld (iy+01),$80
 449+ A072 FD 36 02 00      ld (iy+02),$00
 450+ A076
 451+ A076 21 67 8C         ld hl,Ctrl_5
 452+ A079 CB D6            set 2,(hl)
 453+ A07B
 454+ A07B E1           Exit pop hl
 455+ A07C C9               ret
 456+ A07D
 457+ A07D              ; ------------ ----------- ------------
 458+ A07D              ;
 459+ A07D              ;   25/9/24
 460+ A07D
 461+ A07D              Elimina_disparo_entidad
 462+ A07D
 463+ A07D 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A080 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A081
 466+ A081 E1               pop hl
 467+ A082 E5               push hl
 468+ A083
 469+ A083 2C               inc l
 470+ A084 2C               inc l
 471+ A085
 472+ A085 CD 8D A0         call Borra_6_bytes
 473+ A088
 474+ A088 D1               pop de
 475+ A089
 476+ A089 21 00 00         ld hl,0
 477+ A08C
 478+ A08C C9               ret
 479+ A08D
 480+ A08D              ; ----- ----- ----- ----- -----
 481+ A08D
 482+ A08D              Borra_6_bytes
 483+ A08D
 484+ A08D 16 06            ld d,6                                                    ; Contador
 485+ A08F AF               xor a                                                     ; Borrador
 486+ A090 77           1 ld (hl),a
 487+ A091 2D               dec l
 488+ A092 15               dec d
 489+ A093 20 FB            jr nz,1B
 490+ A095
 491+ A095 C9               ret
 492+ A096
 493+ A096              ; --------------------------------------------------------------------------------------
 494+ A096              ;
 495+ A096              ;   12/10/24
 496+ A096              ;
 497+ A096
 498+ A096              Genera_datos_de_impresion_disparos_Entidades
 499+ A096
 500+ A096 3E 07            ld a,7
 501+ A098 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A099
 503+ A099              ; ---------------
 504+ A099
 505+ A099              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A099
 507+ A099 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A09C
 509+ A09C CD F2 90     1 call Extrae_address
 510+ A09F
 511+ A09F 13               inc de
 512+ A0A0 13               inc de
 513+ A0A1
 514+ A0A1 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0A5
 516+ A0A5 2D               dec l
 517+ A0A6 7E               ld a,(hl)
 518+ A0A7 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0A8 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0AA
 521+ A0AA              ; ----- ----- ----- -----
 522+ A0AA
 523+ A0AA 2D               dec l
 524+ A0AB CD F2 90         call Extrae_address
 525+ A0AE E5               push hl
 526+ A0AF
 527+ A0AF 1D               dec e
 528+ A0B0
 529+ A0B0 EB               ex de,hl
 530+ A0B1
 531+ A0B1 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0B2 2D               dec l
 533+ A0B3 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0B4 2D               dec l
 535+ A0B5 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0B6
 537+ A0B6 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0B7
 539+ A0B7              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0B7
 541+ A0B7 FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0BB FD 73 00         ld (iy+0),e
 543+ A0BE FD 70 01         ld (iy+1),b
 544+ A0C1 FD 71 02         ld (iy+2),c
 545+ A0C4
 546+ A0C4 FD 75 03         ld (iy+3),l
 547+ A0C7 FD 74 04         ld (iy+4),h
 548+ A0CA
 549+ A0CA CD B4 99         call NextScan
 550+ A0CD
 551+ A0CD FD 75 05         ld (iy+5),l
 552+ A0D0 FD 74 06         ld (iy+6),h
 553+ A0D3
 554+ A0D3 FD E5            push iy
 555+ A0D5 E1               pop hl
 556+ A0D6
 557+ A0D6 3E 07            ld a,7
 558+ A0D8 85               add l
 559+ A0D9 6F               ld l,a
 560+ A0DA
 561+ A0DA 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0DD
 563+ A0DD              ; ----- ----- ----- -----
 564+ A0DD
 565+ A0DD              Situa_en_siguiente_caja
 566+ A0DD
 567+ A0DD 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0DE 3D               dec a
 569+ A0DF C8               ret z
 570+ A0E0
 571+ A0E0 08               ex af,af
 572+ A0E1 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A0E4 18 B6            jr 1B
 574+ A0E6
 575+ A0E6              ; --------------------------------------------------------------------------------------
 576+ A0E6              ;
 577+ A0E6              ;   12/10/24
 578+ A0E6              ;
 579+ A0E6
 580+ A0E6              Genera_disparo_de_entidad_maldosa
 581+ A0E6
 582+ A0E6              ;   Estructura de un disparo de entidades.
 583+ A0E6
 584+ A0E6              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A0E6              ; 	defw 0											; Puntero de impresión.
 586+ A0E6              ;	defw 0											; Control.
 587+ A0E6
 588+ A0E6              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A0E6              ;   _de la entidad en el momento de disparar.
 590+ A0E6
 591+ A0E6              ;   El byte de control muestra la siguiente información:
 592+ A0E6
 593+ A0E6              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A0E6              ;
 595+ A0E6              ;                        10xx ..... Izquierda.
 596+ A0E6              ;                        01xx ..... Derecha.
 597+ A0E6              ;                        00xx ..... Recto.
 598+ A0E6
 599+ A0E6              ;*  Exclusiones.
 600+ A0E6
 601+ A0E6              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A0E6              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A0E6
 604+ A0E6 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A0E9 A7               and a
 606+ A0EA C8               ret z
 607+ A0EB
 608+ A0EB 3A F0 8B         ld a,(Coordenada_y)
 609+ A0EE A7               and a
 610+ A0EF C8               ret z
 611+ A0F0
 612+ A0F0 3D               dec a
 613+ A0F1 C8               ret z
 614+ A0F2
 615+ A0F2 FE 10            cp 16
 616+ A0F4 D0               ret nc
 617+ A0F5
 618+ A0F5              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A0F5              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A0F5              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A0F5
 622+ A0F5 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A0F8 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A0F9
 625+ A0F9              ;   Decrementa el numero de disparos de entidades.
 626+ A0F9
 627+ A0F9 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A0FC 35               dec (hl)
 629+ A0FD
 630+ A0FD 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A100
 632+ A100 CD F2 90     1 call Extrae_address
 633+ A103
 634+ A103 13               inc de
 635+ A104 13               inc de
 636+ A105
 637+ A105 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A109
 639+ A109              ;   Comprobamos si la caja está vacía.
 640+ A109
 641+ A109 2D               dec l
 642+ A10A 7E               ld a,(hl)
 643+ A10B A7               and a
 644+ A10C 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A10E 2C               inc l
 646+ A10F
 647+ A10F              ;   Caja vacía, vamos a generar un disparo.
 648+ A10F              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A10F
 650+ A10F CD 30 A1         call Genera_byte_inclinacion
 651+ A112
 652+ A112 7E               ld a,(hl)
 653+ A113 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A114
 655+ A114 2D               dec l
 656+ A115
 657+ A115 CD 4C A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A118
 659+ A118 70               ld (hl),b
 660+ A119 2D               dec l
 661+ A11A 71               ld (hl),c
 662+ A11B
 663+ A11B 2D               dec l
 664+ A11C
 665+ A11C              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A11C
 667+ A11C FD 7E 02         ld a,(iy+02)
 668+ A11F 77               ld (hl),a
 669+ A120 2D               dec l
 670+ A121
 671+ A121 FD 7E 01         ld a,(iy+01)
 672+ A124 77               ld (hl),a
 673+ A125 2D               dec l
 674+ A126
 675+ A126 FD 7E 00         ld a,(iy+00)
 676+ A129 77               ld (hl),a
 677+ A12A
 678+ A12A C9               ret
 679+ A12B
 680+ A12B              ;   --- --- ---
 681+ A12B
 682+ A12B              Situa_en_siguiente_disparo
 683+ A12B
 684+ A12B 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A12E 18 D0            jr 1B
 686+ A130
 687+ A130              ; --------------------------------------------------------------------------------------
 688+ A130              ;
 689+ A130              ;   09/10/24
 690+ A130              ;
 691+ A130
 692+ A130              Genera_byte_inclinacion
 693+ A130
 694+ A130              ; Determina tendencia del disparo.
 695+ A130
 696+ A130 3A B8 89         ld a,(CX_Amadeus)
 697+ A133 47               ld b,a
 698+ A134 3A EF 8B         ld a,(Coordenada_X)
 699+ A137 90               sub b
 700+ A138 38 07            jr c,Disparo_a_derecha
 701+ A13A
 702+ A13A FE 06        Disparo_a_izquierda cp 6
 703+ A13C
 704+ A13C D8               ret c
 705+ A13D C8               ret z
 706+ A13E
 707+ A13E CB FE            set 7,(hl)
 708+ A140 C9               ret
 709+ A141
 710+ A141 47           Disparo_a_derecha ld b,a
 711+ A142 3E FF            ld a,$ff
 712+ A144 90               sub b
 713+ A145
 714+ A145 FE 05            cp 5
 715+ A147
 716+ A147 D8               ret c
 717+ A148 C8               ret z
 718+ A149
 719+ A149 CB F6            set 6,(hl)
 720+ A14B C9               ret
 721+ A14C
 722+ A14C              ; --------------------------------------------------------------------------------------
 723+ A14C              ;
 724+ A14C              ;   09/10/24
 725+ A14C              ;
 726+ A14C
 727+ A14C              Modifica_puntero_de_impresion
 728+ A14C
 729+ A14C              ;   Puntero de impresión del disparo en BC.
 730+ A14C
 731+ A14C E5               push hl
 732+ A14D
 733+ A14D 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A150 CD B4 99         call NextScan
 735+ A153
 736+ A153 4D               ld c,l
 737+ A154 44               ld b,h
 738+ A155
 739+ A155 E1               pop hl
 740+ A156
 741+ A156 08               ex af,af
 742+ A157 CB 77            bit 6,a
 743+ A159 28 06            jr z,1F
 744+ A15B
 745+ A15B FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A15F 0C               inc c
 747+ A160 C9               ret
 748+ A161
 749+ A161 CB 7F        1 bit 7,a
 750+ A163 28 F6            jr z,2B
 751+ A165
 752+ A165 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A169 0D               dec c
 754+ A16A
 755+ A16A C9               ret
 756+ A16B
 757+ A16B              ; --------------------------------------------------------------------------------------
 758+ A16B              ;
 759+ A16B              ;   31/08/24
 760+ A16B              ;
 761+ A16B
 762+ A16B              Compara_con_coordenadas_de_disparo
 763+ A16B
 764+ A16B 3A F0 8B         ld a,(Coordenada_y)
 765+ A16E 47               ld b,a
 766+ A16F 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A172 90               sub b
 768+ A173
 769+ A173              ; A = "0" ok
 770+ A173              ; A = "1" ok
 771+ A173
 772+ A173 28 08            jr z,Comprueba_coordenada_X
 773+ A175 3D               dec a
 774+ A176 28 05            jr z,Comprueba_coordenada_X
 775+ A178
 776+ A178              ; A = "$ff" ok
 777+ A178
 778+ A178 FE FE            cp $fe
 779+ A17A 28 01            jr z,Comprueba_coordenada_X
 780+ A17C
 781+ A17C C9               ret
 782+ A17D
 783+ A17D              Comprueba_coordenada_X
 784+ A17D
 785+ A17D 3A EF 8B         ld a,(Coordenada_X)
 786+ A180 47               ld b,a
 787+ A181 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A184 7E               ld a,(hl)
 789+ A185 90               sub b
 790+ A186
 791+ A186              ; A = "0" ok
 792+ A186              ; A = "1" ok
 793+ A186
 794+ A186 28 09            jr z,Activa_Impacto_en_entidad
 795+ A188 3D               dec a
 796+ A189 28 06            jr z,Activa_Impacto_en_entidad
 797+ A18B
 798+ A18B              ; A = "2" ok
 799+ A18B
 800+ A18B 3D               dec a
 801+ A18C 28 03            jr z,Activa_Impacto_en_entidad
 802+ A18E
 803+ A18E              ; A = "$ff"
 804+ A18E
 805+ A18E FE FD            cp $fd
 806+ A190 C0               ret nz
 807+ A191
 808+ A191              Activa_Impacto_en_entidad
 809+ A191
 810+ A191              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A191
 812+ A191 3E 02            ld a,2
 813+ A193 32 F2 8B         ld (Impacto),a
 814+ A196
 815+ A196              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A196
 817+ A196 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A199 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A19C
 820+ A19C 73               ld (hl),e
 821+ A19D 23               inc hl
 822+ A19E 72               ld (hl),d
 823+ A19F
 824+ A19F              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A19F
 826+ A19F 21 6C 8C         ld hl,Impacto2
 827+ A1A2 CB 9E            res 3,(hl)
 828+ A1A4
 829+ A1A4 C9               ret
 830+ A1A5
 831+ A1A5              ; --------------------------------------------------------------------------------------
 832+ A1A5              ;
 833+ A1A5              ;   13/10/24
 834+ A1A5              ;
 835+ A1A5
 836+ A1A5              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1A5
 838+ A1A5              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1A5
 840+ A1A5 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1A8 06 06            ld b,6
 842+ A1AA AF               xor a
 843+ A1AB 77           1 ld (hl),a
 844+ A1AC 2C               inc l
 845+ A1AD 10 FC            djnz 1B
 846+ A1AF
 847+ A1AF C9               ret
 848+ A1B0
 849+ A1B0              ; --------------------------------------------------------------------------------------
 850+ A1B0              ;
 851+ A1B0              ;   29/09/24
 852+ A1B0              ;
 853+ A1B0
 854+ A1B0              Calcula_bytes_pintado_disparos
 855+ A1B0
 856+ A1B0 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1B3 45               ld b,l
 858+ A1B4 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1B7 7D               ld a,l
 860+ A1B8
 861+ A1B8 90               sub b
 862+ A1B9 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1BC
 864+ A1BC C9               ret
 865+ A1BD
 866+ A1BD              ; --------------------------------------------------------------------------------------
 867+ A1BD              ;
 868+ A1BD              ;   26/10/24
 869+ A1BD              ;
 870+ A1BD              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1BD              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1BD              ;   _disparos que el álbum del FRAME actual).
 873+ A1BD
 874+ A1BD              Limpia_album_de_pintado_disparos_entidades
 875+ A1BD
 876+ A1BD 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1C0 7E               ld a,(hl)
 878+ A1C1 2D               dec l
 879+ A1C2 46               ld b,(hl)
 880+ A1C3 90               sub b
 881+ A1C4
 882+ A1C4 D8               ret c
 883+ A1C5 C8               ret z
 884+ A1C6
 885+ A1C6 F5               push af
 886+ A1C7 80               add b
 887+ A1C8 77               ld (hl),a
 888+ A1C9 F1               pop af
 889+ A1CA
 890+ A1CA              ; Clean.
 891+ A1CA
 892+ A1CA 47           2 ld b,a
 893+ A1CB AF               xor a
 894+ A1CC 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1CF 77           1 ld (hl),a
 896+ A1D0 23               inc hl
 897+ A1D1 10 FC            djnz 1B
 898+ A1D3
 899+ A1D3 C9               ret
 900+ A1D4
 901+ A1D4              ; --------------------------------------------------------------------------------------
 902+ A1D4              ;
 903+ A1D4              ;   29/09/24
 904+ A1D4              ;
 905+ A1D4
 906+ A1D4              Motor_Disparos_Amadeus
 907+ A1D4
 908+ A1D4 21 26 89         ld hl,Disparo_Amad+1
 909+ A1D7
 910+ A1D7 34               inc (hl)
 911+ A1D8 35               dec (hl)
 912+ A1D9
 913+ A1D9 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1DA
 915+ A1DA              ;   Esta caja contiene un disparo.
 916+ A1DA
 917+ A1DA CD E1 A1         call Consulta_Impacto
 918+ A1DD CC FA A1         call z,Mueve_disparo_Amadeus
 919+ A1E0
 920+ A1E0 C9               ret
 921+ A1E1
 922+ A1E1              ; ----------------------
 923+ A1E1              ;
 924+ A1E1              ;
 925+ A1E1              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A1E1              ;
 927+ A1E1              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A1E1
 929+ A1E1
 930+ A1E1              Consulta_Impacto
 931+ A1E1
 932+ A1E1              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A1E1              ;   _sea lo más coherente posible.
 934+ A1E1
 935+ A1E1 E5               push hl
 936+ A1E2 2B               dec hl
 937+ A1E3 CD D6 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A1E6 E1               pop hl
 939+ A1E7 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A1E8
 941+ A1E8 C8               ret z
 942+ A1E9
 943+ A1E9 3A 6C 8C         ld a,(Impacto2)
 944+ A1EC CB DF            set 3,a
 945+ A1EE 32 6C 8C         ld (Impacto2),a
 946+ A1F1
 947+ A1F1 E5               push hl
 948+ A1F2 CD C3 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A1F5 E1               pop hl
 950+ A1F6 CD 13 A2         call Elimina_disparo_Amadeus
 951+ A1F9
 952+ A1F9 C9               ret
 953+ A1FA
 954+ A1FA              ; ----------------------
 955+ A1FA              ;
 956+ A1FA              ;
 957+ A1FA              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A1FA
 959+ A1FA              Mueve_disparo_Amadeus
 960+ A1FA
 961+ A1FA CD F2 90         call Extrae_address
 962+ A1FD
 963+ A1FD CD C3 99         call PreviousScan
 964+ A200 CD C3 99         call PreviousScan
 965+ A203 CD C3 99         call PreviousScan
 966+ A206 CD C3 99         call PreviousScan
 967+ A209
 968+ A209              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A209
 970+ A209 7C               ld a,h
 971+ A20A D6 40            sub $40
 972+ A20C EB               ex de,hl
 973+ A20D 38 04            jr c,Elimina_disparo_Amadeus
 974+ A20F
 975+ A20F               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A20F
 977+ A20F 73               ld (hl),e
 978+ A210 23               inc hl
 979+ A211 72               ld (hl),d
 980+ A212
 981+ A212 C9               ret
 982+ A213
 983+ A213              ; ----------------------
 984+ A213              ;
 985+ A213              ;   29/9/24
 986+ A213
 987+ A213              Elimina_disparo_Amadeus
 988+ A213
 989+ A213              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A213              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A213
 992+ A213              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A213              ;   	defw 0											; Puntero de impresión.
 994+ A213
 995+ A213 2B               dec hl
 996+ A214 2B               dec hl
 997+ A215
 998+ A215 AF               xor a
 999+ A216 77               ld (hl),a
1000+ A217 23               inc hl
1001+ A218 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A219
1003+ A219 23               inc hl
1004+ A21A 77               ld (hl),a
1005+ A21B 23               inc hl
1006+ A21C 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A21D
1008+ A21D 3E 01            ld a,1
1009+ A21F 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A222
1011+ A222 CD A5 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A225
1013+ A225 AF               xor a
1014+ A226 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A227
1016+ A227 C9               ret
1017+ A228
1018+ A228              ; --------------------------------------------------------------------------------------
1019+ A228              ;
1020+ A228              ;   13/10/24
1021+ A228              ;
1022+ A228
1023+ A228              Pinta_disparos_Amadeus
1024+ A228
1025+ A228 06 02            ld b,2
1026+ A22A ED 73 3D 8C      ld (Stack),sp
1027+ A22E ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A232 D1           3 pop de
1029+ A233 14               inc d
1030+ A234 15               dec d
1031+ A235 28 1C            jr z,1F
1032+ A237 E1               pop hl
1033+ A238
1034+ A238              Imprime_scanlines_en_pantalla
1035+ A238
1036+ A238              ; 1er scanline
1037+ A238
1038+ A238 1A               ld a,(de)
1039+ A239 AE               xor (hl)
1040+ A23A 77               ld (hl),a
1041+ A23B
1042+ A23B 1C               inc e
1043+ A23C 2C               inc l
1044+ A23D
1045+ A23D 1A               ld a,(de)
1046+ A23E AE               xor (hl)
1047+ A23F 77               ld (hl),a
1048+ A240
1049+ A240 1D               dec e
1050+ A241 E1               pop hl
1051+ A242
1052+ A242              ; 2º scanline
1053+ A242
1054+ A242 1A               ld a,(de)
1055+ A243 AE               xor (hl)
1056+ A244 77               ld (hl),a
1057+ A245
1058+ A245 1C               inc e
1059+ A246 2C               inc l
1060+ A247
1061+ A247 1A               ld a,(de)
1062+ A248 AE               xor (hl)
1063+ A249 77               ld (hl),a
1064+ A24A
1065+ A24A 1D               dec e
1066+ A24B
1067+ A24B 18 06            jr 1F
1068+ A24D
1069+ A24D ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A251 18 DF            jr 3B
1071+ A253 10 F8        1 djnz 2B
1072+ A255 ED 7B 3D 8C      ld sp,(Stack)
1073+ A259 C9               ret
1074+ A25A
1075+ A25A              ; --------------------------------------------------------------------------------------
1076+ A25A              ;
1077+ A25A              ;   13/10/24
1078+ A25A              ;
1079+ A25A              ;   Modifica: HL,BC y DE.
1080+ A25A
1081+ A25A
1082+ A25A              Genera_datos_de_impresion_disparos_Amadeus
1083+ A25A
1084+ A25A ED 73 3D 8C      ld (Stack),sp
1085+ A25E 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A261 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A262
1088+ A262 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A263 15               dec d
1090+ A264
1091+ A264 28 0E            jr z,Salida
1092+ A266
1093+ A266              Genera_scanlines_de_disparo_Amadeus
1094+ A266
1095+ A266 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A267              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A267 ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A26B
1099+ A26B C1               pop bc
1100+ A26C C1               pop bc
1101+ A26D C1               pop bc
1102+ A26E
1103+ A26E E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A26F CD C3 99         call PreviousScan
1105+ A272 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A273 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A274
1108+ A274              Salida
1109+ A274
1110+ A274 ED 7B 3D 8C      ld sp,(Stack)
1111+ A278
1112+ A278 C9               ret
1113+ A279
1114+ A279              ; --------------------------------------------------------------------------------------
1115+ A279              ;
1116+ A279              ;   12/09/24
1117+ A279              ;
1118+ A279
1119+ A279              Genera_disparo_Amadeus
1120+ A279
1121+ A279              ;*  Exclusiones.
1122+ A279
1123+ A279 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A27C A7               and a
1125+ A27D C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A27E
1127+ A27E 3D               dec a
1128+ A27F 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A282
1130+ A282              Define_puntero_objeto_disparo
1131+ A282
1132+ A282              ;   Inicializamos contador.
1133+ A282
1134+ A282 06 00            ld b,0
1135+ A284
1136+ A284 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A287 2C               inc l
1138+ A288
1139+ A288 3E 80            ld a,$80
1140+ A28A BE               cp (hl)
1141+ A28B 28 0D            jr z,1F
1142+ A28D
1143+ A28D 04               inc b
1144+ A28E
1145+ A28E 3E 60            ld a,$60
1146+ A290 BE               cp (hl)
1147+ A291 28 07            jr z,1F
1148+ A293
1149+ A293
1150+ A293 04               inc b
1151+ A294
1152+ A294 3E 18            ld a,$18
1153+ A296 BE               cp (hl)
1154+ A297 28 01            jr z,1F
1155+ A299
1156+ A299 04               inc b
1157+ A29A
1158+ A29A              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A29A
1160+ A29A              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A29A
1162+ A29A CD C3 99     1 call PreviousScan
1163+ A29D
1164+ A29D 78               ld a,b
1165+ A29E CB 3F            srl a
1166+ A2A0 28 03            jr z,4F
1167+ A2A2
1168+ A2A2              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2A2 E5               push hl
1170+ A2A3 18 02            jr 5F
1171+ A2A5 2D           4 dec l
1172+ A2A6 E5               push hl
1173+ A2A7              ; ---
1174+ A2A7
1175+ A2A7              ;   Calcula el Puntero_objeto del disparo.
1176+ A2A7
1177+ A2A7 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2AA 04               inc b
1179+ A2AB 05               dec b
1180+ A2AC 28 04            jr z,2F
1181+ A2AE
1182+ A2AE              ;   Nos desplazamos por el índice de disparos.
1183+ A2AE
1184+ A2AE 2C           3 inc l
1185+ A2AF 2C               inc l
1186+ A2B0 10 FC            djnz 3B
1187+ A2B2
1188+ A2B2              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2B2 CD F2 90     2 call Extrae_address
1190+ A2B5 E5               push hl
1191+ A2B6              ; ---
1192+ A2B6
1193+ A2B6              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2B6              ; HL en el 1er .db de la caja.
1195+ A2B6
1196+ A2B6 21 25 89         ld hl,Disparo_Amad
1197+ A2B9
1198+ A2B9 06 02            ld b,2
1199+ A2BB
1200+ A2BB D1           6 pop de
1201+ A2BC 73               ld (hl),e
1202+ A2BD 23               inc hl
1203+ A2BE 72               ld (hl),d
1204+ A2BF 23               inc hl
1205+ A2C0
1206+ A2C0 10 F9            djnz 6B
1207+ A2C2
1208+ A2C2 C9               ret
1209+ A2C3
1210+ A2C3              Genera_coordenadas_de_disparo_Amadeus
1211+ A2C3
1212+ A2C3              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2C3              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2C3              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2C3
1216+ A2C3 CD F2 90         call Extrae_address
1217+ A2C6 CD BA 94         call Genera_coordenadas
1218+ A2C9
1219+ A2C9 3D               dec a
1220+ A2CA
1221+ A2CA 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A2CD 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2CE 23               inc hl
1224+ A2CF 3A EF 8B         ld a,(Coordenada_X)
1225+ A2D2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2D3
1227+ A2D3 AF               xor a
1228+ A2D4 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2D5
1230+ A2D5 C9               ret
1231+ A2D6
1232+ A2D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2D6
1236+ A2D6              ; ----------------------------------------------
1237+ A2D6              ;
1238+ A2D6              ;   27/08/24
1239+ A2D6              ;
1240+ A2D6              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2D6              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2D6
1243+ A2D6              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2D6
1245+ A2D6              Extraccion_de_datos
1246+ A2D6
1247+ A2D6 13               inc de
1248+ A2D7 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2D8
1250+ A2D8 5E               ld e,(hl)
1251+ A2D9 23               inc hl
1252+ A2DA 56               ld d,(hl)
1253+ A2DB
1254+ A2DB 23               inc hl
1255+ A2DC
1256+ A2DC 4E               ld c,(hl)
1257+ A2DD 23               inc hl
1258+ A2DE 46               ld b,(hl)
1259+ A2DF
1260+ A2DF C5               push bc
1261+ A2E0 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A2E1
1263+ A2E1              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A2E1
1265+ A2E1 CD C3 99         call PreviousScan
1266+ A2E4 CD C3 99         call PreviousScan
1267+ A2E7
1268+ A2E7              Detecta_impacto_
1269+ A2E7
1270+ A2E7 1A               ld a,(de)
1271+ A2E8 A6               and (hl)
1272+ A2E9 C0               ret nz
1273+ A2EA
1274+ A2EA 13               inc de
1275+ A2EB 23               inc hl
1276+ A2EC
1277+ A2EC 1A               ld a,(de)
1278+ A2ED A6               and (hl)
1279+ A2EE C9               ret
1280+ A2EF
1281+ A2EF              ; -------------------------------------------------------------------------------------------------------------
1282+ A2EF              ;
1283+ A2EF              ;   8/8/24
1284+ A2EF              ;
1285+ A2EF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A2EF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A2EF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A2EF              ;
1289+ A2EF              ;   MODIFICA: HL,DE,BC y A.
1290+ A2EF              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A2EF              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A2EF
1293+ A2EF              Colision_Entidad_Amadeus
1294+ A2EF
1295+ A2EF              ; Posible contacto de entidad con Amadeus. ?????
1296+ A2EF
1297+ A2EF              ; Exclusiones:
1298+ A2EF
1299+ A2EF 3A 8F 8C         ld a,(Shield)
1300+ A2F2 A7               and a
1301+ A2F3 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A2F4
1303+ A2F4 21 65 8C         ld hl,Ctrl_3
1304+ A2F7 CB 76            bit 6,(hl)
1305+ A2F9 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A2FA
1307+ A2FA 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A2FD CB 56            bit 2,(hl)
1309+ A2FF C0               ret nz
1310+ A300
1311+ A300 3A F0 8B     	ld a,(Coordenada_y)
1312+ A303 FE 14        	cp $14
1313+ A305 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A306
1315+ A306 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A309 A7               and a
1317+ A30A C0               ret nz
1318+ A30B
1319+ A30B              Genera_coordenadas_X
1320+ A30B
1321+ A30B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A30B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A30B
1324+ A30B              ;   Limpiamos almacenes.
1325+ A30B
1326+ A30B              ;    call Limpia_Coordenadas_X
1327+ A30B
1328+ A30B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A30B
1330+ A30B 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A30E 3A EF 8B         ld a,(Coordenada_X)
1332+ A311 CD 33 A3         call Guarda_coordenadas_X
1333+ A314
1334+ A314              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A314
1336+ A314 3A B8 89         ld a,(CX_Amadeus)
1337+ A317 CD 33 A3         call Guarda_coordenadas_X
1338+ A31A CD 47 A3         call Compara_coordenadas_X
1339+ A31D C0               ret nz
1340+ A31E
1341+ A31E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A320 32 F2 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A323
1344+ A323 2A 2E 8C         ld hl,(Puntero_store_caja)
1345+ A326 2C               inc l
1346+ A327 2C               inc l
1347+ A328 2C               inc l
1348+ A329 2C               inc l
1349+ A32A 22 6D 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A32D
1351+ A32D 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A330 CB D6            set 2,(hl)
1353+ A332
1354+ A332 C9               ret
1355+ A333
1356+ A333               ; ----- ----- ----- ----- -----
1357+ A333
1358+ A333 77           Guarda_coordenadas_X ld (hl),a
1359+ A334 3C               inc a
1360+ A335 2C               inc l
1361+ A336 77               ld (hl),a
1362+ A337 3C               inc a
1363+ A338 2C               inc l
1364+ A339 77               ld (hl),a
1365+ A33A 2C               inc l
1366+ A33B C9               ret
1367+ A33C
1368+ A33C AF           Limpia_Coordenadas_X xor a
1369+ A33D 06 06            ld b,6
1370+ A33F 21 74 8C         ld hl,Coordenadas_X_Amadeus
1371+ A342 77           1 ld (hl),a
1372+ A343 23               inc hl
1373+ A344 10 FC            djnz 1B
1374+ A346 C9               ret
1375+ A347
1376+ A347              ; ----- ----- ----- ----- -----
1377+ A347
1378+ A347              Compara_coordenadas_X
1379+ A347
1380+ A347 DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1381+ A34B DD 7E 00         ld a,(ix+0)
1382+ A34E CD 5C A3         call Comparando
1383+ A351 C8               ret z
1384+ A352
1385+ A352 3C               inc a
1386+ A353 CD 6B A3         call Comparando_1
1387+ A356 C8               ret z
1388+ A357
1389+ A357 3C               inc a
1390+ A358 CD 6B A3         call Comparando_1
1391+ A35B C9               ret
1392+ A35C
1393+ A35C              ; ----- ----- ----- ----- -----
1394+ A35C              ;
1395+ A35C              ;   4/12/23
1396+ A35C              ;
1397+ A35C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A35C
1399+ A35C              Comparando
1400+ A35C
1401+ A35C DD 2C            inc ixl
1402+ A35E DD 2C            inc ixl
1403+ A360 DD 2C            inc ixl
1404+ A362
1405+ A362 DD 46 00         ld b,(ix+0)
1406+ A365 DD 4E 01         ld c,(ix+1)
1407+ A368 DD 56 02         ld d,(ix+2)
1408+ A36B
1409+ A36B B8           Comparando_1 cp b
1410+ A36C C8               ret z
1411+ A36D B9               cp c
1412+ A36E C8               ret z
1413+ A36F BA               cp d
1414+ A370 C9               ret
1415+ A371
1416+ A371              ; -----------------------------------------------------------------------
1417+ A371              ;
1418+ A371              ;   04/7/24
1419+ A371              ;
1420+ A371
1421+ A371              Detecta_colision_nave_entidad
1422+ A371
1423+ A371              ; Exclusiones:
1424+ A371
1425+ A371              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A371
1427+ A371 21 6C 8C     	ld hl,Impacto2
1428+ A374 CB 56        	bit 2,(hl)
1429+ A376 C8           	ret z
1430+ A377
1431+ A377              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A377
1433+ A377 2A BE 89         ld hl,(Pamm_Amadeus)
1434+ A37A CD F2 90         call Extrae_address
1435+ A37D 54               ld d,h
1436+ A37E 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A37F
1438+ A37F 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A382 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A384 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A387
1442+ A387 C5           1 push bc
1443+ A388 06 03            ld b,3
1444+ A38A E5               push hl
1445+ A38B
1446+ A38B              ; .db
1447+ A38B
1448+ A38B 1A           3 ld a,(de)
1449+ A38C A7               and a
1450+ A38D 20 03            jr nz,4F
1451+ A38F
1452+ A38F 2C               inc l
1453+ A390 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A392
1455+ A392 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A394 28 04            jr z,2F
1457+ A396
1458+ A396              ; Impacto.
1459+ A396 FD 2D            dec iyl
1460+ A398 28 22            jr z,5F
1461+ A39A
1462+ A39A 1C           2 inc e
1463+ A39B 10 EE            djnz 3B
1464+ A39D
1465+ A39D E1               pop hl
1466+ A39E
1467+ A39E              ; Hay salto de línea en el puntero de impresión ???
1468+ A39E
1469+ A39E 7C               ld a,h
1470+ A39F D6 57            sub $57
1471+ A3A1 20 0A            jr nz,6F
1472+ A3A3
1473+ A3A3              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3A3
1475+ A3A3 2A BC 89         ld hl,(p.imp.amadeus)
1476+ A3A6 3E 20            ld a,$20
1477+ A3A8 A7               and a
1478+ A3A9 85               add l
1479+ A3AA 6F               ld l,a
1480+ A3AB 18 01            jr 7F
1481+ A3AD
1482+ A3AD 24           6 inc h
1483+ A3AE
1484+ A3AE C1           7 pop bc
1485+ A3AF 10 D6            djnz 1B
1486+ A3B1
1487+ A3B1              ;   Fin de la comparativa.
1488+ A3B1
1489+ A3B1              ;   NO HAY COLISIÓN !!!!!.
1490+ A3B1              ;
1491+ A3B1              ;   .db (Impacto) de Amadeus a "0".
1492+ A3B1              ;   RES el bit2 de (Impacto2).
1493+ A3B1              ;
1494+ A3B1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3B1              ;   Lo colocamos a "0".
1496+ A3B1
1497+ A3B1 21 6C 8C         ld hl,Impacto2
1498+ A3B4 CB 96            res 2,(hl)
1499+ A3B6 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3B9 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3BB C9               ret
1502+ A3BC
1503+ A3BC              ;   COLISIÓN !!!!!.
1504+ A3BC              ;
1505+ A3BC              ;   .db (Impacto) de Amadeus a "1".
1506+ A3BC              ;   SET el bit3 de (Impacto2).
1507+ A3BC              ;
1508+ A3BC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3BC
1510+ A3BC E1           5 pop hl
1511+ A3BD C1               pop bc
1512+ A3BE
1513+ A3BE 21 BB 89         ld hl,Impacto_Amadeus
1514+ A3C1 36 01            ld (hl),1
1515+ A3C3 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3C6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3C8
1518+ A3C8 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3CB 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3CE
1521+ A3CE 23               inc hl
1522+ A3CF 23               inc hl
1523+ A3D0 23               inc hl
1524+ A3D1
1525+ A3D1 73               ld (hl),e
1526+ A3D2 23               inc hl
1527+ A3D3 72               ld (hl),d
1528+ A3D4
1529+ A3D4              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3D4
1531+ A3D4 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3D7 21 BE 89         ld hl,Pamm_Amadeus
1533+ A3DA
1534+ A3DA 73               ld (hl),e
1535+ A3DB 23               inc hl
1536+ A3DC 72               ld (hl),d
1537+ A3DD
1538+ A3DD C9               ret
1539+ A3DE
1540+ A3DE
1541+ A3DE
# file closed: Disparo.asm
2068  A3DE
2069  A3DE              	SAVESNA "Pruebas.sna", START
2070  A3DE
2071  A3DE
2072  A3DE
2073  A3DE
# file closed: Banco_de_pruebas.asm
