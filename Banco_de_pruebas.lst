# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 17 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  34  AA15              ; Pintamos Amadeus.
  35  AA15
  36  AA15 CD 64 8E     	call Pinta_entidades
  37  AA18 CD 56 8E     	call Pinta_Amadeus
  38  AA1B CD 0B 8E     	call Gestiona_entidades
  39  AA1E CD DE 8A     	call Gestiona_Amadeus
  40  AA21
  41  AA21              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  42  AA21
  43  AA21 CD 77 8E     	call Actualiza_relojes
  44  AA24
  45  AA24
  46  AA24 FD E1        	pop iy
  47  AA26 DD E1        	pop ix
  48  AA28 F1           	pop af
  49  AA29 C1           	pop bc
  50  AA2A D1           	pop de
  51  AA2B E1           	pop hl
  52  AA2C D9           	exx
  53  AA2D C1           	pop bc
  54  AA2E D1           	pop de
  55  AA2F E1           	pop hl
  56  AA30 08           	ex af,af'
  57  AA31 F1           	pop af
  58  AA32 08           	ex af,af'
  59  AA33 D9           	exx
  60  AA34
  61  AA34 ED 7B 17 89  	ld sp,(Stack_3)
  62  AA38
  63  AA38 FB           	ei
  64  AA39 ED 4D        	reti
  65  AA3B
  66  AA3B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  67  AA3B
  68  AA3B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3B              ;
   3+ AA3B              ;	17/02/23
   4+ AA3B              ;
   5+ AA3B              ;	Sprites e índices.
   6+ AA3B
   7+ AA3B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1D 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 23 89        	defw End_Snapshot_1
 267+ 8500 27 89        	defw End_Snapshot_2
 268+ 8502 2B 89        	defw End_Snapshot_3
 269+ 8504 1F 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 25 89        	defw End_Snapshot_disparos_1
 271+ 8508 29 89        	defw End_Snapshot_disparos_2
 272+ 850A 2D 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  69  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 5B 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 5B 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  70  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5A 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD 9C 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0B 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5C 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD 9C 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5C 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 11 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 09 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD 9C 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5C 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5C 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD 9C 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 05 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 09 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 05 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 12 00     	ld bc,18
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0B 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0B 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0C 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0C 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  71  88C5
  72  88C5              ; ******************************************************************************************************************************************************************************************
  73  88C5              ; Constantes.
  74  88C5              ; ******************************************************************************************************************************************************************************************
  75  88C5              ;
  76  88C5              ; 4/9/23
  77  88C5              ;
  78  88C5              ; Constantes generales.
  79  88C5              ;
  80  88C5
  81  88C5              Sprite_vacio equ $f000
  82  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  83  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  84  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  85  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  86  88C5
  87  88C5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  88  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  89  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  90  88C5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  91  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  92  88C5              ;
  93  88C5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  94  88C5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  95  88C5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  96  88C5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  97  88C5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  98  88C5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  99  88C5
 100  88C5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 101  88C5
 102  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 103  88C5
 104  88C5              ; ******************************************************************************************************************************************************************************************
 105  88C5              ; Variables.
 106  88C5              ; ******************************************************************************************************************************************************************************************
 107  88C5              ;
 108  88C5              ; 28/07/23
 109  88C5              ;
 110  88C5              ; Variables de DRAW. (Motor principal).
 111  88C5              ;
 112  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 113  88C5
 114  88C5 00           Filas db 0												; Filas. [DRAW]
 115  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 116  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 117  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 118  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 119  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 120  88CD
 121  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 122  88CD
 123  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 124  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 125  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 126  88CE 00           Attr db 0												; Atributos de la entidad:
 127  88CF
 128  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 129  88CF              ;
 130  88CF              ;	COLORES: 0 ..... NEGRO
 131  88CF              ;    		 1 ..... AZUL
 132  88CF              ; 			 2 ..... ROJO
 133  88CF              ;			 3 ..... MAGENTA
 134  88CF              ; 			 4 ..... VERDE
 135  88CF              ; 			 5 ..... CIAN
 136  88CF              ;			 6 ..... AMARILLO
 137  88CF              ; 			 7 ..... BLANCO
 138  88CF
 139  88CF 00 00        Indice_Sprite_der defw 0
 140  88D1 00 00        Indice_Sprite_izq defw 0
 141  88D3 00 00        Puntero_DESPLZ_der defw 0
 142  88D5 00 00        Puntero_DESPLZ_izq defw 0
 143  88D7
 144  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 145  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 146  88DA
 147  88DA              ; Variables de objeto. (Características).
 148  88DA
 149  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 150  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 151  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 152  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 153  88DE
 154  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 155  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 156  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 157  88DF 00 00 00...  Variables_de_borrado ds 6
 158  88E5
 159  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 160  88E7 00 00        	defw 0
 161  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 162  88EB 00 00 00 00  	db 0,0,0,0
 163  88EF
 164  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 165  88EF
 166  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 167  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 168  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 169  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 170  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 171  88F0              ;
 172  88F0              ; 														DESCRIPCIÖN:
 173  88F0              ;
 174  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 175  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 176  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 177  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 178  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 179  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 180  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 181  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 182  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 183  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 184  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 185  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 186  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 187  88F0              ;
 188  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 189  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 190  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 191  88F0
 192  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 193  88F0
 194  88F0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 195  88F2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 196  88F4 00 00        Puntero_indice_mov_bucle defw 0							;
 197  88F6              ;
 198  88F6              ;
 199  88F6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 200  88F7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 201  88F7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 202  88F7 00           Incrementa_puntero_backup db 0
 203  88F8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 204  88F9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 205  88F9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 206  88FA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 207  88FB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 208  88FC              ;
 209  88FC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 210  88FC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 211  88FC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 212  88FC              ;
 213  88FC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 214  88FC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 215  88FC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 216  88FC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 217  88FC              ;
 218  88FC              ;														;	"$ff" ..... Bucle infinito de repetición.
 219  88FC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 220  88FC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 221  88FC
 222  88FC
 223  88FC              ; Variables de funcionamiento. [DRAW].
 224  88FC
 225  88FC 00           Columnas db 0
 226  88FD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 227  88FF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 228  88FF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 229  8900
 230  8900              ; variables de control general.
 231  8900
 232  8900 00           Ctrl_2 db 0
 233  8901              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 234  8901              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 235  8901              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 236  8901              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 237  8901              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 238  8901              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 239  8901              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 240  8901              ;
 241  8901              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 242  8901              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 243  8901              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 244  8901              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 245  8901              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 246  8901
 247  8901 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 248  8902
 249  8902              ;! 61 Bytes por entidad.
 250  8902
 251  8902              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 252  8902              ;					         		---------;      ;---------
 253  8902
 254  8902
 255  8902              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 256  8902
 257  8902 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 258  8903
 259  8903              ;														DESCRIPCIÓN:
 260  8903              ;
 261  8903              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 262  8903              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 263  8903              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 264  8903              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 265  8903              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 266  8903              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 267  8903
 268  8903              ;														BIT 3, Recarga de nueva oleada.
 269  8903              ;														BIT 4, Recarga de nueva oleada.
 270  8903              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 271  8903              ;														BIT 6, **** Frame completo.
 272  8903              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 273  8903
 274  8903 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 275  8905              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 276  8905              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 277  8905              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 278  8905
 279  8905
 280  8905
 281  8905              ; Gestión de ENTIDADES y CAJAS.
 282  8905
 283  8905 00 00        Puntero_store_caja defw 0
 284  8907 00 00        Puntero_restore_caja defw 0
 285  8909 00 00        Indice_restore_caja defw 0
 286  890B 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 287  890C 00           Numero_parcial_de_entidades db 0
 288  890D 00           Entidades_en_curso db 0									; ..... ..... .....
 289  890E 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 290  890F              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 291  890F              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 292  890F              ;														; _ (Numero_de_malotes)="0".
 293  890F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 294  8911 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 295  8913              ;														; _ puntero (Indice_entidades).
 296  8913
 297  8913
 298  8913              ;---------------------------------------------------------------------------------------------------------------
 299  8913              ;
 300  8913              ;	2/9/23
 301  8913              ;
 302  8913              ;	Álbumes.
 303  8913
 304  8913 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 305  8915              ;														; _variable para almacenar lo posición del puntero_
 306  8915              ; 														; _de pila, SP.
 307  8915 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 308  8917              ;														; La utiliza la rutina [Extrae_foto_registros].
 309  8917 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 310  8919 00 00        Stack_snapshot defw 0
 311  891B 00 00        Stack_snapshot_disparos defw 0
 312  891D
 313  891D 00 00        End_Snapshot defw 0
 314  891F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 315  891F 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 316  8921              ;														; _el snapshot de los registros del siguiente disparo.
 317  8921              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 318  8921 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 319  8923 00 00        End_Snapshot_1 defw 0
 320  8925 00 00        End_Snapshot_disparos_1 defw 0
 321  8927 00 00        End_Snapshot_2 defw 0
 322  8929 00 00        End_Snapshot_disparos_2 defw 0
 323  892B 00 00        End_Snapshot_3 defw 0
 324  892D 00 00        End_Snapshot_disparos_3 defw 0
 325  892F
 326  892F 00 00        Puntero_indice_album_de_fotos defw 0
 327  8931 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 328  8933
 329  8933 00 00        Puntero_indice_End_Snapshot defw 0
 330  8935 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 331  8937 00 00        Puntero_de_End_Snapshot defw 0
 332  8939 00 00        Puntero_de_End_Snapshot_disparos defw 0
 333  893B
 334  893B              ;---------------------------------------------------------------------------------------------------------------
 335  893B
 336  893B              ; Gestión de Disparos.
 337  893B
 338  893B 00           Numero_de_disparotes db 0
 339  893C 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 340  893E 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 341  8940 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 342  8941              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 343  8941              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 344  8941 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 345  8943              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 346  8943              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 347  8943              ;														; _produzca colisión.
 348  8943 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 349  8945              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 350  8945 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 351  8948              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 352  8948 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 353  894B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 354  894B 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 355  894D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 356  894E
 357  894E              ;---------------------------------------------------------------------------------------------------------------
 358  894E
 359  894E              ; Relojes y temporizaciones.
 360  894E
 361  894E 00           Contador_de_frames db 0
 362  894F 00           Contador_de_frames_2 db 0
 363  8950
 364  8950 04           Clock_explosion db 4
 365  8951 1E           Clock_Entidades_en_curso db 30
 366  8952 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 367  8953              ;														; Repite la oleada de entidades.
 368  8953 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 369  8954 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 370  8955 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 371  8956
 372  8956 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 373  8957 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 374  8958 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 375  8959
 376  8959              ;---------------------------------------------------------------------------------------------------------------
 377  8959
 378  8959              ; Gestión de NIVELES.
 379  8959
 380  8959 00           Nivel db 0												; Nivel actual del juego.
 381  895A 00 00        Puntero_indice_NIVELES defw 0
 382  895C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 383  895E              ; 														; _ que definen el NIVEL.
 384  895E              ; Y todo comienza aquí .....
 385  895E              ;
 386  895E              ; Rutina principal *************************************************************************************************************************************************************************
 387  895E              ;
 388  895E              ;	14/11/22
 389  895E
 390  895E              START
 391  895E
 392  895E 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 393  8961 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 394  8963 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 395  8965 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 396  8967 F3           	DI
 397  8968
 398  8968 3E 07        	ld a,%00000111
 399  896A CD 88 99     	call Cls
 400  896D
 401  896D CD 75 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 402  8970
 403  8970              ; INICIALIZACIÓN.
 404  8970
 405  8970 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 406  8973
 407  8973 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 408  8976
 409  8976 CD 9E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 410  8979              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 411  8979 CD B4 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 412  897C              ;													     ; _ malotes antes de guardar ninguna foto.
 413  897C              ; ----------
 414  897C
 415  897C CD 25 8D     	call Restore_entidad
 416  897F
 417  897F 21 0C 89     	ld hl,Numero_parcial_de_entidades
 418  8982 46           	ld b,(hl)
 419  8983 04           	inc b
 420  8984 05           	dec b
 421  8985 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 422  8987
 423  8987              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 424  8987              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 425  8987              ;	Pintamos el resto de entidades:
 426  8987
 427  8987              ;	INICIA ENTIDADES !!!!!
 428  8987
 429  8987 C5           1 push bc  												; Guardo el contador de entidades.
 430  8988 CD 6B 8B     	call Inicia_entidad
 431  898B C1           	pop bc
 432  898C 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 433  898E
 434  898E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 435  898E              ; (Esto se dá cuando se inicia una nueva oleada).
 436  898E
 437  898E 3A 02 89     	ld a,(Ctrl_1)
 438  8991 CB 5F        	bit 3,a
 439  8993 20 15        	jr nz,5F											; Loop
 440  8995
 441  8995              ; 	INICIA AMADEUS !!!!!
 442  8995
 443  8995 CD 4C 8D     3 call Restore_Amadeus
 444  8998 CD A2 8C     	call Inicia_Puntero_objeto
 445  899B CD 7B 93     	call Draw
 446  899E CD A0 7F     	call Guarda_foto_registros
 447  89A1 CD D8 8D     	call Guarda_datos_de_borrado_Amadeus
 448  89A4
 449  89A4 11 9E 85     	ld de,Amadeus_db
 450  89A7 CD 5E 8D     	call Store_Amadeus
 451  89AA
 452  89AA              ; 	INICIA DISPAROS !!!!!
 453  89AA
 454  89AA              ;	call Inicia_Puntero_Disparo_Entidades
 455  89AA              ;	call Inicia_Puntero_Disparo_Amadeus
 456  89AA
 457  89AA              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 458  89AA
 459  89AA CD 9E 8B     5 call Inicia_punteros_de_cajas
 460  89AD CD 25 8D     	call Restore_entidad
 461  89B0
 462  89B0 3A 02 89     	ld a,(Ctrl_1)
 463  89B3 CB 5F        	bit 3,a
 464  89B5 28 07        	jr z,6F
 465  89B7
 466  89B7              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 467  89B7
 468  89B7 21 02 89     	ld hl,Ctrl_1
 469  89BA CB 9E        	res 3,(hl)
 470  89BC 18 04        	jr Main
 471  89BE
 472  89BE
 473  89BE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 474  89BE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 475  89BE              ; _ para situarnos en el siguiente album.
 476  89BE
 477  89BE CD E5 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 478  89C1 F3           	di
 479  89C2
 480  89C2              ; ------------------------------------
 481  89C2
 482  89C2              Main
 483  89C2              ;
 484  89C2              ;	3/8/23
 485  89C2
 486  89C2 3E 01            ld a,1
 487  89C4 D3 FE        	out ($fe),a											; Azul.
 488  89C6
 489  89C6 FB           	ei
 490  89C7
 491  89C7 3A 51 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 492  89CA 47           	ld b,a
 493  89CB 3A 4E 89     	ld a,(Contador_de_frames)
 494  89CE B8           	cp b
 495  89CF 20 18        	jr nz,13F
 496  89D1
 497  89D1 3A 0C 89     	ld a,(Numero_parcial_de_entidades)
 498  89D4 47           	ld b,a
 499  89D5 3A 0D 89     	ld a,(Entidades_en_curso)
 500  89D8 B8           	cp b
 501  89D9 28 0E        	jr z,13F
 502  89DB 30 0C        	jr nc,13F
 503  89DD
 504  89DD 3C           	inc a
 505  89DE 32 0D 89     	ld (Entidades_en_curso),a
 506  89E1
 507  89E1 3A 51 89     	ld a,(Clock_Entidades_en_curso)
 508  89E4
 509  89E4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 510  89E4              ;! _ IMPREDECIBLE !!!!
 511  89E4
 512  89E4 C6 64        	add 100
 513  89E6 32 51 89     	ld (Clock_Entidades_en_curso),a
 514  89E9
 515  89E9              ; Habilita disparos.
 516  89E9
 517  89E9 21 53 89     13 ld hl,Disparo_Amadeus
 518  89EC 11 55 89     	ld de,CLOCK_repone_disparo_Amadeus
 519  89EF CD 4C 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 520  89F2
 521  89F2 21 56 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 522  89F5 11 58 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 523  89F8 CD 4C 9D     	call Habilita_disparos
 524  89FB
 525  89FB              ; COLISIONES.
 526  89FB
 527  89FB CD 5D 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 528  89FE
 529  89FE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 530  89FE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 531  89FE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 532  89FE
 533  89FE AF           	xor a
 534  89FF 32 40 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 535  8A02
 536  8A02 CD 9E 8B     	call Inicia_punteros_de_cajas
 537  8A05 CD 25 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 538  8A08              ; 														; _ en DRAW.
 539  8A08 3A C5 88     	ld a,(Filas)
 540  8A0B A7           	and a
 541  8A0C 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 542  8A0E CD 37 8D     	call Incrementa_punteros_de_cajas
 543  8A11 18 F2        	jr 12B
 544  8A13
 545  8A13              ; ---------------------------------------------------------------------------------------
 546  8A13
 547  8A13 3A 0C 89     10 ld a,(Numero_parcial_de_entidades)
 548  8A16 47               ld b,a
 549  8A17 A7           	and a
 550  8A18 20 14        	jr nz,11F
 551  8A1A
 552  8A1A 21 02 89     	ld hl,Ctrl_1
 553  8A1D CB 66        	bit 4,(hl)
 554  8A1F C2 AF 8A     	jp nz,16F
 555  8A22
 556  8A22 21 02 89     	ld hl,Ctrl_1
 557  8A25 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 558  8A27
 559  8A27 3A 4E 89     	ld a,(Contador_de_frames)
 560  8A2A 3C           	inc a
 561  8A2B 32 52 89     	ld (Activa_recarga_cajas),a
 562  8A2E
 563  8A2E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 564  8A2E
 565  8A2E 3A 0D 89     11 ld a,(Entidades_en_curso)
 566  8A31 A7           	and a
 567  8A32 CA AF 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 568  8A35 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 569  8A36
 570  8A36              ; Código que ejecutamos con cada entidad:
 571  8A36              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 572  8A36
 573  8A36 C5           15 push bc 												; Nº de entidades en curso.
 574  8A37
 575  8A37              ; Impacto ???
 576  8A37
 577  8A37 3A DE 88     	ld a,(Impacto)
 578  8A3A A7           	and a
 579  8A3B 28 32        	jr z,8F
 580  8A3D
 581  8A3D              ; Hay Impacto en esta entidad.
 582  8A3D
 583  8A3D 21 50 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 584  8A40 35           	dec (hl)
 585  8A41 20 66        	jr nz,17F
 586  8A43
 587  8A43              ;! Velocidad de la animación de la explosión.
 588  8A43
 589  8A43 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 590  8A45              ;														; _,(velocidad de la explosión).
 591  8A45
 592  8A45              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 593  8A45 18 FE        	jr $
 594  8A47
 595  8A47 CD F8 8D     	call Repone_datos_de_borrado
 596  8A4A CD 3E 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 597  8A4D
 598  8A4D
 599  8A4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 600  8A4D
 601  8A4D 3A 00 89     	ld a,(Ctrl_2)
 602  8A50 CB 4F        	bit 1,a
 603  8A52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 604  8A54
 605  8A54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 606  8A54
 607  8A54 3A CD 88     	ld a,(CTRL_DESPLZ)
 608  8A57 A7           	and a
 609  8A58 20 08        	jr nz,18F
 610  8A5A
 611  8A5A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 612  8A5D 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 613  8A60 18 06        	jr 19F
 614  8A62
 615  8A62 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 616  8A65 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 617  8A68
 618  8A68 21 00 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 619  8A6B CB CE        	set 1,(hl)
 620  8A6D 18 22        	jr 7F
 621  8A6F
 622  8A6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 623  8A6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 624  8A6F
 625  8A6F 3A 02 89     8 ld a,(Ctrl_1)
 626  8A72 CB 57        	bit 2,a
 627  8A74 28 1B        	jr z,7F
 628  8A76
 629  8A76 2A 43 89     	ld hl,(Coordenadas_disparo_certero)
 630  8A79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 631  8A7A              ;														; E contiene la coordenada_X del disparo.
 632  8A7A 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 633  8A7D              ;														; H FILA, (Coordenada_y de la entidad).
 634  8A7D A7           	and a
 635  8A7E ED 52        	sbc hl,de
 636  8A80
 637  8A80 CD 94 92     	call Determina_resultado_comparativa
 638  8A83
 639  8A83 78           	ld a,b
 640  8A84 A7           	and a
 641  8A85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 642  8A87
 643  8A87              ; ----- ----- -----
 644  8A87
 645  8A87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 646  8A89 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 647  8A8C
 648  8A8C 21 02 89     	ld hl,Ctrl_1
 649  8A8F CB 96        	res 2,(hl)
 650  8A91
 651  8A91 CD 07 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 652  8A94
 653  8A94 3A EF 88     	ld a,(Ctrl_0)
 654  8A97 CB 67        	bit 4,a
 655  8A99 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 656  8A9B
 657  8A9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 658  8A9B              ; [[[
 659  8A9B CD C0 8D     	call Detecta_disparo_entidad
 660  8A9E              ; ]]]
 661  8A9E
 662  8A9E CD 7F 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 663  8AA1 CD C6 8D     	call Guarda_datos_de_borrado
 664  8AA4
 665  8AA4 21 EF 88     	ld hl,Ctrl_0
 666  8AA7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 667  8AA9
 668  8AA9 CD EA 8C     17 call Store_Restore_cajas
 669  8AAC
 670  8AAC C1           	pop bc
 671  8AAD 10 87        	djnz 15B
 672  8AAF
 673  8AAF              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 674  8AAF              ; Hemos gestionado todas las unidades.
 675  8AAF              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 676  8AAF
 677  8AAF              ;	ld hl,Ctrl_1
 678  8AAF              ;	res 2,(hl)
 679  8AAF
 680  8AAF CD E5 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 681  8AB2              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 682  8AB2              ;														; _ interrupción.
 683  8AB2              ; ----------------------------------------
 684  8AB2
 685  8AB2 3A 02 89     	ld a,(Ctrl_1) 										; Existe Loop?
 686  8AB5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 687  8AB7 CA C2 89     	jp z,Main
 688  8ABA
 689  8ABA 3A 4E 89     	ld a,(Contador_de_frames)
 690  8ABD 47           	ld b,a
 691  8ABE 3A 52 89     	ld a,(Activa_recarga_cajas)
 692  8AC1 B8           	cp b
 693  8AC2 28 08        	jr z,20F
 694  8AC4
 695  8AC4 21 02 89     	ld hl,Ctrl_1
 696  8AC7 CB E6        	set 4,(hl)
 697  8AC9 C3 C2 89     	jp Main
 698  8ACC
 699  8ACC 21 02 89     20 ld hl,Ctrl_1
 700  8ACF CB A6        	res 4,(hl)
 701  8AD1
 702  8AD1 F3           	di
 703  8AD2
 704  8AD2 3A 4E 89     	ld a,(Contador_de_frames)
 705  8AD5
 706  8AD5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 707  8AD5              ;! _ IMPREDECIBLE !!!!
 708  8AD5
 709  8AD5 C6 0A        	add 10
 710  8AD7 32 51 89     	ld (Clock_Entidades_en_curso),a
 711  8ADA
 712  8ADA C3 73 89     	jp 4B
 713  8ADD
 714  8ADD C9           	ret
 715  8ADE
 716  8ADE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 717  8ADE
 718  8ADE              Gestiona_Amadeus
 719  8ADE
 720  8ADE 3E 04            ld a,4
 721  8AE0 D3 FE        	out ($fe),a											; Azul.
 722  8AE2
 723  8AE2 CD 4C 8D     	call Restore_Amadeus
 724  8AE5
 725  8AE5              ;! Activa/desactiva impacto con Amadeus.
 726  8AE5
 727  8AE5 3A DE 88     	ld a,(Impacto)
 728  8AE8 A7           	and a
 729  8AE9 20 FE        	jr nz,$
 730  8AEB
 731  8AEB CD 58 8B     	call Mov_Amadeus
 732  8AEE
 733  8AEE 3A EF 88     	ld a,(Ctrl_0)
 734  8AF1 CB 67        	bit 4,a
 735  8AF3 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 736  8AF5
 737  8AF5 CD 7F 8B     	call Guarda_foto_entidad_a_pintar
 738  8AF8 CD D8 8D     	call Guarda_datos_de_borrado_Amadeus
 739  8AFB
 740  8AFB 21 EF 88     14 ld hl,Ctrl_0
 741  8AFE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 742  8B00
 743  8B00 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 744  8B03 CD 5E 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 745  8B06
 746  8B06              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 747  8B06
 748  8B06              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 749  8B06
 750  8B06              ;	call Calcula_numero_de_disparotes
 751  8B06
 752  8B06 C9           	ret
 753  8B07
 754  8B07              ; --------------------------------------------------------------------------------------------------------------
 755  8B07              ;
 756  8B07              ;	27/05/23
 757  8B07
 758  8B07              Mov_obj
 759  8B07
 760  8B07 3A 00 89     	ld a,(Ctrl_2)
 761  8B0A CB 4F        	bit 1,a
 762  8B0C 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 763  8B0E
 764  8B0E              ; Explosión:
 765  8B0E
 766  8B0E 3A 01 89     	ld a,(Frames_explosion)
 767  8B11 A7           	and a
 768  8B12 20 11        	jr nz,4F
 769  8B14
 770  8B14              ; Una alimaña menos!!!!!!!!!1
 771  8B14
 772  8B14 CD 67 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 773  8B17 21 0C 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 774  8B1A 35           	dec (hl)
 775  8B1B 21 0D 89     	ld hl,Entidades_en_curso
 776  8B1E 35           	dec (hl)
 777  8B1F 21 0B 89     	ld hl,Numero_de_entidades
 778  8B22 35           	dec (hl)
 779  8B23 18 32        	jr 3F
 780  8B25
 781  8B25              ; -----
 782  8B25
 783  8B25              ;	`Movemos´ la explosión.
 784  8B25
 785  8B25 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 786  8B28 23           	inc hl
 787  8B29 23           	inc hl
 788  8B2A 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 789  8B2D CD 9C 8C     	call Extrae_address
 790  8B30 22 C9 88     	ld (Puntero_objeto),hl
 791  8B33
 792  8B33 21 01 89     	ld hl,Frames_explosion
 793  8B36 35           	dec (hl)
 794  8B37
 795  8B37              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 796  8B37 18 1E        	jr 3F
 797  8B39
 798  8B39 AF           2 xor a
 799  8B3A 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 800  8B3D
 801  8B3D              ; Movemos Entidades malignas.
 802  8B3D
 803  8B3D CD F7 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 804  8B40
 805  8B40 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 806  8B43 CB 67        	bit 4,a
 807  8B45 C8           	ret z
 808  8B46
 809  8B46              ; Ha habido desplazamiento de la entidad maligna.
 810  8B46              ; Ha llegado a zona de AMADEUS ???
 811  8B46
 812  8B46 3A CC 88     	ld a,(Coordenada_y)
 813  8B49 FE 14        	cp $14
 814  8B4B D4 22 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 815  8B4E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 816  8B4E              ; ---------
 817  8B4E
 818  8B4E CD 86 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 819  8B51 CD F8 8D     	call Repone_datos_de_borrado
 820  8B54 CD 3E 8C     	call Limpia_Variables_de_borrado
 821  8B57
 822  8B57 C9           3 ret													; _de la misma.
 823  8B58
 824  8B58              ; --------------------------------------------------------------------------------------------------------------
 825  8B58              ;
 826  8B58              ;	29/1/23
 827  8B58
 828  8B58              Mov_Amadeus
 829  8B58
 830  8B58 CD 89 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 831  8B5B
 832  8B5B 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 833  8B5E CB 67        	bit 4,a
 834  8B60 C8           	ret z
 835  8B61
 836  8B61              ; ---------
 837  8B61
 838  8B61 CD 86 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 839  8B64 CD E8 8D     	call Repone_datos_de_borrado_Amadeus
 840  8B67 CD 3E 8C     	call Limpia_Variables_de_borrado
 841  8B6A
 842  8B6A C9           	ret
 843  8B6B
 844  8B6B              ; -----------------------------------------------------------------------------------
 845  8B6B
 846  8B6B CD A2 8C     Inicia_entidad	call Inicia_Puntero_objeto
 847  8B6E CD 9C 99     	call Recompone_posicion_inicio
 848  8B71 CD 7B 93     	call Draw
 849  8B74 CD A0 7F     	call Guarda_foto_registros
 850  8B77 CD C6 8D     	call Guarda_datos_de_borrado
 851  8B7A F3           	di
 852  8B7B CD EA 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 853  8B7E C9           	ret
 854  8B7F
 855  8B7F              ; --------------------------------------------------------------------------------------------------------------
 856  8B7F              ;
 857  8B7F              ;	31/08/23
 858  8B7F              ;
 859  8B7F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 860  8B7F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 861  8B7F
 862  8B7F              Guarda_foto_entidad_a_pintar
 863  8B7F
 864  8B7F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 865  8B7F
 866  8B7F CD 7B 93     	call Draw
 867  8B82 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 868  8B85 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 869  8B86
 870  8B86              ; --------------------------------------------------------------------------------------------------------------
 871  8B86              ;
 872  8B86              ;	19/9/23
 873  8B86
 874  8B86 21 C5 88     Prepara_var_pintado ld hl,Filas
 875  8B89 11 E5 88     	ld de,Variables_de_pintado
 876  8B8C 01 08 00     	ld bc,8
 877  8B8F ED B0        	ldir
 878  8B91 C9           	ret
 879  8B92
 880  8B92              ; --------------------------------------------------------------------------------------------------------------
 881  8B92
 882  8B92 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 883  8B95 11 C5 88     	ld de,Filas
 884  8B98 01 08 00     	ld bc,8
 885  8B9B ED B0        	ldir
 886  8B9D C9           	ret
 887  8B9E
 888  8B9E              ; *************************************************************************************************************************************************************
 889  8B9E              ;
 890  8B9E              ; 8/1/23
 891  8B9E              ;
 892  8B9E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 893  8B9E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 894  8B9E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 895  8B9E
 896  8B9E              ; Destruye HL y DE !!!!!
 897  8B9E
 898  8B9E              Inicia_punteros_de_cajas
 899  8B9E
 900  8B9E 21 8C 85     	ld hl,Indice_de_cajas
 901  8BA1 CD 9C 8C         call Extrae_address
 902  8BA4 22 05 89         ld (Puntero_store_caja),hl
 903  8BA7 21 8E 85     	ld hl,Indice_de_cajas+2
 904  8BAA 22 09 89     	ld (Indice_restore_caja),hl
 905  8BAD CD 9C 8C     	call Extrae_address
 906  8BB0 22 07 89     	ld (Puntero_restore_caja),hl
 907  8BB3 C9               ret
 908  8BB4
 909  8BB4              ; ---------------------------------------------------------------
 910  8BB4              ;
 911  8BB4              ;	9/8/23
 912  8BB4              ;
 913  8BB4              ;	Inicialización y gestión de álbumes de fotos y cajas.
 914  8BB4
 915  8BB4              Inicia_punteros_de_albumes_y_malotes
 916  8BB4
 917  8BB4 21 EC 84     	ld hl,Indice_album_de_fotos
 918  8BB7 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 919  8BBA CD 9C 8C     	call Extrae_address
 920  8BBD 22 19 89     	ld (Stack_snapshot),hl
 921  8BC0
 922  8BC0 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 923  8BC3 22 31 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 924  8BC6 CD 9C 8C     	call Extrae_address
 925  8BC9 22 1B 89     	ld (Stack_snapshot_disparos),hl
 926  8BCC
 927  8BCC 21 FC 84     	ld hl,Indice_End_Snapshot
 928  8BCF 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 929  8BD2 CD 9C 8C     	call Extrae_address
 930  8BD5 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 931  8BD8
 932  8BD8 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 933  8BDB 22 35 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 934  8BDE CD 9C 8C     	call Extrae_address
 935  8BE1 22 39 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 936  8BE4
 937  8BE4 C9           	ret
 938  8BE5
 939  8BE5              ;	2/9/23
 940  8BE5
 941  8BE5              Avanza_puntero_de_album_de_fotos_y_malotes
 942  8BE5
 943  8BE5              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 944  8BE5
 945  8BE5              ; Estamos en el último álbum del índice???.
 946  8BE5
 947  8BE5 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
 948  8BE8 01 F2 84     	ld bc,Indice_album_de_fotos+6
 949  8BEB A7           	and a
 950  8BEC ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 951  8BEE 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 952  8BF0
 953  8BF0 21 02 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 954  8BF3 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 955  8BF5 76           	halt
 956  8BF6 C9           	ret
 957  8BF7
 958  8BF7 F3           1 di
 959  8BF8 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
 960  8BFB 23           	inc hl
 961  8BFC 23           	inc hl
 962  8BFD 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 963  8C00 CD 9C 8C     	call Extrae_address
 964  8C03 22 19 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 965  8C06
 966  8C06 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
 967  8C09 23           	inc hl
 968  8C0A 23           	inc hl
 969  8C0B 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 970  8C0E CD 9C 8C     	call Extrae_address
 971  8C11 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 972  8C14 FB           	ei
 973  8C15
 974  8C15 C9           	ret
 975  8C16
 976  8C16              ; *************************************************************************************************************************************************************
 977  8C16              ;
 978  8C16              ; 8/1/23
 979  8C16              ;
 980  8C16              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 981  8C16
 982  8C16 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 983  8C19 22 3C 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 984  8C1C C9           	ret
 985  8C1D 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 986  8C20 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 987  8C23 C9           	ret
 988  8C24
 989  8C24              ; -------------------------------------------------------------------------------------------------------------
 990  8C24              ;
 991  8C24              ; 21/9/23
 992  8C24              ;
 993  8C24
 994  8C24              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 995  8C24
 996  8C24              Limpia_album_Amadeus
 997  8C24
 998  8C24 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 999  8C27 7E           	ld a,(hl)
1000  8C28 A7           	and a
1001  8C29 C8           	ret z
1002  8C2A
1003  8C2A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1004  8C2D 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1005  8C30 01 0B 00     	ld bc,11
1006  8C33 AF           	xor a
1007  8C34 77           	ld (hl),a
1008  8C35 ED B0        	ldir
1009  8C37
1010  8C37 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1011  8C3A 22 21 89     	ld (End_Snapshot_Amadeus),hl
1012  8C3D
1013  8C3D C9           	ret
1014  8C3E
1015  8C3E 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1016  8C41 11 E0 88     	ld de,Variables_de_borrado+1
1017  8C44 01 05 00     	ld bc,5
1018  8C47 AF           	xor a
1019  8C48 77           	ld (hl),a
1020  8C49 ED B0        	ldir
1021  8C4B C9           	ret
1022  8C4C
1023  8C4C              ; -------------------------------------------------------------------------------------------------------------
1024  8C4C              ;
1025  8C4C              ; 8/9/23
1026  8C4C              ;
1027  8C4C
1028  8C4C              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1029  8C4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1030  8C4C
1031  8C4C              Calcula_numero_de_malotes
1032  8C4C
1033  8C4C 21 00 70     	ld hl,Album_de_fotos
1034  8C4F EB           	ex de,hl
1035  8C50 2A 1D 89     	ld hl,(End_Snapshot)
1036  8C53
1037  8C53 7C           	ld a,h
1038  8C54 A7           	and a
1039  8C55 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1040  8C57
1041  8C57 06 00        4 ld b,0
1042  8C59 7D           	ld a,l
1043  8C5A 93           	sub e
1044  8C5B 28 07        	jr z,1F
1045  8C5D
1046  8C5D              ; Nº de malotes no es "0".
1047  8C5D
1048  8C5D D6 06        2 sub 6
1049  8C5F 04           	inc b
1050  8C60 A7           	and a
1051  8C61 20 FA        	jr nz,2B
1052  8C63 78           	ld a,b
1053  8C64
1054  8C64 32 0E 89     1 ld (Numero_de_malotes),a
1055  8C67 C9           	ret
1056  8C68
1057  8C68              ; -------------------------------------------------------------------------------------------------------------
1058  8C68              ;
1059  8C68              ; 8/9/23
1060  8C68              ;
1061  8C68
1062  8C68              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1063  8C68              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1064  8C68
1065  8C68              Calcula_malotes_Amadeus
1066  8C68
1067  8C68 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1068  8C6B EB           	ex de,hl
1069  8C6C 2A 21 89     	ld hl,(End_Snapshot_Amadeus)
1070  8C6F
1071  8C6F 7C           	ld a,h
1072  8C70 A7           	and a
1073  8C71 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1074  8C73
1075  8C73 06 00        	ld b,0
1076  8C75 7D           	ld a,l
1077  8C76 93           	sub e
1078  8C77 28 07        	jr z,1F
1079  8C79
1080  8C79              ; Nº de malotes no es "0".
1081  8C79
1082  8C79 D6 06        2 sub 6
1083  8C7B 04           	inc b
1084  8C7C A7           	and a
1085  8C7D 20 FA        	jr nz,2B
1086  8C7F 78           	ld a,b
1087  8C80
1088  8C80 32 0E 89     1 ld (Numero_de_malotes),a
1089  8C83 C9           	ret
1090  8C84
1091  8C84              ; -------------------------------------------------------------------------------------------------------------
1092  8C84              ;
1093  8C84              ; 28/2/23
1094  8C84              ;
1095  8C84
1096  8C84              Calcula_numero_de_disparotes
1097  8C84
1098  8C84 21 50 71     	ld hl,Album_de_fotos_disparos
1099  8C87 EB           	ex de,hl
1100  8C88 2A 39 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1101  8C8B
1102  8C8B 06 00        	ld b,0
1103  8C8D 7D           	ld a,l
1104  8C8E 93           	sub e
1105  8C8F 28 07        	jr z,1F
1106  8C91
1107  8C91              ; Nº de malotes no es "0".
1108  8C91
1109  8C91 D6 06        2 sub 6
1110  8C93 04           	inc b
1111  8C94 A7           	and a
1112  8C95 20 FA        	jr nz,2B
1113  8C97 78           	ld a,b
1114  8C98
1115  8C98 32 3B 89     1 ld (Numero_de_disparotes),a
1116  8C9B C9           	ret
1117  8C9C
1118  8C9C              ; *************************************************************************************************************************************************************
1119  8C9C              ;
1120  8C9C              ; 20/10/22
1121  8C9C              ;
1122  8C9C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1123  8C9C              ;
1124  8C9C              ; Destruye el puntero y DE !!!!!
1125  8C9C
1126  8C9C 5E           Extrae_address ld e,(hl)
1127  8C9D 23           	inc hl
1128  8C9E 56           	ld d,(hl)
1129  8C9F 2B           	dec hl
1130  8CA0 EB           	ex de,hl
1131  8CA1 C9           	ret
1132  8CA2
1133  8CA2              ; *************************************************************************************************************************************************************
1134  8CA2              ;
1135  8CA2              ;	7/2/23
1136  8CA2              ;
1137  8CA2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1138  8CA2              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1139  8CA2              ;
1140  8CA2              ;   Destruye HL y BC !!!!!,
1141  8CA2              ;
1142  8CA2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1143  8CA2              ;					"0" ..... Izquierda.
1144  8CA2
1145  8CA2              Inicia_Puntero_objeto
1146  8CA2
1147  8CA2 3A D9 88     	ld a,(Cuad_objeto)
1148  8CA5 E6 01        	and 1
1149  8CA7 F5           	push af
1150  8CA8 CC C6 8C     	call z,Inicia_puntero_objeto_izq
1151  8CAB F1           	pop af
1152  8CAC 28 2B        	jr z,1F
1153  8CAE CD B3 8C     	call Inicia_puntero_objeto_der
1154  8CB1 18 26        	jr 1F
1155  8CB3
1156  8CB3              ; Arrancamos desde la parte izquierda de la pantalla.
1157  8CB3              ; Iniciamos (Indice_Sprite_der).
1158  8CB3
1159  8CB3 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1160  8CB6 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1161  8CB9 CD 9C 8C     	call Extrae_address
1162  8CBC 22 C9 88     	ld (Puntero_objeto),hl
1163  8CBF
1164  8CBF 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1165  8CC2 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1166  8CC5 C9           	ret
1167  8CC6
1168  8CC6              ; Arrancamos desde la parte derecha de la pantalla.
1169  8CC6              ; Iniciamos (Indice_Sprite_izq).
1170  8CC6
1171  8CC6 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1172  8CC9 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1173  8CCC CD 9C 8C     	call Extrae_address
1174  8CCF 22 C9 88     	ld (Puntero_objeto),hl
1175  8CD2
1176  8CD2 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1177  8CD5 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1178  8CD8 C9           	ret
1179  8CD9
1180  8CD9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1181  8CD9
1182  8CD9 21 40 83     1 ld hl,Amadeus
1183  8CDC ED 4B C9 88  	ld bc,(Puntero_objeto)
1184  8CE0 B7 ED 42     	sub hl,bc
1185  8CE3 C0           	ret nz
1186  8CE4 21 EF 88     	ld hl,Ctrl_0
1187  8CE7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1188  8CE9 C9           	ret 												; _de nuestra nave en los extremos.
1189  8CEA
1190  8CEA              ; *************************************************************************************************************************************************************
1191  8CEA              ;
1192  8CEA              ;	14/5/23
1193  8CEA              ;
1194  8CEA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1195  8CEA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1196  8CEA
1197  8CEA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1198  8CEA              ;	_de la 2ª y 3ª entidad respectivamente.
1199  8CEA
1200  8CEA              Store_Restore_cajas
1201  8CEA
1202  8CEA E5           	push hl
1203  8CEB D5           	push de
1204  8CEC C5            	push bc
1205  8CED
1206  8CED              ;	STORE !!!!!
1207  8CED              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1208  8CED
1209  8CED 21 C5 88     	ld hl,Filas
1210  8CF0 ED 5B 05 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1211  8CF4 01 3D 00     	ld bc,61
1212  8CF7 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1213  8CF9
1214  8CF9              ; 	Entidad_sospechosa. 20/4/23
1215  8CF9
1216  8CF9 3A DE 88     	ld a,(Impacto)
1217  8CFC A7           	and a
1218  8CFD 28 0C        	jr z,1F
1219  8CFF
1220  8CFF 2A 05 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1221  8D02 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1222  8D05 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1223  8D06 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1224  8D08 22 41 89     	ld (Entidad_sospechosa_de_colision),hl
1225  8D0B
1226  8D0B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1227  8D0B
1228  8D0B 2A 07 89     1 ld hl,(Puntero_restore_caja)
1229  8D0E 7E           	ld a,(hl)
1230  8D0F A7           	and a
1231  8D10 F5           	push af
1232  8D11 28 08        	jr z,2F
1233  8D13
1234  8D13 11 C5 88     	ld de,Filas
1235  8D16 01 3D 00     	ld bc,61
1236  8D19 ED B0        	ldir
1237  8D1B
1238  8D1B CD 37 8D     2 call Incrementa_punteros_de_cajas
1239  8D1E F1           	pop af
1240  8D1F 28 EA        	jr z,1B
1241  8D21
1242  8D21 C1           	pop bc
1243  8D22 D1           	pop de
1244  8D23 E1           	pop hl
1245  8D24
1246  8D24 C9           	ret
1247  8D25
1248  8D25              ; **************************************************************************************************
1249  8D25              ;
1250  8D25              ;	12/05/23
1251  8D25              ;
1252  8D25              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1253  8D25
1254  8D25 E5           Restore_entidad push hl
1255  8D26 D5           	push de
1256  8D27 C5            	push bc
1257  8D28
1258  8D28 2A 05 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1259  8D2B 11 C5 88     	ld de,Filas
1260  8D2E 01 3D 00     	ld bc,61
1261  8D31 ED B0        	ldir
1262  8D33
1263  8D33 C1           	pop bc
1264  8D34 D1           	pop de
1265  8D35 E1           	pop hl
1266  8D36 C9           	ret
1267  8D37
1268  8D37
1269  8D37              ; **************************************************************************************************
1270  8D37              ;
1271  8D37              ;	08/05/23
1272  8D37              ;
1273  8D37              ;	Incrementamos los dos punteros de entidades. (+1).
1274  8D37
1275  8D37 2A 07 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1276  8D3A 22 05 89     	ld (Puntero_store_caja),hl
1277  8D3D 2A 09 89     	ld hl,(Indice_restore_caja)
1278  8D40 23           	inc hl
1279  8D41 23           	inc hl
1280  8D42 22 09 89     	ld (Indice_restore_caja),hl
1281  8D45 CD 9C 8C         call Extrae_address
1282  8D48 22 07 89         ld (Puntero_restore_caja),hl
1283  8D4B C9               ret
1284  8D4C
1285  8D4C              ; **************************************************************************************************
1286  8D4C              ;
1287  8D4C              ;	25/01/23
1288  8D4C              ;
1289  8D4C              ;	Restore_Amadeus
1290  8D4C              ;
1291  8D4C              ;	Cargamos en DRAW los parámetros de Amadeus.
1292  8D4C              ;
1293  8D4C
1294  8D4C E5           Restore_Amadeus	push hl
1295  8D4D D5           	push de
1296  8D4E C5            	push bc
1297  8D4F 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1298  8D52 11 C5 88     	ld de,Filas
1299  8D55 01 3D 00     	ld bc,61
1300  8D58 ED B0        	ldir
1301  8D5A C1           	pop bc
1302  8D5B D1           	pop de
1303  8D5C E1           	pop hl
1304  8D5D C9           	ret
1305  8D5E
1306  8D5E              ; *************************************************************************************************************************************************************
1307  8D5E              ;
1308  8D5E              ;	29/04/23
1309  8D5E              ;
1310  8D5E              ;	Store_Amadeus
1311  8D5E              ;
1312  8D5E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1313  8D5E              ;
1314  8D5E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1315  8D5E              ;
1316  8D5E              ;	DESTRUYE: HL y BC y DE.
1317  8D5E
1318  8D5E 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1319  8D61 01 3D 00     	ld bc,61
1320  8D64 ED B0        	ldir
1321  8D66 C9           	ret
1322  8D67
1323  8D67              ; -----------------------------------------------------------
1324  8D67              ;
1325  8D67              ;	27/04/23
1326  8D67              ;
1327  8D67              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1328  8D67              ;
1329  8D67              ;	Destruye: HL,BC,DE,A
1330  8D67
1331  8D67 21 C5 88     Borra_datos_entidad ld hl,Filas
1332  8D6A 01 3C 00     	ld bc,60
1333  8D6D AF           	xor a
1334  8D6E 77           	ld (hl),a
1335  8D6F 11 C6 88     	ld de,Filas+1
1336  8D72 ED B0        	ldir
1337  8D74 C9           	ret
1338  8D75
1339  8D75              ; -----------------------------------------------------------
1340  8D75
1341  8D75              ; Teclado.
1342  8D75
1343  8D75 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1344  8D77 DB FE        	in a,($fe)
1345  8D79 E6 01        	and $01
1346  8D7B 28 02        	jr z,1f
1347  8D7D 18 F6        	jr Pulsa_ENTER
1348  8D7F C9           1 ret
1349  8D80
1350  8D80              ; **************************************************************************************************
1351  8D80              ;
1352  8D80              ; Temporización.
1353  8D80
1354  8D80              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1355  8D80              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1356  8D80              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1357  8D80              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1358  8D80
1359  8D80              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1360  8D80              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1361  8D80              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1362  8D80
1363  8D80              ; A partir de $4f61 no hace falta DELAY.
1364  8D80
1365  8D80              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1366  8D80
1367  8D80 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1368  8D83 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1369  8D84 78           	LD A,B
1370  8D85 A7           	AND A
1371  8D86 20 FB        	JR NZ,wait
1372  8D88 C9           	RET
1373  8D89
1374  8D89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1375  8D89              ;
1376  8D89              ;	5/3/23
1377  8D89              ;
1378  8D89              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1379  8D89
1380  8D89              Movimiento_Amadeus
1381  8D89
1382  8D89              ; Disparo.
1383  8D89
1384  8D89 3A 53 89     	ld a,(Disparo_Amadeus)
1385  8D8C A7           	and a
1386  8D8D 20 02        	jr nz,1F
1387  8D8F 18 15        	jr 2F
1388  8D91
1389  8D91 3E F7        1 ld a,$f7													; "5" para disparar.
1390  8D93 DB FE        	in a,($fe)
1391  8D95 E6 10        	and $10
1392  8D97
1393  8D97 F5           	push af
1394  8D98 CC 85 8E     	call z,Genera_disparo
1395  8D9B F1           	pop af
1396  8D9C 20 08        	jr nz,2F
1397  8D9E
1398  8D9E 3A 53 89     	ld a,(Disparo_Amadeus)
1399  8DA1 EE 01        	xor 1
1400  8DA3 32 53 89     	ld (Disparo_Amadeus),a
1401  8DA6
1402  8DA6 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1403  8DA8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1404  8DAA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1405  8DAC CC 56 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1406  8DAF
1407  8DAF 3E F7        	ld a,$f7
1408  8DB1 DB FE        	in a,($fe)
1409  8DB3 E6 01        	and $01
1410  8DB5 C8           	ret z
1411  8DB6
1412  8DB6 3E F7        	ld a,$f7
1413  8DB8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1414  8DBA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1415  8DBC CC 38 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1416  8DBF C9           	ret
1417  8DC0
1418  8DC0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1419  8DC0              ;
1420  8DC0              ;	Rutina provisional para que los malotes cagen balas.
1421  8DC0
1422  8DC0              Detecta_disparo_entidad
1423  8DC0
1424  8DC0 3A 56 89     	ld a,(Disparo_entidad)
1425  8DC3 A7           	and a
1426  8DC4 C8           	ret z
1427  8DC5
1428  8DC5              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1429  8DC5
1430  8DC5              ;	ld a,$7f				; Detecta SPACE.
1431  8DC5              ;	in a,($fe)
1432  8DC5              ;	and 1
1433  8DC5              ;	ret nz
1434  8DC5
1435  8DC5              ;	call Genera_disparo
1436  8DC5 C9           	ret
1437  8DC6
1438  8DC6              ; ----------------------------------------------------------------------
1439  8DC6              ;
1440  8DC6              ;	8/9/23
1441  8DC6
1442  8DC6              Guarda_datos_de_borrado
1443  8DC6
1444  8DC6 F3           	di
1445  8DC7
1446  8DC7 2A 19 89     	ld hl,(Stack_snapshot)
1447  8DCA
1448  8DCA 2B           	dec hl
1449  8DCB 7E           	ld a,(hl)
1450  8DCC A7           	and a
1451  8DCD C8           	ret z										; Salimos si es álbum está vacío.
1452  8DCE
1453  8DCE 11 E4 88     	ld de,Variables_de_borrado+5
1454  8DD1 01 06 00     	ld bc,6
1455  8DD4 ED B8        	lddr
1456  8DD6
1457  8DD6 FB           	ei
1458  8DD7
1459  8DD7 C9           	ret
1460  8DD8
1461  8DD8              ; ----------------------------------------------------------------------
1462  8DD8              ;
1463  8DD8              ;	8/9/23
1464  8DD8
1465  8DD8 2A 21 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1466  8DDB 2B            	dec hl
1467  8DDC 7E           	ld a,(hl)
1468  8DDD A7           	and a
1469  8DDE C8           	ret z										; Salimos si es álbum está vacío.
1470  8DDF
1471  8DDF 11 E4 88     	ld de,Variables_de_borrado+5
1472  8DE2 01 06 00     	ld bc,6
1473  8DE5 ED B8        	lddr
1474  8DE7 C9           	ret
1475  8DE8
1476  8DE8              ; ----------------------------------------------------------------------
1477  8DE8              ;
1478  8DE8              ;	9/9/23
1479  8DE8
1480  8DE8              Repone_datos_de_borrado_Amadeus
1481  8DE8
1482  8DE8 21 DF 88     	ld hl,Variables_de_borrado
1483  8DEB 11 A0 72     	ld de,Album_de_fotos_Amadeus
1484  8DEE 01 06 00     	ld bc,6
1485  8DF1 ED B0        	ldir
1486  8DF3
1487  8DF3 EB           	ex de,hl
1488  8DF4 22 21 89     	ld (End_Snapshot_Amadeus),hl
1489  8DF7
1490  8DF7 C9           	ret
1491  8DF8
1492  8DF8              ; ----------------------------------------------------------------------
1493  8DF8              ;
1494  8DF8              ;	18/9/23
1495  8DF8              ;
1496  8DF8
1497  8DF8              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1498  8DF8              ;	_ Album_de_fotos correspondiente.
1499  8DF8
1500  8DF8              ;	DI.
1501  8DF8
1502  8DF8              Repone_datos_de_borrado
1503  8DF8
1504  8DF8 F3           	di
1505  8DF9
1506  8DF9 ED 5B 19 89  	ld de,(Stack_snapshot)
1507  8DFD 21 DF 88     	ld hl,Variables_de_borrado
1508  8E00 01 06 00     	ld bc,6
1509  8E03 ED B0        	ldir
1510  8E05
1511  8E05 EB           	ex de,hl
1512  8E06 22 19 89     	ld (Stack_snapshot),hl
1513  8E09
1514  8E09 FB           	ei
1515  8E0A
1516  8E0A C9           	ret
1517  8E0B
1518  8E0B              ; ----------------------------------------------------------------------
1519  8E0B              ;
1520  8E0B              ;	11/8/23
1521  8E0B
1522  8E0B              Gestiona_entidades
1523  8E0B
1524  8E0B              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1525  8E0B              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1526  8E0B
1527  8E0B              ; PINTAMOS.
1528  8E0B
1529  8E0B 3E 02        	ld a,2
1530  8E0D D3 FE            out ($fe),a											; Rojo.
1531  8E0F
1532  8E0F              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1533  8E0F              ; _ , no gestionamos los álbumes de fotos.
1534  8E0F
1535  8E0F 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1536  8E12 01 EC 84     	ld bc,Indice_album_de_fotos
1537  8E15 A7           	and a
1538  8E16 ED 42        	sbc hl,bc
1539  8E18
1540  8E18 28 FE        	jr z,$
1541  8E1A C8           	ret z
1542  8E1B
1543  8E1B              ;	call Extrae_foto_disparos
1544  8E1B              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1545  8E1B
1546  8E1B CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1547  8E1E
1548  8E1E              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1549  8E1E
1550  8E1E 3A 02 89     	ld a,(Ctrl_1)
1551  8E21 CB 6F        	bit 5,a
1552  8E23 20 22        	jr nz,1F
1553  8E25
1554  8E25              ; No hemos terminado de guardar el último FRAME.
1555  8E25
1556  8E25 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1557  8E28 2B           	dec hl
1558  8E29 2B           	dec hl
1559  8E2A 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
1560  8E2D
1561  8E2D 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
1562  8E30 2B           	dec hl
1563  8E31 2B           	dec hl
1564  8E32 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
1565  8E35 CD 9C 8C     	call Extrae_address
1566  8E38 22 37 89     	ld (Puntero_de_End_Snapshot),hl
1567  8E3B
1568  8E3B CD 9C 8C     	call Extrae_address
1569  8E3E
1570  8E3E              ; Esta vacío este album???
1571  8E3E
1572  8E3E 24           	inc h
1573  8E3F 25           	dec h
1574  8E40 28 05        	jr z,1F
1575  8E42
1576  8E42              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1577  8E42
1578  8E42 22 19 89     	ld (Stack_snapshot),hl
1579  8E45 18 09        	jr 2F
1580  8E47
1581  8E47              ; FRAME completo.
1582  8E47
1583  8E47 2A 2F 89     1 ld hl,(Puntero_indice_album_de_fotos)
1584  8E4A CD 9C 8C     	call Extrae_address
1585  8E4D 22 19 89     	ld (Stack_snapshot),hl
1586  8E50
1587  8E50              ;	En este punto:
1588  8E50
1589  8E50              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1590  8E50              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1591  8E50
1592  8E50 21 02 89     2 ld hl,Ctrl_1
1593  8E53 CB AE        	res 5,(hl)
1594  8E55
1595  8E55 C9           	ret
1596  8E56
1597  8E56              ; -----------------------------------------------------------------------------------
1598  8E56
1599  8E56              Pinta_Amadeus
1600  8E56
1601  8E56 3E 06        	ld a,6
1602  8E58 D3 FE            out ($fe),a										; Amarillo
1603  8E5A
1604  8E5A CD 68 8C        	call Calcula_malotes_Amadeus
1605  8E5D CD 0B 97     	call Extrae_foto_Amadeus
1606  8E60 CD 24 8C     	call Limpia_album_Amadeus
1607  8E63
1608  8E63 C9           	ret
1609  8E64
1610  8E64              Pinta_entidades
1611  8E64
1612  8E64 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1613  8E67 01 EC 84     	ld bc,Indice_album_de_fotos
1614  8E6A A7           	and a
1615  8E6B ED 42        	sbc hl,bc
1616  8E6D
1617  8E6D 28 FE        	jr z,$
1618  8E6F C8           	ret z
1619  8E70
1620  8E70              ; Pintamos siempre que esté completo Album_de_fotos.
1621  8E70
1622  8E70 CD 4C 8C     	call Calcula_numero_de_malotes
1623  8E73 CD 89 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1624  8E76
1625  8E76 C9           	ret
1626  8E77
1627  8E77              ; -----------------------------------------------------------------------------------
1628  8E77
1629  8E77              Actualiza_relojes
1630  8E77
1631  8E77 21 4E 89     	ld hl,Contador_de_frames
1632  8E7A 7E           	ld a,(hl)
1633  8E7B FE FF        	cp $ff
1634  8E7D 20 04        	jr nz,1F
1635  8E7F 34           	inc (hl)
1636  8E80 21 4F 89     	ld hl,Contador_de_frames_2
1637  8E83 34           1 inc (hl)											; 0 - 255
1638  8E84 C9           	ret
1639  8E85
1640  8E85              ; ---------------------------------------------------------------
1641  8E85
1642  8E85              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E85              ; ******************************************************************************************************************************************************************************************
   2+ 8E85              ;
   3+ 8E85              ;   21/07/23
   4+ 8E85              ;
   5+ 8E85              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E85              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E85              ;
   8+ 8E85              ;
   9+ 8E85              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E85              ;
  11+ 8E85              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E85              ;               _ hacen las entidades hacia abajo.
  13+ 8E85              ;
  14+ 8E85              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E85              ;
  16+ 8E85              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E85              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E85              ;
  19+ 8E85              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E85              ;           _ la bala.
  21+ 8E85              ;
  22+ 8E85              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E85              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E85              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E85              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E85              ;           _ en el momento de generarse la bala)).
  27+ 8E85
  28+ 8E85              Genera_disparo
  29+ 8E85
  30+ 8E85              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E85              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E85              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E85              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E85              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E85              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E85              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E85
  38+ 8E85              ; Exclusiones:
  39+ 8E85
  40+ 8E85 3A DD 88         ld a,(Vel_down)
  41+ 8E88 47               ld b,a
  42+ 8E89 3A 4D 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E8C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E8D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E8E 3A FC 88         ld a,(Columnas)
  46+ 8E91 47               ld b,a
  47+ 8E92 3A C6 88         ld a,(Columns)
  48+ 8E95 B8               cp b
  49+ 8E96 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E97
  51+ 8E97              ; ----- ----- -----
  52+ 8E97
  53+ 8E97 3A EF 88         ld a,(Ctrl_0)
  54+ 8E9A CB 77            bit 6,a
  55+ 8E9C 20 06            jr nz,14F
  56+ 8E9E
  57+ 8E9E 3A CC 88         ld a,(Coordenada_y)
  58+ 8EA1 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EA3 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EA4
  61+ 8EA4 21 00 80     14 ld hl,Indice_disparo
  62+ 8EA7 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8EAA 4F               ld c,a
  64+ 8EAB 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EAD              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EAD              ;                                            ""        ""       "f9", B="1"
  67+ 8EAD              ;                                            ""        ""       "fb", B="2"
  68+ 8EAD              ;                                            ""        ""       "fb", B="3"
  69+ 8EAD A7               and a
  70+ 8EAE 28 10            jr z,1F
  71+ 8EB0 E6 01            and 1
  72+ 8EB2 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EB3
  74+ 8EB3 79               ld a,c
  75+ 8EB4 16 F9            ld d,$f9
  76+ 8EB6 23           2 inc hl
  77+ 8EB7 23               inc hl
  78+ 8EB8 04               inc b
  79+ 8EB9 BA               cp d
  80+ 8EBA 28 04            jr z,1F
  81+ 8EBC 14               inc d
  82+ 8EBD 14               inc d
  83+ 8EBE 18 F6            jr 2B
  84+ 8EC0
  85+ 8EC0 CD 9C 8C     1 call Extrae_address
  86+ 8EC3 E5               push hl
  87+ 8EC4 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EC6 DD 21 51 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8ECA
  90+ 8ECA              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8ECA              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8ECA
  93+ 8ECA 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8ECD CB 77            bit 6,a
  95+ 8ECF 20 04            jr nz,19F
  96+ 8ED1
  97+ 8ED1 AF               xor a
  98+ 8ED2 32 56 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8ED5
 100+ 8ED5 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8ED8 FE 02            cp 2
 102+ 8EDA 38 66            jr c,3F
 103+ 8EDC 28 64            jr z,3F
 104+ 8EDE
 105+ 8EDE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EDE
 107+ 8EDE E6 01            and 1
 108+ 8EE0 28 30            jr z,4F
 109+ 8EE2
 110+ 8EE2              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EE2              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EE2              ;
 113+ 8EE2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EE2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EE2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EE2
 117+ 8EE2 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8EE5
 119+ 8EE5              ;   Amadeus o entidad ???.
 120+ 8EE5
 121+ 8EE5 3A EF 88         ld a,(Ctrl_0)
 122+ 8EE8 CB 77            bit 6,a
 123+ 8EEA 28 0A            jr z,8F
 124+ 8EEC
 125+ 8EEC              ; 	Dispara Amadeus.
 126+ 8EEC
 127+ 8EEC 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EEE CD 7A 96         call PreviousScan
 129+ 8EF1 CD 7A 96         call PreviousScan
 130+ 8EF4
 131+ 8EF4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EF4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EF4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EF4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EF4
 136+ 8EF4 18 11            jr 10F
 137+ 8EF6
 138+ 8EF6              ; 	Dispara Entidad.
 139+ 8EF6
 140+ 8EF6 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EF9              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EF9
 143+ 8EF9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EF9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EF9
 146+ 8EF9 C5               push bc
 147+ 8EFA 06 10            ld b,16
 148+ 8EFC CD 6B 96     9 call NextScan
 149+ 8EFF 10 FB            djnz 9B
 150+ 8F01 C1               pop bc
 151+ 8F02 CD 6C 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F05 18 06            jr 17F
 153+ 8F07
 154+ 8F07              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F07              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F07              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F07              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F07
 159+ 8F07 CD 6C 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F0A CD E1 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F0D              ;                                                      ; _al generar el disparo.
 162+ 8F0D
 163+ 8F0D              ; 	LLegados a este punto tendremos:
 164+ 8F0D              ;
 165+ 8F0D              ;       Puntero_objeto_disparo en IY.
 166+ 8F0D              ;       Rutinas_de_impresion en IX.
 167+ 8F0D              ;       Puntero_de_impresion en HL.
 168+ 8F0D              ;       Impacto/Dirección en BC.
 169+ 8F0D
 170+ 8F0D CD 74 8F     17 call Almacena_disparo
 171+ 8F10 18 52            jr 6F                                             ; RET.
 172+ 8F12
 173+ 8F12              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F12              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F12              ;
 176+ 8F12              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F12              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F12              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F12
 180+ 8F12 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8F15
 182+ 8F15              ;   Amadeus o entidad ???.
 183+ 8F15
 184+ 8F15 3A EF 88         ld a,(Ctrl_0)
 185+ 8F18 CB 77            bit 6,a
 186+ 8F1A 28 0A            jr z,11F
 187+ 8F1C
 188+ 8F1C              ; 	Dispara Amadeus.
 189+ 8F1C
 190+ 8F1C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F1E CD 7A 96         call PreviousScan
 192+ 8F21 CD 7A 96         call PreviousScan
 193+ 8F24
 194+ 8F24              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F24              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F24              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F24              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F24
 199+ 8F24 18 11            jr 13F
 200+ 8F26
 201+ 8F26              ; 	Dispara Entidad.
 202+ 8F26
 203+ 8F26 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F29              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F29
 206+ 8F29              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F29              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F29
 209+ 8F29 C5               push bc
 210+ 8F2A 06 10            ld b,16
 211+ 8F2C CD 6B 96     12 call NextScan
 212+ 8F2F 10 FB            djnz 12B
 213+ 8F31 C1               pop bc
 214+ 8F32
 215+ 8F32 CD 65 8F         call Ajusta_disparo_parte_derecha
 216+ 8F35 18 06            jr 18F
 217+ 8F37
 218+ 8F37              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F37              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F37              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F37              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F37
 223+ 8F37 CD 65 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F3A CD E1 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F3D              ;                                                       ; _al generar el disparo.
 226+ 8F3D
 227+ 8F3D              ; LLegados a este punto tendremos:
 228+ 8F3D              ;
 229+ 8F3D              ;       Puntero_objeto_disparo en IY.
 230+ 8F3D              ;       Rutinas_de_impresion en IX.
 231+ 8F3D              ;       Puntero_de_impresion en HL.
 232+ 8F3D              ;       Impacto/Dirección en BC.
 233+ 8F3D
 234+ 8F3D CD 74 8F     18 call Almacena_disparo
 235+ 8F40 18 22            jr 6F                                               ; RET.
 236+ 8F42
 237+ 8F42              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F42
 239+ 8F42 28 11        3 jr z,5F
 240+ 8F44
 241+ 8F44              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F44              ;
 243+ 8F44              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F44              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F44              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F44              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F44
 248+ 8F44              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F44              ;	   ""        ""       "f9", B="1"
 250+ 8F44              ;	   ""        ""       "fb", B="2"
 251+ 8F44              ; 	   ""        ""       "fb", B="3"
 252+ 8F44
 253+ 8F44 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8F47 CD 6B 96     	call NextScan
 255+ 8F4A
 256+ 8F4A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F4A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F4A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F4A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F4A
 261+ 8F4A CD 6C 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F4D
 263+ 8F4D              ; 	No se produce impacto. B="$80"
 264+ 8F4D              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F4D
 266+ 8F4D 01 80 80         ld bc,$8080
 267+ 8F50
 268+ 8F50              ; 	LLegados a este punto tendremos:
 269+ 8F50              ;
 270+ 8F50              ;       Puntero_objeto_disparo en IY.
 271+ 8F50              ;       Rutinas_de_impresion en IX.
 272+ 8F50              ;       Puntero_de_impresion en HL.
 273+ 8F50              ;       Impacto/Dirección en BC.
 274+ 8F50
 275+ 8F50 CD 74 8F         call Almacena_disparo
 276+ 8F53 18 0F            jr 6F                                           ; RET.
 277+ 8F55
 278+ 8F55              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F55              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F55              ;
 281+ 8F55              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F55              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F55              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F55              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F55
 286+ 8F55 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8F58 CD 6B 96     	call NextScan
 288+ 8F5B
 289+ 8F5B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F5B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F5B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F5B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F5B
 294+ 8F5B CD 65 8F         call Ajusta_disparo_parte_derecha
 295+ 8F5E
 296+ 8F5E              ; 	No se produce impacto. B="$80"
 297+ 8F5E              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F5E
 299+ 8F5E 01 80 80     15 ld bc,$8080
 300+ 8F61
 301+ 8F61              ; 	LLegados a este punto tendremos:
 302+ 8F61              ;
 303+ 8F61              ;       Puntero_objeto_disparo en IY.
 304+ 8F61              ;       Rutinas_de_impresion en IX.
 305+ 8F61              ;       Puntero_de_impresion en HL.
 306+ 8F61              ;       Impacto/Dirección en BC.
 307+ 8F61
 308+ 8F61 CD 74 8F         call Almacena_disparo
 309+ 8F64
 310+ 8F64 C9           6 ret
 311+ 8F65
 312+ 8F65              ; ----------------------------------------------------------------
 313+ 8F65              ;
 314+ 8F65              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F65              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F65              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F65
 318+ 8F65 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F66 FE 02            cp 2
 320+ 8F68 38 01            jr c,1F
 321+ 8F6A 23               inc hl
 322+ 8F6B C9           1 ret
 323+ 8F6C
 324+ 8F6C 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F6D FE 01        	cp 1
 326+ 8F6F 20 01        	jr nz,1F
 327+ 8F71 2B           	dec hl
 328+ 8F72 2B           1 dec hl
 329+ 8F73 C9               ret
 330+ 8F74
 331+ 8F74              ; ----------------------------------------------------------------
 332+ 8F74              ;
 333+ 8F74              ;   25/02/23
 334+ 8F74              ;
 335+ 8F74              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F74              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F74              ;
 338+ 8F74              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F74              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F74
 341+ 8F74              Almacena_disparo
 342+ 8F74
 343+ 8F74 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F75 F1               pop af
 345+ 8F76 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F77
 347+ 8F77 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F78 E6 01            and 1
 349+ 8F7A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F7C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F7C              ; 	Dispara AMADEUS.
 352+ 8F7C
 353+ 8F7C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F7C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F7C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F7C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F7C
 358+ 8F7C C5               push bc
 359+ 8F7D 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F80 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F83 A7               and a
 362+ 8F84 ED 42            sbc hl,bc
 363+ 8F86 CC 1D 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F89 C1               pop bc
 365+ 8F8A 28 54            jr z,4F
 366+ 8F8C
 367+ 8F8C 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F8F 23               inc hl
 369+ 8F90 23               inc hl
 370+ 8F91 22 3E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F94              ;                                                   ; _ Disparo_(+1).
 372+ 8F94 18 18            jr 2F
 373+ 8F96
 374+ 8F96              ; Dispara una entidad.
 375+ 8F96
 376+ 8F96 C5           1 push bc
 377+ 8F97 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F9A 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F9D A7               and a
 380+ 8F9E ED 42            sbc hl,bc
 381+ 8FA0 CC 16 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FA3 C1               pop bc
 383+ 8FA4 28 3A            jr z,4F
 384+ 8FA6
 385+ 8FA6 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FA9 23               inc hl
 387+ 8FAA 23               inc hl
 388+ 8FAB 22 3C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FAE              ;                                                   ; _ Disparo_(+1).
 390+ 8FAE CD 9C 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FB1              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FB1              ;
 393+ 8FB1              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FB1              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FB1              ;                                                     Puntero_de_impresion en HL.
 396+ 8FB1              ;                                                     Impacto/Dirección en BC.
 397+ 8FB1
 398+ 8FB1 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FB2 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FB3 23               inc hl                                          ; _ al siguiente.
 401+ 8FB4 A7               and a
 402+ 8FB5 20 C0            jr nz,3B
 403+ 8FB7
 404+ 8FB7 08               ex af,af
 405+ 8FB8 ED 73 13 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FBC F9               ld sp,hl
 407+ 8FBD
 408+ 8FBD DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FBF F5               push af                                         ; Puntero de impresión.
 410+ 8FC0 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FC2 C5               push bc                                         ; Control.
 412+ 8FC3
 413+ 8FC3 ED 7B 13 89      ld sp,(Stack)
 414+ 8FC7
 415+ 8FC7              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FC7
 417+ 8FC7 21 02 89     	ld hl,Ctrl_1
 418+ 8FCA CB C6        	set 0,(hl)
 419+ 8FCC
 420+ 8FCC DD E5        	push ix
 421+ 8FCE E1               pop hl
 422+ 8FCF F5               push af
 423+ 8FD0 DD E1            pop ix
 424+ 8FD2
 425+ 8FD2 CD A0 7F     	call Guarda_foto_registros
 426+ 8FD5
 427+ 8FD5 21 02 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FD8 CB 86        	res 0,(hl)
 429+ 8FDA
 430+ 8FDA              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FDA              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FDA
 433+ 8FDA CD 1D 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FDD CD 16 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FE0
 436+ 8FE0 C9           4 ret
 437+ 8FE1
 438+ 8FE1              ; ----------------------------------------------------------------
 439+ 8FE1              ;
 440+ 8FE1              ;   4/3/23
 441+ 8FE1              ;
 442+ 8FE1              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FE1              ;   _ al generarse el disparo.
 444+ 8FE1              ;
 445+ 8FE1              ;       "$80" ..... No se produce colisión.
 446+ 8FE1              ;       "$81" ..... Se produce colisión.
 447+ 8FE1              ;
 448+ 8FE1              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FE1              ;         _ que forman el disparo.
 450+ 8FE1
 451+ 8FE1
 452+ 8FE1              Comprueba_Colision
 453+ 8FE1
 454+ 8FE1              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FE1
 456+ 8FE1 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FE3 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FE4
 459+ 8FE4 CD 1A 90         call Modifica_H_Velocidad_disparo
 460+ 8FE7
 461+ 8FE7 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FE8 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FEA 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FEC
 465+ 8FEC 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FEE CD 0A 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FF1
 468+ 8FF1 7B               ld a,e
 469+ 8FF2 E6 01            and 1
 470+ 8FF4 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FF6              ;                                                  ; _ para activar IMPACTO.
 472+ 8FF6 E1               pop hl
 473+ 8FF7 E5               push hl
 474+ 8FF8 CD 6B 96         call NextScan
 475+ 8FFB
 476+ 8FFB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FFC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FFE 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9000              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9000 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9002 CD 0A 90         call Bucle_2
 482+ 9005
 483+ 9005 43           1 ld b,e
 484+ 9006 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9007 FD E1            pop iy
 486+ 9009 C9               ret
 487+ 900A
 488+ 900A              ; ---------- ----------
 489+ 900A
 490+ 900A 06 02        Bucle_2 ld b,2
 491+ 900C FD 7E 00     2 ld a,(iy)
 492+ 900F A6               and (hl)
 493+ 9010 28 02            jr z,1F
 494+ 9012 1E 81            ld e,$81
 495+ 9014 23           1 inc hl
 496+ 9015 FD 23            inc iy
 497+ 9017 10 F3            djnz 2B
 498+ 9019 C9               ret
 499+ 901A
 500+ 901A              ; ---------- ----------
 501+ 901A              ;
 502+ 901A              ;   21/7/23
 503+ 901A
 504+ 901A              Modifica_H_Velocidad_disparo
 505+ 901A
 506+ 901A 3A 4D 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 901D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 901F D0               ret nc                                         ; _ incrementamos H.
 509+ 9020 24               inc h
 510+ 9021
 511+ 9021 C9               ret
 512+ 9022
 513+ 9022              ; -------------------------------------------------------------------------------------------------------------
 514+ 9022              ;
 515+ 9022              ;   11/04/23
 516+ 9022              ;
 517+ 9022              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9022              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9022              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9022              ;
 521+ 9022              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9022
 523+ 9022              Compara_coordenadas_X
 524+ 9022
 525+ 9022              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9022              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9022
 528+ 9022              ; Preparamos registros:
 529+ 9022
 530+ 9022 21 CB 88         ld hl,Filas+6
 531+ 9025 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9026 23               inc hl
 533+ 9027 23               inc hl
 534+ 9028 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9029 43               ld b,e
 536+ 902A
 537+ 902A 21 D9 88         ld hl,Filas+20
 538+ 902D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 902E 21 48 89         ld hl,Coordenadas_X_Entidad
 540+ 9031 CD 4D 92         call Guarda_coordenadas_X
 541+ 9034
 542+ 9034              ; Preparamos registros:
 543+ 9034
 544+ 9034 21 A4 85         ld hl,Amadeus_db+6
 545+ 9037 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9038 23               inc hl
 547+ 9039 23               inc hl
 548+ 903A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 903B 7B               ld a,e
 550+ 903C 08               ex af,af'
 551+ 903D 21 B2 85         ld hl,Amadeus_db+20
 552+ 9040 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9041 21 45 89         ld hl,Coordenadas_X_Amadeus
 554+ 9044 CD 4D 92         call Guarda_coordenadas_X
 555+ 9047
 556+ 9047              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9047              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9047
 559+ 9047 04               inc b
 560+ 9048 05               dec b
 561+ 9049 28 04            jr z,1F
 562+ 904B 06 03            ld b,3
 563+ 904D 18 02            jr 2F
 564+ 904F 06 02        1 ld b,2
 565+ 9051 08           2 ex af,af'
 566+ 9052 3C               inc a
 567+ 9053 3D               dec a
 568+ 9054 28 04            jr z,5F
 569+ 9056 0E 03            ld c,3
 570+ 9058 18 02            jr 6F
 571+ 905A 0E 02        5 ld c,2
 572+ 905C 79           6 ld a,c
 573+ 905D 08               ex af,af'
 574+ 905E 11 48 89         ld de,Coordenadas_X_Entidad
 575+ 9061 1A           4 ld a,(de)
 576+ 9062 21 45 89         ld hl,Coordenadas_X_Amadeus
 577+ 9065 BE           3 cp (hl)
 578+ 9066 28 0E            jr z,7F
 579+ 9068 23               inc hl
 580+ 9069 0D               dec c
 581+ 906A 20 F9            jr nz,3B
 582+ 906C 13               inc de
 583+ 906D 08               ex af,af'
 584+ 906E 4F               ld c,a
 585+ 906F 08               ex af,af'
 586+ 9070 10 EF            djnz 4B
 587+ 9072
 588+ 9072              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9072
 590+ 9072 CD 89 92     8 call Limpia_Coordenadas_X
 591+ 9075 C9               ret
 592+ 9076
 593+ 9076 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9078 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 907B 21 40 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 907E CB D6            set 2,(hl)
 597+ 9080 18 F0            jr 8B
 598+ 9082
 599+ 9082              ; -----------------------------------------------------------------------
 600+ 9082              ;
 601+ 9082              ;   17/04/23
 602+ 9082              ;
 603+ 9082
 604+ 9082              Detecta_colision_nave_entidad
 605+ 9082
 606+ 9082              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9082
 608+ 9082 2A C7 88         ld hl,(Posicion_actual)
 609+ 9085 CD C6 95         call Calcula_puntero_de_impresion
 610+ 9088
 611+ 9088              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9088              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9088
 614+ 9088 DD E5            push ix
 615+ 908A E1               pop hl
 616+ 908B E5               push hl
 617+ 908C
 618+ 908C              ; ----- ----- -----
 619+ 908C 1E 00            ld e,0                                         ; Indica impacto.
 620+ 908E 06 0A            ld b,10
 621+ 9090 CD C0 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9093 7B               ld a,e
 623+ 9094 FE 05            cp 5
 624+ 9096 38 0E            jr c,3F
 625+ 9098
 626+ 9098              ; LLegados a este punto:
 627+ 9098              ;
 628+ 9098              ;   HAY COLISIÓN !!!!!.
 629+ 9098              ;
 630+ 9098              ;   .db (Impacto) de Amadeus a "1".
 631+ 9098              ;   SET el bit3 de (Impacto2).
 632+ 9098              ;
 633+ 9098              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9098
 635+ 9098 21 B7 85         ld hl,Amadeus_db+25
 636+ 909B 36 01            ld (hl),1
 637+ 909D 21 40 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90A0 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90A2 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90A4 18 18            jr 1F
 641+ 90A6
 642+ 90A6              ; -----
 643+ 90A6
 644+ 90A6 E1           3 pop hl
 645+ 90A7 CD 6B 96         call NextScan
 646+ 90AA E5               push hl
 647+ 90AB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90AC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90AE 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90B0 30 0C            jr nc,1F
 651+ 90B2              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90B2 10 DC            djnz 2B
 653+ 90B4
 654+ 90B4              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90B4
 656+ 90B4              ; LLegados a este punto:
 657+ 90B4              ;
 658+ 90B4              ;   NO HAY COLISIÓN !!!!!.
 659+ 90B4              ;
 660+ 90B4              ;   .db (Impacto) de Amadeus a "0".
 661+ 90B4              ;   RES el bit2 de (Impacto2).
 662+ 90B4              ;
 663+ 90B4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90B4              ;   Lo colocamos a "0".
 665+ 90B4
 666+ 90B4 21 40 89         ld hl,Impacto2
 667+ 90B7 CB 96            res 2,(hl)
 668+ 90B9 2A 41 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90BC 36 00            ld (hl),0
 670+ 90BE
 671+ 90BE E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90BF C9               ret
 673+ 90C0
 674+ 90C0               ; ---------- ----------
 675+ 90C0
 676+ 90C0 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90C1 3A C6 88         ld a,(Columns)
 678+ 90C4 47               ld b,a
 679+ 90C5 FD 7E 00     2 ld a,(iy)
 680+ 90C8 BE               cp (hl)
 681+ 90C9 28 01            jr z,1F
 682+ 90CB
 683+ 90CB 1C               inc e
 684+ 90CC
 685+ 90CC 23           1 inc hl
 686+ 90CD FD 23            inc iy
 687+ 90CF 10 F4            djnz 2B
 688+ 90D1 C1               pop bc
 689+ 90D2 C9               ret
 690+ 90D3
 691+ 90D3              ; -------------------------------------------------------------------------------------------------------------
 692+ 90D3              ;
 693+ 90D3              ;   13/03/23
 694+ 90D3              ;
 695+ 90D3              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90D3              ;
 697+ 90D3              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90D3
 699+ 90D3 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90D6 7E               ld a,(hl)
 701+ 90D7 A7               and a
 702+ 90D8 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90D9
 704+ 90D9 44               ld b,h
 705+ 90DA 4D               ld c,l
 706+ 90DB 2A 1B 89         ld hl,(Stack_snapshot_disparos)
 707+ 90DE E5               push hl
 708+ 90DF A7               and a
 709+ 90E0 ED 42            sbc hl,bc
 710+ 90E2 E5               push hl
 711+ 90E3 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90E4
 713+ 90E4 E1               pop hl
 714+ 90E5 54               ld d,h
 715+ 90E6 5D               ld e,l
 716+ 90E7 1B               dec de
 717+ 90E8 ED B8            lddr                                                ; Limpiamos.
 718+ 90EA
 719+ 90EA 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90ED 22 1B 89         ld (Stack_snapshot_disparos),hl
 721+ 90F0
 722+ 90F0 C9               ret
 723+ 90F1
 724+ 90F1              ; -------------------------------------------------------------------------------------------------------------
 725+ 90F1              ;
 726+ 90F1              ;   18/07/23
 727+ 90F1              ;
 728+ 90F1
 729+ 90F1              Motor_de_disparos
 730+ 90F1
 731+ 90F1              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90F1
 733+ 90F1 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90F4 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90F7
 736+ 90F7 CD 9C 8C     2 call Extrae_address
 737+ 90FA 7E               ld a,(hl)
 738+ 90FB A7               and a
 739+ 90FC 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90FE
 741+ 90FE              ; ----- ----- ----- ----- ----- -----
 742+ 90FE
 743+ 90FE C5               push bc
 744+ 90FF CD C3 91         call foto_disparo_a_borrar
 745+ 9102
 746+ 9102              ; Existe colisión con este disparo???
 747+ 9102
 748+ 9102 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9103 7E               ld a,(hl)
 750+ 9104 2B               dec hl
 751+ 9105 E6 01            and 1
 752+ 9107 28 1D            jr z,9F
 753+ 9109
 754+ 9109              ;   En este punto:
 755+ 9109              ;
 756+ 9109              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9109              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9109              ;   _con la entidad).
 759+ 9109              ;
 760+ 9109              ;   Disparo_2A defw 0                                ; Control.
 761+ 9109              ;    defw 0                                          ; Puntero objeto.
 762+ 9109              ;    defw 0                                          ; Puntero de impresión.
 763+ 9109              ;    defw 0                                          ; Rutina de impresión.
 764+ 9109
 765+ 9109 E5               push hl
 766+ 910A
 767+ 910A 06 04            ld b,4
 768+ 910C 23           19 inc hl
 769+ 910D 10 FD            djnz 19B
 770+ 910F
 771+ 910F CD 9C 8C         call Extrae_address
 772+ 9112 CD 34 9D         call Genera_coordenadas_disparo
 773+ 9115
 774+ 9115              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9115
 776+ 9115 21 43 89         ld hl,Coordenadas_disparo_certero
 777+ 9118 72               ld (hl),d
 778+ 9119 23               inc hl
 779+ 911A 73               ld (hl),e
 780+ 911B
 781+ 911B              ; Elimino el disparo de la base de datos.
 782+ 911B
 783+ 911B E1               pop hl
 784+ 911C CD 42 92         call Elimina_disparo_de_base_de_datos
 785+ 911F 21 40 89         ld hl,Impacto2
 786+ 9122 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9124
 788+ 9124 18 06            jr 11F
 789+ 9126
 790+ 9126 CD EC 91     9 call Mueve_disparo
 791+ 9129 CD C3 91         call foto_disparo_a_borrar
 792+ 912C
 793+ 912C C1           11 pop bc
 794+ 912D 18 04            jr 7F
 795+ 912F
 796+ 912F              ; ----- ----- ----- ----- ----- -----
 797+ 912F
 798+ 912F ED 42        1 sbc hl,bc
 799+ 9131 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9133
 801+ 9133 2A 3E 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9136 23               inc hl
 803+ 9137 23               inc hl
 804+ 9138 22 3E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 913B 18 BA            jr 2B
 806+ 913D
 807+ 913D CD 1D 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9140              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9140
 810+ 9140              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9140
 812+ 9140 01 8A 85         ld bc,Disparo_11
 813+ 9143 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9146
 815+ 9146 CD 9C 8C     5 call Extrae_address
 816+ 9149 7E               ld a,(hl)
 817+ 914A A7               and a
 818+ 914B 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 914D
 820+ 914D              ; ----- ----- ----- ----- ----- -----
 821+ 914D
 822+ 914D C5               push bc
 823+ 914E CD C3 91         call foto_disparo_a_borrar
 824+ 9151
 825+ 9151              ; Existe colisión con este disparo???
 826+ 9151
 827+ 9151 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9152 7E               ld a,(hl)
 829+ 9153 2B               dec hl
 830+ 9154 E6 01            and 1
 831+ 9156 28 4D            jr z,10F
 832+ 9158
 833+ 9158              ;! La colisión se produce con Amadeus???
 834+ 9158              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9158
 836+ 9158 E5               push hl
 837+ 9159
 838+ 9159 06 04            ld b,4
 839+ 915B 23           16 inc hl
 840+ 915C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 915E
 842+ 915E CD 9C 8C         call Extrae_address
 843+ 9161 CD 34 9D         call Genera_coordenadas_disparo
 844+ 9164
 845+ 9164 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9165 FE 16            cp $16
 847+ 9167 38 2A            jr c,15F
 848+ 9169
 849+ 9169
 850+ 9169              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9169
 852+ 9169 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 916A
 854+ 916A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 916A
 856+ 916A
 857+ 916A 2A 4B 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 916D
 859+ 916D              ; Coordenada X de Amadeus en D.
 860+ 916D
 861+ 916D 7D               ld a,l
 862+ 916E E6 1F            and $1F
 863+ 9170 57               ld d,a
 864+ 9171
 865+ 9171 21 A6 85         ld hl,Amadeus_db+8
 866+ 9174 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9175
 868+ 9175 21 45 89         ld hl,Coordenadas_X_Amadeus
 869+ 9178 CD 4D 92         call Guarda_coordenadas_X
 870+ 917B
 871+ 917B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 917C
 873+ 917C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 917C
 875+ 917C 06 02            ld b,2
 876+ 917E C5           20 push bc
 877+ 917F
 878+ 917F 06 03            ld b,3
 879+ 9181 21 45 89         ld hl,Coordenadas_X_Amadeus
 880+ 9184 7E           18 ld a,(hl)
 881+ 9185 BA               cp d
 882+ 9186 20 04            jr nz,17F
 883+ 9188
 884+ 9188              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9188
 886+ 9188 C1               pop bc
 887+ 9189 E1               pop hl
 888+ 918A 18 0D            jr 14F
 889+ 918C
 890+ 918C 23           17 inc hl
 891+ 918D 10 F5            djnz 18B
 892+ 918F
 893+ 918F 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9190
 895+ 9190 C1               pop bc
 896+ 9191 10 EB            djnz 20B
 897+ 9193
 898+ 9193
 899+ 9193              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9193              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9193
 902+ 9193 E1           15 pop hl
 903+ 9194 23               inc hl
 904+ 9195 35               dec (hl)
 905+ 9196 2B               dec hl
 906+ 9197 18 0C            jr 10F
 907+ 9199
 908+ 9199              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9199              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9199
 911+ 9199 E5           14 push hl
 912+ 919A CD 42 92         call Elimina_disparo_de_base_de_datos
 913+ 919D 21 40 89         ld hl,Impacto2
 914+ 91A0 CB CE            set 1,(hl)
 915+ 91A2 E1               pop hl
 916+ 91A3 18 06            jr 12F
 917+ 91A5
 918+ 91A5              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91A5
 920+ 91A5 CD EC 91     10 call Mueve_disparo
 921+ 91A8 CD C3 91         call foto_disparo_a_borrar
 922+ 91AB C1           12 pop bc
 923+ 91AC
 924+ 91AC 18 04            jr 8F
 925+ 91AE
 926+ 91AE              ; ----- ----- ----- ----- ----- -----
 927+ 91AE
 928+ 91AE ED 42        4 sbc hl,bc
 929+ 91B0 28 0A            jr z,6F
 930+ 91B2
 931+ 91B2 2A 3C 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91B5 23               inc hl
 933+ 91B6 23               inc hl
 934+ 91B7 22 3C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91BA 18 8A            jr 5B
 936+ 91BC
 937+ 91BC CD 16 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91BF CD 89 92         call Limpia_Coordenadas_X
 939+ 91C2 C9               ret
 940+ 91C3
 941+ 91C3              ; ------------------------------------------------------------------
 942+ 91C3
 943+ 91C3              foto_disparo_a_borrar
 944+ 91C3
 945+ 91C3 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91C4 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91C5 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91C6
 949+ 91C6 E5               push hl
 950+ 91C7 23               inc hl
 951+ 91C8 23               inc hl
 952+ 91C9 ED 73 13 89      ld (Stack),sp
 953+ 91CD F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91CE FD E1            pop iy
 955+ 91D0 DD E1            pop ix
 956+ 91D2 E1               pop hl
 957+ 91D3 ED 7B 13 89      ld sp,(Stack)
 958+ 91D7 3A 02 89         ld a,(Ctrl_1)
 959+ 91DA CB C7            set 0,a
 960+ 91DC 32 02 89         ld (Ctrl_1),a
 961+ 91DF CD A0 7F         call Guarda_foto_registros
 962+ 91E2 3A 02 89         ld a,(Ctrl_1)
 963+ 91E5 CB 87            res 0,a
 964+ 91E7 32 02 89         ld (Ctrl_1),a
 965+ 91EA E1               pop hl
 966+ 91EB C9               ret
 967+ 91EC
 968+ 91EC              ;---------------------------------------------------
 969+ 91EC              ;
 970+ 91EC              ;   18/07/23
 971+ 91EC              ;
 972+ 91EC
 973+ 91EC              Mueve_disparo
 974+ 91EC
 975+ 91EC              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91EC              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91EC              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91EC
 979+ 91EC E5               push hl
 980+ 91ED
 981+ 91ED 7E               ld a,(hl)
 982+ 91EE
 983+ 91EE 06 04            ld b,4
 984+ 91F0 23           1 inc hl
 985+ 91F1 10 FD            djnz 1B
 986+ 91F3
 987+ 91F3              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91F3
 989+ 91F3 CD 9C 8C         call Extrae_address
 990+ 91F6
 991+ 91F6 E6 01            and 1
 992+ 91F8 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91FA
 994+ 91FA              ; Disparo hacia arriba, (Amadeus).
 995+ 91FA
 996+ 91FA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91FA              ; _ de la dificultad.
 998+ 91FA
 999+ 91FA CD 7A 96         call PreviousScan
1000+ 91FD CD 7A 96         call PreviousScan
1001+ 9200 CD 7A 96         call PreviousScan
1002+ 9203 CD 7A 96         call PreviousScan
1003+ 9206
1004+ 9206              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9206
1006+ 9206 7C               ld a,h
1007+ 9207 FE 40            cp $40
1008+ 9209 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 920B
1010+ 920B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 920B
1012+ 920B EB               ex de,hl
1013+ 920C 06 04            ld b,4
1014+ 920E 2B           6 dec hl
1015+ 920F 10 FD            djnz 6B
1016+ 9211
1017+ 9211 CD 42 92         call Elimina_disparo_de_base_de_datos
1018+ 9214 E1               pop hl
1019+ 9215 18 10            jr 7F
1020+ 9217
1021+ 9217              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9217              ; HL contiene el puntero de impresión del disparo.
1023+ 9217              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9217
1025+ 9217 D5           3 push de
1026+ 9218 C5               push bc
1027+ 9219
1028+ 9219 CD E1 8F         call Comprueba_Colision
1029+ 921C
1030+ 921C              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 921C
1032+ 921C 78               ld a,b
1033+ 921D
1034+ 921D C1               pop bc
1035+ 921E D1               pop de
1036+ 921F
1037+ 921F EB               ex de,hl
1038+ 9220
1039+ 9220 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9221 23               inc hl                                      ; _ movimiento.
1041+ 9222 72               ld (hl),d
1042+ 9223
1043+ 9223 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9224
1045+ 9224 23               inc hl                                      ; _ en curso.
1046+ 9225 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9226 2B               dec hl
1048+ 9227
1049+ 9227 C9           7 ret
1050+ 9228
1051+ 9228              ; Disparo hacia abajo, (Entidad).
1052+ 9228
1053+ 9228 3A 4D 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 922B 47               ld b,a
1055+ 922C
1056+ 922C CD 6B 96     4 call NextScan
1057+ 922F 10 FB            djnz 4B
1058+ 9231
1059+ 9231              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9231
1061+ 9231 7C               ld a,h
1062+ 9232 FE 58            cp $58
1063+ 9234 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9236
1065+ 9236 EB               ex de,hl
1066+ 9237 06 04            ld b,4
1067+ 9239 2B           5 dec hl
1068+ 923A 10 FD            djnz 5B
1069+ 923C
1070+ 923C CD 42 92         call Elimina_disparo_de_base_de_datos
1071+ 923F E1               pop hl
1072+ 9240 18 E5            jr 7B
1073+ 9242
1074+ 9242              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9242
1076+ 9242 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9245 AF               xor a
1078+ 9246 77               ld (hl),a
1079+ 9247 54               ld d,h
1080+ 9248 5D               ld e,l
1081+ 9249 13               inc de
1082+ 924A ED B0            ldir
1083+ 924C C9               ret
1084+ 924D
1085+ 924D              ; -----------------------------------------------------------------
1086+ 924D              ;
1087+ 924D              ;   19/7/23
1088+ 924D              ;
1089+ 924D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 924D              ;
1091+ 924D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 924D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 924D              ;
1094+ 924D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 924D              ;
1096+ 924D              ;   INPUTS:
1097+ 924D              ;
1098+ 924D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 924D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 924D
1101+ 924D              ;   MODIFICA: A, HL, BC y DE.
1102+ 924D
1103+ 924D              Guarda_coordenadas_X
1104+ 924D
1105+ 924D 7B               ld a,e
1106+ 924E A7               and a
1107+ 924F 20 04            jr nz,1F
1108+ 9251
1109+ 9251 06 02            ld b,2
1110+ 9253 18 02            jr 2F
1111+ 9255
1112+ 9255 06 03        1 ld b,3
1113+ 9257 72           2 ld (hl),d
1114+ 9258 23               inc hl
1115+ 9259 14               inc d
1116+ 925A 10 FB            djnz 2B
1117+ 925C
1118+ 925C C9               ret
1119+ 925D
1120+ 925D              ; -----------------------------------------------------------------
1121+ 925D              ;
1122+ 925D              ;   12/04/23
1123+ 925D              ;
1124+ 925D
1125+ 925D 3A 40 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9260 A7               and a
1127+ 9261 C8               ret z
1128+ 9262
1129+ 9262 FE 04            cp 4
1130+ 9264 20 09            jr nz,1F
1131+ 9266
1132+ 9266
1133+ 9266              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9266
1135+ 9266 CD 82 90         call Detecta_colision_nave_entidad
1136+ 9269
1137+ 9269 21 40 89         ld hl,Impacto2
1138+ 926C CB 5E            bit 3,(hl)
1139+ 926E C0               ret nz                                               ; Existe colisión, RET.
1140+ 926F
1141+ 926F              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 926F              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 926F
1144+ 926F 21 40 89     1 ld hl,Impacto2
1145+ 9272 CB 4E            bit 1,(hl)
1146+ 9274 28 07            jr z,2F
1147+ 9276
1148+ 9276 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9279 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 927B 18 0B            jr 3F
1151+ 927D
1152+ 927D 21 40 89     2 ld hl,Impacto2
1153+ 9280 CB 46            bit 0,(hl)
1154+ 9282 C8               ret z
1155+ 9283
1156+ 9283              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9283
1158+ 9283 21 02 89         ld hl,Ctrl_1
1159+ 9286 CB D6            set 2,(hl)
1160+ 9288
1161+ 9288 C9           3 ret
1162+ 9289
1163+ 9289              ; -----------------------------------------------------------------
1164+ 9289              ;
1165+ 9289              ;   19/7/23
1166+ 9289              ;
1167+ 9289              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9289
1169+ 9289 AF           Limpia_Coordenadas_X xor a
1170+ 928A 06 06            ld b,6
1171+ 928C 21 45 89         ld hl,Coordenadas_X_Amadeus
1172+ 928F 77           1 ld (hl),a
1173+ 9290 23               inc hl
1174+ 9291 10 FC            djnz 1B
1175+ 9293 C9               ret
1176+ 9294
1177+ 9294              ; -----------------------------------------------------------------
1178+ 9294              ;
1179+ 9294              ;   25/04/23
1180+ 9294              ;
1181+ 9294
1182+ 9294              Determina_resultado_comparativa
1183+ 9294
1184+ 9294              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9294              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9294              ;
1187+ 9294              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9294              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9294              ;
1190+ 9294              ;   SBC HL,DE
1191+ 9294
1192+ 9294              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9294              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9294
1195+ 9294              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9294              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9294
1198+ 9294
1199+ 9294 3A D9 88         ld a,(Cuad_objeto)
1200+ 9297 FE 02            cp 2
1201+ 9299 28 26            jr z,2F
1202+ 929B 38 24            jr c,2F
1203+ 929D
1204+ 929D              ; Cuadrantes 3º y 4º
1205+ 929D
1206+ 929D E6 01            and 1
1207+ 929F 28 10            jr z,4F
1208+ 92A1
1209+ 92A1              ; Cuadrante 3º
1210+ 92A1
1211+ 92A1 7C               ld a,h
1212+ 92A2 06 00            ld b,0
1213+ 92A4
1214+ 92A4 CD 2F 93         call Compara_cositas_H3
1215+ 92A7
1216+ 92A7 04               inc b
1217+ 92A8 05               dec b
1218+ 92A9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92AA
1220+ 92AA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92AB 06 00            ld b,0
1222+ 92AD
1223+ 92AD CD 41 93         call Compara_cositas_L3
1224+ 92B0 C9               ret
1225+ 92B1
1226+ 92B1              ; Cuadrante 4º
1227+ 92B1
1228+ 92B1 7C           4 ld a,h
1229+ 92B2 06 00            ld b,0
1230+ 92B4
1231+ 92B4 CD 53 93         call Compara_cositas_H4
1232+ 92B7
1233+ 92B7 04               inc b
1234+ 92B8 05               dec b
1235+ 92B9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92BA
1237+ 92BA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92BB 06 00            ld b,0
1239+ 92BD
1240+ 92BD CD 69 93         call Compara_cositas_L4
1241+ 92C0 C9               ret
1242+ 92C1
1243+ 92C1              ; Cuadrantes 1º y 2º.
1244+ 92C1
1245+ 92C1 28 10        2 jr z,3F
1246+ 92C3
1247+ 92C3              ; 1er Cuadrante
1248+ 92C3
1249+ 92C3 7C               ld a,h
1250+ 92C4 06 00            ld b,0
1251+ 92C6
1252+ 92C6 CD 07 93         call Compara_cositas_H1
1253+ 92C9
1254+ 92C9 04               inc b
1255+ 92CA 05               dec b
1256+ 92CB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92CC
1258+ 92CC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92CD 06 00            ld b,0
1260+ 92CF
1261+ 92CF CD 1D 93         call Compara_cositas_L1
1262+ 92D2 C9               ret
1263+ 92D3
1264+ 92D3
1265+ 92D3              ; 2º Cuadrante
1266+ 92D3
1267+ 92D3 7C           3 ld a,h
1268+ 92D4 06 00            ld b,0
1269+ 92D6
1270+ 92D6 CD E3 92         call Compara_cositas_H2
1271+ 92D9
1272+ 92D9 04               inc b
1273+ 92DA 05               dec b
1274+ 92DB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92DC
1276+ 92DC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92DD 06 00            ld b,0
1278+ 92DF
1279+ 92DF CD F5 92         call Compara_cositas_L2
1280+ 92E2 C9               ret
1281+ 92E3
1282+ 92E3 A7           Compara_cositas_H2 and a
1283+ 92E4 28 0D            jr z,1F
1284+ 92E6              ;    cp $fd
1285+ 92E6              ;    jr z,1F
1286+ 92E6              ;    cp $fe
1287+ 92E6              ;    jr z,1F
1288+ 92E6 FE FF            cp $ff
1289+ 92E8 28 09            jr z,1F
1290+ 92EA FE 01            cp $01
1291+ 92EC 28 05            jr z,1F
1292+ 92EE FE 02            cp $02
1293+ 92F0 28 01            jr z,1F
1294+ 92F2 C0               ret nz
1295+ 92F3 04           1 inc b
1296+ 92F4 C9               ret
1297+ 92F5
1298+ 92F5 A7           Compara_cositas_L2 and a
1299+ 92F6 28 0D            jr z,1F
1300+ 92F8              ;    cp $fd
1301+ 92F8              ;    jr z,1F
1302+ 92F8 FE FE            cp $fe
1303+ 92FA 28 09            jr z,1F
1304+ 92FC FE FF            cp $ff
1305+ 92FE 28 05            jr z,1F
1306+ 9300 FE 01            cp $01
1307+ 9302 28 01            jr z,1F
1308+ 9304              ;    cp $02
1309+ 9304              ;    jr z,1F
1310+ 9304 C0               ret nz
1311+ 9305 04           1 inc b
1312+ 9306 C9               ret
1313+ 9307
1314+ 9307 A7           Compara_cositas_H1 and a
1315+ 9308 28 11            jr z,1F
1316+ 930A              ;    cp $fd
1317+ 930A              ;    jr z,1F
1318+ 930A              ;    cp $fe
1319+ 930A              ;    jr z,1F
1320+ 930A FE FF            cp $ff
1321+ 930C 28 0D            jr z,1F
1322+ 930E FE 01            cp $01
1323+ 9310 28 09            jr z,1F
1324+ 9312 FE 02            cp $02
1325+ 9314 28 05            jr z,1F
1326+ 9316 FE 03            cp $03
1327+ 9318 28 01            jr z,1F
1328+ 931A C0               ret nz
1329+ 931B 04           1 inc b
1330+ 931C C9               ret
1331+ 931D
1332+ 931D A7           Compara_cositas_L1 and a
1333+ 931E 28 0D            jr z,1F
1334+ 9320              ;    cp $fd
1335+ 9320              ;    jr z,1F
1336+ 9320              ;    cp $fe
1337+ 9320              ;    jr z,1F
1338+ 9320              ;    cp $ff
1339+ 9320              ;    jr z,1F
1340+ 9320 FE 01            cp $01
1341+ 9322 28 09            jr z,1F
1342+ 9324 FE 02            cp $02
1343+ 9326 28 05            jr z,1F
1344+ 9328 FE 03            cp $03
1345+ 932A 28 01            jr z,1F
1346+ 932C C0               ret nz
1347+ 932D 04           1 inc b
1348+ 932E C9               ret
1349+ 932F
1350+ 932F A7           Compara_cositas_H3 and a
1351+ 9330 28 0D            jr z,1F
1352+ 9332              ;    cp $fd
1353+ 9332              ;    jr z,1F
1354+ 9332 FE FE            cp $fe
1355+ 9334 28 09            jr z,1F
1356+ 9336 FE FF            cp $ff
1357+ 9338 28 05            jr z,1F
1358+ 933A FE 01            cp $01
1359+ 933C 28 01            jr z,1F
1360+ 933E              ;    cp $02
1361+ 933E              ;    jr z,1F
1362+ 933E              ;    cp $03
1363+ 933E              ;    jr z,1F
1364+ 933E C0               ret nz
1365+ 933F 04           1 inc b
1366+ 9340 C9               ret
1367+ 9341
1368+ 9341 A7           Compara_cositas_L3 and a
1369+ 9342 28 0D            jr z,1F
1370+ 9344              ;    cp $fd
1371+ 9344              ;    jr z,1F
1372+ 9344              ;    cp $fe
1373+ 9344              ;    jr z,1F
1374+ 9344              ;    cp $ff
1375+ 9344              ;    jr z,1F
1376+ 9344 FE 01            cp $01
1377+ 9346 28 09            jr z,1F
1378+ 9348 FE 02            cp $02
1379+ 934A 28 05            jr z,1F
1380+ 934C FE 03            cp $03
1381+ 934E 28 01            jr z,1F
1382+ 9350 C0               ret nz
1383+ 9351 04           1 inc b
1384+ 9352 C9               ret
1385+ 9353
1386+ 9353 A7           Compara_cositas_H4 and a
1387+ 9354 28 11            jr z,1F
1388+ 9356 FE FD            cp $fd
1389+ 9358 28 0D            jr z,1F
1390+ 935A FE FE            cp $fe
1391+ 935C 28 09            jr z,1F
1392+ 935E FE FF            cp $ff
1393+ 9360 28 05            jr z,1F
1394+ 9362 FE 01            cp $01
1395+ 9364 28 01            jr z,1F
1396+ 9366              ;    cp $02
1397+ 9366              ;    jr z,1F
1398+ 9366              ;    cp $03
1399+ 9366              ;    jr z,1F
1400+ 9366 C0               ret nz
1401+ 9367 04           1 inc b
1402+ 9368 C9               ret
1403+ 9369
1404+ 9369 A7           Compara_cositas_L4 and a
1405+ 936A 28 0D            jr z,1F
1406+ 936C              ;    cp $fd
1407+ 936C              ;    jr z,1F
1408+ 936C FE FE            cp $fe
1409+ 936E 28 09            jr z,1F
1410+ 9370 FE FF            cp $ff
1411+ 9372 28 05            jr z,1F
1412+ 9374 FE 01            cp $01
1413+ 9376 28 01            jr z,1F
1414+ 9378              ;    cp $02
1415+ 9378              ;    jr z,1F
1416+ 9378              ;    cp $03
1417+ 9378              ;    jr z,1F
1418+ 9378 C0               ret nz
1419+ 9379 04           1 inc b
1420+ 937A C9               ret
# file closed: Disparo.asm
1643  937B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 937B              ; ******************************************************************************************************************************************************************************************
   2+ 937B              ;
   3+ 937B              ; 26/06/23
   4+ 937B              ;
   5+ 937B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 937B
   7+ 937B CD 5F 96     Draw call Prepara_draw
   8+ 937E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 937F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9380 28 05        	jr z,2F
  11+ 9382
  12+ 9382 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9385 18 0C        	jr 1F
  14+ 9387
  15+ 9387 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 938A 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 938D CD 1C 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9390              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9390 CD C1 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9393
  21+ 9393 3A EF 88     1 ld a,(Ctrl_0)
  22+ 9396 CB 6F        	bit 5,a
  23+ 9398 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 939A
  25+ 939A CD B2 93     	call Comprueba_limite_horizontal
  26+ 939D CD 42 94     	call Comprueba_limite_vertical
  27+ 93A0
  28+ 93A0              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93A0              ; -----------------------
  30+ 93A0              ; -----------------------
  31+ 93A0              ; -----------------------
  32+ 93A0
  33+ 93A0 CD 8F 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93A3 CD C6 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93A6 CD 25 96     	call Define_rutina_de_impresion
  36+ 93A9
  37+ 93A9 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93AC CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93AE 32 EF 88     	ld (Ctrl_0),a
  40+ 93B1
  41+ 93B1 C9           	ret
  42+ 93B2
  43+ 93B2              ; *******************************************************************************************************************************************************************************************
  44+ 93B2              ;	21/01/23
  45+ 93B2              ;
  46+ 93B2              ; 	Comprueba_limite_horizontal.
  47+ 93B2              ;
  48+ 93B2              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93B2              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93B2              ;
  51+ 93B2              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93B2              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93B2              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93B2              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93B2
  56+ 93B2
  57+ 93B2
  58+ 93B2 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93B5 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93B7 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93B9 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93BB 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93BE 18 09            jr 6F
  64+ 93C0 CB 5F        1 bit 3,a
  65+ 93C2 28 0A            jr z,2F
  66+ 93C4 E6 F7            and $f7
  67+ 93C6 32 EF 88         ld (Ctrl_0),a
  68+ 93C9 CD 1C 95     6 call Inicializacion
  69+ 93CC 18 5B            jr 5F
  70+ 93CE E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93CF
  72+ 93CF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93CF              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93CF
  75+ 93CF EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93D0 2A FD 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93D3 CD 7E 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93D6 67           	ld h,a
  79+ 93D7 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93D8 CD 7E 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93DB 67           	ld h,a
  82+ 93DC A7           	and a
  83+ 93DD ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93DF 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93E0 3A D9 88     	ld a,(Cuad_objeto)
  86+ 93E3 FE 02        	cp 2
  87+ 93E5 38 1E        	jr c,3F
  88+ 93E7 28 1C        	jr z,3F
  89+ 93E9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93EA 28 23            jr z,7F
  91+ 93EC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93EE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93F0 E1           	pop hl
  94+ 93F1
  95+ 93F1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93F1              ; _para indicar con E="2" en caso necesario.
  97+ 93F1
  98+ 93F1 E5               push hl
  99+ 93F2 C5               push bc
 100+ 93F3 CD 7E 99     	call calcula_tercio
 101+ 93F6 FE 01        	cp 1
 102+ 93F8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93FA CD 2A 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93FD 28 26            jr z,9F
 105+ 93FF 38 24            jr c,9F
 106+ 9401 1E 00        11 ld e,0
 107+ 9403 18 22            jr 8F
 108+ 9405 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9406 28 07        	jr z, 7F
 110+ 9408 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 940A 1E 00         	ld e,0
 112+ 940C E1           	pop hl
 113+ 940D 18 04        	jr 4F
 114+ 940F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9411 18 15            jr 10F
 116+ 9413
 117+ 9413              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9413              ; _para indicar con E="2" en caso necesario.
 119+ 9413
 120+ 9413 E5           4 push hl
 121+ 9414 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9415 CD 7E 99     	call calcula_tercio
 123+ 9418 FE 01        	cp 1
 124+ 941A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 941C CD 2A 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 941F 28 04            jr z,9F
 127+ 9421 30 02            jr nc,9F
 128+ 9423 18 02        	jr 8F
 129+ 9425 1E 02        9 ld e,2
 130+ 9427 C1           8 pop bc
 131+ 9428 E1           10 pop hl
 132+ 9429 C9           5 ret
 133+ 942A
 134+ 942A              ; --------------------
 135+ 942A              ;
 136+ 942A              ; 25/08/22
 137+ 942A
 138+ 942A CD 7E 99     Comprueba_centro call calcula_tercio
 139+ 942D 67               ld h,a
 140+ 942E 08           	ex af,af
 141+ 942F FE 02        	cp 2
 142+ 9431 38 07        	jr c,1F
 143+ 9433 28 05        	jr z,1F
 144+ 9435 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9438 18 03        	jr 2F
 146+ 943A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 943D 08           2 ex af,af
 148+ 943E A7               and a
 149+ 943F ED 42            sbc hl,bc
 150+ 9441 C9               ret
 151+ 9442
 152+ 9442              ; *********************************************************************************************************************************************************************************************
 153+ 9442              ;
 154+ 9442              ;   16/8/22
 155+ 9442              ;
 156+ 9442              ;	Comprueba_limite_vertical
 157+ 9442              ;
 158+ 9442              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9442              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9442              ;
 161+ 9442
 162+ 9442 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9445 7D           	ld a,l
 164+ 9446 E6 1F        	and $1F
 165+ 9448 57           	ld d,a
 166+ 9449 3A FF 88     	ld a,(Limite_vertical)
 167+ 944C BA           	cp d 											; Límite - Posición.
 168+ 944D 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 944E 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9451 CB 47        	bit 0,a
 171+ 9453 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9455
 173+ 9455              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9455
 175+ 9455 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9456 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9458
 178+ 9458              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9458              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9458
 181+ 9458 3A CB 88         ld a,(Coordenada_X)
 182+ 945B 16 0F            ld d,Centro_izquierda
 183+ 945D A7               and a
 184+ 945E 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 945F 28 1E            jr z,3F
 186+ 9461 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9463              ;                                                    ; _salimos sin modificar nada.
 188+ 9463 18 0E            jr 2F
 189+ 9465 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9466 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9468
 192+ 9468              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9468              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9468
 195+ 9468 3A CB 88         ld a,(Coordenada_X)
 196+ 946B 16 10            ld d,Centro_derecha
 197+ 946D A7               and a
 198+ 946E 92               sub d
 199+ 946F 28 0E            jr z,3F
 200+ 9471 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9473              ;                                                    ; _salimos sin modificar nada.
 202+ 9473 CB 43        2 bit 0,e
 203+ 9475 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9477 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9478 CD 0C 95         call Modificaccionne
 206+ 947B C1           	pop bc
 207+ 947C CD 1C 95         call Inicializacion
 208+ 947F C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9480
 210+ 9480              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9480
 212+ 9480 C5           4 push bc
 213+ 9481 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9484 0A           	ld a,(bc)
 215+ 9485 3D           	dec a
 216+ 9486 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9487 7D           	ld a,l
 218+ 9488 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9489 CB 47        	bit 0,a
 220+ 948B 28 03        	jr z,5F
 221+ 948D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 948E 18 2E        	jr 7F
 223+ 9490
 224+ 9490              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9490
 226+ 9490 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9491 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9492 3A EF 88     	ld a,(Ctrl_0)
 229+ 9495 CB 4F        	bit 1,a
 230+ 9497 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9499 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 949A
 233+ 949A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 949A
 235+ 949A 1C               inc e
 236+ 949B 1D               dec e
 237+ 949C 20 07            jr nz,12F
 238+ 949E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 949F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94A0 22 C7 88     	ld (Posicion_actual),hl
 241+ 94A3 18 44        13 jr 9F
 242+ 94A5 CB 43        12 bit 0,e
 243+ 94A7 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94A9              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94A9 C1           	pop bc
 246+ 94AA 18 D3        	jr 3B
 247+ 94AC 80           14 add b
 248+ 94AD 6F               ld l,a
 249+ 94AE 22 C7 88     	ld (Posicion_actual),hl
 250+ 94B1 CD 0C 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94B4 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94B6 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94B8 32 EF 88         ld (Ctrl_0),a
 254+ 94BB F1           	pop af
 255+ 94BC 18 2B        	jr 9F
 256+ 94BE
 257+ 94BE              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94BE
 259+ 94BE F5           7 push af
 260+ 94BF 3A EF 88     	ld a,(Ctrl_0)
 261+ 94C2 CB 47        	bit 0,a
 262+ 94C4 20 1D        	jr nz,8F
 263+ 94C6 F1           	pop af
 264+ 94C7
 265+ 94C7              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94C7
 267+ 94C7 1C           	inc e
 268+ 94C8 1D               dec e
 269+ 94C9 20 07            jr nz,10F
 270+ 94CB 90           	sub b
 271+ 94CC 6F               ld l,a
 272+ 94CD 22 C7 88     	ld (Posicion_actual),hl
 273+ 94D0 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94D2              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94D2 CB 43        10 bit 0,e
 276+ 94D4 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94D6              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94D6 C1           	pop bc
 279+ 94D7 18 A6        	jr 3B
 280+ 94D9 90           16 sub b
 281+ 94DA 6F               ld l,a
 282+ 94DB 22 C7 88     	ld (Posicion_actual),hl
 283+ 94DE CD 0C 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94E1 18 06            jr 9F
 285+ 94E3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94E5 32 EF 88         ld (Ctrl_0),a
 287+ 94E8 F1           	pop af
 288+ 94E9 C1           9 pop bc
 289+ 94EA 1E 00        	ld e,0
 290+ 94EC CD 1C 95         call Inicializacion
 291+ 94EF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94F0 08           	ex af,af
 293+ 94F1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94F2 18 8B            jr 3B
 295+ 94F4
 296+ 94F4              ; --------------------
 297+ 94F4
 298+ 94F4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94F6 CD 7A 96     1 call PreviousScan
 300+ 94F9 10 FB            djnz 1B
 301+ 94FB 22 C7 88     	ld (Posicion_actual),hl
 302+ 94FE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94FF C9           	ret
 304+ 9500
 305+ 9500              ; --------------------
 306+ 9500
 307+ 9500 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9502 CD 6B 96     1 call NextScan
 309+ 9505 10 FB            djnz 1B
 310+ 9507 22 C7 88     	ld (Posicion_actual),hl
 311+ 950A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 950B C9           	ret
 313+ 950C
 314+ 950C              ; --------------------
 315+ 950C              ;
 316+ 950C              ;	22/01/23
 317+ 950C              ;
 318+ 950C              ;	E="1". Hemos cambiado de cuadrante.
 319+ 950C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 950C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 950C
 322+ 950C
 323+ 950C              Modificaccionne
 324+ 950C
 325+ 950C 3A D9 88     	ld a,(Cuad_objeto)
 326+ 950F FE 02        	cp 2
 327+ 9511 CC F4 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9514 DC F4 94         call c,Modifica_Pos_actual
 329+ 9517 C8           	ret z
 330+ 9518 CD 00 95         call Modifica_Pos_actual2
 331+ 951B C9               ret
 332+ 951C
 333+ 951C              ; *************************************************************************************************************************************************************************************************
 334+ 951C              ;
 335+ 951C              ;	13/8/22
 336+ 951C              ;
 337+ 951C              ;	Inicializacion
 338+ 951C              ;
 339+ 951C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 951C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 951C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 951C              ;
 343+ 951C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 951C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 951C              ;	_ desaparece/aparece.
 346+ 951C
 347+ 951C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 951C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 951C              ;
 350+ 951C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 951C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 951C              ; 		   [E] ="0"
 353+ 951C
 354+ 951C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 951C
 356+ 951C CD 7E 99     Inicializacion call calcula_tercio
 357+ 951F 28 36        	jr z,primit
 358+ 9521 E6 02        	and 2
 359+ 9523 20 07        	jr nz,segmit
 360+ 9525 7D           	ld a,l
 361+ 9526 FE 7F        	cp $7f
 362+ 9528 38 2D        	jr c,primit
 363+ 952A 28 2B        	jr z,primit
 364+ 952C CD 89 95     segmit call column
 365+ 952F 38 13        	jr c,tercuad
 366+ 9531 3E 04        cuarcuad ld a,4
 367+ 9533 32 D9 88     	ld (Cuad_objeto),a
 368+ 9536 21 20 48     	ld hl,$4820
 369+ 9539 22 FD 88     	ld (Limite_horizontal),hl
 370+ 953C 21 FF 88     	ld hl,Limite_vertical
 371+ 953F 36 0D        	ld (hl),$0d
 372+ 9541 08           	ex af,af
 373+ 9542 18 3C        	jr 1F
 374+ 9544              tercuad
 375+ 9544 3E 03        	ld a,3
 376+ 9546 32 D9 88     	ld (Cuad_objeto),a
 377+ 9549 21 20 48     	ld hl,$4820
 378+ 954C 22 FD 88     	ld (Limite_horizontal),hl
 379+ 954F 21 FF 88     	ld hl,Limite_vertical
 380+ 9552 36 12        	ld (hl),$12
 381+ 9554 08           	ex af,af
 382+ 9555 18 29        	jr 1F
 383+ 9557 CD 89 95     primit call column
 384+ 955A 38 13        	jr c, primcuad
 385+ 955C              segcuad
 386+ 955C 3E 02        	ld a,2
 387+ 955E 32 D9 88     	ld (Cuad_objeto),a
 388+ 9561 21 C0 4F     	ld hl,$4fc0
 389+ 9564 22 FD 88     	ld (Limite_horizontal),hl
 390+ 9567 21 FF 88     	ld hl,Limite_vertical
 391+ 956A 36 0D        	ld (hl),$0d
 392+ 956C 08           	ex af,af
 393+ 956D 18 11        	jr 1F
 394+ 956F              primcuad
 395+ 956F 3E 01        	ld a,1
 396+ 9571 32 D9 88     	ld (Cuad_objeto),a
 397+ 9574 21 C0 4F     	ld hl,$4fc0
 398+ 9577 22 FD 88     	ld (Limite_horizontal),hl
 399+ 957A 21 FF 88     	ld hl,Limite_vertical
 400+ 957D 36 12        	ld (hl),$12
 401+ 957F 08           	ex af,af
 402+ 9580 CD 09 9D     1 call Genera_coordenadas
 403+ 9583 21 EF 88     	ld hl,Ctrl_0
 404+ 9586 CB EE        	set 5,(hl)
 405+ 9588 C9           	ret
 406+ 9589
 407+ 9589              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9589
 409+ 9589              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9589              ;
 411+ 9589              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9589
 413+ 9589 7D           column ld a,l
 414+ 958A E6 1F        	and $1f
 415+ 958C FE 10         	cp $10
 416+ 958E C9            	ret
 417+ 958F
 418+ 958F              ; --------------------------------------------------------------------------------------------------------------------
 419+ 958F              ;
 420+ 958F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 958F              ;
 422+ 958F              ; 14/12/22
 423+ 958F              ;
 424+ 958F              ;	Modifica: A y BC.
 425+ 958F
 426+ 958F 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9592 E6 01        	and 1
 428+ 9594 28 17        	jr z,1F
 429+ 9596
 430+ 9596              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9596
 432+ 9596 3A CB 88     	ld a,(Coordenada_X)
 433+ 9599 47           	ld b,a
 434+ 959A 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 959B 79           	ld a,c
 436+ 959C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 959D 38 08        	jr c,2F
 438+ 959F 47           	ld b,a
 439+ 95A0 79           	ld a,c
 440+ 95A1 90           	sub b
 441+ 95A2 32 FC 88     	ld (Columnas),a
 442+ 95A5 18 1B        	jr 4F
 443+ 95A7 79           2 ld a,c
 444+ 95A8 32 FC 88     	ld (Columnas),a
 445+ 95AB 18 15        	jr 4F
 446+ 95AD
 447+ 95AD              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95AD
 449+ 95AD 3A CB 88     1 ld a,(Coordenada_X)
 450+ 95B0 81           	add c
 451+ 95B1 3D           	dec a
 452+ 95B2 D6 1F        	sub $1f
 453+ 95B4 38 08        	jr c,3F
 454+ 95B6 47           	ld b,a
 455+ 95B7 79           	ld a,c
 456+ 95B8 90           	sub b
 457+ 95B9 32 FC 88     	ld (Columnas),a
 458+ 95BC 18 04        	jr 4F
 459+ 95BE 79           3 ld a,c
 460+ 95BF 32 FC 88     	ld (Columnas),a
 461+ 95C2 D9           4 exx
 462+ 95C3 4F           	ld c,a
 463+ 95C4 D9           	exx
 464+ 95C5 C9            ret
 465+ 95C6
 466+ 95C6              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95C6              ;
 468+ 95C6              ;   19/7/23
 469+ 95C6              ;
 470+ 95C6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95C6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95C6              ;
 473+ 95C6              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95C6              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95C6              ;
 476+ 95C6              ;	DESTRUYE: HL,B Y A.
 477+ 95C6
 478+ 95C6 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95C9 FE 02        	cp 2
 480+ 95CB 38 18        	jr c,1F
 481+ 95CD 28 16        	jr z,1F
 482+ 95CF E6 01        	and 1
 483+ 95D1 28 0D        	jr z,3F
 484+ 95D3
 485+ 95D3              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95D3
 487+ 95D3 CD 19 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95D6
 489+ 95D6 7D           9 ld a,l
 490+ 95D7 E6 1F        	and $1f
 491+ 95D9 28 2A        	jr z,7F
 492+ 95DB 2B           	dec hl
 493+ 95DC 10 F8        	djnz 9B
 494+ 95DE 18 25        	jr 7F
 495+ 95E0
 496+ 95E0              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95E0
 498+ 95E0 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 95E3 18 20        	jr 7F
 500+ 95E5
 501+ 95E5 28 14        1 jr z,2F
 502+ 95E7
 503+ 95E7              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95E7
 505+ 95E7 CD 19 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95EA
 507+ 95EA 7D           4 ld a,l
 508+ 95EB E6 1F        	and $1f
 509+ 95ED 28 03        	jr z,6F
 510+ 95EF 2B           	dec hl
 511+ 95F0 10 F8        	djnz 4B
 512+ 95F2 06 0F        6 ld b,15
 513+ 95F4 CD 7A 96     5 call PreviousScan
 514+ 95F7 10 FB        	djnz 5B
 515+ 95F9 18 0A        	jr 7F
 516+ 95FB
 517+ 95FB              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95FB
 519+ 95FB CD 19 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95FE 06 0F        	ld b,15
 521+ 9600 CD 7A 96     8 call PreviousScan
 522+ 9603 10 FB        	djnz 8B
 523+ 9605
 524+ 9605 E5           7 push hl
 525+ 9606 DD E1        	pop ix
 526+ 9608
 527+ 9608 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 960B E5           	push hl
 529+ 960C FD E1        	pop iy
 530+ 960E
 531+ 960E              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 960E
 533+ 960E 3A EF 88     	ld a,(Ctrl_0)
 534+ 9611 CB 77        	bit 6,a
 535+ 9613 C8           	ret z
 536+ 9614
 537+ 9614              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9614              ; _ entidad / Amadeus´.
 539+ 9614
 540+ 9614 DD 22 4B 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9618
 542+ 9618 C9           	ret
 543+ 9619
 544+ 9619              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9619              ;
 546+ 9619              ;	2/1/23
 547+ 9619              ;
 548+ 9619              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9619              ;
 550+ 9619              ;	Tras esta rutina tenemos:
 551+ 9619              ;
 552+ 9619              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9619              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9619              ;
 555+ 9619              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9619
 557+ 9619 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 961C 3A FC 88     	ld a,(Columnas)
 559+ 961F 3D           	dec a
 560+ 9620 20 01        	jr nz,1F
 561+ 9622 3C           	inc a
 562+ 9623 47           1 ld b,a
 563+ 9624 C9           	ret
 564+ 9625
 565+ 9625              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9625              ;
 567+ 9625              ;	3/1/23
 568+ 9625              ;
 569+ 9625              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9625              ;
 571+ 9625              ;	Destruye: A,B,HL y DE.
 572+ 9625
 573+ 9625              Define_rutina_de_impresion
 574+ 9625
 575+ 9625 3A C6 88     	ld a,(Columns)
 576+ 9628 47           	ld b,a
 577+ 9629 3A FC 88     	ld a,(Columnas)
 578+ 962C B8           	cp b
 579+ 962D 20 0D        	jr nz,2f
 580+ 962F
 581+ 962F              ;	La entidad se imprime entera.
 582+ 962F
 583+ 962F 21 4E 97     	ld hl, Indice_entidades_completas
 584+ 9632 E6 01        	and 1
 585+ 9634 28 02        	jr z,1F
 586+ 9636
 587+ 9636 23           	inc hl
 588+ 9637 23           	inc hl
 589+ 9638
 590+ 9638 CD 9C 8C     1 call Extrae_address
 591+ 963B C9           	ret		;	ret
 592+ 963C
 593+ 963C              ;	La entidad no se imprime entera en pantalla.
 594+ 963C
 595+ 963C 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 963F E6 01        	and 1
 597+ 9641 28 17        	jr z,3F
 598+ 9643
 599+ 9643              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9643
 601+ 9643 21 52 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9646 3A C6 88     4 ld a,(Columns)
 603+ 9649 E6 01        	and 1
 604+ 964B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 964D
 606+ 964D 23           	inc hl
 607+ 964E 23           	inc hl
 608+ 964F
 609+ 964F 3A FC 88     	ld a,(Columnas)
 610+ 9652 E6 01        	and 1
 611+ 9654 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9656
 613+ 9656 23           	inc hl
 614+ 9657 23           	inc hl
 615+ 9658
 616+ 9658 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 965A
 618+ 965A 21 58 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 965D 18 E7        	jr 4B
 620+ 965F
 621+ 965F              ; --------------------------------------------------------------------------------------------------------------------
 622+ 965F              ;
 623+ 965F              ;	Prepara_draw
 624+ 965F              ;
 625+ 965F              ;	Es una rutina de carga.
 626+ 965F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 965F              ;
 628+ 965F              ;	FUNCIONAMIENTO:
 629+ 965F              ;
 630+ 965F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 965F              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 965F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 965F              ;
 634+ 965F              ;	DESTRUYE:
 635+ 965F              ;
 636+ 965F              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 965F
 638+ 965F 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9662 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9663 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9664 4E           	ld c,(hl)
 642+ 9665 2A C7 88     	ld hl,(Posicion_actual)
 643+ 9668 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 966A C9           	ret
 645+ 966B
 646+ 966B              ;----------------------------------------------------------------------------------------------------------------
 647+ 966B              ;
 648+ 966B              ;	5/08/22
 649+ 966B              ;
 650+ 966B              ;   NextScan.
 651+ 966B              ;
 652+ 966B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 966B              ;
 654+ 966B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 966B              ;
 656+ 966B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 966B              ;
 658+ 966B              ;       DESTRUIDOS: AF y HL !!!
 659+ 966B              ;
 660+ 966B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 966B              ;
 662+ 966B
 663+ 966B 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 966C 7C               ld a,h
 665+ 966D E6 07            and 7
 666+ 966F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9670
 668+ 9670 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9671 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9673 6F               ld l,a
 671+ 9674 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9675
 673+ 9675 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9676 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9678 67               ld h,a
 676+ 9679 C9               ret
 677+ 967A
 678+ 967A              ;----------------------------------------------------------------------------------------------------------------
 679+ 967A              ;
 680+ 967A              ;	5/08/22
 681+ 967A              ;
 682+ 967A              ;   PreviousScan.
 683+ 967A              ;
 684+ 967A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 967A              ;
 686+ 967A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 967A              ;
 688+ 967A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 967A              ;
 690+ 967A              ;       DESTRUIDOS: AF y HL !!!
 691+ 967A              ;
 692+ 967A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 967A              ;
 694+ 967A
 695+ 967A 7C           PreviousScan ld a,h
 696+ 967B 25               dec h               ; Dec H.
 697+ 967C E6 07            and 7
 698+ 967E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 967F
 700+ 967F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9680 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9682 6F               ld l,a
 703+ 9683 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9684
 705+ 9684 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9685 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9687 67               ld h,a
 708+ 9688 C9               ret
 709+ 9689
 710+ 9689              ; -----------------------------------------------------------------------------------
 711+ 9689              ;
 712+ 9689              ;	31/7/23
 713+ 9689              ;
 714+ 9689              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9689              ;	Extrae fotos de Album_de_fotos.
 716+ 9689
 717+ 9689              Extrae_foto_entidades
 718+ 9689
 719+ 9689 21 01 70     	ld hl,Album_de_fotos+1
 720+ 968C 7E           	ld a,(hl)
 721+ 968D A7           	and a
 722+ 968E C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 968F
 724+ 968F 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9692 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9693 C8           	ret z
 727+ 9694
 728+ 9694              ; -----------------------------------
 729+ 9694
 730+ 9694 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9698 31 00 70     	ld sp,Album_de_fotos
 732+ 969B
 733+ 969B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 969D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 969E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 969F
 737+ 969F ED 73 15 89  	ld (Stack_2),sp
 738+ 96A3 ED 7B 13 89  	ld sp,(Stack)
 739+ 96A7
 740+ 96A7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96A7
 742+ 96A7 3E CD        	ld a,$cd
 743+ 96A9 32 B1 96     	ld (Imprime),a
 744+ 96AC EB           	ex de,hl
 745+ 96AD 22 B2 96     	ld (Imprime+1),hl
 746+ 96B0 EB           	ex de,hl
 747+ 96B1
 748+ 96B1              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96B1
 750+ 96B1 00 00 00     Imprime db 0,0,0
 751+ 96B4
 752+ 96B4 ED 73 13 89  	ld (Stack),sp
 753+ 96B8
 754+ 96B8 3A 0E 89     	ld a,(Numero_de_malotes)
 755+ 96BB 3D           	dec a
 756+ 96BC 28 09        	jr z,1F
 757+ 96BE 32 0E 89      	ld (Numero_de_malotes),a
 758+ 96C1
 759+ 96C1 ED 7B 15 89  	ld sp,(Stack_2)
 760+ 96C5 18 D4        	jr 2B
 761+ 96C7
 762+ 96C7 AF           1 xor a
 763+ 96C8 32 15 89     	ld (Stack_2),a
 764+ 96CB
 765+ 96CB C9           	ret
 766+ 96CC
 767+ 96CC              ; -----------------------------------------------------------------------------------
 768+ 96CC              ;
 769+ 96CC              ;	28/2/23
 770+ 96CC              ;
 771+ 96CC              ;	Pinta los disparos generados.
 772+ 96CC
 773+ 96CC              Extrae_foto_disparos
 774+ 96CC
 775+ 96CC 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96CF 7E               ld a,(hl)
 777+ 96D0 A7               and a
 778+ 96D1 C8               ret z
 779+ 96D2
 780+ 96D2 3A 3B 89     	ld a,(Numero_de_disparotes)
 781+ 96D5 A7           	and a
 782+ 96D6 C8           	ret z
 783+ 96D7 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96DB 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96DE
 786+ 96DE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96E0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96E1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96E2
 790+ 96E2 ED 73 15 89  	ld (Stack_2),sp
 791+ 96E6 ED 7B 13 89  	ld sp,(Stack)
 792+ 96EA
 793+ 96EA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96EA
 795+ 96EA 3E CD        	ld a,$cd
 796+ 96EC 32 F4 96     	ld (Imprime2),a
 797+ 96EF EB           	ex de,hl
 798+ 96F0 22 F5 96     	ld (Imprime2+1),hl
 799+ 96F3 EB           	ex de,hl
 800+ 96F4
 801+ 96F4              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96F4
 803+ 96F4 00 00 00     Imprime2 db 0,0,0
 804+ 96F7
 805+ 96F7 3A 3B 89     	ld a,(Numero_de_disparotes)
 806+ 96FA 3D           	dec a
 807+ 96FB 28 09        	jr z,1F
 808+ 96FD 32 3B 89      	ld (Numero_de_disparotes),a
 809+ 9700
 810+ 9700 ED 7B 15 89  	ld sp,(Stack_2)
 811+ 9704 18 D8        	jr 2B
 812+ 9706
 813+ 9706 AF           1 xor a
 814+ 9707 32 15 89     	ld (Stack_2),a
 815+ 970A C9           	ret
 816+ 970B
 817+ 970B              ; -----------------------------------------------------------------------------------
 818+ 970B              ;
 819+ 970B              ;	4/9/23
 820+ 970B              ;
 821+ 970B              ;	Rutina principal de pintado de Amadeus.
 822+ 970B              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 970B
 824+ 970B 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 970E 7E           	ld a,(hl)
 826+ 970F A7           	and a
 827+ 9710 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9711
 829+ 9711 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 9714 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 9715 C8           	ret z
 832+ 9716
 833+ 9716              ; -----------------------------------
 834+ 9716
 835+ 9716 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 971A 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 971D
 838+ 971D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 971F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9720 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9721
 842+ 9721 ED 73 15 89  	ld (Stack_2),sp
 843+ 9725 ED 7B 13 89  	ld sp,(Stack)
 844+ 9729
 845+ 9729              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 9729
 847+ 9729 3E CD        	ld a,$cd
 848+ 972B 32 33 97     	ld (Imprime_Amadeus),a
 849+ 972E EB           	ex de,hl
 850+ 972F 22 34 97     	ld (Imprime_Amadeus+1),hl
 851+ 9732 EB           	ex de,hl
 852+ 9733
 853+ 9733              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9733
 855+ 9733 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9736
 857+ 9736 ED 73 13 89  	ld (Stack),sp
 858+ 973A
 859+ 973A 3A 0E 89     	ld a,(Numero_de_malotes)
 860+ 973D 3D           	dec a
 861+ 973E 28 09        	jr z,1F
 862+ 9740 32 0E 89      	ld (Numero_de_malotes),a
 863+ 9743
 864+ 9743 ED 7B 15 89  	ld sp,(Stack_2)
 865+ 9747 18 D4        	jr 2B
 866+ 9749
 867+ 9749 AF           1 xor a
 868+ 974A 32 15 89     	ld (Stack_2),a
 869+ 974D
 870+ 974D C9           	ret
# file closed: Draw_XOR.asm
1644  974E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 974E              ;   índices de Rutinas de impresión.
   2+ 974E
   3+ 974E 5E 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9750 8B 97            defw Pinta_Amadeus_3x2
   5+ 9752
   6+ 9752 E1 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9754 81 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9756 35 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9758
  10+ 9758 0B 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 975A 0F 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 975C C3 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 975E
  14+ 975E
  15+ 975E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 975E              ;
  17+ 975E              ;   12/12/22
  18+ 975E              ;
  19+ 975E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 975E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 975E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 975E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 975E              ;
  24+ 975E              ;   Modifica: DE y HL.
  25+ 975E
  26+ 975E ED 73 13 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9762 FD F9        	ld sp,iy
  28+ 9764 06 10            ld b,16
  29+ 9766 D1           1 pop de
  30+ 9767 7B               ld a,e
  31+ 9768 AE               xor (hl)
  32+ 9769 77           	ld (hl),a
  33+ 976A 23           	inc hl
  34+ 976B 7A               ld a,d
  35+ 976C AE               xor (hl)
  36+ 976D 77           	ld (hl),a
  37+ 976E 2B           	dec hl
  38+ 976F 24           	inc h
  39+ 9770 7C               ld a,h
  40+ 9771 E6 07            and 7
  41+ 9773 20 0A            jr nz,2F
  42+ 9775 7D               ld a,l
  43+ 9776 C6 20            add a,$20
  44+ 9778 6F               ld l,a
  45+ 9779 38 04            jr c,2F
  46+ 977B 7C               ld a,h
  47+ 977C D6 08            sub 8
  48+ 977E 67               ld h,a
  49+ 977F 7C           2 ld a,h
  50+ 9780 FE 58            cp $58
  51+ 9782 28 02            jr z,3F
  52+ 9784 10 E0            djnz 1B
  53+ 9786 ED 7B 13 89  3 ld sp,(Stack)
  54+ 978A C9           	ret
  55+ 978B
  56+ 978B ED 73 13 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 978F FD F9        	ld sp,iy
  58+ 9791 06 08            ld b,8
  59+ 9793 D1           1 pop de
  60+ 9794 7B               ld a,e
  61+ 9795 AE               xor (hl)
  62+ 9796 77           	ld (hl),a
  63+ 9797 23           	inc hl
  64+ 9798 7A               ld a,d
  65+ 9799 AE               xor (hl)
  66+ 979A 77           	ld (hl),a
  67+ 979B 23           	inc hl
  68+ 979C D1           	pop de
  69+ 979D 7B               ld a,e
  70+ 979E AE               xor (hl)
  71+ 979F 77           	ld (hl),a
  72+ 97A0 2B           	dec hl
  73+ 97A1 2B           	dec hl
  74+ 97A2 24           	inc h
  75+ 97A3 7C               ld a,h
  76+ 97A4 E6 07            and 7
  77+ 97A6 20 0A            jr nz,2F
  78+ 97A8 7D               ld a,l
  79+ 97A9 C6 20            add a,$20
  80+ 97AB 6F               ld l,a
  81+ 97AC 38 04            jr c,2F
  82+ 97AE 7C               ld a,h
  83+ 97AF D6 08            sub 8
  84+ 97B1 67               ld h,a
  85+ 97B2 7C           2 ld a,h
  86+ 97B3 FE 58            cp $58
  87+ 97B5 28 25            jr z,4F
  88+ 97B7 7A               ld a,d
  89+ 97B8 AE               xor (hl)
  90+ 97B9 77               ld (hl),a
  91+ 97BA D1           	pop de
  92+ 97BB 23           	inc hl
  93+ 97BC 7B               ld a,e
  94+ 97BD AE               xor (hl)
  95+ 97BE 77           	ld (hl),a
  96+ 97BF 23           	inc hl
  97+ 97C0 7A               ld a,d
  98+ 97C1 AE               xor (hl)
  99+ 97C2 77           	ld (hl),a
 100+ 97C3 2B           	dec hl
 101+ 97C4 2B           	dec hl
 102+ 97C5 24           	inc h
 103+ 97C6 7C               ld a,h
 104+ 97C7 E6 07            and 7
 105+ 97C9 20 0A            jr nz,3F
 106+ 97CB 7D               ld a,l
 107+ 97CC C6 20            add a,$20
 108+ 97CE 6F               ld l,a
 109+ 97CF 38 04            jr c,3F
 110+ 97D1 7C               ld a,h
 111+ 97D2 D6 08            sub 8
 112+ 97D4 67               ld h,a
 113+ 97D5 7C           3 ld a,h
 114+ 97D6 FE 58            cp $58
 115+ 97D8 28 02            jr z,4F
 116+ 97DA 10 B7            djnz 1B
 117+ 97DC ED 7B 13 89  4 ld sp,(Stack)
 118+ 97E0 C9           	ret
 119+ 97E1
 120+ 97E1              ; ---------------------------------------------------
 121+ 97E1
 122+ 97E1 ED 73 13 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97E5 FD F9        	ld sp,iy
 124+ 97E7
 125+ 97E7              ; >>>
 126+ 97E7
 127+ 97E7 06 10            ld b,16
 128+ 97E9 D1           1 pop de
 129+ 97EA 7A           	ld a,d
 130+ 97EB AE           	xor (hl)
 131+ 97EC 77           	ld (hl),a
 132+ 97ED 24           	inc h
 133+ 97EE 7C               ld a,h
 134+ 97EF E6 07            and 7
 135+ 97F1 20 0C            jr nz,2F
 136+ 97F3 7D               ld a,l
 137+ 97F4 C6 20            add a,$20
 138+ 97F6 6F               ld l,a
 139+ 97F7 38 06            jr c,2F
 140+ 97F9 7C               ld a,h
 141+ 97FA D6 08            sub 8
 142+ 97FC 67               ld h,a
 143+ 97FD 18 00            jr 2F
 144+ 97FF 7C           2 ld a,h
 145+ 9800 FE 58            cp $58
 146+ 9802 28 02            jr z,3F
 147+ 9804 10 E3            djnz 1B
 148+ 9806 ED 7B 13 89  3 ld sp,(Stack)
 149+ 980A C9           	ret
 150+ 980B
 151+ 980B ED 73 13 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 980F FD F9        	ld sp,iy
 153+ 9811
 154+ 9811              ; >>>
 155+ 9811
 156+ 9811 06 10            ld b,16
 157+ 9813 D1           1 pop de
 158+ 9814 7B           	ld a,e
 159+ 9815 AE           	xor (hl)
 160+ 9816 77           	ld (hl),a
 161+ 9817 24           	inc h
 162+ 9818 7C               ld a,h
 163+ 9819 E6 07            and 7
 164+ 981B 20 0C            jr nz,2F
 165+ 981D 7D               ld a,l
 166+ 981E C6 20            add a,$20
 167+ 9820 6F               ld l,a
 168+ 9821 38 06            jr c,2F
 169+ 9823 7C               ld a,h
 170+ 9824 D6 08            sub 8
 171+ 9826 67               ld h,a
 172+ 9827 18 00            jr 2F
 173+ 9829 7C           2 ld a,h
 174+ 982A FE 58            cp $58
 175+ 982C 28 02            jr z,3F
 176+ 982E 10 E3            djnz 1B
 177+ 9830 ED 7B 13 89  3 ld sp,(Stack)
 178+ 9834 C9           	ret
 179+ 9835
 180+ 9835              ; ---------------------------------------------------
 181+ 9835
 182+ 9835 ED 73 13 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9839 FD F9        	ld sp,iy
 184+ 983B 06 08            ld b,8
 185+ 983D D1           1 pop de
 186+ 983E 7A           	ld a,d
 187+ 983F AE           	xor (hl)
 188+ 9840 77           	ld (hl),a
 189+ 9841 23           	inc hl
 190+ 9842 D1           	pop de
 191+ 9843 7B           	ld a,e
 192+ 9844 AE           	xor (hl)
 193+ 9845 77           	ld (hl),a
 194+ 9846 2B           	dec hl
 195+ 9847 24            	inc h
 196+ 9848 7C               ld a,h
 197+ 9849 E6 07            and 7
 198+ 984B 20 0A            jr nz,2F
 199+ 984D 7D               ld a,l
 200+ 984E C6 20            add a,$20
 201+ 9850 6F               ld l,a
 202+ 9851 38 04            jr c,2F
 203+ 9853 7C               ld a,h
 204+ 9854 D6 08            sub 8
 205+ 9856 67               ld h,a
 206+ 9857 7C           2 ld a,h
 207+ 9858 FE 58            cp $58
 208+ 985A 28 20            jr z,4F
 209+ 985C D1               pop de
 210+ 985D 7B           	ld a,e
 211+ 985E AE           	xor (hl)
 212+ 985F 77           	ld (hl),a
 213+ 9860 23           	inc hl
 214+ 9861 7A           	ld a,d
 215+ 9862 AE           	xor (hl)
 216+ 9863 77           	ld (hl),a
 217+ 9864 2B           	dec hl
 218+ 9865 24           	inc h
 219+ 9866 7C               ld a,h
 220+ 9867 E6 07            and 7
 221+ 9869 20 0A            jr nz,3F
 222+ 986B 7D               ld a,l
 223+ 986C C6 20            add a,$20
 224+ 986E 6F               ld l,a
 225+ 986F 38 04            jr c,3F
 226+ 9871 7C               ld a,h
 227+ 9872 D6 08            sub 8
 228+ 9874 67               ld h,a
 229+ 9875 7C           3 ld a,h
 230+ 9876 FE 58            cp $58
 231+ 9878 28 02            jr z,4F
 232+ 987A 10 C1            djnz 1B
 233+ 987C ED 7B 13 89  4 ld sp,(Stack)
 234+ 9880 C9           	ret
 235+ 9881
 236+ 9881 ED 73 13 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9885 FD F9        	ld sp,iy
 238+ 9887 06 08            ld b,8
 239+ 9889 D1           1 pop de
 240+ 988A D1           	pop de
 241+ 988B 7B           	ld a,e
 242+ 988C AE           	xor (hl)
 243+ 988D 77           	ld (hl),a
 244+ 988E 24            	inc h
 245+ 988F 7C               ld a,h
 246+ 9890 E6 07            and 7
 247+ 9892 20 0A            jr nz,2F
 248+ 9894 7D               ld a,l
 249+ 9895 C6 20            add a,$20
 250+ 9897 6F               ld l,a
 251+ 9898 38 04            jr c,2F
 252+ 989A 7C               ld a,h
 253+ 989B D6 08            sub 8
 254+ 989D 67               ld h,a
 255+ 989E 7C           2 ld a,h
 256+ 989F FE 58            cp $58
 257+ 98A1 28 1B            jr z,4F
 258+ 98A3 D1               pop de
 259+ 98A4 7A           	ld a,d
 260+ 98A5 AE           	xor (hl)
 261+ 98A6 77           	ld (hl),a
 262+ 98A7 24           	inc h
 263+ 98A8 7C               ld a,h
 264+ 98A9 E6 07            and 7
 265+ 98AB 20 0A            jr nz,3F
 266+ 98AD 7D               ld a,l
 267+ 98AE C6 20            add a,$20
 268+ 98B0 6F               ld l,a
 269+ 98B1 38 04            jr c,3F
 270+ 98B3 7C               ld a,h
 271+ 98B4 D6 08            sub 8
 272+ 98B6 67               ld h,a
 273+ 98B7 7C           3 ld a,h
 274+ 98B8 FE 58            cp $58
 275+ 98BA 28 02            jr z,4F
 276+ 98BC 10 CB            djnz 1B
 277+ 98BE ED 7B 13 89  4 ld sp,(Stack)
 278+ 98C2 C9           	ret
 279+ 98C3
 280+ 98C3 ED 73 13 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98C7 FD F9        	ld sp,iy
 282+ 98C9 06 08            ld b,8
 283+ 98CB D1           1 pop de
 284+ 98CC 7B           	ld a,e
 285+ 98CD AE           	xor (hl)
 286+ 98CE 77           	ld (hl),a
 287+ 98CF 23           	inc hl
 288+ 98D0 7A           	ld a,d
 289+ 98D1 AE           	xor (hl)
 290+ 98D2 77           	ld (hl),a
 291+ 98D3 2B           	dec hl
 292+ 98D4 24             	inc h
 293+ 98D5 7C               ld a,h
 294+ 98D6 E6 07            and 7
 295+ 98D8 20 0A            jr nz,2F
 296+ 98DA 7D               ld a,l
 297+ 98DB C6 20            add a,$20
 298+ 98DD 6F               ld l,a
 299+ 98DE 38 04            jr c,2F
 300+ 98E0 7C               ld a,h
 301+ 98E1 D6 08            sub 8
 302+ 98E3 67               ld h,a
 303+ 98E4 7C           2 ld a,h
 304+ 98E5 FE 58            cp $58
 305+ 98E7 28 21            jr z,4F
 306+ 98E9 D1               pop de
 307+ 98EA 7A           	ld a,d
 308+ 98EB AE           	xor (hl)
 309+ 98EC 77           	ld (hl),a
 310+ 98ED 23           	inc hl
 311+ 98EE D1               pop de
 312+ 98EF 7B           	ld a,e
 313+ 98F0 AE           	xor (hl)
 314+ 98F1 77           	ld (hl),a
 315+ 98F2 2B           	dec hl
 316+ 98F3 24           	inc h
 317+ 98F4 7C               ld a,h
 318+ 98F5 E6 07            and 7
 319+ 98F7 20 0A            jr nz,3F
 320+ 98F9 7D               ld a,l
 321+ 98FA C6 20            add a,$20
 322+ 98FC 6F               ld l,a
 323+ 98FD 38 04            jr c,3F
 324+ 98FF 7C               ld a,h
 325+ 9900 D6 08            sub 8
 326+ 9902 67               ld h,a
 327+ 9903 7C           3 ld a,h
 328+ 9904 FE 58            cp $58
 329+ 9906 28 02            jr z,4F
 330+ 9908 10 C1            djnz 1B
 331+ 990A ED 7B 13 89  4 ld sp,(Stack)
 332+ 990E C9           	ret
 333+ 990F
 334+ 990F ED 73 13 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9913 FD F9        	ld sp,iy
 336+ 9915 06 08            ld b,8
 337+ 9917 D1           1 pop de
 338+ 9918 7B           	ld a,e
 339+ 9919 AE           	xor (hl)
 340+ 991A 77           	ld (hl),a
 341+ 991B 24            	inc h
 342+ 991C 7C               ld a,h
 343+ 991D E6 07            and 7
 344+ 991F 20 0A            jr nz,2F
 345+ 9921 7D               ld a,l
 346+ 9922 C6 20            add a,$20
 347+ 9924 6F               ld l,a
 348+ 9925 38 04            jr c,2F
 349+ 9927 7C               ld a,h
 350+ 9928 D6 08            sub 8
 351+ 992A 67               ld h,a
 352+ 992B 7C           2 ld a,h
 353+ 992C FE 58            cp $58
 354+ 992E 28 1C            jr z,4F
 355+ 9930 D1               pop de
 356+ 9931 7A           	ld a,d
 357+ 9932 AE           	xor (hl)
 358+ 9933 77           	ld (hl),a
 359+ 9934 24           	inc h
 360+ 9935 7C               ld a,h
 361+ 9936 E6 07            and 7
 362+ 9938 20 0A            jr nz,3F
 363+ 993A 7D               ld a,l
 364+ 993B C6 20            add a,$20
 365+ 993D 6F               ld l,a
 366+ 993E 38 04            jr c,3F
 367+ 9940 7C               ld a,h
 368+ 9941 D6 08            sub 8
 369+ 9943 67               ld h,a
 370+ 9944 7C           3 ld a,h
 371+ 9945 FE 58            cp $58
 372+ 9947 28 03            jr z,4F
 373+ 9949 D1               pop de
 374+ 994A 10 CB            djnz 1B
 375+ 994C ED 7B 13 89  4 ld sp,(Stack)
 376+ 9950 C9           	ret
 377+ 9951
 378+ 9951              ; ---------------------------------------------------
 379+ 9951              ;
 380+ 9951              ;   27/02/23
 381+ 9951              ;
 382+ 9951              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9951              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9951              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9951
 386+ 9951 ED 73 13 89  Pinta_Disparo ld (Stack),sp
 387+ 9955 FD F9            ld sp,iy
 388+ 9957 06 03            ld b,3
 389+ 9959 D1           1 pop de
 390+ 995A 7B               ld a,e
 391+ 995B AE               xor (hl)
 392+ 995C 77               ld (hl),a
 393+ 995D 23               inc hl
 394+ 995E 7A               ld a,d
 395+ 995F AE               xor (hl)
 396+ 9960 77               ld (hl),a
 397+ 9961 2B               dec hl
 398+ 9962
 399+ 9962 24               inc h
 400+ 9963 7C               ld a,h
 401+ 9964 E6 07            and 7
 402+ 9966 20 0A            jr nz,2F
 403+ 9968 7D               ld a,l
 404+ 9969 C6 20            add a,$20
 405+ 996B 6F               ld l,a
 406+ 996C 38 04            jr c,2F
 407+ 996E 7C               ld a,h
 408+ 996F D6 08            sub 8
 409+ 9971 67               ld h,a
 410+ 9972 7C           2 ld a,h
 411+ 9973 FE 58            cp $58
 412+ 9975 28 02            jr z,3F
 413+ 9977
 414+ 9977 10 E0            djnz 1B
 415+ 9979 ED 7B 13 89  3 ld sp,(Stack)
 416+ 997D C9               ret
 417+ 997E
# file closed: Rutinas_de_impresion_sprites.asm
1645  997E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 997E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 997E              ;
   3+ 997E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 997E              ;
   5+ 997E              ; *****************************************************************************************************************************************************************************************
   6+ 997E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 997E
   8+ 997E 7C           calcula_tercio ld a,h
   9+ 997F E6 18        	and $18
  10+ 9981 CB 2F        	sra a
  11+ 9983 CB 2F        	sra a
  12+ 9985 CB 2F        	sra a
  13+ 9987 C9           	ret
  14+ 9988
# file closed: calcula_tercio.asm
1646  9988              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9988              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9988              ;
   3+ 9988              ;
   4+ 9988              ;	CLS.
   5+ 9988              ;
   6+ 9988              ;	Limpia la pantalla y define sus atributos.
   7+ 9988              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9988              ;
   9+ 9988              ;	COLORES: 0 ..... NEGRO
  10+ 9988              ;    		 1 ..... AZUL
  11+ 9988              ; 			 2 ..... ROJO
  12+ 9988              ;			 3 ..... MAGENTA
  13+ 9988              ; 			 4 ..... VERDE
  14+ 9988              ; 			 5 ..... CIAN
  15+ 9988              ;			 6 ..... AMARILLO
  16+ 9988              ; 			 7 ..... BLANCO
  17+ 9988              ;
  18+ 9988              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9988              ;
  20+ 9988              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9988
  22+ 9988
  23+ 9988 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 998B 11 01 40     	LD DE,$4001
  25+ 998E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9991 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9993 ED B0        	LDIR
  28+ 9995 01 FF 02     	LD BC,767
  29+ 9998 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9999 ED B0        	LDIR
  31+ 999B C9           	ret
  32+ 999C
# file closed: Cls.asm
1647  999C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 999C              ; ******************************************************************************************************************************************************************************************
   2+ 999C              ;
   3+ 999C              ;   20/05/23
   4+ 999C              ;
   5+ 999C              ;	Recompone_posicion_inicio
   6+ 999C              ;
   7+ 999C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 999C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 999C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 999C              ;	_ a una u otra rutina.
  11+ 999C
  12+ 999C              Recompone_posicion_inicio
  13+ 999C
  14+ 999C 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 999F 7D           	ld a,l
  16+ 99A0 E6 1F        	and $1f
  17+ 99A2 28 16        	jr z,1F
  18+ 99A4
  19+ 99A4 FE 1F        	cp $1f
  20+ 99A6 28 0D        	jr z,3F
  21+ 99A8
  22+ 99A8 21 00 89     	ld hl,Ctrl_2
  23+ 99AB CB C6        	set 0,(hl)
  24+ 99AD 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 99B0 22 03 89     	ld (Repone_puntero_objeto),hl
  26+ 99B3 18 08        	jr 2F
  27+ 99B5
  28+ 99B5 CD 56 9B     3 call Mov_left
  29+ 99B8 18 03        	jr 2F
  30+ 99BA
  31+ 99BA CD 38 9A     1 call Mov_right
  32+ 99BD 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99C0 22 C9 88     	ld (Puntero_objeto),hl
  34+ 99C3 C9           	ret
  35+ 99C4
  36+ 99C4              ; ******************************************************************************************************************************************************************************************
  37+ 99C4              ;
  38+ 99C4              ;   27/05/23
  39+ 99C4              ;
  40+ 99C4              ;	Mov_down
  41+ 99C4              ;
  42+ 99C4              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99C4              ;
  44+ 99C4              ;
  45+ 99C4              Mov_down
  46+ 99C4
  47+ 99C4 CD 26 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99C7              ;																	; _ repone (Puntero_objeto).
  49+ 99C7 21 EF 88     	ld hl,Ctrl_0
  50+ 99CA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99CC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99CC              ; 																	; _ en el caso de que no lo haya.
  53+ 99CC 3A DD 88     	ld a,(Vel_down)
  54+ 99CF 47           	ld b,a
  55+ 99D0 2A C7 88         ld hl,(Posicion_actual)
  56+ 99D3 CD 7E 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99D6 E6 02        	and 2
  58+ 99D8 28 0F        	jr z,1F
  59+ 99DA
  60+ 99DA              ; Nos encontramos en el último tercio de pantalla.
  61+ 99DA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99DA
  63+ 99DA 7C           	ld a,h
  64+ 99DB FE 57        	cp $57
  65+ 99DD 20 0A        	jr nz,1F
  66+ 99DF
  67+ 99DF 7D           	ld a,l
  68+ 99E0 C6 20        	add $20
  69+ 99E2 30 05        	jr nc,1F
  70+ 99E4
  71+ 99E4              ; ------------------------------
  72+ 99E4              ;	call Reaparece_arriba
  73+ 99E4 CD E3 9C     	call Reinicio
  74+ 99E7              ; ------------------------------
  75+ 99E7
  76+ 99E7 18 08        	jr 3F
  77+ 99E9 CD 6B 96     1 call NextScan
  78+ 99EC 22 C7 88     	ld (Posicion_actual),hl
  79+ 99EF 10 E2            djnz 2B
  80+ 99F1 CD 09 9D     3 call Genera_coordenadas
  81+ 99F4 C9           	ret
  82+ 99F5
  83+ 99F5              ; ******************************************************************************************************************************************************************************************
  84+ 99F5              ;
  85+ 99F5              ;   27/05/23
  86+ 99F5              ;
  87+ 99F5              ;	Mov_up
  88+ 99F5              ;
  89+ 99F5              ; 	Mueve el Sprite hacia arriba.
  90+ 99F5              ;
  91+ 99F5              ;
  92+ 99F5              Mov_up
  93+ 99F5
  94+ 99F5 CD 26 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99F8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99F8 21 EF 88     	ld hl,Ctrl_0
  97+ 99FB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99FD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99FD              ; 																		; _ en el caso de que no lo haya.
 100+ 99FD 3A DC 88     	ld a,(Vel_up)
 101+ 9A00 47           	ld b,a
 102+ 9A01 2A C7 88     	ld hl,(Posicion_actual)
 103+ 9A04 CD 7E 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A07 A7           	and a
 105+ 9A08 20 10        	jr nz,1F
 106+ 9A0A
 107+ 9A0A              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A0A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A0A
 110+ 9A0A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A0B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A0D 20 0B            jr nz,1F
 113+ 9A0F 7D               ld a,l
 114+ 9A10 D6 20            sub $20
 115+ 9A12 30 06            jr nc,1F
 116+ 9A14 25               dec h
 117+ 9A15
 118+ 9A15              ; -----------------------------
 119+ 9A15 CD C4 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A18              ;	call Reinicio
 121+ 9A18              ; -----------------------------
 122+ 9A18
 123+ 9A18 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A1A CD 7A 96     1 call PreviousScan
 125+ 9A1D 22 C7 88     	ld (Posicion_actual),hl
 126+ 9A20 10 E2            djnz 3B
 127+ 9A22 CD 09 9D     2 call Genera_coordenadas
 128+ 9A25 C9           	ret
 129+ 9A26
 130+ 9A26              ; -----------------------------
 131+ 9A26              ;
 132+ 9A26              ;	27/5/23
 133+ 9A26              ;
 134+ 9A26              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A26              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A26              ;
 137+ 9A26              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A26              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A26              ;
 140+ 9A26              ;	Modifica: A y (Puntero_objeto).
 141+ 9A26
 142+ 9A26 3A 00 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A29 CB 47        	bit 0,a
 144+ 9A2B C8           	ret z
 145+ 9A2C CB 87        	res 0,a
 146+ 9A2E 32 00 89     	ld (Ctrl_2),a
 147+ 9A31 2A 03 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A34 22 C9 88     	ld (Puntero_objeto),hl
 149+ 9A37 C9           	ret
 150+ 9A38
 151+ 9A38              ; ******************************************************************************************************************************************************************************************
 152+ 9A38              ;
 153+ 9A38              ;	19/10/22
 154+ 9A38              ;
 155+ 9A38              ;	Mov_right.
 156+ 9A38              ;
 157+ 9A38              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A38              ;
 159+ 9A38
 160+ 9A38 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 9A3B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A3D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A3D              ; 																	; _ en el caso de que no lo haya.
 164+ 9A3D 3A EF 88     	ld a,(Ctrl_0)
 165+ 9A40 CB 77        	bit 6,a
 166+ 9A42 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A44
 168+ 9A44 CD 72 9C     	call Stop_Amadeus_right
 169+ 9A47 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A48 18 4D        	jr 8F
 171+ 9A4A
 172+ 9A4A 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A4D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A4F 20 46        	jr nz,8F
 175+ 9A51
 176+ 9A51 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A54 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A55 28 40        	jr z,8F
 179+ 9A57
 180+ 9A57              ; ---------- ---------- ----------
 181+ 9A57              ;
 182+ 9A57              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A57
 184+ 9A57 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A5A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A5C 28 11        	jr z,1F
 187+ 9A5E 38 06        	jr c,6F
 188+ 9A60 FE 04        	cp 4
 189+ 9A62 28 14        	jr z,7F
 190+ 9A64 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A66
 192+ 9A66              ; ---------- ---------- ----------
 193+ 9A66              ;
 194+ 9A66              ; Perfiles de velocidad
 195+ 9A66              ;
 196+ 9A66
 197+ 9A66 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A69 FE FE        	cp $fe
 199+ 9A6B 20 2A        	jr nz,8F
 200+ 9A6D 18 10        	jr 3F
 201+ 9A6F 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A72 FE FD        	cp $fd
 203+ 9A74 20 21        	jr nz,8F
 204+ 9A76 18 07        	jr 3F
 205+ 9A78 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A7B FE FB        	cp $fb
 207+ 9A7D 20 18        	jr nz,8F
 208+ 9A7F
 209+ 9A7F              ; ---------- ---------- ----------
 210+ 9A7F
 211+ 9A7F              3
 212+ 9A7F CD B2 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A82              ;	call Reinicio
 214+ 9A82
 215+ 9A82              ; ---------- ---------- ----------
 216+ 9A82              ;
 217+ 9A82              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A82
 219+ 9A82 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A84 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A85 CD 9E 9A     	call DESPLZ_DER
 222+ 9A88 C1           	pop bc
 223+ 9A89 10 F9        	djnz 5B
 224+ 9A8B 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A8E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A8F 22 C7 88     	ld (Posicion_actual),hl
 227+ 9A92 CD 09 9D     	call Genera_coordenadas
 228+ 9A95 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A97
 230+ 9A97              ; ---------- ---------- ----------
 231+ 9A97
 232+ 9A97 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9A9A CD 9E 9A     	call DESPLZ_DER
 234+ 9A9D C9           2 ret
 235+ 9A9E
 236+ 9A9E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A9E              ;
 238+ 9A9E              ;	22/9/22
 239+ 9A9E              ;
 240+ 9A9E
 241+ 9A9E CD AD 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AA1 CD F9 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9AA4 CD 22 9B         call Ciclo_completo
 244+ 9AA7 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AAA CB FE        	set 7,(hl)
 246+ 9AAC C9           	ret
 247+ 9AAD
 248+ 9AAD              ; ******************************************************************************************************************************************************************************************
 249+ 9AAD              ;	15/02/23
 250+ 9AAD              ;
 251+ 9AAD
 252+ 9AAD 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AB0 47           	ld b,a
 254+ 9AB1 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AB4 23           1 inc hl
 256+ 9AB5 23           	inc hl
 257+ 9AB6 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AB8 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9ABB CD 9C 8C     	call Extrae_address
 260+ 9ABE 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9AC1
 262+ 9AC1              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AC1
 264+ 9AC1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AC1              ; Cuántos movimientos hemos hecho ??
 266+ 9AC1              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AC1
 268+ 9AC1 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AC4 EB           	ex de,hl
 270+ 9AC5 A7           	and a
 271+ 9AC6 ED 52        	sbc hl,de
 272+ 9AC8 CB 3D        	srl l
 273+ 9ACA 3E 08        6 ld a,8
 274+ 9ACC 95           	sub l
 275+ 9ACD 30 1E        	jr nc,3F
 276+ 9ACF
 277+ 9ACF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9ACF              ; B="0".
 279+ 9ACF
 280+ 9ACF 04           4 inc b
 281+ 9AD0 3C           	inc a
 282+ 9AD1 20 FC        	jr nz,4B
 283+ 9AD3 78           	ld a,b
 284+ 9AD4 08           	ex af,af
 285+ 9AD5 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9AD8 23           5 inc hl
 287+ 9AD9 23           	inc hl
 288+ 9ADA 10 FC        	djnz 5B
 289+ 9ADC 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9ADF CD 9C 8C     	call Extrae_address
 291+ 9AE2 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9AE5
 293+ 9AE5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AE5              ; _(Posicion_actual).
 295+ 9AE5
 296+ 9AE5 21 C7 88     	ld hl,Posicion_actual
 297+ 9AE8 34           	inc (hl)
 298+ 9AE9 08               ex af,af
 299+ 9AEA 6F           	ld l,a
 300+ 9AEB 18 DD        	jr 6B
 301+ 9AED
 302+ 9AED              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AED
 304+ 9AED 47           3 ld b,a
 305+ 9AEE 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AF1 23           2 inc hl
 307+ 9AF2 23           	inc hl
 308+ 9AF3 10 FC        	djnz 2B
 309+ 9AF5 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AF8 C9           8 ret
 311+ 9AF9
 312+ 9AF9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AF9              ;
 314+ 9AF9              ;	24/7/22
 315+ 9AF9              ;
 316+ 9AF9              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AF9              ;
 318+ 9AF9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AF9              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AF9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AF9
 322+ 9AF9 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AFC A7           	and a
 324+ 9AFD 20 1F        	jr nz,1F
 325+ 9AFF D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B01 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9B04
 328+ 9B04 21 C6 88     	ld hl,Columns
 329+ 9B07 34           	inc (hl)
 330+ 9B08 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9B0B E6 01        	and 1
 332+ 9B0D 28 0F        	jr z,1F
 333+ 9B0F 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B12 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B13 22 C7 88     	ld (Posicion_actual),hl
 336+ 9B16 CD 09 9D     	call Genera_coordenadas
 337+ 9B19 CD 7E 9C     	call Inc_CTRL_DESPLZ
 338+ 9B1C 18 03        	jr 2F
 339+ 9B1E CD 7E 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B21 C9           2 ret
 341+ 9B22
 342+ 9B22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B22              ;
 344+ 9B22              ;	24/7/22
 345+ 9B22              ;
 346+ 9B22              ;	Ciclo_completo.
 347+ 9B22              ;
 348+ 9B22              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B22              ;
 350+ 9B22              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B22              ; 	Decrementamos (Columns).
 352+ 9B22              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B22              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B22
 355+ 9B22
 356+ 9B22 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B25 FE FF        	cp $ff
 358+ 9B27 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B29 E6 F0        	and $f0
 360+ 9B2B 20 28        	jr nz,3F
 361+ 9B2D
 362+ 9B2D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B2D
 364+ 9B2D 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9B30 47           	ld b,a
 366+ 9B31 3E F8        	ld a,$f8
 367+ 9B33 80           	add b
 368+ 9B34 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9B37 18 1C        	jr 3F
 370+ 9B39 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B3C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B3D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B3E 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9B41 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B44 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B46 20 0A        	jr nz,2F
 377+ 9B48 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B4B 23           	inc hl
 379+ 9B4C 22 C7 88     	ld (Posicion_actual),hl
 380+ 9B4F CD 09 9D     	call Genera_coordenadas
 381+ 9B52
 382+ 9B52              ; Inicia el puntero de Sprite.
 383+ 9B52
 384+ 9B52 CD B3 8C     2 call Inicia_puntero_objeto_der
 385+ 9B55 C9           3 ret
 386+ 9B56
 387+ 9B56              ; ******************************************************************************************************************************************************************************************
 388+ 9B56              ;
 389+ 9B56              ;	15/02/23
 390+ 9B56              ;
 391+ 9B56              ;	Mov_left.
 392+ 9B56              ;
 393+ 9B56              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B56              ;
 395+ 9B56              Mov_left
 396+ 9B56
 397+ 9B56 21 EF 88     	ld hl,Ctrl_0
 398+ 9B59 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B5B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B5B              ; 																	; _ en el caso de que no lo haya.
 401+ 9B5B 3A EF 88     	ld a,(Ctrl_0)
 402+ 9B5E CB 77        	bit 6,a
 403+ 9B60 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B62
 405+ 9B62 CD 78 9C     	call Stop_Amadeus_left
 406+ 9B65 C8           	ret z
 407+ 9B66 20 4A        	jr nz,8F
 408+ 9B68
 409+ 9B68 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9B6B A7           	and a
 411+ 9B6C 20 44        	jr nz,8F
 412+ 9B6E
 413+ 9B6E 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B71 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B72 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B74
 417+ 9B74              ; ---------- ---------- ----------
 418+ 9B74
 419+ 9B74 3A DA 88     	ld a,(Vel_left)
 420+ 9B77 FE 02        	cp 2
 421+ 9B79 28 0F        	jr z,1F
 422+ 9B7B 38 04        	jr c,6F
 423+ 9B7D FE 04        	cp 4
 424+ 9B7F 28 12        	jr z,7F
 425+ 9B81
 426+ 9B81              ; ---------- ---------- ----------
 427+ 9B81
 428+ 9B81 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B84 FE F8        	cp $f8
 430+ 9B86 20 2A        	jr nz,8F
 431+ 9B88 18 10        	jr 4F
 432+ 9B8A 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B8D FE F9        	cp $f9
 434+ 9B8F 20 21        	jr nz,8F
 435+ 9B91 18 07        	jr 4F
 436+ 9B93 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B96 FE FB        	cp $fb
 438+ 9B98 20 18        	jr nz,8F
 439+ 9B9A
 440+ 9B9A              ; ---------- ---------- ----------
 441+ 9B9A
 442+ 9B9A              4
 443+ 9B9A CD A0 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B9D              ;	call Reinicio
 445+ 9B9D
 446+ 9B9D              ; ---------- ---------- ----------
 447+ 9B9D
 448+ 9B9D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B9F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BA0
 451+ 9BA0              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BA0              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BA0
 454+ 9BA0 CD B9 9B     	call DESPLZ_IZQ
 455+ 9BA3 C1           	pop bc
 456+ 9BA4 10 F9        	djnz 5B
 457+ 9BA6 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BA9 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BAA 22 C7 88     	ld (Posicion_actual),hl
 460+ 9BAD CD 09 9D     	call Genera_coordenadas
 461+ 9BB0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BB2
 463+ 9BB2              ; ---------- ---------- ----------
 464+ 9BB2
 465+ 9BB2              ; Movemos, no hay recolocación.
 466+ 9BB2
 467+ 9BB2 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9BB5 CD B9 9B     	call DESPLZ_IZQ
 469+ 9BB8 C9           2 ret
 470+ 9BB9
 471+ 9BB9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BB9              ;
 473+ 9BB9              ;	22/9/22
 474+ 9BB9
 475+ 9BB9              DESPLZ_IZQ
 476+ 9BB9
 477+ 9BB9 CD C8 9B     	call Desplaza_izquierda
 478+ 9BBC CD 14 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BBF CD 3C 9C     	call Ciclo_completo_2
 480+ 9BC2 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BC5 CB BE        	res 7,(hl)
 482+ 9BC7 C9           	ret
 483+ 9BC8
 484+ 9BC8              Desplaza_izquierda
 485+ 9BC8
 486+ 9BC8 3A DA 88     	ld a,(Vel_left)
 487+ 9BCB 47           	ld b,a
 488+ 9BCC 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BCF 23           1 inc hl
 490+ 9BD0 23           	inc hl
 491+ 9BD1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BD3 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BD6 CD 9C 8C     	call Extrae_address
 494+ 9BD9 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9BDC
 496+ 9BDC              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BDC
 498+ 9BDC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BDC              ; Cuántos movimientos hemos hecho ??
 500+ 9BDC              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BDC
 502+ 9BDC 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BDF EB           	ex de,hl
 504+ 9BE0 A7           	and a
 505+ 9BE1 ED 52        	sbc hl,de
 506+ 9BE3 CB 3D        	srl l
 507+ 9BE5 3E 08        6 ld a,8
 508+ 9BE7 95           	sub l
 509+ 9BE8 30 1E        	jr nc,3F
 510+ 9BEA
 511+ 9BEA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BEA              ; B="0".
 513+ 9BEA
 514+ 9BEA 04           4 inc b
 515+ 9BEB 3C           	inc a
 516+ 9BEC 20 FC        	jr nz,4B
 517+ 9BEE 78           	ld a,b
 518+ 9BEF 08           	ex af,af
 519+ 9BF0 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BF3 23           5 inc hl
 521+ 9BF4 23           	inc hl
 522+ 9BF5 10 FC        	djnz 5B
 523+ 9BF7 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BFA CD 9C 8C     	call Extrae_address
 525+ 9BFD 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9C00
 527+ 9C00              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C00              ; _(Posicion_actual).
 529+ 9C00
 530+ 9C00 21 C7 88     	ld hl,Posicion_actual
 531+ 9C03 35           	dec (hl)
 532+ 9C04 08           	ex af,af
 533+ 9C05 6F           	ld l,a
 534+ 9C06 18 DD        	jr 6B
 535+ 9C08
 536+ 9C08              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C08
 538+ 9C08 47           3 ld b,a
 539+ 9C09 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9C0C 23           2 inc hl
 541+ 9C0D 23           	inc hl
 542+ 9C0E 10 FC        	djnz 2B
 543+ 9C10 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C13 C9           8 ret
 545+ 9C14
 546+ 9C14              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C14              ;
 548+ 9C14              ;	modifica_parametros_1er_DESPLZ
 549+ 9C14              ;
 550+ 9C14              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C14              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C14              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C14
 554+ 9C14 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C17 A7           	and a
 556+ 9C18 20 1E        	jr nz,1F
 557+ 9C1A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C1B 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9C1E 21 C6 88     	ld hl,Columns
 560+ 9C21 34           	inc (hl)
 561+ 9C22 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9C25 E6 01        	and 1
 563+ 9C27 20 0F        	jr nz,1F
 564+ 9C29 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C2C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C2D 22 C7 88     	ld (Posicion_actual),hl
 567+ 9C30 CD 09 9D     	call Genera_coordenadas
 568+ 9C33 CD 8F 9C     	call Dec_CTRL_DESPLZ
 569+ 9C36 18 03        	jr 2F
 570+ 9C38 CD 8F 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C3B C9           2 ret
 572+ 9C3C
 573+ 9C3C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C3C
 575+ 9C3C 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C3F FE F7        	cp $f7
 577+ 9C41 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C43 30 2C        	jr nc,3F
 579+ 9C45
 580+ 9C45              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C45
 582+ 9C45 06 00        	ld b,0
 583+ 9C47 04           4 inc b
 584+ 9C48 3C           	inc a
 585+ 9C49 FE F7        	cp $f7
 586+ 9C4B 20 FA        	jr nz,4B
 587+ 9C4D 3E FF        	ld a,$ff
 588+ 9C4F 90           	sub b
 589+ 9C50 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9C53 18 1C        	jr 3F
 591+ 9C55
 592+ 9C55              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C55
 594+ 9C55 21 C6 88     1 ld hl,Columns
 595+ 9C58 35           	dec (hl)
 596+ 9C59 AF           	xor a
 597+ 9C5A 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9C5D 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9C60 E6 01        	and 1
 600+ 9C62 28 0A        	jr z,2F
 601+ 9C64 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C67 2B           	dec hl
 603+ 9C68 22 C7 88     	ld (Posicion_actual),hl
 604+ 9C6B CD 09 9D     	call Genera_coordenadas
 605+ 9C6E
 606+ 9C6E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C6E
 608+ 9C6E CD C6 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C71 C9           3 ret
 610+ 9C72
 611+ 9C72              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C72              ;
 613+ 9C72              ;	19/10/22
 614+ 9C72              ;
 615+ 9C72              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C72              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C72
 618+ 9C72 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C75 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C77 C9           	ret
 621+ 9C78
 622+ 9C78              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C78              ;
 624+ 9C78              ;	19/10/22
 625+ 9C78              ;
 626+ 9C78              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C78              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C78
 629+ 9C78 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C7B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C7D C9           	ret
 632+ 9C7E
 633+ 9C7E              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C7E              ;
 635+ 9C7E              ;	24/7/22
 636+ 9C7E              ;
 637+ 9C7E              ;	Inc_CTRL_DESPLZ
 638+ 9C7E              ;
 639+ 9C7E              ;
 640+ 9C7E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C7E
 642+ 9C7E 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C81 3A DB 88     	ld a,(Vel_right)
 644+ 9C84 A7           	and a
 645+ 9C85 28 06        	jr z,1F
 646+ 9C87 47           	ld b,a
 647+ 9C88 34           3 inc (hl)
 648+ 9C89 10 FD        	djnz 3B
 649+ 9C8B 18 01        	jr 2F
 650+ 9C8D 34           1 inc (hl)
 651+ 9C8E C9           2 ret
 652+ 9C8F
 653+ 9C8F              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C8F              ;
 655+ 9C8F              ;	5/2/23
 656+ 9C8F              ;
 657+ 9C8F              ;	Dec_CTRL_DESPLZ
 658+ 9C8F              ;
 659+ 9C8F              ;
 660+ 9C8F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C8F
 662+ 9C8F 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C92 3A DA 88     	ld a,(Vel_left)
 664+ 9C95 A7           	and a
 665+ 9C96 28 06        	jr z,1F
 666+ 9C98 47           	ld b,a
 667+ 9C99 35           3 dec (hl)
 668+ 9C9A 10 FD        	djnz 3B
 669+ 9C9C 18 01        	jr 2F
 670+ 9C9E 35           1 dec (hl)
 671+ 9C9F C9           2 ret
 672+ 9CA0
 673+ 9CA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CA0
 675+ 9CA0 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CA3 01 1F 00     	ld bc,31
 677+ 9CA6 A7           	and a
 678+ 9CA7 ED 4A        	adc hl,bc
 679+ 9CA9 22 C7 88     	ld (Posicion_actual),hl
 680+ 9CAC 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CAF CB C6        	set 0,(hl)
 682+ 9CB1 C9           	ret
 683+ 9CB2
 684+ 9CB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CB2
 686+ 9CB2 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CB5 01 1F 00     	ld bc,31
 688+ 9CB8 A7           	and a
 689+ 9CB9 ED 42        	sbc hl,bc
 690+ 9CBB 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CBE 21 EF 88     	ld hl,Ctrl_0
 692+ 9CC1 CB CE        	set 1,(hl)
 693+ 9CC3 C9           	ret
 694+ 9CC4
 695+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CC4
 697+ 9CC4 24           Reaparece_abajo inc h
 698+ 9CC5 01 E0 17     	ld bc,$17e0
 699+ 9CC8 A7           	and a
 700+ 9CC9 ED 4A        	adc hl,bc
 701+ 9CCB 22 C7 88     	ld (Posicion_actual),hl
 702+ 9CCE 21 EF 88     	ld hl,Ctrl_0
 703+ 9CD1 CB D6        	set 2,(hl)
 704+ 9CD3 C9           	ret
 705+ 9CD4
 706+ 9CD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CD4
 708+ 9CD4 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CD7 A7           	and a
 710+ 9CD8 ED 42        	sbc hl,bc
 711+ 9CDA 22 C7 88     	ld (Posicion_actual),hl
 712+ 9CDD 21 EF 88     	ld hl,Ctrl_0
 713+ 9CE0 CB DE        	set 3,(hl)
 714+ 9CE2 C9           	ret
 715+ 9CE3
 716+ 9CE3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CE3              ;
 718+ 9CE3              ;	15/07/23
 719+ 9CE3
 720+ 9CE3              Reinicio
 721+ 9CE3
 722+ 9CE3              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CE3
 724+ 9CE3 AF           	xor a
 725+ 9CE4 21 F4 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CE7 CD 05 9D     	call Limpia_contenido_hl
 727+ 9CEA
 728+ 9CEA 21 C7 88     	ld hl,Posicion_actual
 729+ 9CED CD 05 9D     	call Limpia_contenido_hl
 730+ 9CF0
 731+ 9CF0 CD 37 A0     	call Inicializa_Puntero_indice_mov
 732+ 9CF3 CD C1 9F     	call Inicia_Puntero_mov
 733+ 9CF6
 734+ 9CF6 21 F6 88     	ld hl,Incrementa_puntero
 735+ 9CF9 06 05        	ld b,5
 736+ 9CFB 77           1 ld (hl),a
 737+ 9CFC 23           	inc hl
 738+ 9CFD 10 FC        	djnz 1B
 739+ 9CFF
 740+ 9CFF 21 00 89     	ld hl,Ctrl_2
 741+ 9D02 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D04
 743+ 9D04 C9           	ret
 744+ 9D05
 745+ 9D05 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D06 23           	inc hl
 747+ 9D07 77           	ld (hl),a
 748+ 9D08 C9           	ret
 749+ 9D09
 750+ 9D09
# file closed: Direcciones.asm
1648  9D09              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D09              ; ------------------------------------------------------------------------
   2+ 9D09              ;
   3+ 9D09              ;	02/04/23
   4+ 9D09              ;
   5+ 9D09              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D09              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D09              ;
   8+ 9D09              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D09              ;
  10+ 9D09              ;	Modifica: A,BC y DE.
  11+ 9D09
  12+ 9D09 C5           Genera_coordenadas push bc
  13+ 9D0A E5           	push hl
  14+ 9D0B D5           	push de
  15+ 9D0C
  16+ 9D0C 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9D0F
  18+ 9D0F 7D           	ld a,l
  19+ 9D10 E6 1F        	and $1f
  20+ 9D12 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D15
  22+ 9D15 CD 7E 99     	call calcula_tercio
  23+ 9D18 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D19
  25+ 9D19 1E 00        	ld e,0
  26+ 9D1B 7D           	ld a,l
  27+ 9D1C E6 E0        	and $e0
  28+ 9D1E 28 01        	jr z,1F
  29+ 9D20 04           	inc b
  30+ 9D21
  31+ 9D21 04           1 inc b
  32+ 9D22 05           	dec b
  33+ 9D23 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D25              ;														; _ , salimos.
  35+ 9D25 1C           3 inc e
  36+ 9D26 D6 20        	sub 32
  37+ 9D28 20 FB        	jr nz,3B
  38+ 9D2A 10 F5        	djnz 1B
  39+ 9D2C
  40+ 9D2C 7B           2 ld a,e
  41+ 9D2D 32 CC 88     	ld (Coordenada_y),a
  42+ 9D30
  43+ 9D30 D1           	pop de
  44+ 9D31 E1           	pop hl
  45+ 9D32 C1           	pop bc
  46+ 9D33
  47+ 9D33 C9           	ret
  48+ 9D34
  49+ 9D34              ; ------------------------------------------------------------------------
  50+ 9D34              ;	28/05/23
  51+ 9D34              ;
  52+ 9D34              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D34              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D34              ;
  55+ 9D34              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D34              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D34              ;
  58+ 9D34              ;		DE="$120d"
  59+ 9D34              ;
  60+ 9D34              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D34              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D34              ;
  63+ 9D34              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D34
  65+ 9D34              ;	Modifica: A,BC y DE.
  66+ 9D34
  67+ 9D34
  68+ 9D34              Genera_coordenadas_disparo
  69+ 9D34
  70+ 9D34              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D34
  72+ 9D34 7D           	ld a,l
  73+ 9D35 E6 1F        	and $1f
  74+ 9D37 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D38 CD 7E 99     	call calcula_tercio
  76+ 9D3B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D3C 1E 00        	ld e,0
  78+ 9D3E 7D           	ld a,l
  79+ 9D3F E6 E0        	and $e0
  80+ 9D41 28 01        	jr z,1F
  81+ 9D43 04           	inc b
  82+ 9D44 1C           1 inc e
  83+ 9D45 D6 20        	sub 32
  84+ 9D47 20 FB        	jr nz,1B
  85+ 9D49 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D4B C9           	ret
  87+ 9D4C
# file closed: Genera_coordenadas.asm
1649  9D4C              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D4C              ; Relojes y temporizaciones.
   2+ 9D4C
   3+ 9D4C              ; ------------------------------------------------------
   4+ 9D4C              ;
   5+ 9D4C              ;	16/7/23
   6+ 9D4C              ;
   7+ 9D4C              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D4C              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D4C              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D4C              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D4C              ;
  12+ 9D4C              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D4C              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D4C
  15+ 9D4C              ; Disparo_entidad db 1
  16+ 9D4C              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D4C              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D4C
  19+ 9D4C              Habilita_disparos
  20+ 9D4C
  21+ 9D4C 7E           	ld a,(hl)
  22+ 9D4D A7           	and a
  23+ 9D4E C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D4F
  25+ 9D4F EB           	ex de,hl
  26+ 9D50
  27+ 9D50 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D51 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D52
  30+ 9D52              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D52
  32+ 9D52 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D53 7E           	ld a,(hl)
  34+ 9D54 23           	inc hl
  35+ 9D55 77           	ld (hl),a
  36+ 9D56
  37+ 9D56 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D57 3E 01        	ld a,1
  39+ 9D59 77           	ld (hl),a
  40+ 9D5A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1650  9D5B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D5B
   2+ 9D5B
   3+ 9D5B              ;   07/07/23
   4+ 9D5B              ;
   5+ 9D5B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D5B              ;
   7+ 9D5B              ;   Codificación:
   8+ 9D5B              ;
   9+ 9D5B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D5B              ;
  11+ 9D5B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D5B              ;
  13+ 9D5B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D5B              ;
  15+ 9D5B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D5B              ;
  17+ 9D5B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D5B              ;                               ..... %01000010 Vel_up 4
  19+ 9D5B              ;                                               Vel_down 2
  20+ 9D5B              ;                               ..... $42
  21+ 9D5B              ;
  22+ 9D5B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D5B              ;
  24+ 9D5B              ;                               ..... %01000010 Vel_left 4
  25+ 9D5B              ;                                               Vel_right 2
  26+ 9D5B              ;                               ..... $42
  27+ 9D5B              ;
  28+ 9D5B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D5B              ;
  30+ 9D5B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D5B              ;
  32+ 9D5B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D5B              ;
  34+ 9D5B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D5B              ;                                     $53
  36+ 9D5B              ;
  37+ 9D5B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D5B              ;
  39+ 9D5B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D5B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D5B              ;
  42+ 9D5B              ;                       Arriba ..... $81
  43+ 9D5B              ;                       Arriba - izquierda ..... $a1
  44+ 9D5B              ;                       Arriba - derecha ..... $91
  45+ 9D5B              ;
  46+ 9D5B              ;                       Abajo ..... $41
  47+ 9D5B              ;                       Abajo - izquierda ..... $61
  48+ 9D5B              ;                       Abajo - derecha ..... $51
  49+ 9D5B              ;
  50+ 9D5B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D5B              ;
  52+ 9D5B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D5B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D5B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D5B              ;
  56+ 9D5B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D5B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D5B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D5B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D5B              ;
  61+ 9D5B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D5B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D5B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D5B              ;
  65+ 9D5B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D5B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D5B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D5B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D5B
  70+ 9D5B              ; ----- ----- ----- ----- -----
  71+ 9D5B
  72+ 9D5B 87 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D5D 8F 9D            defw F_1
  74+ 9D5F 99 9D            defw F_2
  75+ 9D61 A3 9D            defw Codo_abajo_derecha
  76+ 9D63 D7 9D            defw Derecha_y_subiendo
  77+ 9D65 E1 9D            defw Derecha_y_subiendo_1
  78+ 9D67 EB 9D            defw F_3
  79+ 9D69 F5 9D            defw F_4
  80+ 9D6B FF 9D            defw Derecha_y_bajando
  81+ 9D6D 09 9E            defw Derecha_y_bajando_1
  82+ 9D6F 13 9E            defw Derecha_y_bajando_2
  83+ 9D71 1D 9E            defw Codo_derecha_abajo
  84+ 9D73 4D 9E            defw Codo_abajo_izq.
  85+ 9D75 81 9E            defw Izquierda_y_subiendo
  86+ 9D77 8B 9E            defw Izquierda_y_subiendo_1
  87+ 9D79 95 9E            defw F_5
  88+ 9D7B 9F 9E            defw F_6
  89+ 9D7D A9 9E            defw Izquierda_y_bajando
  90+ 9D7F B3 9E            defw Izquierda_y_bajando_1
  91+ 9D81 BD 9E            defw Izquierda_y_bajando_2
  92+ 9D83 C7 9E            defw Codo_izquierda_abajo
  93+ 9D85 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D87
  95+ 9D87 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D8B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D8F
  98+ 9D8F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D93 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D97 08 00
 100+ 9D99 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D9D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DA1 0F FE
 102+ 9DA3
 103+ 9DA3 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DA7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DAB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DAF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DB3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DB7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DBB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DBF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DC3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DC7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DCB 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DCF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DD3 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DD7
 117+ 9DD7 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DDB 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DDF 06 00
 119+ 9DE1
 120+ 9DE1 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DE5 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DE9 02 00
 122+ 9DEB
 123+ 9DEB 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DEF 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DF3 04 00
 125+ 9DF5 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DF9 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DFD 08 00
 127+ 9DFF
 128+ 9DFF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E03 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E07 02 00
 130+ 9E09
 131+ 9E09 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E0D 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E11 06 00
 133+ 9E13
 134+ 9E13 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E17 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E1B 06 00
 136+ 9E1D
 137+ 9E1D              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E1D
 139+ 9E1D 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E21 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E25 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E29 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E2D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E31 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E35 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E39 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E3D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E41 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E45 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E49 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E4D
 152+ 9E4D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E51 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E55 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E59 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E5D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E61 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E65 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E69 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E6D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E71 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E75 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E79 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E7D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E81
 166+ 9E81 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E85 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E89 06 00
 168+ 9E8B
 169+ 9E8B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E8F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E93 02 00
 171+ 9E95
 172+ 9E95 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E99 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E9D 04 00
 174+ 9E9F 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EA3 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EA7 08 00
 176+ 9EA9
 177+ 9EA9 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EAD 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EB1 02 00
 179+ 9EB3
 180+ 9EB3 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EB7 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EBB 06 00
 182+ 9EBD
 183+ 9EBD 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EC1 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EC5 06 00
 185+ 9EC7
 186+ 9EC7 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9ECB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9ECF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9ED3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9ED7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EDB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EDF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EE3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EE7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EEB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EEF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EF3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EF7
 199+ 9EF7              ; ----- ----- ----- ----- -----
 200+ 9EF7              ;
 201+ 9EF7              ;   27/06/23
 202+ 9EF7
 203+ 9EF7              Movimiento
 204+ 9EF7
 205+ 9EF7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EF7
 207+ 9EF7              ;    ld hl,(Posicion_actual)
 208+ 9EF7
 209+ 9EF7 FB               ei
 210+ 9EF8
 211+ 9EF8 3A 00 89         ld a,(Ctrl_2)
 212+ 9EFB CB 57            bit 2,a
 213+ 9EFD 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9EFF
 215+ 9EFF 2A F2 88         ld hl,(Puntero_mov)
 216+ 9F02 7E               ld a,(hl)
 217+ 9F03
 218+ 9F03              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F03
 220+ 9F03              Inicia_desplazamiento.
 221+ 9F03
 222+ 9F03              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F03
 224+ 9F03 CD F8 9F         call Ajusta_velocidad_desplazamiento
 225+ 9F06
 226+ 9F06              ; Iniciamos (Repetimos_mov).
 227+ 9F06
 228+ 9F06 7E               ld a,(hl)
 229+ 9F07 E6 0F            and $0f
 230+ 9F09 32 F8 88         ld (Repetimos_desplazamiento),a
 231+ 9F0C 32 F9 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F0F
 233+ 9F0F              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F0F
 235+ 9F0F 23               inc hl
 236+ 9F10 7E               ld a,(hl)
 237+ 9F11 32 FB 88         ld (Cola_de_desplazamiento),a
 238+ 9F14 2B               dec hl
 239+ 9F15
 240+ 9F15 21 00 89         ld hl,Ctrl_2
 241+ 9F18 CB D6            set 2,(hl)
 242+ 9F1A
 243+ 9F1A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F1A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F1A
 246+ 9F1A              Desplazamiento_iniciado
 247+ 9F1A
 248+ 9F1A CD CC 9F         call Aplica_desplazamiento
 249+ 9F1D
 250+ 9F1D 3A 00 89         ld a,(Ctrl_2)
 251+ 9F20 CB 67            bit 4,a
 252+ 9F22 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F23
 254+ 9F23 21 F8 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F26 35               dec (hl)
 256+ 9F27 C0               ret nz
 257+ 9F28
 258+ 9F28              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F28              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F28              ; Analiza (Cola_de_desplazamiento).
 261+ 9F28
 262+ 9F28 3A FB 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F2B A7               and a
 264+ 9F2C CC 21 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F2F 28 30            jr z,Reinicia_el_movimiento
 266+ 9F31
 267+ 9F31 FE FF            cp $ff
 268+ 9F33 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F35
 270+ 9F35 FE FE            cp $fe
 271+ 9F37 CC A5 9F         call z,Fijamos_bucle
 272+ 9F3A 28 25            jr z,Reinicia_el_movimiento
 273+ 9F3C
 274+ 9F3C FE FD            cp $fd
 275+ 9F3E 20 11            jr nz,1F
 276+ 9F40
 277+ 9F40              ; ---
 278+ 9F40              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F40
 280+ 9F40 3A 00 89         ld a,(Ctrl_2)
 281+ 9F43 CB 5F            bit 3,a
 282+ 9F45 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F47
 284+ 9F47              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F47
 286+ 9F47 21 00 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F4A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F4C
 289+ 9F4C CD B6 9F         call Inicia_Repetimos_movimiento
 290+ 9F4F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F51              ; ---
 292+ 9F51
 293+ 9F51 FE 01        1 cp 1
 294+ 9F53 CA 8F 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F56
 296+ 9F56 3D               dec a
 297+ 9F57 32 FB 88         ld (Cola_de_desplazamiento),a
 298+ 9F5A
 299+ 9F5A 3A F9 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F5D 32 F8 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F60              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F60 C9               ret
 303+ 9F61
 304+ 9F61              Reinicia_el_movimiento
 305+ 9F61
 306+ 9F61 F3               di
 307+ 9F62
 308+ 9F62 3A 00 89         ld a,(Ctrl_2)
 309+ 9F65 CB 5F            bit 3,a
 310+ 9F67 28 1B            jr z,2F
 311+ 9F69
 312+ 9F69              ; (Cola_de_desplazamiento)="254".
 313+ 9F69
 314+ 9F69 21 FA 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F6C 35               dec (hl)
 316+ 9F6D 20 15            jr nz,2F
 317+ 9F6F
 318+ 9F6F              ; Fin de las repeticiones del último movimiento.
 319+ 9F6F
 320+ 9F6F 21 00 89         ld hl,Ctrl_2
 321+ 9F72 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F74
 323+ 9F74 2A F2 88         ld hl,(Puntero_mov)
 324+ 9F77 23               inc hl
 325+ 9F78 23               inc hl
 326+ 9F79 23               inc hl
 327+ 9F7A 22 F2 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F7D              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F7D 7E               ld a,(hl)
 330+ 9F7E 32 FB 88         ld (Cola_de_desplazamiento),a
 331+ 9F81
 332+ 9F81 C3 28 9F         jp Cola
 333+ 9F84
 334+ 9F84 CD C1 9F     2 call Inicia_Puntero_mov
 335+ 9F87
 336+ 9F87 21 00 89         ld hl,Ctrl_2
 337+ 9F8A CB 96            res 2,(hl)
 338+ 9F8C
 339+ 9F8C C3 F7 9E         jp Movimiento
 340+ 9F8F
 341+ 9F8F              Siguiente_desplazamiento
 342+ 9F8F
 343+ 9F8F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F8F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F8F
 346+ 9F8F 21 00 89         ld hl,Ctrl_2
 347+ 9F92 CB 96            res 2,(hl)
 348+ 9F94
 349+ 9F94 2A F2 88         ld hl,(Puntero_mov)
 350+ 9F97 23               inc hl
 351+ 9F98 23               inc hl
 352+ 9F99 22 F2 88         ld (Puntero_mov),hl
 353+ 9F9C
 354+ 9F9C 7E               ld a,(hl)
 355+ 9F9D A7               and a
 356+ 9F9E CC 21 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FA1 CA 61 9F         jp z,Reinicia_el_movimiento
 358+ 9FA4
 359+ 9FA4 C9               ret
 360+ 9FA5              ; Subrutinas -----------------------------------------
 361+ 9FA5              ; ---------- --------- --------- ---------- ----------
 362+ 9FA5              ;
 363+ 9FA5              ;   24/07/23
 364+ 9FA5              ;
 365+ 9FA5              ;   Fijamos_bucle
 366+ 9FA5              ;
 367+ 9FA5              ;
 368+ 9FA5
 369+ 9FA5              Fijamos_bucle
 370+ 9FA5
 371+ 9FA5 3A F6 88         ld a,(Incrementa_puntero)
 372+ 9FA8 3C               inc a
 373+ 9FA9 32 F7 88         ld (Incrementa_puntero_backup),a
 374+ 9FAC
 375+ 9FAC CD 21 A0         call Incrementa_Puntero_indice_mov
 376+ 9FAF 2A F0 88         ld hl,(Puntero_indice_mov)
 377+ 9FB2 22 F4 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FB5 C9               ret
 379+ 9FB6
 380+ 9FB6              ; ---------- --------- --------- ---------- ----------
 381+ 9FB6              ;
 382+ 9FB6              ;   07/7/23
 383+ 9FB6              ;
 384+ 9FB6              ;   Inicia_Repetimos_movimiento
 385+ 9FB6              ;
 386+ 9FB6              ;
 387+ 9FB6
 388+ 9FB6              Inicia_Repetimos_movimiento
 389+ 9FB6
 390+ 9FB6              ; Iniciamos (Repetimos_movimiento).
 391+ 9FB6
 392+ 9FB6 DD 2A F2 88      ld ix,(Puntero_mov)
 393+ 9FBA DD 7E 02         ld a,(ix+2)
 394+ 9FBD 32 FA 88         ld (Repetimos_movimiento),a
 395+ 9FC0
 396+ 9FC0 C9               ret
 397+ 9FC1
 398+ 9FC1              ; ---------- --------- --------- ---------- ----------
 399+ 9FC1              ;
 400+ 9FC1              ;   26/6/23
 401+ 9FC1              ;
 402+ 9FC1              ;   Inicia_Puntero_mov
 403+ 9FC1              ;
 404+ 9FC1              ;
 405+ 9FC1
 406+ 9FC1 2A F0 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FC4 5E               ld e,(hl)
 408+ 9FC5 23               inc hl
 409+ 9FC6 56               ld d,(hl)
 410+ 9FC7 EB               ex de,hl
 411+ 9FC8 22 F2 88         ld (Puntero_mov),hl
 412+ 9FCB C9               ret
 413+ 9FCC
 414+ 9FCC              ; ---------- --------- --------- ---------- ----------
 415+ 9FCC              ;
 416+ 9FCC              ;   27/06/23
 417+ 9FCC              ;
 418+ 9FCC              ;   Aplica_movimiento.
 419+ 9FCC
 420+ 9FCC              Aplica_desplazamiento
 421+ 9FCC
 422+ 9FCC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FCC
 424+ 9FCC 2A F2 88         ld hl, (Puntero_mov)
 425+ 9FCF
 426+ 9FCF 7E               ld a,(hl)
 427+ 9FD0 E6 F0            and $f0
 428+ 9FD2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FD3
 430+ 9FD3 CB 7E            bit 7,(hl)
 431+ 9FD5 28 03            jr z,1F
 432+ 9FD7 CD F5 99         call Mov_up
 433+ 9FDA 2A F2 88     1 ld hl, (Puntero_mov)
 434+ 9FDD CB 76            bit 6,(hl)
 435+ 9FDF 28 03            jr z,2F
 436+ 9FE1 CD C4 99         call Mov_down
 437+ 9FE4 2A F2 88     2 ld hl, (Puntero_mov)
 438+ 9FE7 CB 6E            bit 5,(hl)
 439+ 9FE9 28 03            jr z,3F
 440+ 9FEB CD 56 9B         call Mov_left
 441+ 9FEE 2A F2 88     3 ld hl, (Puntero_mov)
 442+ 9FF1 CB 66            bit 4,(hl)
 443+ 9FF3 C8               ret z
 444+ 9FF4 CD 38 9A         call Mov_right
 445+ 9FF7 C9               ret
 446+ 9FF8
 447+ 9FF8              ; ---------- --------- --------- ---------- ----------
 448+ 9FF8              ;
 449+ 9FF8              ;   26/06/23
 450+ 9FF8              ;
 451+ 9FF8              ;   Ajusta_velocidad_desplazamiento.
 452+ 9FF8
 453+ 9FF8              Ajusta_velocidad_desplazamiento
 454+ 9FF8
 455+ 9FF8              ; 1er byte de la cadena de movimiento.
 456+ 9FF8              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ 9FF8
 458+ 9FF8 CD 16 A0         call Extrae_nibble_alto
 459+ 9FFB
 460+ 9FFB 32 DC 88         ld (Vel_up),a
 461+ 9FFE 79               ld a,c
 462+ 9FFF E6 0F            and $0f
 463+ A001 32 DD 88         ld (Vel_down),a
 464+ A004
 465+ A004              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A004              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A004
 468+ A004 23               inc hl
 469+ A005 CD 16 A0         call Extrae_nibble_alto
 470+ A008
 471+ A008 32 DA 88         ld (Vel_left),a
 472+ A00B 79               ld a,c
 473+ A00C E6 0F            and $0f
 474+ A00E 32 DB 88         ld (Vel_right),a
 475+ A011
 476+ A011              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A011
 478+ A011 23               inc hl
 479+ A012 22 F2 88         ld (Puntero_mov),hl
 480+ A015 C9               ret
 481+ A016
 482+ A016 06 04        Extrae_nibble_alto ld b,4
 483+ A018 7E               ld a,(hl)
 484+ A019 4F               ld c,a
 485+ A01A E6 F0            and $f0
 486+ A01C CB 3F        1 srl a
 487+ A01E 10 FC            djnz 1B
 488+ A020 C9               ret
 489+ A021
 490+ A021              ; ---------- --------- --------- ---------- ----------
 491+ A021              ;
 492+ A021              ;   5/7/23
 493+ A021              ;
 494+ A021              ;   Incrementa_Puntero_indice_mov
 495+ A021
 496+ A021              Incrementa_Puntero_indice_mov
 497+ A021
 498+ A021 21 F6 88         ld hl,Incrementa_puntero
 499+ A024 34               inc (hl)
 500+ A025
 501+ A025 2A F0 88         ld hl,(Puntero_indice_mov)
 502+ A028 01 02 00         ld bc,2
 503+ A02B A7               and a
 504+ A02C 09               add hl,bc
 505+ A02D 22 F0 88         ld (Puntero_indice_mov),hl
 506+ A030
 507+ A030 7E               ld a,(hl)
 508+ A031 A7               and a
 509+ A032
 510+ A032              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A032
 512+ A032              ;    jr z,$
 513+ A032
 514+ A032              ;! Reinicia el Patrón de movimiento.
 515+ A032
 516+ A032 CC 37 A0         call z,Inicializa_Puntero_indice_mov
 517+ A035
 518+ A035 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A036
 520+ A036 C9               ret
 521+ A037
 522+ A037
 523+ A037              ; ---------- --------- --------- ---------- ----------
 524+ A037              ;
 525+ A037              ;   24/07/23
 526+ A037              ;
 527+ A037              ;   Inicializa_Puntero_indice_mov
 528+ A037
 529+ A037              Inicializa_Puntero_indice_mov
 530+ A037
 531+ A037              ; Existe etiqueta de bucle principal???
 532+ A037
 533+ A037 2A F4 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A03A 24               inc h
 535+ A03B 25               dec h
 536+ A03C 28 05            jr z,2F
 537+ A03E
 538+ A03E 22 F0 88         ld (Puntero_indice_mov),hl
 539+ A041 18 14            jr 3F
 540+ A043
 541+ A043              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A043
 543+ A043 3A F6 88     2 ld a,(Incrementa_puntero)
 544+ A046 47               ld b,a
 545+ A047
 546+ A047 2A F0 88         ld hl,(Puntero_indice_mov)
 547+ A04A 2B           1 dec hl
 548+ A04B 2B               dec hl
 549+ A04C 10 FC            djnz 1B
 550+ A04E 22 F0 88         ld (Puntero_indice_mov),hl
 551+ A051
 552+ A051 AF               xor a
 553+ A052 32 F6 88         ld (Incrementa_puntero),a
 554+ A055 18 06            jr 4F
 555+ A057
 556+ A057 3A F7 88     3 ld a,(Incrementa_puntero_backup)
 557+ A05A 32 F6 88         ld (Incrementa_puntero),a
 558+ A05D C9           4 ret
 559+ A05E
 560+ A05E
 561+ A05E
# file closed: Patrones_de_mov.asm
1651  A05E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A05E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A05E              ;
   3+ A05E              ;	4/9/23
   4+ A05E              ;
   5+ A05E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A05E
   7+ A05E              ;	ADC HL,SP	LD (addr),SP
   8+ A05E              ;	ADD HL,SP	LD SP,(addr)
   9+ A05E              ;	ADD IX,SP	LD SP,nn
  10+ A05E              ; 	ADD IY,SP	LD SP,HL
  11+ A05E              ;				LD SP,IX
  12+ A05E              ;	DEC SP		LD SP,IY
  13+ A05E
  14+ A05E              ;	EX (SP),HL
  15+ A05E              ;	EX (SP),IX
  16+ A05E              ;	EX (SP),IY
  17+ A05E
  18+ A05E              ;	INC SP
  19+ A05E
  20+ A05E                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 13 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 02 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1B 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A EF 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 21 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 19 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 02 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1B 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A EF 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 21 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 13 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 19 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 13 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 37 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 113+ 7FFE              ;
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ac
 118+ 72AC
 119+ 72AC              Gestiona_albumes_de_fotos
 120+ 72AC
 121+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72AC              ;   Vaciamos Album_de_fotos.
 123+ 72AC
 124+ 72AC              ;   Album_de_fotos. Contiene datos ???
 125+ 72AC
 126+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72AF 7E               ld a,(hl)
 128+ 72B0 A7               and a
 129+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72B3
 131+ 72B3 2A 1D 89         ld hl,(End_Snapshot)
 132+ 72B6 01 00 70         ld bc,Album_de_fotos
 133+ 72B9 11 01 70         ld de,Album_de_fotos+1
 134+ 72BC AF               xor a
 135+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72BE
 137+ 72BE CD 4E 73         call Limpia_album
 138+ 72C1
 139+ 72C1 21 00 00         ld hl,0
 140+ 72C4 22 1D 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 72C7
 142+ 72C7              ; ----- ----- ----- -----
 143+ 72C7
 144+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 145+ 72C7
 146+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 72CA 7E               ld a,(hl)
 148+ 72CB A7               and a
 149+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 72CE              ;                               ; _ información del album2 al album1.
 151+ 72CE
 152+ 72CE              ; ----- ----- ----- -----
 153+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 72CE
 155+ 72CE 2A 23 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 72D7
 159+ 72D7 CD 4E 73         call Limpia_album
 160+ 72DA
 161+ 72DA              ;   Calculamos (End_Snapshot)
 162+ 72DA
 163+ 72DA A7               and a
 164+ 72DB ED 4A            adc hl,bc
 165+ 72DD 22 1D 89         ld (End_Snapshot),hl
 166+ 72E0
 167+ 72E0              ;   Limpiamos Album_de_fotos_1.
 168+ 72E0
 169+ 72E0 2A 23 89         ld hl,(End_Snapshot_1)
 170+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 171+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 172+ 72E9 AF               xor a
 173+ 72EA 02               ld (bc),a
 174+ 72EB
 175+ 72EB CD 4E 73         call Limpia_album
 176+ 72EE
 177+ 72EE 21 00 00         ld hl,0
 178+ 72F1 22 23 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 72F4
 180+ 72F4              ; ----- ----- ----- -----
 181+ 72F4
 182+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 183+ 72F4
 184+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 72F7 7E               ld a,(hl)
 186+ 72F8 A7               and a
 187+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 72FB              ;                               ; _ información del album3 al album2.
 189+ 72FB              ; ----- ----- ----- -----
 190+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 72FB
 192+ 72FB 2A 27 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7304
 196+ 7304 CD 4E 73         call Limpia_album
 197+ 7307
 198+ 7307              ;   Calculamos (End_Snapshot_1):
 199+ 7307
 200+ 7307 A7               and a
 201+ 7308 ED 4A            adc hl,bc
 202+ 730A 22 23 89         ld (End_Snapshot_1),hl
 203+ 730D
 204+ 730D              ;   Limpiamos Album_de_fotos_2.
 205+ 730D
 206+ 730D 2A 27 89         ld hl,(End_Snapshot_2)
 207+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7316 AF               xor a
 210+ 7317 02               ld (bc),a
 211+ 7318
 212+ 7318 CD 4E 73         call Limpia_album
 213+ 731B
 214+ 731B 21 00 00         ld hl,0
 215+ 731E 22 27 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7321
 217+ 7321              ; ----- ----- ----- -----
 218+ 7321
 219+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7321
 221+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7324 7E               ld a,(hl)
 223+ 7325 A7               and a
 224+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7327
 226+ 7327              ; ----- ----- ----- -----
 227+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7327
 229+ 7327 2A 2B 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7330
 233+ 7330 CD 4E 73         call Limpia_album
 234+ 7333
 235+ 7333              ;   Calculamos (End_Snapshot_2):
 236+ 7333
 237+ 7333 A7               and a
 238+ 7334 ED 4A            adc hl,bc
 239+ 7336 22 27 89         ld (End_Snapshot_2),hl
 240+ 7339
 241+ 7339              ;   Limpiamos Album_de_fotos_3.
 242+ 7339
 243+ 7339 2A 2B 89         ld hl,(End_Snapshot_3)
 244+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7342 AF               xor a
 247+ 7343 02               ld (bc),a
 248+ 7344
 249+ 7344 CD 4E 73         call Limpia_album
 250+ 7347
 251+ 7347 21 00 00         ld hl,0
 252+ 734A 22 2B 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 734D C9               ret
 254+ 734E
 255+ 734E              ; ----------------------------------------------------
 256+ 734E              ;
 257+ 734E              ;   10/8/23
 258+ 734E              ;
 259+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 734E              ;
 261+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 734E              ;           BC ..... Dirección de inicio del álbum.
 263+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 734E
 265+ 734E              ;    ld hl,(End_Snapshot)
 266+ 734E              ;    ld bc,Album_de_fotos
 267+ 734E              ;    ld de,Album_de_fotos+1
 268+ 734E
 269+ 734E              ;   MODIFICA: A,HL,BC y DE.
 270+ 734E
 271+ 734E              Limpia_album
 272+ 734E D5               push de                     ; Guardo DESTINO.
 273+ 734F C5               push bc                     ; Guardo ORIGEN.
 274+ 7350 ED 42            sbc hl,bc
 275+ 7352 4D               ld c,l
 276+ 7353 44               ld b,h
 277+ 7354 E1               pop hl
 278+ 7355 C5               push bc
 279+ 7356 ED B0            ldir
 280+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 735A C9               ret                         ; _ a otro).
 283+ 735B              ;
 284+ 735B
 285+ 735B              ; -----------------------------------------------
 286+ 735B
 287+ 735B
 288+ 735B
 289+ 735B
 290+ 735B
# file closed: Guarda_foto_registros.asm
1652  735B
1653  735B              	SAVESNA "Pruebas.sna", START
1654  735B
1655  735B
1656  735B
1657  735B
# file closed: Banco_de_pruebas.asm
