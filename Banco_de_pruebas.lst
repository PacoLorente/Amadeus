# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 2D 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD A0 A1     	call Pinta_disparos_Amadeus
  73  82F6 CD 16 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 57 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 26 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 55 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 55 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 58 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 36 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 5A 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 54 89        	defw Disparo_2
  40+ 8927 4E 89        	defw Disparo_3
  41+ 8929 48 89        	defw Disparo_4
  42+ 892B 42 89        	defw Disparo_5
  43+ 892D 3C 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00           Disparo_7 db 0	     						; Control.
  49+ 8937
  50+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893A 00 00        	defw 0									; Puntero de impresión.
  52+ 893C 00           Disparo_6 db 0		    					; Control.
  53+ 893D
  54+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8940 00 00        	defw 0									; Puntero de impresión.
  56+ 8942 00           Disparo_5 db 0			    				; Control.
  57+ 8943
  58+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8946 00 00        	defw 0									; Puntero de impresión.
  60+ 8948 00           Disparo_4 db 0				     			; Control.
  61+ 8949
  62+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 894C 00 00        	defw 0									; Puntero de impresión.
  64+ 894E 00           Disparo_3 db 0					    		; Control.
  65+ 894F
  66+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8952 00 00        	defw 0									; Puntero de impresión.
  68+ 8954 00           Disparo_2 db 0						    	; Control.
  69+ 8955
  70+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 8958 00 00        	defw 0									; Puntero de impresión.
  72+ 895A 00           Disparo_1 db 0							    ; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 148  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A7 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA5 01 01
  18+ 8BA7
  19+ 8BA7 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA8 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB0 01 02
  22+ 8BB2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB6 01 02
  23+ 8BB8
# file closed: Niveles.asm
 149  8BB8
 150  8BB8              ; --------------------------------------------------------------------------------
 151  8BB8              ;
 152  8BB8              ; 12/05/24
 153  8BB8              ;
 154  8BB8              ; Parámetros DRAW.
 155  8BB8              ;
 156  8BB8
 157  8BB8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BB8
 159  8BB8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BB9              ;															- Patrón de movimiento.
 161  8BB9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BBA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BBB
 164  8BBB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BBC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BBC
 167  8BBC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BBC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BBC              ; Ejemplos.
 170  8BBC
 171  8BBC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BBC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BBC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BBC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BBC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BBC
 177  8BBC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BBD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BBD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BBD
 181  8BBD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BBF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BBF
 184  8BBF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC1
 186  8BC1              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC1
 188  8BC1 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BC3              ;														; _palabras que componen el "movimiento_masticado".
 190  8BC3
 191  8BC3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BC3
 193  8BC3 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BC4              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BC4              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BC4              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BC4              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BC4
 199  8BC4 00           Ctrl_2 db 0
 200  8BC5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC5              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC5              ;
 208  8BC5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC5              ;														BIT 4, ???
 214  8BC5              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC5
 216  8BC5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BC6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BC6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BC6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BC6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BC6              ;
 222  8BC6              ; 														DESCRIPCIÖN:
 223  8BC6              ;
 224  8BC6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BC6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BC6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BC6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BC6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BC6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BC6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BC6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BC6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BC6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BC6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BC6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BC6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BC6              ;
 238  8BC6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BC6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BC6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BC6
 242  8BC6              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BC6
 244  8BC6 00           Filas db 0												; Filas. [DRAW]
 245  8BC7 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BC8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BCA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BCC
 249  8BCC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BCC
 251  8BCC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BCD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BCD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BCD
 255  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BCD
 257  8BCD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BCD              ;
 259  8BCD              ;	COLORES: 0 ..... NEGRO
 260  8BCD              ;    		 1 ..... AZUL
 261  8BCD              ; 			 2 ..... ROJO
 262  8BCD              ;			 3 ..... MAGENTA
 263  8BCD              ; 			 4 ..... VERDE
 264  8BCD              ; 			 5 ..... CIAN
 265  8BCD              ;			 6 ..... AMARILLO
 266  8BCD              ; 			 7 ..... BLANCO
 267  8BCD
 268  8BCD 00 00        Indice_Sprite_der defw 0
 269  8BCF 00 00        Indice_Sprite_izq defw 0
 270  8BD1 00 00        Puntero_DESPLZ_der defw 0
 271  8BD3 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD5
 273  8BD5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BD7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BD8 00           Columnas db 0
 276  8BD9 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BDB              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BDB 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BDC
 280  8BDC              ; variables de control general.
 281  8BDC
 282  8BDC 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BDD
 284  8BDD              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BDD
 286  8BDD              Perfiles_de_velocidad
 287  8BDD
 288  8BDD 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BDE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BDF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE1
 293  8BE1              ; Contadores de 16 bits.
 294  8BE1
 295  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BE9
 300  8BE9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BE9
 302  8BE9 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BEB 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BED 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BEF              ;
 306  8BEF              ;
 307  8BEF 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF0              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF0              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF0 00           Incrementa_puntero_backup db 0
 311  8BF1 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF2              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF2 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BF3 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BF4 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF5              ;
 317  8BF5              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF5              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF5              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF5              ;
 321  8BF5              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF5              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF5              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF5              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF5              ;
 326  8BF5              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF5              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF5              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF5
 330  8BF5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BF6
 332  8BF6              ;														DESCRIPCIÓN:
 333  8BF6              ;
 334  8BF6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BF6              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BF6              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BF6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BF6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BF6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BF6
 341  8BF6              ;														BIT 3, Recarga de nueva oleada.
 342  8BF6              ;														BIT 4, Recarga de nueva oleada.
 343  8BF6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BF6              ;														BIT 6, **** Frame completo.
 345  8BF6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BF6
 347  8BF6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BF8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BF8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BF8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BF8
 352  8BF8              ; Gestión de ENTIDADES y CAJAS.
 353  8BF8
 354  8BF8 00 00        Puntero_store_caja defw 0
 355  8BFA 00 00        Puntero_restore_caja defw 0
 356  8BFC 00 00        Indice_restore_caja defw 0
 357  8BFE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8BFF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C00 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C01
 361  8C01 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C03 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C05              ;														; _ puntero (Indice_entidades).
 364  8C05
 365  8C05              ;---------------------------------------------------------------------------------------------------------------
 366  8C05              ;
 367  8C05              ;	13/10/24
 368  8C05              ;
 369  8C05              ;	Álbumes.
 370  8C05
 371  8C05 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C07              ;														; _variable para almacenar lo posición del puntero_
 373  8C07              ; 														; _de pila, SP.
 374  8C07 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C09              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C09
 377  8C09              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C09
 379  8C09 00 00        Album_de_pintado defw 0
 380  8C0B 00 00        Album_de_borrado defw 0
 381  8C0D 00 00        Album_de_pintado_Amadeus defw 0
 382  8C0F 00 00        Album_de_borrado_Amadeus defw 0
 383  8C11
 384  8C11 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C13 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C15
 387  8C15 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C17 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C19
 390  8C19
 391  8C19 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C1B
 393  8C1B 00           Num_de_bytes_album_de_disparos db 0
 394  8C1C 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C1D
 396  8C1D 07           Numero_de_disparos_de_entidades db 7
 397  8C1E
 398  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C1F 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C20
 401  8C20 00 00        Techo_Scanlines_album defw 0
 402  8C22 00 00        Techo_Scanlines_album_2 defw 0
 403  8C24 00           Switch db 0
 404  8C25 00 00        Techo defw 0
 405  8C27 00 00        Scanlines_album_SP defw 0
 406  8C29 00 89        India_SP defw Tabla_de_pintado
 407  8C2B 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C2D
 409  8C2D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C2E              ;
 411  8C2E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C2E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C2E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C2E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C2E              ;																Habilita el borrado/pintado de sprites.
 416  8C2E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C2E              ;																_ a la baja.
 418  8C2E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C2E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C2E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C2E              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C2E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C2E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C2E
 425  8C2E 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C2F              ;
 427  8C2F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C2F              ;
 429  8C2F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C2F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C2F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C2F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C2F              ;
 434  8C2F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C2F              ;															_ masticados ya generados.
 436  8C2F              ;
 437  8C2F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C2F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C2F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C2F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C2F
 442  8C2F 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C30              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 444  8C30              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 445  8C30
 446  8C30              ; Gestión de Disparos.
 447  8C30
 448  8C30 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 449  8C32 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 450  8C34 00           Impacto2 db 0											; Byte de control de impactos.
 451  8C35
 452  8C35              ;
 453  8C35              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 454  8C35              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 455  8C35              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 456  8C35              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 457  8C35
 458  8C35
 459  8C35
 460  8C35
 461  8C35
 462  8C35
 463  8C35
 464  8C35 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 465  8C37              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 466  8C37              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 467  8C37
 468  8C37 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 469  8C39              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 470  8C39 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8C3C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8C3C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C3F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 474  8C3F
 475  8C3F              ;---------------------------------------------------------------------------------------------------------------
 476  8C3F
 477  8C3F              ; Relojes y temporizaciones.
 478  8C3F
 479  8C3F 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 480  8C40 05           Clock_explosion_Amadeus db 5
 481  8C41 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 482  8C42
 483  8C42 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8C44 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 485  8C46 00           Numero_rnd_disparos db 0
 486  8C47
 487  8C47 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 488  8C49 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 489  8C4A              ;														; Repite la oleada de entidades.
 490  8C4A A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 491  8C4B A0           CLOCK_disparos_de_entidades db $a0
 492  8C4C
 493  8C4C              ;---------------------------------------------------------------------------------------------------------------
 494  8C4C
 495  8C4C              ; Gestión de NIVELES.
 496  8C4C
 497  8C4C 00           Nivel db 0												; Nivel actual del juego.
 498  8C4D 00 00        Puntero_indice_NIVELES defw 0
 499  8C4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8C51              ; 														; _ que definen el NIVEL.
 501  8C51
 502  8C51              ; ---------------------------------------------------------------------------------------------------------------
 503  8C51
 504  8C51              ; Temporizaciones Shield.
 505  8C51
 506  8C51 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 507  8C55 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 508  8C57 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 509  8C58 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 510  8C59 00           Shield_3 db 0
 511  8C5A
 512  8C5A 06           Lives db 6
 513  8C5B
 514  8C5B              ; 	INICIO  *************************************************************************************************************************************************************************
 515  8C5B              ;
 516  8C5B              ;	5/1/24
 517  8C5B
 518  8C5B              START
 519  8C5B
 520  8C5B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 521  8C5E 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 522  8C60 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 523  8C62 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 524  8C64 F3           	DI
 525  8C65
 526  8C65              ; Limpiamos pantalla.
 527  8C65
 528  8C65 3E 07        	ld a,%00000111
 529  8C67 CD C3 94     	call Cls
 530  8C6A CD 1B 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 531  8C6D
 532  8C6D              ; INICIALIZACIÓN.
 533  8C6D
 534  8C6D 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 535  8C6F CD 68 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 536  8C72
 537  8C72 CD B0 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C75
 539  8C75 6F           	ld l,a
 540  8C76 26 00        	ld h,0
 541  8C78 22 47 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C7B
 543  8C7B              ;	Inicializa 1er Nivel.
 544  8C7B
 545  8C7B 21 94 8B     	ld hl,Indice_de_niveles
 546  8C7E 22 4D 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C81 CD 98 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C84              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C84              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C84              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C84
 552  8C84              ;	Inicia los álbumes de líneas.
 553  8C84
 554  8C84 CD 69 90     	call Inicia_albumes_de_lineas
 555  8C87              ;
 556  8C87 CD 79 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C8A CD 86 90     	call Inicia_albumes_de_disparos
 558  8C8D
 559  8C8D CD DD 92     4 call Inicia_Entidades
 560  8C90 CD 40 93     	call Inicia_Amadeus
 561  8C93
 562  8C93              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C93              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C93              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C93
 566  8C93 11 6D 89     	ld de,Amadeus_BOX
 567  8C96 CD 93 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C99 CD 83 93     	call Limpiamos_bandeja_DRAW
 569  8C9C
 570  8C9C              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8C9C
 572  8C9C 06 3C        	ld b,60
 573  8C9E CD 69 9D     2 call Amadeus_a_izquierda
 574  8CA1 10 FB        	djnz 2B
 575  8CA3
 576  8CA3 CD 47 90     	call Genera_datos_de_impresion_Amadeus
 577  8CA6
 578  8CA6              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CA6
 580  8CA6 CD A2 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CA9
 582  8CA9 CD 26 91     	call Inicia_Shield
 583  8CAC
 584  8CAC 2A 27 8C     6 ld hl,(Scanlines_album_SP)
 585  8CAF 22 20 8C     	ld (Techo_Scanlines_album),hl
 586  8CB2
 587  8CB2 2A 0B 8C     	ld hl,(Album_de_borrado)
 588  8CB5 22 27 8C     	ld (Scanlines_album_SP),hl
 589  8CB8
 590  8CB8 21 00 89     	ld hl,Tabla_de_pintado
 591  8CBB 22 29 8C     	ld (India_SP),hl
 592  8CBE
 593  8CBE 21 2D 8C     	ld hl,Ctrl_3
 594  8CC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 595  8CC3 CB D6        	set 2,(hl)
 596  8CC5 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 597  8CC7
 598  8CC7 FB           	ei 													; Ha de apuntar a $5c3a.
 599  8CC8
 600  8CC8 76           	halt
 601  8CC9
 602  8CC9              ; ------------------------------------
 603  8CC9
 604  8CC9              Main
 605  8CC9              ;
 606  8CC9              ; 25/10/24
 607  8CC9
 608  8CC9              ; Gestión de disparos.
 609  8CC9
 610  8CC9 CD 85 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 611  8CCC              ;	call Motor_de_disparos_entidades
 612  8CCC CD 4C A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 613  8CCF
 614  8CCF              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 615  8CCF              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 616  8CCF              ; Este hecho lo indica el bit2 de (Impacto2).
 617  8CCF
 618  8CCF CD E9 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 619  8CD2
 620  8CD2              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 621  8CD2
 622  8CD2 21 4B 8C     	ld hl,CLOCK_disparos_de_entidades
 623  8CD5 35           	dec (hl)
 624  8CD6 CC CE 8D     	call z,Autoriza_disparo_de_entidades
 625  8CD9
 626  8CD9 2A 47 8C     	ld hl,(Clock_next_entity)
 627  8CDC ED 4B 78 5C  	ld bc,(FRAMES)
 628  8CE0 A7           	and a
 629  8CE1 ED 42        	sbc hl,bc
 630  8CE3 20 16        	jr nz,1F
 631  8CE5
 632  8CE5              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 633  8CE5              ; _ (Clock_next_entity) para la siguiente entidad.
 634  8CE5
 635  8CE5 3A FF 8B     	ld a,(Numero_parcial_de_entidades)
 636  8CE8 47           	ld b,a
 637  8CE9 3A 00 8C     	ld a,(Entidades_en_curso)
 638  8CEC B8           	cp b
 639  8CED 28 0C        	jr z,1F
 640  8CEF 30 0A        	jr nc,1F
 641  8CF1
 642  8CF1 3C           	inc a
 643  8CF2 32 00 8C     	ld (Entidades_en_curso),a
 644  8CF5
 645  8CF5              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 646  8CF5
 647  8CF5 CD B0 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 648  8CF8 CD CC 8E     	call Define_Clock_next_entity
 649  8CFB
 650  8CFB 3A 00 8C     1 ld a,(Entidades_en_curso)
 651  8CFE A7           	and a
 652  8CFF CA 79 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 653  8D02 47           	ld b,a												; No hay entidades que gestionar.
 654  8D03
 655  8D03              ; ( Código que ejecutamos con cada entidad: ).
 656  8D03
 657  8D03              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 658  8D03              ;
 659  8D03              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 660  8D03
 661  8D03 21 00 89     	ld hl,Tabla_de_pintado
 662  8D06 22 29 8C     	ld (India_SP),hl
 663  8D09
 664  8D09 21 2D 8C     	ld hl,Ctrl_3
 665  8D0C CB D6        	set 2,(hl)
 666  8D0E CD 5A 8E     	call Change
 667  8D11
 668  8D11 C5           2 push bc 												; Nº de entidades en curso.
 669  8D12
 670  8D12 CD F3 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 671  8D15 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 672  8D19
 673  8D19              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 674  8D19
 675  8D19              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 676  8D19              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 677  8D19
 678  8D19 3A 34 8C     	ld a,(Impacto2)
 679  8D1C CB 5F        	bit 3,a
 680  8D1E C4 E3 A0     	call nz,Compara_con_coordenadas_de_disparo
 681  8D21
 682  8D21 3A BC 8B     	ld a,(Impacto)
 683  8D24 CB 4F        	bit 1,a
 684  8D26 C4 03 92     	call nz,Genera_explosion
 685  8D29 20 31        	jr nz,Gestiona_siguiente_entidad
 686  8D2B
 687  8D2B 3A BC 8B     	ld a,(Impacto)
 688  8D2E A7           	and a
 689  8D2F 28 0C        	jr z,3F
 690  8D31
 691  8D31              ; IMPACTO en entidad por colisión con Amadeus.
 692  8D31
 693  8D31              ; 5/7/24
 694  8D31              ; Nota importante:
 695  8D31              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 696  8D31              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 697  8D31              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 698  8D31
 699  8D31 3A 71 89     	ld a,(Impacto_Amadeus)
 700  8D34 A7           	and a
 701  8D35 C4 03 92     	call nz,Genera_explosion
 702  8D38 20 22        	jr nz,Gestiona_siguiente_entidad
 703  8D3A
 704  8D3A              ; Falsa colisión !!!
 705  8D3A
 706  8D3A 32 BC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 707  8D3D
 708  8D3D              ; -------------------------------------------
 709  8D3D
 710  8D3D CD 10 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 711  8D40 CD 3A 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 712  8D43 CD 00 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 713  8D46 CD 03 95     	call Genera_datos_de_impresion
 714  8D49 CD A6 93     	call Decrementa_Contador_de_mov_masticados
 715  8D4C
 716  8D4C              ; -------------------------------------------
 717  8D4C
 718  8D4C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 719  8D4C
 720  8D4C 2A BD 8B     	ld hl,(Puntero_de_impresion)
 721  8D4F CD D7 94     	call Genera_coordenadas
 722  8D52
 723  8D52              ; TODO: Generamos disparo ???
 724  8D52
 725  8D52 3A 1F 8C     	ld a,(Permiso_de_disparo_Entidades)
 726  8D55 A7           	and a
 727  8D56 C4 E3 8D     	call nz,Entidad_genera_disparo_si_procede
 728  8D59
 729  8D59 CD 67 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 730  8D5C
 731  8D5C              Gestiona_siguiente_entidad
 732  8D5C
 733  8D5C CD 78 93      	call Store_Restore_cajas
 734  8D5F C1           	pop bc
 735  8D60 10 AF        	djnz 2B
 736  8D62
 737  8D62              ; Hemos gestionado todas las entidades.
 738  8D62              ; ----- ----- -----
 739  8D62
 740  8D62 CD 24 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 741  8D65 CD 3B 8F     	call Ordena_tabla_de_impresion
 742  8D68 CD A2 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 743  8D6B
 744  8D6B CD E1 8E     	call Borra_diferencia
 745  8D6E
 746  8D6E 3A 2D 8C     	ld a,(Ctrl_3)
 747  8D71 CB 5F        	bit 3,a
 748  8D73 20 04        	jr nz,Gestion_de_Amadeus
 749  8D75
 750  8D75 EB           	ex de,hl
 751  8D76 71           	ld (hl),c
 752  8D77 2C           	inc l
 753  8D78 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 754  8D79
 755  8D79              ;! GESTIONA AMADEUS !!!!!!!!!!
 756  8D79
 757  8D79              Gestion_de_Amadeus
 758  8D79
 759  8D79 21 2D 8C     	ld hl,Ctrl_3
 760  8D7C CB 76        	bit 6,(hl)
 761  8D7E 28 13        	jr z,Amadeus_vivo
 762  8D80
 763  8D80              ; Amadeus ha sido destruido.
 764  8D80              ; Decrementa (Temp_new_live).
 765  8D80
 766  8D80 21 41 8C     	ld hl,Temp_new_live
 767  8D83 35           	dec (hl)
 768  8D84 20 26        	jr nz,End_frame
 769  8D86
 770  8D86              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 771  8D86
 772  8D86 21 5A 8C     	ld hl,Lives
 773  8D89 35           	dec (hl)
 774  8D8A
 775  8D8A              ;! Fin del juego
 776  8D8A
 777  8D8A F3           	di
 778  8D8B 28 FE        	jr z,$
 779  8D8D FB           	ei
 780  8D8E
 781  8D8E              ; Nueva nave.
 782  8D8E
 783  8D8E CD 00 8E     	call Reinicia_Amadeus
 784  8D91 18 19        	jr End_frame
 785  8D93
 786  8D93              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 787  8D93
 788  8D93              Amadeus_vivo
 789  8D93
 790  8D93 3A 71 89     	ld a,(Impacto_Amadeus)
 791  8D96 A7           	and a
 792  8D97 C4 33 92     	call nz, Genera_explosion_Amadeus
 793  8D9A 20 10        	jr nz, End_frame
 794  8D9C
 795  8D9C CD E0 91     	call Teclado
 796  8D9F 21 2D 8C     	ld hl,Ctrl_3
 797  8DA2
 798  8DA2 CB 6E        	bit 5,(hl)
 799  8DA4 28 06        	jr z,End_frame
 800  8DA6
 801  8DA6              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 802  8DA6
 803  8DA6 CD 75 8E     	call Change_Amadeus
 804  8DA9 CD 47 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 805  8DAC
 806  8DAC              End_frame
 807  8DAC
 808  8DAC              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 809  8DAC              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 810  8DAC
 811  8DAC CD 0B A0     	call Genera_datos_de_impresion_disparos_Entidades
 812  8DAF CD D2 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 813  8DB2 CD 28 A1     	call Calcula_bytes_pintado_disparos
 814  8DB5 CD 35 A1     	call Limpia_album_de_pintado_disparos_entidades
 815  8DB8
 816  8DB8              ; ------------ ------------- --------------
 817  8DB8
 818  8DB8 2A 0B 8C     	ld hl,(Album_de_borrado)
 819  8DBB 22 27 8C     	ld (Scanlines_album_SP),hl
 820  8DBE
 821  8DBE 21 2D 8C     	ld hl,Ctrl_3
 822  8DC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 823  8DC3 CB 9E        	res 3,(hl)
 824  8DC5 CB A6        	res 4,(hl)
 825  8DC7
 826  8DC7 AF           	xor a
 827  8DC8 D3 FE        	out ($fe),a
 828  8DCA
 829  8DCA 76           	halt
 830  8DCB
 831  8DCB              ; ----------------------------------------
 832  8DCB
 833  8DCB              ;	ld a,(Ctrl_1) 										; Existe Loop?
 834  8DCB              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 835  8DCB CA C9 8C     	jp z,Main
 836  8DCE
 837  8DCE              ;------------------------------------------
 838  8DCE              ;
 839  8DCE              ;	2/10/24
 840  8DCE
 841  8DCE              Autoriza_disparo_de_entidades
 842  8DCE
 843  8DCE 3E 01        	ld a,1
 844  8DD0 32 1F 8C     	ld (Permiso_de_disparo_Entidades),a
 845  8DD3
 846  8DD3 3A 4A 8C     	ld a,(Repone_CLOCK_disparos)
 847  8DD6 FE 19        	cp 25
 848  8DD8 38 02        	jr c,1F
 849  8DDA
 850  8DDA D6 05        	sub 5
 851  8DDC
 852  8DDC 32 4A 8C     1 ld (Repone_CLOCK_disparos),a
 853  8DDF 32 4B 8C     	ld (CLOCK_disparos_de_entidades),a
 854  8DE2
 855  8DE2 C9           	ret
 856  8DE3
 857  8DE3              ;------------------------------------------
 858  8DE3              ;
 859  8DE3              ;	14/09/24
 860  8DE3              ;
 861  8DE3              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 862  8DE3
 863  8DE3              Entidad_genera_disparo_si_procede
 864  8DE3
 865  8DE3 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 866  8DE6 CB 06        	rlc (hl)
 867  8DE8
 868  8DE8 DC 5B A0     	call c,Genera_disparo_de_entidad_maldosa
 869  8DEB
 870  8DEB C9           	ret
 871  8DEC
 872  8DEC              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 873  8DEC              ;
 874  8DEC              ;	30/09/24
 875  8DEC
 876  8DEC              Actuaiza_sp_de_disparos_de_entidades
 877  8DEC
 878  8DEC 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 879  8DEF 23           	inc hl
 880  8DF0 22 44 8C     	ld (Puntero_num_aleatorios_disparos),hl
 881  8DF3
 882  8DF3 11 FD 88     	ld de,Numeros_aleatorios+7
 883  8DF6 7B           	ld a,e
 884  8DF7 95           	sub l
 885  8DF8 C0           	ret nz
 886  8DF9
 887  8DF9 21 F6 88     1 ld hl,Numeros_aleatorios
 888  8DFC 22 44 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 889  8DFF C9           	ret
 890  8E00
 891  8E00              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 892  8E00              ;
 893  8E00              ;	24/07/24
 894  8E00
 895  8E00              Reinicia_Amadeus
 896  8E00
 897  8E00              ;	Reinicia posición y estado.
 898  8E00
 899  8E00 21 CF 50     	ld hl,$50cf
 900  8E03 22 72 89     	ld (p.imp.amadeus),hl
 901  8E06 21 F0 E0     	ld hl,$e0f0
 902  8E09 22 74 89     	ld (Pamm_Amadeus),hl
 903  8E0C 21 3D 00     	ld hl,$003d
 904  8E0F 22 76 89     	ld (Comm_Amadeus),hl
 905  8E12
 906  8E12              ;	limpiamos el álbum de borrado.
 907  8E12
 908  8E12 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
 909  8E15
 910  8E15 AF           	xor a
 911  8E16 77           	ld (hl),a
 912  8E17
 913  8E17 E5           	push hl
 914  8E18 D1           	pop de
 915  8E19 13           	inc de
 916  8E1A
 917  8E1A 01 23 00     	ld bc,35
 918  8E1D ED B0        	ldir
 919  8E1F
 920  8E1F CD 47 90     	call Genera_datos_de_impresion_Amadeus
 921  8E22
 922  8E22              ;	Reinicia temporizaciones.
 923  8E22
 924  8E22 CD 26 91     	call Inicia_Shield
 925  8E25
 926  8E25 3E 5A        	ld a,90
 927  8E27 32 57 8C     	ld (Shield),a
 928  8E2A
 929  8E2A 3E 64        	ld a,100
 930  8E2C 32 41 8C     	ld (Temp_new_live),a
 931  8E2F
 932  8E2F              ; 	Restauramos el FLAG: Amadeus vivo.
 933  8E2F
 934  8E2F 21 2D 8C     	ld hl,Ctrl_3
 935  8E32 CB B6        	res 6,(hl)
 936  8E34
 937  8E34              ;	Fuerza la impresión de la nave en el siguiente frame.
 938  8E34
 939  8E34 21 2D 8C      	ld hl,Ctrl_3
 940  8E37 CB EE        	set 5,(hl)
 941  8E39
 942  8E39 C9           	ret
 943  8E3A
 944  8E3A              ; --------------------------------------------------------------------------------------------------------------
 945  8E3A              ;
 946  8E3A              ;	12/05/24
 947  8E3A
 948  8E3A 3A C3 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 949  8E3D CB 27        	sla a
 950  8E3F 32 C3 8B     	ld (Velocidad),a
 951  8E42 E6 10        	and $10
 952  8E44 C8           	ret z
 953  8E45
 954  8E45              ; Restaura (Velocidad) a razón del nº de vueltas.
 955  8E45
 956  8E45 3A BB 8B     	ld a,(Contador_de_vueltas)
 957  8E48 CB 2F        	sra a
 958  8E4A CB 2F        	sra a
 959  8E4C 32 C3 8B     	ld (Velocidad),a
 960  8E4F
 961  8E4F 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 962  8E52 23           	inc hl
 963  8E53 23           	inc hl
 964  8E54 23           	inc hl
 965  8E55 23           	inc hl
 966  8E56 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 967  8E59
 968  8E59 C9           	ret
 969  8E5A
 970  8E5A              ; --------------------------------------------------------------------------------------------------------------
 971  8E5A              ;
 972  8E5A              ;	25/08/24
 973  8E5A
 974  8E5A              Change
 975  8E5A
 976  8E5A 3A 24 8C     	ld a,(Switch)
 977  8E5D EE 01        	xor 1
 978  8E5F 32 24 8C     	ld (Switch),a
 979  8E62 2A 09 8C     	ld hl,(Album_de_pintado)
 980  8E65 ED 5B 0B 8C  	ld de,(Album_de_borrado)
 981  8E69 EB           	ex de,hl
 982  8E6A 22 09 8C     	ld (Album_de_pintado),hl
 983  8E6D 22 27 8C     	ld (Scanlines_album_SP),hl
 984  8E70 ED 53 0B 8C  	ld (Album_de_borrado),de
 985  8E74 C9           	ret
 986  8E75
 987  8E75              Change_Amadeus
 988  8E75
 989  8E75 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
 990  8E78 ED 5B 0F 8C  	ld de,(Album_de_borrado_Amadeus)
 991  8E7C EB           	ex de,hl
 992  8E7D 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
 993  8E80 ED 53 0F 8C  	ld (Album_de_borrado_Amadeus),de
 994  8E84 C9           	ret
 995  8E85
 996  8E85              Change_Disparos
 997  8E85
 998  8E85              ; Álbumes de Amadeus.
 999  8E85
1000  8E85 2A 11 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1001  8E88 ED 5B 13 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1002  8E8C EB           	ex de,hl
1003  8E8D 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1004  8E90 ED 53 13 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1005  8E94 CD 1D A1     	call Limpia_album_de_pintado_disparos_Amadeus
1006  8E97
1007  8E97              ; Álbumes de entidades.
1008  8E97
1009  8E97 2A 15 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1010  8E9A ED 5B 17 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1011  8E9E EB           	ex de,hl
1012  8E9F 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1013  8EA2 ED 53 17 8C  	ld (Album_de_borrado_disparos_Entidades),de
1014  8EA6 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1015  8EA9
1016  8EA9 3A 1B 8C     	ld a,(Num_de_bytes_album_de_disparos)
1017  8EAC 32 1C 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1018  8EAF
1019  8EAF C9           	ret
1020  8EB0
1021  8EB0              ; ------------------------------------
1022  8EB0              ;
1023  8EB0              ; 1/05/24
1024  8EB0
1025  8EB0              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1026  8EB0              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1027  8EB0
1028  8EB0              ;	DESTRUYE: HL,DE,A
1029  8EB0              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1030  8EB0
1031  8EB0              ;	Variables implicadas: (RND_SP).
1032  8EB0
1033  8EB0              Extrae_numero_aleatorio_y_avanza
1034  8EB0
1035  8EB0 21 00 89     	ld hl,Tabla_de_pintado
1036  8EB3 EB           	ex de,hl
1037  8EB4 2A 42 8C     	ld hl,(RND_SP)
1038  8EB7 EB           	ex de,hl
1039  8EB8 A7           	and a
1040  8EB9 ED 52        	sbc hl,de
1041  8EBB
1042  8EBB 2A 42 8C     	ld hl,(RND_SP)
1043  8EBE 20 06        	jr nz,1F
1044  8EC0
1045  8EC0              ; Sitúa HL al principio de la tabla de nº aleatorios.
1046  8EC0
1047  8EC0 21 F6 88     	ld hl,Numeros_aleatorios
1048  8EC3 22 42 8C     	ld (RND_SP),HL
1049  8EC6
1050  8EC6              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1051  8EC6
1052  8EC6 7E           1 ld a,(hl)
1053  8EC7 23           	inc hl
1054  8EC8 22 42 8C     	ld (RND_SP),hl
1055  8ECB C9           	ret
1056  8ECC
1057  8ECC              ; ------------------------------------
1058  8ECC              ;
1059  8ECC              ; 1/05/24
1060  8ECC
1061  8ECC              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1062  8ECC              ; (1 a 4 segundos).
1063  8ECC              ; Actualizamos (Clock_next_entity) con A.
1064  8ECC
1065  8ECC              ;	DESTRUYE: A y B.
1066  8ECC              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1067  8ECC              ;			 Actualiza (Clock_next_entity) con A.
1068  8ECC
1069  8ECC              ;	Variables implicadas: (Clock_next_entity).
1070  8ECC
1071  8ECC              ; Notas:
1072  8ECC
1073  8ECC              ; 	$32 1 seg.
1074  8ECC              ; 	$64 2 seg.
1075  8ECC              ; 	$96 3 seg.
1076  8ECC              ; 	$c8 4 seg.
1077  8ECC              ; 	$fa 5 seg.
1078  8ECC
1079  8ECC              ; $ffff 1310,7 seg, 22 minutos.
1080  8ECC
1081  8ECC              ;	$0100  5 seg. aproximadamente.
1082  8ECC              ;	$0200 10 seg. aproximadamente.
1083  8ECC              ;	$0300 15 seg. aproximadamente.
1084  8ECC              ;	$0400 20 seg. aproximadamente.
1085  8ECC              ;	$0500 25 seg. aproximadamente.
1086  8ECC              ;	$0600 30 seg. aproximadamente.
1087  8ECC
1088  8ECC              Define_Clock_next_entity
1089  8ECC
1090  8ECC FE 34        	cp $34
1091  8ECE 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1092  8ED0
1093  8ED0              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1094  8ED0
1095  8ED0 4F           3 ld c,a
1096  8ED1 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1097  8ED3 2A 78 5C     	ld hl,(FRAMES)
1098  8ED6 A7           	and a
1099  8ED7 ED 4A        	adc hl,bc
1100  8ED9 22 47 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1101  8EDC C9           	ret
1102  8EDD
1103  8EDD 3E 34        1 ld a,$34
1104  8EDF 18 EF        	jr 3B
1105  8EE1
1106  8EE1              ; ------------------------------------
1107  8EE1              ;
1108  8EE1              ; 18/03/24
1109  8EE1
1110  8EE1              Borra_diferencia
1111  8EE1
1112  8EE1 ED 4B 27 8C  	ld bc,(Scanlines_album_SP)
1113  8EE5
1114  8EE5 3A 24 8C     	ld a,(Switch)
1115  8EE8 A7           	and a
1116  8EE9 28 08        	jr z,2F
1117  8EEB
1118  8EEB 2A 22 8C     	ld hl,(Techo_Scanlines_album_2)
1119  8EEE 11 22 8C     	ld de,Techo_Scanlines_album_2
1120  8EF1 18 06        	jr 3F
1121  8EF3
1122  8EF3 2A 20 8C     2 ld hl,(Techo_Scanlines_album)
1123  8EF6 11 20 8C     	ld de,Techo_Scanlines_album
1124  8EF9
1125  8EF9              ; Diferencia.
1126  8EF9
1127  8EF9 ED 42        3 sbc hl,bc
1128  8EFB
1129  8EFB C8           	ret z
1130  8EFC D8           	ret c
1131  8EFD
1132  8EFD              ; Nuevo techo, (más bajo que el anterior).
1133  8EFD              ; Fijamos nuevo techo y borramos bytes sobrantes.
1134  8EFD
1135  8EFD EB           	ex de,hl
1136  8EFE
1137  8EFE 71           	ld (hl),c
1138  8EFF 2C           	inc l
1139  8F00 70           	ld (hl),b
1140  8F01
1141  8F01 AF           	xor a
1142  8F02 43           	ld b,e
1143  8F03
1144  8F03 2A 27 8C     	ld hl,(Scanlines_album_SP)
1145  8F06
1146  8F06 77           1 ld (hl),a
1147  8F07 23           	inc hl
1148  8F08 10 FC        	djnz 1B
1149  8F0A
1150  8F0A              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1151  8F0A
1152  8F0A 21 2D 8C     	ld hl,Ctrl_3
1153  8F0D CB DE        	set 3,(hl)
1154  8F0F
1155  8F0F C9           	ret
1156  8F10
1157  8F10              ; --------------------------------------------------------------------------------------------------------------
1158  8F10              ;
1159  8F10              ;	26/3/24
1160  8F10
1161  8F10              Recauda_informacion_de_entidad_en_curso
1162  8F10
1163  8F10              ; Almacena la Coordenada Y de la entidad en curso.
1164  8F10
1165  8F10              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1166  8F10
1167  8F10 3A BA 8B     	ld a,(Coordenada_y)
1168  8F13 2A 29 8C     	ld hl,(India_SP)
1169  8F16 77           	ld (hl),a
1170  8F17 2C           	inc l
1171  8F18
1172  8F18              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1173  8F18
1174  8F18 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
1175  8F1C
1176  8F1C 73           	ld (hl),e
1177  8F1D 2C           	inc l
1178  8F1E 72           	ld (hl),d
1179  8F1F 2C           	inc l
1180  8F20
1181  8F20 22 29 8C     	ld (India_SP),hl
1182  8F23
1183  8F23 C9           	ret
1184  8F24
1185  8F24              ; --------------------------------------------------------------------------------------------------------------
1186  8F24              ;
1187  8F24              ;	27/03/24
1188  8F24              ;
1189  8F24
1190  8F24              Inicializa_India_y_limpia_Tabla_de_impresion
1191  8F24
1192  8F24 2A 29 8C     	ld hl,(India_SP)
1193  8F27 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1194  8F2A
1195  8F2A 79           	ld a,c
1196  8F2B 95           	sub l
1197  8F2C 28 06        	jr z,2F
1198  8F2E 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1199  8F2F              ;														; _ y pasamos a inicializar (India_SP).
1200  8F2F AF           	xor a
1201  8F30
1202  8F30 77           1 ld (hl),a
1203  8F31 2C           	inc l
1204  8F32 10 FC        	djnz 1B												; Limpia Tabla.
1205  8F34
1206  8F34 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1207  8F37 22 29 8C     	ld (India_SP),hl
1208  8F3A
1209  8F3A C9           	ret
1210  8F3B
1211  8F3B              ; --------------------------------------------------------------------------------------------------------------
1212  8F3B              ;
1213  8F3B              ;	31/3/24
1214  8F3B
1215  8F3B              Ordena_tabla_de_impresion
1216  8F3B
1217  8F3B              ; 5794 T/states.
1218  8F3B              ; 6278 T/states.
1219  8F3B              ; 5310 T/states.
1220  8F3B
1221  8F3B              ; Inicializamos punteros (India_SP) e (India_2_SP).
1222  8F3B              ; Inicializamos contador de comparaciones, [C].
1223  8F3B              ; Cargamos los registros A y B para efectuar comparación.
1224  8F3B
1225  8F3B FD 2E 00     	ld iyl,0
1226  8F3E
1227  8F3E 3A 00 8C     	ld a,(Entidades_en_curso)
1228  8F41 FE 04        	cp 4 	;	4
1229  8F43 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1230  8F44
1231  8F44 3D           	dec a
1232  8F45 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1233  8F46 51           	ld d,c 										; Copia de respaldo.
1234  8F47
1235  8F47 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1236  8F48
1237  8F48 21 03 89     	ld hl,Tabla_de_pintado+3
1238  8F4B 46           	ld b,(hl)
1239  8F4C 22 2B 8C     	ld (India_2_SP),hl
1240  8F4F
1241  8F4F B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1242  8F50 DC 78 8F     	call c, Avanza_India_2_SP
1243  8F53 CC 78 8F     	call z, Avanza_India_2_SP
1244  8F56
1245  8F56 FD 2D        	dec iyl
1246  8F58 28 18        	jr z,2F
1247  8F5A
1248  8F5A
1249  8F5A              ; --------------------------------------------------------------------------------------------------------------
1250  8F5A              ;
1251  8F5A              ;	7/4/24
1252  8F5A
1253  8F5A              Trueque
1254  8F5A
1255  8F5A              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1256  8F5A              ;  			A contiene en nº de fila de (India_SP).
1257  8F5A              ;			HL contiene (India_2_SP).
1258  8F5A
1259  8F5A D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1260  8F5B E5           	push hl										; Preservo (India_2_SP).
1261  8F5C
1262  8F5C ED 5B 29 8C  	ld de,(India_SP)
1263  8F60 EB           	ex de,hl
1264  8F61 70           	ld (hl),b
1265  8F62 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1266  8F63
1267  8F63 CD A4 8F     	call Intercambia_1_byte
1268  8F66 CD A4 8F     	call Intercambia_1_byte
1269  8F69
1270  8F69
1271  8F69              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1272  8F69              ; Recuperamos (India_2_SP) en HL.
1273  8F69
1274  8F69 2A 29 8C     	ld hl,(India_SP)
1275  8F6C 7E           	ld a,(hl)
1276  8F6D
1277  8F6D E1           	pop hl
1278  8F6E D1           	pop de
1279  8F6F
1280  8F6F              ; --------------------------------------------------------------------------------------------------------------
1281  8F6F
1282  8F6F CD 78 8F     	call Avanza_India_2_SP
1283  8F72
1284  8F72 14           2 inc d
1285  8F73 15           	dec d
1286  8F74 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1287  8F75 18 D8        	jr 1B
1288  8F77
1289  8F77 C9           	ret
1290  8F78
1291  8F78              ; ----- ----- ----- ----- -----
1292  8F78
1293  8F78              Avanza_India_2_SP
1294  8F78
1295  8F78 0D           	dec c
1296  8F79 28 0A        	jr z,Avanza_punteros_indios
1297  8F7B
1298  8F7B FD 2C        	inc iyl
1299  8F7D
1300  8F7D 2C           	inc l
1301  8F7E 2C           	inc l
1302  8F7F 2C           	inc l
1303  8F80
1304  8F80 46           	ld b,(hl)
1305  8F81 22 2B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1306  8F84
1307  8F84 C9           	ret
1308  8F85
1309  8F85              ; ----- ----- ----- ----- -----
1310  8F85
1311  8F85              Avanza_punteros_indios
1312  8F85
1313  8F85 15           	dec d
1314  8F86 28 15        	jr z,Prepara_salida
1315  8F88
1316  8F88 4A           	ld c,d
1317  8F89
1318  8F89 2A 29 8C     	ld hl,(India_SP)
1319  8F8C 2C           	inc l
1320  8F8D 2C           	inc l
1321  8F8E 2C           	inc l
1322  8F8F 7E           	ld a,(hl)
1323  8F90 22 29 8C     	ld (India_SP),hl
1324  8F93
1325  8F93 2C           	inc l
1326  8F94 2C           	inc l
1327  8F95 2C           	inc l
1328  8F96 46           	ld b,(hl)
1329  8F97 22 2B 8C     	ld (India_2_SP),hl
1330  8F9A
1331  8F9A FD 2C        	inc iyl
1332  8F9C
1333  8F9C C9           	ret
1334  8F9D
1335  8F9D              Prepara_salida
1336  8F9D
1337  8F9D 21 00 89     	ld hl,Tabla_de_pintado
1338  8FA0 22 29 8C     	ld (India_SP),hl
1339  8FA3 C9           	ret
1340  8FA4
1341  8FA4
1342  8FA4 2C           Intercambia_1_byte inc l
1343  8FA5 1C           	inc e
1344  8FA6 46           	ld b,(hl)
1345  8FA7 1A           	ld a,(de)
1346  8FA8 EB           	ex de,hl
1347  8FA9 70           	ld (hl),b
1348  8FAA 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1349  8FAB C9           	ret
1350  8FAC
1351  8FAC              ; -----------------------------------------------------------------------------------
1352  8FAC              ;
1353  8FAC              ;	20/01/24
1354  8FAC              ;
1355  8FAC              ;
1356  8FAC
1357  8FAC              Construye_movimientos_masticados_entidad
1358  8FAC
1359  8FAC 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1360  8FAF E5           	push hl
1361  8FB0 CD F3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1362  8FB3              ;															; _ el (Contador_de_mov_masticados).
1363  8FB3 CD BE 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1364  8FB6              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1365  8FB6 CD EF 99     	call Recompone_posicion_inicio
1366  8FB9
1367  8FB9 CD 1F 97     1 call Draw
1368  8FBC CD D8 8F     	call Guarda_movimiento_masticado
1369  8FBF
1370  8FBF CD 9C 9D     	call Movimiento
1371  8FC2
1372  8FC2 3A 2D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1373  8FC5 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1374  8FC7 28 F0        	jr z,1B
1375  8FC9
1376  8FC9              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1377  8FC9              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1378  8FC9
1379  8FC9 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1380  8FCA 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1381  8FCD
1382  8FCD              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1383  8FCD
1384  8FCD CD 00 9F     	call Situa_en_contador_general_de_mov_masticados
1385  8FD0
1386  8FD0              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1387  8FD0              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1388  8FD0
1389  8FD0 ED 4B C1 8B  	ld bc,(Contador_de_mov_masticados)
1390  8FD4
1391  8FD4 71           	ld (hl),c
1392  8FD5 23           	inc hl
1393  8FD6 70           	ld (hl),b
1394  8FD7
1395  8FD7 C9           	ret
1396  8FD8
1397  8FD8              ; -----------------------------------------------------------------------------------
1398  8FD8              ;
1399  8FD8              ;	28/12/23
1400  8FD8              ;
1401  8FD8              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1402  8FD8              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1403  8FD8
1404  8FD8              Guarda_movimiento_masticado
1405  8FD8
1406  8FD8 ED 73 05 8C  	ld (Stack),sp
1407  8FDC ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1408  8FE0
1409  8FE0 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1410  8FE2 FD E5            push iy 												; Pushea Puntero_objeto.
1411  8FE4
1412  8FE4 ED 7B 05 8C      ld sp,(Stack)
1413  8FE8
1414  8FE8 2A C1 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1415  8FEB 23           	inc hl
1416  8FEC 22 C1 8B     	ld (Contador_de_mov_masticados),hl
1417  8FEF
1418  8FEF CD F3 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1419  8FF2              ;															; _ el (Contador_de_mov_masticados).
1420  8FF2 C9               ret
1421  8FF3
1422  8FF3              ; --------------------------------------------------------------------------------------------------------------
1423  8FF3              ;
1424  8FF3              ;	12/1/24
1425  8FF3              ;
1426  8FF3              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1427  8FF3
1428  8FF3              Actualiza_Puntero_de_almacen_de_mov_masticados
1429  8FF3
1430  8FF3 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1431  8FF6 01 04 00     	ld bc,4
1432  8FF9 A7           	and a
1433  8FFA ED 4A        	adc hl,bc
1434  8FFC 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1435  8FFF C9           	ret
1436  9000
1437  9000              ; --------------------------------------------------------------------------------------------------------------
1438  9000              ;
1439  9000              ;	24/03/24
1440  9000              ;
1441  9000              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1442  9000              ;
1443  9000              ;	IX contiene el puntero de impresión.
1444  9000              ;	DE contiene (Puntero_objeto).
1445  9000
1446  9000
1447  9000              Cargamos_registros_con_mov_masticado
1448  9000
1449  9000 ED 73 05 8C  	ld (Stack),sp
1450  9004 ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1451  9008
1452  9008 D1           	pop de 															; DE contiene Puntero_objeto
1453  9009 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1454  900B
1455  900B ED 73 BF 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1456  900F ED 7B 05 8C  	ld sp,(Stack)
1457  9013
1458  9013 7B           	ld a,e
1459  9014 82           	add d															; Comprueba si ya no hay datos en el almacén.
1460  9015
1461  9015 CC AE 93     	call z,Reinicia_entidad_maliciosa
1462  9018
1463  9018 C9           	ret
1464  9019
1465  9019              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1466  9019              ;
1467  9019              ;	22/7/24
1468  9019
1469  9019              Cargamos_registros_con_explosion
1470  9019
1471  9019
1472  9019 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1473  901C CD B8 90     	call Extrae_address
1474  901F
1475  901F 5D           	ld e,l
1476  9020 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1477  9021
1478  9021 DD 2A BD 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1479  9025
1480  9025 C9           	ret
1481  9026
1482  9026
1483  9026              Cargamos_registros_con_explosion_Amadeus
1484  9026
1485  9026 2A 74 89     	ld hl,(Pamm_Amadeus)
1486  9029 CD B8 90     	call Extrae_address
1487  902C
1488  902C 5D           	ld e,l
1489  902D 54           	ld d,h
1490  902E
1491  902E DD 2A 72 89  	ld ix,(p.imp.amadeus)
1492  9032
1493  9032 C9           	ret
1494  9033
1495  9033              ; --------------------------------------------------------------------------------------------------------------
1496  9033              ;
1497  9033              ;	17/06/24
1498  9033              ;
1499  9033              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1500  9033              ;
1501  9033              ;	IX contiene el puntero de impresión.
1502  9033              ;	DE contiene (Puntero_objeto).
1503  9033
1504  9033
1505  9033              Cargamos_registros_con_mov_masticado_Amadeus
1506  9033
1507  9033 ED 73 05 8C  	ld (Stack),sp
1508  9037 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1509  903B D1           	pop de 															; DE contiene Puntero_objeto
1510  903C DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1511  903E DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1512  9042 ED 7B 05 8C  	ld sp,(Stack)
1513  9046 C9           	ret
1514  9047
1515  9047              ; ---------------------------------------------------------------------------------------------------------------------
1516  9047              ;
1517  9047              ;	18/6/24
1518  9047              ;
1519  9047              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1520  9047
1521  9047              Genera_datos_de_impresion_Amadeus
1522  9047
1523  9047 3A 71 89     	ld a,(Impacto_Amadeus)
1524  904A A7           	and a
1525  904B 20 03        	jr nz,1F
1526  904D
1527  904D              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1528  904D              ; _apuntando a la correspondiente explosión.
1529  904D
1530  904D CD 33 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1531  9050
1532  9050 DD 7D        1 ld a,ixl
1533  9052 E6 1F        	and $1f
1534  9054 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1535  9057
1536  9057 2A 27 8C     	ld hl,(Scanlines_album_SP)
1537  905A E5           	push hl
1538  905B
1539  905B 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1540  905E 22 27 8C     	ld (Scanlines_album_SP),hl
1541  9061
1542  9061 CD 03 95     	call Genera_datos_de_impresion
1543  9064
1544  9064 E1           	pop hl
1545  9065 22 27 8C     	ld (Scanlines_album_SP),hl
1546  9068
1547  9068 C9           	ret
1548  9069
1549  9069              ; ---------------------------------------------------------------------------------------------------------------------
1550  9069              ;
1551  9069              ;	13/03/24
1552  9069              ;
1553  9069              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1554  9069
1555  9069              Inicia_albumes_de_lineas
1556  9069
1557  9069 21 00 80     	ld hl,Scanlines_album
1558  906C 22 09 8C     	ld (Album_de_pintado),hl
1559  906F 22 27 8C     	ld (Scanlines_album_SP),hl
1560  9072
1561  9072 21 1A 81     	ld hl,Scanlines_album_2
1562  9075 22 0B 8C     	ld (Album_de_borrado),hl
1563  9078
1564  9078 C9           	ret
1565  9079
1566  9079              Inicia_albumes_de_lineas_Amadeus
1567  9079
1568  9079 21 34 82     	ld hl,Amadeus_scanlines_album
1569  907C 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
1570  907F 21 58 82     	ld hl,Amadeus_scanlines_album_2
1571  9082 22 0F 8C     	ld (Album_de_borrado_Amadeus),hl
1572  9085
1573  9085 C9           	ret
1574  9086
1575  9086              Inicia_albumes_de_disparos
1576  9086
1577  9086 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1578  9089 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1579  908C 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1580  908F 22 13 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1581  9092
1582  9092 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1583  9095 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1584  9098 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1585  909B
1586  909B 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1587  909E 22 17 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1588  90A1
1589  90A1 C9           	ret
1590  90A2
1591  90A2              ; ---------------------------------------------------------------------------------------------------------------------
1592  90A2              ;
1593  90A2              ; 8/1/23
1594  90A2              ;
1595  90A2              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1596  90A2              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1597  90A2              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1598  90A2
1599  90A2              ; Destruye HL y DE !!!!!
1600  90A2
1601  90A2              Inicia_punteros_de_cajas
1602  90A2
1603  90A2 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1604  90A5 CD B8 90         call Extrae_address
1605  90A8 22 F8 8B         ld (Puntero_store_caja),hl
1606  90AB 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1607  90AE 22 FC 8B     	ld (Indice_restore_caja),hl
1608  90B1 CD B8 90     	call Extrae_address
1609  90B4 22 FA 8B     	ld (Puntero_restore_caja),hl
1610  90B7 C9               ret
1611  90B8
1612  90B8              ; *************************************************************************************************************************************************************
1613  90B8
1614  90B8              ;
1615  90B8              ; 20/10/22
1616  90B8              ;
1617  90B8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1618  90B8              ;
1619  90B8              ; Destruye el puntero y DE !!!!!
1620  90B8
1621  90B8 5E           Extrae_address ld e,(hl)
1622  90B9 23           	inc hl
1623  90BA 56           	ld d,(hl)
1624  90BB 2B           	dec hl
1625  90BC EB           	ex de,hl
1626  90BD C9           	ret
1627  90BE
1628  90BE              ; *************************************************************************************************************************************************************
1629  90BE              ;
1630  90BE              ;	20/1/24
1631  90BE              ;
1632  90BE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1633  90BE              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1634  90BE              ;
1635  90BE              ;   Destruye HL y BC !!!!!,
1636  90BE              ;
1637  90BE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1638  90BE              ;					"0" ..... Izquierda.
1639  90BE
1640  90BE              Inicia_Puntero_objeto
1641  90BE
1642  90BE 3A D7 8B     	ld a,(Cuad_objeto)
1643  90C1 E6 01        	and 1
1644  90C3 F5           	push af
1645  90C4 CC E0 90     	call z,Inicia_puntero_objeto_izq
1646  90C7 F1           	pop af
1647  90C8 C8           	ret z
1648  90C9 CD CD 90     	call Inicia_puntero_objeto_der
1649  90CC C9           	ret
1650  90CD
1651  90CD              ; Arrancamos desde la parte izquierda de la pantalla.
1652  90CD              ; Iniciamos (Indice_Sprite_der).
1653  90CD
1654  90CD 2A CD 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1655  90D0 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
1656  90D3 CD B8 90     	call Extrae_address
1657  90D6 22 CA 8B     	ld (Puntero_objeto),hl
1658  90D9
1659  90D9 2A CF 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1660  90DC 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1661  90DF C9           	ret
1662  90E0
1663  90E0              ; Arrancamos desde la parte derecha de la pantalla.
1664  90E0              ; Iniciamos (Indice_Sprite_izq).
1665  90E0
1666  90E0 2A CF 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1667  90E3 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1668  90E6 CD B8 90     	call Extrae_address
1669  90E9 22 CA 8B     	ld (Puntero_objeto),hl
1670  90EC
1671  90EC 2A CD 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1672  90EF 22 D1 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1673  90F2 C9           	ret
1674  90F3
1675  90F3              ; **************************************************************************************************
1676  90F3              ;
1677  90F3              ;	06/07/24
1678  90F3              ;
1679  90F3              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1680  90F3
1681  90F3              Restore_entidad
1682  90F3
1683  90F3 2A F8 8B     	ld hl,(Puntero_store_caja)
1684  90F6 7E           	ld a,(hl)
1685  90F7 A7           	and a
1686  90F8 CC 06 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1687  90FB 28 F6        	jr z,Restore_entidad
1688  90FD
1689  90FD 11 B8 8B     	ld de,Bandeja_DRAW
1690  9100 01 0C 00     	ld bc,12
1691  9103 ED B0        	ldir
1692  9105 C9           	ret
1693  9106
1694  9106              ; **************************************************************************************************
1695  9106              ;
1696  9106              ;	08/05/23
1697  9106              ;
1698  9106              ;	Incrementamos los dos punteros de entidades. (+1).
1699  9106
1700  9106              Incrementa_punteros_de_cajas
1701  9106
1702  9106 2A FA 8B     	ld hl,(Puntero_restore_caja)
1703  9109 22 F8 8B     	ld (Puntero_store_caja),hl
1704  910C 2A FC 8B     	ld hl,(Indice_restore_caja)
1705  910F 23           	inc hl
1706  9110 23           	inc hl
1707  9111 22 FC 8B     	ld (Indice_restore_caja),hl
1708  9114 CD B8 90         call Extrae_address
1709  9117 22 FA 8B         ld (Puntero_restore_caja),hl
1710  911A C9               ret
1711  911B
1712  911B              ; -----------------------------------------------------------
1713  911B
1714  911B              ; Teclado.
1715  911B
1716  911B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1717  911D DB FE        	in a,($fe)
1718  911F E6 01        	and $01
1719  9121 28 02        	jr z,1f
1720  9123 18 F6        	jr Pulsa_ENTER
1721  9125 C9           1 ret
1722  9126
1723  9126              ; **************************************************************************************************
1724  9126              ;
1725  9126              ; Temporización.
1726  9126
1727  9126              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1728  9126              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1729  9126              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1730  9126              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1731  9126
1732  9126              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1733  9126              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1734  9126              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1735  9126
1736  9126              ; A partir de $4f61 no hace falta DELAY.
1737  9126
1738  9126              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1739  9126
1740  9126              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1741  9126              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1742  9126              ;	LD A,B
1743  9126              ;	AND A
1744  9126              ;	JR NZ,wait
1745  9126              ;	RET
1746  9126
1747  9126              ; ---------------------------------------------------------------------------------------------------------------
1748  9126              ;
1749  9126              ;	13/07/24
1750  9126              ;
1751  9126
1752  9126              Inicia_Shield
1753  9126
1754  9126 21 51 8C     	ld hl,Datos_Shield
1755  9129 22 55 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1756  912C
1757  912C 7E           	ld a,(hl)
1758  912D 32 58 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1759  9130
1760  9130 3E 01        	ld a,1
1761  9132 32 59 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1762  9135
1763  9135 C9           	ret
1764  9136
1765  9136              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1766  9136              ;
1767  9136              ;	4/6/24
1768  9136              ;
1769  9136              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1770  9136              ;
1771  9136              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1772  9136              ;
1773  9136
1774  9136              Actualiza_pantalla
1775  9136
1776  9136 3E 02        	ld a,2
1777  9138 D3 FE        	out ($fe),a
1778  913A
1779  913A 3A 2D 8C     	ld a,(Ctrl_3)
1780  913D CB 57        	bit 2,a
1781  913F 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1782  9141
1783  9141              Borrando_entidades
1784  9141
1785  9141 2A 27 8C     	ld hl,(Scanlines_album_SP)
1786  9144 CD B8 90     	call Extrae_address
1787  9147 24           	inc h
1788  9148 25           	dec h
1789  9149 28 05        	jr z,Pintando_entidades
1790  914B CD FC 95     	call Pinta_Sprites
1791  914E 18 F1        	jr Borrando_entidades
1792  9150
1793  9150              Pintando_entidades
1794  9150
1795  9150 2A 29 8C     	ld hl,(India_SP)
1796  9153 2C           	inc l
1797  9154 CD B8 90     	call Extrae_address
1798  9157 24           	inc h
1799  9158 25           	dec h
1800  9159 28 0E        	jr z,Ejecuta_escudo
1801  915B 1C           	inc e
1802  915C 1C           	inc e
1803  915D ED 53 29 8C  	ld (India_SP),de
1804  9161 CD B8 90     	call Extrae_address
1805  9164 CD FC 95     	call Pinta_Sprites
1806  9167 18 E7        	jr Pintando_entidades
1807  9169
1808  9169              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1809  9169
1810  9169              Ejecuta_escudo
1811  9169
1812  9169 3A 57 8C     	ld a,(Shield)
1813  916C A7           	and a
1814  916D 20 2F        	jr nz,Aplica_Shield
1815  916F
1816  916F              Borrando_Amadeus
1817  916F
1818  916F 21 2D 8C     	ld hl,Ctrl_3
1819  9172 CB 6E        	bit 5,(hl)
1820  9174 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1821  9176
1822  9176 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1823  9179 CD B8 90     	call Extrae_address
1824  917C 24           	inc h
1825  917D 25           	dec h
1826  917E 28 03        	jr z,Pintando_Amadeus
1827  9180 CD FC 95     	call Pinta_Sprites
1828  9183
1829  9183              Pintando_Amadeus
1830  9183
1831  9183 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1832  9186 CD B8 90     	call Extrae_address
1833  9189 24           	inc h
1834  918A 25           	dec h
1835  918B 28 03        	jr z,1F
1836  918D CD FC 95     	call Pinta_Sprites
1837  9190
1838  9190              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1839  9190
1840  9190 21 2D 8C     1 ld hl,Ctrl_3
1841  9193 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1842  9195 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1843  9197 CB AE        	res 5,(hl)
1844  9199
1845  9199 3E 01        	ld a,1												; Borde azul.
1846  919B D3 FE        	out ($fe),a
1847  919D
1848  919D C9           	ret
1849  919E
1850  919E              Aplica_Shield
1851  919E
1852  919E              ;	Bit 1 "1" (Shield_3) Sólo borra.
1853  919E              ;		  "0"     ""     Borra/Pinta.
1854  919E              ;	Bit 2    ""  RET.	 No borra, no pinta.
1855  919E
1856  919E 21 59 8C     	ld hl,Shield_3
1857  91A1
1858  91A1 CB 5E        	bit 3,(hl)
1859  91A3 20 DE        	jr nz,Pintando_Amadeus
1860  91A5
1861  91A5 CB 56        	bit 2,(hl)
1862  91A7 20 E7        	jr nz,1B
1863  91A9
1864  91A9 CB 4E        	bit 1,(hl)
1865  91AB C4 B2 91     	call nz,Borra_Amadeus_shield
1866  91AE
1867  91AE 28 BF        	jr z,Borrando_Amadeus
1868  91B0 18 DE        	jr 1B
1869  91B2
1870  91B2              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1871  91B2
1872  91B2              Borra_Amadeus_shield
1873  91B2
1874  91B2 3A 2D 8C     	ld a,(Ctrl_3)
1875  91B5 CB 6F        	bit 5,a
1876  91B7 28 08        	jr z,1F
1877  91B9
1878  91B9 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1879  91BC CD B8 90     	call Extrae_address
1880  91BF 18 06        	jr 2F
1881  91C1
1882  91C1 2A 0D 8C     1 ld hl,(Album_de_pintado_Amadeus)
1883  91C4 CD B8 90     	call Extrae_address
1884  91C7
1885  91C7 CD FC 95     2 call Pinta_Sprites
1886  91CA
1887  91CA AF           	xor a
1888  91CB 3C           	inc a											; Asegura NZ en la salida de la rutina.
1889  91CC
1890  91CC C9           	ret
1891  91CD
1892  91CD              Pinta_Amadeus_shield
1893  91CD
1894  91CD 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1895  91D0 CD B8 90     	call Extrae_address
1896  91D3 CD FC 95     	call Pinta_Sprites
1897  91D6
1898  91D6 AF           	xor a
1899  91D7 3C           	inc a											; Asegura NZ en la salida de la rutina.
1900  91D8
1901  91D8 C9           	ret
1902  91D9
1903  91D9              Borra_Pinta_Amadeus_shield
1904  91D9
1905  91D9 CD B2 91     	call Borra_Amadeus_shield
1906  91DC CD CD 91     	call Pinta_Amadeus_shield
1907  91DF C9           	ret
1908  91E0
1909  91E0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1910  91E0              ;
1911  91E0              ;	19/6/24
1912  91E0              ;
1913  91E0
1914  91E0              Teclado
1915  91E0
1916  91E0              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1917  91E0
1918  91E0 3E F7        	ld a,$f7												; "5" para disparar.
1919  91E2 DB FE        	in a,($fe)
1920  91E4 E6 10        	and $10
1921  91E6
1922  91E6 CC F1 A1     	call z,Genera_disparo_Amadeus
1923  91E9
1924  91E9 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1925  91EB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1926  91ED E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1927  91EF CC 69 9D         call z,Amadeus_a_izquierda
1928  91F2
1929  91F2 3E F7        	ld a,$f7
1930  91F4 DB FE        	in a,($fe)
1931  91F6 E6 01        	and $01
1932  91F8 C8           	ret z
1933  91F9
1934  91F9 3E F7        	ld a,$f7
1935  91FB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1936  91FD E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1937  91FF CC 81 9D     	call z,Amadeus_a_derecha
1938  9202
1939  9202 C9           	ret
1940  9203
1941  9203              ; ------------------------------------------------------------------------------------------------------------------------
1942  9203              ;
1943  9203              ;	06/07/24
1944  9203              ;
1945  9203
1946  9203              Genera_explosion
1947  9203
1948  9203 21 3F 8C     	ld hl,Clock_explosion
1949  9206 35           	dec (hl)
1950  9207 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1951  9209
1952  9209              Borra_entidad_colisionada
1953  9209
1954  9209 CD 10 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1955  920C CD 19 90     	call Cargamos_registros_con_explosion
1956  920F CD 03 95     	call Genera_datos_de_impresion
1957  9212
1958  9212 AF           	xor a
1959  9213 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1960  9214
1961  9214 C9           	ret
1962  9215
1963  9215              Siguiente_frame_explosion
1964  9215
1965  9215 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1966  9217
1967  9217              ; Avanza Frame de explosión.
1968  9217
1969  9217 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1970  921A 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1971  921D
1972  921D 79           	ld a,c
1973  921E 95           	sub l
1974  921F 20 0B        	jr nz,1F
1975  9221
1976  9221              ; Fín de la entidad !!!!!!!!!!!!!
1977  9221
1978  9221 21 FF 8B     	ld hl,Numero_parcial_de_entidades
1979  9224 35           	dec (hl)
1980  9225 23           	inc hl
1981  9226 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1982  9227
1983  9227 CD 83 93     	call Limpiamos_bandeja_DRAW
1984  922A 18 DD        	jr Borra_entidad_colisionada
1985  922C
1986  922C 23           1 inc hl
1987  922D 23           	inc hl
1988  922E 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1989  9231 18 D6        	jr Borra_entidad_colisionada
1990  9233
1991  9233              ; ----- ----- ----- ----- -----
1992  9233
1993  9233              Genera_explosion_Amadeus
1994  9233
1995  9233 21 40 8C     	ld hl,Clock_explosion_Amadeus
1996  9236 35           	dec (hl)
1997  9237 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
1998  9239
1999  9239              Borra_Amadeus_impactado
2000  9239
2001  9239 CD 75 8E     	call Change_Amadeus
2002  923C CD 26 90     	call Cargamos_registros_con_explosion_Amadeus
2003  923F CD 47 90     	call Genera_datos_de_impresion_Amadeus
2004  9242
2005  9242 21 2D 8C     	ld hl,Ctrl_3
2006  9245 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2007  9247
2008  9247 AF           	xor a
2009  9248 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2010  9249
2011  9249 C9           	ret
2012  924A
2013  924A              Siguiente_frame_explosion_Amadeus
2014  924A
2015  924A 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2016  924C
2017  924C              ; Avanza Frame de explosión.
2018  924C
2019  924C 2A 74 89     	ld hl,(Pamm_Amadeus)
2020  924F 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2021  9252
2022  9252 79           	ld a,c
2023  9253 95           	sub l
2024  9254 20 0B        	jr nz,1F
2025  9256
2026  9256              ; Fín de Amadeus !!!!!!!!!!!!!
2027  9256              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2028  9256
2029  9256 AF           	xor a
2030  9257 32 71 89     	ld (Impacto_Amadeus),a
2031  925A 21 2D 8C     	ld hl,Ctrl_3
2032  925D CB F6        	set 6,(hl)
2033  925F
2034  925F 18 D8        	jr Borra_Amadeus_impactado
2035  9261
2036  9261 23           1 inc hl
2037  9262 23           	inc hl
2038  9263 22 74 89     	ld (Pamm_Amadeus),hl
2039  9266 18 D1        	jr Borra_Amadeus_impactado
2040  9268
2041  9268              ; ---------------------------------------------------------------
2042  9268
2043  9268              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9268              ; ******************************************************************************************************************************************************************************************
   2+ 9268              ;
   3+ 9268              ;   21/04/24
   4+ 9268              ;
   5+ 9268              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9268              ;   (XOR) bit a bit.
   7+ 9268              ;
   8+ 9268              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9268
  10+ 9268              Derivando_RND
  11+ 9268
  12+ 9268 21 F6 88         ld hl,Numeros_aleatorios
  13+ 926B
  14+ 926B ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 926D C5               push bc
  16+ 926E              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 926E 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9271              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9271
  20+ 9271 A7           6 and a                                 ; Carry a "0".
  21+ 9272 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9274 30 02            jr nc,1F
  23+ 9276
  24+ 9276 CB C1            set 0,c
  25+ 9278
  26+ 9278 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9279 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 927B 5F               ld e,a
  29+ 927C
  30+ 927C 7A               ld a,d
  31+ 927D E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 927F 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9281
  34+ 9281 CB 3F            srl a
  35+ 9283
  36+ 9283 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9284
  38+ 9284 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9285 28 04            jr z,4F
  40+ 9287
  41+ 9287 CB FF            set 7,a
  42+ 9289 18 02            jr 5F
  43+ 928B
  44+ 928B CB BF        4 res 7,a
  45+ 928D
  46+ 928D CB 21        5 sla c
  47+ 928F 10 E0            djnz 6B
  48+ 9291
  49+ 9291 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9292
  51+ 9292 77               ld (hl),a
  52+ 9293 23               inc hl
  53+ 9294 C1               pop bc
  54+ 9295 10 D4            djnz 3B
  55+ 9297
  56+ 9297 C9               ret
  57+ 9298
  58+ 9298
  59+ 9298
# file closed: RND_Derivando.asm
2044  9298              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9298              ;---------------------------------------------------------------------------------------------------------------
   2+ 9298              ;
   3+ 9298              ;   8/3/24
   4+ 9298              ;
   5+ 9298              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9298              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9298              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9298              ;	_ de la 1ª entidad del Nivel.
   9+ 9298              ;
  10+ 9298              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9298
  12+ 9298              ;	MODIFICA: HL,DE y A.
  13+ 9298              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9298
  15+ 9298              Inicializa_Nivel
  16+ 9298
  17+ 9298 2A 4D 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 929B CD B8 90     	call Extrae_address
  19+ 929E 7E           	ld a,(hl)
  20+ 929F 32 FE 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92A2 23           	inc hl
  22+ 92A3 CD B0 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92A6 22 4F 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92A9 CD B9 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92AC
  26+ 92AC CD CA 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92AF C9           	ret
  28+ 92B0
  29+ 92B0              ; ----------------------
  30+ 92B0
  31+ 92B0 11 DD 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92B3 01 04 00     	ld bc,4
  33+ 92B6 ED B0        	ldir
  34+ 92B8 C9           	ret
  35+ 92B9
  36+ 92B9 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92BA CD 54 94         call Calcula_salto_en_BC
  38+ 92BD 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92C0 A7               and a
  40+ 92C1 ED 4A            adc hl,bc
  41+ 92C3 CD B8 90         call Extrae_address
  42+ 92C6 22 E9 8B         ld (Puntero_indice_mov),hl
  43+ 92C9 C9               ret
  44+ 92CA
  45+ 92CA 3A B8 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92CD CD 54 94     	call Calcula_salto_en_BC
  47+ 92D0 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92D3 A7               and a
  49+ 92D4 ED 4A            adc hl,bc
  50+ 92D6 CD B8 90         call Extrae_address
  51+ 92D9 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92DC C9           	ret
  53+ 92DD
  54+ 92DD              ;---------------------------------------------------------------------------------------------------------------
  55+ 92DD              ;
  56+ 92DD              ;   5/1/24
  57+ 92DD              ;
  58+ 92DD              ;	Destruye A,BC,HL,DE
  59+ 92DD
  60+ 92DD              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92DD              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92DD
  63+ 92DD              Inicia_Entidades
  64+ 92DD
  65+ 92DD              ; Preparamos los punteros de las cajas de entidades:
  66+ 92DD
  67+ 92DD CD A2 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92E0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92E0 CD 9C 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92E3
  71+ 92E3 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92E6
  73+ 92E6 22 4F 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92E9
  75+ 92E9 CD 02 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92EC
  77+ 92EC 2A 4F 8C     	ld hl,(Datos_de_nivel)
  78+ 92EF
  79+ 92EF              ; En este punto:
  80+ 92EF              ;
  81+ 92EF              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92EF              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92EF
  84+ 92EF C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92F0
  86+ 92F0 7E           	ld a,(hl)
  87+ 92F1 CD 6E 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92F4
  89+ 92F4 CD 66 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92F7
  91+ 92F7              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92F7
  93+ 92F7 CD 24 94     	call Busca_mov_masticados_segun_tipo
  94+ 92FA
  95+ 92FA A7           	and a
  96+ 92FB 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92FD
  98+ 92FD              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92FD
 100+ 92FD              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92FD              ;	_ de este tipo de entidad.
 102+ 92FD
 103+ 92FD CD 00 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 9300 CD 0D 9F     	call Transfiere_datos_de_contadores
 105+ 9303
 106+ 9303 18 06        	jr 4F
 107+ 9305
 108+ 9305 CD AC 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9308
 110+ 9308              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9308              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9308              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9308              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9308              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9308
 116+ 9308 CD E2 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 930B              ;																; _ Mov_masticados ya generados.
 118+ 930B
 119+ 930B CD 00 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 930E
 121+ 930E DD E5        	push ix
 122+ 9310 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9311
 124+ 9311 D5           	push de
 125+ 9312 CD D7 94     	call Genera_coordenadas
 126+ 9315
 127+ 9315 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 128+ 9319 CD 10 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 931C D1           	pop de
 130+ 931D
 131+ 931D CD 03 95     	call Genera_datos_de_impresion
 132+ 9320              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9320              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9320              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9320              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9320
 137+ 9320 CD A6 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9323
 139+ 9323              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9323
 141+ 9323 ED 5B F8 8B  	ld de,(Puntero_store_caja)
 142+ 9327 CD 93 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 932A
 144+ 932A CD 83 93     	call Limpiamos_bandeja_DRAW
 145+ 932D CD 06 91     	call Incrementa_punteros_de_cajas
 146+ 9330
 147+ 9330              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9330              ; _ entidad del Nivel.
 149+ 9330
 150+ 9330 3A 2E 8C     	ld a,(Ctrl_4)
 151+ 9333 E6 F0        	and $f0
 152+ 9335 32 2E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9338
 154+ 9338              ; Siguiente entidad del Nivel.
 155+ 9338
 156+ 9338 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 933B 23           	inc hl 														; _ entidad del Nivel.
 158+ 933C
 159+ 933C C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 933D
 161+ 933D 10 A7        	djnz 2B
 162+ 933F
 163+ 933F C9           	ret
 164+ 9340
 165+ 9340              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9340              ;
 167+ 9340              ;	27/5/24
 168+ 9340              ;
 169+ 9340              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9340              ;
 171+ 9340
 172+ 9340              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9340              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9340
 175+ 9340 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9343 CD 66 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9346
 178+ 9346
 179+ 9346              Construye_movimientos_masticados_Amadeus
 180+ 9346
 181+ 9346 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9349 CD F3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 934C              ;															; _ el (Contador_de_mov_masticados).
 184+ 934C CD BE 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 934F              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 934F
 187+ 934F              ; Generamos movimientos masticados de Amadeus.
 188+ 934F
 189+ 934F 06 79        	ld b,121												; $0079, 121d.
 190+ 9351
 191+ 9351 C5           1 push bc
 192+ 9352 CD 1F 97     	call Draw
 193+ 9355 CD D8 8F     	call Guarda_movimiento_masticado
 194+ 9358
 195+ 9358 CD 93 9A     	call Mov_right
 196+ 935B CD 93 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 935E
 198+ 935E C1           	pop bc
 199+ 935F 10 F0        	djnz 1B
 200+ 9361
 201+ 9361              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9361
 203+ 9361              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9361              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9361
 206+ 9361 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9364 01 08 00     	ld bc,8
 208+ 9367 A7           	and a
 209+ 9368 ED 42        	sbc hl,bc
 210+ 936A 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 936D
 212+ 936D C9           	ret
 213+ 936E
 214+ 936E              ; ---------------------------------------------------------------------
 215+ 936E              ;
 216+ 936E              ;	10/02/24
 217+ 936E              ;
 218+ 936E              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 936E              ;
 220+ 936E              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 936E
 222+ 936E              Definicion_segun_tipo
 223+ 936E
 224+ 936E CD 54 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9371 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9374 CD 5C 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9377 C9           	ret
 228+ 9378
 229+ 9378              ; ---------------------------------------------------------------------
 230+ 9378              ;
 231+ 9378              ;	6/7/24
 232+ 9378
 233+ 9378
 234+ 9378              Store_Restore_cajas
 235+ 9378
 236+ 9378 ED 5B F8 8B  	ld de,(Puntero_store_caja)
 237+ 937C CD 93 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 937F CD 06 91     	call Incrementa_punteros_de_cajas
 239+ 9382 C9           	ret
 240+ 9383
 241+ 9383              ; ---------------------------------------------------------------------
 242+ 9383              ;
 243+ 9383              ;	23/6/24
 244+ 9383              ;
 245+ 9383              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9383              ;
 247+ 9383              ;	MODIFY: HL
 248+ 9383
 249+ 9383              Limpiamos_bandeja_DRAW
 250+ 9383
 251+ 9383 ED 73 05 8C  	ld (Stack),sp
 252+ 9387 31 DD 8B     	ld sp,Vel_left
 253+ 938A
 254+ 938A AF           	xor a
 255+ 938B 67           	ld h,a
 256+ 938C 6F           	ld l,a
 257+ 938D
 258+ 938D E5           	push hl
 259+ 938E E5           	push hl
 260+ 938F E5           	push hl
 261+ 9390 E5           	push hl
 262+ 9391 E5           	push hl
 263+ 9392 E5           	push hl
 264+ 9393 E5           	push hl
 265+ 9394 E5           	push hl
 266+ 9395 E5           	push hl
 267+ 9396 E5           	push hl
 268+ 9397 E5           	push hl
 269+ 9398 E5           	push hl
 270+ 9399 E5           	push hl
 271+ 939A E5           	push hl
 272+ 939B E5           	push hl
 273+ 939C E5           	push hl
 274+ 939D E5           	push hl
 275+ 939E E5           	push hl
 276+ 939F
 277+ 939F 33           	inc sp
 278+ 93A0
 279+ 93A0 E5           	push hl
 280+ 93A1 ED 7B 05 8C  	ld sp,(Stack)
 281+ 93A5
 282+ 93A5 C9           	ret
 283+ 93A6
 284+ 93A6              ; ---------------------------------------------------------------------
 285+ 93A6              ;
 286+ 93A6              ;	24/03/24
 287+ 93A6
 288+ 93A6 2A C1 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93A9 2B           	dec hl
 290+ 93AA 22 C1 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93AD C9           	ret
 292+ 93AE
 293+ 93AE              ; ---------------------------------------------------------------------
 294+ 93AE              ;
 295+ 93AE              ;	8/5/24
 296+ 93AE
 297+ 93AE              Reinicia_entidad_maliciosa
 298+ 93AE
 299+ 93AE              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93AE
 301+ 93AE CD 00 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93B1 CD 0D 9F     	call Transfiere_datos_de_contadores
 303+ 93B4
 304+ 93B4              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93B4
 306+ 93B4 3A B8 8B     	ld a,(Tipo)
 307+ 93B7 CD 6E 93     	call Definicion_segun_tipo
 308+ 93BA
 309+ 93BA E5           	push hl
 310+ 93BB DD E1        	pop ix
 311+ 93BD
 312+ 93BD DD 6E 0B     	ld l,(ix+11)
 313+ 93C0 DD 66 0C     	ld h,(ix+12)
 314+ 93C3
 315+ 93C3 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93C6
 317+ 93C6 CD 00 90     	call Cargamos_registros_con_mov_masticado
 318+ 93C9
 319+ 93C9              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93C9              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93C9              ; Ejemplos.
 322+ 93C9
 323+ 93C9              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93C9              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93C9              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93C9              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93C9              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93C9
 329+ 93C9 21 BB 8B     	ld hl,Contador_de_vueltas
 330+ 93CC CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93CE
 332+ 93CE 7E           	ld a,(hl)
 333+ 93CF CB 2F        	sra a
 334+ 93D1 CB 2F        	sra a
 335+ 93D3
 336+ 93D3 32 C3 8B     	ld (Velocidad),a
 337+ 93D6
 338+ 93D6 3E 40        	ld a,$40
 339+ 93D8 BE           	cp (hl)
 340+ 93D9 C0           	ret nz
 341+ 93DA
 342+ 93DA              ; Límitador.
 343+ 93DA
 344+ 93DA              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93DA
 346+ 93DA CB 2E        	sra (hl)
 347+ 93DC 21 C3 8B     	ld hl,Velocidad
 348+ 93DF CB 2E        	sra (hl)
 349+ 93E1
 350+ 93E1 C9           	ret
 351+ 93E2
 352+ 93E2              ; ---------------------------------------------------------------------
 353+ 93E2              ;
 354+ 93E2              ;	22/01/24
 355+ 93E2
 356+ 93E2 21 2E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93E5 CB 46        	bit 0,(hl)
 358+ 93E7 20 0D        	jr nz,1F
 359+ 93E9 CB 4E        	bit 1,(hl)
 360+ 93EB 20 0C        	jr nz,2F
 361+ 93ED CB 56        	bit 2,(hl)
 362+ 93EF 20 0B        	jr nz,3F
 363+ 93F1 CB 5E        	bit 3,(hl)
 364+ 93F3 20 0A        	jr nz,4F
 365+ 93F5 C9           	ret
 366+ 93F6
 367+ 93F6 CB E6        1 set 4,(hl)
 368+ 93F8 C9           	ret
 369+ 93F9 CB EE        2 set 5,(hl)
 370+ 93FB C9           	ret
 371+ 93FC CB F6        3 set 6,(hl)
 372+ 93FE C9           	ret
 373+ 93FF CB FE        4 set 7,(hl)
 374+ 9401 C9           	ret
 375+ 9402
 376+ 9402              ; ---------------------------------------------------------------------
 377+ 9402              ;
 378+ 9402              ;	23/01/24
 379+ 9402              ;
 380+ 9402              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9402              ;
 382+ 9402              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9402              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9402              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9402              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9402
 387+ 9402              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9402
 389+ 9402 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9403 3D           	dec a
 391+ 9404 20 06        	jr nz,1F
 392+ 9406
 393+ 9406              ; --- Tipo_1
 394+ 9406
 395+ 9406 21 2E 8C     	ld hl,Ctrl_4
 396+ 9409 CB C6        	set 0,(hl)
 397+ 940B C9           	ret
 398+ 940C
 399+ 940C 3D           1 dec a
 400+ 940D 20 06        	jr nz,2F
 401+ 940F
 402+ 940F              ; --- Tipo_2
 403+ 940F
 404+ 940F 21 2E 8C     	ld hl,Ctrl_4
 405+ 9412 CB CE        	set 1,(hl)
 406+ 9414 C9           	ret
 407+ 9415
 408+ 9415 3D           2 dec a
 409+ 9416 20 06        	jr nz,3F
 410+ 9418
 411+ 9418              ; --- Tipo_3
 412+ 9418
 413+ 9418 21 2E 8C     	ld hl,Ctrl_4
 414+ 941B CB D6        	set 2,(hl)
 415+ 941D C9           	ret
 416+ 941E
 417+ 941E              ; --- Tipo_3
 418+ 941E
 419+ 941E 21 2E 8C     3 ld hl,Ctrl_4
 420+ 9421 CB D6        	set 2,(hl)
 421+ 9423 C9           	ret
 422+ 9424
 423+ 9424              ; ---------------------------------------------------------------------
 424+ 9424              ;
 425+ 9424              ;	22/01/24
 426+ 9424
 427+ 9424 21 2E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9427 CB 46        	bit 0,(hl)
 429+ 9429 20 0E        	jr nz,1F
 430+ 942B
 431+ 942B CB 4E        	bit 1,(hl)
 432+ 942D 20 10        	jr nz,2F
 433+ 942F
 434+ 942F CB 56        	bit 2,(hl)
 435+ 9431 20 12        	jr nz,3F
 436+ 9433
 437+ 9433 CB 5E        	bit 3,(hl)
 438+ 9435 20 14        	jr nz,4F
 439+ 9437 18 19        	jr 6F
 440+ 9439
 441+ 9439              ; Entidad_de_Tipo_1.
 442+ 9439
 443+ 9439 CB 66        1 bit 4,(hl)
 444+ 943B 28 15        	jr z,6F
 445+ 943D 18 10        	jr 5F
 446+ 943F
 447+ 943F              ; Entidad_de_Tipo_2.
 448+ 943F
 449+ 943F CB 6E        2 bit 5,(hl)
 450+ 9441 28 0F        	jr z,6F
 451+ 9443 18 0A        	jr 5F
 452+ 9445
 453+ 9445              ; Entidad_de_Tipo_3.
 454+ 9445
 455+ 9445 CB 76        3 bit 6,(hl)
 456+ 9447 28 09        	jr z,6F
 457+ 9449 18 04        	jr 5F
 458+ 944B
 459+ 944B              ; Entidad_de_Tipo_4.
 460+ 944B
 461+ 944B CB 7E        4 bit 7,(hl)
 462+ 944D 28 03        	jr z,6F
 463+ 944F
 464+ 944F              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 944F
 466+ 944F AF           5 xor a
 467+ 9450 3C           	inc a
 468+ 9451 C9           	ret
 469+ 9452
 470+ 9452              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9452
 472+ 9452 AF           6 xor a
 473+ 9453 C9           	ret
 474+ 9454
 475+ 9454              ;	------------------------------------------------------------------------------------
 476+ 9454              ;
 477+ 9454              ;	12/01/24
 478+ 9454              ;
 479+ 9454              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9454              ;
 481+ 9454              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9454              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9454
 484+ 9454 CB 27        Calcula_salto_en_BC sla a
 485+ 9456 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9458 4F           	ld c,a
 487+ 9459 06 00        	ld b,0
 488+ 945B C9           	ret
 489+ 945C
 490+ 945C              ; ------------------------------------------------------------------
 491+ 945C              ;
 492+ 945C              ;	19/1/24
 493+ 945C              ;
 494+ 945C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 945C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 945C
 497+ 945C A7           Situa_en_datos_de_definicion and a
 498+ 945D ED 4A        	adc hl,bc
 499+ 945F CD B8 90     	call Extrae_address
 500+ 9462 22 03 8C         ld (Datos_de_entidad),hl
 501+ 9465 C9           	ret
 502+ 9466
 503+ 9466              ; ------------------------------------------------------------------
 504+ 9466
 505+ 9466              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9466              ; 	inc de
 507+ 9466              ; 	inc de
 508+ 9466              ; 	ex de,hl
 509+ 9466              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9466              ; 	ret
 511+ 9466
 512+ 9466              ; ----------------------------------------------------------------------------------------------------------
 513+ 9466              ;
 514+ 9466              ;	24/6/24
 515+ 9466              ;
 516+ 9466              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9466              ;	_ de entidad.
 518+ 9466              ;
 519+ 9466              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9466              ;
 521+ 9466              ;
 522+ 9466              ;	MODIFICA: HL,DE y BC
 523+ 9466
 524+ 9466
 525+ 9466              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9466
 527+ 9466 11 B8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9469 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 946A 12           	ld (de),a
 530+ 946B 23           	inc hl
 531+ 946C              ;
 532+ 946C 11 C6 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 946F 01 02 00     	ld bc,2
 534+ 9472 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9474              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9474 11 BB 8B     	ld de,Contador_de_vueltas
 537+ 9477 7E           	ld a,(hl)
 538+ 9478 12           	ld (de),a
 539+ 9479 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 947A
 541+ 947A 11 CD 8B     	ld de,Indice_Sprite_der
 542+ 947D 01 04 00     	ld bc,4
 543+ 9480 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9482
 545+ 9482 11 D5 8B     	ld de,Posicion_inicio
 546+ 9485 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9488 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 948A
 549+ 948A 11 BF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 948D 01 02 00     	ld bc,2
 551+ 9490 ED B0        	ldir
 552+ 9492
 553+ 9492 C9           	ret
 554+ 9493
 555+ 9493              ; ----------------------------------------------------------------------------------------------------------
 556+ 9493              ;
 557+ 9493              ;	1/8/24
 558+ 9493              ;
 559+ 9493
 560+ 9493              Parametros_de_bandeja_DRAW_a_caja
 561+ 9493
 562+ 9493 21 B8 8B     	ld hl,Bandeja_DRAW
 563+ 9496 01 0C 00     	ld bc,12
 564+ 9499 ED B0        	ldir
 565+ 949B C9           	ret
 566+ 949C
 567+ 949C              ;---------------------------------------------------------------------------------------------------------------
 568+ 949C              ;
 569+ 949C              ;	5/1/24
 570+ 949C              ;
 571+ 949C              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 949C              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 949C              ;
 574+ 949C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 949C              ;
 576+ 949C              ;	(Numero_parcial_de_entidades)="7".
 577+ 949C              ;
 578+ 949C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 949C              ;
 580+ 949C              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 949C              ;
 582+ 949C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 949C              ;	MODIFICA: A y B.
 584+ 949C              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 949C
 586+ 949C              Inicializa_Numero_parcial_de_entidades
 587+ 949C
 588+ 949C              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 949C
 590+ 949C 3A FE 8B     	ld a,(Numero_de_entidades)
 591+ 949F A7           	and a
 592+ 94A0
 593+ 94A0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94A0              ;	jr z,$
 595+ 94A0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94A0
 597+ 94A0 20 03        	jr nz,3F
 598+ 94A2
 599+ 94A2              ; ---------- ---------- ----------
 600+ 94A2
 601+ 94A2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94A2              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94A2
 604+ 94A2 CD 98 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94A5
 606+ 94A5              ; ---------- ---------- ----------
 607+ 94A5
 608+ 94A5 3A FE 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94A8 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94AA 38 08        	jr c,1F
 611+ 94AC
 612+ 94AC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94AC              ; Actualizamos variables.
 614+ 94AC
 615+ 94AC 3E 07        	ld a,7
 616+ 94AE 32 FF 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94B1 47           	ld b,a
 618+ 94B2 18 04        	jr 2F
 619+ 94B4
 620+ 94B4              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94B4              ; (Numero_de_entidades)="0".
 622+ 94B4
 623+ 94B4 32 FF 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94B7 47           	ld b,a
 625+ 94B8 C9           2 ret
 626+ 94B9
# file closed: Rutinas_de_inicio_y_niveles.asm
2045  94B9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94B9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94B9              ;
   3+ 94B9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94B9              ;
   5+ 94B9              ; *****************************************************************************************************************************************************************************************
   6+ 94B9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94B9
   8+ 94B9 7C           calcula_tercio ld a,h
   9+ 94BA E6 18        	and $18
  10+ 94BC CB 2F        	sra a
  11+ 94BE CB 2F        	sra a
  12+ 94C0 CB 2F        	sra a
  13+ 94C2 C9           	ret
  14+ 94C3
# file closed: calcula_tercio.asm
2046  94C3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C3              ;
   3+ 94C3              ;
   4+ 94C3              ;	CLS.
   5+ 94C3              ;
   6+ 94C3              ;	Limpia la pantalla y define sus atributos.
   7+ 94C3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C3              ;
   9+ 94C3              ;	COLORES: 0 ..... NEGRO
  10+ 94C3              ;    		 1 ..... AZUL
  11+ 94C3              ; 			 2 ..... ROJO
  12+ 94C3              ;			 3 ..... MAGENTA
  13+ 94C3              ; 			 4 ..... VERDE
  14+ 94C3              ; 			 5 ..... CIAN
  15+ 94C3              ;			 6 ..... AMARILLO
  16+ 94C3              ; 			 7 ..... BLANCO
  17+ 94C3              ;
  18+ 94C3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C3              ;
  20+ 94C3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C3
  22+ 94C3
  23+ 94C3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94C6 11 01 40     	LD DE,$4001
  25+ 94C9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94CC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94CE ED B0        	LDIR
  28+ 94D0 01 FF 02     	LD BC,767
  29+ 94D3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D4 ED B0        	LDIR
  31+ 94D6 C9           	ret
  32+ 94D7
# file closed: Cls.asm
2047  94D7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94D7              ; ------------------------------------------------------------------------
   2+ 94D7              ;
   3+ 94D7              ;	30/1/24
   4+ 94D7              ;
   5+ 94D7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94D7              ;	Fila superior "0", Columna izquierda "0".
   7+ 94D7              ;
   8+ 94D7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94D7              ;
  10+ 94D7              ;	Modifica: A,BC y DE.
  11+ 94D7
  12+ 94D7 7D           Genera_coordenadas ld a,l
  13+ 94D8 E6 1F        	and $1f
  14+ 94DA 32 B9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94DD
  16+ 94DD 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94DE FE 40        	cp $40
  18+ 94E0 38 1C        	jr c,4F
  19+ 94E2
  20+ 94E2 CD B9 94     	call calcula_tercio
  21+ 94E5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94E6
  23+ 94E6 1E 00        	ld e,0
  24+ 94E8 7D           	ld a,l
  25+ 94E9 E6 E0        	and $e0
  26+ 94EB 28 01        	jr z,1F
  27+ 94ED 04           	inc b
  28+ 94EE
  29+ 94EE 04           1 inc b
  30+ 94EF 05           	dec b
  31+ 94F0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F2              ;														; _ , salimos.
  33+ 94F2 1C           3 inc e
  34+ 94F3 D6 20        	sub 32
  35+ 94F5 20 FB        	jr nz,3B
  36+ 94F7 10 F5        	djnz 1B
  37+ 94F9
  38+ 94F9 7B           2 ld a,e
  39+ 94FA 32 BA 8B     	ld (Coordenada_y),a
  40+ 94FD C9           	ret
  41+ 94FE
  42+ 94FE AF           4 xor a
  43+ 94FF 32 BA 8B     	ld (Coordenada_y),a
  44+ 9502 C9           	ret
  45+ 9503
# file closed: Genera_coordenadas.asm
2048  9503              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9503              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9503              ;
   3+ 9503              ;	20/09/24
   4+ 9503              ;
   5+ 9503              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9503              ;   DE contiene Puntero_objeto.
   7+ 9503              ;   IX contiene el Puntero de impresión.
   8+ 9503
   9+ 9503              Genera_datos_de_impresion
  10+ 9503
  11+ 9503 ED 73 05 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9507
  13+ 9507 31 BF 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 950A DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 950C
  16+ 950C 2A 27 8C         ld hl,(Scanlines_album_SP)
  17+ 950F
  18+ 950F 3E 05            ld a,5
  19+ 9511 85               add l
  20+ 9512 6F               ld l,a
  21+ 9513
  22+ 9513 F9               ld sp,hl
  23+ 9514 22 27 8C         ld (Scanlines_album_SP),hl
  24+ 9517
  25+ 9517 21 00 00         ld hl,0
  26+ 951A
  27+ 951A DD E5            push ix
  28+ 951C 3B               dec sp
  29+ 951D ED 7A            adc hl,sp
  30+ 951F D5               push de
  31+ 9520
  32+ 9520              ; Recuperamos SP.
  33+ 9520
  34+ 9520 ED 7B 05 8C      ld sp,(Stack)
  35+ 9524
  36+ 9524 E5               push hl
  37+ 9525 F1               pop af
  38+ 9526 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9527
  40+ 9527              ; Tenemos el encabezado listo.
  41+ 9527              ; Preparamos registros para generar los scanlines.
  42+ 9527
  43+ 9527 DD E5            push ix
  44+ 9529 E1               pop hl                                          ; 1er scanline en HL.
  45+ 952A
  46+ 952A ED 5B 27 8C      ld de,(Scanlines_album_SP)
  47+ 952E
  48+ 952E              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 952E              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 952E
  51+ 952E 7C               ld a,h
  52+ 952F FE 50            cp $50
  53+ 9531 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9533
  55+ 9533 20 05            jr nz,2F
  56+ 9535
  57+ 9535 7D               ld a,l
  58+ 9536 FE E0            cp $e0
  59+ 9538 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 953A
  61+ 953A 7D           2 ld a,l
  62+ 953B FE C0            cp $c0
  63+ 953D D2 D3 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9540
  65+ 9540              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9540
  67+ 9540 CD D1 99         call NextScan
  68+ 9543 EB               ex de,hl
  69+ 9544
  70+ 9544 73               ld (hl),e
  71+ 9545 23               inc hl
  72+ 9546 72               ld (hl),d
  73+ 9547 23               inc hl
  74+ 9548
  75+ 9548 EB               ex de,hl
  76+ 9549
  77+ 9549 CD D1 99         call NextScan
  78+ 954C EB               ex de,hl
  79+ 954D
  80+ 954D 73               ld (hl),e
  81+ 954E 23               inc hl
  82+ 954F 72               ld (hl),d
  83+ 9550 23               inc hl
  84+ 9551
  85+ 9551 EB               ex de,hl
  86+ 9552
  87+ 9552 CD D1 99         call NextScan
  88+ 9555 EB               ex de,hl
  89+ 9556
  90+ 9556 73               ld (hl),e
  91+ 9557 23               inc hl
  92+ 9558 72               ld (hl),d
  93+ 9559 23               inc hl
  94+ 955A
  95+ 955A EB               ex de,hl
  96+ 955B
  97+ 955B CD D1 99         call NextScan
  98+ 955E EB               ex de,hl
  99+ 955F
 100+ 955F 73               ld (hl),e
 101+ 9560 23               inc hl
 102+ 9561 72               ld (hl),d
 103+ 9562 23               inc hl
 104+ 9563
 105+ 9563 EB               ex de,hl
 106+ 9564
 107+ 9564 CD D1 99         call NextScan
 108+ 9567 EB               ex de,hl
 109+ 9568
 110+ 9568 73               ld (hl),e
 111+ 9569 23               inc hl
 112+ 956A 72               ld (hl),d
 113+ 956B 23               inc hl
 114+ 956C
 115+ 956C EB               ex de,hl
 116+ 956D
 117+ 956D CD D1 99         call NextScan
 118+ 9570 EB               ex de,hl
 119+ 9571
 120+ 9571 73               ld (hl),e
 121+ 9572 23               inc hl
 122+ 9573 72               ld (hl),d
 123+ 9574 23               inc hl
 124+ 9575
 125+ 9575 EB               ex de,hl
 126+ 9576
 127+ 9576 CD D1 99         call NextScan
 128+ 9579 EB               ex de,hl
 129+ 957A
 130+ 957A 73               ld (hl),e
 131+ 957B 23               inc hl
 132+ 957C 72               ld (hl),d
 133+ 957D 23               inc hl
 134+ 957E
 135+ 957E EB               ex de,hl
 136+ 957F
 137+ 957F CD D1 99         call NextScan
 138+ 9582 EB               ex de,hl
 139+ 9583
 140+ 9583 73               ld (hl),e
 141+ 9584 23               inc hl
 142+ 9585 72               ld (hl),d
 143+ 9586 23               inc hl
 144+ 9587
 145+ 9587 EB               ex de,hl
 146+ 9588
 147+ 9588 CD D1 99         call NextScan
 148+ 958B EB               ex de,hl
 149+ 958C
 150+ 958C 73               ld (hl),e
 151+ 958D 23               inc hl
 152+ 958E 72               ld (hl),d
 153+ 958F 23               inc hl
 154+ 9590
 155+ 9590 EB               ex de,hl
 156+ 9591
 157+ 9591 CD D1 99         call NextScan
 158+ 9594 EB               ex de,hl
 159+ 9595
 160+ 9595 73               ld (hl),e
 161+ 9596 23               inc hl
 162+ 9597 72               ld (hl),d
 163+ 9598 23               inc hl
 164+ 9599
 165+ 9599 EB               ex de,hl
 166+ 959A
 167+ 959A CD D1 99         call NextScan
 168+ 959D EB               ex de,hl
 169+ 959E
 170+ 959E 73               ld (hl),e
 171+ 959F 23               inc hl
 172+ 95A0 72               ld (hl),d
 173+ 95A1 23               inc hl
 174+ 95A2
 175+ 95A2 EB               ex de,hl
 176+ 95A3
 177+ 95A3 CD D1 99         call NextScan
 178+ 95A6 EB               ex de,hl
 179+ 95A7
 180+ 95A7 73               ld (hl),e
 181+ 95A8 23               inc hl
 182+ 95A9 72               ld (hl),d
 183+ 95AA 23               inc hl
 184+ 95AB
 185+ 95AB EB               ex de,hl
 186+ 95AC
 187+ 95AC CD D1 99         call NextScan
 188+ 95AF EB               ex de,hl
 189+ 95B0
 190+ 95B0 73               ld (hl),e
 191+ 95B1 23               inc hl
 192+ 95B2 72               ld (hl),d
 193+ 95B3 23               inc hl
 194+ 95B4
 195+ 95B4 EB               ex de,hl
 196+ 95B5
 197+ 95B5 CD D1 99         call NextScan
 198+ 95B8 EB               ex de,hl
 199+ 95B9
 200+ 95B9 73               ld (hl),e
 201+ 95BA 23               inc hl
 202+ 95BB 72               ld (hl),d
 203+ 95BC 23               inc hl
 204+ 95BD
 205+ 95BD EB               ex de,hl
 206+ 95BE
 207+ 95BE CD D1 99         call NextScan
 208+ 95C1 EB               ex de,hl
 209+ 95C2
 210+ 95C2              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C2              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C2              ;   _ generar sus scanlines.
 213+ 95C2
 214+ 95C2              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C2
 216+ 95C2 73               ld (hl),e
 217+ 95C3 23               inc hl
 218+ 95C4 72               ld (hl),d
 219+ 95C5 23               inc hl
 220+ 95C6
 221+ 95C6              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95C6
 223+ 95C6 22 27 8C         ld (Scanlines_album_SP),hl
 224+ 95C9
 225+ 95C9 EB               ex de,hl
 226+ 95CA
 227+ 95CA              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95CA
 229+ 95CA              ;    call NextScan
 230+ 95CA              ;    call NextScan
 231+ 95CA
 232+ 95CA 22 32 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95CD
 234+ 95CD              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95CD
 236+ 95CD 08               ex af,af
 237+ 95CE
 238+ 95CE F5               push af
 239+ 95CF E1               pop hl
 240+ 95D0
 241+ 95D0 36 10            ld (hl),16
 242+ 95D2
 243+ 95D2 C9               ret
 244+ 95D3
 245+ 95D3              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D3
 247+ 95D3              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D3
 249+ 95D3 3E 57            ld a,$57
 250+ 95D5 94               sub h
 251+ 95D6 47               ld b,a
 252+ 95D7
 253+ 95D7 3E DF            ld a,$df
 254+ 95D9 BD               cp l
 255+ 95DA 38 04            jr c,1F
 256+ 95DC
 257+ 95DC 3E 08            ld a,8
 258+ 95DE 80               add b
 259+ 95DF 47               ld b,a
 260+ 95E0
 261+ 95E0              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E0              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E0
 264+ 95E0 48           1 ld c,b
 265+ 95E1 0C               inc c
 266+ 95E2
 267+ 95E2 04               inc b
 268+ 95E3 05               dec b
 269+ 95E4 20 02            jr nz,3F
 270+ 95E6
 271+ 95E6 18 0B            jr 6F
 272+ 95E8
 273+ 95E8 CD D1 99     3 call NextScan
 274+ 95EB EB               ex de,hl
 275+ 95EC
 276+ 95EC 73               ld (hl),e
 277+ 95ED 23               inc hl
 278+ 95EE 72               ld (hl),d
 279+ 95EF 23               inc hl
 280+ 95F0
 281+ 95F0 EB               ex de,hl
 282+ 95F1 10 F5            djnz 3B
 283+ 95F3
 284+ 95F3 ED 53 27 8C  6 ld (Scanlines_album_SP),de
 285+ 95F7
 286+ 95F7 08           5 ex af,af
 287+ 95F8 F5               push af
 288+ 95F9 E1               pop hl
 289+ 95FA
 290+ 95FA 71               ld (hl),c
 291+ 95FB
 292+ 95FB C9               ret
 293+ 95FC
# file closed: Genera_datos_de_impresion.asm
2049  95FC              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95FC              ; -----------------------------------------------------------------------------
   2+ 95FC              ;
   3+ 95FC              ;   11/03/24
   4+ 95FC              ;
   5+ 95FC
   6+ 95FC              Pinta_Sprites
   7+ 95FC
   8+ 95FC              ;    ld hl,(Scanlines_album_SP)
   9+ 95FC              ;    call Extrae_address
  10+ 95FC
  11+ 95FC              ;    inc h
  12+ 95FC              ;    dec h
  13+ 95FC              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95FC
  15+ 95FC ED 73 05 8C      ld (Stack),sp
  16+ 9600
  17+ 9600 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9601              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9601 2C               inc l
  20+ 9602 2C               inc l
  21+ 9603
  22+ 9603 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9604
  24+ 9604 2C               inc l
  25+ 9605 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9606
  27+ 9606              ;   Seleccionamos rutina de impresión:
  28+ 9606
  29+ 9606 3E 10            ld a,16
  30+ 9608 B8               cp b
  31+ 9609 C2 05 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 960C
  33+ 960C              ;   Rutinas:
  34+ 960C
  35+ 960C              Pinta_rapido    ;   1520 t/states.
  36+ 960C
  37+ 960C E1               pop hl
  38+ 960D
  39+ 960D 1A               ld a,(de)
  40+ 960E AE               xor (hl)
  41+ 960F 77               ld (hl),a
  42+ 9610 2C               inc l
  43+ 9611 1C               inc e
  44+ 9612 1A               ld a,(de)
  45+ 9613 AE               xor (hl)
  46+ 9614 77               ld (hl),a
  47+ 9615 2C               inc l
  48+ 9616 1C               inc e
  49+ 9617 1A               ld a,(de)
  50+ 9618 AE               xor (hl)
  51+ 9619 77               ld (hl),a
  52+ 961A 13               inc de
  53+ 961B
  54+ 961B E1               pop hl
  55+ 961C
  56+ 961C 1A               ld a,(de)
  57+ 961D AE               xor (hl)
  58+ 961E 77               ld (hl),a
  59+ 961F 2C               inc l
  60+ 9620 1C               inc e
  61+ 9621 1A               ld a,(de)
  62+ 9622 AE               xor (hl)
  63+ 9623 77               ld (hl),a
  64+ 9624 2C               inc l
  65+ 9625 1C               inc e
  66+ 9626 1A               ld a,(de)
  67+ 9627 AE               xor (hl)
  68+ 9628 77               ld (hl),a
  69+ 9629 13               inc de
  70+ 962A
  71+ 962A E1               pop hl
  72+ 962B
  73+ 962B 1A               ld a,(de)
  74+ 962C AE               xor (hl)
  75+ 962D 77               ld (hl),a
  76+ 962E 2C               inc l
  77+ 962F 1C               inc e
  78+ 9630 1A               ld a,(de)
  79+ 9631 AE               xor (hl)
  80+ 9632 77               ld (hl),a
  81+ 9633 2C               inc l
  82+ 9634 1C               inc e
  83+ 9635 1A               ld a,(de)
  84+ 9636 AE               xor (hl)
  85+ 9637 77               ld (hl),a
  86+ 9638 13               inc de
  87+ 9639
  88+ 9639 E1               pop hl
  89+ 963A
  90+ 963A 1A               ld a,(de)
  91+ 963B AE               xor (hl)
  92+ 963C 77               ld (hl),a
  93+ 963D 2C               inc l
  94+ 963E 1C               inc e
  95+ 963F 1A               ld a,(de)
  96+ 9640 AE               xor (hl)
  97+ 9641 77               ld (hl),a
  98+ 9642 2C               inc l
  99+ 9643 1C               inc e
 100+ 9644 1A               ld a,(de)
 101+ 9645 AE               xor (hl)
 102+ 9646 77               ld (hl),a
 103+ 9647 13               inc de
 104+ 9648
 105+ 9648 E1               pop hl
 106+ 9649
 107+ 9649 1A               ld a,(de)
 108+ 964A AE               xor (hl)
 109+ 964B 77               ld (hl),a
 110+ 964C 2C               inc l
 111+ 964D 1C               inc e
 112+ 964E 1A               ld a,(de)
 113+ 964F AE               xor (hl)
 114+ 9650 77               ld (hl),a
 115+ 9651 2C               inc l
 116+ 9652 1C               inc e
 117+ 9653 1A               ld a,(de)
 118+ 9654 AE               xor (hl)
 119+ 9655 77               ld (hl),a
 120+ 9656 13               inc de
 121+ 9657
 122+ 9657 E1               pop hl
 123+ 9658
 124+ 9658 1A               ld a,(de)
 125+ 9659 AE               xor (hl)
 126+ 965A 77               ld (hl),a
 127+ 965B 2C               inc l
 128+ 965C 1C               inc e
 129+ 965D 1A               ld a,(de)
 130+ 965E AE               xor (hl)
 131+ 965F 77               ld (hl),a
 132+ 9660 2C               inc l
 133+ 9661 1C               inc e
 134+ 9662 1A               ld a,(de)
 135+ 9663 AE               xor (hl)
 136+ 9664 77               ld (hl),a
 137+ 9665 13               inc de
 138+ 9666
 139+ 9666 E1               pop hl
 140+ 9667
 141+ 9667 1A               ld a,(de)
 142+ 9668 AE               xor (hl)
 143+ 9669 77               ld (hl),a
 144+ 966A 2C               inc l
 145+ 966B 1C               inc e
 146+ 966C 1A               ld a,(de)
 147+ 966D AE               xor (hl)
 148+ 966E 77               ld (hl),a
 149+ 966F 2C               inc l
 150+ 9670 1C               inc e
 151+ 9671 1A               ld a,(de)
 152+ 9672 AE               xor (hl)
 153+ 9673 77               ld (hl),a
 154+ 9674 13               inc de
 155+ 9675
 156+ 9675 E1               pop hl
 157+ 9676
 158+ 9676 1A               ld a,(de)
 159+ 9677 AE               xor (hl)
 160+ 9678 77               ld (hl),a
 161+ 9679 2C               inc l
 162+ 967A 1C               inc e
 163+ 967B 1A               ld a,(de)
 164+ 967C AE               xor (hl)
 165+ 967D 77               ld (hl),a
 166+ 967E 2C               inc l
 167+ 967F 1C               inc e
 168+ 9680 1A               ld a,(de)
 169+ 9681 AE               xor (hl)
 170+ 9682 77               ld (hl),a
 171+ 9683 13               inc de
 172+ 9684
 173+ 9684 E1               pop hl
 174+ 9685
 175+ 9685 1A               ld a,(de)
 176+ 9686 AE               xor (hl)
 177+ 9687 77               ld (hl),a
 178+ 9688 2C               inc l
 179+ 9689 1C               inc e
 180+ 968A 1A               ld a,(de)
 181+ 968B AE               xor (hl)
 182+ 968C 77               ld (hl),a
 183+ 968D 2C               inc l
 184+ 968E 1C               inc e
 185+ 968F 1A               ld a,(de)
 186+ 9690 AE               xor (hl)
 187+ 9691 77               ld (hl),a
 188+ 9692 13               inc de
 189+ 9693
 190+ 9693 E1               pop hl
 191+ 9694
 192+ 9694 1A               ld a,(de)
 193+ 9695 AE               xor (hl)
 194+ 9696 77               ld (hl),a
 195+ 9697 2C               inc l
 196+ 9698 1C               inc e
 197+ 9699 1A               ld a,(de)
 198+ 969A AE               xor (hl)
 199+ 969B 77               ld (hl),a
 200+ 969C 2C               inc l
 201+ 969D 1C               inc e
 202+ 969E 1A               ld a,(de)
 203+ 969F AE               xor (hl)
 204+ 96A0 77               ld (hl),a
 205+ 96A1 13               inc de
 206+ 96A2
 207+ 96A2 E1               pop hl
 208+ 96A3
 209+ 96A3 1A               ld a,(de)
 210+ 96A4 AE               xor (hl)
 211+ 96A5 77               ld (hl),a
 212+ 96A6 2C               inc l
 213+ 96A7 1C               inc e
 214+ 96A8 1A               ld a,(de)
 215+ 96A9 AE               xor (hl)
 216+ 96AA 77               ld (hl),a
 217+ 96AB 2C               inc l
 218+ 96AC 1C               inc e
 219+ 96AD 1A               ld a,(de)
 220+ 96AE AE               xor (hl)
 221+ 96AF 77               ld (hl),a
 222+ 96B0 13               inc de
 223+ 96B1
 224+ 96B1 E1               pop hl
 225+ 96B2
 226+ 96B2 1A               ld a,(de)
 227+ 96B3 AE               xor (hl)
 228+ 96B4 77               ld (hl),a
 229+ 96B5 2C               inc l
 230+ 96B6 1C               inc e
 231+ 96B7 1A               ld a,(de)
 232+ 96B8 AE               xor (hl)
 233+ 96B9 77               ld (hl),a
 234+ 96BA 2C               inc l
 235+ 96BB 1C               inc e
 236+ 96BC 1A               ld a,(de)
 237+ 96BD AE               xor (hl)
 238+ 96BE 77               ld (hl),a
 239+ 96BF 13               inc de
 240+ 96C0
 241+ 96C0 E1               pop hl
 242+ 96C1
 243+ 96C1 1A               ld a,(de)
 244+ 96C2 AE               xor (hl)
 245+ 96C3 77               ld (hl),a
 246+ 96C4 2C               inc l
 247+ 96C5 1C               inc e
 248+ 96C6 1A               ld a,(de)
 249+ 96C7 AE               xor (hl)
 250+ 96C8 77               ld (hl),a
 251+ 96C9 2C               inc l
 252+ 96CA 1C               inc e
 253+ 96CB 1A               ld a,(de)
 254+ 96CC AE               xor (hl)
 255+ 96CD 77               ld (hl),a
 256+ 96CE 13               inc de
 257+ 96CF
 258+ 96CF E1               pop hl
 259+ 96D0
 260+ 96D0 1A               ld a,(de)
 261+ 96D1 AE               xor (hl)
 262+ 96D2 77               ld (hl),a
 263+ 96D3 2C               inc l
 264+ 96D4 1C               inc e
 265+ 96D5 1A               ld a,(de)
 266+ 96D6 AE               xor (hl)
 267+ 96D7 77               ld (hl),a
 268+ 96D8 2C               inc l
 269+ 96D9 1C               inc e
 270+ 96DA 1A               ld a,(de)
 271+ 96DB AE               xor (hl)
 272+ 96DC 77               ld (hl),a
 273+ 96DD 13               inc de
 274+ 96DE
 275+ 96DE E1               pop hl
 276+ 96DF
 277+ 96DF 1A               ld a,(de)
 278+ 96E0 AE               xor (hl)
 279+ 96E1 77               ld (hl),a
 280+ 96E2 2C               inc l
 281+ 96E3 1C               inc e
 282+ 96E4 1A               ld a,(de)
 283+ 96E5 AE               xor (hl)
 284+ 96E6 77               ld (hl),a
 285+ 96E7 2C               inc l
 286+ 96E8 1C               inc e
 287+ 96E9 1A               ld a,(de)
 288+ 96EA AE               xor (hl)
 289+ 96EB 77               ld (hl),a
 290+ 96EC 13               inc de
 291+ 96ED
 292+ 96ED E1               pop hl
 293+ 96EE
 294+ 96EE 1A               ld a,(de)
 295+ 96EF AE               xor (hl)
 296+ 96F0 77               ld (hl),a
 297+ 96F1 2C               inc l
 298+ 96F2 1C               inc e
 299+ 96F3 1A               ld a,(de)
 300+ 96F4 AE               xor (hl)
 301+ 96F5 77               ld (hl),a
 302+ 96F6 2C               inc l
 303+ 96F7 1C               inc e
 304+ 96F8 1A               ld a,(de)
 305+ 96F9 AE               xor (hl)
 306+ 96FA 77               ld (hl),a
 307+ 96FB 13               inc de
 308+ 96FC
 309+ 96FC ED 73 27 8C      ld (Scanlines_album_SP),sp
 310+ 9700 ED 7B 05 8C      ld sp,(Stack)
 311+ 9704 C9               ret
 312+ 9705
 313+ 9705              Pinta_lento
 314+ 9705
 315+ 9705 E1           1 pop hl
 316+ 9706
 317+ 9706 1A               ld a,(de)
 318+ 9707 AE               xor (hl)
 319+ 9708 77               ld (hl),a
 320+ 9709 2C               inc l
 321+ 970A 1C               inc e
 322+ 970B 1A               ld a,(de)
 323+ 970C AE               xor (hl)
 324+ 970D 77               ld (hl),a
 325+ 970E 2C               inc l
 326+ 970F 1C               inc e
 327+ 9710 1A               ld a,(de)
 328+ 9711 AE               xor (hl)
 329+ 9712 77               ld (hl),a
 330+ 9713 13               inc de
 331+ 9714
 332+ 9714 10 EF            djnz 1B
 333+ 9716
 334+ 9716 ED 73 27 8C      ld (Scanlines_album_SP),sp
 335+ 971A ED 7B 05 8C      ld sp,(Stack)
 336+ 971E C9               ret
# file closed: Pinta_Sprites.asm
2050  971F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 971F              ; ******************************************************************************************************************************************************************************************
   2+ 971F              ;
   3+ 971F              ; 26/06/23
   4+ 971F              ;
   5+ 971F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 971F
   7+ 971F              Draw
   8+ 971F
   9+ 971F CD C5 99     	call Prepara_draw
  10+ 9722 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9723 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9724 28 05        	jr z,2F
  13+ 9726
  14+ 9726 3A D7 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9729 18 0C        	jr 1F
  16+ 972B
  17+ 972B 2A D5 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 972E 22 C8 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9731 CD BD 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9734              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9734
  22+ 9734 CD 64 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9737
  24+ 9737 3A C5 8B     1 ld a,(Ctrl_0)
  25+ 973A CB 6F        	bit 5,a
  26+ 973C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 973E
  28+ 973E CD 53 97     	call Comprueba_limite_horizontal
  29+ 9741 CD E3 97     	call Comprueba_limite_vertical
  30+ 9744
  31+ 9744              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9744              ; -----------------------
  33+ 9744              ; -----------------------
  34+ 9744              ; -----------------------
  35+ 9744
  36+ 9744 CD 39 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9747 CD 70 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 974A
  39+ 974A 3A C5 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 974D CB AF        	res 5,a											; _a ser de utilidad.
  41+ 974F 32 C5 8B     	ld (Ctrl_0),a
  42+ 9752
  43+ 9752 C9           	ret
  44+ 9753
  45+ 9753              ; *******************************************************************************************************************************************************************************************
  46+ 9753              ;	21/01/23
  47+ 9753              ;
  48+ 9753              ; 	Comprueba_limite_horizontal.
  49+ 9753              ;
  50+ 9753              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9753              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9753              ;
  53+ 9753              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9753              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9753              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9753              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9753
  58+ 9753
  59+ 9753
  60+ 9753 3A C5 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9756 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9758 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 975A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 975C 32 C5 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 975F 18 09            jr 6F
  66+ 9761 CB 5F        1 bit 3,a
  67+ 9763 28 0A            jr z,2F
  68+ 9765 E6 F7            and $f7
  69+ 9767 32 C5 8B         ld (Ctrl_0),a
  70+ 976A CD BD 98     6 call Inicializacion
  71+ 976D 18 5B            jr 5F
  72+ 976F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9770
  74+ 9770              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9770              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9770
  77+ 9770 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9771 2A D9 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9774 CD B9 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9777 67           	ld h,a
  81+ 9778 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9779 CD B9 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 977C 67           	ld h,a
  84+ 977D A7           	and a
  85+ 977E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9780 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9781 3A D7 8B     	ld a,(Cuad_objeto)
  88+ 9784 FE 02        	cp 2
  89+ 9786 38 1E        	jr c,3F
  90+ 9788 28 1C        	jr z,3F
  91+ 978A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 978B 28 23            jr z,7F
  93+ 978D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 978F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9791 E1           	pop hl
  96+ 9792
  97+ 9792              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9792              ; _para indicar con E="2" en caso necesario.
  99+ 9792
 100+ 9792 E5               push hl
 101+ 9793 C5               push bc
 102+ 9794 CD B9 94     	call calcula_tercio
 103+ 9797 FE 01        	cp 1
 104+ 9799 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 979B CD CB 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 979E 28 26            jr z,9F
 107+ 97A0 38 24            jr c,9F
 108+ 97A2 1E 00        11 ld e,0
 109+ 97A4 18 22            jr 8F
 110+ 97A6 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97A7 28 07        	jr z, 7F
 112+ 97A9 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97AB 1E 00         	ld e,0
 114+ 97AD E1           	pop hl
 115+ 97AE 18 04        	jr 4F
 116+ 97B0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B2 18 15            jr 10F
 118+ 97B4
 119+ 97B4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B4              ; _para indicar con E="2" en caso necesario.
 121+ 97B4
 122+ 97B4 E5           4 push hl
 123+ 97B5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97B6 CD B9 94     	call calcula_tercio
 125+ 97B9 FE 01        	cp 1
 126+ 97BB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97BD CD CB 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C0 28 04            jr z,9F
 129+ 97C2 30 02            jr nc,9F
 130+ 97C4 18 02        	jr 8F
 131+ 97C6 1E 02        9 ld e,2
 132+ 97C8 C1           8 pop bc
 133+ 97C9 E1           10 pop hl
 134+ 97CA C9           5 ret
 135+ 97CB
 136+ 97CB              ; --------------------
 137+ 97CB              ;
 138+ 97CB              ; 25/08/22
 139+ 97CB
 140+ 97CB CD B9 94     Comprueba_centro call calcula_tercio
 141+ 97CE 67               ld h,a
 142+ 97CF 08           	ex af,af
 143+ 97D0 FE 02        	cp 2
 144+ 97D2 38 07        	jr c,1F
 145+ 97D4 28 05        	jr z,1F
 146+ 97D6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97D9 18 03        	jr 2F
 148+ 97DB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97DE 08           2 ex af,af
 150+ 97DF A7               and a
 151+ 97E0 ED 42            sbc hl,bc
 152+ 97E2 C9               ret
 153+ 97E3
 154+ 97E3              ; *********************************************************************************************************************************************************************************************
 155+ 97E3              ;
 156+ 97E3              ;   16/8/22
 157+ 97E3              ;
 158+ 97E3              ;	Comprueba_limite_vertical
 159+ 97E3              ;
 160+ 97E3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E3              ;
 163+ 97E3
 164+ 97E3 2A C8 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97E6 7D           	ld a,l
 166+ 97E7 E6 1F        	and $1F
 167+ 97E9 57           	ld d,a
 168+ 97EA 3A DB 8B     	ld a,(Limite_vertical)
 169+ 97ED BA           	cp d 											; Límite - Posición.
 170+ 97EE 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97EF 3A D7 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F2 CB 47        	bit 0,a
 173+ 97F4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97F6
 175+ 97F6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97F6
 177+ 97F6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97F7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97F9
 180+ 97F9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97F9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97F9
 183+ 97F9 3A B9 8B         ld a,(Coordenada_X)
 184+ 97FC 16 0F            ld d,Centro_izquierda
 185+ 97FE A7               and a
 186+ 97FF 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9800 28 1E            jr z,3F
 188+ 9802 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9804              ;                                                    ; _salimos sin modificar nada.
 190+ 9804 18 0E            jr 2F
 191+ 9806 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9807 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9809
 194+ 9809              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9809              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9809
 197+ 9809 3A B9 8B         ld a,(Coordenada_X)
 198+ 980C 16 10            ld d,Centro_derecha
 199+ 980E A7               and a
 200+ 980F 92               sub d
 201+ 9810 28 0E            jr z,3F
 202+ 9812 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9814              ;                                                    ; _salimos sin modificar nada.
 204+ 9814 CB 43        2 bit 0,e
 205+ 9816 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9818 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9819 CD AD 98         call Modificaccionne
 208+ 981C C1           	pop bc
 209+ 981D CD BD 98         call Inicializacion
 210+ 9820 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9821
 212+ 9821              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9821
 214+ 9821 C5           4 push bc
 215+ 9822 01 C7 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9825 0A           	ld a,(bc)
 217+ 9826 3D           	dec a
 218+ 9827 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9828 7D           	ld a,l
 220+ 9829 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 982A CB 47        	bit 0,a
 222+ 982C 28 03        	jr z,5F
 223+ 982E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 982F 18 2E        	jr 7F
 225+ 9831
 226+ 9831              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9831
 228+ 9831 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9832 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9833 3A C5 8B     	ld a,(Ctrl_0)
 231+ 9836 CB 4F        	bit 1,a
 232+ 9838 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 983A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 983B
 235+ 983B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 983B
 237+ 983B 1C               inc e
 238+ 983C 1D               dec e
 239+ 983D 20 07            jr nz,12F
 240+ 983F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9840 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9841 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9844 18 44        13 jr 9F
 244+ 9846 CB 43        12 bit 0,e
 245+ 9848 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 984A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 984A C1           	pop bc
 248+ 984B 18 D3        	jr 3B
 249+ 984D 80           14 add b
 250+ 984E 6F               ld l,a
 251+ 984F 22 C8 8B     	ld (Posicion_actual),hl
 252+ 9852 CD AD 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9855 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9857 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9859 32 C5 8B         ld (Ctrl_0),a
 256+ 985C F1           	pop af
 257+ 985D 18 2B        	jr 9F
 258+ 985F
 259+ 985F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 985F
 261+ 985F F5           7 push af
 262+ 9860 3A C5 8B     	ld a,(Ctrl_0)
 263+ 9863 CB 47        	bit 0,a
 264+ 9865 20 1D        	jr nz,8F
 265+ 9867 F1           	pop af
 266+ 9868
 267+ 9868              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9868
 269+ 9868 1C           	inc e
 270+ 9869 1D               dec e
 271+ 986A 20 07            jr nz,10F
 272+ 986C 90           	sub b
 273+ 986D 6F               ld l,a
 274+ 986E 22 C8 8B     	ld (Posicion_actual),hl
 275+ 9871 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9873              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9873 CB 43        10 bit 0,e
 278+ 9875 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9877              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9877 C1           	pop bc
 281+ 9878 18 A6        	jr 3B
 282+ 987A 90           16 sub b
 283+ 987B 6F               ld l,a
 284+ 987C 22 C8 8B     	ld (Posicion_actual),hl
 285+ 987F CD AD 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9882 18 06            jr 9F
 287+ 9884 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9886 32 C5 8B         ld (Ctrl_0),a
 289+ 9889 F1           	pop af
 290+ 988A C1           9 pop bc
 291+ 988B 1E 00        	ld e,0
 292+ 988D CD BD 98         call Inicializacion
 293+ 9890 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9891 08           	ex af,af
 295+ 9892 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9893 18 8B            jr 3B
 297+ 9895
 298+ 9895              ; --------------------
 299+ 9895
 300+ 9895 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9897 CD E0 99     1 call PreviousScan
 302+ 989A 10 FB            djnz 1B
 303+ 989C 22 C8 8B     	ld (Posicion_actual),hl
 304+ 989F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A0 C9           	ret
 306+ 98A1
 307+ 98A1              ; --------------------
 308+ 98A1
 309+ 98A1 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A3 CD D1 99     1 call NextScan
 311+ 98A6 10 FB            djnz 1B
 312+ 98A8 22 C8 8B     	ld (Posicion_actual),hl
 313+ 98AB AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98AC C9           	ret
 315+ 98AD
 316+ 98AD              ; --------------------
 317+ 98AD              ;
 318+ 98AD              ;	22/01/23
 319+ 98AD              ;
 320+ 98AD              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98AD              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98AD              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98AD
 324+ 98AD
 325+ 98AD              Modificaccionne
 326+ 98AD
 327+ 98AD 3A D7 8B     	ld a,(Cuad_objeto)
 328+ 98B0 FE 02        	cp 2
 329+ 98B2 CC 95 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B5 DC 95 98         call c,Modifica_Pos_actual
 331+ 98B8 C8           	ret z
 332+ 98B9 CD A1 98         call Modifica_Pos_actual2
 333+ 98BC C9               ret
 334+ 98BD
 335+ 98BD              ; *************************************************************************************************************************************************************************************************
 336+ 98BD              ;
 337+ 98BD              ;	13/8/22
 338+ 98BD              ;
 339+ 98BD              ;	Inicializacion
 340+ 98BD              ;
 341+ 98BD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98BD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98BD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98BD              ;
 345+ 98BD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98BD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98BD              ;	_ desaparece/aparece.
 348+ 98BD
 349+ 98BD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98BD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98BD              ;
 352+ 98BD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98BD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98BD              ; 		   [E] ="0"
 355+ 98BD
 356+ 98BD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98BD
 358+ 98BD CD B9 94     Inicializacion call calcula_tercio
 359+ 98C0 28 36        	jr z,primit
 360+ 98C2 E6 02        	and 2
 361+ 98C4 20 07        	jr nz,segmit
 362+ 98C6 7D           	ld a,l
 363+ 98C7 FE 7F        	cp $7f
 364+ 98C9 38 2D        	jr c,primit
 365+ 98CB 28 2B        	jr z,primit
 366+ 98CD CD 33 99     segmit call column
 367+ 98D0 38 13        	jr c,tercuad
 368+ 98D2 3E 04        cuarcuad ld a,4
 369+ 98D4 32 D7 8B     	ld (Cuad_objeto),a
 370+ 98D7 21 20 48     	ld hl,$4820
 371+ 98DA 22 D9 8B     	ld (Limite_horizontal),hl
 372+ 98DD 21 DB 8B     	ld hl,Limite_vertical
 373+ 98E0 36 0D        	ld (hl),$0d
 374+ 98E2 08           	ex af,af
 375+ 98E3 18 3C        	jr 1F
 376+ 98E5              tercuad
 377+ 98E5 3E 03        	ld a,3
 378+ 98E7 32 D7 8B     	ld (Cuad_objeto),a
 379+ 98EA 21 20 48     	ld hl,$4820
 380+ 98ED 22 D9 8B     	ld (Limite_horizontal),hl
 381+ 98F0 21 DB 8B     	ld hl,Limite_vertical
 382+ 98F3 36 12        	ld (hl),$12
 383+ 98F5 08           	ex af,af
 384+ 98F6 18 29        	jr 1F
 385+ 98F8 CD 33 99     primit call column
 386+ 98FB 38 13        	jr c, primcuad
 387+ 98FD              segcuad
 388+ 98FD 3E 02        	ld a,2
 389+ 98FF 32 D7 8B     	ld (Cuad_objeto),a
 390+ 9902 21 C0 4F     	ld hl,$4fc0
 391+ 9905 22 D9 8B     	ld (Limite_horizontal),hl
 392+ 9908 21 DB 8B     	ld hl,Limite_vertical
 393+ 990B 36 0D        	ld (hl),$0d
 394+ 990D 08           	ex af,af
 395+ 990E 18 11        	jr 1F
 396+ 9910              primcuad
 397+ 9910 3E 01        	ld a,1
 398+ 9912 32 D7 8B     	ld (Cuad_objeto),a
 399+ 9915 21 C0 4F     	ld hl,$4fc0
 400+ 9918 22 D9 8B     	ld (Limite_horizontal),hl
 401+ 991B 21 DB 8B     	ld hl,Limite_vertical
 402+ 991E 36 12        	ld (hl),$12
 403+ 9920 08           	ex af,af
 404+ 9921
 405+ 9921 C5           1 push bc
 406+ 9922 E5           	push hl
 407+ 9923 D5           	push de
 408+ 9924
 409+ 9924 2A C8 8B     	ld hl,(Posicion_actual)
 410+ 9927 CD D7 94     	call Genera_coordenadas
 411+ 992A
 412+ 992A D1           	pop de
 413+ 992B E1           	pop hl
 414+ 992C C1           	pop bc
 415+ 992D
 416+ 992D 21 C5 8B     	ld hl,Ctrl_0
 417+ 9930 CB EE        	set 5,(hl)
 418+ 9932 C9           	ret
 419+ 9933
 420+ 9933              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9933
 422+ 9933              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9933              ;
 424+ 9933              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9933
 426+ 9933 7D           column ld a,l
 427+ 9934 E6 1F        	and $1f
 428+ 9936 FE 10         	cp $10
 429+ 9938 C9            	ret
 430+ 9939
 431+ 9939              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9939              ;
 433+ 9939              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9939              ;
 435+ 9939              ; 14/12/22
 436+ 9939              ;
 437+ 9939              ;	Modifica: A y BC.
 438+ 9939
 439+ 9939 3A D7 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 993C E6 01        	and 1
 441+ 993E 28 17        	jr z,1F
 442+ 9940
 443+ 9940              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9940
 445+ 9940 3A B9 8B     	ld a,(Coordenada_X)
 446+ 9943 47           	ld b,a
 447+ 9944 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9945 79           	ld a,c
 449+ 9946 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9947 38 08        	jr c,2F
 451+ 9949 47           	ld b,a
 452+ 994A 79           	ld a,c
 453+ 994B 90           	sub b
 454+ 994C 32 D8 8B     	ld (Columnas),a
 455+ 994F 18 1B        	jr 4F
 456+ 9951 79           2 ld a,c
 457+ 9952 32 D8 8B     	ld (Columnas),a
 458+ 9955 18 15        	jr 4F
 459+ 9957
 460+ 9957              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9957
 462+ 9957 3A B9 8B     1 ld a,(Coordenada_X)
 463+ 995A 81           	add c
 464+ 995B 3D           	dec a
 465+ 995C D6 1F        	sub $1f
 466+ 995E 38 08        	jr c,3F
 467+ 9960 47           	ld b,a
 468+ 9961 79           	ld a,c
 469+ 9962 90           	sub b
 470+ 9963 32 D8 8B     	ld (Columnas),a
 471+ 9966 18 04        	jr 4F
 472+ 9968 79           3 ld a,c
 473+ 9969 32 D8 8B     	ld (Columnas),a
 474+ 996C D9           4 exx
 475+ 996D 4F           	ld c,a
 476+ 996E D9           	exx
 477+ 996F C9            ret
 478+ 9970
 479+ 9970              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9970              ;
 481+ 9970              ;   19/7/23
 482+ 9970              ;
 483+ 9970              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9970              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9970              ;
 486+ 9970              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9970              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9970              ;
 489+ 9970              ;	DESTRUYE: HL,B Y A.
 490+ 9970
 491+ 9970 3A D7 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9973 FE 02        	cp 2
 493+ 9975 38 18        	jr c,1F
 494+ 9977 28 16        	jr z,1F
 495+ 9979 E6 01        	and 1
 496+ 997B 28 0D        	jr z,3F
 497+ 997D
 498+ 997D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 997D
 500+ 997D CD B9 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9980
 502+ 9980 7D           9 ld a,l
 503+ 9981 E6 1F        	and $1f
 504+ 9983 28 2A        	jr z,7F
 505+ 9985 2B           	dec hl
 506+ 9986 10 F8        	djnz 9B
 507+ 9988 18 25        	jr 7F
 508+ 998A
 509+ 998A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 998A
 511+ 998A 2A C8 8B     3 ld hl,(Posicion_actual)
 512+ 998D 18 20        	jr 7F
 513+ 998F
 514+ 998F 28 14        1 jr z,2F
 515+ 9991
 516+ 9991              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9991
 518+ 9991 CD B9 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9994
 520+ 9994 7D           4 ld a,l
 521+ 9995 E6 1F        	and $1f
 522+ 9997 28 03        	jr z,6F
 523+ 9999 2B           	dec hl
 524+ 999A 10 F8        	djnz 4B
 525+ 999C 06 0F        6 ld b,15
 526+ 999E CD E0 99     5 call PreviousScan
 527+ 99A1 10 FB        	djnz 5B
 528+ 99A3 18 0A        	jr 7F
 529+ 99A5
 530+ 99A5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A5
 532+ 99A5 CD B9 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99A8 06 0F        	ld b,15
 534+ 99AA CD E0 99     8 call PreviousScan
 535+ 99AD 10 FB        	djnz 8B
 536+ 99AF
 537+ 99AF E5           7 push hl
 538+ 99B0 DD E1        	pop ix
 539+ 99B2
 540+ 99B2 2A CA 8B     	ld hl,(Puntero_objeto)
 541+ 99B5 E5           	push hl
 542+ 99B6 FD E1        	pop iy
 543+ 99B8
 544+ 99B8 C9           	ret
 545+ 99B9
 546+ 99B9              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99B9              ;
 548+ 99B9              ;	2/1/23
 549+ 99B9              ;
 550+ 99B9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99B9              ;
 552+ 99B9              ;	Tras esta rutina tenemos:
 553+ 99B9              ;
 554+ 99B9              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99B9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99B9              ;
 557+ 99B9              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99B9
 559+ 99B9 2A C8 8B     Operandos ld hl,(Posicion_actual)
 560+ 99BC 3A D8 8B     	ld a,(Columnas)
 561+ 99BF 3D           	dec a
 562+ 99C0 20 01        	jr nz,1F
 563+ 99C2 3C           	inc a
 564+ 99C3 47           1 ld b,a
 565+ 99C4 C9           	ret
 566+ 99C5
 567+ 99C5              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C5              ;
 569+ 99C5              ;	Prepara_draw
 570+ 99C5              ;
 571+ 99C5              ;	Es una rutina de carga.
 572+ 99C5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C5              ;
 574+ 99C5              ;	FUNCIONAMIENTO:
 575+ 99C5              ;
 576+ 99C5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C5              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C5              ;
 580+ 99C5              ;	DESTRUYE:
 581+ 99C5              ;
 582+ 99C5              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C5
 584+ 99C5 21 C6 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99C8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99C9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99CA 4E           	ld c,(hl)
 588+ 99CB 2A C8 8B     	ld hl,(Posicion_actual)
 589+ 99CE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D0 C9           	ret
 591+ 99D1
 592+ 99D1              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D1              ;
 594+ 99D1              ;	5/08/22
 595+ 99D1              ;
 596+ 99D1              ;   NextScan.
 597+ 99D1              ;
 598+ 99D1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D1              ;
 600+ 99D1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D1              ;
 602+ 99D1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D1              ;
 604+ 99D1              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D1              ;
 606+ 99D1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D1              ;
 608+ 99D1
 609+ 99D1 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D2 7C               ld a,h
 611+ 99D3 E6 07            and 7
 612+ 99D5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99D6
 614+ 99D6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99D7 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99D9 6F               ld l,a
 617+ 99DA D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99DB
 619+ 99DB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99DC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99DE 67               ld h,a
 622+ 99DF C9               ret
 623+ 99E0
 624+ 99E0              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E0              ;
 626+ 99E0              ;	5/08/22
 627+ 99E0              ;
 628+ 99E0              ;   PreviousScan.
 629+ 99E0              ;
 630+ 99E0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E0              ;
 632+ 99E0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E0              ;
 634+ 99E0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E0              ;
 636+ 99E0              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E0              ;
 638+ 99E0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E0              ;
 640+ 99E0
 641+ 99E0 7C           PreviousScan ld a,h
 642+ 99E1 25               dec h               ; Dec H.
 643+ 99E2 E6 07            and 7
 644+ 99E4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E5
 646+ 99E5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99E6 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99E8 6F               ld l,a
 649+ 99E9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99EA
 651+ 99EA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99EB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99ED 67               ld h,a
 654+ 99EE C9               ret
 655+ 99EF
 656+ 99EF
 657+ 99EF
 658+ 99EF
 659+ 99EF
 660+ 99EF
 661+ 99EF
 662+ 99EF
 663+ 99EF
 664+ 99EF
 665+ 99EF
 666+ 99EF
# file closed: Draw_XOR.asm
2051  99EF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99EF
   2+ 99EF              ; ******************************************************************************************************************************************************************************************
   3+ 99EF              ;
   4+ 99EF              ;   20/05/23
   5+ 99EF              ;
   6+ 99EF              ;	Recompone_posicion_inicio
   7+ 99EF              ;
   8+ 99EF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99EF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99EF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99EF              ;	_ a una u otra rutina.
  12+ 99EF
  13+ 99EF              Recompone_posicion_inicio
  14+ 99EF
  15+ 99EF 2A D5 8B     	ld hl,(Posicion_inicio)
  16+ 99F2 7D           	ld a,l
  17+ 99F3 E6 1F        	and $1f
  18+ 99F5 28 16        	jr z,1F
  19+ 99F7
  20+ 99F7 FE 1F        	cp $1f
  21+ 99F9 28 0D        	jr z,3F
  22+ 99FB
  23+ 99FB 21 C4 8B     	ld hl,Ctrl_2
  24+ 99FE CB C6        	set 0,(hl)
  25+ 9A00 2A CA 8B     	ld hl,(Puntero_objeto)
  26+ 9A03 22 F6 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A06 18 08        	jr 2F
  28+ 9A08
  29+ 9A08 CD B6 9B     3 call Mov_left
  30+ 9A0B 18 03        	jr 2F
  31+ 9A0D
  32+ 9A0D CD 93 9A     1 call Mov_right
  33+ 9A10 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A13 22 CA 8B     	ld (Puntero_objeto),hl
  35+ 9A16 C9           	ret
  36+ 9A17
  37+ 9A17              ; ******************************************************************************************************************************************************************************************
  38+ 9A17              ;
  39+ 9A17              ;   27/05/23
  40+ 9A17              ;
  41+ 9A17              ;	Mov_down
  42+ 9A17              ;
  43+ 9A17              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A17              ;
  45+ 9A17              ;
  46+ 9A17              Mov_down
  47+ 9A17
  48+ 9A17 CD 81 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A1A              ;																	; _ repone (Puntero_objeto).
  50+ 9A1A 21 C5 8B     	ld hl,Ctrl_0
  51+ 9A1D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A1F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A1F              ; 																	; _ en el caso de que no lo haya.
  54+ 9A1F 3A E0 8B     	ld a,(Vel_down)
  55+ 9A22 47           	ld b,a
  56+ 9A23 2A C8 8B         ld hl,(Posicion_actual)
  57+ 9A26 CD B9 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A29 E6 02        	and 2
  59+ 9A2B 28 17        	jr z,1F
  60+ 9A2D
  61+ 9A2D              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A2D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A2D
  64+ 9A2D 7C           	ld a,h
  65+ 9A2E FE 57        	cp $57
  66+ 9A30 20 12        	jr nz,1F
  67+ 9A32
  68+ 9A32 7D           	ld a,l
  69+ 9A33 C6 20        	add $20
  70+ 9A35 30 0D        	jr nc,1F
  71+ 9A37
  72+ 9A37              ; ------------------------------
  73+ 9A37              ;
  74+ 9A37              ;	12/01/24
  75+ 9A37
  76+ 9A37              ;	call Reaparece_arriba
  77+ 9A37 CD 43 9D     	call Reinicio
  78+ 9A3A
  79+ 9A3A              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A3A
  81+ 9A3A 3A 2D 8C     	ld a,(Ctrl_3)
  82+ 9A3D CB CF        	set 1,a
  83+ 9A3F 32 2D 8C     	ld (Ctrl_3),a
  84+ 9A42
  85+ 9A42 18 08        	jr 3F
  86+ 9A44              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A44              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A44              ; ------------------------------
  89+ 9A44
  90+ 9A44 CD D1 99     1 call NextScan
  91+ 9A47 22 C8 8B     	ld (Posicion_actual),hl
  92+ 9A4A 10 DA            djnz 2B
  93+ 9A4C CD D7 94     3 call Genera_coordenadas
  94+ 9A4F C9           	ret
  95+ 9A50
  96+ 9A50              ; ******************************************************************************************************************************************************************************************
  97+ 9A50              ;
  98+ 9A50              ;   27/05/23
  99+ 9A50              ;
 100+ 9A50              ;	Mov_up
 101+ 9A50              ;
 102+ 9A50              ; 	Mueve el Sprite hacia arriba.
 103+ 9A50              ;
 104+ 9A50              ;
 105+ 9A50              Mov_up
 106+ 9A50
 107+ 9A50 CD 81 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A53              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A53 21 C5 8B     	ld hl,Ctrl_0
 110+ 9A56 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A58              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A58              ; 																		; _ en el caso de que no lo haya.
 113+ 9A58 3A DF 8B     	ld a,(Vel_up)
 114+ 9A5B 47           	ld b,a
 115+ 9A5C 2A C8 8B     	ld hl,(Posicion_actual)
 116+ 9A5F CD B9 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A62 A7           	and a
 118+ 9A63 20 10        	jr nz,1F
 119+ 9A65
 120+ 9A65              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A65              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A65
 123+ 9A65 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A66 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A68 20 0B            jr nz,1F
 126+ 9A6A 7D               ld a,l
 127+ 9A6B D6 20            sub $20
 128+ 9A6D 30 06            jr nc,1F
 129+ 9A6F 25               dec h
 130+ 9A70
 131+ 9A70              ; -----------------------------
 132+ 9A70 CD 24 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A73              ;	call Reinicio
 134+ 9A73              ; -----------------------------
 135+ 9A73
 136+ 9A73 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A75 CD E0 99     1 call PreviousScan
 138+ 9A78 22 C8 8B     	ld (Posicion_actual),hl
 139+ 9A7B 10 E2            djnz 3B
 140+ 9A7D CD D7 94     2 call Genera_coordenadas
 141+ 9A80 C9           	ret
 142+ 9A81
 143+ 9A81              ; -----------------------------
 144+ 9A81              ;
 145+ 9A81              ;	27/5/23
 146+ 9A81              ;
 147+ 9A81              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A81              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A81              ;
 150+ 9A81              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A81              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A81              ;
 153+ 9A81              ;	Modifica: A y (Puntero_objeto).
 154+ 9A81
 155+ 9A81 3A C4 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A84 CB 47        	bit 0,a
 157+ 9A86 C8           	ret z
 158+ 9A87 CB 87        	res 0,a
 159+ 9A89 32 C4 8B     	ld (Ctrl_2),a
 160+ 9A8C 2A F6 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A8F 22 CA 8B     	ld (Puntero_objeto),hl
 162+ 9A92 C9           	ret
 163+ 9A93
 164+ 9A93              ; ******************************************************************************************************************************************************************************************
 165+ 9A93              ;
 166+ 9A93              ;	19/10/22
 167+ 9A93              ;
 168+ 9A93              ;	Mov_right.
 169+ 9A93              ;
 170+ 9A93              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A93              ;
 172+ 9A93
 173+ 9A93 3A C5 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A96 CB 77        	bit 6,a
 175+ 9A98 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A9A
 177+ 9A9A CD D2 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A9D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A9E
 180+ 9A9E 21 C5 8B     	ld hl,Ctrl_0
 181+ 9AA1 CB E6        	set 4,(hl)
 182+ 9AA3 18 52        	jr 8F
 183+ 9AA5
 184+ 9AA5 21 C5 8B     10 ld hl,Ctrl_0
 185+ 9AA8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AAA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AAA              ; 																	; _ en el caso de que no lo haya.
 188+ 9AAA 3A B9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AAD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AAF 20 46        	jr nz,8F
 191+ 9AB1
 192+ 9AB1 3A CC 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB5 28 40        	jr z,8F
 195+ 9AB7
 196+ 9AB7              ; ---------- ---------- ----------
 197+ 9AB7              ;
 198+ 9AB7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AB7
 200+ 9AB7 3A DE 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ABA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ABC 28 11        	jr z,1F
 203+ 9ABE 38 06        	jr c,6F
 204+ 9AC0 FE 04        	cp 4
 205+ 9AC2 28 14        	jr z,7F
 206+ 9AC4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AC6
 208+ 9AC6              ; ---------- ---------- ----------
 209+ 9AC6              ;
 210+ 9AC6              ; Perfiles de velocidad
 211+ 9AC6              ;
 212+ 9AC6
 213+ 9AC6 3A CC 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AC9 FE FE        	cp $fe
 215+ 9ACB 20 2A        	jr nz,8F
 216+ 9ACD 18 10        	jr 3F
 217+ 9ACF 3A CC 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD2 FE FD        	cp $fd
 219+ 9AD4 20 21        	jr nz,8F
 220+ 9AD6 18 07        	jr 3F
 221+ 9AD8 3A CC 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ADB FE FB        	cp $fb
 223+ 9ADD 20 18        	jr nz,8F
 224+ 9ADF
 225+ 9ADF              ; ---------- ---------- ----------
 226+ 9ADF
 227+ 9ADF              3
 228+ 9ADF CD 12 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE2              ;	call Reinicio
 230+ 9AE2
 231+ 9AE2              ; ---------- ---------- ----------
 232+ 9AE2              ;
 233+ 9AE2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE2
 235+ 9AE2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE5 CD FE 9A     	call DESPLZ_DER
 238+ 9AE8 C1           	pop bc
 239+ 9AE9 10 F9        	djnz 5B
 240+ 9AEB 2A C8 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AEE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AEF 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9AF2 CD D7 94     	call Genera_coordenadas
 244+ 9AF5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AF7
 246+ 9AF7              ; ---------- ---------- ----------
 247+ 9AF7
 248+ 9AF7 2A C8 8B     8 ld hl,(Posicion_actual)
 249+ 9AFA CD FE 9A     	call DESPLZ_DER
 250+ 9AFD C9           2 ret
 251+ 9AFE
 252+ 9AFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AFE              ;
 254+ 9AFE              ;	22/9/22
 255+ 9AFE              ;
 256+ 9AFE
 257+ 9AFE CD 0D 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B01 CD 59 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B04 CD 82 9B         call Ciclo_completo
 260+ 9B07 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B0A CB FE        	set 7,(hl)
 262+ 9B0C C9           	ret
 263+ 9B0D
 264+ 9B0D              ; ******************************************************************************************************************************************************************************************
 265+ 9B0D              ;	15/02/23
 266+ 9B0D              ;
 267+ 9B0D
 268+ 9B0D 3A DE 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B10 47           	ld b,a
 270+ 9B11 2A D1 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B14 23           1 inc hl
 272+ 9B15 23           	inc hl
 273+ 9B16 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B18 22 D1 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B1B CD B8 90     	call Extrae_address
 276+ 9B1E 22 CA 8B     	ld (Puntero_objeto),hl
 277+ 9B21
 278+ 9B21              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B21
 280+ 9B21              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B21              ; Cuántos movimientos hemos hecho ??
 282+ 9B21              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B21
 284+ 9B21 2A CD 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B24 EB           	ex de,hl
 286+ 9B25 A7           	and a
 287+ 9B26 ED 52        	sbc hl,de
 288+ 9B28 CB 3D        	srl l
 289+ 9B2A 3E 08        6 ld a,8
 290+ 9B2C 95           	sub l
 291+ 9B2D 30 1E        	jr nc,3F
 292+ 9B2F
 293+ 9B2F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B2F              ; B="0".
 295+ 9B2F
 296+ 9B2F 04           4 inc b
 297+ 9B30 3C           	inc a
 298+ 9B31 20 FC        	jr nz,4B
 299+ 9B33 78           	ld a,b
 300+ 9B34 08           	ex af,af
 301+ 9B35 2A CD 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B38 23           5 inc hl
 303+ 9B39 23           	inc hl
 304+ 9B3A 10 FC        	djnz 5B
 305+ 9B3C 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B3F CD B8 90     	call Extrae_address
 307+ 9B42 22 CA 8B     	ld (Puntero_objeto),hl
 308+ 9B45
 309+ 9B45              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B45              ; _(Posicion_actual).
 311+ 9B45
 312+ 9B45 21 C8 8B     	ld hl,Posicion_actual
 313+ 9B48 34           	inc (hl)
 314+ 9B49 08               ex af,af
 315+ 9B4A 6F           	ld l,a
 316+ 9B4B 18 DD        	jr 6B
 317+ 9B4D
 318+ 9B4D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B4D
 320+ 9B4D 47           3 ld b,a
 321+ 9B4E 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B51 23           2 inc hl
 323+ 9B52 23           	inc hl
 324+ 9B53 10 FC        	djnz 2B
 325+ 9B55 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B58 C9           8 ret
 327+ 9B59
 328+ 9B59              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B59              ;
 330+ 9B59              ;	24/7/22
 331+ 9B59              ;
 332+ 9B59              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B59              ;
 334+ 9B59              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B59              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B59              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B59
 338+ 9B59 3A CC 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B5C A7           	and a
 340+ 9B5D 20 1F        	jr nz,1F
 341+ 9B5F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B61 32 CC 8B         ld (CTRL_DESPLZ),a
 343+ 9B64
 344+ 9B64 21 C7 8B     	ld hl,Columns
 345+ 9B67 34           	inc (hl)
 346+ 9B68 3A D7 8B     	ld a,(Cuad_objeto)
 347+ 9B6B E6 01        	and 1
 348+ 9B6D 28 0F        	jr z,1F
 349+ 9B6F 2A C8 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B72 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B73 22 C8 8B     	ld (Posicion_actual),hl
 352+ 9B76 CD D7 94     	call Genera_coordenadas
 353+ 9B79 CD DE 9C     	call Inc_CTRL_DESPLZ
 354+ 9B7C 18 03        	jr 2F
 355+ 9B7E CD DE 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B81 C9           2 ret
 357+ 9B82
 358+ 9B82              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B82              ;
 360+ 9B82              ;	24/7/22
 361+ 9B82              ;
 362+ 9B82              ;	Ciclo_completo.
 363+ 9B82              ;
 364+ 9B82              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B82              ;
 366+ 9B82              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B82              ; 	Decrementamos (Columns).
 368+ 9B82              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B82              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B82
 371+ 9B82
 372+ 9B82 3A CC 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B85 FE FF        	cp $ff
 374+ 9B87 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B89 E6 F0        	and $f0
 376+ 9B8B 20 28        	jr nz,3F
 377+ 9B8D
 378+ 9B8D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B8D
 380+ 9B8D 3A CC 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B90 47           	ld b,a
 382+ 9B91 3E F8        	ld a,$f8
 383+ 9B93 80           	add b
 384+ 9B94 32 CC 8B     	ld (CTRL_DESPLZ),a
 385+ 9B97 18 1C        	jr 3F
 386+ 9B99 21 C7 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B9C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B9D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B9E 32 CC 8B     	ld (CTRL_DESPLZ),a
 390+ 9BA1 3A D7 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BA6 20 0A        	jr nz,2F
 393+ 9BA8 2A C8 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BAB 23           	inc hl
 395+ 9BAC 22 C8 8B     	ld (Posicion_actual),hl
 396+ 9BAF CD D7 94     	call Genera_coordenadas
 397+ 9BB2
 398+ 9BB2              ; Inicia el puntero de Sprite.
 399+ 9BB2
 400+ 9BB2 CD CD 90     2 call Inicia_puntero_objeto_der
 401+ 9BB5 C9           3 ret
 402+ 9BB6
 403+ 9BB6              ; ******************************************************************************************************************************************************************************************
 404+ 9BB6              ;
 405+ 9BB6              ;	15/02/23
 406+ 9BB6              ;
 407+ 9BB6              ;	Mov_left.
 408+ 9BB6              ;
 409+ 9BB6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BB6              ;
 411+ 9BB6              Mov_left
 412+ 9BB6
 413+ 9BB6 21 C5 8B     	ld hl,Ctrl_0
 414+ 9BB9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BBB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BBB              ; 																	; _ en el caso de que no lo haya.
 417+ 9BBB 3A C5 8B     	ld a,(Ctrl_0)
 418+ 9BBE CB 77        	bit 6,a
 419+ 9BC0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC2
 421+ 9BC2 CD D8 9C     	call Stop_Amadeus_left
 422+ 9BC5 C8           	ret z
 423+ 9BC6 20 4A        	jr nz,8F
 424+ 9BC8
 425+ 9BC8 3A B9 8B     11 ld a,(Coordenada_X)
 426+ 9BCB A7           	and a
 427+ 9BCC 20 44        	jr nz,8F
 428+ 9BCE
 429+ 9BCE 3A CC 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD4
 433+ 9BD4              ; ---------- ---------- ----------
 434+ 9BD4
 435+ 9BD4 3A DD 8B     	ld a,(Vel_left)
 436+ 9BD7 FE 02        	cp 2
 437+ 9BD9 28 0F        	jr z,1F
 438+ 9BDB 38 04        	jr c,6F
 439+ 9BDD FE 04        	cp 4
 440+ 9BDF 28 12        	jr z,7F
 441+ 9BE1
 442+ 9BE1              ; ---------- ---------- ----------
 443+ 9BE1
 444+ 9BE1 3A CC 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE4 FE F8        	cp $f8
 446+ 9BE6 20 2A        	jr nz,8F
 447+ 9BE8 18 10        	jr 4F
 448+ 9BEA 3A CC 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BED FE F9        	cp $f9
 450+ 9BEF 20 21        	jr nz,8F
 451+ 9BF1 18 07        	jr 4F
 452+ 9BF3 3A CC 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BF6 FE FB        	cp $fb
 454+ 9BF8 20 18        	jr nz,8F
 455+ 9BFA
 456+ 9BFA              ; ---------- ---------- ----------
 457+ 9BFA
 458+ 9BFA              4
 459+ 9BFA CD 00 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BFD              ;	call Reinicio
 461+ 9BFD
 462+ 9BFD              ; ---------- ---------- ----------
 463+ 9BFD
 464+ 9BFD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BFF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C00
 467+ 9C00              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C00              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C00
 470+ 9C00 CD 19 9C     	call DESPLZ_IZQ
 471+ 9C03 C1           	pop bc
 472+ 9C04 10 F9        	djnz 5B
 473+ 9C06 2A C8 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C09 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C0A 22 C8 8B     	ld (Posicion_actual),hl
 476+ 9C0D CD D7 94     	call Genera_coordenadas
 477+ 9C10 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C12
 479+ 9C12              ; ---------- ---------- ----------
 480+ 9C12
 481+ 9C12              ; Movemos, no hay recolocación.
 482+ 9C12
 483+ 9C12 2A C8 8B     8 ld hl,(Posicion_actual)
 484+ 9C15 CD 19 9C     	call DESPLZ_IZQ
 485+ 9C18 C9           2 ret
 486+ 9C19
 487+ 9C19              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C19              ;
 489+ 9C19              ;	22/9/22
 490+ 9C19
 491+ 9C19              DESPLZ_IZQ
 492+ 9C19
 493+ 9C19 CD 28 9C     	call Desplaza_izquierda
 494+ 9C1C CD 74 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C1F CD 9C 9C     	call Ciclo_completo_2
 496+ 9C22 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C25 CB BE        	res 7,(hl)
 498+ 9C27 C9           	ret
 499+ 9C28
 500+ 9C28              Desplaza_izquierda
 501+ 9C28
 502+ 9C28 3A DD 8B     	ld a,(Vel_left)
 503+ 9C2B 47           	ld b,a
 504+ 9C2C 2A D3 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C2F 23           1 inc hl
 506+ 9C30 23           	inc hl
 507+ 9C31 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C33 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C36 CD B8 90     	call Extrae_address
 510+ 9C39 22 CA 8B     	ld (Puntero_objeto),hl
 511+ 9C3C
 512+ 9C3C              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C3C
 514+ 9C3C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C3C              ; Cuántos movimientos hemos hecho ??
 516+ 9C3C              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C3C
 518+ 9C3C 2A CF 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C3F EB           	ex de,hl
 520+ 9C40 A7           	and a
 521+ 9C41 ED 52        	sbc hl,de
 522+ 9C43 CB 3D        	srl l
 523+ 9C45 3E 08        6 ld a,8
 524+ 9C47 95           	sub l
 525+ 9C48 30 1E        	jr nc,3F
 526+ 9C4A
 527+ 9C4A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C4A              ; B="0".
 529+ 9C4A
 530+ 9C4A 04           4 inc b
 531+ 9C4B 3C           	inc a
 532+ 9C4C 20 FC        	jr nz,4B
 533+ 9C4E 78           	ld a,b
 534+ 9C4F 08           	ex af,af
 535+ 9C50 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C53 23           5 inc hl
 537+ 9C54 23           	inc hl
 538+ 9C55 10 FC        	djnz 5B
 539+ 9C57 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C5A CD B8 90     	call Extrae_address
 541+ 9C5D 22 CA 8B     	ld (Puntero_objeto),hl
 542+ 9C60
 543+ 9C60              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C60              ; _(Posicion_actual).
 545+ 9C60
 546+ 9C60 21 C8 8B     	ld hl,Posicion_actual
 547+ 9C63 35           	dec (hl)
 548+ 9C64 08           	ex af,af
 549+ 9C65 6F           	ld l,a
 550+ 9C66 18 DD        	jr 6B
 551+ 9C68
 552+ 9C68              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C68
 554+ 9C68 47           3 ld b,a
 555+ 9C69 2A CD 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C6C 23           2 inc hl
 557+ 9C6D 23           	inc hl
 558+ 9C6E 10 FC        	djnz 2B
 559+ 9C70 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C73 C9           8 ret
 561+ 9C74
 562+ 9C74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C74              ;
 564+ 9C74              ;	modifica_parametros_1er_DESPLZ
 565+ 9C74              ;
 566+ 9C74              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C74              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C74              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C74
 570+ 9C74 3A CC 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C77 A7           	and a
 572+ 9C78 20 1E        	jr nz,1F
 573+ 9C7A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C7B 32 CC 8B         ld (CTRL_DESPLZ),a
 575+ 9C7E 21 C7 8B     	ld hl,Columns
 576+ 9C81 34           	inc (hl)
 577+ 9C82 3A D7 8B     	ld a,(Cuad_objeto)
 578+ 9C85 E6 01        	and 1
 579+ 9C87 20 0F        	jr nz,1F
 580+ 9C89 2A C8 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C8C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C8D 22 C8 8B     	ld (Posicion_actual),hl
 583+ 9C90 CD D7 94     	call Genera_coordenadas
 584+ 9C93 CD EF 9C     	call Dec_CTRL_DESPLZ
 585+ 9C96 18 03        	jr 2F
 586+ 9C98 CD EF 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C9B C9           2 ret
 588+ 9C9C
 589+ 9C9C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C9C
 591+ 9C9C 3A CC 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C9F FE F7        	cp $f7
 593+ 9CA1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA3 30 2C        	jr nc,3F
 595+ 9CA5
 596+ 9CA5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA5
 598+ 9CA5 06 00        	ld b,0
 599+ 9CA7 04           4 inc b
 600+ 9CA8 3C           	inc a
 601+ 9CA9 FE F7        	cp $f7
 602+ 9CAB 20 FA        	jr nz,4B
 603+ 9CAD 3E FF        	ld a,$ff
 604+ 9CAF 90           	sub b
 605+ 9CB0 32 CC 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB3 18 1C        	jr 3F
 607+ 9CB5
 608+ 9CB5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB5
 610+ 9CB5 21 C7 8B     1 ld hl,Columns
 611+ 9CB8 35           	dec (hl)
 612+ 9CB9 AF           	xor a
 613+ 9CBA 32 CC 8B     	ld (CTRL_DESPLZ),a
 614+ 9CBD 3A D7 8B     	ld a,(Cuad_objeto)
 615+ 9CC0 E6 01        	and 1
 616+ 9CC2 28 0A        	jr z,2F
 617+ 9CC4 2A C8 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CC7 2B           	dec hl
 619+ 9CC8 22 C8 8B     	ld (Posicion_actual),hl
 620+ 9CCB CD D7 94     	call Genera_coordenadas
 621+ 9CCE
 622+ 9CCE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CCE
 624+ 9CCE CD E0 90     2 call Inicia_puntero_objeto_izq
 625+ 9CD1 C9           3 ret
 626+ 9CD2
 627+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD2              ;
 629+ 9CD2              ;	19/10/22
 630+ 9CD2              ;
 631+ 9CD2              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD2              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD2
 634+ 9CD2 3A B9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CD7 C9           	ret
 637+ 9CD8
 638+ 9CD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CD8              ;
 640+ 9CD8              ;	19/10/22
 641+ 9CD8              ;
 642+ 9CD8              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CD8              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CD8
 645+ 9CD8 3A B9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CDB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CDD C9           	ret
 648+ 9CDE
 649+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CDE              ;
 651+ 9CDE              ;	24/7/22
 652+ 9CDE              ;
 653+ 9CDE              ;	Inc_CTRL_DESPLZ
 654+ 9CDE              ;
 655+ 9CDE              ;
 656+ 9CDE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CDE
 658+ 9CDE 21 CC 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE1 3A DE 8B     	ld a,(Vel_right)
 660+ 9CE4 A7           	and a
 661+ 9CE5 28 06        	jr z,1F
 662+ 9CE7 47           	ld b,a
 663+ 9CE8 34           3 inc (hl)
 664+ 9CE9 10 FD        	djnz 3B
 665+ 9CEB 18 01        	jr 2F
 666+ 9CED 34           1 inc (hl)
 667+ 9CEE C9           2 ret
 668+ 9CEF
 669+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CEF              ;
 671+ 9CEF              ;	5/2/23
 672+ 9CEF              ;
 673+ 9CEF              ;	Dec_CTRL_DESPLZ
 674+ 9CEF              ;
 675+ 9CEF              ;
 676+ 9CEF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CEF
 678+ 9CEF 21 CC 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF2 3A DD 8B     	ld a,(Vel_left)
 680+ 9CF5 A7           	and a
 681+ 9CF6 28 06        	jr z,1F
 682+ 9CF8 47           	ld b,a
 683+ 9CF9 35           3 dec (hl)
 684+ 9CFA 10 FD        	djnz 3B
 685+ 9CFC 18 01        	jr 2F
 686+ 9CFE 35           1 dec (hl)
 687+ 9CFF C9           2 ret
 688+ 9D00
 689+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D00
 691+ 9D00 2A C8 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D03 01 1F 00     	ld bc,31
 693+ 9D06 A7           	and a
 694+ 9D07 ED 4A        	adc hl,bc
 695+ 9D09 22 C8 8B     	ld (Posicion_actual),hl
 696+ 9D0C 21 C5 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D0F CB C6        	set 0,(hl)
 698+ 9D11 C9           	ret
 699+ 9D12
 700+ 9D12              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D12
 702+ 9D12 2A C8 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D15 01 1F 00     	ld bc,31
 704+ 9D18 A7           	and a
 705+ 9D19 ED 42        	sbc hl,bc
 706+ 9D1B 22 C8 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D1E 21 C5 8B     	ld hl,Ctrl_0
 708+ 9D21 CB CE        	set 1,(hl)
 709+ 9D23 C9           	ret
 710+ 9D24
 711+ 9D24              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D24
 713+ 9D24 24           Reaparece_abajo inc h
 714+ 9D25 01 E0 17     	ld bc,$17e0
 715+ 9D28 A7           	and a
 716+ 9D29 ED 4A        	adc hl,bc
 717+ 9D2B 22 C8 8B     	ld (Posicion_actual),hl
 718+ 9D2E 21 C5 8B     	ld hl,Ctrl_0
 719+ 9D31 CB D6        	set 2,(hl)
 720+ 9D33 C9           	ret
 721+ 9D34
 722+ 9D34              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D34
 724+ 9D34 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D37 A7           	and a
 726+ 9D38 ED 42        	sbc hl,bc
 727+ 9D3A 22 C8 8B     	ld (Posicion_actual),hl
 728+ 9D3D 21 C5 8B     	ld hl,Ctrl_0
 729+ 9D40 CB DE        	set 3,(hl)
 730+ 9D42 C9           	ret
 731+ 9D43
 732+ 9D43              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D43              ;
 734+ 9D43              ;	15/07/23
 735+ 9D43
 736+ 9D43              Reinicio
 737+ 9D43
 738+ 9D43              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D43
 740+ 9D43 AF           	xor a
 741+ 9D44 21 ED 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D47 CD 65 9D     	call Limpia_contenido_hl
 743+ 9D4A
 744+ 9D4A 21 C8 8B     	ld hl,Posicion_actual
 745+ 9D4D CD 65 9D     	call Limpia_contenido_hl
 746+ 9D50
 747+ 9D50 CD B9 92     	call Inicializa_Puntero_indice_mov
 748+ 9D53 CD 64 9E     	call Inicia_Puntero_mov
 749+ 9D56
 750+ 9D56 21 EF 8B     	ld hl,Incrementa_puntero
 751+ 9D59 06 05        	ld b,5
 752+ 9D5B 77           1 ld (hl),a
 753+ 9D5C 23           	inc hl
 754+ 9D5D 10 FC        	djnz 1B
 755+ 9D5F
 756+ 9D5F 21 C4 8B     	ld hl,Ctrl_2
 757+ 9D62 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D64
 759+ 9D64 C9           	ret
 760+ 9D65
 761+ 9D65 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D66 23           	inc hl
 763+ 9D67 77           	ld (hl),a
 764+ 9D68 C9           	ret
 765+ 9D69
 766+ 9D69              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D69              ;
 768+ 9D69              ;	18/6/24
 769+ 9D69              ;
 770+ 9D69
 771+ 9D69              Amadeus_a_izquierda
 772+ 9D69
 773+ 9D69              ;	Actualiza contador de movimientos.
 774+ 9D69
 775+ 9D69 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D6C 35           	dec (hl)
 777+ 9D6D 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D6F
 779+ 9D6F 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D72 2B           	dec hl
 781+ 9D73 2B           	dec hl
 782+ 9D74 2B           	dec hl
 783+ 9D75 2B           	dec hl
 784+ 9D76 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D79
 786+ 9D79 21 2D 8C     	ld hl,Ctrl_3
 787+ 9D7C CB EE        	set 5,(hl)
 788+ 9D7E
 789+ 9D7E C9           	ret
 790+ 9D7F
 791+ 9D7F 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D80 C9           	ret
 793+ 9D81
 794+ 9D81
 795+ 9D81              Amadeus_a_derecha
 796+ 9D81
 797+ 9D81              ;	Actualiza contador de movimientos.
 798+ 9D81
 799+ 9D81 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D84 34           	inc (hl)
 801+ 9D85 3E 7A        	ld a,$7a
 802+ 9D87 BE           	cp (hl)
 803+ 9D88 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D8A
 805+ 9D8A 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D8D 23           	inc hl
 807+ 9D8E 23           	inc hl
 808+ 9D8F 23           	inc hl
 809+ 9D90 23           	inc hl
 810+ 9D91 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D94
 812+ 9D94 21 2D 8C     	ld hl,Ctrl_3
 813+ 9D97 CB EE        	set 5,(hl)
 814+ 9D99 C9           	ret
 815+ 9D9A
 816+ 9D9A 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D9B C9           	ret
# file closed: Direcciones.asm
2052  9D9C              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D9C              ; ----- ----- ----- ----- -----
   2+ 9D9C              ;
   3+ 9D9C              ;   28/12/23
   4+ 9D9C
   5+ 9D9C              Movimiento
   6+ 9D9C
   7+ 9D9C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D9C
   9+ 9D9C 3A C4 8B         ld a,(Ctrl_2)
  10+ 9D9F CB 57            bit 2,a
  11+ 9DA1 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA3
  13+ 9DA3 2A EB 8B         ld hl,(Puntero_mov)
  14+ 9DA6 7E               ld a,(hl)
  15+ 9DA7
  16+ 9DA7              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DA7
  18+ 9DA7              Inicia_desplazamiento.
  19+ 9DA7
  20+ 9DA7              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DA7
  22+ 9DA7 CD 9A 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DAA
  24+ 9DAA              ; Iniciamos (Repetimos_mov).
  25+ 9DAA
  26+ 9DAA 7E               ld a,(hl)
  27+ 9DAB E6 0F            and $0f
  28+ 9DAD 32 F1 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB0 32 F2 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB3
  31+ 9DB3              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB3
  33+ 9DB3 23               inc hl
  34+ 9DB4 7E               ld a,(hl)
  35+ 9DB5 32 F4 8B         ld (Cola_de_desplazamiento),a
  36+ 9DB8 2B               dec hl
  37+ 9DB9
  38+ 9DB9 21 C4 8B         ld hl,Ctrl_2
  39+ 9DBC CB D6            set 2,(hl)
  40+ 9DBE
  41+ 9DBE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DBE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DBE
  44+ 9DBE              Desplazamiento_iniciado
  45+ 9DBE
  46+ 9DBE CD 6E 9E         call Aplica_desplazamiento
  47+ 9DC1
  48+ 9DC1              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC1
  50+ 9DC1 3A 2D 8C         ld a,(Ctrl_3)
  51+ 9DC4 CB 4F            bit 1,a
  52+ 9DC6 C0               ret nz
  53+ 9DC7
  54+ 9DC7 21 F1 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DCA 35               dec (hl)
  56+ 9DCB C0               ret nz
  57+ 9DCC
  58+ 9DCC              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DCC              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DCC              ; Analiza (Cola_de_desplazamiento).
  61+ 9DCC
  62+ 9DCC 3A F4 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DCF A7               and a
  64+ 9DD0 CC C3 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD3 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD5
  67+ 9DD5 FE FF            cp $ff
  68+ 9DD7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DD9
  70+ 9DD9 FE FE            cp $fe
  71+ 9DDB CC 48 9E         call z,Fijamos_bucle
  72+ 9DDE 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE0
  74+ 9DE0 FE FD            cp $fd
  75+ 9DE2 20 11            jr nz,1F
  76+ 9DE4
  77+ 9DE4              ; ---
  78+ 9DE4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE4
  80+ 9DE4 3A C4 8B         ld a,(Ctrl_2)
  81+ 9DE7 CB 5F            bit 3,a
  82+ 9DE9 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DEB
  84+ 9DEB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DEB
  86+ 9DEB 21 C4 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DEE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF0
  89+ 9DF0 CD 59 9E         call Inicia_Repetimos_movimiento
  90+ 9DF3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF5              ; ---
  92+ 9DF5
  93+ 9DF5 FE 01        1 cp 1
  94+ 9DF7 CA 32 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DFA
  96+ 9DFA 3D               dec a
  97+ 9DFB 32 F4 8B         ld (Cola_de_desplazamiento),a
  98+ 9DFE
  99+ 9DFE 3A F2 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E01 32 F1 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E04              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E04 C9               ret
 103+ 9E05
 104+ 9E05              Reinicia_el_movimiento
 105+ 9E05
 106+ 9E05 3A C4 8B         ld a,(Ctrl_2)
 107+ 9E08 CB 5F            bit 3,a
 108+ 9E0A 28 1B            jr z,2F
 109+ 9E0C
 110+ 9E0C              ; (Cola_de_desplazamiento)="254".
 111+ 9E0C
 112+ 9E0C 21 F3 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E0F 35               dec (hl)
 114+ 9E10 20 15            jr nz,2F
 115+ 9E12
 116+ 9E12              ; Fin de las repeticiones del último movimiento.
 117+ 9E12
 118+ 9E12 21 C4 8B         ld hl,Ctrl_2
 119+ 9E15 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E17
 121+ 9E17 2A EB 8B         ld hl,(Puntero_mov)
 122+ 9E1A 23               inc hl
 123+ 9E1B 23               inc hl
 124+ 9E1C 23               inc hl
 125+ 9E1D 22 EB 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E20              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E20 7E               ld a,(hl)
 128+ 9E21 32 F4 8B         ld (Cola_de_desplazamiento),a
 129+ 9E24
 130+ 9E24 C3 CC 9D         jp Cola
 131+ 9E27
 132+ 9E27 CD 64 9E     2 call Inicia_Puntero_mov
 133+ 9E2A
 134+ 9E2A 21 C4 8B         ld hl,Ctrl_2
 135+ 9E2D CB 96            res 2,(hl)
 136+ 9E2F
 137+ 9E2F C3 9C 9D         jp Movimiento
 138+ 9E32
 139+ 9E32              Siguiente_desplazamiento
 140+ 9E32
 141+ 9E32              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E32              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E32
 144+ 9E32 21 C4 8B         ld hl,Ctrl_2
 145+ 9E35 CB 96            res 2,(hl)
 146+ 9E37
 147+ 9E37 2A EB 8B         ld hl,(Puntero_mov)
 148+ 9E3A 23               inc hl
 149+ 9E3B 23               inc hl
 150+ 9E3C 22 EB 8B         ld (Puntero_mov),hl
 151+ 9E3F
 152+ 9E3F 7E               ld a,(hl)
 153+ 9E40 A7               and a
 154+ 9E41 CC C3 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E44 CA 05 9E         jp z,Reinicia_el_movimiento
 156+ 9E47
 157+ 9E47 C9               ret
 158+ 9E48
 159+ 9E48              ; Subrutinas -----------------------------------------
 160+ 9E48              ; ---------- --------- --------- ---------- ----------
 161+ 9E48              ;
 162+ 9E48              ;   24/07/23
 163+ 9E48              ;
 164+ 9E48              ;   Fijamos_bucle
 165+ 9E48              ;
 166+ 9E48              ;
 167+ 9E48
 168+ 9E48              Fijamos_bucle
 169+ 9E48
 170+ 9E48 3A EF 8B         ld a,(Incrementa_puntero)
 171+ 9E4B 3C               inc a
 172+ 9E4C 32 F0 8B         ld (Incrementa_puntero_backup),a
 173+ 9E4F
 174+ 9E4F CD C3 9E         call Incrementa_Puntero_indice_mov
 175+ 9E52 2A E9 8B         ld hl,(Puntero_indice_mov)
 176+ 9E55 22 ED 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E58 C9               ret
 178+ 9E59
 179+ 9E59              ; ---------- --------- --------- ---------- ----------
 180+ 9E59              ;
 181+ 9E59              ;   07/7/23
 182+ 9E59              ;
 183+ 9E59              ;   Inicia_Repetimos_movimiento
 184+ 9E59              ;
 185+ 9E59              ;
 186+ 9E59
 187+ 9E59              Inicia_Repetimos_movimiento
 188+ 9E59
 189+ 9E59              ; Iniciamos (Repetimos_movimiento).
 190+ 9E59
 191+ 9E59 DD 2A EB 8B      ld ix,(Puntero_mov)
 192+ 9E5D DD 7E 02         ld a,(ix+2)
 193+ 9E60 32 F3 8B         ld (Repetimos_movimiento),a
 194+ 9E63
 195+ 9E63 C9               ret
 196+ 9E64
 197+ 9E64              ; ---------- --------- --------- ---------- ----------
 198+ 9E64              ;
 199+ 9E64              ;   26/6/23
 200+ 9E64              ;
 201+ 9E64              ;   Inicia_Puntero_mov
 202+ 9E64              ;
 203+ 9E64              ;
 204+ 9E64
 205+ 9E64 2A E9 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E67 CD B8 90         call Extrae_address
 207+ 9E6A 22 EB 8B         ld (Puntero_mov),hl
 208+ 9E6D C9               ret
 209+ 9E6E
 210+ 9E6E              ; ---------- --------- --------- ---------- ----------
 211+ 9E6E              ;
 212+ 9E6E              ;   27/06/23
 213+ 9E6E              ;
 214+ 9E6E              ;   Aplica_movimiento.
 215+ 9E6E
 216+ 9E6E              Aplica_desplazamiento
 217+ 9E6E
 218+ 9E6E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E6E
 220+ 9E6E 2A EB 8B         ld hl, (Puntero_mov)
 221+ 9E71
 222+ 9E71 7E               ld a,(hl)
 223+ 9E72 E6 F0            and $f0
 224+ 9E74 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E75
 226+ 9E75 CB 7E            bit 7,(hl)
 227+ 9E77 28 03            jr z,1F
 228+ 9E79 CD 50 9A         call Mov_up
 229+ 9E7C 2A EB 8B     1 ld hl, (Puntero_mov)
 230+ 9E7F CB 76            bit 6,(hl)
 231+ 9E81 28 03            jr z,2F
 232+ 9E83 CD 17 9A         call Mov_down
 233+ 9E86
 234+ 9E86              ; Se ha aplicado reinicio ???
 235+ 9E86              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E86
 237+ 9E86              ;    ld a,(Ctrl_3)
 238+ 9E86              ;    bit 1,a
 239+ 9E86              ;    ret nz
 240+ 9E86
 241+ 9E86 2A EB 8B     2 ld hl, (Puntero_mov)
 242+ 9E89 CB 6E            bit 5,(hl)
 243+ 9E8B 28 03            jr z,3F
 244+ 9E8D CD B6 9B         call Mov_left
 245+ 9E90 2A EB 8B     3 ld hl, (Puntero_mov)
 246+ 9E93 CB 66            bit 4,(hl)
 247+ 9E95 C8               ret z
 248+ 9E96 CD 93 9A         call Mov_right
 249+ 9E99 C9               ret
 250+ 9E9A
 251+ 9E9A              ; ---------- --------- --------- ---------- ----------
 252+ 9E9A              ;
 253+ 9E9A              ;   26/06/23
 254+ 9E9A              ;
 255+ 9E9A              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E9A
 257+ 9E9A              Ajusta_velocidad_desplazamiento
 258+ 9E9A
 259+ 9E9A              ; 1er byte de la cadena de movimiento.
 260+ 9E9A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E9A
 262+ 9E9A CD B8 9E         call Extrae_nibble_alto
 263+ 9E9D
 264+ 9E9D 32 DF 8B         ld (Vel_up),a
 265+ 9EA0 79               ld a,c
 266+ 9EA1 E6 0F            and $0f
 267+ 9EA3 32 E0 8B         ld (Vel_down),a
 268+ 9EA6
 269+ 9EA6              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EA6              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EA6
 272+ 9EA6 23               inc hl
 273+ 9EA7 CD B8 9E         call Extrae_nibble_alto
 274+ 9EAA
 275+ 9EAA 32 DD 8B         ld (Vel_left),a
 276+ 9EAD 79               ld a,c
 277+ 9EAE E6 0F            and $0f
 278+ 9EB0 32 DE 8B         ld (Vel_right),a
 279+ 9EB3
 280+ 9EB3              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB3
 282+ 9EB3 23               inc hl
 283+ 9EB4 22 EB 8B         ld (Puntero_mov),hl
 284+ 9EB7 C9               ret
 285+ 9EB8
 286+ 9EB8 06 04        Extrae_nibble_alto ld b,4
 287+ 9EBA 7E               ld a,(hl)
 288+ 9EBB 4F               ld c,a
 289+ 9EBC E6 F0            and $f0
 290+ 9EBE CB 3F        1 srl a
 291+ 9EC0 10 FC            djnz 1B
 292+ 9EC2 C9               ret
 293+ 9EC3
 294+ 9EC3              ; ---------- --------- --------- ---------- ----------
 295+ 9EC3              ;
 296+ 9EC3              ;   5/7/23
 297+ 9EC3              ;
 298+ 9EC3              ;   Incrementa_Puntero_indice_mov
 299+ 9EC3
 300+ 9EC3              Incrementa_Puntero_indice_mov
 301+ 9EC3
 302+ 9EC3 21 EF 8B         ld hl,Incrementa_puntero
 303+ 9EC6 34               inc (hl)
 304+ 9EC7
 305+ 9EC7 2A E9 8B         ld hl,(Puntero_indice_mov)
 306+ 9ECA 01 02 00         ld bc,2
 307+ 9ECD A7               and a
 308+ 9ECE 09               add hl,bc
 309+ 9ECF 22 E9 8B         ld (Puntero_indice_mov),hl
 310+ 9ED2
 311+ 9ED2 7E               ld a,(hl)
 312+ 9ED3 A7               and a
 313+ 9ED4
 314+ 9ED4              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED4
 316+ 9ED4              ;    jr z,$
 317+ 9ED4
 318+ 9ED4              ;! Reinicia el Patrón de movimiento.
 319+ 9ED4
 320+ 9ED4 CC D9 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ED7
 322+ 9ED7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ED8
 324+ 9ED8 C9               ret
 325+ 9ED9
 326+ 9ED9              ; ---------- --------- --------- ---------- ----------
 327+ 9ED9              ;
 328+ 9ED9              ;   15/01/24
 329+ 9ED9              ;
 330+ 9ED9              ;   Inicializa_Puntero_indice_mov
 331+ 9ED9
 332+ 9ED9              Inicializa_Puntero_indice_mov_2
 333+ 9ED9
 334+ 9ED9              ; Existe etiqueta de bucle principal???
 335+ 9ED9
 336+ 9ED9 2A ED 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EDC 24               inc h
 338+ 9EDD 25               dec h
 339+ 9EDE 28 05            jr z,2F
 340+ 9EE0
 341+ 9EE0 22 E9 8B         ld (Puntero_indice_mov),hl
 342+ 9EE3 18 14            jr 3F
 343+ 9EE5
 344+ 9EE5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE5
 346+ 9EE5 3A EF 8B     2 ld a,(Incrementa_puntero)
 347+ 9EE8 47               ld b,a
 348+ 9EE9
 349+ 9EE9 2A E9 8B         ld hl,(Puntero_indice_mov)
 350+ 9EEC 2B           1 dec hl
 351+ 9EED 2B               dec hl
 352+ 9EEE 10 FC            djnz 1B
 353+ 9EF0 22 E9 8B         ld (Puntero_indice_mov),hl
 354+ 9EF3
 355+ 9EF3 AF               xor a
 356+ 9EF4 32 EF 8B         ld (Incrementa_puntero),a
 357+ 9EF7 18 06            jr 4F
 358+ 9EF9
 359+ 9EF9 3A F0 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EFC 32 EF 8B         ld (Incrementa_puntero),a
 361+ 9EFF C9           4 ret
 362+ 9F00
 363+ 9F00              ; ----------------------------------------------------------------------
 364+ 9F00              ;
 365+ 9F00              ;   30/01/24
 366+ 9F00              ;
 367+ 9F00              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F00
 369+ 9F00 3A B8 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F03 CD 54 94         call Calcula_salto_en_BC
 371+ 9F06 21 E1 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F09 A7               and a
 373+ 9F0A ED 4A            adc hl,bc
 374+ 9F0C C9               ret
 375+ 9F0D
 376+ 9F0D              ; ----------------------------------------------------------------------
 377+ 9F0D              ;
 378+ 9F0D              ;   30/01/24
 379+ 9F0D              ;
 380+ 9F0D              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F0D              ;
 382+ 9F0D              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F0D
 384+ 9F0D 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F0E 23               inc hl
 386+ 9F0F 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F10 69               ld l,c
 388+ 9F11 60               ld h,b
 389+ 9F12 22 C1 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F15 C9               ret
 391+ 9F16
# file closed: Movimiento.asm
2053  9F16              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F16              ; --------------------------------------------------------------------------------------
   2+ 9F16              ;
   3+ 9F16              ;   25/10/24
   4+ 9F16              ;
   5+ 9F16
   6+ 9F16              Pinta_disparos_Entidades
   7+ 9F16
   8+ 9F16 ED 73 05 8C      ld (Stack),sp
   9+ 9F1A ED 7B 17 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F1E
  11+ 9F1E 3E 02            ld a,2
  12+ 9F20 08               ex af,af
  13+ 9F21
  14+ 9F21 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F23              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F23              ;                                     _ No encontraría "0".
  17+ 9F23 FD E1        4 pop iy
  18+ 9F25 D1               pop de                          ; 1er .db IYL
  19+ 9F26              ;                                   ; 2º  .db IYH
  20+ 9F26              ;                                   ; 3er .db E.
  21+ 9F26              ;   Album vacío ???
  22+ 9F26
  23+ 9F26 FD 7D            ld a,iyl
  24+ 9F28 FD 84            add iyh
  25+ 9F2A 83               add e
  26+ 9F2B 28 1F            jr z,1F
  27+ 9F2D
  28+ 9F2D              ;   Imprime album, (contiene datos).
  29+ 9F2D
  30+ 9F2D 3B               dec sp
  31+ 9F2E
  32+ 9F2E E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F2F
  34+ 9F2F              ; Imprime el 1er scanline del disparo.
  35+ 9F2F
  36+ 9F2F FD 7D            ld a,iyl
  37+ 9F31 AE               xor (hl)
  38+ 9F32 77               ld (hl),a
  39+ 9F33
  40+ 9F33 2C               inc l
  41+ 9F34
  42+ 9F34 FD 7C            ld a,iyh
  43+ 9F36 AE               xor (hl)
  44+ 9F37 77               ld (hl),a
  45+ 9F38
  46+ 9F38 2C               inc l
  47+ 9F39
  48+ 9F39 7B               ld a,e
  49+ 9F3A AE               xor (hl)
  50+ 9F3B 77               ld (hl),a
  51+ 9F3C
  52+ 9F3C              ; Imprime el 2º scanline del disparo.
  53+ 9F3C
  54+ 9F3C E1               pop hl
  55+ 9F3D
  56+ 9F3D FD 7D            ld a,iyl
  57+ 9F3F AE               xor (hl)
  58+ 9F40 77               ld (hl),a
  59+ 9F41
  60+ 9F41 2C               inc l
  61+ 9F42
  62+ 9F42 FD 7C            ld a,iyh
  63+ 9F44 AE               xor (hl)
  64+ 9F45 77               ld (hl),a
  65+ 9F46
  66+ 9F46 2C               inc l
  67+ 9F47
  68+ 9F47 7B               ld a,e
  69+ 9F48 AE               xor (hl)
  70+ 9F49 77               ld (hl),a
  71+ 9F4A
  72+ 9F4A 10 D7            djnz 4B
  73+ 9F4C
  74+ 9F4C 08           1 ex af,af
  75+ 9F4D 3D               dec a
  76+ 9F4E 20 05            jr nz,2F
  77+ 9F50
  78+ 9F50 ED 7B 05 8C      ld sp,(Stack)
  79+ 9F54 C9               ret
  80+ 9F55
  81+ 9F55 ED 7B 15 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F59 08               ex af,af
  83+ 9F5A 18 C5            jr 3B
  84+ 9F5C
  85+ 9F5C              ; --------------------------------------------------------------------------------------
  86+ 9F5C              ;
  87+ 9F5C              ;   15/10/24
  88+ 9F5C              ;
  89+ 9F5C
  90+ 9F5C              Motor_de_disparos_entidades
  91+ 9F5C
  92+ 9F5C 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F5F FE 07            cp 7
  94+ 9F61 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F62
  96+ 9F62 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F64 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F67
  99+ 9F67 CD B8 90     1 call Extrae_address
 100+ 9F6A 1C               inc e
 101+ 9F6B 1C               inc e
 102+ 9F6C ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F70
 104+ 9F70               ; Caja vacía ???
 105+ 9F70
 106+ 9F70              ;    inc l
 107+ 9F70
 108+ 9F70 7E               ld a,(hl)
 109+ 9F71 A7               and a
 110+ 9F72 28 29            jr z,3F                                                              ; Caja vacía.
 111+ 9F74
 112+ 9F74              ; --- Trabajamos con caja:
 113+ 9F74
 114+ 9F74 CD B3 9F         call Rota_disparo_si_procede
 115+ 9F77
 116+ 9F77              ; ------------------------------------------------------------
 117+ 9F77
 118+ 9F77 2D               dec l
 119+ 9F78 2D               dec l
 120+ 9F79
 121+ 9F79 CD B8 90         call Extrae_address
 122+ 9F7C
 123+ 9F7C              ;   (Puntero_de_impresion) del disparo en HL.
 124+ 9F7C
 125+ 9F7C 3A 2F 8C         ld a,(Ctrl_5)
 126+ 9F7F CB 57            bit 2,a
 127+ 9F81 28 07            jr z,4F
 128+ 9F83 CB 97            res 2,a
 129+ 9F85 32 2F 8C         ld (Ctrl_5),a
 130+ 9F88
 131+ 9F88 2C               inc l
 132+ 9F89 2C               inc l
 133+ 9F8A
 134+ 9F8A              ;! Velocidad del disparo de entidades.
 135+ 9F8A
 136+ 9F8A CD D1 99     4 call NextScan
 137+ 9F8D CD D1 99         call NextScan
 138+ 9F90
 139+ 9F90              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 140+ 9F90
 141+ 9F90 CD A1 9F         call Fin_de_disparo_de_entidad
 142+ 9F93
 143+ 9F93 EB               ex de,hl
 144+ 9F94
 145+ 9F94 73               ld (hl),e
 146+ 9F95 23               inc hl
 147+ 9F96 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 148+ 9F97
 149+ 9F97 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 150+ 9F9A 18 02            jr 2F
 151+ 9F9C
 152+ 9F9C C9               ret
 153+ 9F9D
 154+ 9F9D EB           3 ex de,hl
 155+ 9F9E 10 C7        2 djnz 1B
 156+ 9FA0
 157+ 9FA0 C9               ret
 158+ 9FA1
 159+ 9FA1              ; ------------- ------------- ------------
 160+ 9FA1              ;
 161+ 9FA1              ;   25/9/24
 162+ 9FA1
 163+ 9FA1              Fin_de_disparo_de_entidad
 164+ 9FA1
 165+ 9FA1 7C               ld a,h
 166+ 9FA2 FE 54            cp $54
 167+ 9FA4 D8               ret c
 168+ 9FA5
 169+ 9FA5 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 170+ 9FA6
 171+ 9FA6 5D               ld e,l
 172+ 9FA7 54               ld d,h
 173+ 9FA8
 174+ 9FA8 21 E0 57         ld hl,$57e0
 175+ 9FAB ED 52            sbc hl,de
 176+ 9FAD
 177+ 9FAD 38 42            jr c,Elimina_disparo_entidad
 178+ 9FAF
 179+ 9FAF 6B               ld l,e
 180+ 9FB0 62               ld h,d
 181+ 9FB1
 182+ 9FB1 D1               pop de
 183+ 9FB2
 184+ 9FB2 C9               ret
 185+ 9FB3
 186+ 9FB3              ; ----------------------------------------------------------
 187+ 9FB3              ;
 188+ 9FB3              ;   08/10/24
 189+ 9FB3
 190+ 9FB3              ;   Estructura de un disparo de entidades.
 191+ 9FB3
 192+ 9FB3              ;   Disparo_1 defw 0								; Puntero objeto.
 193+ 9FB3              ; 	defw 0											; Puntero de impresión.
 194+ 9FB3              ;	defw 0											; Control.
 195+ 9FB3
 196+ 9FB3              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 197+ 9FB3              ;   _de la entidad en el momento de disparar.
 198+ 9FB3
 199+ 9FB3              ;   El byte alto muestra la siguiente información:
 200+ 9FB3              ;
 201+ 9FB3              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 202+ 9FB3              ;                        _antes de desplazarse a derecha/izquierda.
 203+ 9FB3              ;
 204+ 9FB3              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 205+ 9FB3              ;
 206+ 9FB3              ;                        10xx ..... Izquierda.
 207+ 9FB3              ;                        01xx ..... Derecha.
 208+ 9FB3              ;                        00xx ..... Recto.
 209+ 9FB3
 210+ 9FB3              Rota_disparo_si_procede
 211+ 9FB3
 212+ 9FB3              ;   Nos situamos en el byte alto de (Control).
 213+ 9FB3
 214+ 9FB3 CB 76            bit 6,(hl)
 215+ 9FB5 20 03            jr nz,Rotamos_disparo_segun_proceda
 216+ 9FB7 CB 7E            bit 7,(hl)
 217+ 9FB9 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 218+ 9FBA
 219+ 9FBA              Rotamos_disparo_segun_proceda
 220+ 9FBA
 221+ 9FBA E5               push hl
 222+ 9FBB
 223+ 9FBB CB 76            bit 6,(hl)
 224+ 9FBD 20 09            jr nz,Rota_a_derecha
 225+ 9FBF
 226+ 9FBF              Rota_a_izq
 227+ 9FBF
 228+ 9FBF 7D               ld a,l
 229+ 9FC0 D6 06            sub 6
 230+ 9FC2 6F               ld l,a
 231+ 9FC3
 232+ 9FC3 F3               di
 233+ 9FC4 18 FE            jr $
 234+ 9FC6 FB               ei
 235+ 9FC7
 236+ 9FC7 C9               ret
 237+ 9FC8
 238+ 9FC8              Rota_a_derecha
 239+ 9FC8
 240+ 9FC8 7D               ld a,l
 241+ 9FC9 D6 06            sub 6
 242+ 9FCB 6F               ld l,a
 243+ 9FCC
 244+ 9FCC E5               push hl
 245+ 9FCD FD E1            pop iy
 246+ 9FCF
 247+ 9FCF A7               and a
 248+ 9FD0
 249+ 9FD0 FD CB 00 1E      rr (iy+00)
 250+ 9FD4 FD CB 01 1E      rr (iy+01)
 251+ 9FD8 FD CB 02 1E      rr (iy+02)
 252+ 9FDC
 253+ 9FDC 30 11            jr nc,Exit
 254+ 9FDE
 255+ 9FDE              ; Desplazamiento completo hasta Carry.
 256+ 9FDE              ; Modificamos datos e incremento (Puntero_de_impresión).
 257+ 9FDE
 258+ 9FDE FD 36 00 01      ld (iy+00),$01
 259+ 9FE2 FD 36 01 80      ld (iy+01),$80
 260+ 9FE6 FD 36 02 00      ld (iy+02),$00
 261+ 9FEA
 262+ 9FEA 21 2F 8C         ld hl,Ctrl_5
 263+ 9FED CB D6            set 2,(hl)
 264+ 9FEF
 265+ 9FEF E1           Exit pop hl
 266+ 9FF0 C9               ret
 267+ 9FF1
 268+ 9FF1              ; ------------ ----------- ------------
 269+ 9FF1              ;
 270+ 9FF1              ;   25/9/24
 271+ 9FF1
 272+ 9FF1              Elimina_disparo_entidad
 273+ 9FF1
 274+ 9FF1 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 275+ 9FF4 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 276+ 9FF5
 277+ 9FF5 E1               pop hl
 278+ 9FF6 E5               push hl
 279+ 9FF7
 280+ 9FF7 2C               inc l
 281+ 9FF8 2C               inc l
 282+ 9FF9 2C               inc l                                                               ; Sitúa en el 1er .db de la caja.
 283+ 9FFA
 284+ 9FFA CD 02 A0         call Borra_7_bytes
 285+ 9FFD
 286+ 9FFD D1               pop de
 287+ 9FFE
 288+ 9FFE 21 00 00         ld hl,0
 289+ A001
 290+ A001 C9               ret
 291+ A002
 292+ A002              ; ----- ----- ----- ----- -----
 293+ A002
 294+ A002 16 07        Borra_7_bytes ld d,7                                                    ; Contador
 295+ A004 AF               xor a                                                               ; Borrador
 296+ A005 77           1 ld (hl),a
 297+ A006 2D               dec l
 298+ A007 15               dec d
 299+ A008 20 FB            jr nz,1B
 300+ A00A C9               ret
 301+ A00B
 302+ A00B              ; --------------------------------------------------------------------------------------
 303+ A00B              ;
 304+ A00B              ;   12/10/24
 305+ A00B              ;
 306+ A00B
 307+ A00B              Genera_datos_de_impresion_disparos_Entidades
 308+ A00B
 309+ A00B 3E 07            ld a,7
 310+ A00D 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 311+ A00E
 312+ A00E              ; ---------------
 313+ A00E
 314+ A00E              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 315+ A00E
 316+ A00E 21 23 89          ld hl,Indice_de_disparos_entidades
 317+ A011
 318+ A011 CD B8 90     1 call Extrae_address
 319+ A014
 320+ A014 13               inc de
 321+ A015 13               inc de
 322+ A016
 323+ A016 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 324+ A01A
 325+ A01A 7E               ld a,(hl)
 326+ A01B A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 327+ A01C 28 34            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 328+ A01E
 329+ A01E              ; ----- ----- ----- -----
 330+ A01E
 331+ A01E 2D               dec l
 332+ A01F 2D               dec l
 333+ A020
 334+ A020 CD B8 90         call Extrae_address
 335+ A023 E5               push hl
 336+ A024
 337+ A024 1D               dec e
 338+ A025
 339+ A025 EB               ex de,hl
 340+ A026
 341+ A026 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 342+ A027 2D               dec l
 343+ A028 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 344+ A029 2D               dec l
 345+ A02A 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 346+ A02B
 347+ A02B E1               pop hl                                                    ;? Puntero de impresión en HL.
 348+ A02C
 349+ A02C              Genera_scanlines_de_los_disparos_de_entidades.
 350+ A02C
 351+ A02C FD 2A 19 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 352+ A030 FD 73 00         ld (iy+0),e
 353+ A033 FD 70 01         ld (iy+1),b
 354+ A036 FD 71 02         ld (iy+2),c
 355+ A039
 356+ A039 FD 75 03         ld (iy+3),l
 357+ A03C FD 74 04         ld (iy+4),h
 358+ A03F
 359+ A03F CD D1 99         call NextScan
 360+ A042
 361+ A042 FD 75 05         ld (iy+5),l
 362+ A045 FD 74 06         ld (iy+6),h
 363+ A048
 364+ A048 FD E5            push iy
 365+ A04A E1               pop hl
 366+ A04B
 367+ A04B 3E 07            ld a,7
 368+ A04D 85               add l
 369+ A04E 6F               ld l,a
 370+ A04F
 371+ A04F 22 19 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 372+ A052
 373+ A052              ; ----- ----- ----- -----
 374+ A052
 375+ A052              Situa_en_siguiente_caja
 376+ A052
 377+ A052 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 378+ A053 3D               dec a
 379+ A054 C8               ret z
 380+ A055
 381+ A055 08               ex af,af
 382+ A056 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 383+ A059 18 B6            jr 1B
 384+ A05B
 385+ A05B              ; --------------------------------------------------------------------------------------
 386+ A05B              ;
 387+ A05B              ;   12/10/24
 388+ A05B              ;
 389+ A05B
 390+ A05B              Genera_disparo_de_entidad_maldosa
 391+ A05B
 392+ A05B              ;   Estructura de un disparo de entidades.
 393+ A05B
 394+ A05B              ;   Disparo_1 defw 0								; Puntero objeto.
 395+ A05B              ; 	defw 0											; Puntero de impresión.
 396+ A05B              ;	defw 0											; Control.
 397+ A05B
 398+ A05B              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 399+ A05B              ;   _de la entidad en el momento de disparar.
 400+ A05B
 401+ A05B              ;   El byte de control muestra la siguiente información:
 402+ A05B
 403+ A05B              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 404+ A05B              ;
 405+ A05B              ;                        10xx ..... Izquierda.
 406+ A05B              ;                        01xx ..... Derecha.
 407+ A05B              ;                        00xx ..... Recto.
 408+ A05B
 409+ A05B              ;*  Exclusiones.
 410+ A05B
 411+ A05B              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 412+ A05B              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 413+ A05B
 414+ A05B              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 415+ A05B
 416+ A05B 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
 417+ A05E A7               and a
 418+ A05F C8               ret z
 419+ A060
 420+ A060 3A BA 8B         ld a,(Coordenada_y)
 421+ A063 A7               and a
 422+ A064 C8               ret z
 423+ A065
 424+ A065 3D               dec a
 425+ A066 C8               ret z
 426+ A067
 427+ A067 FE 10            cp 16
 428+ A069 D0               ret nc
 429+ A06A
 430+ A06A              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 431+ A06A              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 432+ A06A              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 433+ A06A
 434+ A06A 21 2F 8C         ld hl,Ctrl_5
 435+ A06D CB E6            set 4,(hl)
 436+ A06F
 437+ A06F 21 1F 8C         ld hl,Permiso_de_disparo_Entidades
 438+ A072 35               dec (hl)                                            ; No más disparos en este FRAME.
 439+ A073
 440+ A073              ;   Decrementa el numero de disparos de entidades.
 441+ A073
 442+ A073 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 443+ A076 35               dec (hl)
 444+ A077
 445+ A077 21 23 89         ld hl,Indice_de_disparos_entidades
 446+ A07A
 447+ A07A CD B8 90     1 call Extrae_address
 448+ A07D
 449+ A07D 13               inc de
 450+ A07E 13               inc de
 451+ A07F
 452+ A07F ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 453+ A083
 454+ A083              ;   Comprobamos si la caja está vacía.
 455+ A083
 456+ A083 7E               ld a,(hl)
 457+ A084 A7               and a
 458+ A085 20 1C            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 459+ A087
 460+ A087              ;   Caja vacía, vamos a generar un disparo.
 461+ A087              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 462+ A087
 463+ A087 CD A8 A0         call Genera_byte_inclinacion
 464+ A08A
 465+ A08A 7E               ld a,(hl)
 466+ A08B 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 467+ A08C
 468+ A08C 2D               dec l
 469+ A08D
 470+ A08D CD C4 A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 471+ A090
 472+ A090 70               ld (hl),b
 473+ A091 2D               dec l
 474+ A092 71               ld (hl),c
 475+ A093
 476+ A093 2D               dec l
 477+ A094
 478+ A094              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 479+ A094
 480+ A094 FD 7E 02         ld a,(iy+02)
 481+ A097 77               ld (hl),a
 482+ A098 2D               dec l
 483+ A099
 484+ A099 FD 7E 01         ld a,(iy+01)
 485+ A09C 77               ld (hl),a
 486+ A09D 2D               dec l
 487+ A09E
 488+ A09E FD 7E 00         ld a,(iy+00)
 489+ A0A1 77               ld (hl),a
 490+ A0A2
 491+ A0A2 C9               ret
 492+ A0A3
 493+ A0A3              ;   --- --- ---
 494+ A0A3
 495+ A0A3              Situa_en_siguiente_disparo
 496+ A0A3
 497+ A0A3 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 498+ A0A6 18 D2            jr 1B
 499+ A0A8
 500+ A0A8              ; --------------------------------------------------------------------------------------
 501+ A0A8              ;
 502+ A0A8              ;   09/10/24
 503+ A0A8              ;
 504+ A0A8
 505+ A0A8              Genera_byte_inclinacion
 506+ A0A8
 507+ A0A8              ; Determina tendencia del disparo.
 508+ A0A8
 509+ A0A8 3A 6E 89         ld a,(CX_Amadeus)
 510+ A0AB 47               ld b,a
 511+ A0AC 3A B9 8B         ld a,(Coordenada_X)
 512+ A0AF 90               sub b
 513+ A0B0 38 07            jr c,Disparo_a_derecha
 514+ A0B2
 515+ A0B2 FE 05        Disparo_a_izquierda cp 5
 516+ A0B4
 517+ A0B4 D8               ret c
 518+ A0B5 C8               ret z
 519+ A0B6
 520+ A0B6 CB FE            set 7,(hl)
 521+ A0B8 C9               ret
 522+ A0B9
 523+ A0B9 47           Disparo_a_derecha ld b,a
 524+ A0BA 3E FF            ld a,$ff
 525+ A0BC 90               sub b
 526+ A0BD
 527+ A0BD FE 05            cp 5
 528+ A0BF
 529+ A0BF D8               ret c
 530+ A0C0 C8               ret z
 531+ A0C1
 532+ A0C1 CB F6            set 6,(hl)
 533+ A0C3 C9               ret
 534+ A0C4
 535+ A0C4              ; --------------------------------------------------------------------------------------
 536+ A0C4              ;
 537+ A0C4              ;   09/10/24
 538+ A0C4              ;
 539+ A0C4
 540+ A0C4              Modifica_puntero_de_impresion
 541+ A0C4
 542+ A0C4              ;   Puntero de impresión del disparo en BC.
 543+ A0C4
 544+ A0C4 E5               push hl
 545+ A0C5
 546+ A0C5 2A 32 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 547+ A0C8 CD D1 99         call NextScan
 548+ A0CB
 549+ A0CB 4D               ld c,l
 550+ A0CC 44               ld b,h
 551+ A0CD
 552+ A0CD E1               pop hl
 553+ A0CE
 554+ A0CE 08               ex af,af
 555+ A0CF CB 77            bit 6,a
 556+ A0D1 28 06            jr z,1F
 557+ A0D3
 558+ A0D3 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 559+ A0D7 0C               inc c
 560+ A0D8 C9               ret
 561+ A0D9
 562+ A0D9 CB 7F        1 bit 7,a
 563+ A0DB 28 F6            jr z,2B
 564+ A0DD
 565+ A0DD FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 566+ A0E1 0D               dec c
 567+ A0E2
 568+ A0E2 C9               ret
 569+ A0E3
 570+ A0E3              ; --------------------------------------------------------------------------------------
 571+ A0E3              ;
 572+ A0E3              ;   31/08/24
 573+ A0E3              ;
 574+ A0E3
 575+ A0E3              Compara_con_coordenadas_de_disparo
 576+ A0E3
 577+ A0E3 3A BA 8B         ld a,(Coordenada_y)
 578+ A0E6 47               ld b,a
 579+ A0E7 3A 37 8C         ld a,(Coordenadas_disparo_certero)
 580+ A0EA 90               sub b
 581+ A0EB
 582+ A0EB              ; A = "0" ok
 583+ A0EB              ; A = "1" ok
 584+ A0EB
 585+ A0EB 28 08            jr z,Comprueba_coordenada_X
 586+ A0ED 3D               dec a
 587+ A0EE 28 05            jr z,Comprueba_coordenada_X
 588+ A0F0
 589+ A0F0              ; A = "$ff" ok
 590+ A0F0
 591+ A0F0 FE FE            cp $fe
 592+ A0F2 28 01            jr z,Comprueba_coordenada_X
 593+ A0F4
 594+ A0F4 C9               ret
 595+ A0F5
 596+ A0F5              Comprueba_coordenada_X
 597+ A0F5
 598+ A0F5 3A B9 8B         ld a,(Coordenada_X)
 599+ A0F8 47               ld b,a
 600+ A0F9 21 38 8C         ld hl,Coordenadas_disparo_certero+1
 601+ A0FC 7E               ld a,(hl)
 602+ A0FD 90               sub b
 603+ A0FE
 604+ A0FE              ; A = "0" ok
 605+ A0FE              ; A = "1" ok
 606+ A0FE
 607+ A0FE 28 09            jr z,Activa_Impacto_en_entidad
 608+ A100 3D               dec a
 609+ A101 28 06            jr z,Activa_Impacto_en_entidad
 610+ A103
 611+ A103              ; A = "2" ok
 612+ A103
 613+ A103 3D               dec a
 614+ A104 28 03            jr z,Activa_Impacto_en_entidad
 615+ A106
 616+ A106              ; A = "$ff"
 617+ A106
 618+ A106 FE FD            cp $fd
 619+ A108 C0               ret nz
 620+ A109
 621+ A109              Activa_Impacto_en_entidad
 622+ A109
 623+ A109              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 624+ A109
 625+ A109 3E 02            ld a,2
 626+ A10B 32 BC 8B         ld (Impacto),a
 627+ A10E
 628+ A10E              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 629+ A10E
 630+ A10E 11 C0 87         ld de,Indice_Explosion_entidades
 631+ A111 21 BF 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 632+ A114
 633+ A114 73               ld (hl),e
 634+ A115 23               inc hl
 635+ A116 72               ld (hl),d
 636+ A117
 637+ A117              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 638+ A117
 639+ A117 21 34 8C         ld hl,Impacto2
 640+ A11A CB 9E            res 3,(hl)
 641+ A11C
 642+ A11C C9               ret
 643+ A11D
 644+ A11D              ; --------------------------------------------------------------------------------------
 645+ A11D              ;
 646+ A11D              ;   13/10/24
 647+ A11D              ;
 648+ A11D
 649+ A11D              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 650+ A11D
 651+ A11D              Limpia_album_de_pintado_disparos_Amadeus
 652+ A11D
 653+ A11D 2A 11 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 654+ A120 06 06            ld b,6
 655+ A122 AF               xor a
 656+ A123 77           1 ld (hl),a
 657+ A124 2C               inc l
 658+ A125 10 FC            djnz 1B
 659+ A127
 660+ A127 C9               ret
 661+ A128
 662+ A128              ; --------------------------------------------------------------------------------------
 663+ A128              ;
 664+ A128              ;   29/09/24
 665+ A128              ;
 666+ A128
 667+ A128              Calcula_bytes_pintado_disparos
 668+ A128
 669+ A128 2A 15 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 670+ A12B 45               ld b,l
 671+ A12C 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 672+ A12F 7D               ld a,l
 673+ A130
 674+ A130 90               sub b
 675+ A131 32 1B 8C         ld (Num_de_bytes_album_de_disparos),a
 676+ A134
 677+ A134 C9               ret
 678+ A135
 679+ A135              ; --------------------------------------------------------------------------------------
 680+ A135              ;
 681+ A135              ;   26/10/24
 682+ A135              ;
 683+ A135              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 684+ A135              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 685+ A135              ;   _disparos que el álbum del FRAME actual).
 686+ A135
 687+ A135              Limpia_album_de_pintado_disparos_entidades
 688+ A135
 689+ A135 21 1C 8C         ld hl,Num_de_bytes_album_de_disparos+1
 690+ A138 7E               ld a,(hl)
 691+ A139 2D               dec l
 692+ A13A 46               ld b,(hl)
 693+ A13B 90               sub b
 694+ A13C
 695+ A13C D8               ret c
 696+ A13D C8               ret z
 697+ A13E
 698+ A13E F5               push af
 699+ A13F 80               add b
 700+ A140 77               ld (hl),a
 701+ A141 F1               pop af
 702+ A142
 703+ A142              ; Clean.
 704+ A142
 705+ A142 47           2 ld b,a
 706+ A143 AF               xor a
 707+ A144 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 708+ A147 77           1 ld (hl),a
 709+ A148 23               inc hl
 710+ A149 10 FC            djnz 1B
 711+ A14B
 712+ A14B C9               ret
 713+ A14C
 714+ A14C              ; --------------------------------------------------------------------------------------
 715+ A14C              ;
 716+ A14C              ;   29/09/24
 717+ A14C              ;
 718+ A14C
 719+ A14C              Motor_Disparos_Amadeus
 720+ A14C
 721+ A14C 21 20 89         ld hl,Disparo_Amad+1
 722+ A14F
 723+ A14F 34               inc (hl)
 724+ A150 35               dec (hl)
 725+ A151
 726+ A151 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 727+ A152
 728+ A152              ;   Esta caja contiene un disparo.
 729+ A152
 730+ A152 CD 59 A1         call Consulta_Impacto
 731+ A155 CC 72 A1         call z,Mueve_disparo_Amadeus
 732+ A158
 733+ A158 C9               ret
 734+ A159
 735+ A159              ; ----------------------
 736+ A159              ;
 737+ A159              ;
 738+ A159              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 739+ A159              ;
 740+ A159              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 741+ A159
 742+ A159
 743+ A159              Consulta_Impacto
 744+ A159
 745+ A159              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 746+ A159              ;   _sea lo más coherente posible.
 747+ A159
 748+ A159 E5               push hl
 749+ A15A 2B               dec hl
 750+ A15B CD 4E A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 751+ A15E E1               pop hl
 752+ A15F 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 753+ A160
 754+ A160 C8               ret z
 755+ A161
 756+ A161 3A 34 8C         ld a,(Impacto2)
 757+ A164 CB DF            set 3,a
 758+ A166 32 34 8C         ld (Impacto2),a
 759+ A169
 760+ A169 E5               push hl
 761+ A16A CD 3B A2         call Genera_coordenadas_de_disparo_Amadeus
 762+ A16D E1               pop hl
 763+ A16E CD 8B A1         call Elimina_disparo_Amadeus
 764+ A171
 765+ A171 C9               ret
 766+ A172
 767+ A172              ; ----------------------
 768+ A172              ;
 769+ A172              ;
 770+ A172              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 771+ A172
 772+ A172              Mueve_disparo_Amadeus
 773+ A172
 774+ A172 CD B8 90         call Extrae_address
 775+ A175
 776+ A175 CD E0 99         call PreviousScan
 777+ A178 CD E0 99         call PreviousScan
 778+ A17B CD E0 99         call PreviousScan
 779+ A17E CD E0 99         call PreviousScan
 780+ A181
 781+ A181              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 782+ A181
 783+ A181 7C               ld a,h
 784+ A182 D6 40            sub $40
 785+ A184 EB               ex de,hl
 786+ A185 38 04            jr c,Elimina_disparo_Amadeus
 787+ A187
 788+ A187               ; Introduce nuevo puntero_de_impresión en la caja.
 789+ A187
 790+ A187 73               ld (hl),e
 791+ A188 23               inc hl
 792+ A189 72               ld (hl),d
 793+ A18A
 794+ A18A C9               ret
 795+ A18B
 796+ A18B              ; ----------------------
 797+ A18B              ;
 798+ A18B              ;   29/9/24
 799+ A18B
 800+ A18B              Elimina_disparo_Amadeus
 801+ A18B
 802+ A18B              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 803+ A18B              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 804+ A18B
 805+ A18B              ;   Disparo_1A defw 0									; Puntero objeto.
 806+ A18B              ;   	defw 0											; Puntero de impresión.
 807+ A18B
 808+ A18B 2B               dec hl
 809+ A18C 2B               dec hl
 810+ A18D
 811+ A18D AF               xor a
 812+ A18E 77               ld (hl),a
 813+ A18F 23               inc hl
 814+ A190 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 815+ A191
 816+ A191 23               inc hl
 817+ A192 77               ld (hl),a
 818+ A193 23               inc hl
 819+ A194 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 820+ A195
 821+ A195 3E 01            ld a,1
 822+ A197 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 823+ A19A
 824+ A19A CD 1D A1         call Limpia_album_de_pintado_disparos_Amadeus
 825+ A19D
 826+ A19D AF               xor a
 827+ A19E 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 828+ A19F
 829+ A19F C9               ret
 830+ A1A0
 831+ A1A0              ; --------------------------------------------------------------------------------------
 832+ A1A0              ;
 833+ A1A0              ;   13/10/24
 834+ A1A0              ;
 835+ A1A0
 836+ A1A0              Pinta_disparos_Amadeus
 837+ A1A0
 838+ A1A0 06 02            ld b,2
 839+ A1A2 ED 73 05 8C      ld (Stack),sp
 840+ A1A6 ED 7B 13 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 841+ A1AA D1           3 pop de
 842+ A1AB 14               inc d
 843+ A1AC 15               dec d
 844+ A1AD 28 1C            jr z,1F
 845+ A1AF E1               pop hl
 846+ A1B0
 847+ A1B0              Imprime_scanlines_en_pantalla
 848+ A1B0
 849+ A1B0              ; 1er scanline
 850+ A1B0
 851+ A1B0 1A               ld a,(de)
 852+ A1B1 AE               xor (hl)
 853+ A1B2 77               ld (hl),a
 854+ A1B3
 855+ A1B3 1C               inc e
 856+ A1B4 2C               inc l
 857+ A1B5
 858+ A1B5 1A               ld a,(de)
 859+ A1B6 AE               xor (hl)
 860+ A1B7 77               ld (hl),a
 861+ A1B8
 862+ A1B8 1D               dec e
 863+ A1B9 E1               pop hl
 864+ A1BA
 865+ A1BA              ; 2º scanline
 866+ A1BA
 867+ A1BA 1A               ld a,(de)
 868+ A1BB AE               xor (hl)
 869+ A1BC 77               ld (hl),a
 870+ A1BD
 871+ A1BD 1C               inc e
 872+ A1BE 2C               inc l
 873+ A1BF
 874+ A1BF 1A               ld a,(de)
 875+ A1C0 AE               xor (hl)
 876+ A1C1 77               ld (hl),a
 877+ A1C2
 878+ A1C2 1D               dec e
 879+ A1C3
 880+ A1C3 18 06            jr 1F
 881+ A1C5
 882+ A1C5 ED 7B 11 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 883+ A1C9 18 DF            jr 3B
 884+ A1CB 10 F8        1 djnz 2B
 885+ A1CD ED 7B 05 8C      ld sp,(Stack)
 886+ A1D1 C9               ret
 887+ A1D2
 888+ A1D2              ; --------------------------------------------------------------------------------------
 889+ A1D2              ;
 890+ A1D2              ;   13/10/24
 891+ A1D2              ;
 892+ A1D2              ;   Modifica: HL,BC y DE.
 893+ A1D2
 894+ A1D2
 895+ A1D2              Genera_datos_de_impresion_disparos_Amadeus
 896+ A1D2
 897+ A1D2 ED 73 05 8C      ld (Stack),sp
 898+ A1D6 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 899+ A1D9 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 900+ A1DA
 901+ A1DA 14               inc d                                                     ;? Salimos si no hay disparo.
 902+ A1DB 15               dec d
 903+ A1DC
 904+ A1DC 28 0E            jr z,Salida
 905+ A1DE
 906+ A1DE              Genera_scanlines_de_disparo_Amadeus
 907+ A1DE
 908+ A1DE E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 909+ A1DF              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 910+ A1DF ED 7B 11 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 911+ A1E3
 912+ A1E3 C1               pop bc
 913+ A1E4 C1               pop bc
 914+ A1E5 C1               pop bc
 915+ A1E6
 916+ A1E6 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 917+ A1E7 CD E0 99         call PreviousScan
 918+ A1EA E5               push hl                                                   ;? Sube 1er scanline al álbum.
 919+ A1EB D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 920+ A1EC
 921+ A1EC              Salida
 922+ A1EC
 923+ A1EC ED 7B 05 8C      ld sp,(Stack)
 924+ A1F0
 925+ A1F0 C9               ret
 926+ A1F1
 927+ A1F1              ; --------------------------------------------------------------------------------------
 928+ A1F1              ;
 929+ A1F1              ;   12/09/24
 930+ A1F1              ;
 931+ A1F1
 932+ A1F1              Genera_disparo_Amadeus
 933+ A1F1
 934+ A1F1              ;*  Exclusiones.
 935+ A1F1
 936+ A1F1 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 937+ A1F4 A7               and a
 938+ A1F5 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 939+ A1F6
 940+ A1F6 3D               dec a
 941+ A1F7 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 942+ A1FA
 943+ A1FA              Define_puntero_objeto_disparo
 944+ A1FA
 945+ A1FA              ;   Inicializamos contador.
 946+ A1FA
 947+ A1FA 06 00            ld b,0
 948+ A1FC
 949+ A1FC 2A 72 89         ld hl,(p.imp.amadeus)
 950+ A1FF 2C               inc l
 951+ A200
 952+ A200 3E 80            ld a,$80
 953+ A202 BE               cp (hl)
 954+ A203 28 0D            jr z,1F
 955+ A205
 956+ A205 04               inc b
 957+ A206
 958+ A206 3E 60            ld a,$60
 959+ A208 BE               cp (hl)
 960+ A209 28 07            jr z,1F
 961+ A20B
 962+ A20B
 963+ A20B 04               inc b
 964+ A20C
 965+ A20C 3E 18            ld a,$18
 966+ A20E BE               cp (hl)
 967+ A20F 28 01            jr z,1F
 968+ A211
 969+ A211 04               inc b
 970+ A212
 971+ A212              ;   Calcula el Puntero_de_impresión del disparo.
 972+ A212
 973+ A212              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 974+ A212
 975+ A212 CD E0 99     1 call PreviousScan
 976+ A215
 977+ A215 78               ld a,b
 978+ A216 CB 3F            srl a
 979+ A218 28 03            jr z,4F
 980+ A21A
 981+ A21A              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 982+ A21A E5               push hl
 983+ A21B 18 02            jr 5F
 984+ A21D 2D           4 dec l
 985+ A21E E5               push hl
 986+ A21F              ; ---
 987+ A21F
 988+ A21F              ;   Calcula el Puntero_objeto del disparo.
 989+ A21F
 990+ A21F 21 76 83     5 ld hl,Indice_disparo_Amadeus
 991+ A222 04               inc b
 992+ A223 05               dec b
 993+ A224 28 04            jr z,2F
 994+ A226
 995+ A226              ;   Nos desplazamos por el índice de disparos.
 996+ A226
 997+ A226 2C           3 inc l
 998+ A227 2C               inc l
 999+ A228 10 FC            djnz 3B
1000+ A22A
1001+ A22A              ; --- Guarda el Puntero_objeto del disparo en la pila.
1002+ A22A CD B8 90     2 call Extrae_address
1003+ A22D E5               push hl
1004+ A22E              ; ---
1005+ A22E
1006+ A22E              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1007+ A22E              ; HL en el 1er .db de la caja.
1008+ A22E
1009+ A22E 21 1F 89         ld hl,Disparo_Amad
1010+ A231
1011+ A231 06 02            ld b,2
1012+ A233
1013+ A233 D1           6 pop de
1014+ A234 73               ld (hl),e
1015+ A235 23               inc hl
1016+ A236 72               ld (hl),d
1017+ A237 23               inc hl
1018+ A238
1019+ A238 10 F9            djnz 6B
1020+ A23A
1021+ A23A C9               ret
1022+ A23B
1023+ A23B              Genera_coordenadas_de_disparo_Amadeus
1024+ A23B
1025+ A23B              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1026+ A23B              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1027+ A23B              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1028+ A23B
1029+ A23B CD B8 90         call Extrae_address
1030+ A23E CD D7 94         call Genera_coordenadas
1031+ A241
1032+ A241 3D               dec a
1033+ A242
1034+ A242 21 37 8C         ld hl,Coordenadas_disparo_certero
1035+ A245 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1036+ A246 23               inc hl
1037+ A247 3A B9 8B         ld a,(Coordenada_X)
1038+ A24A 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1039+ A24B
1040+ A24B AF               xor a
1041+ A24C 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1042+ A24D
1043+ A24D C9               ret
1044+ A24E
1045+ A24E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1046+ A24E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1047+ A24E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1048+ A24E
1049+ A24E              ; ----------------------------------------------
1050+ A24E              ;
1051+ A24E              ;   27/08/24
1052+ A24E              ;
1053+ A24E              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1054+ A24E              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1055+ A24E
1056+ A24E              Detecta_impacto_en_disparo_de_Amadeus
1057+ A24E
1058+ A24E              Extraccion_de_datos
1059+ A24E
1060+ A24E 13               inc de
1061+ A24F 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1062+ A250
1063+ A250 5E               ld e,(hl)
1064+ A251 23               inc hl
1065+ A252 56               ld d,(hl)
1066+ A253
1067+ A253 23               inc hl
1068+ A254
1069+ A254 4E               ld c,(hl)
1070+ A255 23               inc hl
1071+ A256 46               ld b,(hl)
1072+ A257
1073+ A257 C5               push bc
1074+ A258 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1075+ A259
1076+ A259              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1077+ A259
1078+ A259 CD E0 99         call PreviousScan
1079+ A25C CD E0 99         call PreviousScan
1080+ A25F
1081+ A25F              Detecta_impacto_
1082+ A25F
1083+ A25F 1A               ld a,(de)
1084+ A260 A6               and (hl)
1085+ A261 C0               ret nz
1086+ A262
1087+ A262 13               inc de
1088+ A263 23               inc hl
1089+ A264
1090+ A264 1A               ld a,(de)
1091+ A265 A6               and (hl)
1092+ A266 C9               ret
1093+ A267
1094+ A267              ; -------------------------------------------------------------------------------------------------------------
1095+ A267              ;
1096+ A267              ;   8/8/24
1097+ A267              ;
1098+ A267              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1099+ A267              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1100+ A267              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1101+ A267              ;
1102+ A267              ;   MODIFICA: HL,DE,BC y A.
1103+ A267              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1104+ A267              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1105+ A267
1106+ A267              Colision_Entidad_Amadeus
1107+ A267
1108+ A267              ; Posible contacto de entidad con Amadeus. ?????
1109+ A267
1110+ A267              ; Exclusiones:
1111+ A267
1112+ A267 3A 57 8C         ld a,(Shield)
1113+ A26A A7               and a
1114+ A26B C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1115+ A26C
1116+ A26C 21 2D 8C         ld hl,Ctrl_3
1117+ A26F CB 76            bit 6,(hl)
1118+ A271 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1119+ A272
1120+ A272 21 34 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1121+ A275 CB 56            bit 2,(hl)
1122+ A277 C0               ret nz
1123+ A278
1124+ A278 3A BA 8B     	ld a,(Coordenada_y)
1125+ A27B FE 14        	cp $14
1126+ A27D D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1127+ A27E
1128+ A27E 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1129+ A281 A7               and a
1130+ A282 C0               ret nz
1131+ A283
1132+ A283              Genera_coordenadas_X
1133+ A283
1134+ A283              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1135+ A283              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1136+ A283
1137+ A283              ;   Limpiamos almacenes.
1138+ A283
1139+ A283              ;    call Limpia_Coordenadas_X
1140+ A283
1141+ A283              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1142+ A283
1143+ A283 21 39 8C         ld hl,Coordenadas_X_Entidad
1144+ A286 3A B9 8B         ld a,(Coordenada_X)
1145+ A289 CD AB A2         call Guarda_coordenadas_X
1146+ A28C
1147+ A28C              ;   Almacenamos las coordenadas X de Amadeus.
1148+ A28C
1149+ A28C 3A 6E 89         ld a,(CX_Amadeus)
1150+ A28F CD AB A2         call Guarda_coordenadas_X
1151+ A292 CD BF A2         call Compara_coordenadas_X
1152+ A295 C0               ret nz
1153+ A296
1154+ A296 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1155+ A298 32 BC 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1156+ A29B
1157+ A29B 2A F8 8B         ld hl,(Puntero_store_caja)
1158+ A29E 2C               inc l
1159+ A29F 2C               inc l
1160+ A2A0 2C               inc l
1161+ A2A1 2C               inc l
1162+ A2A2 22 35 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1163+ A2A5
1164+ A2A5 21 34 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1165+ A2A8 CB D6            set 2,(hl)
1166+ A2AA
1167+ A2AA C9               ret
1168+ A2AB
1169+ A2AB               ; ----- ----- ----- ----- -----
1170+ A2AB
1171+ A2AB 77           Guarda_coordenadas_X ld (hl),a
1172+ A2AC 3C               inc a
1173+ A2AD 2C               inc l
1174+ A2AE 77               ld (hl),a
1175+ A2AF 3C               inc a
1176+ A2B0 2C               inc l
1177+ A2B1 77               ld (hl),a
1178+ A2B2 2C               inc l
1179+ A2B3 C9               ret
1180+ A2B4
1181+ A2B4 AF           Limpia_Coordenadas_X xor a
1182+ A2B5 06 06            ld b,6
1183+ A2B7 21 3C 8C         ld hl,Coordenadas_X_Amadeus
1184+ A2BA 77           1 ld (hl),a
1185+ A2BB 23               inc hl
1186+ A2BC 10 FC            djnz 1B
1187+ A2BE C9               ret
1188+ A2BF
1189+ A2BF              ; ----- ----- ----- ----- -----
1190+ A2BF
1191+ A2BF              Compara_coordenadas_X
1192+ A2BF
1193+ A2BF DD 21 39 8C      ld ix,Coordenadas_X_Entidad
1194+ A2C3 DD 7E 00         ld a,(ix+0)
1195+ A2C6 CD D4 A2         call Comparando
1196+ A2C9 C8               ret z
1197+ A2CA
1198+ A2CA 3C               inc a
1199+ A2CB CD E3 A2         call Comparando_1
1200+ A2CE C8               ret z
1201+ A2CF
1202+ A2CF 3C               inc a
1203+ A2D0 CD E3 A2         call Comparando_1
1204+ A2D3 C9               ret
1205+ A2D4
1206+ A2D4              ; ----- ----- ----- ----- -----
1207+ A2D4              ;
1208+ A2D4              ;   4/12/23
1209+ A2D4              ;
1210+ A2D4              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1211+ A2D4
1212+ A2D4              Comparando
1213+ A2D4
1214+ A2D4 DD 2C            inc ixl
1215+ A2D6 DD 2C            inc ixl
1216+ A2D8 DD 2C            inc ixl
1217+ A2DA
1218+ A2DA DD 46 00         ld b,(ix+0)
1219+ A2DD DD 4E 01         ld c,(ix+1)
1220+ A2E0 DD 56 02         ld d,(ix+2)
1221+ A2E3
1222+ A2E3 B8           Comparando_1 cp b
1223+ A2E4 C8               ret z
1224+ A2E5 B9               cp c
1225+ A2E6 C8               ret z
1226+ A2E7 BA               cp d
1227+ A2E8 C9               ret
1228+ A2E9
1229+ A2E9              ; -----------------------------------------------------------------------
1230+ A2E9              ;
1231+ A2E9              ;   04/7/24
1232+ A2E9              ;
1233+ A2E9
1234+ A2E9              Detecta_colision_nave_entidad
1235+ A2E9
1236+ A2E9              ; Exclusiones:
1237+ A2E9
1238+ A2E9              ; Salimos de la rutina si no hay advertencia de posible colisión.
1239+ A2E9
1240+ A2E9 21 34 8C     	ld hl,Impacto2
1241+ A2EC CB 56        	bit 2,(hl)
1242+ A2EE C8           	ret z
1243+ A2EF
1244+ A2EF              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1245+ A2EF
1246+ A2EF 2A 74 89         ld hl,(Pamm_Amadeus)
1247+ A2F2 CD B8 90         call Extrae_address
1248+ A2F5 54               ld d,h
1249+ A2F6 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1250+ A2F7
1251+ A2F7 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1252+ A2FA 06 10            ld b,16                                        ; Contador de scanlines en B.
1253+ A2FC FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1254+ A2FF
1255+ A2FF C5           1 push bc
1256+ A300 06 03            ld b,3
1257+ A302 E5               push hl
1258+ A303
1259+ A303              ; .db
1260+ A303
1261+ A303 1A           3 ld a,(de)
1262+ A304 A7               and a
1263+ A305 20 03            jr nz,4F
1264+ A307
1265+ A307 2C               inc l
1266+ A308 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1267+ A30A
1268+ A30A ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1269+ A30C 28 04            jr z,2F
1270+ A30E
1271+ A30E              ; Impacto.
1272+ A30E FD 2D            dec iyl
1273+ A310 28 22            jr z,5F
1274+ A312
1275+ A312 1C           2 inc e
1276+ A313 10 EE            djnz 3B
1277+ A315
1278+ A315 E1               pop hl
1279+ A316
1280+ A316              ; Hay salto de línea en el puntero de impresión ???
1281+ A316
1282+ A316 7C               ld a,h
1283+ A317 D6 57            sub $57
1284+ A319 20 0A            jr nz,6F
1285+ A31B
1286+ A31B              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1287+ A31B
1288+ A31B 2A 72 89         ld hl,(p.imp.amadeus)
1289+ A31E 3E 20            ld a,$20
1290+ A320 A7               and a
1291+ A321 85               add l
1292+ A322 6F               ld l,a
1293+ A323 18 01            jr 7F
1294+ A325
1295+ A325 24           6 inc h
1296+ A326
1297+ A326 C1           7 pop bc
1298+ A327 10 D6            djnz 1B
1299+ A329
1300+ A329              ;   Fin de la comparativa.
1301+ A329
1302+ A329              ;   NO HAY COLISIÓN !!!!!.
1303+ A329              ;
1304+ A329              ;   .db (Impacto) de Amadeus a "0".
1305+ A329              ;   RES el bit2 de (Impacto2).
1306+ A329              ;
1307+ A329              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1308+ A329              ;   Lo colocamos a "0".
1309+ A329
1310+ A329 21 34 8C         ld hl,Impacto2
1311+ A32C CB 96            res 2,(hl)
1312+ A32E 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)
1313+ A331 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1314+ A333 C9               ret
1315+ A334
1316+ A334              ;   COLISIÓN !!!!!.
1317+ A334              ;
1318+ A334              ;   .db (Impacto) de Amadeus a "1".
1319+ A334              ;   SET el bit3 de (Impacto2).
1320+ A334              ;
1321+ A334              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1322+ A334
1323+ A334 E1           5 pop hl
1324+ A335 C1               pop bc
1325+ A336
1326+ A336 21 71 89         ld hl,Impacto_Amadeus
1327+ A339 36 01            ld (hl),1
1328+ A33B 21 34 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1329+ A33E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1330+ A340
1331+ A340 11 C0 87         ld de,Indice_Explosion_entidades
1332+ A343 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1333+ A346
1334+ A346 23               inc hl
1335+ A347 23               inc hl
1336+ A348 23               inc hl
1337+ A349
1338+ A349 73               ld (hl),e
1339+ A34A 23               inc hl
1340+ A34B 72               ld (hl),d
1341+ A34C
1342+ A34C              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1343+ A34C
1344+ A34C 11 60 88         ld de,Indice_Explosion_Amadeus
1345+ A34F 21 74 89         ld hl,Pamm_Amadeus
1346+ A352
1347+ A352 73               ld (hl),e
1348+ A353 23               inc hl
1349+ A354 72               ld (hl),d
1350+ A355
1351+ A355 C9               ret
1352+ A356
1353+ A356
1354+ A356
# file closed: Disparo.asm
2054  A356
2055  A356              	SAVESNA "Pruebas.sna", START
2056  A356
2057  A356
2058  A356
2059  A356
# file closed: Banco_de_pruebas.asm
