# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 11 8B  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A 1D 8B     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 10        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 0C        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24              ;! Debugg!!!!!!!
  44  AA24
  45  AA24              ;	ld a,(Contador_de_frames_2)
  46  AA24              ;	cp $03
  47  AA24              ;	jr nz,2F
  48  AA24              ;	ld a,(Contador_de_frames)
  49  AA24              ;	cp $58
  50  AA24              ;	jr z,$
  51  AA24
  52  AA24              ; Borramos:
  53  AA24
  54  AA24 CD 63 9C     	call Pinta_Sprites
  55  AA27
  56  AA27              ; Pintamos:
  57  AA27
  58  AA27 2A 13 8B     	ld hl,(Album_de_pintado)
  59  AA2A 22 1B 8B     	ld (Scanlines_album_SP),hl
  60  AA2D
  61  AA2D CD 63 9C     	call Pinta_Sprites
  62  AA30
  63  AA30              ;	ld a,6
  64  AA30              ;	out ($fe),a
  65  AA30              ;	call Pinta_Amadeus										; Borde amarillo.
  66  AA30
  67  AA30              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  68  AA30              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  69  AA30
  70  AA30              ;	ld a,7
  71  AA30              ;	out ($fe),a												; Borde blanco.
  72  AA30              ;	call Guarda_parametros_DRAW
  73  AA30              ;	call Restore_Amadeus
  74  AA30
  75  AA30              ; Posible colisión Entidad-Amadeus ???
  76  AA30
  77  AA30              ;	ld a,(Impacto2)
  78  AA30              ;	bit 2,a
  79  AA30              ;	jr z,1F
  80  AA30
  81  AA30              ;	call Detecta_colision_nave_entidad
  82  AA30
  83  AA30              ;1 ld a,4
  84  AA30              ;	out ($fe),a
  85  AA30              ;	call Gestiona_Amadeus
  86  AA30
  87  AA30              ;	ld a,7
  88  AA30              ;	out ($fe),a											; Borde blanco.
  89  AA30              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  90  AA30              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  91  AA30
  92  AA30              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  93  AA30
  94  AA30              ;	call Recupera_parametros_DRAW
  95  AA30
  96  AA30 CD 81 8D     1 call Actualiza_relojes
  97  AA33
  98  AA33 21 1D 8B     	ld hl,Ctrl_3
  99  AA36 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 100  AA38 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 101  AA3A
 102  AA3A FD E1        	pop iy
 103  AA3C DD E1        	pop ix
 104  AA3E F1           	pop af
 105  AA3F C1           	pop bc
 106  AA40 D1           	pop de
 107  AA41 E1           	pop hl
 108  AA42 D9           	exx
 109  AA43 C1           	pop bc
 110  AA44 D1           	pop de
 111  AA45 E1           	pop hl
 112  AA46 08           	ex af,af'
 113  AA47 F1           	pop af
 114  AA48 08           	ex af,af'
 115  AA49 D9           	exx
 116  AA4A
 117  AA4A ED 7B 11 8B  	ld sp,(Stack_3)
 118  AA4E
 119  AA4E FB           	ei
 120  AA4F
 121  AA4F 3E 01        	ld a,1												; Borde azul.
 122  AA51 D3 FE        	out ($fe),a
 123  AA53
 124  AA53 C9           	ret
 125  AA54
 126  AA54              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 127  AA54
 128  AA54              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA54              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA54              ;
   3+ AA54              ;	17/02/23
   4+ AA54              ;
   5+ AA54              ;	Sprites e índices.
   6+ AA54
   7+ AA54              	org $8319
   8+ 8319
   9+ 8319              ; Disparo.
  10+ 8319
  11+ 8319 21 83        Indice_disparo defw Disparo_0
  12+ 831B 27 83        	defw Disparo_f9
  13+ 831D 2D 83        	defw Disparo_fb
  14+ 831F 33 83        	defw Disparo_fd
  15+ 8321
  16+ 8321              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8321 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8325 01 80
  18+ 8327              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8327 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 832B 00 60
  20+ 832D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 832D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8331 18 00
  22+ 8333              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8333 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8337 06 00
  24+ 8339
  25+ 8339              ; ----------------------------------------------------------------------------------------
  26+ 8339
  27+ 8339              ; Badsat_izq. 2x2.
  28+ 8339
  29+ 8339 49 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 833B C0 84        	defw Badsat_izq_fe
  31+ 833D 90 84        	defw Badsat_izq_fd
  32+ 833F 60 84        	defw Badsat_izq_fc
  33+ 8341 30 84        	defw Badsat_izq_fb
  34+ 8343 00 84        	defw Badsat_izq_fa
  35+ 8345 A9 83        	defw Badsat_izq_f9
  36+ 8347 79 83        	defw Badsat_izq_f8
  37+ 8349
  38+ 8349 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 834C 02 14 00     	DEFB 	$02,$14,$00
  40+ 834F 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8352 02 55 00     	DEFB 	$02,$55,$00
  42+ 8355 02 AA 00     	DEFB	$02,$AA,$00
  43+ 8358 02 54 00     	DEFB 	$02,$54,$00
  44+ 835B 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 835E 03 60 00     	DEFB 	$03,$60,$00
  46+ 8361 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 8364 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 8367 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 836A 54 40 00     	DEFB 	$54,$40,$00
  50+ 836D AA 60 00     	DEFB	$AA,$60,$00
  51+ 8370 54 00 00     	DEFB 	$54,$00,$00
  52+ 8373 28 00 00     	DEFB 	$28,$00,$00
  53+ 8376 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8379
  55+ 8379 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 837D 0A 00 01 15
  56+ 8381 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 8385 01 55 00 01
  57+ 8389 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 838D 00 01 B0 00
  58+ 8391 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 8395 FC 00 15 F4
  59+ 8399 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 839D 55 30 00 2A
  60+ 83A1 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83A5 00 08 00 00
  61+ 83A9
  62+ 83A9 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 83AD 85 00 00 8A
  63+ 83B1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 83B5 00 AA 80 00
  64+ 83B9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 83BD 00 00 D8 00
  65+ 83C1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 83C5 FE 00 0A FA
  66+ 83C9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 83CD 2A 98 00 15
  67+ 83D1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 83D5 00 04 00 00
  68+ 83D9
  69+ 83D9
  70+ 83D9              ;! 23 bytes libres aquí !!!!!
  71+ 83D9
  72+ 83D9              	org $8400
  73+ 8400
  74+ 8400 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8404 42 80 00 45
  75+ 8408 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 840C 00 55 40 00
  76+ 8410 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8414 00 00 6C 00
  77+ 8418 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 841C FF 00 05 7D
  78+ 8420 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8424 15 4C 00 0A
  79+ 8428 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 842C 00 02 00 00
  80+ 8430
  81+ 8430 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8434 21 40 00 22
  82+ 8438 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 843C 00 2A A0 00
  83+ 8440 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8444 80 00 36 00
  84+ 8448 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 844C 7F 80 02 BE
  85+ 8450 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8454 0A A6 00 05
  86+ 8458 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 845C 00 01 00 00
  87+ 8460
  88+ 8460 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8464 10 A0 00 11
  89+ 8468 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 846C 00 15 50 00
  90+ 8470 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8474 40 00 1B 00
  91+ 8478 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 847C BF C0 01 5F
  92+ 8480 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8484 05 53 00 02
  93+ 8488 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 848C 00 00 80 00
  94+ 8490
  95+ 8490 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8494 08 50 00 08
  96+ 8498 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 849C 00 0A A8 00
  97+ 84A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 84A4 A0 00 0D 80
  98+ 84A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 84AC 5F F8 00 AF
  99+ 84B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 84B4 02 A9 00 01
 100+ 84B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 84BC 00 00 40 00
 101+ 84C0
 102+ 84C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 84C4 04 28 00 04
 103+ 84C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 84CC 00 05 54 00
 104+ 84D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 84D4 D0 00 06 C0
 105+ 84D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 84DC 2F FC 00 57
 106+ 84E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 84E4 01 54 80 00
 107+ 84E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 84EC 00 00 20 00
 108+ 84F0
 109+ 84F0
 110+ 84F0 00 85        Indice_Badsat_der defw Badsat_derecha
 111+ 84F2 30 85        	defw Badsat_der_f8
 112+ 84F4 60 85        	defw Badsat_der_f9
 113+ 84F6 90 85        	defw Badsat_der_fa
 114+ 84F8 C0 85        	defw Badsat_der_fb
 115+ 84FA 00 86        	defw Badsat_der_fc
 116+ 84FC 30 86        	defw Badsat_der_fd
 117+ 84FE 60 86        	defw Badsat_der_fe
 118+ 8500
 119+ 8500 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8503 28 40 00     	DEFB    $28,$40,$00
 121+ 8506 54 40 00     	DEFB	$54,$40,$00
 122+ 8509 AA 40 00     	DEFB	$AA,$40,$00
 123+ 850C 55 40 00     	DEFB	$55,$40,$00
 124+ 850F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8512 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8515 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8518 07 50 00     	DEFB	$07,$50,$00
 128+ 851B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 851E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8521 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8524 06 55 00     	DEFB	$06,$55,$00
 132+ 8527 00 2A 00     	DEFB	$00,$2A,$00
 133+ 852A 00 14 00     	DEFB	$00,$14,$00
 134+ 852D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8530
 136+ 8530 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8534 20 00 2A 20
 137+ 8538 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 853C 2A A0 00 15
 138+ 8540 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8544 00 03 60 00
 139+ 8548 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 854C F4 00 0B EA
 140+ 8550 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8554 03 2A 80 00
 141+ 8558 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 855C 00 00 04 00
 142+ 8560
 143+ 8560 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8564 10 00 15 10
 144+ 8568 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 856C 15 50 00 0A
 145+ 8570 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8574 80 01 B0 00
 146+ 8578 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 857C FA 00 05 F5
 147+ 8580 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8584 01 95 40 00
 148+ 8588 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 858C 00 00 02 00
 149+ 8590
 150+ 8590 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8594 08 00 0A 88
 151+ 8598 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 859C 0A A8 00 05
 152+ 85A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 85A4 C0 00 D8 00
 153+ 85A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 85AC FD 00 02 FA
 154+ 85B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 85B4 00 CA A0 00
 155+ 85B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 85BC 80 00 01 00
 156+ 85C0
 157+ 85C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 85C4 84 00 05 44
 158+ 85C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 85CC 05 54 00 02
 159+ 85D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 85D4 E0 00 6C 00
 160+ 85D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 85DC FE 80 01 7D
 161+ 85E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 85E4 00 65 50 00
 162+ 85E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 85EC 40 00 00 80
 163+ 85F0
 164+ 85F0              ;! 16 bytes libres aquí !!!!!
 165+ 85F0
 166+ 85F0              	org $8600
 167+ 8600
 168+ 8600 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8604 42 00 02 A2
 169+ 8608 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 860C 02 AA 00 01
 170+ 8610 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8614 F0 00 36 00
 171+ 8618 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 861C FF 40 00 BE
 172+ 8620 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8624 00 32 A8 00
 173+ 8628 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 862C A0 00 00 40
 174+ 8630
 175+ 8630 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8634 A1 00 01 51
 176+ 8638 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 863C 01 55 00 00
 177+ 8640 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8644 F8 00 1B 00
 178+ 8648 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 864C FF A0 00 1F
 179+ 8650 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8654 00 09 54 00
 180+ 8658 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 865C 50 00 00 20
 181+ 8660
 182+ 8660 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8664 50 80 00 A8
 183+ 8668 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 866C 00 AA 80 00
 184+ 8670 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8674 FC 00 0D 80
 185+ 8678 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 867C FF D0 00 0F
 186+ 8680 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8684 00 04 AA 00
 187+ 8688 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 868C 28 00 00 10
 188+ 8690
 189+ 8690              ; ----------------------------------------------------------------------------------------
 190+ 8690
 191+ 8690              ; Amadeus. 2x2.
 192+ 8690
 193+ 8690              	org $8119
 194+ 8119
 195+ 8119 39 81        Indice_Amadeus_der defw Amadeus
 196+ 811B 00 00        	defw 0
 197+ 811D 59 81        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 811F 00 00        	defw 0
 199+ 8121 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 8123 00 00        	defw 0
 201+ 8125 B9 81        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 8127 00 00        	defw 0	 								; (Fín de índice).
 203+ 8129
 204+ 8129 39 81        Indice_Amadeus_izq defw Amadeus
 205+ 812B 00 00        	defw 0
 206+ 812D B9 81        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 812F 00 00        	defw 0
 208+ 8131 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 8133 00 00        	defw 0
 210+ 8135 59 81        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 8137 00 00        	defw 0	 								; (Fín de índice).
 212+ 8139
 213+ 8139 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 813D 26 64 24 24
 214+ 8141 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 8145 6F F6 67 E6
 215+ 8149 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 814D F7 EF FF FF
 216+ 8151 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 8155 8B D1 71 8E
 217+ 8159
 218+ 8159 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 815D F1 00 09 99
 219+ 8161 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 8165 0B 0D 00 1B
 220+ 8169 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 816D 80 19 F9 80
 221+ 8171 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 8175 F3 C0 3D FB
 222+ 8179 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 817D 3E F7 C0 3E
 223+ 8181 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 8185 40 1C 63 80
 224+ 8189
 225+ 8189 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 818D 3C 40 02 66
 226+ 8191 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 8195 02 C3 40 06
 227+ 8199 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 819D 60 06 7E 60
 228+ 81A1 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 81A5 3C F0 0F 7E
 229+ 81A9 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 81AD 0F BD F0 0F
 230+ 81B1 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 81B5 10 07 18 E0
 231+ 81B9
 232+ 81B9 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 81BD 8F 10 00 99
 233+ 81C1 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 81C5 00 B0 D0 01
 234+ 81C9 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 81CD D8 01 9F 98
 235+ 81D1 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 81D5 CF 3C 03 DF
 236+ 81D9 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 81DD 03 EF 7C 03
 237+ 81E1 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 81E5 44 01 C6 38
 238+ 81E9
 239+ 81E9              ; ----------------------------------------------------------------------------------------
 240+ 81E9
 241+ 81E9              	org $8690
 242+ 8690
 243+ 8690 96 86        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8692 C6 86        	defw Explosion_2x3_2
 245+ 8694 F6 86        	defw Explosion_2x3_3
 246+ 8696
 247+ 8696 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 869A 10 00 04 38
 248+ 869E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 86A2 02 E6 80 01
 249+ 86A6 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 86AA 00 03 DD 80
 250+ 86AE 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 86B2 3B 80 01 9D
 251+ 86B6 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 86BA 02 FD 80 03
 252+ 86BE 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 86C2 00 08 00 00
 253+ 86C6
 254+ 86C6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 86CA 38 10 03 BC
 255+ 86CE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 86D2 04 06 C0 00
 256+ 86D6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 86DA 00 03 DD 80
 257+ 86DE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 86E2 3A 70 01 9C
 258+ 86E6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 86EA 04 F8 80 06
 259+ 86EE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 86F2 00 00 00 00
 260+ 86F6
 261+ 86F6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 86FA 00 20 08 00
 262+ 86FE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 8702 00 06 00 00
 263+ 8706 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 870A 00 00 14 30
 264+ 870E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 8712 38 00 01 08
 265+ 8716 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 871A 00 80 00 04
 266+ 871E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 8722 10 08 00 20
 267+ 8726
 268+ 8726              ; ------------------------------------------
 269+ 8726
 270+ 8726 2C 87        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 8728 4C 87        	defw Explosion_2x2_2
 272+ 872A 6C 87        	defw Explosion_2x2_3
 273+ 872C
 274+ 872C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8730 43 84 37 D8
 275+ 8734 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8738 17 F0 3D D8
 276+ 873C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8740 19 D0 1F 60
 277+ 8744 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8748 40 00 80 00
 278+ 874C
 279+ 874C
 280+ 874C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8750 3B C2 60 0C
 281+ 8754 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8758 07 F0 3D D8
 282+ 875C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8760 19 C6 1F 64
 283+ 8764 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8768 80 00 00 00
 284+ 876C
 285+ 876C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8770 88 04 10 0C
 286+ 8774 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8778 81 E0 01 43
 287+ 877C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8780 10 80 18 00
 288+ 8784 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8788 60 01 80 02
 289+ 878C
 290+ 878C
 291+ 878C
 292+ 878C
 293+ 878C
# file closed: Sprites_e_indices.asm
 129  878C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 878C
   2+ 878C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 878C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 878C
   5+ 878C              ; 19/01/24
   6+ 878C
   7+ 878C FB 88        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 878E              ;	defw ...
   9+ 878E              ; 	defw ...
  10+ 878E 00 00        	defw 0
  11+ 8790
  12+ 8790              ; Control. %00000001 00000001
  13+ 8790              ;
  14+ 8790              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8790              ;                    _ hacen las entidades hacia abajo.
  16+ 8790              ;
  17+ 8790              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8790
  19+ 8790 96 87        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8792 9E 87        	defw Disparo_2A
  21+ 8794 A6 87        	defw Disparo_3A
  22+ 8796
  23+ 8796 00 00        Disparo_1A defw 0									; Control.
  24+ 8798 00 00        	defw 0											; Puntero objeto.
  25+ 879A 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 879C 00 00        	defw 0											; Rutina de impresión.
  27+ 879E
  28+ 879E 00 00        Disparo_2A defw 0									; Control.
  29+ 87A0 00 00        	defw 0											; Puntero objeto.
  30+ 87A2 00 00        	defw 0											; Puntero de impresión.
  31+ 87A4 00 00        	defw 0											; Rutina de impresión.
  32+ 87A6
  33+ 87A6 00 00        Disparo_3A defw 0
  34+ 87A8
  35+ 87A8 BE 87        Indice_de_disparos_entidades defw Disparo_1
  36+ 87AA C6 87        	defw Disparo_2
  37+ 87AC CE 87        	defw Disparo_3
  38+ 87AE D6 87        	defw Disparo_4
  39+ 87B0 DE 87        	defw Disparo_5
  40+ 87B2 E6 87        	defw Disparo_6
  41+ 87B4 EE 87        	defw Disparo_7
  42+ 87B6 F6 87        	defw Disparo_8
  43+ 87B8 FE 87        	defw Disparo_9
  44+ 87BA 06 88        	defw Disparo_10
  45+ 87BC 0E 88        	defw Disparo_11
  46+ 87BE
  47+ 87BE 00 00        Disparo_1 defw 0									; Control.
  48+ 87C0 00 00        	defw 0											; Puntero objeto.
  49+ 87C2 00 00        	defw 0											; Puntero de impresión.
  50+ 87C4 00 00        	defw 0											; Rutina de impresión.
  51+ 87C6
  52+ 87C6 00 00        Disparo_2 defw 0									; Control.
  53+ 87C8 00 00        	defw 0											; Puntero objeto.
  54+ 87CA 00 00        	defw 0											; Puntero de impresión.
  55+ 87CC 00 00        	defw 0											; Rutina de impresión.
  56+ 87CE
  57+ 87CE 00 00        Disparo_3 defw 0									; Control.
  58+ 87D0 00 00        	defw 0											; Puntero objeto.
  59+ 87D2 00 00        	defw 0											; Puntero de impresión.
  60+ 87D4 00 00        	defw 0											; Rutina de impresión.
  61+ 87D6
  62+ 87D6 00 00        Disparo_4 defw 0									; Control.
  63+ 87D8 00 00        	defw 0											; Puntero objeto.
  64+ 87DA 00 00        	defw 0											; Puntero de impresión.
  65+ 87DC 00 00        	defw 0											; Rutina de impresión.
  66+ 87DE
  67+ 87DE 00 00        Disparo_5 defw 0									; Control.
  68+ 87E0 00 00        	defw 0											; Puntero objeto.
  69+ 87E2 00 00        	defw 0											; Puntero de impresión.
  70+ 87E4 00 00        	defw 0											; Rutina de impresión.
  71+ 87E6
  72+ 87E6 00 00        Disparo_6 defw 0									; Control.
  73+ 87E8 00 00        	defw 0											; Puntero objeto.
  74+ 87EA 00 00        	defw 0											; Puntero de impresión.
  75+ 87EC 00 00        	defw 0											; Rutina de impresión.
  76+ 87EE
  77+ 87EE 00 00        Disparo_7 defw 0									; Control.
  78+ 87F0 00 00        	defw 0											; Puntero objeto.
  79+ 87F2 00 00        	defw 0											; Puntero de impresión.
  80+ 87F4 00 00        	defw 0											; Rutina de impresión.
  81+ 87F6
  82+ 87F6 00 00        Disparo_8 defw 0									; Control.
  83+ 87F8 00 00        	defw 0											; Puntero objeto.
  84+ 87FA 00 00        	defw 0											; Puntero de impresión.
  85+ 87FC 00 00        	defw 0											; Rutina de impresión.
  86+ 87FE
  87+ 87FE 00 00        Disparo_9 defw 0									; Control.
  88+ 8800 00 00        	defw 0											; Puntero objeto.
  89+ 8802 00 00        	defw 0											; Puntero de impresión.
  90+ 8804 00 00        	defw 0											; Rutina de impresión.
  91+ 8806
  92+ 8806 00 00        Disparo_10 defw 0									; Control.
  93+ 8808 00 00        	defw 0											; Puntero objeto.
  94+ 880A 00 00        	defw 0											; Puntero de impresión.
  95+ 880C 00 00        	defw 0											; Rutina de impresión.
  96+ 880E
  97+ 880E 00 00        Disparo_11 defw 0
  98+ 8810
  99+ 8810              ; -------------------------------------------------------------------------------------
 100+ 8810              ;
 101+ 8810              ;	Índice de cajas de entidades.
 102+ 8810              ;
 103+ 8810              ;	18/1/24
 104+ 8810              ;
 105+ 8810
 106+ 8810              Indice_de_cajas_de_entidades
 107+ 8810
 108+ 8810 58 88        	defw Caja_1
 109+ 8812 6B 88        	defw Caja_2
 110+ 8814 7E 88        	defw Caja_3
 111+ 8816 91 88        	defw Caja_4
 112+ 8818 A4 88        	defw Caja_5
 113+ 881A B7 88        	defw Caja_6
 114+ 881C CA 88        	defw Caja_7
 115+ 881E
 116+ 881E 00 00        	defw 0
 117+ 8820 00 00        	defw 0
 118+ 8822
 119+ 8822              ; ---------- ---------- ---------- ---------- ----------
 120+ 8822
 121+ 8822 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8825 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8827 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8829 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 882B
 126+ 882B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 882C 05           	db %00000101										; (Attr).
 128+ 882D 19 81        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 882F 29 81        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8831 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8833 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8835 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8837 04           	db 4 												; (Cuad_objeto).
 134+ 8838 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8839 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 883F
 137+ 883F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8841
 139+ 8841              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8841 00 00        	defw 0
 141+ 8843
 142+ 8843 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8845 40           	db $40												; (Ctrl_0).
 144+ 8846 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 884A 00 00
 145+ 884C 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 884F 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8851 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8852 00           	db 0 												; (Columnas).
 149+ 8853 00 00        	defw 0												; (Limite_horizontal).
 150+ 8855 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 8858
 152+ 8858              ; ---------- ---------- ---------- ---------- ----------
 153+ 8858              ;
 154+ 8858              ;	22/01/24
 155+ 8858              ;
 156+ 8858              ; 	Cada caja tiene 19 bytes !!!
 157+ 8858
 158+ 8858 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 885B 00           	db %00000000										; (Attr).
 160+ 885C              ;	db 0												; (Cuad_objeto).
 161+ 885C 00           	db 0												; (Impacto).
 162+ 885D 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8863 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8865 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 8867 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 8869 00           	db 0												; (Ctrl_0).
 167+ 886A 00           	db 0												; (Ctrl_2).
 168+ 886B
 169+ 886B              ; ---------- ---------- ---------- ---------- ----------
 170+ 886B
 171+ 886B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 886E 00           	db %00000000										; (Attr).
 173+ 886F              ;	db 0												; (Cuad_objeto).
 174+ 886F 00           	db 0												; (Impacto).
 175+ 8870 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 8876 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 8878 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 887A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 887C 00           	db 0												; (Ctrl_0).
 180+ 887D 00           	db 0												; (Ctrl_2).
 181+ 887E
 182+ 887E              ; ---------- ---------- ---------- ---------- ----------
 183+ 887E
 184+ 887E 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8881 00           	db %00000000										; (Attr).
 186+ 8882              ;	db 0												; (Cuad_objeto).
 187+ 8882 00           	db 0												; (Impacto).
 188+ 8883 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 8889 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 888B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 888D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 888F 00           	db 0												; (Ctrl_0).
 193+ 8890 00           	db 0												; (Ctrl_2).
 194+ 8891
 195+ 8891              ; ---------- ---------- ---------- ---------- ----------
 196+ 8891
 197+ 8891 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8894 00           	db %00000000										; (Attr).
 199+ 8895              ;	db 0												; (Cuad_objeto).
 200+ 8895 00           	db 0												; (Impacto).
 201+ 8896 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 889C 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 889E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 88A0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 88A2 00           	db 0												; (Ctrl_0).
 206+ 88A3 00           	db 0												; (Ctrl_2).
 207+ 88A4
 208+ 88A4              ; ---------- ---------- ---------- ---------- ----------
 209+ 88A4
 210+ 88A4 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 88A7 00           	db %00000000										; (Attr).
 212+ 88A8              ;	db 0												; (Cuad_objeto).
 213+ 88A8 00           	db 0												; (Impacto).
 214+ 88A9 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 88AF 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 88B1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 88B3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 88B5 00           	db 0												; (Ctrl_0).
 219+ 88B6 00           	db 0												; (Ctrl_2).
 220+ 88B7
 221+ 88B7              ; ---------- ---------- ---------- ---------- ----------
 222+ 88B7
 223+ 88B7 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 88BA 00           	db %00000000										; (Attr).
 225+ 88BB              ;	db 0												; (Cuad_objeto).
 226+ 88BB 00           	db 0												; (Impacto).
 227+ 88BC 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 88C2 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 88C4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 88C6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 88C8 00           	db 0												; (Ctrl_0).
 232+ 88C9 00           	db 0												; (Ctrl_2).
 233+ 88CA
 234+ 88CA              ; ---------- ---------- ---------- ---------- ----------
 235+ 88CA
 236+ 88CA 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 88CD 00           	db %00000000										; (Attr).
 238+ 88CE              ;	db 0												; (Cuad_objeto).
 239+ 88CE 00           	db 0												; (Impacto).
 240+ 88CF 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 88D5 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 88D7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 88D9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 88DB 00           	db 0												; (Ctrl_0).
 245+ 88DC 00           	db 0												; (Ctrl_2).
 246+ 88DD
 247+ 88DD              ; -------------------------------------------------------------------------------------
 248+ 88DD              ;
 249+ 88DD              ;	11/1/24
 250+ 88DD              ;
 251+ 88DD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 88DD              ;
 253+ 88DD              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 88DD              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 88DD              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 88DD              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 88DD
 258+ 88DD              Indice_de_definiciones_de_entidades
 259+ 88DD
 260+ 88DD E1 88        	defw Entidad_1
 261+ 88DF EE 88        	defw Entidad_2
 262+ 88E1
 263+ 88E1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 88E1
 265+ 88E1              ;	BADSAT, (Satélite malvado).
 266+ 88E1
 267+ 88E1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 88E4 04           	db %00000100										; (Attr).
 269+ 88E5 F0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 88E7 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 88E9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 88EB 01           	db 1												; (Cuad_objeto).
 273+ 88EC 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 88EE
 275+ 88EE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 88F1 02           	db %00000010										; (Attr).
 277+ 88F2 F0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 88F4 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 88F6 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 88F8 01           	db 1												; (Cuad_objeto).
 281+ 88F9 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 88FB
# file closed: Cajas_y_disparos.asm
 130  88FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 88FB
   2+ 88FB
   3+ 88FB              ;   07/07/23
   4+ 88FB              ;
   5+ 88FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 88FB              ;
   7+ 88FB              ;   Codificación:
   8+ 88FB              ;
   9+ 88FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 88FB              ;
  11+ 88FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 88FB              ;
  13+ 88FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 88FB              ;
  15+ 88FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 88FB              ;
  17+ 88FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 88FB              ;                               ..... %01000010 Vel_up 4
  19+ 88FB              ;                                               Vel_down 2
  20+ 88FB              ;                               ..... $42
  21+ 88FB              ;
  22+ 88FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 88FB              ;
  24+ 88FB              ;                               ..... %01000010 Vel_left 4
  25+ 88FB              ;                                               Vel_right 2
  26+ 88FB              ;                               ..... $42
  27+ 88FB              ;
  28+ 88FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 88FB              ;
  30+ 88FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 88FB              ;
  32+ 88FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 88FB              ;
  34+ 88FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 88FB              ;                                     $53
  36+ 88FB              ;
  37+ 88FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 88FB              ;
  39+ 88FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 88FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 88FB              ;
  42+ 88FB              ;                       Arriba ..... $81
  43+ 88FB              ;                       Arriba - izquierda ..... $a1
  44+ 88FB              ;                       Arriba - derecha ..... $91
  45+ 88FB              ;
  46+ 88FB              ;                       Abajo ..... $41
  47+ 88FB              ;                       Abajo - izquierda ..... $61
  48+ 88FB              ;                       Abajo - derecha ..... $51
  49+ 88FB              ;
  50+ 88FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 88FB              ;
  52+ 88FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 88FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 88FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 88FB              ;
  56+ 88FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 88FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 88FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 88FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 88FB              ;
  61+ 88FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 88FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 88FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 88FB              ;
  65+ 88FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 88FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 88FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 88FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 88FB
  70+ 88FB              ; ----- ----- ----- ----- -----
  71+ 88FB
  72+ 88FB 27 89        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 88FD 2F 89            defw F_1
  74+ 88FF 39 89            defw F_2
  75+ 8901 43 89            defw Codo_abajo_derecha
  76+ 8903 77 89            defw Derecha_y_subiendo
  77+ 8905 81 89            defw Derecha_y_subiendo_1
  78+ 8907 8B 89            defw F_3
  79+ 8909 95 89            defw F_4
  80+ 890B 9F 89            defw Derecha_y_bajando
  81+ 890D A9 89            defw Derecha_y_bajando_1
  82+ 890F B3 89            defw Derecha_y_bajando_2
  83+ 8911 BD 89            defw Codo_derecha_abajo
  84+ 8913 ED 89            defw Codo_abajo_izq.
  85+ 8915 21 8A            defw Izquierda_y_subiendo
  86+ 8917 2B 8A            defw Izquierda_y_subiendo_1
  87+ 8919 35 8A            defw F_5
  88+ 891B 3F 8A            defw F_6
  89+ 891D 49 8A            defw Izquierda_y_bajando
  90+ 891F 53 8A            defw Izquierda_y_bajando_1
  91+ 8921 5D 8A            defw Izquierda_y_bajando_2
  92+ 8923 67 8A            defw Codo_izquierda_abajo
  93+ 8925 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8927
  95+ 8927 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 892B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 892F
  98+ 892F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8933 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8937 08 00
 100+ 8939
 101+ 8939 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 893D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8941 0F FE
 103+ 8943
 104+ 8943 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8947 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 894B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 894F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8953 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8957 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 895B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 895F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8963 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8967 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 896B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 896F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8973 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8977
 118+ 8977 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 897B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 897F 06 00
 120+ 8981
 121+ 8981 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8985 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8989 02 00
 123+ 898B
 124+ 898B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 898F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8993 04 00
 126+ 8995
 127+ 8995 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8999 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 899D 08 00
 129+ 899F
 130+ 899F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 89A3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 89A7 02 00
 132+ 89A9
 133+ 89A9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 89AD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 89B1 06 00
 135+ 89B3
 136+ 89B3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 89B7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 89BB 06 00
 138+ 89BD
 139+ 89BD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 89BD
 141+ 89BD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 89C1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 89C5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 89C9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 89CD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 89D1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 89D5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 89D9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 89DD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 89E1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 89E5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 89E9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 89ED
 154+ 89ED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 89F1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 89F5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 89F9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 89FD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8A01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8A05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8A09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8A0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8A11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8A15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8A19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8A1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8A21
 168+ 8A21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8A25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8A29 06 00
 170+ 8A2B
 171+ 8A2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8A2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8A33 02 00
 173+ 8A35
 174+ 8A35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8A39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8A3D 04 00
 176+ 8A3F
 177+ 8A3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8A43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8A47 08 00
 179+ 8A49
 180+ 8A49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8A4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8A51 02 00
 182+ 8A53
 183+ 8A53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8A57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8A5B 06 00
 185+ 8A5D
 186+ 8A5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8A61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8A65 06 00
 188+ 8A67
 189+ 8A67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8A6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8A6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8A73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8A77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8A7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8A7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8A83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8A87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8A8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8A8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8A93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8A97
 202+ 8A97
 203+ 8A97
 204+ 8A97
 205+ 8A97
 206+ 8A97
 207+ 8A97
 208+ 8A97
 209+ 8A97
 210+ 8A97
# file closed: Patrones_de_mov.asm
 131  8A97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8A97              ; 19/1/24
   2+ 8A97
   3+ 8A97              Indice_de_niveles
   4+ 8A97
   5+ 8A97 9F 8A        	defw Nivel_1
   6+ 8A99 A9 8A        	defw Nivel_2
   7+ 8A9B
   8+ 8A9B              ;	...
   9+ 8A9B              ;	...
  10+ 8A9B              ;	+ Niveles ...
  11+ 8A9B
  12+ 8A9B 00 00        	defw 0
  13+ 8A9D 00 00        	defw 0
  14+ 8A9F
  15+ 8A9F 05           Nivel_1 db 5									; Nº de entidades.
  16+ 8AA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8AA4 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8AA8 01
  18+ 8AA9
  19+ 8AA9 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8AAA 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8AAE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8AB2 01 02
  22+ 8AB4 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8AB8 01 02
  23+ 8ABA
# file closed: Niveles.asm
 132  8ABA
 133  8ABA              ; ******************************************************************************************************************************************************************************************
 134  8ABA              ; Constantes.
 135  8ABA              ; ******************************************************************************************************************************************************************************************
 136  8ABA              ;
 137  8ABA              ; 09/03/24
 138  8ABA
 139  8ABA              ;
 140  8ABA              ; Constantes.
 141  8ABA              ;
 142  8ABA
 143  8ABA              Sprite_vacio equ $eae0
 144  8ABA
 145  8ABA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 146  8ABA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 147  8ABA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 148  8ABA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 149  8ABA
 150  8ABA              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 151  8ABA              ;Almacen_de_scanlines_masticados equ $e900
 152  8ABA              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 153  8ABA              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 154  8ABA              ;
 155  8ABA              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 156  8ABA
 157  8ABA              ;	($8119 - $81e8) = Índice y datos de Amadeus. "$d0", 208 bytes.
 158  8ABA
 159  8ABA
 160  8ABA              ;                                                       ;	35 bytes por entidad.
 161  8ABA              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 162  8ABA              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 163  8ABA              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 164  8ABA              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 165  8ABA
 166  8ABA              Scanlines_album_2 equ $8200    ;    (8200h - 8318h)
 167  8ABA
 168  8ABA              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 169  8ABA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 170  8ABA              ;														; 55 Bytes.
 171  8ABA
 172  8ABA              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 173  8ABA
 174  8ABA              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 175  8ABA
 176  8ABA
 177  8ABA              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 178  8ABA
 179  8ABA              ; ******************************************************************************************************************************************************************************************
 180  8ABA              ; Variables.
 181  8ABA              ; ******************************************************************************************************************************************************************************************
 182  8ABA              ;
 183  8ABA              ; 18/01/24
 184  8ABA              ;
 185  8ABA              ; Variables de DRAW. (Motor principal).	42 Bytes.
 186  8ABA              ;
 187  8ABA
 188  8ABA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 189  8ABA
 190  8ABA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 191  8ABB              ;															- Patrón de movimiento.
 192  8ABB              ;															- Aspecto
 193  8ABB 00           Filas db 0												; Filas. [DRAW]
 194  8ABC 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 195  8ABD 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 196  8ABF 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 197  8AC1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 198  8AC2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 199  8AC3
 200  8AC3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 201  8AC3
 202  8AC3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 203  8AC4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 204  8AC4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 205  8AC4 00           Attr db 0												; Atributos de la entidad:
 206  8AC5
 207  8AC5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 208  8AC5              ;
 209  8AC5              ;	COLORES: 0 ..... NEGRO
 210  8AC5              ;    		 1 ..... AZUL
 211  8AC5              ; 			 2 ..... ROJO
 212  8AC5              ;			 3 ..... MAGENTA
 213  8AC5              ; 			 4 ..... VERDE
 214  8AC5              ; 			 5 ..... CIAN
 215  8AC5              ;			 6 ..... AMARILLO
 216  8AC5              ; 			 7 ..... BLANCO
 217  8AC5
 218  8AC5 00 00        Indice_Sprite_der defw 0
 219  8AC7 00 00        Indice_Sprite_izq defw 0
 220  8AC9 00 00        Puntero_DESPLZ_der defw 0
 221  8ACB 00 00        Puntero_DESPLZ_izq defw 0
 222  8ACD
 223  8ACD 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 224  8ACF 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 225  8AD0
 226  8AD0              ; Variables de objeto. (Características).
 227  8AD0
 228  8AD0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 229  8AD1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 230  8AD1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 231  8AD1 00 00 00...  Variables_de_borrado ds 6
 232  8AD7
 233  8AD7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 234  8AD9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 235  8AD9
 236  8AD9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 237  8ADB
 238  8ADB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 239  8ADB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 240  8ADB
 241  8ADB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 242  8ADD              ;														; _palabras que componen el "movimiento_masticado".
 243  8ADD
 244  8ADD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 245  8ADD
 246  8ADD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 247  8ADE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 248  8ADE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 249  8ADE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 250  8ADE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 251  8ADE              ;
 252  8ADE              ; 														DESCRIPCIÖN:
 253  8ADE              ;
 254  8ADE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 255  8ADE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 256  8ADE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 257  8ADE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 258  8ADE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 259  8ADE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 260  8ADE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 261  8ADE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 262  8ADE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 263  8ADE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 264  8ADE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 265  8ADE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 266  8ADE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 267  8ADE              ;
 268  8ADE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 269  8ADE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 270  8ADE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 271  8ADE
 272  8ADE              ; Variables de funcionamiento. [DRAW].
 273  8ADE
 274  8ADE 00           Columnas db 0
 275  8ADF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8AE1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8AE1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8AE2
 279  8AE2              ; variables de control general.
 280  8AE2
 281  8AE2 00           Ctrl_2 db 0
 282  8AE3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 283  8AE3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 284  8AE3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 285  8AE3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 286  8AE3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 287  8AE3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 288  8AE3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 289  8AE3              ;
 290  8AE3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 291  8AE3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 292  8AE3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 293  8AE3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 294  8AE3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 295  8AE3              ;														BIT 4, ???
 296  8AE3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 297  8AE3
 298  8AE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 299  8AE4
 300  8AE4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 301  8AE4
 302  8AE4              ;					         		---------;      ;---------
 303  8AE4
 304  8AE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 305  8AE4
 306  8AE4              Perfiles_de_velocidad
 307  8AE4
 308  8AE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 309  8AE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 310  8AE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 311  8AE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 312  8AE8
 313  8AE8              ; Contadores de 16 bits.
 314  8AE8
 315  8AE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 316  8AEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 317  8AEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 318  8AEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 319  8AF0
 320  8AF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 321  8AF0
 322  8AF0              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 323  8AF0              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 324  8AF0              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 325  8AF0
 326  8AF0              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 327  8AF0
 328  8AF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 329  8AF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 330  8AF4 00 00        Puntero_indice_mov_bucle defw 0							;
 331  8AF6              ;
 332  8AF6              ;
 333  8AF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 334  8AF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 335  8AF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 336  8AF7 00           Incrementa_puntero_backup db 0
 337  8AF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 338  8AF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 339  8AF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 340  8AFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 341  8AFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 342  8AFC              ;
 343  8AFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 344  8AFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 345  8AFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 346  8AFC              ;
 347  8AFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 348  8AFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 349  8AFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 350  8AFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 351  8AFC              ;
 352  8AFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 353  8AFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 354  8AFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 355  8AFC              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 356  8AFC
 357  8AFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 358  8AFD
 359  8AFD              ;														DESCRIPCIÓN:
 360  8AFD              ;
 361  8AFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 362  8AFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 363  8AFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 364  8AFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 365  8AFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 366  8AFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 367  8AFD
 368  8AFD              ;														BIT 3, Recarga de nueva oleada.
 369  8AFD              ;														BIT 4, Recarga de nueva oleada.
 370  8AFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 371  8AFD              ;														BIT 6, **** Frame completo.
 372  8AFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 373  8AFD
 374  8AFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 375  8AFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 376  8AFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 377  8AFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 378  8AFF
 379  8AFF              ; Gestión de ENTIDADES y CAJAS.
 380  8AFF
 381  8AFF 00 00        Puntero_store_caja defw 0
 382  8B01 00 00        Puntero_restore_caja defw 0
 383  8B03 00 00        Indice_restore_caja defw 0
 384  8B05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 385  8B06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 386  8B07 00           Entidades_en_curso db 0									; ..... ..... .....
 387  8B08 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 388  8B09              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 389  8B09              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 390  8B09              ;														; _ (Numero_de_malotes)="0".
 391  8B09 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 392  8B0B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 393  8B0D              ;														; _ puntero (Indice_entidades).
 394  8B0D
 395  8B0D              ;---------------------------------------------------------------------------------------------------------------
 396  8B0D              ;
 397  8B0D              ;	11/01/24
 398  8B0D              ;
 399  8B0D              ;	Álbumes.
 400  8B0D
 401  8B0D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 402  8B0F              ;														; _variable para almacenar lo posición del puntero_
 403  8B0F              ; 														; _de pila, SP.
 404  8B0F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 405  8B11              ;														; La utiliza la rutina [Extrae_foto_registros].
 406  8B11 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 407  8B13
 408  8B13 00 00        Album_de_pintado defw 0
 409  8B15 00 00        Album_de_borrado defw 0
 410  8B17 00           Techo_Scanlines_album db 0
 411  8B18 00           Techo_Scanlines_album_2 db 0
 412  8B19
 413  8B19 00           Switch db 0
 414  8B1A 00           Techo db 0
 415  8B1B
 416  8B1B 00 00        Scanlines_album_SP defw 0
 417  8B1D
 418  8B1D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 419  8B1E              ;
 420  8B1E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 421  8B1E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 422  8B1E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 423  8B1E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 424  8B1E              ;																Habilita el borrado/pintado de sprites.
 425  8B1E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 426  8B1E              ;																_ a la baja.
 427  8B1E
 428  8B1E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 429  8B1F              ;
 430  8B1F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 431  8B1F              ;
 432  8B1F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 433  8B1F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 434  8B1F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 435  8B1F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 436  8B1F              ;
 437  8B1F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 438  8B1F              ;															_ masticados ya generados.
 439  8B1F              ;
 440  8B1F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 441  8B1F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 442  8B1F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 443  8B1F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 444  8B1F
 445  8B1F
 446  8B1F              ; Gestión de Disparos.
 447  8B1F
 448  8B1F              ;;Numero_de_disparotes db 0
 449  8B1F              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 450  8B1F              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 451  8B1F              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 452  8B1F              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 453  8B1F              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 454  8B1F              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8B1F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8B1F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 457  8B1F              ;														; _produzca colisión.
 458  8B1F              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 459  8B1F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8B1F              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8B1F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 462  8B1F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8B22              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8B22              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 465  8B22
 466  8B22              ;---------------------------------------------------------------------------------------------------------------
 467  8B22
 468  8B22              ; Relojes y temporizaciones.
 469  8B22
 470  8B22 00           Contador_de_frames db 0
 471  8B23 00           Contador_de_frames_2 db 0
 472  8B24
 473  8B24              ;Clock_explosion db 4
 474  8B24 14           Clock_Entidades_en_curso db 20
 475  8B25 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8B26              ;														; Repite la oleada de entidades.
 477  8B26              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 478  8B26              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 479  8B26              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 480  8B26
 481  8B26              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 482  8B26              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 483  8B26              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 484  8B26
 485  8B26              ;---------------------------------------------------------------------------------------------------------------
 486  8B26
 487  8B26              ; Gestión de NIVELES.
 488  8B26
 489  8B26 00           Nivel db 0												; Nivel actual del juego.
 490  8B27 00 00        Puntero_indice_NIVELES defw 0
 491  8B29 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8B2B              ; 														; _ que definen el NIVEL.
 493  8B2B              ; Y todo comienza aquí .....
 494  8B2B              ;
 495  8B2B              ; 	INICIO  *************************************************************************************************************************************************************************
 496  8B2B              ;
 497  8B2B              ;	5/1/24
 498  8B2B
 499  8B2B              START
 500  8B2B
 501  8B2B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 502  8B2E 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 503  8B30 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 504  8B32 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 505  8B34 F3           	DI
 506  8B35
 507  8B35              ;	ld a,%00000111
 508  8B35              ;	call Cls
 509  8B35 CD 6D 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 510  8B38
 511  8B38              ; INICIALIZACIÓN.
 512  8B38
 513  8B38              ;	Inicializa 1er Nivel.
 514  8B38
 515  8B38 21 97 8A     	ld hl,Indice_de_niveles
 516  8B3B 22 27 8B     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 517  8B3E CD 93 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 518  8B41              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 519  8B41              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 520  8B41              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 521  8B41
 522  8B41              ;	Provisional, (para desarrollo).
 523  8B41              	;-
 524  8B41              ;	ld hl,Numero_parcial_de_entidades
 525  8B41              ;	ld b,(hl)
 526  8B41              ;	inc b
 527  8B41              ;	dec b
 528  8B41              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 529  8B41
 530  8B41 CD B3 8C     	call Inicia_albumes_de_lineas
 531  8B44
 532  8B44 CD D8 8D     4 call Inicia_Entidades
 533  8B47
 534  8B47 CD C3 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 535  8B4A              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 536  8B4A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 537  8B4A              ; (Esto se dá cuando se inicia una nueva oleada).
 538  8B4A
 539  8B4A              ;	ld a,(Ctrl_1)
 540  8B4A              ;	bit 3,a
 541  8B4A              ;	jr nz,5F											 ; Loop
 542  8B4A
 543  8B4A              ; 	INICIA AMADEUS !!!!!
 544  8B4A
 545  8B4A              ;3 call Restore_Amadeus
 546  8B4A              ;	call Inicia_Puntero_objeto
 547  8B4A              ;	call Draw
 548  8B4A
 549  8B4A              ;	call Guarda_movimiento_masticado	;! Provisional
 550  8B4A
 551  8B4A              ;	call Genera_datos_de_impresion
 552  8B4A              ;	call Guarda_datos_de_borrado_Amadeus
 553  8B4A
 554  8B4A              ;	ld de,Amadeus_db
 555  8B4A              ;	call Store_Amadeus
 556  8B4A
 557  8B4A              ; 	INICIA DISPAROS !!!!!
 558  8B4A
 559  8B4A              ;	call Inicia_Puntero_Disparo_Entidades
 560  8B4A              ;	call Inicia_Puntero_Disparo_Amadeus
 561  8B4A
 562  8B4A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 563  8B4A
 564  8B4A              ;5 call Inicia_punteros_de_cajas
 565  8B4A              ;	call Restore_entidad
 566  8B4A
 567  8B4A              ;	ld a,(Ctrl_1)
 568  8B4A              ;	bit 3,a
 569  8B4A              ;	jr z,6F
 570  8B4A
 571  8B4A              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 572  8B4A
 573  8B4A              ;	ld hl,Ctrl_1
 574  8B4A              ;	res 3,(hl)
 575  8B4A              ;	jr Main
 576  8B4A
 577  8B4A              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 578  8B4A
 579  8B4A              6
 580  8B4A
 581  8B4A              ;	call Calcula_numero_de_malotes
 582  8B4A
 583  8B4A              ; Damos por concluida la construcción del FRAME.
 584  8B4A              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 585  8B4A
 586  8B4A 2A 1B 8B     	ld hl,(Scanlines_album_SP)
 587  8B4D 7D           	ld a,l
 588  8B4E 32 17 8B     	ld (Techo_Scanlines_album),a
 589  8B51
 590  8B51 2A 15 8B     	ld hl,(Album_de_borrado)
 591  8B54 22 1B 8B     	ld (Scanlines_album_SP),hl
 592  8B57
 593  8B57 21 1D 8B     	ld hl,Ctrl_3
 594  8B5A CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 595  8B5C CB D6        	set 2,(hl)
 596  8B5E
 597  8B5E FB           	ei
 598  8B5F 76           	halt
 599  8B60
 600  8B60              ; ------------------------------------
 601  8B60
 602  8B60              Main
 603  8B60              ;
 604  8B60              ;	11/12/23
 605  8B60
 606  8B60              ; Aparece nueva entidad ???
 607  8B60
 608  8B60              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 609  8B60              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 610  8B60              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 611  8B60              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 612  8B60              ;														; _un 2º bloque.
 613  8B60
 614  8B60              ;	call Genera_scanlines_masticados_a_borrar
 615  8B60              ;	call Limpia_Almacen_de_scanlines_masticados
 616  8B60
 617  8B60              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 618  8B60              ; 													 	; _(Scanlines_album_SP).
 619  8B60
 620  8B60 3A 24 8B     	ld a,(Clock_Entidades_en_curso)
 621  8B63 47           	ld b,a
 622  8B64 3A 22 8B     	ld a,(Contador_de_frames)
 623  8B67 B8           	cp b
 624  8B68 20 18        	jr nz,13F
 625  8B6A
 626  8B6A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 627  8B6A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 628  8B6A
 629  8B6A 3A 06 8B     21 ld a,(Numero_parcial_de_entidades)
 630  8B6D 47           	ld b,a
 631  8B6E 3A 07 8B     	ld a,(Entidades_en_curso)
 632  8B71 B8           	cp b
 633  8B72 28 0E        	jr z,13F
 634  8B74 30 0C        	jr nc,13F
 635  8B76
 636  8B76 3C           	inc a
 637  8B77 32 07 8B     	ld (Entidades_en_curso),a
 638  8B7A
 639  8B7A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 640  8B7A
 641  8B7A 3A 24 8B     	ld a,(Clock_Entidades_en_curso)
 642  8B7D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 643  8B7D              ;! _ IMPREDECIBLE !!!!
 644  8B7D C6 64        	add 100
 645  8B7F 32 24 8B     	ld (Clock_Entidades_en_curso),a
 646  8B82
 647  8B82              ; -------------------------------------------------------------------------------------------------------------
 648  8B82
 649  8B82              ; Habilita disparos.
 650  8B82
 651  8B82              13
 652  8B82
 653  8B82              ;	ld hl,Disparo_Amadeus
 654  8B82              ;	ld de,CLOCK_repone_disparo_Amadeus
 655  8B82              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 656  8B82
 657  8B82              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 658  8B82              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 659  8B82              ;	call Habilita_disparos
 660  8B82
 661  8B82              ; COLISIONES.
 662  8B82
 663  8B82              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 664  8B82
 665  8B82              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 666  8B82              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 667  8B82              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 668  8B82
 669  8B82              ;	xor a
 670  8B82              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 671  8B82
 672  8B82              ;	call Inicia_punteros_de_cajas
 673  8B82              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 674  8B82              ; 														; _ en DRAW.
 675  8B82
 676  8B82              ;	ld a,(Filas)
 677  8B82              ;	and a
 678  8B82              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 679  8B82              ;	call Incrementa_punteros_de_cajas
 680  8B82              ;	jr 12B
 681  8B82
 682  8B82              ; ---------------------------------------------------------------------------------------
 683  8B82
 684  8B82 3A 06 8B     10 ld a,(Numero_parcial_de_entidades)
 685  8B85 47               ld b,a
 686  8B86 A7           	and a
 687  8B87 20 00        	jr nz,11F
 688  8B89
 689  8B89              ;	ld hl,Ctrl_1;
 690  8B89              ;	bit 4,(hl)
 691  8B89              ;	jp nz,16F
 692  8B89
 693  8B89              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 694  8B89
 695  8B89              ;	ld hl,Ctrl_1
 696  8B89              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 697  8B89
 698  8B89              ;	ld a,(Contador_de_frames)
 699  8B89              ;	inc a
 700  8B89              ;	ld (Activa_recarga_cajas),a
 701  8B89
 702  8B89              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 703  8B89
 704  8B89 3A 07 8B     11 ld a,(Entidades_en_curso)
 705  8B8C A7           	and a
 706  8B8D 28 28        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 707  8B8F 47           	ld b,a												; No hay entidades que gestionar.
 708  8B90
 709  8B90              ; ( Código que ejecutamos con cada entidad: ).
 710  8B90
 711  8B90              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 712  8B90              ;
 713  8B90              ;	Se produce MOVIMIENTO.
 714  8B90
 715  8B90 21 1D 8B     	ld hl,Ctrl_3
 716  8B93 CB D6        	set 2,(hl)
 717  8B95 CD CD 8B     	call Change
 718  8B98
 719  8B98 C5           15 push bc 												; Nº de entidades en curso.
 720  8B99
 721  8B99 CD 2C 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 722  8B9C
 723  8B9C              ; Existe "Entidad_guía" ???.
 724  8B9C              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 725  8B9C
 726  8B9C              ;	ld a,(Ctrl_3)
 727  8B9C              ;	bit 1,a
 728  8B9C              ;	jr nz,22F
 729  8B9C
 730  8B9C              ; Almacén de "Movimientos_masticados" lleno ???
 731  8B9C              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 732  8B9C              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 733  8B9C
 734  8B9C              ;;	ld a,(Ctrl_3)
 735  8B9C              ;;	bit 3,a
 736  8B9C              ;;	jr nz,22F
 737  8B9C
 738  8B9C              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 739  8B9C
 740  8B9C              ;	ld hl,Ctrl_2
 741  8B9C              ;	set 5,(hl)
 742  8B9C              ;	ld hl,Ctrl_3
 743  8B9C              ;	set 1,(hl)
 744  8B9C
 745  8B9C              ; Impacto ???
 746  8B9C
 747  8B9C              ;22 ld a,(Impacto)
 748  8B9C              ;	and a
 749  8B9C              ;	jr z,8F
 750  8B9C
 751  8B9C              ; Hay Impacto en esta entidad.
 752  8B9C
 753  8B9C              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 754  8B9C              ;	dec (hl)
 755  8B9C              ;	jp nz,17F
 756  8B9C
 757  8B9C              ;! Velocidad de la animación de la explosión.
 758  8B9C
 759  8B9C              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 760  8B9C              ;														; _,(velocidad de la explosión).
 761  8B9C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 762  8B9C
 763  8B9C              ;	call Repone_datos_de_borrado
 764  8B9C              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 765  8B9C
 766  8B9C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 767  8B9C
 768  8B9C              ;	ld a,(Ctrl_2)
 769  8B9C              ;	bit 1,a
 770  8B9C              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 771  8B9C
 772  8B9C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 773  8B9C
 774  8B9C              ;	ld a,(CTRL_DESPLZ)
 775  8B9C              ;	and a
 776  8B9C              ;	jr nz,18F
 777  8B9C
 778  8B9C              ;	ld hl,Indice_Explosion_2x2-2
 779  8B9C              ;	ld (Puntero_DESPLZ_der),hl
 780  8B9C              ;	jr 19F
 781  8B9C
 782  8B9C              ;18 ld hl,Indice_Explosion_2x3-2
 783  8B9C              ;	ld (Puntero_DESPLZ_der),hl
 784  8B9C
 785  8B9C              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 786  8B9C              ;	set 1,(hl)
 787  8B9C              ;	jr 7F
 788  8B9C
 789  8B9C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 790  8B9C              ; _con las coordenadas de la entidad almacenada en DRAW.
 791  8B9C
 792  8B9C              ;8 ld a,(Ctrl_1)
 793  8B9C              ;	bit 2,a
 794  8B9C              ;	jr z,7F
 795  8B9C
 796  8B9C              ;	ld hl,(Coordenadas_disparo_certero)
 797  8B9C              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 798  8B9C              ;														; E contiene la coordenada_X del disparo.
 799  8B9C              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 800  8B9C              ;														; H FILA, (Coordenada_y de la entidad).
 801  8B9C              ;	and a
 802  8B9C              ;	sbc hl,de
 803  8B9C
 804  8B9C              ;	call Determina_resultado_comparativa
 805  8B9C
 806  8B9C              ;	ld a,b
 807  8B9C              ;	and a
 808  8B9C              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 809  8B9C
 810  8B9C              ; ----- ----- -----
 811  8B9C
 812  8B9C              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 813  8B9C              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 814  8B9C
 815  8B9C              ;	ld hl,Ctrl_1
 816  8B9C              ;	res 2,(hl)
 817  8B9C
 818  8B9C CD CC 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 819  8B9F
 820  8B9F              ;	ld a,(Ctrl_0)
 821  8B9F              ;	bit 4,a
 822  8B9F              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 823  8B9F
 824  8B9F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 825  8B9F              ; [[[
 826  8B9F              ;	call Detecta_disparo_entidad
 827  8B9F              ; ]]]
 828  8B9F
 829  8B9F CD 42 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 830  8BA2
 831  8BA2              ;	ld hl,Ctrl_0
 832  8BA2              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 833  8BA2
 834  8BA2 CD 32 8E     17 call Store_Restore_cajas
 835  8BA5
 836  8BA5 C1           	pop bc
 837  8BA6
 838  8BA6 10 F0        	djnz 15B
 839  8BA8
 840  8BA8 CD C3 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 841  8BAB
 842  8BAB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 843  8BAB              ; Hemos gestionado todas las unidades.
 844  8BAB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 845  8BAB
 846  8BAB              ;	ld hl,Ctrl_1
 847  8BAB              ;	res 2,(hl)
 848  8BAB
 849  8BAB CD E8 8B     	call Borra_diferencia
 850  8BAE
 851  8BAE 3A 1D 8B     	ld a,(Ctrl_3)
 852  8BB1 CB 5F        	bit 3,a
 853  8BB3 20 02        	jr nz,16F
 854  8BB5
 855  8BB5 7D           	ld a,l
 856  8BB6 12           	ld (de),a											; Nuevo techo, mayor que el anterior.
 857  8BB7
 858  8BB7 2A 15 8B     16 ld hl,(Album_de_borrado)
 859  8BBA 22 1B 8B     	ld (Scanlines_album_SP),hl
 860  8BBD
 861  8BBD 21 1D 8B     	ld hl,Ctrl_3
 862  8BC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 863  8BC2 CB 9E        	res 3,(hl)
 864  8BC4
 865  8BC4 AF           	xor a
 866  8BC5 D3 FE        	out ($fe),a
 867  8BC7 76           	halt
 868  8BC8
 869  8BC8              ; ----------------------------------------
 870  8BC8
 871  8BC8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 872  8BC8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 873  8BC8 CA 60 8B     	jp z,Main
 874  8BCB
 875  8BCB              ; RECARGA DE NUEVA OLEADA.
 876  8BCB
 877  8BCB              ;	ld a,(Contador_de_frames)
 878  8BCB              ;	ld b,a
 879  8BCB              ;	ld a,(Activa_recarga_cajas)
 880  8BCB              ;	cp b
 881  8BCB              ;	jr z,20F
 882  8BCB
 883  8BCB              ;	ld hl,Ctrl_1
 884  8BCB              ;	set 4,(hl)
 885  8BCB              ;	jp Main
 886  8BCB
 887  8BCB              ;20 ld hl,Ctrl_1
 888  8BCB              ;	res 4,(hl)
 889  8BCB
 890  8BCB              ;	ld a,(Contador_de_frames)
 891  8BCB
 892  8BCB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 893  8BCB              ;! _ IMPREDECIBLE !!!!
 894  8BCB
 895  8BCB              ;	add 10
 896  8BCB              ;	ld (Clock_Entidades_en_curso),a
 897  8BCB
 898  8BCB              ;	jp 4B
 899  8BCB
 900  8BCB C9           	ret
 901  8BCC
 902  8BCC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 903  8BCC              ;
 904  8BCC              ;	16/11/23
 905  8BCC
 906  8BCC              ;;Gestiona_Amadeus
 907  8BCC
 908  8BCC              ;! Activa/desactiva impacto con Amadeus.
 909  8BCC
 910  8BCC              ;	ld a,(Impacto)
 911  8BCC              ;	and a
 912  8BCC              ;	jr nz,2F
 913  8BCC
 914  8BCC              ;;	call Mov_Amadeus
 915  8BCC
 916  8BCC              ;;2 ld a,(Ctrl_0)
 917  8BCC              ;;	bit 4,a
 918  8BCC              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 919  8BCC
 920  8BCC              ;;	call Guarda_foto_entidad_a_pintar
 921  8BCC              ;;	call Guarda_datos_de_borrado_Amadeus
 922  8BCC
 923  8BCC              ;;1 ld hl,Ctrl_0
 924  8BCC              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 925  8BCC
 926  8BCC              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 927  8BCC
 928  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 929  8BCC
 930  8BCC              ;	call Calcula_numero_de_disparotes
 931  8BCC
 932  8BCC              ;;	ret
 933  8BCC
 934  8BCC              ; -----------------------------
 935  8BCC              ;
 936  8BCC              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 937  8BCC              ;
 938  8BCC              ;	INPUTS: B a de estar a "0".
 939  8BCC
 940  8BCC              ;Prepara_Borra_sprites
 941  8BCC
 942  8BCC              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 943  8BCC              ;	ld a,l
 944  8BCC              ;	ret z
 945  8BCC
 946  8BCC              ;	srl a
 947  8BCC
 948  8BCC              ;2 sub 16
 949  8BCC              ;	jr z,1F
 950  8BCC              ;	inc b
 951  8BCC              ;	jr 2B
 952  8BCC
 953  8BCC              ;1 inc b
 954  8BCC
 955  8BCC              ;	exx
 956  8BCC              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 957  8BCC              ;	exx
 958  8BCC
 959  8BCC              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 960  8BCC              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 961  8BCC
 962  8BCC              ;	ret
 963  8BCC
 964  8BCC              ; --------------------------------------------------------------------------------------------------------------
 965  8BCC              ;
 966  8BCC              ;	15/12/23
 967  8BCC
 968  8BCC              Mov_obj
 969  8BCC
 970  8BCC              ;	ld a,(Ctrl_2)
 971  8BCC              ;	bit 1,a
 972  8BCC              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 973  8BCC
 974  8BCC              ; Explosión:
 975  8BCC
 976  8BCC              ;	ld a,(Frames_explosion)
 977  8BCC              ;	and a
 978  8BCC              ;	jr nz,4F
 979  8BCC
 980  8BCC              ;!  Una alimaña menos!!!!!!!!!1
 981  8BCC
 982  8BCC              ; Se trataba de una Entidad_guía ???
 983  8BCC
 984  8BCC              ;	ld a,(Ctrl_2)
 985  8BCC              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 986  8BCC              ;	jr z,5F
 987  8BCC
 988  8BCC              ;	ld hl,Ctrl_3
 989  8BCC              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 990  8BCC
 991  8BCC              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 992  8BCC              ;!! _generado puede ser distinto, (aletoriedad).
 993  8BCC
 994  8BCC              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 995  8BCC              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 996  8BCC              ;	dec (hl)
 997  8BCC              ;	ld hl,Entidades_en_curso
 998  8BCC              ;	dec (hl)
 999  8BCC              ;	ld hl,Numero_de_entidades
1000  8BCC              ;	dec (hl)
1001  8BCC              ;	jr 3F
1002  8BCC
1003  8BCC              ; -----
1004  8BCC
1005  8BCC              ;	`Movemos´ la explosión.
1006  8BCC
1007  8BCC              ;4 ld hl,(Puntero_DESPLZ_der)
1008  8BCC              ;	inc hl
1009  8BCC              ;	inc hl
1010  8BCC              ;	call Extrae_address
1011  8BCC              ;;	ld (Puntero_objeto),hl
1012  8BCC
1013  8BCC              ;;	ld hl,Frames_explosion
1014  8BCC              ;;	dec (hl)
1015  8BCC
1016  8BCC              ;;	ld hl,Ctrl_0
1017  8BCC              ;;	set 4,(hl);;
1018  8BCC
1019  8BCC              ;;	jr 3F
1020  8BCC
1021  8BCC              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1022  8BCC
1023  8BCC              ;2 xor a
1024  8BCC              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1025  8BCC
1026  8BCC              ; Movemos Entidades malignas.
1027  8BCC              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1028  8BCC
1029  8BCC              ;	ld a,(Ctrl_2)
1030  8BCC              ;	bit 5,a
1031  8BCC              ;	jr nz,8F
1032  8BCC
1033  8BCC              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1034  8BCC              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1035  8BCC              ;	jr 7F
1036  8BCC
1037  8BCC              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1038  8BCC
1039  8BCC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1040  8BCC              ;	bit 4,a
1041  8BCC              ;	ret z
1042  8BCC
1043  8BCC              ; Ha habido desplazamiento de la entidad maligna.
1044  8BCC              ; Ha llegado a zona de AMADEUS ???
1045  8BCC
1046  8BCC              ;7 ld a,(Coordenada_y)
1047  8BCC              ;	cp $14
1048  8BCC              ;	jr c,1F
1049  8BCC
1050  8BCC              ; ---------
1051  8BCC
1052  8BCC              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1053  8BCC              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1054  8BCC
1055  8BCC              ;	di
1056  8BCC              ;	call Genera_coordenadas_X
1057  8BCC              ;	call Compara_coordenadas_X
1058  8BCC              ;	ei
1059  8BCC
1060  8BCC              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1061  8BCC
1062  8BCC              ; ---------
1063  8BCC
1064  8BCC              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1065  8BCC              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1066  8BCC              ;	call Limpia_Variables_de_borrado
1067  8BCC
1068  8BCC C9           3 ret
1069  8BCD
1070  8BCD              ; --------------------------------------------------------------------------------------------------------------
1071  8BCD              ;
1072  8BCD              ;	29/1/23
1073  8BCD
1074  8BCD              ;Mov_Amadeus
1075  8BCD
1076  8BCD              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1077  8BCD
1078  8BCD              ;	call Mov_right
1079  8BCD
1080  8BCD              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1081  8BCD              ;	bit 4,a
1082  8BCD              ;	ret z
1083  8BCD
1084  8BCD              ; ---------
1085  8BCD
1086  8BCD              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1087  8BCD              ;	call Repone_datos_de_borrado_Amadeus
1088  8BCD              ;	call Limpia_Variables_de_borrado
1089  8BCD
1090  8BCD              ;	ret
1091  8BCD
1092  8BCD              ; --------------------------------------------------------------------------------------------------------------
1093  8BCD              ;
1094  8BCD              ;	17/3/24
1095  8BCD
1096  8BCD              Change
1097  8BCD
1098  8BCD
1099  8BCD              ;! Debugg!!!!!!!
1100  8BCD
1101  8BCD              ;	ld a,(Contador_de_frames_2)
1102  8BCD              ;	cp $03
1103  8BCD              ;	jr nz,1F
1104  8BCD              ;	ld a,(Contador_de_frames)
1105  8BCD              ;	cp $59
1106  8BCD              ;	di
1107  8BCD              ;	jr z,$
1108  8BCD              ;	ei
1109  8BCD
1110  8BCD 3A 19 8B     	ld a,(Switch)
1111  8BD0 EE 01        	xor 1
1112  8BD2 32 19 8B     	ld (Switch),a
1113  8BD5
1114  8BD5 2A 13 8B     	ld hl,(Album_de_pintado)
1115  8BD8 ED 5B 15 8B  	ld de,(Album_de_borrado)
1116  8BDC EB           	ex de,hl
1117  8BDD 22 13 8B     	ld (Album_de_pintado),hl
1118  8BE0 22 1B 8B     	ld (Scanlines_album_SP),hl
1119  8BE3
1120  8BE3 ED 53 15 8B  	ld (Album_de_borrado),de
1121  8BE7
1122  8BE7 C9           	ret
1123  8BE8
1124  8BE8              ; ------------------------------------
1125  8BE8              ;
1126  8BE8              ; 18/03/24
1127  8BE8
1128  8BE8              Borra_diferencia
1129  8BE8
1130  8BE8 2A 1B 8B     	ld hl,(Scanlines_album_SP)
1131  8BEB
1132  8BEB 3A 19 8B     	ld a,(Switch)
1133  8BEE A7           	and a
1134  8BEF 28 08        	jr z,2F
1135  8BF1
1136  8BF1 3A 18 8B     	ld a,(Techo_Scanlines_album_2)
1137  8BF4 11 18 8B     	ld de,Techo_Scanlines_album_2
1138  8BF7 18 06        	jr 3F
1139  8BF9
1140  8BF9 3A 17 8B     2 ld a,(Techo_Scanlines_album)
1141  8BFC 11 17 8B     	ld de,Techo_Scanlines_album
1142  8BFF
1143  8BFF 95           3 sub l
1144  8C00
1145  8C00 C8           	ret z
1146  8C01 D8           	ret c
1147  8C02
1148  8C02              ; Nuevo techo, (más bajo que el anterior).
1149  8C02
1150  8C02              ;	di
1151  8C02              ;	jr $
1152  8C02              ;	ei
1153  8C02
1154  8C02              ; Fijamos nuevo techo y borramos bytes sobrantes.
1155  8C02
1156  8C02 47           	ld b,a
1157  8C03
1158  8C03 7D           	ld a,l
1159  8C04 12           	ld (de),a
1160  8C05 AF           	xor a
1161  8C06
1162  8C06 77           1 ld (hl),a
1163  8C07 2C           	inc l
1164  8C08 10 FC        	djnz 1B
1165  8C0A
1166  8C0A              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1167  8C0A
1168  8C0A 21 1D 8B     	ld hl,Ctrl_3
1169  8C0D CB DE        	set 3,(hl)
1170  8C0F
1171  8C0F C9           	ret
1172  8C10
1173  8C10              ; -----------------------------------------------------------------------------------
1174  8C10              ;
1175  8C10              ;	20/01/24
1176  8C10              ;
1177  8C10              ;
1178  8C10
1179  8C10              Construye_movimientos_masticados_entidad
1180  8C10
1181  8C10 2A D9 8A     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1182  8C13 E5           	push hl
1183  8C14 CD 57 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1184  8C17              ;															; _ el (Contador_de_mov_masticados).
1185  8C17 CD F7 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1186  8C1A              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1187  8C1A CD F5 95     	call Recompone_posicion_inicio
1188  8C1D
1189  8C1D CD 89 8F     1 call Draw
1190  8C20 CD 3C 8C     	call Guarda_movimiento_masticado
1191  8C23
1192  8C23 CD 6F 99     	call Movimiento
1193  8C26
1194  8C26 3A 1D 8B     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1195  8C29 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1196  8C2B 28 F0        	jr z,1B
1197  8C2D
1198  8C2D              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1199  8C2D              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1200  8C2D
1201  8C2D E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1202  8C2E 22 D9 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
1203  8C31
1204  8C31              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1205  8C31
1206  8C31 CD D3 9A     	call Situa_en_contador_general_de_mov_masticados
1207  8C34
1208  8C34              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1209  8C34              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1210  8C34
1211  8C34 ED 4B DB 8A  	ld bc,(Contador_de_mov_masticados)
1212  8C38 71           	ld (hl),c
1213  8C39 23           	inc hl
1214  8C3A 70           	ld (hl),b
1215  8C3B
1216  8C3B C9           	ret
1217  8C3C
1218  8C3C              ; -----------------------------------------------------------------------------------
1219  8C3C              ;
1220  8C3C              ;	28/12/23
1221  8C3C              ;
1222  8C3C              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1223  8C3C              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1224  8C3C
1225  8C3C              Guarda_movimiento_masticado
1226  8C3C
1227  8C3C ED 73 0D 8B  	ld (Stack),sp
1228  8C40 ED 7B D9 8A  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1229  8C44
1230  8C44              ;	push hl
1231  8C44 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1232  8C46 FD E5            push iy 												; Pushea Puntero_objeto.
1233  8C48
1234  8C48 ED 7B 0D 8B      ld sp,(Stack)
1235  8C4C
1236  8C4C 2A DB 8A        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1237  8C4F 23           	inc hl
1238  8C50 22 DB 8A     	ld (Contador_de_mov_masticados),hl
1239  8C53
1240  8C53 CD 57 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1241  8C56              ;															; _ el (Contador_de_mov_masticados).
1242  8C56 C9               ret
1243  8C57
1244  8C57              ; --------------------------------------------------------------------------------------------------------------
1245  8C57              ;
1246  8C57              ;	12/1/24
1247  8C57              ;
1248  8C57              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1249  8C57
1250  8C57              Actualiza_Puntero_de_almacen_de_mov_masticados
1251  8C57
1252  8C57 2A D9 8A     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1253  8C5A 01 04 00     	ld bc,4
1254  8C5D A7           	and a
1255  8C5E ED 4A        	adc hl,bc
1256  8C60 22 D9 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
1257  8C63 C9           	ret
1258  8C64
1259  8C64              ; --------------------------------------------------------------------------------------------------------------
1260  8C64              ;
1261  8C64              ;	09/03/24
1262  8C64              ;
1263  8C64              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1264  8C64              ;
1265  8C64              ;	IX contiene el puntero de impresión.
1266  8C64              ;	DE contiene (Puntero_objeto).
1267  8C64
1268  8C64
1269  8C64 ED 73 0D 8B  Cargamos_registros_con_mov_masticado ld (Stack),sp
1270  8C68 ED 7B D9 8A  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1271  8C6C
1272  8C6C D1           	pop de 															; DE contiene Puntero_objeto
1273  8C6D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1274  8C6F
1275  8C6F ED 73 D9 8A  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1276  8C73
1277  8C73 ED 7B 0D 8B  	ld sp,(Stack)
1278  8C77
1279  8C77 C9           	ret
1280  8C78
1281  8C78              ; --------------------------------------------------------------------------------------------------------------
1282  8C78              ;
1283  8C78              ;	28/12/23
1284  8C78              ;
1285  8C78              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1286  8C78              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1287  8C78
1288  8C78              Guarda_foto_entidad_a_pintar
1289  8C78
1290  8C78 3A DD 8A     	ld a,(Ctrl_0)
1291  8C7B CB 77        	bit 6,a
1292  8C7D 28 04        	jr z,5F
1293  8C7F
1294  8C7F              ;	Guarda la foto de Amadeus.
1295  8C7F
1296  8C7F              ;	call Draw
1297  8C7F              ;	call Guarda_movimiento_masticado	;! Provisional
1298  8C7F CD 5A 9B     	call Genera_datos_de_impresion
1299  8C82 C9           	ret
1300  8C83
1301  8C83              ; ENTIDADES!
1302  8C83              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1303  8C83
1304  8C83 3A 1D 8B     5 ld a,(Ctrl_3)
1305  8C86 CB 5F        	bit 3,a
1306  8C88 28 01        	jr z,1F
1307  8C8A
1308  8C8A              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1309  8C8A
1310  8C8A              4
1311  8C8A              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1312  8C8A C9           	ret
1313  8C8B
1314  8C8B              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1315  8C8B
1316  8C8B 3A 1D 8B     1 ld a,(Ctrl_3)
1317  8C8E CB 57        	bit 2,a
1318  8C90 20 10        	jr nz,6F
1319  8C92
1320  8C92              ; Entidad guía o fantasma ???
1321  8C92
1322  8C92 3A E2 8A     	ld a,(Ctrl_2)
1323  8C95 CB 6F        	bit 5,a
1324  8C97 20 10        	jr nz,3F
1325  8C99
1326  8C99              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1327  8C99
1328  8C99 18 EF        	jr 4B
1329  8C9B
1330  8C9B              ; ENTIDAD_GUÍA:
1331  8C9B              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1332  8C9B              ; _guardando "movimientos_masticados".
1333  8C9B
1334  8C9B 3A 1D 8B     2 ld a,(Ctrl_3)
1335  8C9E CB 57        	bit 2,a
1336  8CA0 28 07        	jr z,3F
1337  8CA2
1338  8CA2              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1339  8CA2              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1340  8CA2
1341  8CA2 CB 97        6 res 2,a
1342  8CA4 CB DF        	set 3,a
1343  8CA6 32 1D 8B     	ld (Ctrl_3),a
1344  8CA9
1345  8CA9
1346  8CA9              ;	Esto sólo lo ejecuta una entidad guía.
1347  8CA9
1348  8CA9 CD 89 8F     3 	call Draw
1349  8CAC CD 3C 8C     	call Guarda_movimiento_masticado
1350  8CAF CD 5A 9B     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1351  8CB2
1352  8CB2              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1353  8CB2              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1354  8CB2
1355  8CB2              ;	call Convierte_guia_en_fantasma
1356  8CB2 C9           	ret
1357  8CB3
1358  8CB3              ; ---------------------------------------------------------------------------------------------------------------------
1359  8CB3              ;
1360  8CB3              ;	13/03/24
1361  8CB3              ;
1362  8CB3
1363  8CB3              Inicia_albumes_de_lineas
1364  8CB3
1365  8CB3 21 00 80     	ld hl,Scanlines_album
1366  8CB6 22 13 8B     	ld (Album_de_pintado),hl
1367  8CB9 22 1B 8B     	ld (Scanlines_album_SP),hl
1368  8CBC
1369  8CBC 21 00 82     	ld hl,Scanlines_album_2
1370  8CBF 22 15 8B     	ld (Album_de_borrado),hl
1371  8CC2
1372  8CC2 C9           	ret
1373  8CC3
1374  8CC3
1375  8CC3
1376  8CC3              ; ---------------------------------------------------------------------------------------------------------------------
1377  8CC3              ;
1378  8CC3              ; 8/1/23
1379  8CC3              ;
1380  8CC3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1381  8CC3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1382  8CC3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1383  8CC3
1384  8CC3              ; Destruye HL y DE !!!!!
1385  8CC3
1386  8CC3              Inicia_punteros_de_cajas
1387  8CC3
1388  8CC3 21 10 88     	ld hl,Indice_de_cajas_de_entidades
1389  8CC6 CD F1 8C         call Extrae_address
1390  8CC9 22 FF 8A         ld (Puntero_store_caja),hl
1391  8CCC 21 12 88     	ld hl,Indice_de_cajas_de_entidades+2
1392  8CCF 22 03 8B     	ld (Indice_restore_caja),hl
1393  8CD2 CD F1 8C     	call Extrae_address
1394  8CD5 22 01 8B     	ld (Puntero_restore_caja),hl
1395  8CD8 C9               ret
1396  8CD9
1397  8CD9              ; *************************************************************************************************************************************************************
1398  8CD9              ;
1399  8CD9              ; 8/1/23
1400  8CD9              ;
1401  8CD9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1402  8CD9
1403  8CD9              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1404  8CD9              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1405  8CD9              ;	ret
1406  8CD9              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1407  8CD9              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1408  8CD9              ;	ret
1409  8CD9
1410  8CD9              ; -------------------------------------------------------------------------------------------------------------
1411  8CD9              ;
1412  8CD9              ; 21/9/23
1413  8CD9              ;
1414  8CD9
1415  8CD9              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1416  8CD9
1417  8CD9              ;;Limpia_album_Amadeus
1418  8CD9              ;
1419  8CD9              ;;	ld hl,Scanlines_album_Amadeus
1420  8CD9              ;;	ld a,(hl)
1421  8CD9              ;;	and a
1422  8CD9              ;;	ret z
1423  8CD9
1424  8CD9              ;;	ld hl,Scanlines_album_Amadeus;
1425  8CD9              ;;	ld de,Scanlines_album_Amadeus+1
1426  8CD9              ;;	ld bc,11
1427  8CD9              ;;	xor a
1428  8CD9              ;;	ld (hl),a
1429  8CD9              ;;	ldir
1430  8CD9
1431  8CD9              ;;	ld hl,Scanlines_album_Amadeus
1432  8CD9              ;;	ld (End_Snapshot_Amadeus),hl
1433  8CD9
1434  8CD9              ;;	ret
1435  8CD9
1436  8CD9              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1437  8CD9              ;	ld de,Variables_de_borrado+1
1438  8CD9              ;	ld bc,5
1439  8CD9              ;	xor a
1440  8CD9              ;	ld (hl),a
1441  8CD9              ;	ldir
1442  8CD9              ;	ret
1443  8CD9
1444  8CD9              ; -------------------------------------------------------------------------------------------------------------
1445  8CD9              ;
1446  8CD9              ; 	21/02/24
1447  8CD9              ;
1448  8CD9              ;	MODIFICA: AF,HL,BC,DE
1449  8CD9              ;
1450  8CD9              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1451  8CD9              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1452  8CD9
1453  8CD9              Calcula_numero_de_malotes
1454  8CD9
1455  8CD9 21 00 80     	ld hl,Scanlines_album
1456  8CDC EB           	ex de,hl
1457  8CDD 2A 1B 8B     	ld hl,(Scanlines_album_SP)
1458  8CE0
1459  8CE0 06 00        	ld b,0
1460  8CE2 7D           	ld a,l
1461  8CE3 93           	sub e
1462  8CE4 28 07        	jr z,1F
1463  8CE6
1464  8CE6              ; Nº de malotes no es "0".
1465  8CE6
1466  8CE6 D6 06        2 sub 6
1467  8CE8 04           	inc b
1468  8CE9 A7           	and a
1469  8CEA 20 FA        	jr nz,2B
1470  8CEC 78           	ld a,b
1471  8CED
1472  8CED 32 08 8B     1 ld (Numero_de_malotes),a
1473  8CF0 C9           	ret
1474  8CF1
1475  8CF1              ; *************************************************************************************************************************************************************
1476  8CF1              ;
1477  8CF1              ; 20/10/22
1478  8CF1              ;
1479  8CF1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1480  8CF1              ;
1481  8CF1              ; Destruye el puntero y DE !!!!!
1482  8CF1
1483  8CF1 5E           Extrae_address ld e,(hl)
1484  8CF2 23           	inc hl
1485  8CF3 56           	ld d,(hl)
1486  8CF4 2B           	dec hl
1487  8CF5 EB           	ex de,hl
1488  8CF6 C9           	ret
1489  8CF7
1490  8CF7              ; *************************************************************************************************************************************************************
1491  8CF7              ;
1492  8CF7              ;	20/1/24
1493  8CF7              ;
1494  8CF7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1495  8CF7              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1496  8CF7              ;
1497  8CF7              ;   Destruye HL y BC !!!!!,
1498  8CF7              ;
1499  8CF7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1500  8CF7              ;					"0" ..... Izquierda.
1501  8CF7
1502  8CF7              Inicia_Puntero_objeto
1503  8CF7
1504  8CF7 3A CF 8A     	ld a,(Cuad_objeto)
1505  8CFA E6 01        	and 1
1506  8CFC F5           	push af
1507  8CFD CC 19 8D     	call z,Inicia_puntero_objeto_izq
1508  8D00 F1           	pop af
1509  8D01 C8           	ret z
1510  8D02 CD 06 8D     	call Inicia_puntero_objeto_der
1511  8D05 C9           	ret
1512  8D06
1513  8D06              ; Arrancamos desde la parte izquierda de la pantalla.
1514  8D06              ; Iniciamos (Indice_Sprite_der).
1515  8D06
1516  8D06 2A C5 8A     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1517  8D09 22 C9 8A     	ld (Puntero_DESPLZ_der),hl
1518  8D0C CD F1 8C     	call Extrae_address
1519  8D0F 22 BF 8A     	ld (Puntero_objeto),hl
1520  8D12
1521  8D12 2A C7 8A     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1522  8D15 22 CB 8A     	ld (Puntero_DESPLZ_izq),hl
1523  8D18 C9           	ret
1524  8D19
1525  8D19              ; Arrancamos desde la parte derecha de la pantalla.
1526  8D19              ; Iniciamos (Indice_Sprite_izq).
1527  8D19
1528  8D19 2A C7 8A     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1529  8D1C 22 CB 8A     	ld (Puntero_DESPLZ_izq),hl
1530  8D1F CD F1 8C     	call Extrae_address
1531  8D22 22 BF 8A     	ld (Puntero_objeto),hl
1532  8D25
1533  8D25 2A C5 8A     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1534  8D28 22 C9 8A     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1535  8D2B C9           	ret
1536  8D2C
1537  8D2C              ; **************************************************************************************************
1538  8D2C              ;
1539  8D2C              ;	31/01/24
1540  8D2C              ;
1541  8D2C              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1542  8D2C
1543  8D2C              Restore_entidad
1544  8D2C
1545  8D2C 2A FF 8A     	ld hl,(Puntero_store_caja)
1546  8D2F 11 BA 8A     	ld de,Bandeja_DRAW
1547  8D32 7E           	ld a,(hl)
1548  8D33 12           	ld (de),a
1549  8D34 23           	inc hl 											; (Tipo).
1550  8D35
1551  8D35 11 C1 8A     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1552  8D38 01 02 00     	ld bc,2
1553  8D3B ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1554  8D3D
1555  8D3D 13           	inc de
1556  8D3E 7E           	ld a,(hl)
1557  8D3F 12           	ld (de),a 										; Transferimos (Attr).
1558  8D40 23           	inc hl
1559  8D41
1560  8D41 11 D0 8A     	ld de,Impacto
1561  8D44
1562  8D44 7E           	ld a,(hl)
1563  8D45 12           	ld (de),a 										; Transferimos (Impacto).
1564  8D46 23           	inc hl
1565  8D47
1566  8D47 13           	inc de
1567  8D48
1568  8D48 01 06 00     	ld bc,6
1569  8D4B ED B0        	ldir
1570  8D4D
1571  8D4D 01 07 00     	ld bc,7
1572  8D50 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1573  8D52              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1574  8D52 11 E2 8A     	ld de,Ctrl_2
1575  8D55
1576  8D55 7E           	ld a,(hl)
1577  8D56 12           	ld (de),a 										; Transferimos (Ctrl_2).
1578  8D57
1579  8D57 C9           	ret
1580  8D58
1581  8D58              ; **************************************************************************************************
1582  8D58              ;
1583  8D58              ;	08/05/23
1584  8D58              ;
1585  8D58              ;	Incrementamos los dos punteros de entidades. (+1).
1586  8D58
1587  8D58              Incrementa_punteros_de_cajas
1588  8D58
1589  8D58 2A 01 8B     	ld hl,(Puntero_restore_caja)
1590  8D5B 22 FF 8A     	ld (Puntero_store_caja),hl
1591  8D5E 2A 03 8B     	ld hl,(Indice_restore_caja)
1592  8D61 23           	inc hl
1593  8D62 23           	inc hl
1594  8D63 22 03 8B     	ld (Indice_restore_caja),hl
1595  8D66 CD F1 8C         call Extrae_address
1596  8D69 22 01 8B         ld (Puntero_restore_caja),hl
1597  8D6C C9               ret
1598  8D6D
1599  8D6D              ; **************************************************************************************************
1600  8D6D              ;
1601  8D6D              ;	21/12/23
1602  8D6D              ;
1603  8D6D              ;	Restore_Amadeus
1604  8D6D              ;
1605  8D6D              ;	Cargamos en DRAW los parámetros de Amadeus.
1606  8D6D              ;
1607  8D6D
1608  8D6D              ;Restore_Amadeus	push hl
1609  8D6D              ;	push de
1610  8D6D              ; 	push bc
1611  8D6D              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1612  8D6D              ;	ld de,Bandeja_DRAW
1613  8D6D              ;	ld bc,42
1614  8D6D              ;	ldir
1615  8D6D              ;	pop bc
1616  8D6D              ;	pop de
1617  8D6D              ;	pop hl
1618  8D6D              ;	ret
1619  8D6D
1620  8D6D              ; *************************************************************************************************************************************************************
1621  8D6D              ;
1622  8D6D              ;	21/12/23
1623  8D6D              ;
1624  8D6D              ;	Store_Amadeus
1625  8D6D              ;
1626  8D6D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1627  8D6D              ;
1628  8D6D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1629  8D6D              ;
1630  8D6D              ;	DESTRUYE: HL y BC y DE.
1631  8D6D
1632  8D6D              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1633  8D6D              ;	ld bc,42
1634  8D6D              ;	ldir
1635  8D6D              ;	ret
1636  8D6D
1637  8D6D              ; -----------------------------------------------------------
1638  8D6D              ;
1639  8D6D              ;	21/12/23
1640  8D6D              ;
1641  8D6D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1642  8D6D              ;
1643  8D6D              ;	Destruye: HL,BC,DE,A
1644  8D6D
1645  8D6D              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1646  8D6D              ;	ld bc,41
1647  8D6D              ;	xor a
1648  8D6D              ;	ld (hl),a;
1649  8D6D              ;	ld de,Bandeja_DRAW+1
1650  8D6D              ;	ldir
1651  8D6D              ;	ret
1652  8D6D
1653  8D6D              ; -----------------------------------------------------------
1654  8D6D
1655  8D6D              ; Teclado.
1656  8D6D
1657  8D6D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1658  8D6F DB FE        	in a,($fe)
1659  8D71 E6 01        	and $01
1660  8D73 28 02        	jr z,1f
1661  8D75 18 F6        	jr Pulsa_ENTER
1662  8D77 C9           1 ret
1663  8D78
1664  8D78              ; **************************************************************************************************
1665  8D78              ;
1666  8D78              ; Temporización.
1667  8D78
1668  8D78              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1669  8D78              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1670  8D78              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1671  8D78              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1672  8D78
1673  8D78              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1674  8D78              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1675  8D78              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1676  8D78
1677  8D78              ; A partir de $4f61 no hace falta DELAY.
1678  8D78
1679  8D78              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1680  8D78
1681  8D78 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1682  8D7B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1683  8D7C 78           	LD A,B
1684  8D7D A7           	AND A
1685  8D7E 20 FB        	JR NZ,wait
1686  8D80 C9           	RET
1687  8D81
1688  8D81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1689  8D81              ;
1690  8D81              ;	5/3/23
1691  8D81              ;
1692  8D81              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1693  8D81
1694  8D81              ;Movimiento_Amadeus
1695  8D81
1696  8D81              ; Disparo.
1697  8D81
1698  8D81              ;	ld a,(Disparo_Amadeus)
1699  8D81              ;	and a
1700  8D81              ;	jr nz,1F
1701  8D81              ;	jr 2F
1702  8D81
1703  8D81              ;1 ld a,$f7													; "5" para disparar.
1704  8D81              ;	in a,($fe)
1705  8D81              ;	and $10
1706  8D81
1707  8D81              ;	push af
1708  8D81              ;	call z,Genera_disparo
1709  8D81              ;	pop af
1710  8D81              ;	jr nz,2F
1711  8D81
1712  8D81              ;	ld a,(Disparo_Amadeus)
1713  8D81              ;	xor 1
1714  8D81              ;	ld (Disparo_Amadeus),a
1715  8D81              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1716  8D81              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1717  8D81              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1718  8D81              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1719  8D81
1720  8D81              ;	ld a,$f7
1721  8D81              ;	in a,($fe)
1722  8D81              ;	and $01
1723  8D81              ;	ret z
1724  8D81
1725  8D81              ;	ld a,$f7
1726  8D81              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1727  8D81              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1728  8D81              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1729  8D81              ;	ret
1730  8D81
1731  8D81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1732  8D81              ;
1733  8D81              ;	Rutina provisional para que los malotes cagen balas.
1734  8D81
1735  8D81              ;Detecta_disparo_entidad
1736  8D81
1737  8D81              ;	ld a,(Disparo_entidad)
1738  8D81              ;	and a
1739  8D81              ;	ret z
1740  8D81
1741  8D81              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1742  8D81
1743  8D81              ;	ld a,$7f				; Detecta SPACE.
1744  8D81              ;	in a,($fe)
1745  8D81              ;	and 1
1746  8D81              ;	ret nz
1747  8D81
1748  8D81              ;	call Genera_disparo
1749  8D81              ;	ret
1750  8D81
1751  8D81              ; ----------------------------------------------------------------------
1752  8D81              ;
1753  8D81              ;	8/9/23
1754  8D81
1755  8D81              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1756  8D81              ; 	dec hl
1757  8D81              ;	ld a,(hl)
1758  8D81              ;	and a
1759  8D81              ;	ret z										; Salimos si es álbum está vacío.
1760  8D81
1761  8D81              ;	ld de,Variables_de_borrado+5
1762  8D81              ;	ld bc,6
1763  8D81              ;	lddr
1764  8D81              ;	ret
1765  8D81
1766  8D81              ; ----------------------------------------------------------------------
1767  8D81              ;
1768  8D81              ;	9/9/23
1769  8D81
1770  8D81              ;Repone_datos_de_borrado_Amadeus
1771  8D81
1772  8D81              ;	ld hl,Variables_de_borrado
1773  8D81              ;	ld de,Scanlines_album_Amadeus
1774  8D81              ;	ld bc,6
1775  8D81              ;	ldir
1776  8D81
1777  8D81              ;	ex de,hl
1778  8D81              ;	ld (End_Snapshot_Amadeus),hl
1779  8D81
1780  8D81              ;	ret
1781  8D81
1782  8D81              ; ----------------------------------------------------------------------
1783  8D81              ;
1784  8D81              ;	27/10/23
1785  8D81              ;
1786  8D81
1787  8D81              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1788  8D81              ;	_ Scanlines_album correspondiente.
1789  8D81
1790  8D81              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1791  8D81              ;	_ durante el proceso de escritura.
1792  8D81
1793  8D81              ;Repone_datos_de_borrado
1794  8D81
1795  8D81              ;	ld de,(Scanlines_album_SP)
1796  8D81              ;	ld hl,Variables_de_borrado
1797  8D81              ;	ld bc,6
1798  8D81              ;	ldir
1799  8D81
1800  8D81              ;	ex de,hl
1801  8D81              ;	ld (Scanlines_album_SP),hl
1802  8D81
1803  8D81              ;	ret
1804  8D81
1805  8D81              ; --------------------------------------------------------------------------------------
1806  8D81
1807  8D81              ;Pinta_Amadeus
1808  8D81
1809  8D81              ;   	call Calcula_malotes_Amadeus
1810  8D81              ;	call Extrae_foto_Amadeus
1811  8D81              ;	call Limpia_album_Amadeus
1812  8D81
1813  8D81              ;	ret
1814  8D81
1815  8D81              ; -----------------------------------------------------------------------------------
1816  8D81              ;
1817  8D81              ;	10/12/23
1818  8D81              ;
1819  8D81              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1820  8D81
1821  8D81              Actualiza_relojes
1822  8D81
1823  8D81 3A 1D 8B     	ld a,(Ctrl_3)
1824  8D84 CB 47        	bit 0,a
1825  8D86 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1826  8D87
1827  8D87 21 22 8B     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1828  8D8A 34           	inc (hl)
1829  8D8B
1830  8D8B 34           	inc (hl)
1831  8D8C 35           	dec (hl)
1832  8D8D C0           	ret nz
1833  8D8E
1834  8D8E 21 23 8B     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1835  8D91 34           	inc (hl)
1836  8D92 C9           	ret
1837  8D93
1838  8D93              ; ---------------------------------------------------------------
1839  8D93
1840  8D93              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D93              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D93              ;
   3+ 8D93              ;   8/3/24
   4+ 8D93              ;
   5+ 8D93              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D93              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D93              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D93              ;	_ de la 1ª entidad del Nivel.
   9+ 8D93              ;
  10+ 8D93              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8D93
  12+ 8D93              ;	MODIFICA: HL,DE y A.
  13+ 8D93              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8D93
  15+ 8D93              Inicializa_Nivel
  16+ 8D93
  17+ 8D93 2A 27 8B     	ld hl,(Puntero_indice_NIVELES)
  18+ 8D96 CD F1 8C     	call Extrae_address
  19+ 8D99 7E           	ld a,(hl)
  20+ 8D9A 32 05 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8D9D 23           	inc hl
  22+ 8D9E CD AB 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8DA1 22 29 8B     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8DA4 CD B4 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8DA7
  26+ 8DA7 CD C5 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8DAA C9           	ret
  28+ 8DAB
  29+ 8DAB              ; ----------------------
  30+ 8DAB
  31+ 8DAB 11 E4 8A     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8DAE 01 04 00     	ld bc,4
  33+ 8DB1 ED B0        	ldir
  34+ 8DB3 C9           	ret
  35+ 8DB4
  36+ 8DB4 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8DB5 CD 05 8F         call Calcula_salto_en_BC
  38+ 8DB8 21 8C 87         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8DBB A7               and a
  40+ 8DBC ED 4A            adc hl,bc
  41+ 8DBE CD F1 8C         call Extrae_address
  42+ 8DC1 22 F0 8A         ld (Puntero_indice_mov),hl
  43+ 8DC4 C9               ret
  44+ 8DC5
  45+ 8DC5 3A BA 8A     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8DC8 CD 05 8F     	call Calcula_salto_en_BC
  47+ 8DCB 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8DCE A7               and a
  49+ 8DCF ED 4A            adc hl,bc
  50+ 8DD1 CD F1 8C         call Extrae_address
  51+ 8DD4 22 D9 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8DD7 C9           	ret
  53+ 8DD8
  54+ 8DD8              ;---------------------------------------------------------------------------------------------------------------
  55+ 8DD8              ;
  56+ 8DD8              ;   5/1/24
  57+ 8DD8              ;
  58+ 8DD8              ;	Destruye A,BC,HL,DE
  59+ 8DD8
  60+ 8DD8              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8DD8              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8DD8
  63+ 8DD8              Inicia_Entidades
  64+ 8DD8
  65+ 8DD8              ; Preparamos los punteros de las cajas de entidades:
  66+ 8DD8
  67+ 8DD8 CD C3 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8DDB              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8DDB CD 6C 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8DDE
  71+ 8DDE 2A 29 8B     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8DE1
  73+ 8DE1 22 29 8B     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8DE4
  75+ 8DE4 CD B3 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8DE7
  77+ 8DE7 2A 29 8B     	ld hl,(Datos_de_nivel)
  78+ 8DEA
  79+ 8DEA              ; En este punto:
  80+ 8DEA              ;
  81+ 8DEA              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8DEA              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8DEA
  84+ 8DEA C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8DEB
  86+ 8DEB 7E           	ld a,(hl)
  87+ 8DEC CD 28 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8DEF
  89+ 8DEF CD 17 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8DF2
  91+ 8DF2              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8DF2
  93+ 8DF2 CD D5 8E     	call Busca_mov_masticados_segun_tipo
  94+ 8DF5
  95+ 8DF5 A7           	and a
  96+ 8DF6 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8DF8
  98+ 8DF8              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8DF8
 100+ 8DF8              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8DF8              ;	_ de este tipo de entidad.
 102+ 8DF8
 103+ 8DF8 CD D3 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ 8DFB CD E0 9A     	call Transfiere_datos_de_contadores
 105+ 8DFE
 106+ 8DFE 18 06        	jr 4F
 107+ 8E00
 108+ 8E00 CD 10 8C     3 call Construye_movimientos_masticados_entidad
 109+ 8E03
 110+ 8E03              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8E03              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8E03              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8E03              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8E03              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8E03
 116+ 8E03 CD 93 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8E06              ;																; _ Mov_masticados ya generados.
 118+ 8E06 CD 42 8E     4 call Guarda_foto_de_mov_masticado
 119+ 8E09
 120+ 8E09              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8E09
 122+ 8E09 2A D7 8A     	ld hl,(Puntero_de_impresion)
 123+ 8E0C CD 16 9B     	call Genera_coordenadas
 124+ 8E0F CD 3E 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8E12 CD 4C 8E     	call Limpiamos_bandeja_DRAW
 126+ 8E15 CD 58 8D     	call Incrementa_punteros_de_cajas
 127+ 8E18
 128+ 8E18              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8E18              ; _ entidad del Nivel.
 130+ 8E18
 131+ 8E18 3A 1E 8B     	ld a,(Ctrl_4)
 132+ 8E1B E6 F0        	and $f0
 133+ 8E1D 32 1E 8B     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8E20
 135+ 8E20              ; Siguiente entidad del Nivel.
 136+ 8E20
 137+ 8E20 2A 29 8B     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8E23 23           	inc hl 														; _ entidad del Nivel.
 139+ 8E24
 140+ 8E24 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8E25
 142+ 8E25 10 BA        	djnz 2B
 143+ 8E27
 144+ 8E27 C9           	ret
 145+ 8E28
 146+ 8E28              ; ---------------------------------------------------------------------
 147+ 8E28              ;
 148+ 8E28              ;	10/02/24
 149+ 8E28              ;
 150+ 8E28              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8E28              ;
 152+ 8E28              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8E28
 154+ 8E28              Definicion_segun_tipo
 155+ 8E28
 156+ 8E28 CD 05 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8E2B 21 DD 88     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8E2E CD 0D 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8E31 C9           	ret
 160+ 8E32
 161+ 8E32              ; ---------------------------------------------------------------------
 162+ 8E32              ;
 163+ 8E32              ;	30/01/24
 164+ 8E32
 165+ 8E32
 166+ 8E32              Store_Restore_cajas
 167+ 8E32
 168+ 8E32              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8E32
 170+ 8E32 2A D7 8A     	ld hl,(Puntero_de_impresion)
 171+ 8E35 CD 16 9B     	call Genera_coordenadas
 172+ 8E38
 173+ 8E38 CD 3E 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8E3B CD 4C 8E     	call Limpiamos_bandeja_DRAW
 175+ 8E3E
 176+ 8E3E              ; 	Entidad_sospechosa. 20/4/23
 177+ 8E3E
 178+ 8E3E              ;	ld a,(Impacto)
 179+ 8E3E              ;	and a
 180+ 8E3E              ;	jr z,1F
 181+ 8E3E
 182+ 8E3E              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8E3E              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8E3E              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8E3E              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8E3E              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8E3E
 188+ 8E3E
 189+ 8E3E              ;1 ld hl,(Puntero_restore_caja)
 190+ 8E3E              ;	ld a,(hl)
 191+ 8E3E              ;	and a
 192+ 8E3E              ;	push af
 193+ 8E3E              ;	jr z,2F
 194+ 8E3E
 195+ 8E3E              ;	di
 196+ 8E3E              ;	ld de,Bandeja_DRAW
 197+ 8E3E              ;	ld bc,42
 198+ 8E3E              ;	ldir
 199+ 8E3E              ;	ei
 200+ 8E3E
 201+ 8E3E CD 58 8D     2 call Incrementa_punteros_de_cajas
 202+ 8E41 C9           	ret
 203+ 8E42
 204+ 8E42
 205+ 8E42              ; ---------------------------------------------------------------------
 206+ 8E42              ;
 207+ 8E42              ;	29/01/24
 208+ 8E42
 209+ 8E42              Guarda_foto_de_mov_masticado
 210+ 8E42
 211+ 8E42 CD 64 8C     	call Cargamos_registros_con_mov_masticado
 212+ 8E45 CD 5A 9B     	call Genera_datos_de_impresion
 213+ 8E48              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8E48              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8E48              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8E48              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8E48
 218+ 8E48 CD 57 8E     	call Decrementa_Contador_de_mov_masticados
 219+ 8E4B C9           	ret
 220+ 8E4C
 221+ 8E4C              ; ---------------------------------------------------------------------
 222+ 8E4C              ;
 223+ 8E4C              ;	25/01/24
 224+ 8E4C
 225+ 8E4C 21 BA 8A     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8E4F 06 2A        	ld b,42
 227+ 8E51 AF           	xor a
 228+ 8E52
 229+ 8E52 77           1 ld (hl),a
 230+ 8E53 23           	inc hl
 231+ 8E54 10 FC        	djnz 1B
 232+ 8E56
 233+ 8E56 C9           	ret
 234+ 8E57
 235+ 8E57              ; ---------------------------------------------------------------------
 236+ 8E57              ;
 237+ 8E57              ;	22/01/24
 238+ 8E57
 239+ 8E57 2A DB 8A     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8E5A 2B           	dec hl
 241+ 8E5B
 242+ 8E5B 24           	inc h
 243+ 8E5C 25           	dec h
 244+ 8E5D
 245+ 8E5D FC 64 8E     	call m,Reinicia_entidad_maliciosa
 246+ 8E60
 247+ 8E60              ;	jr nz,1F
 248+ 8E60
 249+ 8E60              ;	inc l
 250+ 8E60              ;	dec l
 251+ 8E60
 252+ 8E60              ;	di
 253+ 8E60              ;	jr z,$
 254+ 8E60              ;	ei
 255+ 8E60
 256+ 8E60 22 DB 8A     1 ld (Contador_de_mov_masticados),hl
 257+ 8E63 C9           	ret
 258+ 8E64
 259+ 8E64              ; ---------------------------------------------------------------------
 260+ 8E64              ;
 261+ 8E64              ;	10/2/24
 262+ 8E64
 263+ 8E64              Reinicia_entidad_maliciosa
 264+ 8E64
 265+ 8E64              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8E64
 267+ 8E64 CD D3 9A     	call Situa_en_contador_general_de_mov_masticados
 268+ 8E67 CD E0 9A     	call Transfiere_datos_de_contadores
 269+ 8E6A
 270+ 8E6A              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8E6A
 272+ 8E6A 3A BA 8A     	ld a,(Tipo)
 273+ 8E6D CD 28 8E     	call Definicion_segun_tipo
 274+ 8E70
 275+ 8E70 E5           	push hl
 276+ 8E71 DD E1        	pop ix
 277+ 8E73
 278+ 8E73 DD 6E 0B     	ld l,(ix+11)
 279+ 8E76 DD 66 0C     	ld h,(ix+12)
 280+ 8E79
 281+ 8E79 22 D9 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8E7C
 283+ 8E7C              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8E7C              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8E7C
 286+ 8E7C 2A 1B 8B     	ld hl,(Scanlines_album_SP)
 287+ 8E7F 01 06 00     	ld bc,6
 288+ 8E82 A7           	and a
 289+ 8E83 ED 42        	sbc hl,bc
 290+ 8E85 22 1B 8B     	ld (Scanlines_album_SP),hl
 291+ 8E88
 292+ 8E88 CD 64 8C     	call Cargamos_registros_con_mov_masticado
 293+ 8E8B CD 5A 9B     	call Genera_datos_de_impresion
 294+ 8E8E
 295+ 8E8E 2A DB 8A     	ld hl,(Contador_de_mov_masticados)
 296+ 8E91 2B           	dec hl
 297+ 8E92
 298+ 8E92 C9           	ret
 299+ 8E93
 300+ 8E93
 301+ 8E93
 302+ 8E93
 303+ 8E93              ; ---------------------------------------------------------------------
 304+ 8E93              ;
 305+ 8E93              ;	22/01/24
 306+ 8E93
 307+ 8E93 21 1E 8B     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8E96 CB 46        	bit 0,(hl)
 309+ 8E98 20 0D        	jr nz,1F
 310+ 8E9A CB 4E        	bit 1,(hl)
 311+ 8E9C 20 0C        	jr nz,2F
 312+ 8E9E CB 56        	bit 2,(hl)
 313+ 8EA0 20 0B        	jr nz,3F
 314+ 8EA2 CB 5E        	bit 3,(hl)
 315+ 8EA4 20 0A        	jr nz,4F
 316+ 8EA6 C9           	ret
 317+ 8EA7
 318+ 8EA7 CB E6        1 set 4,(hl)
 319+ 8EA9 C9           	ret
 320+ 8EAA CB EE        2 set 5,(hl)
 321+ 8EAC C9           	ret
 322+ 8EAD CB F6        3 set 6,(hl)
 323+ 8EAF C9           	ret
 324+ 8EB0 CB FE        4 set 7,(hl)
 325+ 8EB2 C9           	ret
 326+ 8EB3
 327+ 8EB3              ; ---------------------------------------------------------------------
 328+ 8EB3              ;
 329+ 8EB3              ;	23/01/24
 330+ 8EB3              ;
 331+ 8EB3              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8EB3              ;
 333+ 8EB3              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8EB3              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8EB3              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8EB3              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8EB3
 338+ 8EB3              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8EB3
 340+ 8EB3 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8EB4 3D           	dec a
 342+ 8EB5 20 06        	jr nz,1F
 343+ 8EB7
 344+ 8EB7              ; --- Tipo_1
 345+ 8EB7
 346+ 8EB7 21 1E 8B     	ld hl,Ctrl_4
 347+ 8EBA CB C6        	set 0,(hl)
 348+ 8EBC C9           	ret
 349+ 8EBD
 350+ 8EBD 3D           1 dec a
 351+ 8EBE 20 06        	jr nz,2F
 352+ 8EC0
 353+ 8EC0              ; --- Tipo_2
 354+ 8EC0
 355+ 8EC0 21 1E 8B     	ld hl,Ctrl_4
 356+ 8EC3 CB CE        	set 1,(hl)
 357+ 8EC5 C9           	ret
 358+ 8EC6
 359+ 8EC6 3D           2 dec a
 360+ 8EC7 20 06        	jr nz,3F
 361+ 8EC9
 362+ 8EC9              ; --- Tipo_3
 363+ 8EC9
 364+ 8EC9 21 1E 8B     	ld hl,Ctrl_4
 365+ 8ECC CB D6        	set 2,(hl)
 366+ 8ECE C9           	ret
 367+ 8ECF
 368+ 8ECF              ; --- Tipo_3
 369+ 8ECF
 370+ 8ECF 21 1E 8B     3 ld hl,Ctrl_4
 371+ 8ED2 CB D6        	set 2,(hl)
 372+ 8ED4 C9           	ret
 373+ 8ED5
 374+ 8ED5              ; ---------------------------------------------------------------------
 375+ 8ED5              ;
 376+ 8ED5              ;	22/01/24
 377+ 8ED5
 378+ 8ED5 21 1E 8B     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8ED8 CB 46        	bit 0,(hl)
 380+ 8EDA 20 0E        	jr nz,1F
 381+ 8EDC
 382+ 8EDC CB 4E        	bit 1,(hl)
 383+ 8EDE 20 10        	jr nz,2F
 384+ 8EE0
 385+ 8EE0 CB 56        	bit 2,(hl)
 386+ 8EE2 20 12        	jr nz,3F
 387+ 8EE4
 388+ 8EE4 CB 5E        	bit 3,(hl)
 389+ 8EE6 20 14        	jr nz,4F
 390+ 8EE8 18 19        	jr 6F
 391+ 8EEA
 392+ 8EEA              ; Entidad_de_Tipo_1.
 393+ 8EEA
 394+ 8EEA CB 66        1 bit 4,(hl)
 395+ 8EEC 28 15        	jr z,6F
 396+ 8EEE 18 10        	jr 5F
 397+ 8EF0
 398+ 8EF0              ; Entidad_de_Tipo_2.
 399+ 8EF0
 400+ 8EF0 CB 6E        2 bit 5,(hl)
 401+ 8EF2 28 0F        	jr z,6F
 402+ 8EF4 18 0A        	jr 5F
 403+ 8EF6
 404+ 8EF6              ; Entidad_de_Tipo_3.
 405+ 8EF6
 406+ 8EF6 CB 76        3 bit 6,(hl)
 407+ 8EF8 28 09        	jr z,6F
 408+ 8EFA 18 04        	jr 5F
 409+ 8EFC
 410+ 8EFC              ; Entidad_de_Tipo_4.
 411+ 8EFC
 412+ 8EFC CB 7E        4 bit 7,(hl)
 413+ 8EFE 28 03        	jr z,6F
 414+ 8F00
 415+ 8F00              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8F00
 417+ 8F00 AF           5 xor a
 418+ 8F01 3C           	inc a
 419+ 8F02 C9           	ret
 420+ 8F03
 421+ 8F03              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8F03
 423+ 8F03 AF           6 xor a
 424+ 8F04 C9           	ret
 425+ 8F05
 426+ 8F05              ;	------------------------------------------------------------------------------------
 427+ 8F05              ;
 428+ 8F05              ;	12/01/24
 429+ 8F05              ;
 430+ 8F05              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8F05              ;
 432+ 8F05              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8F05              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8F05
 435+ 8F05 CB 27        Calcula_salto_en_BC sla a
 436+ 8F07 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8F09 4F           	ld c,a
 438+ 8F0A 06 00        	ld b,0
 439+ 8F0C C9           	ret
 440+ 8F0D
 441+ 8F0D              ; ------------------------------------------------------------------
 442+ 8F0D              ;
 443+ 8F0D              ;	19/1/24
 444+ 8F0D              ;
 445+ 8F0D              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8F0D              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8F0D
 448+ 8F0D A7           Situa_en_datos_de_definicion and a
 449+ 8F0E ED 4A        	adc hl,bc
 450+ 8F10 CD F1 8C     	call Extrae_address
 451+ 8F13 22 0B 8B         ld (Datos_de_entidad),hl
 452+ 8F16 C9           	ret
 453+ 8F17
 454+ 8F17              ; ------------------------------------------------------------------
 455+ 8F17
 456+ 8F17              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8F17              ; 	inc de
 458+ 8F17              ; 	inc de
 459+ 8F17              ; 	ex de,hl
 460+ 8F17              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8F17              ; 	ret
 462+ 8F17
 463+ 8F17              ; ----------------------------------------------------------------------------------------------------------
 464+ 8F17              ;
 465+ 8F17              ;	31/1/24
 466+ 8F17              ;
 467+ 8F17              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8F17              ;	_ de entidad.
 469+ 8F17              ;
 470+ 8F17              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8F17              ;
 472+ 8F17              ;
 473+ 8F17              ;	MODIFICA: HL,DE y BC
 474+ 8F17
 475+ 8F17
 476+ 8F17              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8F17
 478+ 8F17 11 BA 8A     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8F1A 01 03 00     	ld bc,3
 480+ 8F1D ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8F1F              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8F1F 11 C4 8A     	ld de,Attr									; DE en (Attr).
 483+ 8F22 01 05 00     	ld bc,5
 484+ 8F25 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8F27              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8F27 11 CD 8A     	ld de,Posicion_inicio
 487+ 8F2A 01 03 00     	ld bc,3
 488+ 8F2D ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8F2F              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8F2F 11 D9 8A     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8F32 01 02 00     	ld bc,2
 492+ 8F35 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8F37
 494+ 8F37 11 E3 8A     	ld de,Frames_explosion
 495+ 8F3A 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8F3C 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8F3D
 498+ 8F3D C9           	ret
 499+ 8F3E
 500+ 8F3E              ; ----------------------------------------------------------------------------------------------------------
 501+ 8F3E              ;
 502+ 8F3E              ;	22/01/24
 503+ 8F3E              ;
 504+ 8F3E              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8F3E              ;
 506+ 8F3E              ;	Las cajas contienen entidades iniciadas:
 507+ 8F3E              ;
 508+ 8F3E              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8F3E              ;
 510+ 8F3E              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8F3E              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8F3E              ;
 513+ 8F3E              ;	MODIFICA: HL,DE y BC
 514+ 8F3E
 515+ 8F3E 21 BA 8A     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8F41 ED 5B FF 8A  	ld de,(Puntero_store_caja)
 517+ 8F45 7E           	ld a,(hl)
 518+ 8F46 12           	ld (de),a
 519+ 8F47 13           	inc de 													; (Tipo).
 520+ 8F48
 521+ 8F48 21 C1 8A     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8F4B 01 02 00     	ld bc,2
 523+ 8F4E ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8F50              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8F50 23           	inc hl
 526+ 8F51 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8F52 12           	ld (de),a
 528+ 8F53 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8F54
 530+ 8F54 21 D0 8A     	ld hl,Impacto
 531+ 8F57 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8F58 12           	ld (de),a
 533+ 8F59 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8F5A              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8F5A 23           	inc hl
 536+ 8F5B 01 06 00     	ld bc,6
 537+ 8F5E ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8F60              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8F60 01 07 00     	ld bc,7
 540+ 8F63 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8F65              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8F65              ;															; HL apunta ahora a (Columnas).
 543+ 8F65 21 E2 8A     	ld hl,Ctrl_2
 544+ 8F68 7E           	ld a,(hl)
 545+ 8F69 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8F6A 13           	inc de
 547+ 8F6B
 548+ 8F6B C9           	ret
 549+ 8F6C
 550+ 8F6C              ;---------------------------------------------------------------------------------------------------------------
 551+ 8F6C              ;
 552+ 8F6C              ;	5/1/24
 553+ 8F6C              ;
 554+ 8F6C              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8F6C              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8F6C              ;
 557+ 8F6C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8F6C              ;
 559+ 8F6C              ;	(Numero_parcial_de_entidades)="7".
 560+ 8F6C              ;
 561+ 8F6C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8F6C              ;
 563+ 8F6C              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8F6C              ;
 565+ 8F6C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8F6C              ;	MODIFICA: A y B.
 567+ 8F6C              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8F6C
 569+ 8F6C              Inicializa_Numero_parcial_de_entidades
 570+ 8F6C
 571+ 8F6C              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8F6C
 573+ 8F6C 3A 05 8B     	ld a,(Numero_de_entidades)
 574+ 8F6F A7           	and a
 575+ 8F70
 576+ 8F70              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8F70              ;	jr z,$
 578+ 8F70              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8F70
 580+ 8F70 20 03        	jr nz,3F
 581+ 8F72
 582+ 8F72              ; ---------- ---------- ----------
 583+ 8F72
 584+ 8F72              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8F72              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8F72
 587+ 8F72 CD 93 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8F75
 589+ 8F75              ; ---------- ---------- ----------
 590+ 8F75
 591+ 8F75 3A 05 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8F78 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8F7A 38 08        	jr c,1F
 594+ 8F7C
 595+ 8F7C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8F7C              ; Actualizamos variables.
 597+ 8F7C
 598+ 8F7C 3E 07        	ld a,7
 599+ 8F7E 32 06 8B     	ld (Numero_parcial_de_entidades),a
 600+ 8F81 47           	ld b,a
 601+ 8F82 18 04        	jr 2F
 602+ 8F84
 603+ 8F84              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8F84              ; (Numero_de_entidades)="0".
 605+ 8F84
 606+ 8F84 32 06 8B     1 ld (Numero_parcial_de_entidades),a
 607+ 8F87 47           	ld b,a
 608+ 8F88 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1841  8F89              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F89              ; ******************************************************************************************************************************************************************************************
   2+ 8F89              ;
   3+ 8F89              ; 26/06/23
   4+ 8F89              ;
   5+ 8F89              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F89
   7+ 8F89              Draw
   8+ 8F89
   9+ 8F89 CD 73 92     	call Prepara_draw
  10+ 8F8C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F8D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F8E 28 05        	jr z,2F
  13+ 8F90
  14+ 8F90 3A CF 8A     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F93 18 0C        	jr 1F
  16+ 8F95
  17+ 8F95 2A CD 8A     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F98 22 BD 8A     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F9B CD 27 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F9E              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F9E
  22+ 8F9E CD 37 9A     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FA1
  24+ 8FA1 3A DD 8A     1 ld a,(Ctrl_0)
  25+ 8FA4 CB 6F        	bit 5,a
  26+ 8FA6 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8FA8
  28+ 8FA8 CD BD 8F     	call Comprueba_limite_horizontal
  29+ 8FAB CD 4D 90     	call Comprueba_limite_vertical
  30+ 8FAE
  31+ 8FAE              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8FAE              ; -----------------------
  33+ 8FAE              ; -----------------------
  34+ 8FAE              ; -----------------------
  35+ 8FAE
  36+ 8FAE CD A3 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8FB1 CD DA 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8FB4              ;	call Define_rutina_de_impresion
  39+ 8FB4
  40+ 8FB4 3A DD 8A     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8FB7 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8FB9 32 DD 8A     	ld (Ctrl_0),a
  43+ 8FBC
  44+ 8FBC C9           	ret
  45+ 8FBD
  46+ 8FBD              ; *******************************************************************************************************************************************************************************************
  47+ 8FBD              ;	21/01/23
  48+ 8FBD              ;
  49+ 8FBD              ; 	Comprueba_limite_horizontal.
  50+ 8FBD              ;
  51+ 8FBD              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8FBD              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8FBD              ;
  54+ 8FBD              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8FBD              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8FBD              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8FBD              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8FBD
  59+ 8FBD
  60+ 8FBD
  61+ 8FBD 3A DD 8A     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8FC0 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8FC2 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FC4 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8FC6 32 DD 8A     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8FC9 18 09            jr 6F
  67+ 8FCB CB 5F        1 bit 3,a
  68+ 8FCD 28 0A            jr z,2F
  69+ 8FCF E6 F7            and $f7
  70+ 8FD1 32 DD 8A         ld (Ctrl_0),a
  71+ 8FD4 CD 27 91     6 call Inicializacion
  72+ 8FD7 18 5B            jr 5F
  73+ 8FD9 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8FDA
  75+ 8FDA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8FDA              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8FDA
  78+ 8FDA EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8FDB 2A DF 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8FDE CD F8 9A     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8FE1 67           	ld h,a
  82+ 8FE2 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8FE3 CD F8 9A     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8FE6 67           	ld h,a
  85+ 8FE7 A7           	and a
  86+ 8FE8 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8FEA 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8FEB 3A CF 8A     	ld a,(Cuad_objeto)
  89+ 8FEE FE 02        	cp 2
  90+ 8FF0 38 1E        	jr c,3F
  91+ 8FF2 28 1C        	jr z,3F
  92+ 8FF4 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8FF5 28 23            jr z,7F
  94+ 8FF7 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8FF9 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8FFB E1           	pop hl
  97+ 8FFC
  98+ 8FFC              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8FFC              ; _para indicar con E="2" en caso necesario.
 100+ 8FFC
 101+ 8FFC E5               push hl
 102+ 8FFD C5               push bc
 103+ 8FFE CD F8 9A     	call calcula_tercio
 104+ 9001 FE 01        	cp 1
 105+ 9003 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9005 CD 35 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9008 28 26            jr z,9F
 108+ 900A 38 24            jr c,9F
 109+ 900C 1E 00        11 ld e,0
 110+ 900E 18 22            jr 8F
 111+ 9010 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9011 28 07        	jr z, 7F
 113+ 9013 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9015 1E 00         	ld e,0
 115+ 9017 E1           	pop hl
 116+ 9018 18 04        	jr 4F
 117+ 901A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 901C 18 15            jr 10F
 119+ 901E
 120+ 901E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 901E              ; _para indicar con E="2" en caso necesario.
 122+ 901E
 123+ 901E E5           4 push hl
 124+ 901F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9020 CD F8 9A     	call calcula_tercio
 126+ 9023 FE 01        	cp 1
 127+ 9025 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9027 CD 35 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 902A 28 04            jr z,9F
 130+ 902C 30 02            jr nc,9F
 131+ 902E 18 02        	jr 8F
 132+ 9030 1E 02        9 ld e,2
 133+ 9032 C1           8 pop bc
 134+ 9033 E1           10 pop hl
 135+ 9034 C9           5 ret
 136+ 9035
 137+ 9035              ; --------------------
 138+ 9035              ;
 139+ 9035              ; 25/08/22
 140+ 9035
 141+ 9035 CD F8 9A     Comprueba_centro call calcula_tercio
 142+ 9038 67               ld h,a
 143+ 9039 08           	ex af,af
 144+ 903A FE 02        	cp 2
 145+ 903C 38 07        	jr c,1F
 146+ 903E 28 05        	jr z,1F
 147+ 9040 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9043 18 03        	jr 2F
 149+ 9045 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9048 08           2 ex af,af
 151+ 9049 A7               and a
 152+ 904A ED 42            sbc hl,bc
 153+ 904C C9               ret
 154+ 904D
 155+ 904D              ; *********************************************************************************************************************************************************************************************
 156+ 904D              ;
 157+ 904D              ;   16/8/22
 158+ 904D              ;
 159+ 904D              ;	Comprueba_limite_vertical
 160+ 904D              ;
 161+ 904D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 904D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 904D              ;
 164+ 904D
 165+ 904D 2A BD 8A     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 9050 7D           	ld a,l
 167+ 9051 E6 1F        	and $1F
 168+ 9053 57           	ld d,a
 169+ 9054 3A E1 8A     	ld a,(Limite_vertical)
 170+ 9057 BA           	cp d 											; Límite - Posición.
 171+ 9058 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9059 3A CF 8A     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 905C CB 47        	bit 0,a
 174+ 905E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 9060
 176+ 9060              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 9060
 178+ 9060 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 9061 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9063
 181+ 9063              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9063              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9063
 184+ 9063 3A C1 8A         ld a,(Coordenada_X)
 185+ 9066 16 0F            ld d,Centro_izquierda
 186+ 9068 A7               and a
 187+ 9069 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 906A 28 1E            jr z,3F
 189+ 906C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 906E              ;                                                    ; _salimos sin modificar nada.
 191+ 906E 18 0E            jr 2F
 192+ 9070 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 9071 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9073
 195+ 9073              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9073              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9073
 198+ 9073 3A C1 8A         ld a,(Coordenada_X)
 199+ 9076 16 10            ld d,Centro_derecha
 200+ 9078 A7               and a
 201+ 9079 92               sub d
 202+ 907A 28 0E            jr z,3F
 203+ 907C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 907E              ;                                                    ; _salimos sin modificar nada.
 205+ 907E CB 43        2 bit 0,e
 206+ 9080 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9082 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9083 CD 17 91         call Modificaccionne
 209+ 9086 C1           	pop bc
 210+ 9087 CD 27 91         call Inicializacion
 211+ 908A C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 908B
 213+ 908B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 908B
 215+ 908B C5           4 push bc
 216+ 908C 01 BC 8A     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 908F 0A           	ld a,(bc)
 218+ 9090 3D           	dec a
 219+ 9091 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9092 7D           	ld a,l
 221+ 9093 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9094 CB 47        	bit 0,a
 223+ 9096 28 03        	jr z,5F
 224+ 9098 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9099 18 2E        	jr 7F
 226+ 909B
 227+ 909B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 909B
 229+ 909B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 909C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 909D 3A DD 8A     	ld a,(Ctrl_0)
 232+ 90A0 CB 4F        	bit 1,a
 233+ 90A2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 90A4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 90A5
 236+ 90A5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 90A5
 238+ 90A5 1C               inc e
 239+ 90A6 1D               dec e
 240+ 90A7 20 07            jr nz,12F
 241+ 90A9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 90AA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 90AB 22 BD 8A     	ld (Posicion_actual),hl
 244+ 90AE 18 44        13 jr 9F
 245+ 90B0 CB 43        12 bit 0,e
 246+ 90B2 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 90B4              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 90B4 C1           	pop bc
 249+ 90B5 18 D3        	jr 3B
 250+ 90B7 80           14 add b
 251+ 90B8 6F               ld l,a
 252+ 90B9 22 BD 8A     	ld (Posicion_actual),hl
 253+ 90BC CD 17 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 90BF 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 90C1 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90C3 32 DD 8A         ld (Ctrl_0),a
 257+ 90C6 F1           	pop af
 258+ 90C7 18 2B        	jr 9F
 259+ 90C9
 260+ 90C9              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 90C9
 262+ 90C9 F5           7 push af
 263+ 90CA 3A DD 8A     	ld a,(Ctrl_0)
 264+ 90CD CB 47        	bit 0,a
 265+ 90CF 20 1D        	jr nz,8F
 266+ 90D1 F1           	pop af
 267+ 90D2
 268+ 90D2              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 90D2
 270+ 90D2 1C           	inc e
 271+ 90D3 1D               dec e
 272+ 90D4 20 07            jr nz,10F
 273+ 90D6 90           	sub b
 274+ 90D7 6F               ld l,a
 275+ 90D8 22 BD 8A     	ld (Posicion_actual),hl
 276+ 90DB 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 90DD              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 90DD CB 43        10 bit 0,e
 279+ 90DF 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 90E1              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 90E1 C1           	pop bc
 282+ 90E2 18 A6        	jr 3B
 283+ 90E4 90           16 sub b
 284+ 90E5 6F               ld l,a
 285+ 90E6 22 BD 8A     	ld (Posicion_actual),hl
 286+ 90E9 CD 17 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 90EC 18 06            jr 9F
 288+ 90EE E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 90F0 32 DD 8A         ld (Ctrl_0),a
 290+ 90F3 F1           	pop af
 291+ 90F4 C1           9 pop bc
 292+ 90F5 1E 00        	ld e,0
 293+ 90F7 CD 27 91         call Inicializacion
 294+ 90FA F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 90FB 08           	ex af,af
 296+ 90FC F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 90FD 18 8B            jr 3B
 298+ 90FF
 299+ 90FF              ; --------------------
 300+ 90FF
 301+ 90FF 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9101 CD 8E 92     1 call PreviousScan
 303+ 9104 10 FB            djnz 1B
 304+ 9106 22 BD 8A     	ld (Posicion_actual),hl
 305+ 9109 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 910A C9           	ret
 307+ 910B
 308+ 910B              ; --------------------
 309+ 910B
 310+ 910B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 910D CD 7F 92     1 call NextScan
 312+ 9110 10 FB            djnz 1B
 313+ 9112 22 BD 8A     	ld (Posicion_actual),hl
 314+ 9115 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9116 C9           	ret
 316+ 9117
 317+ 9117              ; --------------------
 318+ 9117              ;
 319+ 9117              ;	22/01/23
 320+ 9117              ;
 321+ 9117              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9117              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9117              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9117
 325+ 9117
 326+ 9117              Modificaccionne
 327+ 9117
 328+ 9117 3A CF 8A     	ld a,(Cuad_objeto)
 329+ 911A FE 02        	cp 2
 330+ 911C CC FF 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 911F DC FF 90         call c,Modifica_Pos_actual
 332+ 9122 C8           	ret z
 333+ 9123 CD 0B 91         call Modifica_Pos_actual2
 334+ 9126 C9               ret
 335+ 9127
 336+ 9127              ; *************************************************************************************************************************************************************************************************
 337+ 9127              ;
 338+ 9127              ;	13/8/22
 339+ 9127              ;
 340+ 9127              ;	Inicializacion
 341+ 9127              ;
 342+ 9127              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9127              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9127              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9127              ;
 346+ 9127              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9127              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9127              ;	_ desaparece/aparece.
 349+ 9127
 350+ 9127              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9127              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9127              ;
 353+ 9127              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9127              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9127              ; 		   [E] ="0"
 356+ 9127
 357+ 9127              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9127
 359+ 9127 CD F8 9A     Inicializacion call calcula_tercio
 360+ 912A 28 36        	jr z,primit
 361+ 912C E6 02        	and 2
 362+ 912E 20 07        	jr nz,segmit
 363+ 9130 7D           	ld a,l
 364+ 9131 FE 7F        	cp $7f
 365+ 9133 38 2D        	jr c,primit
 366+ 9135 28 2B        	jr z,primit
 367+ 9137 CD 9D 91     segmit call column
 368+ 913A 38 13        	jr c,tercuad
 369+ 913C 3E 04        cuarcuad ld a,4
 370+ 913E 32 CF 8A     	ld (Cuad_objeto),a
 371+ 9141 21 20 48     	ld hl,$4820
 372+ 9144 22 DF 8A     	ld (Limite_horizontal),hl
 373+ 9147 21 E1 8A     	ld hl,Limite_vertical
 374+ 914A 36 0D        	ld (hl),$0d
 375+ 914C 08           	ex af,af
 376+ 914D 18 3C        	jr 1F
 377+ 914F              tercuad
 378+ 914F 3E 03        	ld a,3
 379+ 9151 32 CF 8A     	ld (Cuad_objeto),a
 380+ 9154 21 20 48     	ld hl,$4820
 381+ 9157 22 DF 8A     	ld (Limite_horizontal),hl
 382+ 915A 21 E1 8A     	ld hl,Limite_vertical
 383+ 915D 36 12        	ld (hl),$12
 384+ 915F 08           	ex af,af
 385+ 9160 18 29        	jr 1F
 386+ 9162 CD 9D 91     primit call column
 387+ 9165 38 13        	jr c, primcuad
 388+ 9167              segcuad
 389+ 9167 3E 02        	ld a,2
 390+ 9169 32 CF 8A     	ld (Cuad_objeto),a
 391+ 916C 21 C0 4F     	ld hl,$4fc0
 392+ 916F 22 DF 8A     	ld (Limite_horizontal),hl
 393+ 9172 21 E1 8A     	ld hl,Limite_vertical
 394+ 9175 36 0D        	ld (hl),$0d
 395+ 9177 08           	ex af,af
 396+ 9178 18 11        	jr 1F
 397+ 917A              primcuad
 398+ 917A 3E 01        	ld a,1
 399+ 917C 32 CF 8A     	ld (Cuad_objeto),a
 400+ 917F 21 C0 4F     	ld hl,$4fc0
 401+ 9182 22 DF 8A     	ld (Limite_horizontal),hl
 402+ 9185 21 E1 8A     	ld hl,Limite_vertical
 403+ 9188 36 12        	ld (hl),$12
 404+ 918A 08           	ex af,af
 405+ 918B
 406+ 918B C5           1 push bc
 407+ 918C E5           	push hl
 408+ 918D D5           	push de
 409+ 918E
 410+ 918E 2A BD 8A     	ld hl,(Posicion_actual)
 411+ 9191 CD 16 9B     	call Genera_coordenadas
 412+ 9194
 413+ 9194 D1           	pop de
 414+ 9195 E1           	pop hl
 415+ 9196 C1           	pop bc
 416+ 9197
 417+ 9197 21 DD 8A     	ld hl,Ctrl_0
 418+ 919A CB EE        	set 5,(hl)
 419+ 919C C9           	ret
 420+ 919D
 421+ 919D              ; ------------------------------------------------------------------------------------------------------------------
 422+ 919D
 423+ 919D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 919D              ;
 425+ 919D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 919D
 427+ 919D 7D           column ld a,l
 428+ 919E E6 1F        	and $1f
 429+ 91A0 FE 10         	cp $10
 430+ 91A2 C9            	ret
 431+ 91A3
 432+ 91A3              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91A3              ;
 434+ 91A3              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91A3              ;
 436+ 91A3              ; 14/12/22
 437+ 91A3              ;
 438+ 91A3              ;	Modifica: A y BC.
 439+ 91A3
 440+ 91A3 3A CF 8A     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 91A6 E6 01        	and 1
 442+ 91A8 28 17        	jr z,1F
 443+ 91AA
 444+ 91AA              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 91AA
 446+ 91AA 3A C1 8A     	ld a,(Coordenada_X)
 447+ 91AD 47           	ld b,a
 448+ 91AE 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 91AF 79           	ld a,c
 450+ 91B0 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 91B1 38 08        	jr c,2F
 452+ 91B3 47           	ld b,a
 453+ 91B4 79           	ld a,c
 454+ 91B5 90           	sub b
 455+ 91B6 32 DE 8A     	ld (Columnas),a
 456+ 91B9 18 1B        	jr 4F
 457+ 91BB 79           2 ld a,c
 458+ 91BC 32 DE 8A     	ld (Columnas),a
 459+ 91BF 18 15        	jr 4F
 460+ 91C1
 461+ 91C1              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 91C1
 463+ 91C1 3A C1 8A     1 ld a,(Coordenada_X)
 464+ 91C4 81           	add c
 465+ 91C5 3D           	dec a
 466+ 91C6 D6 1F        	sub $1f
 467+ 91C8 38 08        	jr c,3F
 468+ 91CA 47           	ld b,a
 469+ 91CB 79           	ld a,c
 470+ 91CC 90           	sub b
 471+ 91CD 32 DE 8A     	ld (Columnas),a
 472+ 91D0 18 04        	jr 4F
 473+ 91D2 79           3 ld a,c
 474+ 91D3 32 DE 8A     	ld (Columnas),a
 475+ 91D6 D9           4 exx
 476+ 91D7 4F           	ld c,a
 477+ 91D8 D9           	exx
 478+ 91D9 C9            ret
 479+ 91DA
 480+ 91DA              ; --------------------------------------------------------------------------------------------------------------------
 481+ 91DA              ;
 482+ 91DA              ;   19/7/23
 483+ 91DA              ;
 484+ 91DA              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 91DA              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 91DA              ;
 487+ 91DA              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 91DA              ;			HL e IY Contienen (Puntero_objeto).
 489+ 91DA              ;
 490+ 91DA              ;	DESTRUYE: HL,B Y A.
 491+ 91DA
 492+ 91DA 3A CF 8A     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 91DD FE 02        	cp 2
 494+ 91DF 38 18        	jr c,1F
 495+ 91E1 28 16        	jr z,1F
 496+ 91E3 E6 01        	and 1
 497+ 91E5 28 0D        	jr z,3F
 498+ 91E7
 499+ 91E7              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 91E7
 501+ 91E7 CD 2D 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 91EA
 503+ 91EA 7D           9 ld a,l
 504+ 91EB E6 1F        	and $1f
 505+ 91ED 28 2A        	jr z,7F
 506+ 91EF 2B           	dec hl
 507+ 91F0 10 F8        	djnz 9B
 508+ 91F2 18 25        	jr 7F
 509+ 91F4
 510+ 91F4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 91F4
 512+ 91F4 2A BD 8A     3 ld hl,(Posicion_actual)
 513+ 91F7 18 20        	jr 7F
 514+ 91F9
 515+ 91F9 28 14        1 jr z,2F
 516+ 91FB
 517+ 91FB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 91FB
 519+ 91FB CD 2D 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 91FE
 521+ 91FE 7D           4 ld a,l
 522+ 91FF E6 1F        	and $1f
 523+ 9201 28 03        	jr z,6F
 524+ 9203 2B           	dec hl
 525+ 9204 10 F8        	djnz 4B
 526+ 9206 06 0F        6 ld b,15
 527+ 9208 CD 8E 92     5 call PreviousScan
 528+ 920B 10 FB        	djnz 5B
 529+ 920D 18 0A        	jr 7F
 530+ 920F
 531+ 920F              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 920F
 533+ 920F CD 2D 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9212 06 0F        	ld b,15
 535+ 9214 CD 8E 92     8 call PreviousScan
 536+ 9217 10 FB        	djnz 8B
 537+ 9219
 538+ 9219 E5           7 push hl
 539+ 921A DD E1        	pop ix
 540+ 921C
 541+ 921C 2A BF 8A     	ld hl,(Puntero_objeto)
 542+ 921F E5           	push hl
 543+ 9220 FD E1        	pop iy
 544+ 9222
 545+ 9222              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9222
 547+ 9222 3A DD 8A     	ld a,(Ctrl_0)
 548+ 9225 CB 77        	bit 6,a
 549+ 9227 C8           	ret z
 550+ 9228
 551+ 9228              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9228              ; _ entidad / Amadeus´.
 553+ 9228
 554+ 9228 DD 22 3F 88  	ld (p.imp.amadeus),ix
 555+ 922C
 556+ 922C C9           	ret
 557+ 922D
 558+ 922D              ; --------------------------------------------------------------------------------------------------------------------
 559+ 922D              ;
 560+ 922D              ;	2/1/23
 561+ 922D              ;
 562+ 922D              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 922D              ;
 564+ 922D              ;	Tras esta rutina tenemos:
 565+ 922D              ;
 566+ 922D              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 922D              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 922D              ;
 569+ 922D              ;	DESTRUYE!!!!! HL,B y A.
 570+ 922D
 571+ 922D 2A BD 8A     Operandos ld hl,(Posicion_actual)
 572+ 9230 3A DE 8A     	ld a,(Columnas)
 573+ 9233 3D           	dec a
 574+ 9234 20 01        	jr nz,1F
 575+ 9236 3C           	inc a
 576+ 9237 47           1 ld b,a
 577+ 9238 C9           	ret
 578+ 9239
 579+ 9239              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9239              ;
 581+ 9239              ;	3/1/23
 582+ 9239              ;
 583+ 9239              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9239              ;
 585+ 9239              ;	Destruye: A,B,HL y DE.
 586+ 9239
 587+ 9239              Define_rutina_de_impresion
 588+ 9239
 589+ 9239 3A BC 8A     	ld a,(Columns)
 590+ 923C 47           	ld b,a
 591+ 923D 3A DE 8A     	ld a,(Columnas)
 592+ 9240 B8           	cp b
 593+ 9241 20 0D        	jr nz,2f
 594+ 9243
 595+ 9243              ;	La entidad se imprime entera.
 596+ 9243
 597+ 9243 21 E0 92     	ld hl, Indice_entidades_completas
 598+ 9246 E6 01        	and 1
 599+ 9248 28 02        	jr z,1F
 600+ 924A
 601+ 924A 23           	inc hl
 602+ 924B 23           	inc hl
 603+ 924C
 604+ 924C CD F1 8C     1 call Extrae_address
 605+ 924F C9           	ret		;	ret
 606+ 9250
 607+ 9250              ;	La entidad no se imprime entera en pantalla.
 608+ 9250
 609+ 9250 3A CF 8A     2 ld a,(Cuad_objeto)
 610+ 9253 E6 01        	and 1
 611+ 9255 28 17        	jr z,3F
 612+ 9257
 613+ 9257              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9257
 615+ 9257 21 E4 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 925A 3A BC 8A     4 ld a,(Columns)
 617+ 925D E6 01        	and 1
 618+ 925F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 9261
 620+ 9261 23           	inc hl
 621+ 9262 23           	inc hl
 622+ 9263
 623+ 9263 3A DE 8A     	ld a,(Columnas)
 624+ 9266 E6 01        	and 1
 625+ 9268 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 926A
 627+ 926A 23           	inc hl
 628+ 926B 23           	inc hl
 629+ 926C
 630+ 926C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 926E
 632+ 926E 21 EA 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 9271 18 E7        	jr 4B
 634+ 9273
 635+ 9273              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9273              ;
 637+ 9273              ;	Prepara_draw
 638+ 9273              ;
 639+ 9273              ;	Es una rutina de carga.
 640+ 9273              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9273              ;
 642+ 9273              ;	FUNCIONAMIENTO:
 643+ 9273              ;
 644+ 9273              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9273              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9273              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9273              ;
 648+ 9273              ;	DESTRUYE:
 649+ 9273              ;
 650+ 9273              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9273
 652+ 9273 21 BB 8A     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9276 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9277 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9278 4E           	ld c,(hl)
 656+ 9279 2A BD 8A     	ld hl,(Posicion_actual)
 657+ 927C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 927E C9           	ret
 659+ 927F
 660+ 927F              ;----------------------------------------------------------------------------------------------------------------
 661+ 927F              ;
 662+ 927F              ;	5/08/22
 663+ 927F              ;
 664+ 927F              ;   NextScan.
 665+ 927F              ;
 666+ 927F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 927F              ;
 668+ 927F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 927F              ;
 670+ 927F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 927F              ;
 672+ 927F              ;       DESTRUIDOS: AF y HL !!!
 673+ 927F              ;
 674+ 927F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 927F              ;
 676+ 927F
 677+ 927F 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9280 7C               ld a,h
 679+ 9281 E6 07            and 7
 680+ 9283 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9284
 682+ 9284 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9285 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9287 6F               ld l,a
 685+ 9288 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9289
 687+ 9289 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 928A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 928C 67               ld h,a
 690+ 928D C9               ret
 691+ 928E
 692+ 928E              ;----------------------------------------------------------------------------------------------------------------
 693+ 928E              ;
 694+ 928E              ;	5/08/22
 695+ 928E              ;
 696+ 928E              ;   PreviousScan.
 697+ 928E              ;
 698+ 928E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 928E              ;
 700+ 928E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 928E              ;
 702+ 928E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 928E              ;
 704+ 928E              ;       DESTRUIDOS: AF y HL !!!
 705+ 928E              ;
 706+ 928E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 928E              ;
 708+ 928E
 709+ 928E 7C           PreviousScan ld a,h
 710+ 928F 25               dec h               ; Dec H.
 711+ 9290 E6 07            and 7
 712+ 9292 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9293
 714+ 9293 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9294 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9296 6F               ld l,a
 717+ 9297 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9298
 719+ 9298 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9299 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 929B 67               ld h,a
 722+ 929C C9               ret
 723+ 929D
 724+ 929D              ; -----------------------------------------------------------------------------------
 725+ 929D              ;
 726+ 929D              ;	31/7/23
 727+ 929D              ;
 728+ 929D              ;	Rutina principal de pintado de entidades.
 729+ 929D              ;	Extrae la foto del frame, (entidades).
 730+ 929D
 731+ 929D              Extrae_Scanlines_album
 732+ 929D
 733+ 929D 21 01 80     	ld hl,Scanlines_album+1
 734+ 92A0 7E           	ld a,(hl)
 735+ 92A1 A7           	and a
 736+ 92A2 C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 92A3
 738+ 92A3              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92A3
 740+ 92A3 3A 08 8B     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 92A6 A7           	and a
 742+ 92A7 C8           	ret z
 743+ 92A8
 744+ 92A8              ; -----------------------------------
 745+ 92A8
 746+ 92A8 ED 73 0D 8B  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 92AC 31 00 80     	ld sp,Scanlines_album
 748+ 92AF
 749+ 92AF FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 92B1 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 92B2 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 92B3
 753+ 92B3 ED 73 0F 8B  	ld (Stack_2),sp
 754+ 92B7 ED 7B 0D 8B  	ld sp,(Stack)
 755+ 92BB
 756+ 92BB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 92BB
 758+ 92BB 3E CD        	ld a,$cd
 759+ 92BD 32 C5 92     	ld (Imprime),a
 760+ 92C0 EB           	ex de,hl
 761+ 92C1 22 C6 92     	ld (Imprime+1),hl
 762+ 92C4 EB           	ex de,hl
 763+ 92C5
 764+ 92C5              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 92C5
 766+ 92C5 00 00 00     Imprime db 0,0,0
 767+ 92C8
 768+ 92C8 ED 73 0D 8B  	ld (Stack),sp
 769+ 92CC
 770+ 92CC 3A 08 8B     	ld a,(Numero_de_malotes)
 771+ 92CF 3D           	dec a
 772+ 92D0 28 09        	jr z,1F
 773+ 92D2 32 08 8B      	ld (Numero_de_malotes),a
 774+ 92D5
 775+ 92D5 ED 7B 0F 8B  	ld sp,(Stack_2)
 776+ 92D9 18 D4        	jr 2B
 777+ 92DB
 778+ 92DB AF           1 xor a
 779+ 92DC 32 0F 8B     	ld (Stack_2),a
 780+ 92DF
 781+ 92DF C9           	ret
 782+ 92E0
 783+ 92E0              ; -----------------------------------------------------------------------------------
 784+ 92E0              ;
 785+ 92E0              ;	28/2/23
 786+ 92E0              ;
 787+ 92E0              ;	Pinta los disparos generados.
 788+ 92E0
 789+ 92E0              ;Extrae_foto_disparos
 790+ 92E0
 791+ 92E0              ;	ld hl,Scanlines_album_disparos+1
 792+ 92E0              ;    ld a,(hl)
 793+ 92E0              ;    and a
 794+ 92E0              ;    ret z
 795+ 92E0
 796+ 92E0              ;	ld a,(Numero_de_disparotes)
 797+ 92E0              ;	and a
 798+ 92E0              ;	ret z
 799+ 92E0              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 92E0              ;	ld sp,Scanlines_album_disparos
 801+ 92E0
 802+ 92E0              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 92E0              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 92E0              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 92E0
 806+ 92E0              ;	ld (Stack_2),sp
 807+ 92E0              ;	ld sp,(Stack)
 808+ 92E0
 809+ 92E0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 92E0
 811+ 92E0              ;	ld a,$cd
 812+ 92E0              ;	ld (Imprime2),a
 813+ 92E0              ;	ex de,hl
 814+ 92E0              ;	ld (Imprime2+1),hl
 815+ 92E0              ;	ex de,hl
 816+ 92E0
 817+ 92E0              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 92E0
 819+ 92E0              ;Imprime2 db 0,0,0
 820+ 92E0
 821+ 92E0              ;	ld a,(Numero_de_disparotes)
 822+ 92E0              ;	dec a
 823+ 92E0              ;	jr z,1F
 824+ 92E0              ; 	ld (Numero_de_disparotes),a
 825+ 92E0
 826+ 92E0              ;	ld sp,(Stack_2)
 827+ 92E0              ;	jr 2B
 828+ 92E0
 829+ 92E0              ;1 xor a
 830+ 92E0              ;	ld (Stack_2),a
 831+ 92E0              ;	ret
 832+ 92E0
 833+ 92E0              ; -----------------------------------------------------------------------------------
 834+ 92E0              ;
 835+ 92E0              ;	4/9/23
 836+ 92E0              ;
 837+ 92E0              ;	Rutina principal de pintado de Amadeus.
 838+ 92E0              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 92E0
 840+ 92E0              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 92E0              ;	ld a,(hl)
 842+ 92E0              ;	and a
 843+ 92E0              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92E0
 845+ 92E0              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92E0              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92E0              ;	ret z
 848+ 92E0
 849+ 92E0              ; -----------------------------------
 850+ 92E0
 851+ 92E0              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 92E0              ;	ld sp,Scanlines_album_Amadeus
 853+ 92E0
 854+ 92E0              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92E0              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92E0              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92E0
 858+ 92E0              ;	ld (Stack_2),sp
 859+ 92E0              ;	ld sp,(Stack)
 860+ 92E0
 861+ 92E0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92E0
 863+ 92E0              ;	ld a,$cd
 864+ 92E0              ;	ld (Imprime_Amadeus),a
 865+ 92E0              ;	ex de,hl
 866+ 92E0              ;	ld (Imprime_Amadeus+1),hl
 867+ 92E0              ;	ex de,hl
 868+ 92E0
 869+ 92E0              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92E0
 871+ 92E0              ;Imprime_Amadeus db 0,0,0
 872+ 92E0
 873+ 92E0              ;	ld (Stack),sp
 874+ 92E0
 875+ 92E0              ;	ld a,(Numero_de_malotes)
 876+ 92E0              ;	dec a
 877+ 92E0              ;	jr z,1F
 878+ 92E0              ; 	ld (Numero_de_malotes),a
 879+ 92E0
 880+ 92E0              ;	ld sp,(Stack_2)
 881+ 92E0              ;	jr 2B
 882+ 92E0
 883+ 92E0              ;1 xor a
 884+ 92E0              ;	ld (Stack_2),a
 885+ 92E0
 886+ 92E0              ;	ret
 887+ 92E0
 888+ 92E0
 889+ 92E0
 890+ 92E0
 891+ 92E0
 892+ 92E0
# file closed: Draw_XOR.asm
1842  92E0              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92E0              ;   índices de Rutinas de impresión.
   2+ 92E0
   3+ 92E0 F0 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92E2 84 93            defw Pinta_Amadeus_3x2
   5+ 92E4
   6+ 92E4 58 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92E6 F8 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92E8 AC 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92EA
  10+ 92EA 82 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92EC 86 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92EE 3A 95            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92F0
  14+ 92F0
  15+ 92F0              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92F0              ;
  17+ 92F0              ;   28/2/24
  18+ 92F0              ;
  19+ 92F0              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 92F0              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92F0              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 92F0              ;
  23+ 92F0              ;   Modifica: AF,HL,BC y DE.
  24+ 92F0
  25+ 92F0              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 92F0
  27+ 92F0 D9               exx
  28+ 92F1 36 01            ld (hl),1
  29+ 92F3 2C               inc l
  30+ 92F4 D9               exx
  31+ 92F5
  32+ 92F5 FD E5            push iy
  33+ 92F7 D1               pop de
  34+ 92F8
  35+ 92F8 ED 73 0D 8B      ld (Stack),sp
  36+ 92FC F9           	ld sp,hl
  37+ 92FD 06 10            ld b,16
  38+ 92FF
  39+ 92FF E1               pop hl
  40+ 9300 1A               ld a,(de)
  41+ 9301 77               ld (hl),a
  42+ 9302 1C           	inc e
  43+ 9303 2C               inc l
  44+ 9304 1A               ld a,(de)
  45+ 9305 77               ld (hl),a
  46+ 9306 1C               inc e
  47+ 9307
  48+ 9307 E1               pop hl
  49+ 9308 1A               ld a,(de)
  50+ 9309 77               ld (hl),a
  51+ 930A 1C           	inc e
  52+ 930B 2C               inc l
  53+ 930C 1A               ld a,(de)
  54+ 930D 77               ld (hl),a
  55+ 930E 1C               inc e
  56+ 930F
  57+ 930F E1               pop hl
  58+ 9310 1A               ld a,(de)
  59+ 9311 77               ld (hl),a
  60+ 9312 1C           	inc e
  61+ 9313 2C               inc l
  62+ 9314 1A               ld a,(de)
  63+ 9315 77               ld (hl),a
  64+ 9316 1C               inc e
  65+ 9317
  66+ 9317 E1               pop hl
  67+ 9318 1A               ld a,(de)
  68+ 9319 77               ld (hl),a
  69+ 931A 1C           	inc e
  70+ 931B 2C               inc l
  71+ 931C 1A               ld a,(de)
  72+ 931D 77               ld (hl),a
  73+ 931E 1C               inc e
  74+ 931F
  75+ 931F E1               pop hl
  76+ 9320 1A               ld a,(de)
  77+ 9321 77               ld (hl),a
  78+ 9322 1C           	inc e
  79+ 9323 2C               inc l
  80+ 9324 1A               ld a,(de)
  81+ 9325 77               ld (hl),a
  82+ 9326 1C               inc e
  83+ 9327
  84+ 9327 E1               pop hl
  85+ 9328 1A               ld a,(de)
  86+ 9329 77               ld (hl),a
  87+ 932A 1C           	inc e
  88+ 932B 2C               inc l
  89+ 932C 1A               ld a,(de)
  90+ 932D 77               ld (hl),a
  91+ 932E 1C               inc e
  92+ 932F
  93+ 932F E1               pop hl
  94+ 9330 1A               ld a,(de)
  95+ 9331 77               ld (hl),a
  96+ 9332 1C           	inc e
  97+ 9333 2C               inc l
  98+ 9334 1A               ld a,(de)
  99+ 9335 77               ld (hl),a
 100+ 9336 1C               inc e
 101+ 9337
 102+ 9337 E1               pop hl
 103+ 9338 1A               ld a,(de)
 104+ 9339 77               ld (hl),a
 105+ 933A 1C           	inc e
 106+ 933B 2C               inc l
 107+ 933C 1A               ld a,(de)
 108+ 933D 77               ld (hl),a
 109+ 933E 1C               inc e
 110+ 933F
 111+ 933F E1               pop hl
 112+ 9340 1A               ld a,(de)
 113+ 9341 77               ld (hl),a
 114+ 9342 1C           	inc e
 115+ 9343 2C               inc l
 116+ 9344 1A               ld a,(de)
 117+ 9345 77               ld (hl),a
 118+ 9346 1C               inc e
 119+ 9347
 120+ 9347 E1               pop hl
 121+ 9348 1A               ld a,(de)
 122+ 9349 77               ld (hl),a
 123+ 934A 1C           	inc e
 124+ 934B 2C               inc l
 125+ 934C 1A               ld a,(de)
 126+ 934D 77               ld (hl),a
 127+ 934E 1C               inc e
 128+ 934F
 129+ 934F E1               pop hl
 130+ 9350 1A               ld a,(de)
 131+ 9351 77               ld (hl),a
 132+ 9352 1C           	inc e
 133+ 9353 2C               inc l
 134+ 9354 1A               ld a,(de)
 135+ 9355 77               ld (hl),a
 136+ 9356 1C               inc e
 137+ 9357
 138+ 9357 E1               pop hl
 139+ 9358 1A               ld a,(de)
 140+ 9359 77               ld (hl),a
 141+ 935A 1C           	inc e
 142+ 935B 2C               inc l
 143+ 935C 1A               ld a,(de)
 144+ 935D 77               ld (hl),a
 145+ 935E 1C               inc e
 146+ 935F
 147+ 935F E1               pop hl
 148+ 9360 1A               ld a,(de)
 149+ 9361 77               ld (hl),a
 150+ 9362 1C           	inc e
 151+ 9363 2C               inc l
 152+ 9364 1A               ld a,(de)
 153+ 9365 77               ld (hl),a
 154+ 9366 1C               inc e
 155+ 9367
 156+ 9367 E1               pop hl
 157+ 9368 1A               ld a,(de)
 158+ 9369 77               ld (hl),a
 159+ 936A 1C           	inc e
 160+ 936B 2C               inc l
 161+ 936C 1A               ld a,(de)
 162+ 936D 77               ld (hl),a
 163+ 936E 1C               inc e
 164+ 936F
 165+ 936F E1               pop hl
 166+ 9370 1A               ld a,(de)
 167+ 9371 77               ld (hl),a
 168+ 9372 1C           	inc e
 169+ 9373 2C               inc l
 170+ 9374 1A               ld a,(de)
 171+ 9375 77               ld (hl),a
 172+ 9376 1C               inc e
 173+ 9377
 174+ 9377 E1               pop hl
 175+ 9378 1A               ld a,(de)
 176+ 9379 77               ld (hl),a
 177+ 937A 1C           	inc e
 178+ 937B 2C               inc l
 179+ 937C 1A               ld a,(de)
 180+ 937D 77               ld (hl),a
 181+ 937E 1C               inc e
 182+ 937F
 183+ 937F ED 7B 0D 8B      ld sp,(Stack)
 184+ 9383
 185+ 9383 C9           	ret
 186+ 9384
 187+ 9384              Pinta_Amadeus_3x2
 188+ 9384
 189+ 9384 D9               exx
 190+ 9385 36 02            ld (hl),2
 191+ 9387 2C               inc l
 192+ 9388 D9               exx
 193+ 9389
 194+ 9389 FD E5            push iy
 195+ 938B D1               pop de
 196+ 938C
 197+ 938C ED 73 0D 8B      ld (Stack),sp
 198+ 9390 F9               ld sp,hl
 199+ 9391 06 10            ld b,16
 200+ 9393
 201+ 9393 E1               pop hl
 202+ 9394 1A               ld a,(de)
 203+ 9395 77               ld (hl),a
 204+ 9396 1C               inc e
 205+ 9397 2C               inc l
 206+ 9398 1A               ld a,(de)
 207+ 9399 77               ld (hl),a
 208+ 939A 1C               inc e
 209+ 939B 2C               inc l
 210+ 939C 1A               ld a,(de)
 211+ 939D 77               ld (hl),a
 212+ 939E 1C               inc e
 213+ 939F
 214+ 939F E1               pop hl
 215+ 93A0 1A               ld a,(de)
 216+ 93A1 77               ld (hl),a
 217+ 93A2 1C               inc e
 218+ 93A3 2C               inc l
 219+ 93A4 1A               ld a,(de)
 220+ 93A5 77               ld (hl),a
 221+ 93A6 1C               inc e
 222+ 93A7 2C               inc l
 223+ 93A8 1A               ld a,(de)
 224+ 93A9 77               ld (hl),a
 225+ 93AA 1C               inc e
 226+ 93AB
 227+ 93AB E1               pop hl
 228+ 93AC 1A               ld a,(de)
 229+ 93AD 77               ld (hl),a
 230+ 93AE 1C               inc e
 231+ 93AF 2C               inc l
 232+ 93B0 1A               ld a,(de)
 233+ 93B1 77               ld (hl),a
 234+ 93B2 1C               inc e
 235+ 93B3 2C               inc l
 236+ 93B4 1A               ld a,(de)
 237+ 93B5 77               ld (hl),a
 238+ 93B6 1C               inc e
 239+ 93B7
 240+ 93B7 E1               pop hl
 241+ 93B8 1A               ld a,(de)
 242+ 93B9 77               ld (hl),a
 243+ 93BA 1C               inc e
 244+ 93BB 2C               inc l
 245+ 93BC 1A               ld a,(de)
 246+ 93BD 77               ld (hl),a
 247+ 93BE 1C               inc e
 248+ 93BF 2C               inc l
 249+ 93C0 1A               ld a,(de)
 250+ 93C1 77               ld (hl),a
 251+ 93C2 1C               inc e
 252+ 93C3
 253+ 93C3 E1               pop hl
 254+ 93C4 1A               ld a,(de)
 255+ 93C5 77               ld (hl),a
 256+ 93C6 1C               inc e
 257+ 93C7 2C               inc l
 258+ 93C8 1A               ld a,(de)
 259+ 93C9 77               ld (hl),a
 260+ 93CA 1C               inc e
 261+ 93CB 2C               inc l
 262+ 93CC 1A               ld a,(de)
 263+ 93CD 77               ld (hl),a
 264+ 93CE 1C               inc e
 265+ 93CF
 266+ 93CF E1               pop hl
 267+ 93D0 1A               ld a,(de)
 268+ 93D1 77               ld (hl),a
 269+ 93D2 1C               inc e
 270+ 93D3 2C               inc l
 271+ 93D4 1A               ld a,(de)
 272+ 93D5 77               ld (hl),a
 273+ 93D6 1C               inc e
 274+ 93D7 2C               inc l
 275+ 93D8 1A               ld a,(de)
 276+ 93D9 77               ld (hl),a
 277+ 93DA 1C               inc e
 278+ 93DB
 279+ 93DB E1               pop hl
 280+ 93DC 1A               ld a,(de)
 281+ 93DD 77               ld (hl),a
 282+ 93DE 1C               inc e
 283+ 93DF 2C               inc l
 284+ 93E0 1A               ld a,(de)
 285+ 93E1 77               ld (hl),a
 286+ 93E2 1C               inc e
 287+ 93E3 2C               inc l
 288+ 93E4 1A               ld a,(de)
 289+ 93E5 77               ld (hl),a
 290+ 93E6 1C               inc e
 291+ 93E7
 292+ 93E7 E1               pop hl
 293+ 93E8 1A               ld a,(de)
 294+ 93E9 77               ld (hl),a
 295+ 93EA 1C               inc e
 296+ 93EB 2C               inc l
 297+ 93EC 1A               ld a,(de)
 298+ 93ED 77               ld (hl),a
 299+ 93EE 1C               inc e
 300+ 93EF 2C               inc l
 301+ 93F0 1A               ld a,(de)
 302+ 93F1 77               ld (hl),a
 303+ 93F2 1C               inc e
 304+ 93F3
 305+ 93F3 E1               pop hl
 306+ 93F4 1A               ld a,(de)
 307+ 93F5 77               ld (hl),a
 308+ 93F6 1C               inc e
 309+ 93F7 2C               inc l
 310+ 93F8 1A               ld a,(de)
 311+ 93F9 77               ld (hl),a
 312+ 93FA 1C               inc e
 313+ 93FB 2C               inc l
 314+ 93FC 1A               ld a,(de)
 315+ 93FD 77               ld (hl),a
 316+ 93FE 1C               inc e
 317+ 93FF
 318+ 93FF E1               pop hl
 319+ 9400 1A               ld a,(de)
 320+ 9401 77               ld (hl),a
 321+ 9402 1C               inc e
 322+ 9403 2C               inc l
 323+ 9404 1A               ld a,(de)
 324+ 9405 77               ld (hl),a
 325+ 9406 1C               inc e
 326+ 9407 2C               inc l
 327+ 9408 1A               ld a,(de)
 328+ 9409 77               ld (hl),a
 329+ 940A 1C               inc e
 330+ 940B
 331+ 940B E1               pop hl
 332+ 940C 1A               ld a,(de)
 333+ 940D 77               ld (hl),a
 334+ 940E 1C               inc e
 335+ 940F 2C               inc l
 336+ 9410 1A               ld a,(de)
 337+ 9411 77               ld (hl),a
 338+ 9412 1C               inc e
 339+ 9413 2C               inc l
 340+ 9414 1A               ld a,(de)
 341+ 9415 77               ld (hl),a
 342+ 9416 1C               inc e
 343+ 9417
 344+ 9417 E1               pop hl
 345+ 9418 1A               ld a,(de)
 346+ 9419 77               ld (hl),a
 347+ 941A 1C               inc e
 348+ 941B 2C               inc l
 349+ 941C 1A               ld a,(de)
 350+ 941D 77               ld (hl),a
 351+ 941E 1C               inc e
 352+ 941F 2C               inc l
 353+ 9420 1A               ld a,(de)
 354+ 9421 77               ld (hl),a
 355+ 9422 1C               inc e
 356+ 9423
 357+ 9423 E1               pop hl
 358+ 9424 1A               ld a,(de)
 359+ 9425 77               ld (hl),a
 360+ 9426 1C               inc e
 361+ 9427 2C               inc l
 362+ 9428 1A               ld a,(de)
 363+ 9429 77               ld (hl),a
 364+ 942A 1C               inc e
 365+ 942B 2C               inc l
 366+ 942C 1A               ld a,(de)
 367+ 942D 77               ld (hl),a
 368+ 942E 1C               inc e
 369+ 942F
 370+ 942F E1               pop hl
 371+ 9430 1A               ld a,(de)
 372+ 9431 77               ld (hl),a
 373+ 9432 1C               inc e
 374+ 9433 2C               inc l
 375+ 9434 1A               ld a,(de)
 376+ 9435 77               ld (hl),a
 377+ 9436 1C               inc e
 378+ 9437 2C               inc l
 379+ 9438 1A               ld a,(de)
 380+ 9439 77               ld (hl),a
 381+ 943A 1C               inc e
 382+ 943B
 383+ 943B E1               pop hl
 384+ 943C 1A               ld a,(de)
 385+ 943D 77               ld (hl),a
 386+ 943E 1C               inc e
 387+ 943F 2C               inc l
 388+ 9440 1A               ld a,(de)
 389+ 9441 77               ld (hl),a
 390+ 9442 1C               inc e
 391+ 9443 2C               inc l
 392+ 9444 1A               ld a,(de)
 393+ 9445 77               ld (hl),a
 394+ 9446 1C               inc e
 395+ 9447
 396+ 9447 E1               pop hl
 397+ 9448 1A               ld a,(de)
 398+ 9449 77               ld (hl),a
 399+ 944A 1C               inc e
 400+ 944B 2C               inc l
 401+ 944C 1A               ld a,(de)
 402+ 944D 77               ld (hl),a
 403+ 944E 1C               inc e
 404+ 944F 2C               inc l
 405+ 9450 1A               ld a,(de)
 406+ 9451 77               ld (hl),a
 407+ 9452 1C               inc e
 408+ 9453
 409+ 9453 ED 7B 0D 8B      ld sp,(Stack)
 410+ 9457
 411+ 9457 C9               ret
 412+ 9458
 413+ 9458              ; ---------------------------------------------------
 414+ 9458
 415+ 9458 ED 73 0D 8B  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 945C FD F9        	ld sp,iy
 417+ 945E
 418+ 945E              ; >>>
 419+ 945E
 420+ 945E 06 10            ld b,16
 421+ 9460 D1           1 pop de
 422+ 9461 7A           	ld a,d
 423+ 9462 AE           	xor (hl)
 424+ 9463 77           	ld (hl),a
 425+ 9464 24           	inc h
 426+ 9465 7C               ld a,h
 427+ 9466 E6 07            and 7
 428+ 9468 20 0C            jr nz,2F
 429+ 946A 7D               ld a,l
 430+ 946B C6 20            add a,$20
 431+ 946D 6F               ld l,a
 432+ 946E 38 06            jr c,2F
 433+ 9470 7C               ld a,h
 434+ 9471 D6 08            sub 8
 435+ 9473 67               ld h,a
 436+ 9474 18 00            jr 2F
 437+ 9476 7C           2 ld a,h
 438+ 9477 FE 58            cp $58
 439+ 9479 28 02            jr z,3F
 440+ 947B 10 E3            djnz 1B
 441+ 947D ED 7B 0D 8B  3 ld sp,(Stack)
 442+ 9481 C9           	ret
 443+ 9482
 444+ 9482 ED 73 0D 8B  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9486 FD F9        	ld sp,iy
 446+ 9488
 447+ 9488              ; >>>
 448+ 9488
 449+ 9488 06 10            ld b,16
 450+ 948A D1           1 pop de
 451+ 948B 7B           	ld a,e
 452+ 948C AE           	xor (hl)
 453+ 948D 77           	ld (hl),a
 454+ 948E 24           	inc h
 455+ 948F 7C               ld a,h
 456+ 9490 E6 07            and 7
 457+ 9492 20 0C            jr nz,2F
 458+ 9494 7D               ld a,l
 459+ 9495 C6 20            add a,$20
 460+ 9497 6F               ld l,a
 461+ 9498 38 06            jr c,2F
 462+ 949A 7C               ld a,h
 463+ 949B D6 08            sub 8
 464+ 949D 67               ld h,a
 465+ 949E 18 00            jr 2F
 466+ 94A0 7C           2 ld a,h
 467+ 94A1 FE 58            cp $58
 468+ 94A3 28 02            jr z,3F
 469+ 94A5 10 E3            djnz 1B
 470+ 94A7 ED 7B 0D 8B  3 ld sp,(Stack)
 471+ 94AB C9           	ret
 472+ 94AC
 473+ 94AC              ; ---------------------------------------------------
 474+ 94AC
 475+ 94AC ED 73 0D 8B  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 94B0 FD F9        	ld sp,iy
 477+ 94B2 06 08            ld b,8
 478+ 94B4 D1           1 pop de
 479+ 94B5 7A           	ld a,d
 480+ 94B6 AE           	xor (hl)
 481+ 94B7 77           	ld (hl),a
 482+ 94B8 23           	inc hl
 483+ 94B9 D1           	pop de
 484+ 94BA 7B           	ld a,e
 485+ 94BB AE           	xor (hl)
 486+ 94BC 77           	ld (hl),a
 487+ 94BD 2B           	dec hl
 488+ 94BE 24            	inc h
 489+ 94BF 7C               ld a,h
 490+ 94C0 E6 07            and 7
 491+ 94C2 20 0A            jr nz,2F
 492+ 94C4 7D               ld a,l
 493+ 94C5 C6 20            add a,$20
 494+ 94C7 6F               ld l,a
 495+ 94C8 38 04            jr c,2F
 496+ 94CA 7C               ld a,h
 497+ 94CB D6 08            sub 8
 498+ 94CD 67               ld h,a
 499+ 94CE 7C           2 ld a,h
 500+ 94CF FE 58            cp $58
 501+ 94D1 28 20            jr z,4F
 502+ 94D3 D1               pop de
 503+ 94D4 7B           	ld a,e
 504+ 94D5 AE           	xor (hl)
 505+ 94D6 77           	ld (hl),a
 506+ 94D7 23           	inc hl
 507+ 94D8 7A           	ld a,d
 508+ 94D9 AE           	xor (hl)
 509+ 94DA 77           	ld (hl),a
 510+ 94DB 2B           	dec hl
 511+ 94DC 24           	inc h
 512+ 94DD 7C               ld a,h
 513+ 94DE E6 07            and 7
 514+ 94E0 20 0A            jr nz,3F
 515+ 94E2 7D               ld a,l
 516+ 94E3 C6 20            add a,$20
 517+ 94E5 6F               ld l,a
 518+ 94E6 38 04            jr c,3F
 519+ 94E8 7C               ld a,h
 520+ 94E9 D6 08            sub 8
 521+ 94EB 67               ld h,a
 522+ 94EC 7C           3 ld a,h
 523+ 94ED FE 58            cp $58
 524+ 94EF 28 02            jr z,4F
 525+ 94F1 10 C1            djnz 1B
 526+ 94F3 ED 7B 0D 8B  4 ld sp,(Stack)
 527+ 94F7 C9           	ret
 528+ 94F8
 529+ 94F8 ED 73 0D 8B  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 94FC FD F9        	ld sp,iy
 531+ 94FE 06 08            ld b,8
 532+ 9500 D1           1 pop de
 533+ 9501 D1           	pop de
 534+ 9502 7B           	ld a,e
 535+ 9503 AE           	xor (hl)
 536+ 9504 77           	ld (hl),a
 537+ 9505 24            	inc h
 538+ 9506 7C               ld a,h
 539+ 9507 E6 07            and 7
 540+ 9509 20 0A            jr nz,2F
 541+ 950B 7D               ld a,l
 542+ 950C C6 20            add a,$20
 543+ 950E 6F               ld l,a
 544+ 950F 38 04            jr c,2F
 545+ 9511 7C               ld a,h
 546+ 9512 D6 08            sub 8
 547+ 9514 67               ld h,a
 548+ 9515 7C           2 ld a,h
 549+ 9516 FE 58            cp $58
 550+ 9518 28 1B            jr z,4F
 551+ 951A D1               pop de
 552+ 951B 7A           	ld a,d
 553+ 951C AE           	xor (hl)
 554+ 951D 77           	ld (hl),a
 555+ 951E 24           	inc h
 556+ 951F 7C               ld a,h
 557+ 9520 E6 07            and 7
 558+ 9522 20 0A            jr nz,3F
 559+ 9524 7D               ld a,l
 560+ 9525 C6 20            add a,$20
 561+ 9527 6F               ld l,a
 562+ 9528 38 04            jr c,3F
 563+ 952A 7C               ld a,h
 564+ 952B D6 08            sub 8
 565+ 952D 67               ld h,a
 566+ 952E 7C           3 ld a,h
 567+ 952F FE 58            cp $58
 568+ 9531 28 02            jr z,4F
 569+ 9533 10 CB            djnz 1B
 570+ 9535 ED 7B 0D 8B  4 ld sp,(Stack)
 571+ 9539 C9           	ret
 572+ 953A
 573+ 953A ED 73 0D 8B  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 953E FD F9        	ld sp,iy
 575+ 9540 06 08            ld b,8
 576+ 9542 D1           1 pop de
 577+ 9543 7B           	ld a,e
 578+ 9544 AE           	xor (hl)
 579+ 9545 77           	ld (hl),a
 580+ 9546 23           	inc hl
 581+ 9547 7A           	ld a,d
 582+ 9548 AE           	xor (hl)
 583+ 9549 77           	ld (hl),a
 584+ 954A 2B           	dec hl
 585+ 954B 24             	inc h
 586+ 954C 7C               ld a,h
 587+ 954D E6 07            and 7
 588+ 954F 20 0A            jr nz,2F
 589+ 9551 7D               ld a,l
 590+ 9552 C6 20            add a,$20
 591+ 9554 6F               ld l,a
 592+ 9555 38 04            jr c,2F
 593+ 9557 7C               ld a,h
 594+ 9558 D6 08            sub 8
 595+ 955A 67               ld h,a
 596+ 955B 7C           2 ld a,h
 597+ 955C FE 58            cp $58
 598+ 955E 28 21            jr z,4F
 599+ 9560 D1               pop de
 600+ 9561 7A           	ld a,d
 601+ 9562 AE           	xor (hl)
 602+ 9563 77           	ld (hl),a
 603+ 9564 23           	inc hl
 604+ 9565 D1               pop de
 605+ 9566 7B           	ld a,e
 606+ 9567 AE           	xor (hl)
 607+ 9568 77           	ld (hl),a
 608+ 9569 2B           	dec hl
 609+ 956A 24           	inc h
 610+ 956B 7C               ld a,h
 611+ 956C E6 07            and 7
 612+ 956E 20 0A            jr nz,3F
 613+ 9570 7D               ld a,l
 614+ 9571 C6 20            add a,$20
 615+ 9573 6F               ld l,a
 616+ 9574 38 04            jr c,3F
 617+ 9576 7C               ld a,h
 618+ 9577 D6 08            sub 8
 619+ 9579 67               ld h,a
 620+ 957A 7C           3 ld a,h
 621+ 957B FE 58            cp $58
 622+ 957D 28 02            jr z,4F
 623+ 957F 10 C1            djnz 1B
 624+ 9581 ED 7B 0D 8B  4 ld sp,(Stack)
 625+ 9585 C9           	ret
 626+ 9586
 627+ 9586 ED 73 0D 8B  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 958A FD F9        	ld sp,iy
 629+ 958C 06 08            ld b,8
 630+ 958E D1           1 pop de
 631+ 958F 7B           	ld a,e
 632+ 9590 AE           	xor (hl)
 633+ 9591 77           	ld (hl),a
 634+ 9592 24            	inc h
 635+ 9593 7C               ld a,h
 636+ 9594 E6 07            and 7
 637+ 9596 20 0A            jr nz,2F
 638+ 9598 7D               ld a,l
 639+ 9599 C6 20            add a,$20
 640+ 959B 6F               ld l,a
 641+ 959C 38 04            jr c,2F
 642+ 959E 7C               ld a,h
 643+ 959F D6 08            sub 8
 644+ 95A1 67               ld h,a
 645+ 95A2 7C           2 ld a,h
 646+ 95A3 FE 58            cp $58
 647+ 95A5 28 1C            jr z,4F
 648+ 95A7 D1               pop de
 649+ 95A8 7A           	ld a,d
 650+ 95A9 AE           	xor (hl)
 651+ 95AA 77           	ld (hl),a
 652+ 95AB 24           	inc h
 653+ 95AC 7C               ld a,h
 654+ 95AD E6 07            and 7
 655+ 95AF 20 0A            jr nz,3F
 656+ 95B1 7D               ld a,l
 657+ 95B2 C6 20            add a,$20
 658+ 95B4 6F               ld l,a
 659+ 95B5 38 04            jr c,3F
 660+ 95B7 7C               ld a,h
 661+ 95B8 D6 08            sub 8
 662+ 95BA 67               ld h,a
 663+ 95BB 7C           3 ld a,h
 664+ 95BC FE 58            cp $58
 665+ 95BE 28 03            jr z,4F
 666+ 95C0 D1               pop de
 667+ 95C1 10 CB            djnz 1B
 668+ 95C3 ED 7B 0D 8B  4 ld sp,(Stack)
 669+ 95C7 C9           	ret
 670+ 95C8
 671+ 95C8              ; ---------------------------------------------------
 672+ 95C8              ;
 673+ 95C8              ;   27/02/23
 674+ 95C8              ;
 675+ 95C8              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 95C8              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 95C8              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 95C8
 679+ 95C8 ED 73 0D 8B  Pinta_Disparo ld (Stack),sp
 680+ 95CC FD F9            ld sp,iy
 681+ 95CE 06 03            ld b,3
 682+ 95D0 D1           1 pop de
 683+ 95D1 7B               ld a,e
 684+ 95D2 AE               xor (hl)
 685+ 95D3 77               ld (hl),a
 686+ 95D4 23               inc hl
 687+ 95D5 7A               ld a,d
 688+ 95D6 AE               xor (hl)
 689+ 95D7 77               ld (hl),a
 690+ 95D8 2B               dec hl
 691+ 95D9
 692+ 95D9 24               inc h
 693+ 95DA 7C               ld a,h
 694+ 95DB E6 07            and 7
 695+ 95DD 20 0A            jr nz,2F
 696+ 95DF 7D               ld a,l
 697+ 95E0 C6 20            add a,$20
 698+ 95E2 6F               ld l,a
 699+ 95E3 38 04            jr c,2F
 700+ 95E5 7C               ld a,h
 701+ 95E6 D6 08            sub 8
 702+ 95E8 67               ld h,a
 703+ 95E9 7C           2 ld a,h
 704+ 95EA FE 58            cp $58
 705+ 95EC 28 02            jr z,3F
 706+ 95EE
 707+ 95EE 10 E0            djnz 1B
 708+ 95F0 ED 7B 0D 8B  3 ld sp,(Stack)
 709+ 95F4 C9               ret
 710+ 95F5
# file closed: Rutinas_de_impresion_sprites.asm
1843  95F5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 95F5
   2+ 95F5              ; ******************************************************************************************************************************************************************************************
   3+ 95F5              ;
   4+ 95F5              ;   20/05/23
   5+ 95F5              ;
   6+ 95F5              ;	Recompone_posicion_inicio
   7+ 95F5              ;
   8+ 95F5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 95F5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 95F5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 95F5              ;	_ a una u otra rutina.
  12+ 95F5
  13+ 95F5              Recompone_posicion_inicio
  14+ 95F5
  15+ 95F5 2A CD 8A     	ld hl,(Posicion_inicio)
  16+ 95F8 7D           	ld a,l
  17+ 95F9 E6 1F        	and $1f
  18+ 95FB 28 16        	jr z,1F
  19+ 95FD
  20+ 95FD FE 1F        	cp $1f
  21+ 95FF 28 0D        	jr z,3F
  22+ 9601
  23+ 9601 21 E2 8A     	ld hl,Ctrl_2
  24+ 9604 CB C6        	set 0,(hl)
  25+ 9606 2A BF 8A     	ld hl,(Puntero_objeto)
  26+ 9609 22 FD 8A     	ld (Repone_puntero_objeto),hl
  27+ 960C 18 08        	jr 2F
  28+ 960E
  29+ 960E CD BC 97     3 call Mov_left
  30+ 9611 18 03        	jr 2F
  31+ 9613
  32+ 9613 CD 99 96     1 call Mov_right
  33+ 9616 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9619 22 BF 8A     	ld (Puntero_objeto),hl
  35+ 961C C9           	ret
  36+ 961D
  37+ 961D              ; ******************************************************************************************************************************************************************************************
  38+ 961D              ;
  39+ 961D              ;   27/05/23
  40+ 961D              ;
  41+ 961D              ;	Mov_down
  42+ 961D              ;
  43+ 961D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 961D              ;
  45+ 961D              ;
  46+ 961D              Mov_down
  47+ 961D
  48+ 961D CD 87 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9620              ;																	; _ repone (Puntero_objeto).
  50+ 9620 21 DD 8A     	ld hl,Ctrl_0
  51+ 9623 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9625              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9625              ; 																	; _ en el caso de que no lo haya.
  54+ 9625 3A E7 8A     	ld a,(Vel_down)
  55+ 9628 47           	ld b,a
  56+ 9629 2A BD 8A         ld hl,(Posicion_actual)
  57+ 962C CD F8 9A     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 962F E6 02        	and 2
  59+ 9631 28 17        	jr z,1F
  60+ 9633
  61+ 9633              ; Nos encontramos en el último tercio de pantalla.
  62+ 9633              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9633
  64+ 9633 7C           	ld a,h
  65+ 9634 FE 57        	cp $57
  66+ 9636 20 12        	jr nz,1F
  67+ 9638
  68+ 9638 7D           	ld a,l
  69+ 9639 C6 20        	add $20
  70+ 963B 30 0D        	jr nc,1F
  71+ 963D
  72+ 963D              ; ------------------------------
  73+ 963D              ;
  74+ 963D              ;	12/01/24
  75+ 963D
  76+ 963D              ;	call Reaparece_arriba
  77+ 963D CD 49 99     	call Reinicio
  78+ 9640
  79+ 9640              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9640
  81+ 9640 3A 1D 8B     	ld a,(Ctrl_3)
  82+ 9643 CB CF        	set 1,a
  83+ 9645 32 1D 8B     	ld (Ctrl_3),a
  84+ 9648
  85+ 9648 18 08        	jr 3F
  86+ 964A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 964A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 964A              ; ------------------------------
  89+ 964A
  90+ 964A CD 7F 92     1 call NextScan
  91+ 964D 22 BD 8A     	ld (Posicion_actual),hl
  92+ 9650 10 DA            djnz 2B
  93+ 9652 CD 16 9B     3 call Genera_coordenadas
  94+ 9655 C9           	ret
  95+ 9656
  96+ 9656              ; ******************************************************************************************************************************************************************************************
  97+ 9656              ;
  98+ 9656              ;   27/05/23
  99+ 9656              ;
 100+ 9656              ;	Mov_up
 101+ 9656              ;
 102+ 9656              ; 	Mueve el Sprite hacia arriba.
 103+ 9656              ;
 104+ 9656              ;
 105+ 9656              Mov_up
 106+ 9656
 107+ 9656 CD 87 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9659              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9659 21 DD 8A     	ld hl,Ctrl_0
 110+ 965C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 965E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 965E              ; 																		; _ en el caso de que no lo haya.
 113+ 965E 3A E6 8A     	ld a,(Vel_up)
 114+ 9661 47           	ld b,a
 115+ 9662 2A BD 8A     	ld hl,(Posicion_actual)
 116+ 9665 CD F8 9A     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9668 A7           	and a
 118+ 9669 20 10        	jr nz,1F
 119+ 966B
 120+ 966B              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 966B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 966B
 123+ 966B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 966C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 966E 20 0B            jr nz,1F
 126+ 9670 7D               ld a,l
 127+ 9671 D6 20            sub $20
 128+ 9673 30 06            jr nc,1F
 129+ 9675 25               dec h
 130+ 9676
 131+ 9676              ; -----------------------------
 132+ 9676 CD 2A 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9679              ;	call Reinicio
 134+ 9679              ; -----------------------------
 135+ 9679
 136+ 9679 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 967B CD 8E 92     1 call PreviousScan
 138+ 967E 22 BD 8A     	ld (Posicion_actual),hl
 139+ 9681 10 E2            djnz 3B
 140+ 9683 CD 16 9B     2 call Genera_coordenadas
 141+ 9686 C9           	ret
 142+ 9687
 143+ 9687              ; -----------------------------
 144+ 9687              ;
 145+ 9687              ;	27/5/23
 146+ 9687              ;
 147+ 9687              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9687              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9687              ;
 150+ 9687              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9687              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9687              ;
 153+ 9687              ;	Modifica: A y (Puntero_objeto).
 154+ 9687
 155+ 9687 3A E2 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 968A CB 47        	bit 0,a
 157+ 968C C8           	ret z
 158+ 968D CB 87        	res 0,a
 159+ 968F 32 E2 8A     	ld (Ctrl_2),a
 160+ 9692 2A FD 8A     	ld hl,(Repone_puntero_objeto)
 161+ 9695 22 BF 8A     	ld (Puntero_objeto),hl
 162+ 9698 C9           	ret
 163+ 9699
 164+ 9699              ; ******************************************************************************************************************************************************************************************
 165+ 9699              ;
 166+ 9699              ;	19/10/22
 167+ 9699              ;
 168+ 9699              ;	Mov_right.
 169+ 9699              ;
 170+ 9699              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9699              ;
 172+ 9699
 173+ 9699 3A DD 8A     Mov_right ld a,(Ctrl_0)
 174+ 969C CB 77        	bit 6,a
 175+ 969E 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 96A0
 177+ 96A0 CD D8 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 96A3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 96A4
 180+ 96A4 21 DD 8A     	ld hl,Ctrl_0
 181+ 96A7 CB E6        	set 4,(hl)
 182+ 96A9 18 52        	jr 8F
 183+ 96AB
 184+ 96AB 21 DD 8A     10 ld hl,Ctrl_0
 185+ 96AE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 96B0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 96B0              ; 																	; _ en el caso de que no lo haya.
 188+ 96B0 3A C1 8A     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 96B3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 96B5 20 46        	jr nz,8F
 191+ 96B7
 192+ 96B7 3A C3 8A     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 96BA A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 96BB 28 40        	jr z,8F
 195+ 96BD
 196+ 96BD              ; ---------- ---------- ----------
 197+ 96BD              ;
 198+ 96BD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 96BD
 200+ 96BD 3A E5 8A     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 96C0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 96C2 28 11        	jr z,1F
 203+ 96C4 38 06        	jr c,6F
 204+ 96C6 FE 04        	cp 4
 205+ 96C8 28 14        	jr z,7F
 206+ 96CA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 96CC
 208+ 96CC              ; ---------- ---------- ----------
 209+ 96CC              ;
 210+ 96CC              ; Perfiles de velocidad
 211+ 96CC              ;
 212+ 96CC
 213+ 96CC 3A C3 8A     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 96CF FE FE        	cp $fe
 215+ 96D1 20 2A        	jr nz,8F
 216+ 96D3 18 10        	jr 3F
 217+ 96D5 3A C3 8A     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 96D8 FE FD        	cp $fd
 219+ 96DA 20 21        	jr nz,8F
 220+ 96DC 18 07        	jr 3F
 221+ 96DE 3A C3 8A     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 96E1 FE FB        	cp $fb
 223+ 96E3 20 18        	jr nz,8F
 224+ 96E5
 225+ 96E5              ; ---------- ---------- ----------
 226+ 96E5
 227+ 96E5              3
 228+ 96E5 CD 18 99     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 96E8              ;	call Reinicio
 230+ 96E8
 231+ 96E8              ; ---------- ---------- ----------
 232+ 96E8              ;
 233+ 96E8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 96E8
 235+ 96E8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 96EA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 96EB CD 04 97     	call DESPLZ_DER
 238+ 96EE C1           	pop bc
 239+ 96EF 10 F9        	djnz 5B
 240+ 96F1 2A BD 8A     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 96F4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 96F5 22 BD 8A     	ld (Posicion_actual),hl
 243+ 96F8 CD 16 9B     	call Genera_coordenadas
 244+ 96FB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96FD
 246+ 96FD              ; ---------- ---------- ----------
 247+ 96FD
 248+ 96FD 2A BD 8A     8 ld hl,(Posicion_actual)
 249+ 9700 CD 04 97     	call DESPLZ_DER
 250+ 9703 C9           2 ret
 251+ 9704
 252+ 9704              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9704              ;
 254+ 9704              ;	22/9/22
 255+ 9704              ;
 256+ 9704
 257+ 9704 CD 13 97     DESPLZ_DER call Desplaza_derecha
 258+ 9707 CD 5F 97         call modifica_parametros_1er_DESPLZ_2
 259+ 970A CD 88 97         call Ciclo_completo
 260+ 970D 21 DD 8A     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9710 CB FE        	set 7,(hl)
 262+ 9712 C9           	ret
 263+ 9713
 264+ 9713              ; ******************************************************************************************************************************************************************************************
 265+ 9713              ;	15/02/23
 266+ 9713              ;
 267+ 9713
 268+ 9713 3A E5 8A     Desplaza_derecha ld a,(Vel_right)
 269+ 9716 47           	ld b,a
 270+ 9717 2A C9 8A     	ld hl,(Puntero_DESPLZ_der)
 271+ 971A 23           1 inc hl
 272+ 971B 23           	inc hl
 273+ 971C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 971E 22 C9 8A     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9721 CD F1 8C     	call Extrae_address
 276+ 9724 22 BF 8A     	ld (Puntero_objeto),hl
 277+ 9727
 278+ 9727              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9727
 280+ 9727              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9727              ; Cuántos movimientos hemos hecho ??
 282+ 9727              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9727
 284+ 9727 2A C5 8A     7 ld hl,(Indice_Sprite_der)
 285+ 972A EB           	ex de,hl
 286+ 972B A7           	and a
 287+ 972C ED 52        	sbc hl,de
 288+ 972E CB 3D        	srl l
 289+ 9730 3E 08        6 ld a,8
 290+ 9732 95           	sub l
 291+ 9733 30 1E        	jr nc,3F
 292+ 9735
 293+ 9735              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9735              ; B="0".
 295+ 9735
 296+ 9735 04           4 inc b
 297+ 9736 3C           	inc a
 298+ 9737 20 FC        	jr nz,4B
 299+ 9739 78           	ld a,b
 300+ 973A 08           	ex af,af
 301+ 973B 2A C5 8A     	ld hl,(Indice_Sprite_der)
 302+ 973E 23           5 inc hl
 303+ 973F 23           	inc hl
 304+ 9740 10 FC        	djnz 5B
 305+ 9742 22 C9 8A     	ld (Puntero_DESPLZ_der),hl
 306+ 9745 CD F1 8C     	call Extrae_address
 307+ 9748 22 BF 8A     	ld (Puntero_objeto),hl
 308+ 974B
 309+ 974B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 974B              ; _(Posicion_actual).
 311+ 974B
 312+ 974B 21 BD 8A     	ld hl,Posicion_actual
 313+ 974E 34           	inc (hl)
 314+ 974F 08               ex af,af
 315+ 9750 6F           	ld l,a
 316+ 9751 18 DD        	jr 6B
 317+ 9753
 318+ 9753              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9753
 320+ 9753 47           3 ld b,a
 321+ 9754 2A C7 8A     	ld hl,(Indice_Sprite_izq)
 322+ 9757 23           2 inc hl
 323+ 9758 23           	inc hl
 324+ 9759 10 FC        	djnz 2B
 325+ 975B 22 CB 8A     	ld (Puntero_DESPLZ_izq),hl
 326+ 975E C9           8 ret
 327+ 975F
 328+ 975F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 975F              ;
 330+ 975F              ;	24/7/22
 331+ 975F              ;
 332+ 975F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 975F              ;
 334+ 975F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 975F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 975F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 975F
 338+ 975F 3A C3 8A     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9762 A7           	and a
 340+ 9763 20 1F        	jr nz,1F
 341+ 9765 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9767 32 C3 8A         ld (CTRL_DESPLZ),a
 343+ 976A
 344+ 976A 21 BC 8A     	ld hl,Columns
 345+ 976D 34           	inc (hl)
 346+ 976E 3A CF 8A     	ld a,(Cuad_objeto)
 347+ 9771 E6 01        	and 1
 348+ 9773 28 0F        	jr z,1F
 349+ 9775 2A BD 8A     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9778 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9779 22 BD 8A     	ld (Posicion_actual),hl
 352+ 977C CD 16 9B     	call Genera_coordenadas
 353+ 977F CD E4 98     	call Inc_CTRL_DESPLZ
 354+ 9782 18 03        	jr 2F
 355+ 9784 CD E4 98     1 call Inc_CTRL_DESPLZ
 356+ 9787 C9           2 ret
 357+ 9788
 358+ 9788              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9788              ;
 360+ 9788              ;	24/7/22
 361+ 9788              ;
 362+ 9788              ;	Ciclo_completo.
 363+ 9788              ;
 364+ 9788              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9788              ;
 366+ 9788              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9788              ; 	Decrementamos (Columns).
 368+ 9788              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9788              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9788
 371+ 9788
 372+ 9788 3A C3 8A     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 978B FE FF        	cp $ff
 374+ 978D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 978F E6 F0        	and $f0
 376+ 9791 20 28        	jr nz,3F
 377+ 9793
 378+ 9793              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9793
 380+ 9793 3A C3 8A     	ld a,(CTRL_DESPLZ)
 381+ 9796 47           	ld b,a
 382+ 9797 3E F8        	ld a,$f8
 383+ 9799 80           	add b
 384+ 979A 32 C3 8A     	ld (CTRL_DESPLZ),a
 385+ 979D 18 1C        	jr 3F
 386+ 979F 21 BC 8A     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 97A2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 97A3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 97A4 32 C3 8A     	ld (CTRL_DESPLZ),a
 390+ 97A7 3A CF 8A     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 97AA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 97AC 20 0A        	jr nz,2F
 393+ 97AE 2A BD 8A     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 97B1 23           	inc hl
 395+ 97B2 22 BD 8A     	ld (Posicion_actual),hl
 396+ 97B5 CD 16 9B     	call Genera_coordenadas
 397+ 97B8
 398+ 97B8              ; Inicia el puntero de Sprite.
 399+ 97B8
 400+ 97B8 CD 06 8D     2 call Inicia_puntero_objeto_der
 401+ 97BB C9           3 ret
 402+ 97BC
 403+ 97BC              ; ******************************************************************************************************************************************************************************************
 404+ 97BC              ;
 405+ 97BC              ;	15/02/23
 406+ 97BC              ;
 407+ 97BC              ;	Mov_left.
 408+ 97BC              ;
 409+ 97BC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 97BC              ;
 411+ 97BC              Mov_left
 412+ 97BC
 413+ 97BC 21 DD 8A     	ld hl,Ctrl_0
 414+ 97BF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 97C1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 97C1              ; 																	; _ en el caso de que no lo haya.
 417+ 97C1 3A DD 8A     	ld a,(Ctrl_0)
 418+ 97C4 CB 77        	bit 6,a
 419+ 97C6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 97C8
 421+ 97C8 CD DE 98     	call Stop_Amadeus_left
 422+ 97CB C8           	ret z
 423+ 97CC 20 4A        	jr nz,8F
 424+ 97CE
 425+ 97CE 3A C1 8A     11 ld a,(Coordenada_X)
 426+ 97D1 A7           	and a
 427+ 97D2 20 44        	jr nz,8F
 428+ 97D4
 429+ 97D4 3A C3 8A     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 97D7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 97D8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 97DA
 433+ 97DA              ; ---------- ---------- ----------
 434+ 97DA
 435+ 97DA 3A E4 8A     	ld a,(Vel_left)
 436+ 97DD FE 02        	cp 2
 437+ 97DF 28 0F        	jr z,1F
 438+ 97E1 38 04        	jr c,6F
 439+ 97E3 FE 04        	cp 4
 440+ 97E5 28 12        	jr z,7F
 441+ 97E7
 442+ 97E7              ; ---------- ---------- ----------
 443+ 97E7
 444+ 97E7 3A C3 8A     6 ld a,(CTRL_DESPLZ)
 445+ 97EA FE F8        	cp $f8
 446+ 97EC 20 2A        	jr nz,8F
 447+ 97EE 18 10        	jr 4F
 448+ 97F0 3A C3 8A     1 ld a,(CTRL_DESPLZ)
 449+ 97F3 FE F9        	cp $f9
 450+ 97F5 20 21        	jr nz,8F
 451+ 97F7 18 07        	jr 4F
 452+ 97F9 3A C3 8A     7 ld a,(CTRL_DESPLZ)
 453+ 97FC FE FB        	cp $fb
 454+ 97FE 20 18        	jr nz,8F
 455+ 9800
 456+ 9800              ; ---------- ---------- ----------
 457+ 9800
 458+ 9800              4
 459+ 9800 CD 06 99     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9803              ;	call Reinicio
 461+ 9803
 462+ 9803              ; ---------- ---------- ----------
 463+ 9803
 464+ 9803 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9805 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9806
 467+ 9806              ;	ld hl,(Indice_Sprite_izq)
 468+ 9806              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9806
 470+ 9806 CD 1F 98     	call DESPLZ_IZQ
 471+ 9809 C1           	pop bc
 472+ 980A 10 F9        	djnz 5B
 473+ 980C 2A BD 8A     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 980F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9810 22 BD 8A     	ld (Posicion_actual),hl
 476+ 9813 CD 16 9B     	call Genera_coordenadas
 477+ 9816 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9818
 479+ 9818              ; ---------- ---------- ----------
 480+ 9818
 481+ 9818              ; Movemos, no hay recolocación.
 482+ 9818
 483+ 9818 2A BD 8A     8 ld hl,(Posicion_actual)
 484+ 981B CD 1F 98     	call DESPLZ_IZQ
 485+ 981E C9           2 ret
 486+ 981F
 487+ 981F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 981F              ;
 489+ 981F              ;	22/9/22
 490+ 981F
 491+ 981F              DESPLZ_IZQ
 492+ 981F
 493+ 981F CD 2E 98     	call Desplaza_izquierda
 494+ 9822 CD 7A 98         call modifica_parametros_1er_DESPLZ
 495+ 9825 CD A2 98     	call Ciclo_completo_2
 496+ 9828 21 DD 8A     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 982B CB BE        	res 7,(hl)
 498+ 982D C9           	ret
 499+ 982E
 500+ 982E              Desplaza_izquierda
 501+ 982E
 502+ 982E 3A E4 8A     	ld a,(Vel_left)
 503+ 9831 47           	ld b,a
 504+ 9832 2A CB 8A     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9835 23           1 inc hl
 506+ 9836 23           	inc hl
 507+ 9837 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9839 22 CB 8A     	ld (Puntero_DESPLZ_izq),hl
 509+ 983C CD F1 8C     	call Extrae_address
 510+ 983F 22 BF 8A     	ld (Puntero_objeto),hl
 511+ 9842
 512+ 9842              ; Modifica (Puntero_DESPLZ_der).
 513+ 9842
 514+ 9842              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9842              ; Cuántos movimientos hemos hecho ??
 516+ 9842              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9842
 518+ 9842 2A C7 8A     7 ld hl,(Indice_Sprite_izq)
 519+ 9845 EB           	ex de,hl
 520+ 9846 A7           	and a
 521+ 9847 ED 52        	sbc hl,de
 522+ 9849 CB 3D        	srl l
 523+ 984B 3E 08        6 ld a,8
 524+ 984D 95           	sub l
 525+ 984E 30 1E        	jr nc,3F
 526+ 9850
 527+ 9850              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9850              ; B="0".
 529+ 9850
 530+ 9850 04           4 inc b
 531+ 9851 3C           	inc a
 532+ 9852 20 FC        	jr nz,4B
 533+ 9854 78           	ld a,b
 534+ 9855 08           	ex af,af
 535+ 9856 2A C7 8A     	ld hl,(Indice_Sprite_izq)
 536+ 9859 23           5 inc hl
 537+ 985A 23           	inc hl
 538+ 985B 10 FC        	djnz 5B
 539+ 985D 22 CB 8A     	ld (Puntero_DESPLZ_izq),hl
 540+ 9860 CD F1 8C     	call Extrae_address
 541+ 9863 22 BF 8A     	ld (Puntero_objeto),hl
 542+ 9866
 543+ 9866              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9866              ; _(Posicion_actual).
 545+ 9866
 546+ 9866 21 BD 8A     	ld hl,Posicion_actual
 547+ 9869 35           	dec (hl)
 548+ 986A 08           	ex af,af
 549+ 986B 6F           	ld l,a
 550+ 986C 18 DD        	jr 6B
 551+ 986E
 552+ 986E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 986E
 554+ 986E 47           3 ld b,a
 555+ 986F 2A C5 8A     	ld hl,(Indice_Sprite_der)
 556+ 9872 23           2 inc hl
 557+ 9873 23           	inc hl
 558+ 9874 10 FC        	djnz 2B
 559+ 9876 22 C9 8A     	ld (Puntero_DESPLZ_der),hl
 560+ 9879 C9           8 ret
 561+ 987A
 562+ 987A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 987A              ;
 564+ 987A              ;	modifica_parametros_1er_DESPLZ
 565+ 987A              ;
 566+ 987A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 987A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 987A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 987A
 570+ 987A 3A C3 8A     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 987D A7           	and a
 572+ 987E 20 1E        	jr nz,1F
 573+ 9880 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9881 32 C3 8A         ld (CTRL_DESPLZ),a
 575+ 9884 21 BC 8A     	ld hl,Columns
 576+ 9887 34           	inc (hl)
 577+ 9888 3A CF 8A     	ld a,(Cuad_objeto)
 578+ 988B E6 01        	and 1
 579+ 988D 20 0F        	jr nz,1F
 580+ 988F 2A BD 8A     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9892 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9893 22 BD 8A     	ld (Posicion_actual),hl
 583+ 9896 CD 16 9B     	call Genera_coordenadas
 584+ 9899 CD F5 98     	call Dec_CTRL_DESPLZ
 585+ 989C 18 03        	jr 2F
 586+ 989E CD F5 98     1 call Dec_CTRL_DESPLZ
 587+ 98A1 C9           2 ret
 588+ 98A2
 589+ 98A2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 98A2
 591+ 98A2 3A C3 8A     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 98A5 FE F7        	cp $f7
 593+ 98A7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 98A9 30 2C        	jr nc,3F
 595+ 98AB
 596+ 98AB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 98AB
 598+ 98AB 06 00        	ld b,0
 599+ 98AD 04           4 inc b
 600+ 98AE 3C           	inc a
 601+ 98AF FE F7        	cp $f7
 602+ 98B1 20 FA        	jr nz,4B
 603+ 98B3 3E FF        	ld a,$ff
 604+ 98B5 90           	sub b
 605+ 98B6 32 C3 8A     	ld (CTRL_DESPLZ),a
 606+ 98B9 18 1C        	jr 3F
 607+ 98BB
 608+ 98BB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 98BB
 610+ 98BB 21 BC 8A     1 ld hl,Columns
 611+ 98BE 35           	dec (hl)
 612+ 98BF AF           	xor a
 613+ 98C0 32 C3 8A     	ld (CTRL_DESPLZ),a
 614+ 98C3 3A CF 8A     	ld a,(Cuad_objeto)
 615+ 98C6 E6 01        	and 1
 616+ 98C8 28 0A        	jr z,2F
 617+ 98CA 2A BD 8A     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 98CD 2B           	dec hl
 619+ 98CE 22 BD 8A     	ld (Posicion_actual),hl
 620+ 98D1 CD 16 9B     	call Genera_coordenadas
 621+ 98D4
 622+ 98D4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 98D4
 624+ 98D4 CD 19 8D     2 call Inicia_puntero_objeto_izq
 625+ 98D7 C9           3 ret
 626+ 98D8
 627+ 98D8              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 98D8              ;
 629+ 98D8              ;	19/10/22
 630+ 98D8              ;
 631+ 98D8              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 98D8              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 98D8
 634+ 98D8 3A C1 8A     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 98DB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 98DD C9           	ret
 637+ 98DE
 638+ 98DE              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 98DE              ;
 640+ 98DE              ;	19/10/22
 641+ 98DE              ;
 642+ 98DE              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 98DE              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 98DE
 645+ 98DE 3A C1 8A     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 98E1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 98E3 C9           	ret
 648+ 98E4
 649+ 98E4              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 98E4              ;
 651+ 98E4              ;	24/7/22
 652+ 98E4              ;
 653+ 98E4              ;	Inc_CTRL_DESPLZ
 654+ 98E4              ;
 655+ 98E4              ;
 656+ 98E4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 98E4
 658+ 98E4 21 C3 8A     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 98E7 3A E5 8A     	ld a,(Vel_right)
 660+ 98EA A7           	and a
 661+ 98EB 28 06        	jr z,1F
 662+ 98ED 47           	ld b,a
 663+ 98EE 34           3 inc (hl)
 664+ 98EF 10 FD        	djnz 3B
 665+ 98F1 18 01        	jr 2F
 666+ 98F3 34           1 inc (hl)
 667+ 98F4 C9           2 ret
 668+ 98F5
 669+ 98F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 98F5              ;
 671+ 98F5              ;	5/2/23
 672+ 98F5              ;
 673+ 98F5              ;	Dec_CTRL_DESPLZ
 674+ 98F5              ;
 675+ 98F5              ;
 676+ 98F5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 98F5
 678+ 98F5 21 C3 8A     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 98F8 3A E4 8A     	ld a,(Vel_left)
 680+ 98FB A7           	and a
 681+ 98FC 28 06        	jr z,1F
 682+ 98FE 47           	ld b,a
 683+ 98FF 35           3 dec (hl)
 684+ 9900 10 FD        	djnz 3B
 685+ 9902 18 01        	jr 2F
 686+ 9904 35           1 dec (hl)
 687+ 9905 C9           2 ret
 688+ 9906
 689+ 9906              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9906
 691+ 9906 2A BD 8A     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9909 01 1F 00     	ld bc,31
 693+ 990C A7           	and a
 694+ 990D ED 4A        	adc hl,bc
 695+ 990F 22 BD 8A     	ld (Posicion_actual),hl
 696+ 9912 21 DD 8A     	ld hl,Ctrl_0														; $xxx1
 697+ 9915 CB C6        	set 0,(hl)
 698+ 9917 C9           	ret
 699+ 9918
 700+ 9918              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9918
 702+ 9918 2A BD 8A     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 991B 01 1F 00     	ld bc,31
 704+ 991E A7           	and a
 705+ 991F ED 42        	sbc hl,bc
 706+ 9921 22 BD 8A     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9924 21 DD 8A     	ld hl,Ctrl_0
 708+ 9927 CB CE        	set 1,(hl)
 709+ 9929 C9           	ret
 710+ 992A
 711+ 992A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 992A
 713+ 992A 24           Reaparece_abajo inc h
 714+ 992B 01 E0 17     	ld bc,$17e0
 715+ 992E A7           	and a
 716+ 992F ED 4A        	adc hl,bc
 717+ 9931 22 BD 8A     	ld (Posicion_actual),hl
 718+ 9934 21 DD 8A     	ld hl,Ctrl_0
 719+ 9937 CB D6        	set 2,(hl)
 720+ 9939 C9           	ret
 721+ 993A
 722+ 993A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 993A
 724+ 993A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 993D A7           	and a
 726+ 993E ED 42        	sbc hl,bc
 727+ 9940 22 BD 8A     	ld (Posicion_actual),hl
 728+ 9943 21 DD 8A     	ld hl,Ctrl_0
 729+ 9946 CB DE        	set 3,(hl)
 730+ 9948 C9           	ret
 731+ 9949
 732+ 9949              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9949              ;
 734+ 9949              ;	15/07/23
 735+ 9949
 736+ 9949              Reinicio
 737+ 9949
 738+ 9949              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9949
 740+ 9949 AF           	xor a
 741+ 994A 21 F4 8A     	ld hl,Puntero_indice_mov_bucle
 742+ 994D CD 6B 99     	call Limpia_contenido_hl
 743+ 9950
 744+ 9950 21 BD 8A     	ld hl,Posicion_actual
 745+ 9953 CD 6B 99     	call Limpia_contenido_hl
 746+ 9956
 747+ 9956 CD B4 8D     	call Inicializa_Puntero_indice_mov
 748+ 9959 CD 37 9A     	call Inicia_Puntero_mov
 749+ 995C
 750+ 995C 21 F6 8A     	ld hl,Incrementa_puntero
 751+ 995F 06 05        	ld b,5
 752+ 9961 77           1 ld (hl),a
 753+ 9962 23           	inc hl
 754+ 9963 10 FC        	djnz 1B
 755+ 9965
 756+ 9965 21 E2 8A     	ld hl,Ctrl_2
 757+ 9968 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 996A
 759+ 996A C9           	ret
 760+ 996B
 761+ 996B 77           Limpia_contenido_hl	ld (hl),a
 762+ 996C 23           	inc hl
 763+ 996D 77           	ld (hl),a
 764+ 996E C9           	ret
 765+ 996F
 766+ 996F
# file closed: Direcciones.asm
1844  996F              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 996F              ; ----- ----- ----- ----- -----
   2+ 996F              ;
   3+ 996F              ;   28/12/23
   4+ 996F
   5+ 996F              Movimiento
   6+ 996F
   7+ 996F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 996F
   9+ 996F 3A E2 8A         ld a,(Ctrl_2)
  10+ 9972 CB 57            bit 2,a
  11+ 9974 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9976
  13+ 9976 2A F2 8A         ld hl,(Puntero_mov)
  14+ 9979 7E               ld a,(hl)
  15+ 997A
  16+ 997A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 997A
  18+ 997A              Inicia_desplazamiento.
  19+ 997A
  20+ 997A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 997A
  22+ 997A CD 6D 9A         call Ajusta_velocidad_desplazamiento
  23+ 997D
  24+ 997D              ; Iniciamos (Repetimos_mov).
  25+ 997D
  26+ 997D 7E               ld a,(hl)
  27+ 997E E6 0F            and $0f
  28+ 9980 32 F8 8A         ld (Repetimos_desplazamiento),a
  29+ 9983 32 F9 8A         ld (Repetimos_desplazamiento_backup),a
  30+ 9986
  31+ 9986              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9986
  33+ 9986 23               inc hl
  34+ 9987 7E               ld a,(hl)
  35+ 9988 32 FB 8A         ld (Cola_de_desplazamiento),a
  36+ 998B 2B               dec hl
  37+ 998C
  38+ 998C 21 E2 8A         ld hl,Ctrl_2
  39+ 998F CB D6            set 2,(hl)
  40+ 9991
  41+ 9991              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9991              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9991
  44+ 9991              Desplazamiento_iniciado
  45+ 9991
  46+ 9991 CD 41 9A         call Aplica_desplazamiento
  47+ 9994
  48+ 9994              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9994
  50+ 9994 3A 1D 8B         ld a,(Ctrl_3)
  51+ 9997 CB 4F            bit 1,a
  52+ 9999 C0               ret nz
  53+ 999A
  54+ 999A 21 F8 8A     3 ld hl,Repetimos_desplazamiento
  55+ 999D 35               dec (hl)
  56+ 999E C0               ret nz
  57+ 999F
  58+ 999F              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 999F              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 999F              ; Analiza (Cola_de_desplazamiento).
  61+ 999F
  62+ 999F 3A FB 8A     Cola ld a,(Cola_de_desplazamiento)
  63+ 99A2 A7               and a
  64+ 99A3 CC 96 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 99A6 28 30            jr z,Reinicia_el_movimiento
  66+ 99A8
  67+ 99A8 FE FF            cp $ff
  68+ 99AA 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 99AC
  70+ 99AC FE FE            cp $fe
  71+ 99AE CC 1B 9A         call z,Fijamos_bucle
  72+ 99B1 28 25            jr z,Reinicia_el_movimiento
  73+ 99B3
  74+ 99B3 FE FD            cp $fd
  75+ 99B5 20 11            jr nz,1F
  76+ 99B7
  77+ 99B7              ; ---
  78+ 99B7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 99B7
  80+ 99B7 3A E2 8A         ld a,(Ctrl_2)
  81+ 99BA CB 5F            bit 3,a
  82+ 99BC 20 1A            jr nz,Reinicia_el_movimiento
  83+ 99BE
  84+ 99BE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 99BE
  86+ 99BE 21 E2 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 99C1 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 99C3
  89+ 99C3 CD 2C 9A         call Inicia_Repetimos_movimiento
  90+ 99C6 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 99C8              ; ---
  92+ 99C8
  93+ 99C8 FE 01        1 cp 1
  94+ 99CA CA 05 9A         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 99CD
  96+ 99CD 3D               dec a
  97+ 99CE 32 FB 8A         ld (Cola_de_desplazamiento),a
  98+ 99D1
  99+ 99D1 3A F9 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 99D4 32 F8 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 99D7              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 99D7 C9               ret
 103+ 99D8
 104+ 99D8              Reinicia_el_movimiento
 105+ 99D8
 106+ 99D8 3A E2 8A         ld a,(Ctrl_2)
 107+ 99DB CB 5F            bit 3,a
 108+ 99DD 28 1B            jr z,2F
 109+ 99DF
 110+ 99DF              ; (Cola_de_desplazamiento)="254".
 111+ 99DF
 112+ 99DF 21 FA 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 99E2 35               dec (hl)
 114+ 99E3 20 15            jr nz,2F
 115+ 99E5
 116+ 99E5              ; Fin de las repeticiones del último movimiento.
 117+ 99E5
 118+ 99E5 21 E2 8A         ld hl,Ctrl_2
 119+ 99E8 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 99EA
 121+ 99EA 2A F2 8A         ld hl,(Puntero_mov)
 122+ 99ED 23               inc hl
 123+ 99EE 23               inc hl
 124+ 99EF 23               inc hl
 125+ 99F0 22 F2 8A         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 99F3              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 99F3 7E               ld a,(hl)
 128+ 99F4 32 FB 8A         ld (Cola_de_desplazamiento),a
 129+ 99F7
 130+ 99F7 C3 9F 99         jp Cola
 131+ 99FA
 132+ 99FA CD 37 9A     2 call Inicia_Puntero_mov
 133+ 99FD
 134+ 99FD 21 E2 8A         ld hl,Ctrl_2
 135+ 9A00 CB 96            res 2,(hl)
 136+ 9A02
 137+ 9A02 C3 6F 99         jp Movimiento
 138+ 9A05
 139+ 9A05              Siguiente_desplazamiento
 140+ 9A05
 141+ 9A05              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9A05              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9A05
 144+ 9A05 21 E2 8A         ld hl,Ctrl_2
 145+ 9A08 CB 96            res 2,(hl)
 146+ 9A0A
 147+ 9A0A 2A F2 8A         ld hl,(Puntero_mov)
 148+ 9A0D 23               inc hl
 149+ 9A0E 23               inc hl
 150+ 9A0F 22 F2 8A         ld (Puntero_mov),hl
 151+ 9A12
 152+ 9A12 7E               ld a,(hl)
 153+ 9A13 A7               and a
 154+ 9A14 CC 96 9A         call z,Incrementa_Puntero_indice_mov
 155+ 9A17 CA D8 99         jp z,Reinicia_el_movimiento
 156+ 9A1A
 157+ 9A1A C9               ret
 158+ 9A1B
 159+ 9A1B              ; Subrutinas -----------------------------------------
 160+ 9A1B              ; ---------- --------- --------- ---------- ----------
 161+ 9A1B              ;
 162+ 9A1B              ;   24/07/23
 163+ 9A1B              ;
 164+ 9A1B              ;   Fijamos_bucle
 165+ 9A1B              ;
 166+ 9A1B              ;
 167+ 9A1B
 168+ 9A1B              Fijamos_bucle
 169+ 9A1B
 170+ 9A1B 3A F6 8A         ld a,(Incrementa_puntero)
 171+ 9A1E 3C               inc a
 172+ 9A1F 32 F7 8A         ld (Incrementa_puntero_backup),a
 173+ 9A22
 174+ 9A22 CD 96 9A         call Incrementa_Puntero_indice_mov
 175+ 9A25 2A F0 8A         ld hl,(Puntero_indice_mov)
 176+ 9A28 22 F4 8A         ld (Puntero_indice_mov_bucle),hl
 177+ 9A2B C9               ret
 178+ 9A2C
 179+ 9A2C              ; ---------- --------- --------- ---------- ----------
 180+ 9A2C              ;
 181+ 9A2C              ;   07/7/23
 182+ 9A2C              ;
 183+ 9A2C              ;   Inicia_Repetimos_movimiento
 184+ 9A2C              ;
 185+ 9A2C              ;
 186+ 9A2C
 187+ 9A2C              Inicia_Repetimos_movimiento
 188+ 9A2C
 189+ 9A2C              ; Iniciamos (Repetimos_movimiento).
 190+ 9A2C
 191+ 9A2C DD 2A F2 8A      ld ix,(Puntero_mov)
 192+ 9A30 DD 7E 02         ld a,(ix+2)
 193+ 9A33 32 FA 8A         ld (Repetimos_movimiento),a
 194+ 9A36
 195+ 9A36 C9               ret
 196+ 9A37
 197+ 9A37              ; ---------- --------- --------- ---------- ----------
 198+ 9A37              ;
 199+ 9A37              ;   26/6/23
 200+ 9A37              ;
 201+ 9A37              ;   Inicia_Puntero_mov
 202+ 9A37              ;
 203+ 9A37              ;
 204+ 9A37
 205+ 9A37 2A F0 8A     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9A3A CD F1 8C         call Extrae_address
 207+ 9A3D 22 F2 8A         ld (Puntero_mov),hl
 208+ 9A40 C9               ret
 209+ 9A41
 210+ 9A41              ; ---------- --------- --------- ---------- ----------
 211+ 9A41              ;
 212+ 9A41              ;   27/06/23
 213+ 9A41              ;
 214+ 9A41              ;   Aplica_movimiento.
 215+ 9A41
 216+ 9A41              Aplica_desplazamiento
 217+ 9A41
 218+ 9A41              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9A41
 220+ 9A41 2A F2 8A         ld hl, (Puntero_mov)
 221+ 9A44
 222+ 9A44 7E               ld a,(hl)
 223+ 9A45 E6 F0            and $f0
 224+ 9A47 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9A48
 226+ 9A48 CB 7E            bit 7,(hl)
 227+ 9A4A 28 03            jr z,1F
 228+ 9A4C CD 56 96         call Mov_up
 229+ 9A4F 2A F2 8A     1 ld hl, (Puntero_mov)
 230+ 9A52 CB 76            bit 6,(hl)
 231+ 9A54 28 03            jr z,2F
 232+ 9A56 CD 1D 96         call Mov_down
 233+ 9A59
 234+ 9A59              ; Se ha aplicado reinicio ???
 235+ 9A59              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A59
 237+ 9A59              ;    ld a,(Ctrl_3)
 238+ 9A59              ;    bit 1,a
 239+ 9A59              ;    ret nz
 240+ 9A59
 241+ 9A59 2A F2 8A     2 ld hl, (Puntero_mov)
 242+ 9A5C CB 6E            bit 5,(hl)
 243+ 9A5E 28 03            jr z,3F
 244+ 9A60 CD BC 97         call Mov_left
 245+ 9A63 2A F2 8A     3 ld hl, (Puntero_mov)
 246+ 9A66 CB 66            bit 4,(hl)
 247+ 9A68 C8               ret z
 248+ 9A69 CD 99 96         call Mov_right
 249+ 9A6C C9               ret
 250+ 9A6D
 251+ 9A6D              ; ---------- --------- --------- ---------- ----------
 252+ 9A6D              ;
 253+ 9A6D              ;   26/06/23
 254+ 9A6D              ;
 255+ 9A6D              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A6D
 257+ 9A6D              Ajusta_velocidad_desplazamiento
 258+ 9A6D
 259+ 9A6D              ; 1er byte de la cadena de movimiento.
 260+ 9A6D              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A6D
 262+ 9A6D CD 8B 9A         call Extrae_nibble_alto
 263+ 9A70
 264+ 9A70 32 E6 8A         ld (Vel_up),a
 265+ 9A73 79               ld a,c
 266+ 9A74 E6 0F            and $0f
 267+ 9A76 32 E7 8A         ld (Vel_down),a
 268+ 9A79
 269+ 9A79              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A79              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A79
 272+ 9A79 23               inc hl
 273+ 9A7A CD 8B 9A         call Extrae_nibble_alto
 274+ 9A7D
 275+ 9A7D 32 E4 8A         ld (Vel_left),a
 276+ 9A80 79               ld a,c
 277+ 9A81 E6 0F            and $0f
 278+ 9A83 32 E5 8A         ld (Vel_right),a
 279+ 9A86
 280+ 9A86              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A86
 282+ 9A86 23               inc hl
 283+ 9A87 22 F2 8A         ld (Puntero_mov),hl
 284+ 9A8A C9               ret
 285+ 9A8B
 286+ 9A8B 06 04        Extrae_nibble_alto ld b,4
 287+ 9A8D 7E               ld a,(hl)
 288+ 9A8E 4F               ld c,a
 289+ 9A8F E6 F0            and $f0
 290+ 9A91 CB 3F        1 srl a
 291+ 9A93 10 FC            djnz 1B
 292+ 9A95 C9               ret
 293+ 9A96
 294+ 9A96              ; ---------- --------- --------- ---------- ----------
 295+ 9A96              ;
 296+ 9A96              ;   5/7/23
 297+ 9A96              ;
 298+ 9A96              ;   Incrementa_Puntero_indice_mov
 299+ 9A96
 300+ 9A96              Incrementa_Puntero_indice_mov
 301+ 9A96
 302+ 9A96 21 F6 8A         ld hl,Incrementa_puntero
 303+ 9A99 34               inc (hl)
 304+ 9A9A
 305+ 9A9A 2A F0 8A         ld hl,(Puntero_indice_mov)
 306+ 9A9D 01 02 00         ld bc,2
 307+ 9AA0 A7               and a
 308+ 9AA1 09               add hl,bc
 309+ 9AA2 22 F0 8A         ld (Puntero_indice_mov),hl
 310+ 9AA5
 311+ 9AA5 7E               ld a,(hl)
 312+ 9AA6 A7               and a
 313+ 9AA7
 314+ 9AA7              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9AA7
 316+ 9AA7              ;    jr z,$
 317+ 9AA7
 318+ 9AA7              ;! Reinicia el Patrón de movimiento.
 319+ 9AA7
 320+ 9AA7 CC AC 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9AAA
 322+ 9AAA AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9AAB
 324+ 9AAB C9               ret
 325+ 9AAC
 326+ 9AAC              ; ---------- --------- --------- ---------- ----------
 327+ 9AAC              ;
 328+ 9AAC              ;   15/01/24
 329+ 9AAC              ;
 330+ 9AAC              ;   Inicializa_Puntero_indice_mov
 331+ 9AAC
 332+ 9AAC              Inicializa_Puntero_indice_mov_2
 333+ 9AAC
 334+ 9AAC              ; Existe etiqueta de bucle principal???
 335+ 9AAC
 336+ 9AAC 2A F4 8A         ld hl,(Puntero_indice_mov_bucle)
 337+ 9AAF 24               inc h
 338+ 9AB0 25               dec h
 339+ 9AB1 28 05            jr z,2F
 340+ 9AB3
 341+ 9AB3 22 F0 8A         ld (Puntero_indice_mov),hl
 342+ 9AB6 18 14            jr 3F
 343+ 9AB8
 344+ 9AB8              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9AB8
 346+ 9AB8 3A F6 8A     2 ld a,(Incrementa_puntero)
 347+ 9ABB 47               ld b,a
 348+ 9ABC
 349+ 9ABC 2A F0 8A         ld hl,(Puntero_indice_mov)
 350+ 9ABF 2B           1 dec hl
 351+ 9AC0 2B               dec hl
 352+ 9AC1 10 FC            djnz 1B
 353+ 9AC3 22 F0 8A         ld (Puntero_indice_mov),hl
 354+ 9AC6
 355+ 9AC6 AF               xor a
 356+ 9AC7 32 F6 8A         ld (Incrementa_puntero),a
 357+ 9ACA 18 06            jr 4F
 358+ 9ACC
 359+ 9ACC 3A F7 8A     3 ld a,(Incrementa_puntero_backup)
 360+ 9ACF 32 F6 8A         ld (Incrementa_puntero),a
 361+ 9AD2 C9           4 ret
 362+ 9AD3
 363+ 9AD3              ; ----------------------------------------------------------------------
 364+ 9AD3              ;
 365+ 9AD3              ;   30/01/24
 366+ 9AD3              ;
 367+ 9AD3              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9AD3
 369+ 9AD3 3A BA 8A     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9AD6 CD 05 8F         call Calcula_salto_en_BC
 371+ 9AD9 21 E8 8A         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9ADC A7               and a
 373+ 9ADD ED 4A            adc hl,bc
 374+ 9ADF C9               ret
 375+ 9AE0
 376+ 9AE0              ; ----------------------------------------------------------------------
 377+ 9AE0              ;
 378+ 9AE0              ;   30/01/24
 379+ 9AE0              ;
 380+ 9AE0              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9AE0              ;
 382+ 9AE0              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9AE0
 384+ 9AE0 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9AE1 23               inc hl
 386+ 9AE2 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9AE3 69               ld l,c
 388+ 9AE4 60               ld h,b
 389+ 9AE5 22 DB 8A         ld (Contador_de_mov_masticados),hl
 390+ 9AE8 C9               ret
 391+ 9AE9
# file closed: Movimiento.asm
1845  9AE9              ;	include "Disparo.asm"
1846  9AE9              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9AE9              ; Relojes y temporizaciones.
   2+ 9AE9
   3+ 9AE9              ; ------------------------------------------------------
   4+ 9AE9              ;
   5+ 9AE9              ;	16/7/23
   6+ 9AE9              ;
   7+ 9AE9              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9AE9              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9AE9              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9AE9              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9AE9              ;
  12+ 9AE9              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9AE9              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9AE9
  15+ 9AE9              ; Disparo_entidad db 1
  16+ 9AE9              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9AE9              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9AE9
  19+ 9AE9              Habilita_disparos
  20+ 9AE9
  21+ 9AE9 7E           	ld a,(hl)
  22+ 9AEA A7           	and a
  23+ 9AEB C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9AEC
  25+ 9AEC EB           	ex de,hl
  26+ 9AED
  27+ 9AED 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9AEE C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9AEF
  30+ 9AEF              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9AEF
  32+ 9AEF 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9AF0 7E           	ld a,(hl)
  34+ 9AF1 23           	inc hl
  35+ 9AF2 77           	ld (hl),a
  36+ 9AF3
  37+ 9AF3 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9AF4 3E 01        	ld a,1
  39+ 9AF6 77           	ld (hl),a
  40+ 9AF7 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1847  9AF8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9AF8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9AF8              ;
   3+ 9AF8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9AF8              ;
   5+ 9AF8              ; *****************************************************************************************************************************************************************************************
   6+ 9AF8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9AF8
   8+ 9AF8 7C           calcula_tercio ld a,h
   9+ 9AF9 E6 18        	and $18
  10+ 9AFB CB 2F        	sra a
  11+ 9AFD CB 2F        	sra a
  12+ 9AFF CB 2F        	sra a
  13+ 9B01 C9           	ret
  14+ 9B02
# file closed: calcula_tercio.asm
1848  9B02              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9B02              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9B02              ;
   3+ 9B02              ;
   4+ 9B02              ;	CLS.
   5+ 9B02              ;
   6+ 9B02              ;	Limpia la pantalla y define sus atributos.
   7+ 9B02              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9B02              ;
   9+ 9B02              ;	COLORES: 0 ..... NEGRO
  10+ 9B02              ;    		 1 ..... AZUL
  11+ 9B02              ; 			 2 ..... ROJO
  12+ 9B02              ;			 3 ..... MAGENTA
  13+ 9B02              ; 			 4 ..... VERDE
  14+ 9B02              ; 			 5 ..... CIAN
  15+ 9B02              ;			 6 ..... AMARILLO
  16+ 9B02              ; 			 7 ..... BLANCO
  17+ 9B02              ;
  18+ 9B02              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9B02              ;
  20+ 9B02              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9B02
  22+ 9B02
  23+ 9B02 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9B05 11 01 40     	LD DE,$4001
  25+ 9B08 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9B0B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9B0D ED B0        	LDIR
  28+ 9B0F 01 FF 02     	LD BC,767
  29+ 9B12 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9B13 ED B0        	LDIR
  31+ 9B15 C9           	ret
  32+ 9B16
# file closed: Cls.asm
1849  9B16              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B16              ; ------------------------------------------------------------------------
   2+ 9B16              ;
   3+ 9B16              ;	30/1/24
   4+ 9B16              ;
   5+ 9B16              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B16              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B16              ;
   8+ 9B16              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B16              ;
  10+ 9B16              ;	Modifica: A,BC y DE.
  11+ 9B16
  12+ 9B16 7D           Genera_coordenadas ld a,l
  13+ 9B17 E6 1F        	and $1f
  14+ 9B19 32 C1 8A     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B1C
  16+ 9B1C 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B1D FE 40        	cp $40
  18+ 9B1F 38 1C        	jr c,4F
  19+ 9B21
  20+ 9B21 CD F8 9A     	call calcula_tercio
  21+ 9B24 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9B25
  23+ 9B25 1E 00        	ld e,0
  24+ 9B27 7D           	ld a,l
  25+ 9B28 E6 E0        	and $e0
  26+ 9B2A 28 01        	jr z,1F
  27+ 9B2C 04           	inc b
  28+ 9B2D
  29+ 9B2D 04           1 inc b
  30+ 9B2E 05           	dec b
  31+ 9B2F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9B31              ;														; _ , salimos.
  33+ 9B31 1C           3 inc e
  34+ 9B32 D6 20        	sub 32
  35+ 9B34 20 FB        	jr nz,3B
  36+ 9B36 10 F5        	djnz 1B
  37+ 9B38
  38+ 9B38 7B           2 ld a,e
  39+ 9B39 32 C2 8A     	ld (Coordenada_y),a
  40+ 9B3C C9           	ret
  41+ 9B3D
  42+ 9B3D AF           4 xor a
  43+ 9B3E 32 C2 8A     	ld (Coordenada_y),a
  44+ 9B41 C9           	ret
  45+ 9B42
  46+ 9B42              ; ------------------------------------------------------------------------
  47+ 9B42              ;	28/05/23
  48+ 9B42              ;
  49+ 9B42              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9B42              ;	Fila superior "0", Columna izquierda "0".
  51+ 9B42              ;
  52+ 9B42              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9B42              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9B42              ;
  55+ 9B42              ;		DE="$120d"
  56+ 9B42              ;
  57+ 9B42              ;		D, (Coordenada_X), Columnas, $12
  58+ 9B42              ;		E, (Coordenada_y), Filas, $0d
  59+ 9B42              ;
  60+ 9B42              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9B42
  62+ 9B42              ;	Modifica: A,BC y DE.
  63+ 9B42
  64+ 9B42
  65+ 9B42              Genera_coordenadas_disparo
  66+ 9B42
  67+ 9B42              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9B42
  69+ 9B42 7D           	ld a,l
  70+ 9B43 E6 1F        	and $1f
  71+ 9B45 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9B46 CD F8 9A     	call calcula_tercio
  73+ 9B49 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9B4A 1E 00        	ld e,0
  75+ 9B4C 7D           	ld a,l
  76+ 9B4D E6 E0        	and $e0
  77+ 9B4F 28 01        	jr z,1F
  78+ 9B51 04           	inc b
  79+ 9B52 1C           1 inc e
  80+ 9B53 D6 20        	sub 32
  81+ 9B55 20 FB        	jr nz,1B
  82+ 9B57 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9B59 C9           	ret
  84+ 9B5A
# file closed: Genera_coordenadas.asm
1850  9B5A              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9B5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9B5A              ;
   3+ 9B5A              ;	11/03/24
   4+ 9B5A              ;
   5+ 9B5A              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9B5A              ;   DE contiene Puntero_objeto.
   7+ 9B5A              ;   IX contiene el Puntero de impresión.
   8+ 9B5A
   9+ 9B5A              Genera_datos_de_impresion
  10+ 9B5A
  11+ 9B5A ED 73 0D 8B      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9B5E 31 D9 8A         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 9B61 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 9B63
  15+ 9B63 2A 1B 8B         ld hl,(Scanlines_album_SP)
  16+ 9B66
  17+ 9B66 3E 05            ld a,5
  18+ 9B68 85               add l
  19+ 9B69 6F               ld l,a
  20+ 9B6A
  21+ 9B6A F9               ld sp,hl
  22+ 9B6B 22 1B 8B         ld (Scanlines_album_SP),hl
  23+ 9B6E
  24+ 9B6E 21 00 00         ld hl,0
  25+ 9B71
  26+ 9B71 DD E5            push ix
  27+ 9B73 3B               dec sp
  28+ 9B74 ED 7A            adc hl,sp
  29+ 9B76 D5               push de
  30+ 9B77
  31+ 9B77              ; Recuperamos SP.
  32+ 9B77
  33+ 9B77 ED 7B 0D 8B      ld sp,(Stack)
  34+ 9B7B
  35+ 9B7B E5               push hl
  36+ 9B7C F1               pop af
  37+ 9B7D 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 9B7E
  39+ 9B7E              ; Tenemos el encabezado listo.
  40+ 9B7E              ; Preparamos registros para generar los scanlines.
  41+ 9B7E
  42+ 9B7E DD E5            push ix
  43+ 9B80 E1               pop hl                                          ; 1er scanline en HL.
  44+ 9B81
  45+ 9B81 ED 5B 1B 8B      ld de,(Scanlines_album_SP)
  46+ 9B85
  47+ 9B85              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 9B85              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 9B85
  50+ 9B85 7C               ld a,h
  51+ 9B86 FE 50            cp $50
  52+ 9B88 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 9B8A
  54+ 9B8A 20 05            jr nz,2F
  55+ 9B8C
  56+ 9B8C 7D               ld a,l
  57+ 9B8D FE E0            cp $e0
  58+ 9B8F 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 9B91
  60+ 9B91 7D           2 ld a,l
  61+ 9B92 FE C0            cp $c0
  62+ 9B94 D2 26 9C         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 9B97
  64+ 9B97              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 9B97
  66+ 9B97 CD 7F 92         call NextScan
  67+ 9B9A EB               ex de,hl
  68+ 9B9B
  69+ 9B9B 73               ld (hl),e
  70+ 9B9C 2C               inc l
  71+ 9B9D 72               ld (hl),d
  72+ 9B9E 2C               inc l
  73+ 9B9F
  74+ 9B9F EB               ex de,hl
  75+ 9BA0
  76+ 9BA0 CD 7F 92         call NextScan
  77+ 9BA3 EB               ex de,hl
  78+ 9BA4
  79+ 9BA4 73               ld (hl),e
  80+ 9BA5 2C               inc l
  81+ 9BA6 72               ld (hl),d
  82+ 9BA7 2C               inc l
  83+ 9BA8
  84+ 9BA8 EB               ex de,hl
  85+ 9BA9
  86+ 9BA9 CD 7F 92         call NextScan
  87+ 9BAC EB               ex de,hl
  88+ 9BAD
  89+ 9BAD 73               ld (hl),e
  90+ 9BAE 2C               inc l
  91+ 9BAF 72               ld (hl),d
  92+ 9BB0 2C               inc l
  93+ 9BB1
  94+ 9BB1 EB               ex de,hl
  95+ 9BB2
  96+ 9BB2 CD 7F 92         call NextScan
  97+ 9BB5 EB               ex de,hl
  98+ 9BB6
  99+ 9BB6 73               ld (hl),e
 100+ 9BB7 2C               inc l
 101+ 9BB8 72               ld (hl),d
 102+ 9BB9 2C               inc l
 103+ 9BBA
 104+ 9BBA EB               ex de,hl
 105+ 9BBB
 106+ 9BBB CD 7F 92         call NextScan
 107+ 9BBE EB               ex de,hl
 108+ 9BBF
 109+ 9BBF 73               ld (hl),e
 110+ 9BC0 2C               inc l
 111+ 9BC1 72               ld (hl),d
 112+ 9BC2 2C               inc l
 113+ 9BC3
 114+ 9BC3 EB               ex de,hl
 115+ 9BC4
 116+ 9BC4 CD 7F 92         call NextScan
 117+ 9BC7 EB               ex de,hl
 118+ 9BC8
 119+ 9BC8 73               ld (hl),e
 120+ 9BC9 2C               inc l
 121+ 9BCA 72               ld (hl),d
 122+ 9BCB 2C               inc l
 123+ 9BCC
 124+ 9BCC EB               ex de,hl
 125+ 9BCD
 126+ 9BCD CD 7F 92         call NextScan
 127+ 9BD0 EB               ex de,hl
 128+ 9BD1
 129+ 9BD1 73               ld (hl),e
 130+ 9BD2 2C               inc l
 131+ 9BD3 72               ld (hl),d
 132+ 9BD4 2C               inc l
 133+ 9BD5
 134+ 9BD5 EB               ex de,hl
 135+ 9BD6
 136+ 9BD6 CD 7F 92         call NextScan
 137+ 9BD9 EB               ex de,hl
 138+ 9BDA
 139+ 9BDA 73               ld (hl),e
 140+ 9BDB 2C               inc l
 141+ 9BDC 72               ld (hl),d
 142+ 9BDD 2C               inc l
 143+ 9BDE
 144+ 9BDE EB               ex de,hl
 145+ 9BDF
 146+ 9BDF CD 7F 92         call NextScan
 147+ 9BE2 EB               ex de,hl
 148+ 9BE3
 149+ 9BE3 73               ld (hl),e
 150+ 9BE4 2C               inc l
 151+ 9BE5 72               ld (hl),d
 152+ 9BE6 2C               inc l
 153+ 9BE7
 154+ 9BE7 EB               ex de,hl
 155+ 9BE8
 156+ 9BE8 CD 7F 92         call NextScan
 157+ 9BEB EB               ex de,hl
 158+ 9BEC
 159+ 9BEC 73               ld (hl),e
 160+ 9BED 2C               inc l
 161+ 9BEE 72               ld (hl),d
 162+ 9BEF 2C               inc l
 163+ 9BF0
 164+ 9BF0 EB               ex de,hl
 165+ 9BF1
 166+ 9BF1 CD 7F 92         call NextScan
 167+ 9BF4 EB               ex de,hl
 168+ 9BF5
 169+ 9BF5 73               ld (hl),e
 170+ 9BF6 2C               inc l
 171+ 9BF7 72               ld (hl),d
 172+ 9BF8 2C               inc l
 173+ 9BF9
 174+ 9BF9 EB               ex de,hl
 175+ 9BFA
 176+ 9BFA CD 7F 92         call NextScan
 177+ 9BFD EB               ex de,hl
 178+ 9BFE
 179+ 9BFE 73               ld (hl),e
 180+ 9BFF 2C               inc l
 181+ 9C00 72               ld (hl),d
 182+ 9C01 2C               inc l
 183+ 9C02
 184+ 9C02 EB               ex de,hl
 185+ 9C03
 186+ 9C03 CD 7F 92         call NextScan
 187+ 9C06 EB               ex de,hl
 188+ 9C07
 189+ 9C07 73               ld (hl),e
 190+ 9C08 2C               inc l
 191+ 9C09 72               ld (hl),d
 192+ 9C0A 2C               inc l
 193+ 9C0B
 194+ 9C0B EB               ex de,hl
 195+ 9C0C
 196+ 9C0C CD 7F 92         call NextScan
 197+ 9C0F EB               ex de,hl
 198+ 9C10
 199+ 9C10 73               ld (hl),e
 200+ 9C11 2C               inc l
 201+ 9C12 72               ld (hl),d
 202+ 9C13 2C               inc l
 203+ 9C14
 204+ 9C14 EB               ex de,hl
 205+ 9C15
 206+ 9C15 CD 7F 92         call NextScan
 207+ 9C18 EB               ex de,hl
 208+ 9C19
 209+ 9C19 73               ld (hl),e
 210+ 9C1A 2C               inc l
 211+ 9C1B 72               ld (hl),d
 212+ 9C1C 2C               inc l
 213+ 9C1D
 214+ 9C1D              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 9C1D
 216+ 9C1D 22 1B 8B         ld (Scanlines_album_SP),hl
 217+ 9C20
 218+ 9C20              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 9C20
 220+ 9C20 08               ex af,af
 221+ 9C21
 222+ 9C21 F5               push af
 223+ 9C22 E1               pop hl
 224+ 9C23
 225+ 9C23 36 10            ld (hl),16
 226+ 9C25
 227+ 9C25 C9               ret
 228+ 9C26
 229+ 9C26              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 9C26
 231+ 9C26              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 9C26
 233+ 9C26 3E 57            ld a,$57
 234+ 9C28 94               sub h
 235+ 9C29 20 04            jr nz,4F
 236+ 9C2B
 237+ 9C2B 0E 01            ld c,1
 238+ 9C2D 18 1B            jr 5F
 239+ 9C2F
 240+ 9C2F 47           4 ld b,a
 241+ 9C30
 242+ 9C30 3E DF            ld a,$df
 243+ 9C32 BD               cp l
 244+ 9C33 38 04            jr c,1F
 245+ 9C35
 246+ 9C35 3E 08            ld a,8
 247+ 9C37 80               add b
 248+ 9C38 47               ld b,a
 249+ 9C39
 250+ 9C39              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 251+ 9C39              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 252+ 9C39
 253+ 9C39 48           1 ld c,b
 254+ 9C3A 0C               inc c
 255+ 9C3B
 256+ 9C3B CD 7F 92     3 call NextScan
 257+ 9C3E EB               ex de,hl
 258+ 9C3F
 259+ 9C3F 73               ld (hl),e
 260+ 9C40 2C               inc l
 261+ 9C41 72               ld (hl),d
 262+ 9C42 2C               inc l
 263+ 9C43
 264+ 9C43 EB               ex de,hl
 265+ 9C44
 266+ 9C44 10 F5            djnz 3B
 267+ 9C46
 268+ 9C46 ED 53 1B 8B      ld (Scanlines_album_SP),de
 269+ 9C4A
 270+ 9C4A 08           5 ex af,af
 271+ 9C4B F5               push af
 272+ 9C4C E1               pop hl
 273+ 9C4D
 274+ 9C4D 71               ld (hl),c
 275+ 9C4E
 276+ 9C4E C9               ret
 277+ 9C4F
 278+ 9C4F              ; -----------------------------------------------------------------------------
 279+ 9C4F              ;
 280+ 9C4F              ;   21/11/23
 281+ 9C4F
 282+ 9C4F              Limpia_y_reinicia_Scanlines_album
 283+ 9C4F
 284+ 9C4F              ;   Limpia Scanlines_album.
 285+ 9C4F
 286+ 9C4F 2A 1B 8B         ld hl,(Scanlines_album_SP)
 287+ 9C52 7D               ld a,l
 288+ 9C53 A7               and a
 289+ 9C54 C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 9C55
 291+ 9C55 47               ld b,a
 292+ 9C56 04               inc b
 293+ 9C57
 294+ 9C57 36 00        1 ld (hl),0
 295+ 9C59 2D               dec l
 296+ 9C5A 10 FB            djnz 1B
 297+ 9C5C
 298+ 9C5C              ;   Reinicializa (Scanlines_album_SP).
 299+ 9C5C
 300+ 9C5C 21 00 80         ld hl,Scanlines_album
 301+ 9C5F 22 1B 8B         ld (Scanlines_album_SP),hl
 302+ 9C62
 303+ 9C62 C9               ret
 304+ 9C63
 305+ 9C63              ; -----------------------------------------------------------------------------
 306+ 9C63              ;
 307+ 9C63              ;   11/03/24
 308+ 9C63              ;
 309+ 9C63
 310+ 9C63              Pinta_Sprites
 311+ 9C63
 312+ 9C63 2A 1B 8B         ld hl,(Scanlines_album_SP)
 313+ 9C66 CD F1 8C         call Extrae_address
 314+ 9C69
 315+ 9C69 24               inc h
 316+ 9C6A 25               dec h
 317+ 9C6B C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 318+ 9C6C
 319+ 9C6C ED 73 0D 8B      ld (Stack),sp
 320+ 9C70
 321+ 9C70 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 322+ 9C71              ;                                       ; DE se encuentra en los datos del sprite.
 323+ 9C71 2C               inc l
 324+ 9C72 2C               inc l
 325+ 9C73
 326+ 9C73 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 327+ 9C74
 328+ 9C74 2C               inc l
 329+ 9C75 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 330+ 9C76
 331+ 9C76              ;   Seleccionamos rutina de impresión:
 332+ 9C76
 333+ 9C76 3E 10            ld a,16
 334+ 9C78 B8               cp b
 335+ 9C79 C2 77 9D         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 336+ 9C7C
 337+ 9C7C              ;   Rutinas:
 338+ 9C7C
 339+ 9C7C              Pinta_rapido    ;   1520 t/states.
 340+ 9C7C
 341+ 9C7C E1               pop hl
 342+ 9C7D
 343+ 9C7D 1A               ld a,(de)
 344+ 9C7E AE               xor (hl)
 345+ 9C7F 77               ld (hl),a
 346+ 9C80 2C               inc l
 347+ 9C81 1C               inc e
 348+ 9C82 1A               ld a,(de)
 349+ 9C83 AE               xor (hl)
 350+ 9C84 77               ld (hl),a
 351+ 9C85 2C               inc l
 352+ 9C86 1C               inc e
 353+ 9C87 1A               ld a,(de)
 354+ 9C88 AE               xor (hl)
 355+ 9C89 77               ld (hl),a
 356+ 9C8A 13               inc de
 357+ 9C8B
 358+ 9C8B E1               pop hl
 359+ 9C8C
 360+ 9C8C 1A               ld a,(de)
 361+ 9C8D AE               xor (hl)
 362+ 9C8E 77               ld (hl),a
 363+ 9C8F 2C               inc l
 364+ 9C90 1C               inc e
 365+ 9C91 1A               ld a,(de)
 366+ 9C92 AE               xor (hl)
 367+ 9C93 77               ld (hl),a
 368+ 9C94 2C               inc l
 369+ 9C95 1C               inc e
 370+ 9C96 1A               ld a,(de)
 371+ 9C97 AE               xor (hl)
 372+ 9C98 77               ld (hl),a
 373+ 9C99 13               inc de
 374+ 9C9A
 375+ 9C9A E1               pop hl
 376+ 9C9B
 377+ 9C9B 1A               ld a,(de)
 378+ 9C9C AE               xor (hl)
 379+ 9C9D 77               ld (hl),a
 380+ 9C9E 2C               inc l
 381+ 9C9F 1C               inc e
 382+ 9CA0 1A               ld a,(de)
 383+ 9CA1 AE               xor (hl)
 384+ 9CA2 77               ld (hl),a
 385+ 9CA3 2C               inc l
 386+ 9CA4 1C               inc e
 387+ 9CA5 1A               ld a,(de)
 388+ 9CA6 AE               xor (hl)
 389+ 9CA7 77               ld (hl),a
 390+ 9CA8 13               inc de
 391+ 9CA9
 392+ 9CA9 E1               pop hl
 393+ 9CAA
 394+ 9CAA 1A               ld a,(de)
 395+ 9CAB AE               xor (hl)
 396+ 9CAC 77               ld (hl),a
 397+ 9CAD 2C               inc l
 398+ 9CAE 1C               inc e
 399+ 9CAF 1A               ld a,(de)
 400+ 9CB0 AE               xor (hl)
 401+ 9CB1 77               ld (hl),a
 402+ 9CB2 2C               inc l
 403+ 9CB3 1C               inc e
 404+ 9CB4 1A               ld a,(de)
 405+ 9CB5 AE               xor (hl)
 406+ 9CB6 77               ld (hl),a
 407+ 9CB7 13               inc de
 408+ 9CB8
 409+ 9CB8 E1               pop hl
 410+ 9CB9
 411+ 9CB9 1A               ld a,(de)
 412+ 9CBA AE               xor (hl)
 413+ 9CBB 77               ld (hl),a
 414+ 9CBC 2C               inc l
 415+ 9CBD 1C               inc e
 416+ 9CBE 1A               ld a,(de)
 417+ 9CBF AE               xor (hl)
 418+ 9CC0 77               ld (hl),a
 419+ 9CC1 2C               inc l
 420+ 9CC2 1C               inc e
 421+ 9CC3 1A               ld a,(de)
 422+ 9CC4 AE               xor (hl)
 423+ 9CC5 77               ld (hl),a
 424+ 9CC6 13               inc de
 425+ 9CC7
 426+ 9CC7 E1               pop hl
 427+ 9CC8
 428+ 9CC8 1A               ld a,(de)
 429+ 9CC9 AE               xor (hl)
 430+ 9CCA 77               ld (hl),a
 431+ 9CCB 2C               inc l
 432+ 9CCC 1C               inc e
 433+ 9CCD 1A               ld a,(de)
 434+ 9CCE AE               xor (hl)
 435+ 9CCF 77               ld (hl),a
 436+ 9CD0 2C               inc l
 437+ 9CD1 1C               inc e
 438+ 9CD2 1A               ld a,(de)
 439+ 9CD3 AE               xor (hl)
 440+ 9CD4 77               ld (hl),a
 441+ 9CD5 13               inc de
 442+ 9CD6
 443+ 9CD6 E1               pop hl
 444+ 9CD7
 445+ 9CD7 1A               ld a,(de)
 446+ 9CD8 AE               xor (hl)
 447+ 9CD9 77               ld (hl),a
 448+ 9CDA 2C               inc l
 449+ 9CDB 1C               inc e
 450+ 9CDC 1A               ld a,(de)
 451+ 9CDD AE               xor (hl)
 452+ 9CDE 77               ld (hl),a
 453+ 9CDF 2C               inc l
 454+ 9CE0 1C               inc e
 455+ 9CE1 1A               ld a,(de)
 456+ 9CE2 AE               xor (hl)
 457+ 9CE3 77               ld (hl),a
 458+ 9CE4 13               inc de
 459+ 9CE5
 460+ 9CE5 E1               pop hl
 461+ 9CE6
 462+ 9CE6 1A               ld a,(de)
 463+ 9CE7 AE               xor (hl)
 464+ 9CE8 77               ld (hl),a
 465+ 9CE9 2C               inc l
 466+ 9CEA 1C               inc e
 467+ 9CEB 1A               ld a,(de)
 468+ 9CEC AE               xor (hl)
 469+ 9CED 77               ld (hl),a
 470+ 9CEE 2C               inc l
 471+ 9CEF 1C               inc e
 472+ 9CF0 1A               ld a,(de)
 473+ 9CF1 AE               xor (hl)
 474+ 9CF2 77               ld (hl),a
 475+ 9CF3 13               inc de
 476+ 9CF4
 477+ 9CF4 E1               pop hl
 478+ 9CF5
 479+ 9CF5 1A               ld a,(de)
 480+ 9CF6 AE               xor (hl)
 481+ 9CF7 77               ld (hl),a
 482+ 9CF8 2C               inc l
 483+ 9CF9 1C               inc e
 484+ 9CFA 1A               ld a,(de)
 485+ 9CFB AE               xor (hl)
 486+ 9CFC 77               ld (hl),a
 487+ 9CFD 2C               inc l
 488+ 9CFE 1C               inc e
 489+ 9CFF 1A               ld a,(de)
 490+ 9D00 AE               xor (hl)
 491+ 9D01 77               ld (hl),a
 492+ 9D02 13               inc de
 493+ 9D03
 494+ 9D03 E1               pop hl
 495+ 9D04
 496+ 9D04 1A               ld a,(de)
 497+ 9D05 AE               xor (hl)
 498+ 9D06 77               ld (hl),a
 499+ 9D07 2C               inc l
 500+ 9D08 1C               inc e
 501+ 9D09 1A               ld a,(de)
 502+ 9D0A AE               xor (hl)
 503+ 9D0B 77               ld (hl),a
 504+ 9D0C 2C               inc l
 505+ 9D0D 1C               inc e
 506+ 9D0E 1A               ld a,(de)
 507+ 9D0F AE               xor (hl)
 508+ 9D10 77               ld (hl),a
 509+ 9D11 13               inc de
 510+ 9D12
 511+ 9D12 E1               pop hl
 512+ 9D13
 513+ 9D13 1A               ld a,(de)
 514+ 9D14 AE               xor (hl)
 515+ 9D15 77               ld (hl),a
 516+ 9D16 2C               inc l
 517+ 9D17 1C               inc e
 518+ 9D18 1A               ld a,(de)
 519+ 9D19 AE               xor (hl)
 520+ 9D1A 77               ld (hl),a
 521+ 9D1B 2C               inc l
 522+ 9D1C 1C               inc e
 523+ 9D1D 1A               ld a,(de)
 524+ 9D1E AE               xor (hl)
 525+ 9D1F 77               ld (hl),a
 526+ 9D20 13               inc de
 527+ 9D21
 528+ 9D21 E1               pop hl
 529+ 9D22
 530+ 9D22 1A               ld a,(de)
 531+ 9D23 AE               xor (hl)
 532+ 9D24 77               ld (hl),a
 533+ 9D25 2C               inc l
 534+ 9D26 1C               inc e
 535+ 9D27 1A               ld a,(de)
 536+ 9D28 AE               xor (hl)
 537+ 9D29 77               ld (hl),a
 538+ 9D2A 2C               inc l
 539+ 9D2B 1C               inc e
 540+ 9D2C 1A               ld a,(de)
 541+ 9D2D AE               xor (hl)
 542+ 9D2E 77               ld (hl),a
 543+ 9D2F 13               inc de
 544+ 9D30
 545+ 9D30 E1               pop hl
 546+ 9D31
 547+ 9D31 1A               ld a,(de)
 548+ 9D32 AE               xor (hl)
 549+ 9D33 77               ld (hl),a
 550+ 9D34 2C               inc l
 551+ 9D35 1C               inc e
 552+ 9D36 1A               ld a,(de)
 553+ 9D37 AE               xor (hl)
 554+ 9D38 77               ld (hl),a
 555+ 9D39 2C               inc l
 556+ 9D3A 1C               inc e
 557+ 9D3B 1A               ld a,(de)
 558+ 9D3C AE               xor (hl)
 559+ 9D3D 77               ld (hl),a
 560+ 9D3E 13               inc de
 561+ 9D3F
 562+ 9D3F E1               pop hl
 563+ 9D40
 564+ 9D40 1A               ld a,(de)
 565+ 9D41 AE               xor (hl)
 566+ 9D42 77               ld (hl),a
 567+ 9D43 2C               inc l
 568+ 9D44 1C               inc e
 569+ 9D45 1A               ld a,(de)
 570+ 9D46 AE               xor (hl)
 571+ 9D47 77               ld (hl),a
 572+ 9D48 2C               inc l
 573+ 9D49 1C               inc e
 574+ 9D4A 1A               ld a,(de)
 575+ 9D4B AE               xor (hl)
 576+ 9D4C 77               ld (hl),a
 577+ 9D4D 13               inc de
 578+ 9D4E
 579+ 9D4E E1               pop hl
 580+ 9D4F
 581+ 9D4F 1A               ld a,(de)
 582+ 9D50 AE               xor (hl)
 583+ 9D51 77               ld (hl),a
 584+ 9D52 2C               inc l
 585+ 9D53 1C               inc e
 586+ 9D54 1A               ld a,(de)
 587+ 9D55 AE               xor (hl)
 588+ 9D56 77               ld (hl),a
 589+ 9D57 2C               inc l
 590+ 9D58 1C               inc e
 591+ 9D59 1A               ld a,(de)
 592+ 9D5A AE               xor (hl)
 593+ 9D5B 77               ld (hl),a
 594+ 9D5C 13               inc de
 595+ 9D5D
 596+ 9D5D E1               pop hl
 597+ 9D5E
 598+ 9D5E 1A               ld a,(de)
 599+ 9D5F AE               xor (hl)
 600+ 9D60 77               ld (hl),a
 601+ 9D61 2C               inc l
 602+ 9D62 1C               inc e
 603+ 9D63 1A               ld a,(de)
 604+ 9D64 AE               xor (hl)
 605+ 9D65 77               ld (hl),a
 606+ 9D66 2C               inc l
 607+ 9D67 1C               inc e
 608+ 9D68 1A               ld a,(de)
 609+ 9D69 AE               xor (hl)
 610+ 9D6A 77               ld (hl),a
 611+ 9D6B 13               inc de
 612+ 9D6C
 613+ 9D6C ED 73 1B 8B  2 ld (Scanlines_album_SP),sp
 614+ 9D70 ED 7B 0D 8B      ld sp,(Stack)
 615+ 9D74 C3 63 9C         jp Pinta_Sprites
 616+ 9D77
 617+ 9D77              Pinta_lento
 618+ 9D77
 619+ 9D77 E1           1 pop hl
 620+ 9D78
 621+ 9D78 1A               ld a,(de)
 622+ 9D79 AE               xor (hl)
 623+ 9D7A 77               ld (hl),a
 624+ 9D7B 2C               inc l
 625+ 9D7C 1C               inc e
 626+ 9D7D 1A               ld a,(de)
 627+ 9D7E AE               xor (hl)
 628+ 9D7F 77               ld (hl),a
 629+ 9D80 2C               inc l
 630+ 9D81 1C               inc e
 631+ 9D82 1A               ld a,(de)
 632+ 9D83 AE               xor (hl)
 633+ 9D84 77               ld (hl),a
 634+ 9D85 13               inc de
 635+ 9D86
 636+ 9D86 10 EF            djnz 1B
 637+ 9D88
 638+ 9D88 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1851  9D8A
1852  9D8A              	SAVESNA "Pruebas.sna", START
1853  9D8A
1854  9D8A
1855  9D8A
1856  9D8A
# file closed: Banco_de_pruebas.asm
