# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 52 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC 5E 48        	defw $485e                                      ; (Posicion_inicio).
 203+ 84FE 02           	db 2											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 06 97 00 00  	defw Indice_mov_Izquierda_y_derecha,0			; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 0C 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 0A 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 1A 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 03           Numero_de_entidades db 3								; Nº de entidades en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ;---------------------------------------------------------------------------------------------------------------
 191  85E7
 192  85E7              ; Gestión de Disparos.
 193  85E7
 194  85E7 00           Numero_de_disparotes db 0
 195  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 196  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 197  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 198  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 199  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 200  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 201  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 202  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 203  85EF              ;														; _produzca colisión.
 204  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 205  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 206  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F7
 211  85F7              ;---------------------------------------------------------------------------------------------------------------
 212  85F7
 213  85F7              ; Relojes y temporizaciones.
 214  85F7
 215  85F7 01           Habilita_disparo_Amadeus db 1
 216  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 217  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 218  85FA
 219  85FA 01           Habilita_disparo_entidad db 1
 220  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 221  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 222  85FD
 223  85FD              ;---------------------------------------------------------------------------------------------------------------
 224  85FD
 225  85FD              ; Gestión de FRAMES.
 226  85FD
 227  85FD 00           Switch db 0
 228  85FE
 229  85FE              ; Variables de Raster y localización en pantalla.
 230  85FE
 231  85FE 00 FF        Temp_Raster defw $ff00
 232  8600
 233  8600              ; Rutina principal *************************************************************************************************************************************************************************
 234  8600              ;
 235  8600              ;	14/11/22
 236  8600
 237  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 238  8603
 239  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 240  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 241  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 242  8609 F3           	DI
 243  860A
 244  860A 3E 07        	ld a,%00000111
 245  860C CD 2E 93     	call Cls
 246  860F
 247  860F              ;	call Pinta_FILAS
 248  860F
 249  860F CD DE 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 250  8612
 251  8612 21 DD 85     	ld hl,Numero_de_entidades
 252  8615 46           	ld b,(hl)
 253  8616 04           	inc b
 254  8617 05           	dec b
 255  8618 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 256  861A
 257  861A CD B7 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 258  861D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 259  861D
 260  861D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 261  861D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 262  861D              ;	Pintamos el resto de entidades:
 263  861D
 264  861D              ;	INICIA ENTIDADES !!!!!
 265  861D
 266  861D C5           1 push bc  												; Guardo el contador de entidades.
 267  861E CD 11 88      	call Inicia_Puntero_objeto
 268  8621 CD 7E 8D     	call Draw
 269  8624 CD A0 7F     	call Guarda_foto_registros
 270  8627 CD 59 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 271  862A C1           	pop bc
 272  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 273  862D
 274  862D              ; 	INICIA AMADEUS !!!!!
 275  862D
 276  862D CD AC 88     3 call Restore_Amadeus
 277  8630 CD 11 88     	call Inicia_Puntero_objeto
 278  8633 CD 7E 8D     	call Draw
 279  8636 CD A0 7F     	call Guarda_foto_registros
 280  8639 CD BE 88     	call Store_Amadeus
 281  863C
 282  863C              ; 	INICIA DISPAROS !!!!!
 283  863C
 284  863C CD CD 87     	call Inicia_Puntero_Disparo_Entidades
 285  863F CD D4 87     	call Inicia_Puntero_Disparo_Amadeus
 286  8642
 287  8642              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 288  8642
 289  8642 CD B7 87     	call Inicia_punteros_de_entidades
 290  8645 CD 9A 88     	call Restore_Primera_entidad
 291  8648
 292  8648 3A DD 85     	ld a,(Numero_de_entidades)
 293  864B 3C           	inc a
 294  864C 32 DE 85     	ld (Numero_de_malotes),a
 295  864F
 296  864F FB           2 ei
 297  8650 18 FD        	jr 2B
 298  8652
 299  8652              ; -----------------------------------------------------------------------------------
 300  8652
 301  8652              Frame
 302  8652
 303  8652              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 304  8652              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 305  8652
 306  8652              ; PINTAMOS.
 307  8652
 308  8652 3E 02            ld a,2
 309  8654 D3 FE            out ($fe),a
 310  8656 CD 82 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 311  8659 CD BB 90     	call Extrae_foto_disparos
 312  865C 3E 01            ld a,1
 313  865E D3 FE            out ($fe),a
 314  8660
 315  8660              ; ----------------------------------------------------------------------
 316  8660
 317  8660
 318  8660
 319  8660 3A D6 85     	ld a,(Ctrl_1)
 320  8663 CB 5F        	bit 3,a
 321  8665 20 FE        	jr nz,$
 322  8667
 323  8667
 324  8667
 325  8667              ; RELOJES.
 326  8667
 327  8667 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 328  866A 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 329  866D CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 330  8670
 331  8670 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 332  8673 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 333  8676 CD D5 7F     	call Habilita_disparos
 334  8679
 335  8679              ; COLISIONES.
 336  8679
 337  8679 CD 20 8D     	call Selector_de_impactos
 338  867C
 339  867C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 340  867C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 341  867C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 342  867C
 343  867C AF           	xor a
 344  867D 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 345  8680
 346  8680 CD B7 87     	call Inicia_punteros_de_entidades
 347  8683 CD 9A 88     	call Restore_Primera_entidad
 348  8686
 349  8686              ; ---------------------------------------------------------------------------------------
 350  8686
 351  8686 CD A0 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 352  8689 21 00 70     	ld hl,Album_de_fotos
 353  868C 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 354  868F              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 355  868F 3A DD 85         ld a,(Numero_de_entidades)
 356  8692 47               ld b,a
 357  8693 A7           	and a
 358  8694 28 59        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 359  8696
 360  8696              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 361  8696
 362  8696              ; Código que ejecutamos con cada entidad:
 363  8696
 364  8696              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 365  8696              ; _con las coordenadas de la entidad almacenada en DRAW.
 366  8696
 367  8696 3A B4 85     2 ld a,(Impacto)
 368  8699 A7           	and a
 369  869A 28 11        	jr z,8F
 370  869C
 371  869C CD 6E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar".
 372  869F CD D0 88     	call Borra_datos_entidad
 373  86A2 21 DD 85     	ld hl,Numero_de_entidades
 374  86A5 35           	dec (hl)
 375  86A6
 376  86A6              ; debugggg -----
 377  86A6 21 D6 85     	ld hl,Ctrl_1
 378  86A9 CB DE        	set 3,(hl)
 379  86AB              ; debugggg -----
 380  86AB
 381  86AB 18 71        	jr 9F
 382  86AD
 383  86AD
 384  86AD 3A D6 85     8 ld a,(Ctrl_1)
 385  86B0 CB 57        	bit 2,a
 386  86B2 28 1B        	jr z,7F
 387  86B4 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 388  86B7 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 389  86B8              ;														; E contiene la coordenada_X del disparo.
 390  86B8 2A A1 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 391  86BB              ;														; H Coordenado_y de la entidad.
 392  86BB A7           	and a
 393  86BC ED 52        	sbc hl,de
 394  86BE CD 57 8D     	call Determina_resultado_comparativa
 395  86C1 04           	inc b
 396  86C2 05           	dec b
 397  86C3 28 0A        	jr z,7F
 398  86C5
 399  86C5              ; ----- ----- -----
 400  86C5
 401  86C5 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 402  86C7 32 B4 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 403  86CA 21 D6 85     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 404  86CD CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 405  86CF
 406  86CF C5           7 push bc
 407  86D0
 408  86D0 CD 1F 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 409  86D3
 410  86D3 3A C9 85     	ld a,(Ctrl_0)
 411  86D6 CB 67        	bit 4,a
 412  86D8 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 413  86DA
 414  86DA              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 415  86DA              ; [[[
 416  86DA CD 29 89     	call Detecta_disparo_entidad
 417  86DD              ; ]]]
 418  86DD CD 7E 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 419  86E0
 420  86E0 21 C9 85     	ld hl,Ctrl_0
 421  86E3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 422  86E5 AF           	xor a
 423  86E6 32 CA 85     	ld (Obj_dibujado),a
 424  86E9
 425  86E9 CD 59 88     6 call Store_Restore_entidades
 426  86EC C1           	pop bc
 427  86ED 10 A7        	djnz 2B
 428  86EF
 429  86EF              ; Tras la gestión de las entidades, ... AMADEUS.
 430  86EF
 431  86EF CD AC 88     4 call Restore_Amadeus
 432  86F2
 433  86F2              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 434  86F2
 435  86F2 3A B4 85     	ld a,(Impacto)
 436  86F5 A7           	and a
 437  86F6 20 FE        	jr nz,$
 438  86F8
 439  86F8              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 440  86F8
 441  86F8 CD 4F 87     	call Mov_Amadeus
 442  86FB
 443  86FB 3A C9 85     	ld a,(Ctrl_0)
 444  86FE CB 67        	bit 4,a
 445  8700 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 446  8702
 447  8702 CD 7E 87     	call Guarda_foto_entidad_a_pintar
 448  8705
 449  8705 21 C9 85     3 ld hl,Ctrl_0
 450  8708 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 451  870A AF           	xor a
 452  870B 32 CA 85     	ld (Obj_dibujado),a
 453  870E
 454  870E CD BE 88     	call Store_Amadeus
 455  8711
 456  8711 CD BE 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 457  8714
 458  8714              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 459  8714
 460  8714 CD DB 87     	call Calcula_numero_de_malotes
 461  8717 CD F3 87     	call Calcula_numero_de_disparotes
 462  871A
 463  871A 3E 04        	ld a,4
 464  871C D3 FE        	out ($fe),a
 465  871E
 466  871E C9           9 ret
 467  871F
 468  871F              ; --------------------------------------------------------------------------------------------------------------
 469  871F              ;
 470  871F              ;	27/03/23
 471  871F
 472  871F              Mov_obj
 473  871F
 474  871F              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 475  871F
 476  871F AF           	xor a
 477  8720 32 CA 85     	ld (Obj_dibujado),a
 478  8723 32 C9 85     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 479  8726              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 480  8726              ; 														; _de la entidad.
 481  8726 CD 88 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 482  8729              ;														; Obj_dibujado="0".
 483  8729              ; Movemos Entidades malignas.
 484  8729
 485  8729 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 486  872C 24           	inc h                                               ; Salimos de la rutina.
 487  872D 25           	dec h
 488  872E C8           	ret z
 489  872F
 490  872F CD 1C 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 491  8732
 492  8732 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 493  8735 CB 67        	bit 4,a
 494  8737 C8           	ret z
 495  8738
 496  8738              ; Ha habido desplazamiento de la entidad maligna.
 497  8738              ; Ha llegado a zona de AMADEUS ???
 498  8738
 499  8738 3A A2 85     	ld a,(Coordenada_y)
 500  873B FE 14        	cp $14
 501  873D D4 EF 8A     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 502  8740              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 503  8740              ; ---------
 504  8740
 505  8740 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 506  8742 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 507  8745 CD 88 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 508  8748 CD 9F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 509  874B CD 6E 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 510  874E C9           	ret													; _de la misma.
 511  874F
 512  874F              ; --------------------------------------------------------------------------------------------------------------
 513  874F              ;
 514  874F              ;	29/1/23
 515  874F
 516  874F              Mov_Amadeus
 517  874F
 518  874F AF           	xor a
 519  8750 32 CA 85     	ld (Obj_dibujado),a
 520  8753 CD 88 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 521  8756              ;														; Obj_dibujado="0".
 522  8756              ; Movemos Amadeus.
 523  8756
 524  8756 CD F2 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 525  8759 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 526  875C CB 67        	bit 4,a
 527  875E C8           	ret z
 528  875F
 529  875F              ; ---------
 530  875F
 531  875F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 532  8761 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 533  8764 CD 88 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 534  8767 CD 9F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 535  876A CD 6E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 536  876D C9           	ret													; _de la nave.
 537  876E
 538  876E              ; --------------------------------------------------------------------------------------------------------------
 539  876E              ;
 540  876E              ;	31/01/23
 541  876E              ;
 542  876E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 543  876E
 544  876E              Guarda_foto_entidad_a_borrar
 545  876E
 546  876E CD 58 90     	call Prepara_draw
 547  8771 CD 92 8F     	call calcula_CColumnass
 548  8774 CD C9 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 549  8777 CD 1E 90     	call Define_rutina_de_impresion
 550  877A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 551  877D C9           	ret
 552  877E
 553  877E              ; --------------------------------------------------------------------------------------------------------------
 554  877E              ;
 555  877E              ;	31/01/23
 556  877E              ;
 557  877E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 558  877E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 559  877E
 560  877E              Guarda_foto_entidad_a_pintar
 561  877E
 562  877E CD AB 87     	call Repone_pintar
 563  8781 CD 7E 8D     	call Draw
 564  8784 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 565  8787 C9           	ret
 566  8788
 567  8788              ; --------------------------------------------------------------------------------------------------------------
 568  8788              ;
 569  8788              ;
 570  8788
 571  8788 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 572  878B 3A CA 85     	ld a,(Obj_dibujado)
 573  878E A7           	and a
 574  878F 28 05        	jr z,1F
 575  8791 11 BF 85     	ld de,Variables_de_pintado
 576  8794 18 03        	jr 2F
 577  8796 11 B5 85     1 ld de,Variables_de_borrado
 578  8799 01 08 00     2 ld bc,8
 579  879C ED B0        	ldir
 580  879E C9           	ret
 581  879F
 582  879F              ; --------------------------------------------------------------------------------------------------------------
 583  879F
 584  879F 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 585  87A2 11 9B 85     	ld de,Filas
 586  87A5 01 08 00     	ld bc,8
 587  87A8 ED B0        	ldir
 588  87AA C9           	ret
 589  87AB
 590  87AB 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 591  87AE 11 9B 85     	ld de,Filas
 592  87B1 01 08 00     	ld bc,8
 593  87B4 ED B0        	ldir
 594  87B6 C9           	ret
 595  87B7
 596  87B7              ; *************************************************************************************************************************************************************
 597  87B7              ;
 598  87B7              ; 8/1/23
 599  87B7              ;
 600  87B7              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 601  87B7              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 602  87B7              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 603  87B7
 604  87B7              ; Destruye HL y DE !!!!!
 605  87B7
 606  87B7              Inicia_punteros_de_entidades
 607  87B7
 608  87B7 21 68 84     	ld hl,Indice_de_entidades
 609  87BA CD 0B 88         call Extrae_address
 610  87BD 22 D7 85         ld (Puntero_store_entidades),hl
 611  87C0 21 6A 84     	ld hl,Indice_de_entidades+2
 612  87C3 22 DB 85     	ld (Indice_restore),hl
 613  87C6 CD 0B 88     	call Extrae_address
 614  87C9 22 D9 85     	ld (Puntero_restore_entidades),hl
 615  87CC C9               ret
 616  87CD
 617  87CD              ; *************************************************************************************************************************************************************
 618  87CD              ;
 619  87CD              ; 8/1/23
 620  87CD              ;
 621  87CD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 622  87CD
 623  87CD 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 624  87D0 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 625  87D3 C9           	ret
 626  87D4 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 627  87D7 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 628  87DA C9           	ret
 629  87DB
 630  87DB              ; -------------------------------------------------------------------------------------------------------------
 631  87DB              ;
 632  87DB              ; 28/2/23
 633  87DB              ;
 634  87DB
 635  87DB              Calcula_numero_de_malotes
 636  87DB
 637  87DB 21 00 70     	ld hl,Album_de_fotos
 638  87DE EB           	ex de,hl
 639  87DF 2A E3 85     	ld hl,(Stack_snapshot)
 640  87E2
 641  87E2 06 00        	ld b,0
 642  87E4 7D           	ld a,l
 643  87E5 93           	sub e
 644  87E6 28 07        	jr z,1F
 645  87E8
 646  87E8              ; Nº de malotes no es "0".
 647  87E8
 648  87E8 D6 06        2 sub 6
 649  87EA 04           	inc b
 650  87EB A7           	and a
 651  87EC 20 FA        	jr nz,2B
 652  87EE 78           	ld a,b
 653  87EF
 654  87EF 32 DE 85     1 ld (Numero_de_malotes),a
 655  87F2 C9           	ret
 656  87F3
 657  87F3              ; -------------------------------------------------------------------------------------------------------------
 658  87F3              ;
 659  87F3              ; 28/2/23
 660  87F3              ;
 661  87F3
 662  87F3              Calcula_numero_de_disparotes
 663  87F3
 664  87F3 21 60 70     	ld hl,Album_de_fotos_disparos
 665  87F6 EB           	ex de,hl
 666  87F7 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 667  87FA
 668  87FA 06 00        	ld b,0
 669  87FC 7D           	ld a,l
 670  87FD 93           	sub e
 671  87FE 28 07        	jr z,1F
 672  8800
 673  8800              ; Nº de malotes no es "0".
 674  8800
 675  8800 D6 06        2 sub 6
 676  8802 04           	inc b
 677  8803 A7           	and a
 678  8804 20 FA        	jr nz,2B
 679  8806 78           	ld a,b
 680  8807
 681  8807 32 E7 85     1 ld (Numero_de_disparotes),a
 682  880A C9           	ret
 683  880B              ; *************************************************************************************************************************************************************
 684  880B              ;
 685  880B              ; 20/10/22
 686  880B              ;
 687  880B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 688  880B              ;
 689  880B              ; Destruye el puntero y DE !!!!!
 690  880B
 691  880B 5E           Extrae_address ld e,(hl)
 692  880C 23           	inc hl
 693  880D 56           	ld d,(hl)
 694  880E 2B           	dec hl
 695  880F EB           	ex de,hl
 696  8810 C9           	ret
 697  8811
 698  8811              ; *************************************************************************************************************************************************************
 699  8811              ;
 700  8811              ;	7/2/23
 701  8811              ;
 702  8811              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 703  8811              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 704  8811              ;
 705  8811              ;   Destruye HL y BC !!!!!,
 706  8811              ;
 707  8811              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 708  8811              ;					"0" ..... Izquierda.
 709  8811
 710  8811              Inicia_Puntero_objeto
 711  8811
 712  8811 3A AF 85     	ld a,(Cuad_objeto)
 713  8814 E6 01        	and 1
 714  8816 F5           	push af
 715  8817 CC 35 88     	call z,Inicia_puntero_objeto_izq
 716  881A F1           	pop af
 717  881B 28 2B        	jr z,1F
 718  881D CD 22 88     	call Inicia_puntero_objeto_der
 719  8820 18 26        	jr 1F
 720  8822
 721  8822              ; Arrancamos desde la parte izquierda de la pantalla.
 722  8822              ; Iniciamos (Indice_Sprite_der).
 723  8822
 724  8822 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 725  8825 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 726  8828 CD 0B 88     	call Extrae_address
 727  882B 22 9F 85     	ld (Puntero_objeto),hl
 728  882E
 729  882E 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 730  8831 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 731  8834 C9           	ret
 732  8835
 733  8835              ; Arrancamos desde la parte derecha de la pantalla.
 734  8835              ; Iniciamos (Indice_Sprite_izq).
 735  8835
 736  8835 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 737  8838 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 738  883B CD 0B 88     	call Extrae_address
 739  883E 22 9F 85     	ld (Puntero_objeto),hl
 740  8841
 741  8841 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 742  8844 22 A9 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 743  8847 C9           	ret
 744  8848
 745  8848              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 746  8848
 747  8848 21 38 83     1 ld hl,Amadeus
 748  884B ED 4B 9F 85  	ld bc,(Puntero_objeto)
 749  884F B7 ED 42     	sub hl,bc
 750  8852 C0           	ret nz
 751  8853 21 C9 85     	ld hl,Ctrl_0
 752  8856 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 753  8858 C9           	ret 												; _de nuestra nave en los extremos.
 754  8859
 755  8859              ; *************************************************************************************************************************************************************
 756  8859              ;
 757  8859              ;	8/1/23
 758  8859              ;
 759  8859              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 760  8859              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 761  8859
 762  8859              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 763  8859              ;	_de la 2ª y 3ª entidad respectivamente.
 764  8859
 765  8859              Store_Restore_entidades
 766  8859
 767  8859 E5           	push hl
 768  885A D5           	push de
 769  885B C5            	push bc
 770  885C
 771  885C              ;	STORE !!!!!
 772  885C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 773  885C
 774  885C 21 9B 85     	ld hl,Filas
 775  885F ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 776  8863 01 3B 00     	ld bc,59
 777  8866 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 778  8868
 779  8868              ; 	Entidad_sospechosa. 20/4/23
 780  8868
 781  8868 3A B4 85     	ld a,(Impacto)
 782  886B A7           	and a
 783  886C 28 0C        	jr z,1F
 784  886E
 785  886E 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 786  8871 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 787  8874 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 788  8875 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 789  8877 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 790  887A
 791  887A              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 792  887A
 793  887A 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 794  887D 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 795  8880
 796  8880 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 797  8883 01 3B 00     	ld bc,59
 798  8886 ED B0        	ldir
 799  8888
 800  8888              ;	Incrementa RESTORE !!!!!
 801  8888
 802  8888 2A DB 85         ld hl,(Indice_restore)
 803  888B 23           	inc hl
 804  888C 23           	inc hl
 805  888D 22 DB 85     	ld (Indice_restore),hl
 806  8890 CD 0B 88         call Extrae_address
 807  8893 22 D9 85         ld (Puntero_restore_entidades),hl
 808  8896
 809  8896 C1           	pop bc
 810  8897 D1           	pop de
 811  8898 E1           	pop hl
 812  8899 C9           	ret
 813  889A
 814  889A              ; **************************************************************************************************
 815  889A              ;
 816  889A              ;	29/10/22
 817  889A              ;
 818  889A              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 819  889A
 820  889A E5           Restore_Primera_entidad push hl
 821  889B D5           	push de
 822  889C C5            	push bc
 823  889D 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 824  88A0 11 9B 85     	ld de,Filas
 825  88A3 01 3B 00     	ld bc,59
 826  88A6 ED B0        	ldir
 827  88A8 C1           	pop bc
 828  88A9 D1           	pop de
 829  88AA E1           	pop hl
 830  88AB C9           	ret
 831  88AC
 832  88AC              ; **************************************************************************************************
 833  88AC              ;
 834  88AC              ;	25/01/23
 835  88AC              ;
 836  88AC              ;	Restore_Amadeus
 837  88AC              ;
 838  88AC              ;	Cargamos en DRAW los parámetros de Amadeus.
 839  88AC              ;
 840  88AC
 841  88AC E5           Restore_Amadeus	push hl
 842  88AD D5           	push de
 843  88AE C5            	push bc
 844  88AF 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 845  88B2 11 9B 85     	ld de,Filas
 846  88B5 01 3B 00     	ld bc,59
 847  88B8 ED B0        	ldir
 848  88BA C1           	pop bc
 849  88BB D1           	pop de
 850  88BC E1           	pop hl
 851  88BD C9           	ret
 852  88BE
 853  88BE              ; *************************************************************************************************************************************************************
 854  88BE              ;
 855  88BE              ;	29/01/23
 856  88BE              ;
 857  88BE              ;	Store_Amadeus
 858  88BE              ;
 859  88BE              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 860  88BE              ;
 861  88BE
 862  88BE E5           Store_Amadeus push hl
 863  88BF D5           	push de
 864  88C0 C5            	push bc
 865  88C1 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 866  88C4 11 74 84     	ld de,Amadeus_db
 867  88C7 01 3B 00     	ld bc,59
 868  88CA ED B0        	ldir
 869  88CC C1           	pop bc
 870  88CD D1           	pop de
 871  88CE E1           	pop hl
 872  88CF C9           	ret
 873  88D0
 874  88D0              ; **************************************************************************************************
 875  88D0
 876  88D0              ; -----------------------------------------------------------
 877  88D0              ;
 878  88D0              ;	27/04/23
 879  88D0              ;
 880  88D0              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 881  88D0              ;
 882  88D0              ;	Destruye: HL,BC,DE,A
 883  88D0
 884  88D0 21 9B 85     Borra_datos_entidad ld hl,Filas
 885  88D3 01 3A 00     	ld bc,58
 886  88D6 AF           	xor a
 887  88D7 77           	ld (hl),a
 888  88D8 11 9C 85     	ld de,Filas+1
 889  88DB ED B0        	ldir
 890  88DD C9           	ret
 891  88DE
 892  88DE              ; -----------------------------------------------------------
 893  88DE
 894  88DE              ; Teclado.
 895  88DE
 896  88DE 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 897  88E0 DB FE        	in a,($fe)
 898  88E2 E6 01        	and $01
 899  88E4 28 02        	jr z,1f
 900  88E6 18 F6        	jr Pulsa_ENTER
 901  88E8 C9           1 ret
 902  88E9
 903  88E9              ; **************************************************************************************************
 904  88E9              ;
 905  88E9              ; Temporización.
 906  88E9
 907  88E9              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 908  88E9              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 909  88E9              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 910  88E9              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 911  88E9
 912  88E9              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 913  88E9              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 914  88E9              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 915  88E9
 916  88E9              ; A partir de $4f61 no hace falta DELAY.
 917  88E9
 918  88E9              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 919  88E9
 920  88E9 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 921  88EC 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 922  88ED 78           	LD A,B
 923  88EE A7           	AND A
 924  88EF 20 FB        	JR NZ,wait
 925  88F1 C9           	RET
 926  88F2
 927  88F2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 928  88F2              ;
 929  88F2              ;	5/3/23
 930  88F2              ;
 931  88F2              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 932  88F2
 933  88F2              Movimiento_Amadeus
 934  88F2
 935  88F2              ; Disparo.
 936  88F2
 937  88F2 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 938  88F5 A7           	and a
 939  88F6 20 02        	jr nz,1F
 940  88F8 18 15        	jr 2F
 941  88FA
 942  88FA 3E F7        1 ld a,$f7													; "5" para disparar.
 943  88FC DB FE        	in a,($fe)
 944  88FE E6 10        	and $10
 945  8900
 946  8900 F5           	push af
 947  8901 CC 6B 89     	call z,Genera_disparo
 948  8904 F1           	pop af
 949  8905 20 08        	jr nz,2F
 950  8907
 951  8907 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 952  890A EE 01        	xor 1
 953  890C 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 954  890F
 955  890F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 956  8911 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 957  8913 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 958  8915 CC BC 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 959  8918 3E F7        	ld a,$f7
 960  891A DB FE        	in a,($fe)
 961  891C E6 01        	and $01
 962  891E C8           	ret z
 963  891F
 964  891F 3E F7        	ld a,$f7
 965  8921 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 966  8923 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 967  8925 CC 9E 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 968  8928 C9           	ret
 969  8929
 970  8929              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 971  8929              ;
 972  8929              ;	Rutina provisional para que los malotes cagen balas.
 973  8929
 974  8929              Detecta_disparo_entidad
 975  8929
 976  8929 3A FA 85     	ld a,(Habilita_disparo_entidad)
 977  892C A7           	and a
 978  892D C8           	ret z
 979  892E 3E 7F        	ld a,$7f
 980  8930 DB FE        	in a,($fe)
 981  8932 E6 01        	and 1
 982  8934 C0           	ret nz
 983  8935 CD 6B 89     	call Genera_disparo
 984  8938 C9           	ret
 985  8939
 986  8939              ; Pinta indicadores de FILAS. ------------------------------------------------------
 987  8939
 988  8939 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 989  893C
 990  893C              ; ----------
 991  893C 06 20        	ld b,32
 992  893E E5           2 push hl
 993  893F C5           	push bc
 994  8940              ; ----------
 995  8940
 996  8940 06 BF        	ld b,$bf
 997  8942 36 80        1 ld (hl),%10000000
 998  8944 CD 64 90     	call NextScan
 999  8947 10 F9        	djnz 1B
1000  8949
1001  8949              ; ----------
1002  8949 C1           	pop bc
1003  894A E1           	pop hl
1004  894B 2C           	inc l
1005  894C 10 F0        	djnz 2B
1006  894E              ; ----------
1007  894E
1008  894E 06 03        	ld b,3
1009  8950 21 00 47         ld hl,$4700
1010  8953 CD 59 89     3 call Bucle_1
1011  8956 10 FB            djnz 3B
1012  8958 C9               ret
1013  8959
1014  8959 C5           Bucle_1 push bc
1015  895A E5                   push hl
1016  895B D1                   pop de
1017  895C 13                   inc de
1018  895D 01 FF 00             ld bc,255
1019  8960 36 FF                ld (hl),255
1020  8962 ED B0                ldir
1021  8964 23                   inc hl
1022  8965 3E 07                ld a,7
1023  8967 84                   add a,h
1024  8968 67                   ld h,a
1025  8969 C1                   pop bc
1026  896A C9                   ret
1027  896B
1028  896B              ; ---------------------------------------------------------------
1029  896B
1030  896B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 896B              ; ******************************************************************************************************************************************************************************************
   2+ 896B              ;
   3+ 896B              ;   17/04/23
   4+ 896B              ;
   5+ 896B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 896B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 896B              ;
   8+ 896B              ;
   9+ 896B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 896B              ;
  11+ 896B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 896B              ;               _ hacen las entidades hacia abajo.
  13+ 896B              ;
  14+ 896B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 896B              ;
  16+ 896B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 896B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 896B              ;
  19+ 896B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 896B              ;           _ la bala.
  21+ 896B              ;
  22+ 896B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 896B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 896B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 896B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 896B              ;           _ en el momento de generarse la bala)).
  27+ 896B
  28+ 896B              Genera_disparo
  29+ 896B
  30+ 896B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 896B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 896B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 896B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 896B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 896B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 896B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 896B
  38+ 896B              ; Exclusiones:
  39+ 896B
  40+ 896B 3A D2 85         ld a,(Columnas)
  41+ 896E 47               ld b,a
  42+ 896F 3A 9C 85         ld a,(Columns)
  43+ 8972 B8               cp b
  44+ 8973 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8974
  46+ 8974              ; ----- ----- -----
  47+ 8974
  48+ 8974 3A C9 85         ld a,(Ctrl_0)
  49+ 8977 CB 77            bit 6,a
  50+ 8979 20 06            jr nz,14F
  51+ 897B
  52+ 897B 3A A2 85         ld a,(Coordenada_y)
  53+ 897E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8980 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8981
  56+ 8981 21 00 80     14 ld hl,Indice_disparo
  57+ 8984 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8987 4F               ld c,a
  59+ 8988 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 898A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 898A              ;                                            ""        ""       "f9", B="1"
  62+ 898A              ;                                            ""        ""       "fb", B="2"
  63+ 898A              ;                                            ""        ""       "fb", B="3"
  64+ 898A A7               and a
  65+ 898B 28 10            jr z,1F
  66+ 898D E6 01            and 1
  67+ 898F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8990
  69+ 8990 79               ld a,c
  70+ 8991 16 F9            ld d,$f9
  71+ 8993 23           2 inc hl
  72+ 8994 23               inc hl
  73+ 8995 04               inc b
  74+ 8996 BA               cp d
  75+ 8997 28 04            jr z,1F
  76+ 8999 14               inc d
  77+ 899A 14               inc d
  78+ 899B 18 F6            jr 2B
  79+ 899D
  80+ 899D CD 0B 88     1 call Extrae_address
  81+ 89A0 E5               push hl
  82+ 89A1 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89A3 DD 21 F7 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89A7
  85+ 89A7              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89A7              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89A7
  88+ 89A7 3A C9 85         ld a,(Ctrl_0)
  89+ 89AA CB 77            bit 6,a
  90+ 89AC 20 04            jr nz,19F
  91+ 89AE
  92+ 89AE AF               xor a
  93+ 89AF 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 89B2
  95+ 89B2 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 89B5 FE 02            cp 2
  97+ 89B7 38 66            jr c,3F
  98+ 89B9 28 64            jr z,3F
  99+ 89BB
 100+ 89BB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 89BB
 102+ 89BB E6 01            and 1
 103+ 89BD 28 30            jr z,4F
 104+ 89BF
 105+ 89BF              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 89BF              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 89BF              ;
 108+ 89BF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 89BF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 89BF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 89BF
 112+ 89BF 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 89C2
 114+ 89C2              ;   Amadeus o entidad ???.
 115+ 89C2
 116+ 89C2 3A C9 85         ld a,(Ctrl_0)
 117+ 89C5 CB 77            bit 6,a
 118+ 89C7 28 0A            jr z,8F
 119+ 89C9
 120+ 89C9              ; 	Dispara Amadeus.
 121+ 89C9
 122+ 89C9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89CB CD 73 90         call PreviousScan
 124+ 89CE CD 73 90         call PreviousScan
 125+ 89D1
 126+ 89D1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89D1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89D1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89D1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89D1
 131+ 89D1 18 11            jr 10F
 132+ 89D3
 133+ 89D3              ; 	Dispara Entidad.
 134+ 89D3
 135+ 89D3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89D6              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89D6
 138+ 89D6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89D6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89D6
 141+ 89D6 C5               push bc
 142+ 89D7 06 10            ld b,16
 143+ 89D9 CD 64 90     9 call NextScan
 144+ 89DC 10 FB            djnz 9B
 145+ 89DE C1               pop bc
 146+ 89DF CD 49 8A         call Ajusta_disparo_parte_izquierda
 147+ 89E2 18 06            jr 17F
 148+ 89E4
 149+ 89E4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89E4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89E4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89E4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89E4
 154+ 89E4 CD 49 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89E7 CD BE 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89EA              ;                                                      ; _al generar el disparo.
 157+ 89EA
 158+ 89EA              ; 	LLegados a este punto tendremos:
 159+ 89EA              ;
 160+ 89EA              ;       Puntero_objeto_disparo en IY.
 161+ 89EA              ;       Rutinas_de_impresion en IX.
 162+ 89EA              ;       Puntero_de_impresion en HL.
 163+ 89EA              ;       Impacto/Dirección en BC.
 164+ 89EA
 165+ 89EA CD 51 8A     17 call Almacena_disparo
 166+ 89ED 18 52            jr 6F                                             ; RET.
 167+ 89EF
 168+ 89EF              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89EF              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89EF              ;
 171+ 89EF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89EF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89EF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89EF
 175+ 89EF 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 89F2
 177+ 89F2              ;   Amadeus o entidad ???.
 178+ 89F2
 179+ 89F2 3A C9 85         ld a,(Ctrl_0)
 180+ 89F5 CB 77            bit 6,a
 181+ 89F7 28 0A            jr z,11F
 182+ 89F9
 183+ 89F9              ; 	Dispara Amadeus.
 184+ 89F9
 185+ 89F9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 89FB CD 73 90         call PreviousScan
 187+ 89FE CD 73 90         call PreviousScan
 188+ 8A01
 189+ 8A01              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A01              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A01              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A01              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A01
 194+ 8A01 18 11            jr 13F
 195+ 8A03
 196+ 8A03              ; 	Dispara Entidad.
 197+ 8A03
 198+ 8A03 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A06              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A06
 201+ 8A06              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A06              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A06
 204+ 8A06 C5               push bc
 205+ 8A07 06 10            ld b,16
 206+ 8A09 CD 64 90     12 call NextScan
 207+ 8A0C 10 FB            djnz 12B
 208+ 8A0E C1               pop bc
 209+ 8A0F
 210+ 8A0F CD 42 8A         call Ajusta_disparo_parte_derecha
 211+ 8A12 18 06            jr 18F
 212+ 8A14
 213+ 8A14              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A14              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A14              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A14              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A14
 218+ 8A14 CD 42 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A17 CD BE 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A1A              ;                                                       ; _al generar el disparo.
 221+ 8A1A
 222+ 8A1A              ; LLegados a este punto tendremos:
 223+ 8A1A              ;
 224+ 8A1A              ;       Puntero_objeto_disparo en IY.
 225+ 8A1A              ;       Rutinas_de_impresion en IX.
 226+ 8A1A              ;       Puntero_de_impresion en HL.
 227+ 8A1A              ;       Impacto/Dirección en BC.
 228+ 8A1A
 229+ 8A1A CD 51 8A     18 call Almacena_disparo
 230+ 8A1D 18 22            jr 6F                                               ; RET.
 231+ 8A1F
 232+ 8A1F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A1F
 234+ 8A1F 28 11        3 jr z,5F
 235+ 8A21
 236+ 8A21              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A21              ;
 238+ 8A21              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A21              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A21              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A21              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A21
 243+ 8A21              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A21              ;	   ""        ""       "f9", B="1"
 245+ 8A21              ;	   ""        ""       "fb", B="2"
 246+ 8A21              ; 	   ""        ""       "fb", B="3"
 247+ 8A21
 248+ 8A21 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 8A24 CD 64 90     	call NextScan
 250+ 8A27
 251+ 8A27              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A27              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A27              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A27
 256+ 8A27 CD 49 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A2A
 258+ 8A2A              ; 	No se produce impacto. B="$80"
 259+ 8A2A              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A2A
 261+ 8A2A 01 80 80         ld bc,$8080
 262+ 8A2D
 263+ 8A2D              ; 	LLegados a este punto tendremos:
 264+ 8A2D              ;
 265+ 8A2D              ;       Puntero_objeto_disparo en IY.
 266+ 8A2D              ;       Rutinas_de_impresion en IX.
 267+ 8A2D              ;       Puntero_de_impresion en HL.
 268+ 8A2D              ;       Impacto/Dirección en BC.
 269+ 8A2D
 270+ 8A2D CD 51 8A         call Almacena_disparo
 271+ 8A30 18 0F            jr 6F                                           ; RET.
 272+ 8A32
 273+ 8A32              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A32              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A32              ;
 276+ 8A32              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A32              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A32              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A32              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A32
 281+ 8A32 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A35 CD 64 90     	call NextScan
 283+ 8A38
 284+ 8A38              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A38              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A38              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A38              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A38
 289+ 8A38 CD 42 8A         call Ajusta_disparo_parte_derecha
 290+ 8A3B
 291+ 8A3B              ; 	No se produce impacto. B="$80"
 292+ 8A3B              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A3B
 294+ 8A3B 01 80 80     15 ld bc,$8080
 295+ 8A3E
 296+ 8A3E              ; 	LLegados a este punto tendremos:
 297+ 8A3E              ;
 298+ 8A3E              ;       Puntero_objeto_disparo en IY.
 299+ 8A3E              ;       Rutinas_de_impresion en IX.
 300+ 8A3E              ;       Puntero_de_impresion en HL.
 301+ 8A3E              ;       Impacto/Dirección en BC.
 302+ 8A3E
 303+ 8A3E CD 51 8A         call Almacena_disparo
 304+ 8A41
 305+ 8A41 C9           6 ret
 306+ 8A42
 307+ 8A42              ; ----------------------------------------------------------------
 308+ 8A42              ;
 309+ 8A42              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A42              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A42              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A42
 313+ 8A42 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A43 FE 02            cp 2
 315+ 8A45 38 01            jr c,1F
 316+ 8A47 23               inc hl
 317+ 8A48 C9           1 ret
 318+ 8A49
 319+ 8A49 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A4A FE 01        	cp 1
 321+ 8A4C 20 01        	jr nz,1F
 322+ 8A4E 2B           	dec hl
 323+ 8A4F 2B           1 dec hl
 324+ 8A50 C9               ret
 325+ 8A51
 326+ 8A51              ; ----------------------------------------------------------------
 327+ 8A51              ;
 328+ 8A51              ;   25/02/23
 329+ 8A51              ;
 330+ 8A51              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A51              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A51              ;
 333+ 8A51              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A51              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A51
 336+ 8A51              Almacena_disparo
 337+ 8A51
 338+ 8A51 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A52 F1               pop af
 340+ 8A53 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A54
 342+ 8A54 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A55 E6 01            and 1
 344+ 8A57 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A59              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A59              ; 	Dispara AMADEUS.
 347+ 8A59
 348+ 8A59              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A59              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A59              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A59              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A59
 353+ 8A59 C5               push bc
 354+ 8A5A 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A5D 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A60 A7               and a
 357+ 8A61 ED 42            sbc hl,bc
 358+ 8A63 CC D4 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A66 C1               pop bc
 360+ 8A67 28 54            jr z,4F
 361+ 8A69
 362+ 8A69 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A6C 23               inc hl
 364+ 8A6D 23               inc hl
 365+ 8A6E 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A71              ;                                                   ; _ Disparo_(+1).
 367+ 8A71 18 18            jr 2F
 368+ 8A73
 369+ 8A73              ; Dispara una entidad.
 370+ 8A73
 371+ 8A73 C5           1 push bc
 372+ 8A74 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A77 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A7A A7               and a
 375+ 8A7B ED 42            sbc hl,bc
 376+ 8A7D CC CD 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A80 C1               pop bc
 378+ 8A81 28 3A            jr z,4F
 379+ 8A83
 380+ 8A83 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A86 23               inc hl
 382+ 8A87 23               inc hl
 383+ 8A88 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A8B              ;                                                   ; _ Disparo_(+1).
 385+ 8A8B CD 0B 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A8E              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A8E              ;
 388+ 8A8E              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A8E              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A8E              ;                                                     Puntero_de_impresion en HL.
 391+ 8A8E              ;                                                     Impacto/Dirección en BC.
 392+ 8A8E
 393+ 8A8E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A8F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A90 23               inc hl                                          ; _ al siguiente.
 396+ 8A91 A7               and a
 397+ 8A92 20 C0            jr nz,3B
 398+ 8A94
 399+ 8A94 08               ex af,af
 400+ 8A95 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8A99 F9               ld sp,hl
 402+ 8A9A
 403+ 8A9A DD E5            push ix                                         ; Rutina de impresión.
 404+ 8A9C F5               push af                                         ; Puntero de impresión.
 405+ 8A9D FD E5            push iy                                         ; Puntero objeto.
 406+ 8A9F C5               push bc                                         ; Control.
 407+ 8AA0
 408+ 8AA0 ED 7B DF 85      ld sp,(Stack)
 409+ 8AA4
 410+ 8AA4              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AA4
 412+ 8AA4 21 D6 85     	ld hl,Ctrl_1
 413+ 8AA7 CB C6        	set 0,(hl)
 414+ 8AA9
 415+ 8AA9 DD E5        	push ix
 416+ 8AAB E1               pop hl
 417+ 8AAC F5               push af
 418+ 8AAD DD E1            pop ix
 419+ 8AAF
 420+ 8AAF CD A0 7F     	call Guarda_foto_registros
 421+ 8AB2
 422+ 8AB2 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8AB5 CB 86        	res 0,(hl)
 424+ 8AB7
 425+ 8AB7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8AB7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8AB7
 428+ 8AB7 CD D4 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8ABA CD CD 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8ABD
 431+ 8ABD C9           4 ret
 432+ 8ABE
 433+ 8ABE              ; ----------------------------------------------------------------
 434+ 8ABE              ;
 435+ 8ABE              ;   4/3/23
 436+ 8ABE              ;
 437+ 8ABE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8ABE              ;   _ al generarse el disparo.
 439+ 8ABE              ;
 440+ 8ABE              ;       "$80" ..... No se produce colisión.
 441+ 8ABE              ;       "$81" ..... Se produce colisión.
 442+ 8ABE
 443+ 8ABE              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8ABE              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8ABE
 446+ 8ABE
 447+ 8ABE FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8AC0 E5               push hl                                        ; Puntero de impresión.
 449+ 8AC1 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8AC3 CD DF 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8AC6
 452+ 8AC6 7B               ld a,e
 453+ 8AC7 E6 01            and 1
 454+ 8AC9 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8ACB
 456+ 8ACB E1               pop hl
 457+ 8ACC E5               push hl
 458+ 8ACD CD 64 90         call NextScan
 459+ 8AD0
 460+ 8AD0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8AD1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8AD3 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8AD5              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8AD5 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8AD7 CD DF 8A         call Bucle_2
 466+ 8ADA
 467+ 8ADA 43           2 ld b,e
 468+ 8ADB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8ADC FD E1            pop iy
 470+ 8ADE C9               ret
 471+ 8ADF
 472+ 8ADF               ; ---------- ----------
 473+ 8ADF
 474+ 8ADF 06 02        Bucle_2 ld b,2
 475+ 8AE1 FD 7E 00     2 ld a,(iy)
 476+ 8AE4 A6               and (hl)
 477+ 8AE5 28 02            jr z,1F
 478+ 8AE7 1E 81            ld e,$81
 479+ 8AE9 23           1 inc hl
 480+ 8AEA FD 23            inc iy
 481+ 8AEC 10 F3            djnz 2B
 482+ 8AEE C9               ret
 483+ 8AEF
 484+ 8AEF              ; -------------------------------------------------------------------------------------------------------------
 485+ 8AEF              ;
 486+ 8AEF              ;   11/04/23
 487+ 8AEF              ;
 488+ 8AEF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8AEF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8AEF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8AEF              ;
 492+ 8AEF              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8AEF
 494+ 8AEF              Compara_coordenadas_X
 495+ 8AEF
 496+ 8AEF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8AEF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8AEF
 499+ 8AEF              ; Preparamos registros:
 500+ 8AEF
 501+ 8AEF 21 A1 85         ld hl,Filas+6
 502+ 8AF2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8AF3 23               inc hl
 504+ 8AF4 23               inc hl
 505+ 8AF5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8AF6 43               ld b,e
 507+ 8AF7 21 AF 85         ld hl,Filas+20
 508+ 8AFA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8AFB 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8AFE CD 0D 8D         call Guarda_coordenadas_X
 511+ 8B01
 512+ 8B01              ; Preparamos registros:
 513+ 8B01
 514+ 8B01 21 7A 84         ld hl,Amadeus_db+6
 515+ 8B04 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B05 23               inc hl
 517+ 8B06 23               inc hl
 518+ 8B07 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B08 7B               ld a,e
 520+ 8B09 08               ex af,af'
 521+ 8B0A 21 88 84         ld hl,Amadeus_db+20
 522+ 8B0D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B0E 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8B11 CD 0D 8D         call Guarda_coordenadas_X
 525+ 8B14
 526+ 8B14              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B14              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B14
 529+ 8B14 04               inc b
 530+ 8B15 05               dec b
 531+ 8B16 28 04            jr z,1F
 532+ 8B18 06 03            ld b,3
 533+ 8B1A 18 02            jr 2F
 534+ 8B1C 06 02        1 ld b,2
 535+ 8B1E 08           2 ex af,af'
 536+ 8B1F 3C               inc a
 537+ 8B20 3D               dec a
 538+ 8B21 28 04            jr z,5F
 539+ 8B23 0E 03            ld c,3
 540+ 8B25 18 02            jr 6F
 541+ 8B27 0E 02        5 ld c,2
 542+ 8B29 79           6 ld a,c
 543+ 8B2A 08               ex af,af'
 544+ 8B2B 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B2E 1A           4 ld a,(de)
 546+ 8B2F 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B32 BE           3 cp (hl)
 548+ 8B33 28 0E            jr z,7F
 549+ 8B35 23               inc hl
 550+ 8B36 0D               dec c
 551+ 8B37 20 F9            jr nz,3B
 552+ 8B39 13               inc de
 553+ 8B3A 08               ex af,af'
 554+ 8B3B 4F               ld c,a
 555+ 8B3C 08               ex af,af'
 556+ 8B3D 10 EF            djnz 4B
 557+ 8B3F
 558+ 8B3F              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B3F
 560+ 8B3F CD 4C 8D     8 call Limpia_Coordenadas_X
 561+ 8B42 C9               ret
 562+ 8B43
 563+ 8B43              7
 564+ 8B43 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B45 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8B48 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8B4B CB D6            set 2,(hl)
 568+ 8B4D 18 F0            jr 8B
 569+ 8B4F
 570+ 8B4F              ; -----------------------------------------------------------------------
 571+ 8B4F              ;
 572+ 8B4F              ;   17/04/23
 573+ 8B4F              ;
 574+ 8B4F
 575+ 8B4F              Detecta_colision_nave_entidad
 576+ 8B4F
 577+ 8B4F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8B4F
 579+ 8B4F 2A 9D 85         ld hl,(Posicion_actual)
 580+ 8B52 CD C9 8F         call Calcula_puntero_de_impresion
 581+ 8B55
 582+ 8B55              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8B55              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8B55
 585+ 8B55 DD E5            push ix
 586+ 8B57 E1               pop hl
 587+ 8B58 E5               push hl
 588+ 8B59
 589+ 8B59              ; ----- ----- -----
 590+ 8B59 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8B5B 06 0A            ld b,10
 592+ 8B5D CD 8D 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8B60 7B               ld a,e
 594+ 8B61 FE 05            cp 5
 595+ 8B63 38 0E            jr c,3F
 596+ 8B65
 597+ 8B65              ; LLegados a este punto:
 598+ 8B65              ;
 599+ 8B65              ;   HAY COLISIÓN !!!!!.
 600+ 8B65              ;
 601+ 8B65              ;   .db (Impacto) de Amadeus a "1".
 602+ 8B65              ;   SET el bit3 de (Impacto2).
 603+ 8B65              ;
 604+ 8B65              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8B65
 606+ 8B65 21 8D 84         ld hl,Amadeus_db+25
 607+ 8B68 36 01            ld (hl),1
 608+ 8B6A 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8B6D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8B6F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8B71 18 18            jr 1F
 612+ 8B73
 613+ 8B73              ; -----
 614+ 8B73
 615+ 8B73 E1           3 pop hl
 616+ 8B74 CD 64 90         call NextScan
 617+ 8B77 E5               push hl
 618+ 8B78 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8B79 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8B7B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8B7D 30 0C            jr nc,1F
 622+ 8B7F              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8B7F 10 DC            djnz 2B
 624+ 8B81
 625+ 8B81              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8B81
 627+ 8B81              ; LLegados a este punto:
 628+ 8B81              ;
 629+ 8B81              ;   NO HAY COLISIÓN !!!!!.
 630+ 8B81              ;
 631+ 8B81              ;   .db (Impacto) de Amadeus a "0".
 632+ 8B81              ;   RES el bit2 de (Impacto2).
 633+ 8B81              ;
 634+ 8B81              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8B81              ;   Lo colocamos a "0".
 636+ 8B81
 637+ 8B81 21 EC 85         ld hl,Impacto2
 638+ 8B84 CB 96            res 2,(hl)
 639+ 8B86 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8B89 36 00            ld (hl),0
 641+ 8B8B
 642+ 8B8B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8B8C C9               ret
 644+ 8B8D
 645+ 8B8D               ; ---------- ----------
 646+ 8B8D
 647+ 8B8D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8B8E 3A 9C 85         ld a,(Columns)
 649+ 8B91 47               ld b,a
 650+ 8B92 FD 7E 00     2 ld a,(iy)
 651+ 8B95 BE               cp (hl)
 652+ 8B96 28 01            jr z,1F
 653+ 8B98
 654+ 8B98 1C               inc e
 655+ 8B99
 656+ 8B99 23           1 inc hl
 657+ 8B9A FD 23            inc iy
 658+ 8B9C 10 F4            djnz 2B
 659+ 8B9E C1               pop bc
 660+ 8B9F C9               ret
 661+ 8BA0
 662+ 8BA0              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BA0              ;
 664+ 8BA0              ;   13/03/23
 665+ 8BA0              ;
 666+ 8BA0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BA0              ;
 668+ 8BA0              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BA0
 670+ 8BA0 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BA3 7E               ld a,(hl)
 672+ 8BA4 A7               and a
 673+ 8BA5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8BA6
 675+ 8BA6 44               ld b,h
 676+ 8BA7 4D               ld c,l
 677+ 8BA8 2A E5 85         ld hl,(Stack_snapshot_disparos)
 678+ 8BAB E5               push hl
 679+ 8BAC A7               and a
 680+ 8BAD ED 42            sbc hl,bc
 681+ 8BAF E5               push hl
 682+ 8BB0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8BB1
 684+ 8BB1 E1               pop hl
 685+ 8BB2 54               ld d,h
 686+ 8BB3 5D               ld e,l
 687+ 8BB4 1B               dec de
 688+ 8BB5 ED B8            lddr                                                ; Limpiamos.
 689+ 8BB7
 690+ 8BB7 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8BBA 22 E5 85         ld (Stack_snapshot_disparos),hl
 692+ 8BBD
 693+ 8BBD C9               ret
 694+ 8BBE
 695+ 8BBE              ; -------------------------------------------------------------------------------------------------------------
 696+ 8BBE              ;
 697+ 8BBE              ;   28/03/23
 698+ 8BBE              ;
 699+ 8BBE
 700+ 8BBE 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8BC1 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8BC4
 703+ 8BC4 CD 0B 88     2 call Extrae_address
 704+ 8BC7 7E               ld a,(hl)
 705+ 8BC8 A7               and a
 706+ 8BC9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8BCB
 708+ 8BCB              ; ----- ----- ----- ----- ----- -----
 709+ 8BCB
 710+ 8BCB C5               push bc
 711+ 8BCC CD 88 8C         call foto_disparo_a_borrar
 712+ 8BCF
 713+ 8BCF              ; Existe colisión con este disparo???
 714+ 8BCF
 715+ 8BCF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8BD0 7E               ld a,(hl)
 717+ 8BD1 2B               dec hl
 718+ 8BD2 E6 01            and 1
 719+ 8BD4 28 1D            jr z,9F
 720+ 8BD6
 721+ 8BD6              ;   En este punto:
 722+ 8BD6              ;
 723+ 8BD6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8BD6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8BD6              ;   _con la entidad).
 726+ 8BD6              ;
 727+ 8BD6              ;   Disparo_2A defw 0                                ; Control.
 728+ 8BD6              ;    defw 0                                          ; Puntero objeto.
 729+ 8BD6              ;    defw 0                                          ; Puntero de impresión.
 730+ 8BD6              ;    defw 0                                          ; Rutina de impresión.
 731+ 8BD6
 732+ 8BD6 E5               push hl
 733+ 8BD7
 734+ 8BD7 06 04            ld b,4
 735+ 8BD9 23           19 inc hl
 736+ 8BDA 10 FD            djnz 19B
 737+ 8BDC
 738+ 8BDC CD 0B 88         call Extrae_address
 739+ 8BDF CD 7B 96         call Genera_coordenadas_disparo
 740+ 8BE2
 741+ 8BE2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8BE2
 743+ 8BE2 21 EF 85         ld hl,Coordenadas_disparo_certero
 744+ 8BE5 72               ld (hl),d
 745+ 8BE6 23               inc hl
 746+ 8BE7 73               ld (hl),e
 747+ 8BE8
 748+ 8BE8              ; Elimino el disparo de la base de datos.
 749+ 8BE8
 750+ 8BE8 E1               pop hl
 751+ 8BE9 CD 02 8D         call Elimina_disparo_de_base_de_datos
 752+ 8BEC 21 EC 85         ld hl,Impacto2
 753+ 8BEF CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8BF1
 755+ 8BF1 18 06            jr 11F
 756+ 8BF3
 757+ 8BF3 CD B1 8C     9 call Mueve_disparo
 758+ 8BF6 CD 88 8C         call foto_disparo_a_borrar
 759+ 8BF9
 760+ 8BF9 C1           11 pop bc
 761+ 8BFA 18 04            jr 7F
 762+ 8BFC
 763+ 8BFC              ; ----- ----- ----- ----- ----- -----
 764+ 8BFC
 765+ 8BFC ED 42        1 sbc hl,bc
 766+ 8BFE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C00
 768+ 8C00 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C03 23               inc hl
 770+ 8C04 23               inc hl
 771+ 8C05 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C08 18 BA            jr 2B
 773+ 8C0A
 774+ 8C0A CD D4 87     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C0D 01 66 84         ld bc,Disparo_11
 776+ 8C10 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C13
 778+ 8C13 CD 0B 88     5 call Extrae_address
 779+ 8C16 7E               ld a,(hl)
 780+ 8C17 A7               and a
 781+ 8C18 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C1A
 783+ 8C1A              ; ----- ----- ----- ----- ----- -----
 784+ 8C1A
 785+ 8C1A C5               push bc
 786+ 8C1B CD 88 8C         call foto_disparo_a_borrar
 787+ 8C1E
 788+ 8C1E              ; Existe colisión con este disparo???
 789+ 8C1E
 790+ 8C1E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C1F 7E               ld a,(hl)
 792+ 8C20 2B               dec hl
 793+ 8C21 E6 01            and 1
 794+ 8C23 28 48            jr z,10F
 795+ 8C25
 796+ 8C25              ; La colisión se produce con Amadeus???
 797+ 8C25              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C25
 799+ 8C25 E5               push hl
 800+ 8C26
 801+ 8C26 06 04            ld b,4
 802+ 8C28 23           16 inc hl
 803+ 8C29 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C2B CD 0B 88         call Extrae_address
 805+ 8C2E CD 7B 96         call Genera_coordenadas_disparo
 806+ 8C31
 807+ 8C31 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C32 FE 16            cp $16
 809+ 8C34 38 22            jr c,15F
 810+ 8C36
 811+ 8C36              ; (Colisiones en filas 16 y 17).
 812+ 8C36
 813+ 8C36 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C37
 815+ 8C37              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C37
 817+ 8C37 21 7A 84         ld hl,Amadeus_db+6
 818+ 8C3A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C3B 23               inc hl
 820+ 8C3C 23               inc hl
 821+ 8C3D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C3E 21 88 84         ld hl,Amadeus_db+20
 823+ 8C41 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C42 21 F1 85         ld hl,Coordenadas_X_Amadeus
 825+ 8C45 CD 0D 8D         call Guarda_coordenadas_X
 826+ 8C48
 827+ 8C48 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8C49
 829+ 8C49              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8C49
 831+ 8C49 06 03            ld b,3
 832+ 8C4B 21 F1 85         ld hl,Coordenadas_X_Amadeus
 833+ 8C4E 7E           18 ld a,(hl)
 834+ 8C4F BA               cp d
 835+ 8C50 20 03            jr nz,17F
 836+ 8C52
 837+ 8C52              ; Colisión Amadeus !!!!!!!!!!
 838+ 8C52
 839+ 8C52 E1               pop hl
 840+ 8C53 18 09            jr 14F
 841+ 8C55
 842+ 8C55 23           17 inc hl
 843+ 8C56 10 F6            djnz 18B
 844+ 8C58
 845+ 8C58              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8C58              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8C58
 848+ 8C58 E1           15 pop hl
 849+ 8C59 23               inc hl
 850+ 8C5A 35               dec (hl)
 851+ 8C5B 2B               dec hl
 852+ 8C5C 18 0F            jr 10F
 853+ 8C5E
 854+ 8C5E              ; -----------------------debug
 855+ 8C5E
 856+ 8C5E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8C5E              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8C5E
 859+ 8C5E E5           14 push hl
 860+ 8C5F CD 02 8D         call Elimina_disparo_de_base_de_datos
 861+ 8C62 21 EC 85         ld hl,Impacto2
 862+ 8C65 CB CE            set 1,(hl)
 863+ 8C67 CD 4C 8D         call Limpia_Coordenadas_X
 864+ 8C6A
 865+ 8C6A E1               pop hl
 866+ 8C6B 18 06            jr 12F
 867+ 8C6D
 868+ 8C6D CD B1 8C     10 call Mueve_disparo
 869+ 8C70 CD 88 8C         call foto_disparo_a_borrar
 870+ 8C73 C1           12 pop bc
 871+ 8C74
 872+ 8C74 18 04            jr 8F
 873+ 8C76
 874+ 8C76              ; ----- ----- ----- ----- ----- -----
 875+ 8C76
 876+ 8C76 ED 42        4 sbc hl,bc
 877+ 8C78 28 0A            jr z,6F
 878+ 8C7A
 879+ 8C7A 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8C7D 23               inc hl
 881+ 8C7E 23               inc hl
 882+ 8C7F 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8C82 18 8F            jr 5B
 884+ 8C84
 885+ 8C84 CD CD 87     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8C87 C9               ret
 887+ 8C88
 888+ 8C88              ; ------------------------------------------------------------------
 889+ 8C88
 890+ 8C88              foto_disparo_a_borrar
 891+ 8C88
 892+ 8C88 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8C89 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8C8A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8C8B
 896+ 8C8B E5               push hl
 897+ 8C8C 23               inc hl
 898+ 8C8D 23               inc hl
 899+ 8C8E ED 73 DF 85      ld (Stack),sp
 900+ 8C92 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8C93 FD E1            pop iy
 902+ 8C95 DD E1            pop ix
 903+ 8C97 E1               pop hl
 904+ 8C98 ED 7B DF 85      ld sp,(Stack)
 905+ 8C9C 3A D6 85         ld a,(Ctrl_1)
 906+ 8C9F CB C7            set 0,a
 907+ 8CA1 32 D6 85         ld (Ctrl_1),a
 908+ 8CA4 CD A0 7F         call Guarda_foto_registros
 909+ 8CA7 3A D6 85         ld a,(Ctrl_1)
 910+ 8CAA CB 87            res 0,a
 911+ 8CAC 32 D6 85         ld (Ctrl_1),a
 912+ 8CAF E1               pop hl
 913+ 8CB0 C9               ret
 914+ 8CB1
 915+ 8CB1 E5           Mueve_disparo push hl
 916+ 8CB2 7E               ld a,(hl)
 917+ 8CB3 06 04            ld b,4
 918+ 8CB5 23           1 inc hl
 919+ 8CB6 10 FD            djnz 1B
 920+ 8CB8
 921+ 8CB8              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8CB8
 923+ 8CB8 CD 0B 88         call Extrae_address
 924+ 8CBB
 925+ 8CBB E6 01            and 1
 926+ 8CBD 28 2A            jr z,2F
 927+ 8CBF
 928+ 8CBF              ; Disparo hacia arriba, (Amadeus).
 929+ 8CBF
 930+ 8CBF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8CBF              ; _ de la dificultad.
 932+ 8CBF
 933+ 8CBF CD 73 90         call PreviousScan
 934+ 8CC2 CD 73 90         call PreviousScan
 935+ 8CC5 CD 73 90         call PreviousScan
 936+ 8CC8
 937+ 8CC8              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8CC8
 939+ 8CC8 7C               ld a,h
 940+ 8CC9 FE 40            cp $40
 941+ 8CCB 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8CCD
 943+ 8CCD              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8CCD
 945+ 8CCD EB               ex de,hl
 946+ 8CCE 06 04            ld b,4
 947+ 8CD0 2B           6 dec hl
 948+ 8CD1 10 FD            djnz 6B
 949+ 8CD3
 950+ 8CD3 CD 02 8D         call Elimina_disparo_de_base_de_datos
 951+ 8CD6
 952+ 8CD6 18 0C            jr 4F
 953+ 8CD8
 954+ 8CD8              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8CD8
 956+ 8CD8 D5           3 push de
 957+ 8CD9 C5               push bc
 958+ 8CDA CD BE 8A         call Comprueba_Colision
 959+ 8CDD 78               ld a,b
 960+ 8CDE C1               pop bc
 961+ 8CDF D1               pop de
 962+ 8CE0
 963+ 8CE0 EB               ex de,hl
 964+ 8CE1
 965+ 8CE1 73               ld (hl),e
 966+ 8CE2 23               inc hl
 967+ 8CE3 72               ld (hl),d
 968+ 8CE4
 969+ 8CE4 E1           4 pop hl
 970+ 8CE5 23               inc hl
 971+ 8CE6 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8CE7 2B               dec hl
 973+ 8CE8 C9               ret
 974+ 8CE9
 975+ 8CE9              ; Disparo hacia abajo, (Entidad).
 976+ 8CE9
 977+ 8CE9              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8CE9              ; _ de la dificultad.
 979+ 8CE9
 980+ 8CE9 CD 64 90     2 call NextScan
 981+ 8CEC CD 64 90         call NextScan
 982+ 8CEF CD 64 90         call NextScan
 983+ 8CF2
 984+ 8CF2              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8CF2
 986+ 8CF2 7C               ld a,h
 987+ 8CF3 FE 58            cp $58
 988+ 8CF5 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8CF7
 990+ 8CF7 EB               ex de,hl
 991+ 8CF8 06 04            ld b,4
 992+ 8CFA 2B           5 dec hl
 993+ 8CFB 10 FD            djnz 5B
 994+ 8CFD
 995+ 8CFD CD 02 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D00
 997+ 8D00 18 E2            jr 4B
 998+ 8D02
 999+ 8D02              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D02
1001+ 8D02 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D05 AF               xor a
1003+ 8D06 77               ld (hl),a
1004+ 8D07 54               ld d,h
1005+ 8D08 5D               ld e,l
1006+ 8D09 13               inc de
1007+ 8D0A ED B0            ldir
1008+ 8D0C C9               ret
1009+ 8D0D
1010+ 8D0D              ; -----------------------------------------------------------------
1011+ 8D0D              ;
1012+ 8D0D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D0D              ;
1014+ 8D0D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D0D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D0D              ;
1017+ 8D0D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D0D              ;
1019+ 8D0D              ;   INPUTS:
1020+ 8D0D              ;
1021+ 8D0D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D0D              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D0D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D0D
1025+ 8D0D              ;   MODIFICA: A, HL, DE y C
1026+ 8D0D
1027+ 8D0D 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D0E 79               ld a,c
1029+ 8D0F E6 01            and 1
1030+ 8D11 20 03            jr nz,1F
1031+ 8D13 14               inc d
1032+ 8D14 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D16
1034+ 8D16              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D16              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D16
1037+ 8D16 15           1 dec d
1038+ 8D17 23           2 inc hl
1039+ 8D18 72               ld (hl),d
1040+ 8D19
1041+ 8D19 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D1A A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D1B C8               ret z
1044+ 8D1C
1045+ 8D1C AF               xor a
1046+ 8D1D 5F               ld e,a
1047+ 8D1E 18 ED            jr Guarda_coordenadas_X
1048+ 8D20
1049+ 8D20              ; -----------------------------------------------------------------
1050+ 8D20              ;
1051+ 8D20              ;   12/04/23
1052+ 8D20              ;
1053+ 8D20
1054+ 8D20 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1055+ 8D23 A7               and a
1056+ 8D24 C8               ret z
1057+ 8D25
1058+ 8D25 FE 04            cp 4
1059+ 8D27 20 09            jr nz,1F
1060+ 8D29
1061+ 8D29
1062+ 8D29              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D29
1064+ 8D29 CD 4F 8B         call Detecta_colision_nave_entidad
1065+ 8D2C
1066+ 8D2C 21 EC 85         ld hl,Impacto2
1067+ 8D2F CB 5E            bit 3,(hl)
1068+ 8D31 C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D32
1070+ 8D32              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D32              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D32
1073+ 8D32 21 EC 85     1 ld hl,Impacto2
1074+ 8D35 CB 4E            bit 1,(hl)
1075+ 8D37 28 07            jr z,2F
1076+ 8D39
1077+ 8D39 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D3C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D3E 18 0B            jr 3F
1080+ 8D40
1081+ 8D40 21 EC 85     2 ld hl,Impacto2
1082+ 8D43 CB 46            bit 0,(hl)
1083+ 8D45 C8               ret z
1084+ 8D46
1085+ 8D46              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8D46
1087+ 8D46 21 D6 85         ld hl,Ctrl_1
1088+ 8D49 CB D6            set 2,(hl)
1089+ 8D4B
1090+ 8D4B C9           3 ret
1091+ 8D4C
1092+ 8D4C              ; -----------------------------------------------------------------
1093+ 8D4C              ;
1094+ 8D4C              ;   16/04/23
1095+ 8D4C              ;
1096+ 8D4C
1097+ 8D4C AF           Limpia_Coordenadas_X xor a
1098+ 8D4D 06 06            ld b,6
1099+ 8D4F 21 F1 85         ld hl,Coordenadas_X_Amadeus
1100+ 8D52 77           1 ld (hl),a
1101+ 8D53 23               inc hl
1102+ 8D54 10 FC            djnz 1B
1103+ 8D56 C9               ret
1104+ 8D57
1105+ 8D57              ; -----------------------------------------------------------------
1106+ 8D57              ;
1107+ 8D57              ;   25/04/23
1108+ 8D57              ;
1109+ 8D57
1110+ 8D57              Determina_resultado_comparativa
1111+ 8D57
1112+ 8D57 7C               ld a,h
1113+ 8D58 06 00            ld b,0
1114+ 8D5A
1115+ 8D5A CD 72 8D         call Compara_cositas
1116+ 8D5D 04               inc b
1117+ 8D5E 05               dec b
1118+ 8D5F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8D60
1120+ 8D60 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8D61 06 00            ld b,0
1122+ 8D63 FE 02            cp $02
1123+ 8D65 28 09            jr z,1F
1124+ 8D67 FE FE            cp $fe
1125+ 8D69 28 05            jr z,1F
1126+ 8D6B
1127+ 8D6B CD 72 8D         call Compara_cositas
1128+ 8D6E 18 01            jr 2F
1129+ 8D70
1130+ 8D70 04           1 inc b
1131+ 8D71 C9           2 ret
1132+ 8D72
1133+ 8D72 A7           Compara_cositas and a
1134+ 8D73 28 07            jr z,1F
1135+ 8D75 FE FF            cp $ff
1136+ 8D77 28 03            jr z,1F
1137+ 8D79 FE 01            cp $01
1138+ 8D7B C0               ret nz
1139+ 8D7C 04           1 inc b
1140+ 8D7D C9               ret
1141+ 8D7E
# file closed: Disparo.asm
1031  8D7E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D7E              ; ******************************************************************************************************************************************************************************************
   2+ 8D7E              ;
   3+ 8D7E              ; 01/23
   4+ 8D7E              ;
   5+ 8D7E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D7E
   7+ 8D7E CD 58 90     Draw call Prepara_draw
   8+ 8D81 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D82 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D83 28 05        	jr z,2F
  11+ 8D85
  12+ 8D85 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D88 18 0C        	jr 1F
  14+ 8D8A 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D8D 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D90 CD 1F 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D93              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D93 CD 9E 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D96 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D99 CB 6F        	bit 5,a
  21+ 8D9B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D9D
  23+ 8D9D CD B5 8D     	call Comprueba_limite_horizontal
  24+ 8DA0 CD 45 8E     	call Comprueba_limite_vertical
  25+ 8DA3
  26+ 8DA3              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DA3
  28+ 8DA3 CD 92 8F     3 call calcula_CColumnass
  29+ 8DA6 CD C9 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8DA9 CD 1E 90     	call Define_rutina_de_impresion
  31+ 8DAC
  32+ 8DAC 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8DAF CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8DB1 32 C9 85     	ld (Ctrl_0),a
  35+ 8DB4
  36+ 8DB4 C9           	ret
  37+ 8DB5
  38+ 8DB5              ; *******************************************************************************************************************************************************************************************
  39+ 8DB5              ;	21/01/23
  40+ 8DB5              ;
  41+ 8DB5              ; 	Comprueba_limite_horizontal.
  42+ 8DB5              ;
  43+ 8DB5              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8DB5              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8DB5              ;
  46+ 8DB5              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8DB5              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8DB5              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8DB5              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8DB5
  51+ 8DB5
  52+ 8DB5
  53+ 8DB5 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8DB8 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8DBA 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8DBC E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8DBE 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8DC1 18 09            jr 6F
  59+ 8DC3 CB 5F        1 bit 3,a
  60+ 8DC5 28 0A            jr z,2F
  61+ 8DC7 E6 F7            and $f7
  62+ 8DC9 32 C9 85         ld (Ctrl_0),a
  63+ 8DCC CD 1F 8F     6 call Inicializacion
  64+ 8DCF 18 5B            jr 5F
  65+ 8DD1 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DD2
  67+ 8DD2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DD2              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DD2
  70+ 8DD2 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DD3 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DD6 CD 24 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DD9 67           	ld h,a
  74+ 8DDA EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DDB CD 24 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DDE 67           	ld h,a
  77+ 8DDF A7           	and a
  78+ 8DE0 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DE2 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DE3 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DE6 FE 02        	cp 2
  82+ 8DE8 38 1E        	jr c,3F
  83+ 8DEA 28 1C        	jr z,3F
  84+ 8DEC 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DED 28 23            jr z,7F
  86+ 8DEF 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DF1 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DF3 E1           	pop hl
  89+ 8DF4
  90+ 8DF4              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DF4              ; _para indicar con E="2" en caso necesario.
  92+ 8DF4
  93+ 8DF4 E5               push hl
  94+ 8DF5 C5               push bc
  95+ 8DF6 CD 24 93     	call calcula_tercio
  96+ 8DF9 FE 01        	cp 1
  97+ 8DFB 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8DFD CD 2D 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E00 28 26            jr z,9F
 100+ 8E02 38 24            jr c,9F
 101+ 8E04 1E 00        11 ld e,0
 102+ 8E06 18 22            jr 8F
 103+ 8E08 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E09 28 07        	jr z, 7F
 105+ 8E0B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E0D 1E 00         	ld e,0
 107+ 8E0F E1           	pop hl
 108+ 8E10 18 04        	jr 4F
 109+ 8E12 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E14 18 15            jr 10F
 111+ 8E16
 112+ 8E16              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E16              ; _para indicar con E="2" en caso necesario.
 114+ 8E16
 115+ 8E16 E5           4 push hl
 116+ 8E17 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E18 CD 24 93     	call calcula_tercio
 118+ 8E1B FE 01        	cp 1
 119+ 8E1D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E1F CD 2D 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E22 28 04            jr z,9F
 122+ 8E24 30 02            jr nc,9F
 123+ 8E26 18 02        	jr 8F
 124+ 8E28 1E 02        9 ld e,2
 125+ 8E2A C1           8 pop bc
 126+ 8E2B E1           10 pop hl
 127+ 8E2C C9           5 ret
 128+ 8E2D
 129+ 8E2D              ; --------------------
 130+ 8E2D              ;
 131+ 8E2D              ; 25/08/22
 132+ 8E2D
 133+ 8E2D CD 24 93     Comprueba_centro call calcula_tercio
 134+ 8E30 67               ld h,a
 135+ 8E31 08           	ex af,af
 136+ 8E32 FE 02        	cp 2
 137+ 8E34 38 07        	jr c,1F
 138+ 8E36 28 05        	jr z,1F
 139+ 8E38 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E3B 18 03        	jr 2F
 141+ 8E3D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E40 08           2 ex af,af
 143+ 8E41 A7               and a
 144+ 8E42 ED 42            sbc hl,bc
 145+ 8E44 C9               ret
 146+ 8E45
 147+ 8E45              ; *********************************************************************************************************************************************************************************************
 148+ 8E45              ;
 149+ 8E45              ;   16/8/22
 150+ 8E45              ;
 151+ 8E45              ;	Comprueba_limite_vertical
 152+ 8E45              ;
 153+ 8E45              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E45              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E45              ;
 156+ 8E45
 157+ 8E45 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E48 7D           	ld a,l
 159+ 8E49 E6 1F        	and $1F
 160+ 8E4B 57           	ld d,a
 161+ 8E4C 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E4F BA           	cp d 											; Límite - Posición.
 163+ 8E50 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E51 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E54 CB 47        	bit 0,a
 166+ 8E56 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E58
 168+ 8E58              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E58
 170+ 8E58 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E59 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E5B
 173+ 8E5B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E5B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E5B
 176+ 8E5B 3A A1 85         ld a,(Coordenada_X)
 177+ 8E5E 16 0F            ld d,Centro_izquierda
 178+ 8E60 A7               and a
 179+ 8E61 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E62 28 1E            jr z,3F
 181+ 8E64 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E66              ;                                                    ; _salimos sin modificar nada.
 183+ 8E66 18 0E            jr 2F
 184+ 8E68 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E69 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E6B
 187+ 8E6B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E6B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E6B
 190+ 8E6B 3A A1 85         ld a,(Coordenada_X)
 191+ 8E6E 16 10            ld d,Centro_derecha
 192+ 8E70 A7               and a
 193+ 8E71 92               sub d
 194+ 8E72 28 0E            jr z,3F
 195+ 8E74 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E76              ;                                                    ; _salimos sin modificar nada.
 197+ 8E76 CB 43        2 bit 0,e
 198+ 8E78 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E7A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E7B CD 0F 8F         call Modificaccionne
 201+ 8E7E C1           	pop bc
 202+ 8E7F CD 1F 8F         call Inicializacion
 203+ 8E82 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E83
 205+ 8E83              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E83
 207+ 8E83 C5           4 push bc
 208+ 8E84 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E87 0A           	ld a,(bc)
 210+ 8E88 3D           	dec a
 211+ 8E89 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E8A 7D           	ld a,l
 213+ 8E8B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E8C CB 47        	bit 0,a
 215+ 8E8E 28 03        	jr z,5F
 216+ 8E90 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E91 18 2E        	jr 7F
 218+ 8E93
 219+ 8E93              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E93
 221+ 8E93 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E94 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E95 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E98 CB 4F        	bit 1,a
 225+ 8E9A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E9C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E9D
 228+ 8E9D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E9D
 230+ 8E9D 1C               inc e
 231+ 8E9E 1D               dec e
 232+ 8E9F 20 07            jr nz,12F
 233+ 8EA1 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EA2 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EA3 22 9D 85     	ld (Posicion_actual),hl
 236+ 8EA6 18 44        13 jr 9F
 237+ 8EA8 CB 43        12 bit 0,e
 238+ 8EAA 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8EAC              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8EAC C1           	pop bc
 241+ 8EAD 18 D3        	jr 3B
 242+ 8EAF 80           14 add b
 243+ 8EB0 6F               ld l,a
 244+ 8EB1 22 9D 85     	ld (Posicion_actual),hl
 245+ 8EB4 CD 0F 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8EB7 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8EB9 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8EBB 32 C9 85         ld (Ctrl_0),a
 249+ 8EBE F1           	pop af
 250+ 8EBF 18 2B        	jr 9F
 251+ 8EC1
 252+ 8EC1              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8EC1
 254+ 8EC1 F5           7 push af
 255+ 8EC2 3A C9 85     	ld a,(Ctrl_0)
 256+ 8EC5 CB 47        	bit 0,a
 257+ 8EC7 20 1D        	jr nz,8F
 258+ 8EC9 F1           	pop af
 259+ 8ECA
 260+ 8ECA              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8ECA
 262+ 8ECA 1C           	inc e
 263+ 8ECB 1D               dec e
 264+ 8ECC 20 07            jr nz,10F
 265+ 8ECE 90           	sub b
 266+ 8ECF 6F               ld l,a
 267+ 8ED0 22 9D 85     	ld (Posicion_actual),hl
 268+ 8ED3 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8ED5              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8ED5 CB 43        10 bit 0,e
 271+ 8ED7 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8ED9              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8ED9 C1           	pop bc
 274+ 8EDA 18 A6        	jr 3B
 275+ 8EDC 90           16 sub b
 276+ 8EDD 6F               ld l,a
 277+ 8EDE 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EE1 CD 0F 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EE4 18 06            jr 9F
 280+ 8EE6 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EE8 32 C9 85         ld (Ctrl_0),a
 282+ 8EEB F1           	pop af
 283+ 8EEC C1           9 pop bc
 284+ 8EED 1E 00        	ld e,0
 285+ 8EEF CD 1F 8F         call Inicializacion
 286+ 8EF2 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8EF3 08           	ex af,af
 288+ 8EF4 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8EF5 18 8B            jr 3B
 290+ 8EF7
 291+ 8EF7              ; --------------------
 292+ 8EF7
 293+ 8EF7 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8EF9 CD 73 90     1 call PreviousScan
 295+ 8EFC 10 FB            djnz 1B
 296+ 8EFE 22 9D 85     	ld (Posicion_actual),hl
 297+ 8F01 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F02 C9           	ret
 299+ 8F03
 300+ 8F03              ; --------------------
 301+ 8F03
 302+ 8F03 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F05 CD 64 90     1 call NextScan
 304+ 8F08 10 FB            djnz 1B
 305+ 8F0A 22 9D 85     	ld (Posicion_actual),hl
 306+ 8F0D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F0E C9           	ret
 308+ 8F0F
 309+ 8F0F              ; --------------------
 310+ 8F0F              ;
 311+ 8F0F              ;	22/01/23
 312+ 8F0F              ;
 313+ 8F0F              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F0F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F0F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F0F
 317+ 8F0F
 318+ 8F0F              Modificaccionne
 319+ 8F0F
 320+ 8F0F 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8F12 FE 02        	cp 2
 322+ 8F14 CC F7 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F17 DC F7 8E         call c,Modifica_Pos_actual
 324+ 8F1A C8           	ret z
 325+ 8F1B CD 03 8F         call Modifica_Pos_actual2
 326+ 8F1E C9               ret
 327+ 8F1F
 328+ 8F1F              ; *************************************************************************************************************************************************************************************************
 329+ 8F1F              ;
 330+ 8F1F              ;	13/8/22
 331+ 8F1F              ;
 332+ 8F1F              ;	Inicializacion
 333+ 8F1F              ;
 334+ 8F1F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F1F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F1F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F1F              ;
 338+ 8F1F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F1F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F1F              ;	_ desaparece/aparece.
 341+ 8F1F
 342+ 8F1F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F1F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F1F              ;
 345+ 8F1F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F1F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F1F              ; 		   [E] ="0"
 348+ 8F1F
 349+ 8F1F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F1F
 351+ 8F1F CD 24 93     Inicializacion call calcula_tercio
 352+ 8F22 28 36        	jr z,primit
 353+ 8F24 E6 02        	and 2
 354+ 8F26 20 07        	jr nz,segmit
 355+ 8F28 7D           	ld a,l
 356+ 8F29 FE 7F        	cp $7f
 357+ 8F2B 38 2D        	jr c,primit
 358+ 8F2D 28 2B        	jr z,primit
 359+ 8F2F CD 8C 8F     segmit call column
 360+ 8F32 38 13        	jr c,tercuad
 361+ 8F34 3E 04        cuarcuad ld a,4
 362+ 8F36 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F39 21 20 48     	ld hl,$4820
 364+ 8F3C 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F3F 21 D5 85     	ld hl,Limite_vertical
 366+ 8F42 36 0D        	ld (hl),$0d
 367+ 8F44 08           	ex af,af
 368+ 8F45 18 3C        	jr 1F
 369+ 8F47              tercuad
 370+ 8F47 3E 03        	ld a,3
 371+ 8F49 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F4C 21 20 48     	ld hl,$4820
 373+ 8F4F 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F52 21 D5 85     	ld hl,Limite_vertical
 375+ 8F55 36 12        	ld (hl),$12
 376+ 8F57 08           	ex af,af
 377+ 8F58 18 29        	jr 1F
 378+ 8F5A CD 8C 8F     primit call column
 379+ 8F5D 38 13        	jr c, primcuad
 380+ 8F5F              segcuad
 381+ 8F5F 3E 02        	ld a,2
 382+ 8F61 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F64 21 C0 4F     	ld hl,$4fc0
 384+ 8F67 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F6A 21 D5 85     	ld hl,Limite_vertical
 386+ 8F6D 36 0D        	ld (hl),$0d
 387+ 8F6F 08           	ex af,af
 388+ 8F70 18 11        	jr 1F
 389+ 8F72              primcuad
 390+ 8F72 3E 01        	ld a,1
 391+ 8F74 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F77 21 C0 4F     	ld hl,$4fc0
 393+ 8F7A 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F7D 21 D5 85     	ld hl,Limite_vertical
 395+ 8F80 36 12        	ld (hl),$12
 396+ 8F82 08           	ex af,af
 397+ 8F83 CD 50 96     1 call Genera_coordenadas
 398+ 8F86 21 C9 85     	ld hl,Ctrl_0
 399+ 8F89 CB EE        	set 5,(hl)
 400+ 8F8B C9           	ret
 401+ 8F8C
 402+ 8F8C              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F8C
 404+ 8F8C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F8C              ;
 406+ 8F8C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F8C
 408+ 8F8C 7D           column ld a,l
 409+ 8F8D E6 1F        	and $1f
 410+ 8F8F FE 10         	cp $10
 411+ 8F91 C9            	ret
 412+ 8F92
 413+ 8F92              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F92              ;
 415+ 8F92              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F92              ;
 417+ 8F92              ; 14/12/22
 418+ 8F92              ;
 419+ 8F92              ;	Modifica: A y BC.
 420+ 8F92
 421+ 8F92 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F95 E6 01        	and 1
 423+ 8F97 28 17        	jr z,1F
 424+ 8F99
 425+ 8F99              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F99
 427+ 8F99 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F9C 47           	ld b,a
 429+ 8F9D 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F9E 79           	ld a,c
 431+ 8F9F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FA0 38 08        	jr c,2F
 433+ 8FA2 47           	ld b,a
 434+ 8FA3 79           	ld a,c
 435+ 8FA4 90           	sub b
 436+ 8FA5 32 D2 85     	ld (Columnas),a
 437+ 8FA8 18 1B        	jr 4F
 438+ 8FAA 79           2 ld a,c
 439+ 8FAB 32 D2 85     	ld (Columnas),a
 440+ 8FAE 18 15        	jr 4F
 441+ 8FB0
 442+ 8FB0              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8FB0
 444+ 8FB0 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8FB3 81           	add c
 446+ 8FB4 3D           	dec a
 447+ 8FB5 D6 1F        	sub $1f
 448+ 8FB7 38 08        	jr c,3F
 449+ 8FB9 47           	ld b,a
 450+ 8FBA 79           	ld a,c
 451+ 8FBB 90           	sub b
 452+ 8FBC 32 D2 85     	ld (Columnas),a
 453+ 8FBF 18 04        	jr 4F
 454+ 8FC1 79           3 ld a,c
 455+ 8FC2 32 D2 85     	ld (Columnas),a
 456+ 8FC5 D9           4 exx
 457+ 8FC6 4F           	ld c,a
 458+ 8FC7 D9           	exx
 459+ 8FC8 C9            ret
 460+ 8FC9
 461+ 8FC9              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FC9              ;
 463+ 8FC9              ; 7/1/23
 464+ 8FC9              ;
 465+ 8FC9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FC9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FC9              ;
 468+ 8FC9              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FC9              ;	DESTRUYE: HL,B Y A.
 470+ 8FC9
 471+ 8FC9 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FCC FE 02        	cp 2
 473+ 8FCE 38 18        	jr c,1F
 474+ 8FD0 28 16        	jr z,1F
 475+ 8FD2 E6 01        	and 1
 476+ 8FD4 28 0D        	jr z,3F
 477+ 8FD6
 478+ 8FD6              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FD6
 480+ 8FD6 CD 12 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FD9
 482+ 8FD9 7D           9 ld a,l
 483+ 8FDA E6 1F        	and $1f
 484+ 8FDC 28 2A        	jr z,7F
 485+ 8FDE 2B           	dec hl
 486+ 8FDF 10 F8        	djnz 9B
 487+ 8FE1 18 25        	jr 7F
 488+ 8FE3
 489+ 8FE3              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FE3
 491+ 8FE3 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FE6 18 20        	jr 7F
 493+ 8FE8
 494+ 8FE8 28 14        1 jr z,2F
 495+ 8FEA
 496+ 8FEA              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FEA
 498+ 8FEA CD 12 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FED 7D           4 ld a,l
 500+ 8FEE E6 1F        	and $1f
 501+ 8FF0 28 03        	jr z,6F
 502+ 8FF2 2B           	dec hl
 503+ 8FF3 10 F8        	djnz 4B
 504+ 8FF5 06 0F        6 ld b,15
 505+ 8FF7 CD 73 90     5 call PreviousScan
 506+ 8FFA 10 FB        	djnz 5B
 507+ 8FFC 18 0A        	jr 7F
 508+ 8FFE
 509+ 8FFE              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8FFE
 511+ 8FFE CD 12 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9001 06 0F        	ld b,15
 513+ 9003 CD 73 90     8 call PreviousScan
 514+ 9006 10 FB        	djnz 8B
 515+ 9008
 516+ 9008 E5           7 push hl
 517+ 9009 DD E1        	pop ix
 518+ 900B
 519+ 900B 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 900E E5           	push hl
 521+ 900F FD E1        	pop iy
 522+ 9011
 523+ 9011 C9           	ret
 524+ 9012
 525+ 9012              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9012              ;
 527+ 9012              ;	2/1/23
 528+ 9012              ;
 529+ 9012              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9012              ;
 531+ 9012              ;	Tras esta rutina tenemos:
 532+ 9012              ;
 533+ 9012              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9012              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9012              ;
 536+ 9012              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9012
 538+ 9012 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 9015 3A D2 85     	ld a,(Columnas)
 540+ 9018 3D           	dec a
 541+ 9019 20 01        	jr nz,1F
 542+ 901B 3C           	inc a
 543+ 901C 47           1 ld b,a
 544+ 901D C9           	ret
 545+ 901E
 546+ 901E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 901E              ;
 548+ 901E              ;	3/1/23
 549+ 901E              ;
 550+ 901E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 901E              ;
 552+ 901E              ;	Destruye: A,B,HL y DE.
 553+ 901E
 554+ 901E              Define_rutina_de_impresion
 555+ 901E
 556+ 901E 3A 9C 85     	ld a,(Columns)
 557+ 9021 47           	ld b,a
 558+ 9022 3A D2 85     	ld a,(Columnas)
 559+ 9025 B8           	cp b
 560+ 9026 20 0D        	jr nz,2f
 561+ 9028
 562+ 9028              ;	La entidad se imprime entera.
 563+ 9028
 564+ 9028 21 F4 90     	ld hl, Indice_entidades_completas
 565+ 902B E6 01        	and 1
 566+ 902D 28 02        	jr z,1F
 567+ 902F
 568+ 902F 23           	inc hl
 569+ 9030 23           	inc hl
 570+ 9031
 571+ 9031 CD 0B 88     1 call Extrae_address
 572+ 9034 C9           	ret		;	ret
 573+ 9035
 574+ 9035              ;	La entidad no se imprime entera en pantalla.
 575+ 9035
 576+ 9035 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9038 E6 01        	and 1
 578+ 903A 28 17        	jr z,3F
 579+ 903C
 580+ 903C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 903C
 582+ 903C 21 F8 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 903F 3A 9C 85     4 ld a,(Columns)
 584+ 9042 E6 01        	and 1
 585+ 9044 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9046
 587+ 9046 23           	inc hl
 588+ 9047 23           	inc hl
 589+ 9048
 590+ 9048 3A D2 85     	ld a,(Columnas)
 591+ 904B E6 01        	and 1
 592+ 904D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 904F
 594+ 904F 23           	inc hl
 595+ 9050 23           	inc hl
 596+ 9051
 597+ 9051 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9053
 599+ 9053 21 FE 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9056 18 E7        	jr 4B
 601+ 9058
 602+ 9058              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9058              ;
 604+ 9058              ;	Prepara_draw
 605+ 9058              ;
 606+ 9058              ;	Es una rutina de carga.
 607+ 9058              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9058              ;
 609+ 9058              ;	FUNCIONAMIENTO:
 610+ 9058              ;
 611+ 9058              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9058              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9058              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9058              ;
 615+ 9058              ;	DESTRUYE:
 616+ 9058              ;
 617+ 9058              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9058
 619+ 9058 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 905B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 905C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 905D 4E           	ld c,(hl)
 623+ 905E 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 9061 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9063 C9           	ret
 626+ 9064
 627+ 9064              ;----------------------------------------------------------------------------------------------------------------
 628+ 9064              ;
 629+ 9064              ;	5/08/22
 630+ 9064              ;
 631+ 9064              ;   NextScan.
 632+ 9064              ;
 633+ 9064              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9064              ;
 635+ 9064              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9064              ;
 637+ 9064              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9064              ;
 639+ 9064              ;       DESTRUIDOS: AF y HL !!!
 640+ 9064              ;
 641+ 9064              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9064              ;
 643+ 9064
 644+ 9064 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9065 7C               ld a,h
 646+ 9066 E6 07            and 7
 647+ 9068 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9069
 649+ 9069 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 906A C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 906C 6F               ld l,a
 652+ 906D D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 906E
 654+ 906E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 906F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9071 67               ld h,a
 657+ 9072 C9               ret
 658+ 9073
 659+ 9073              ;----------------------------------------------------------------------------------------------------------------
 660+ 9073              ;
 661+ 9073              ;	5/08/22
 662+ 9073              ;
 663+ 9073              ;   PreviousScan.
 664+ 9073              ;
 665+ 9073              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9073              ;
 667+ 9073              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9073              ;
 669+ 9073              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9073              ;
 671+ 9073              ;       DESTRUIDOS: AF y HL !!!
 672+ 9073              ;
 673+ 9073              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9073              ;
 675+ 9073
 676+ 9073 7C           PreviousScan ld a,h
 677+ 9074 25               dec h               ; Dec H.
 678+ 9075 E6 07            and 7
 679+ 9077 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9078
 681+ 9078 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9079 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 907B 6F               ld l,a
 684+ 907C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 907D
 686+ 907D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 907E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9080 67               ld h,a
 689+ 9081 C9               ret
 690+ 9082
 691+ 9082              ; -----------------------------------------------------------------------------------
 692+ 9082              ;
 693+ 9082              ;	28/2/23
 694+ 9082              ;
 695+ 9082              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9082              ;	Extrae fotos de Album_de_fotos.
 697+ 9082
 698+ 9082              Extrae_foto_entidades
 699+ 9082
 700+ 9082 3A DE 85     	ld a,(Numero_de_malotes)
 701+ 9085 A7           	and a
 702+ 9086 C8           	ret z
 703+ 9087 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 908B 31 00 70     	ld sp,Album_de_fotos
 705+ 908E
 706+ 908E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 9090 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 9091 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 9092
 710+ 9092 ED 73 E1 85  	ld (Stack_2),sp
 711+ 9096 ED 7B DF 85  	ld sp,(Stack)
 712+ 909A
 713+ 909A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 909A
 715+ 909A 3E CD        	ld a,$cd
 716+ 909C 32 A4 90     	ld (Imprime),a
 717+ 909F EB           	ex de,hl
 718+ 90A0 22 A5 90     	ld (Imprime+1),hl
 719+ 90A3 EB           	ex de,hl
 720+ 90A4
 721+ 90A4              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90A4
 723+ 90A4 00 00 00     Imprime db 0,0,0
 724+ 90A7
 725+ 90A7 3A DE 85     	ld a,(Numero_de_malotes)
 726+ 90AA 3D           	dec a
 727+ 90AB 28 09        	jr z,1F
 728+ 90AD 32 DE 85      	ld (Numero_de_malotes),a
 729+ 90B0
 730+ 90B0 ED 7B E1 85   	ld sp,(Stack_2)
 731+ 90B4 18 D8        	jr 2B
 732+ 90B6
 733+ 90B6 AF           1 xor a
 734+ 90B7 32 E1 85     	ld (Stack_2),a
 735+ 90BA C9           	ret
 736+ 90BB
 737+ 90BB              ; -----------------------------------------------------------------------------------
 738+ 90BB              ;
 739+ 90BB              ;	28/2/23
 740+ 90BB              ;
 741+ 90BB              ;	Pinta los disparos generados.
 742+ 90BB
 743+ 90BB              Extrae_foto_disparos
 744+ 90BB
 745+ 90BB 3A E7 85     	ld a,(Numero_de_disparotes)
 746+ 90BE A7           	and a
 747+ 90BF C8           	ret z
 748+ 90C0 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 90C4 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 90C7
 751+ 90C7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 90C9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 90CA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 90CB
 755+ 90CB ED 73 E1 85  	ld (Stack_2),sp
 756+ 90CF ED 7B DF 85  	ld sp,(Stack)
 757+ 90D3
 758+ 90D3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 90D3
 760+ 90D3 3E CD        	ld a,$cd
 761+ 90D5 32 DD 90     	ld (Imprime2),a
 762+ 90D8 EB           	ex de,hl
 763+ 90D9 22 DE 90     	ld (Imprime2+1),hl
 764+ 90DC EB           	ex de,hl
 765+ 90DD
 766+ 90DD              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 90DD
 768+ 90DD 00 00 00     Imprime2 db 0,0,0
 769+ 90E0
 770+ 90E0 3A E7 85     	ld a,(Numero_de_disparotes)
 771+ 90E3 3D           	dec a
 772+ 90E4 28 09        	jr z,1F
 773+ 90E6 32 E7 85      	ld (Numero_de_disparotes),a
 774+ 90E9
 775+ 90E9 ED 7B E1 85  	ld sp,(Stack_2)
 776+ 90ED 18 D8        	jr 2B
 777+ 90EF
 778+ 90EF AF           1 xor a
 779+ 90F0 32 E1 85     	ld (Stack_2),a
 780+ 90F3 C9           	ret
 781+ 90F4
# file closed: Draw_XOR.asm
1032  90F4              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90F4              ;   índices de Rutinas de impresión.
   2+ 90F4
   3+ 90F4 04 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90F6 31 91            defw Pinta_Amadeus_3x2
   5+ 90F8
   6+ 90F8 87 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 90FA 27 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 90FC DB 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 90FE
  10+ 90FE B1 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9100 B5 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9102 69 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9104
  14+ 9104
  15+ 9104              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9104              ;
  17+ 9104              ;   12/12/22
  18+ 9104              ;
  19+ 9104              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9104              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9104              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9104              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9104              ;
  24+ 9104              ;   Modifica: DE y HL.
  25+ 9104
  26+ 9104 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9108 FD F9        	ld sp,iy
  28+ 910A 06 10            ld b,16
  29+ 910C D1           1 pop de
  30+ 910D 7B               ld a,e
  31+ 910E AE               xor (hl)
  32+ 910F 77           	ld (hl),a
  33+ 9110 23           	inc hl
  34+ 9111 7A               ld a,d
  35+ 9112 AE               xor (hl)
  36+ 9113 77           	ld (hl),a
  37+ 9114 2B           	dec hl
  38+ 9115 24           	inc h
  39+ 9116 7C               ld a,h
  40+ 9117 E6 07            and 7
  41+ 9119 20 0A            jr nz,2F
  42+ 911B 7D               ld a,l
  43+ 911C C6 20            add a,$20
  44+ 911E 6F               ld l,a
  45+ 911F 38 04            jr c,2F
  46+ 9121 7C               ld a,h
  47+ 9122 D6 08            sub 8
  48+ 9124 67               ld h,a
  49+ 9125 7C           2 ld a,h
  50+ 9126 FE 58            cp $58
  51+ 9128 28 02            jr z,3F
  52+ 912A 10 E0            djnz 1B
  53+ 912C ED 7B DF 85  3 ld sp,(Stack)
  54+ 9130 C9           	ret
  55+ 9131
  56+ 9131 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9135 FD F9        	ld sp,iy
  58+ 9137 06 08            ld b,8
  59+ 9139 D1           1 pop de
  60+ 913A 7B               ld a,e
  61+ 913B AE               xor (hl)
  62+ 913C 77           	ld (hl),a
  63+ 913D 23           	inc hl
  64+ 913E 7A               ld a,d
  65+ 913F AE               xor (hl)
  66+ 9140 77           	ld (hl),a
  67+ 9141 23           	inc hl
  68+ 9142 D1           	pop de
  69+ 9143 7B               ld a,e
  70+ 9144 AE               xor (hl)
  71+ 9145 77           	ld (hl),a
  72+ 9146 2B           	dec hl
  73+ 9147 2B           	dec hl
  74+ 9148 24           	inc h
  75+ 9149 7C               ld a,h
  76+ 914A E6 07            and 7
  77+ 914C 20 0A            jr nz,2F
  78+ 914E 7D               ld a,l
  79+ 914F C6 20            add a,$20
  80+ 9151 6F               ld l,a
  81+ 9152 38 04            jr c,2F
  82+ 9154 7C               ld a,h
  83+ 9155 D6 08            sub 8
  84+ 9157 67               ld h,a
  85+ 9158 7C           2 ld a,h
  86+ 9159 FE 58            cp $58
  87+ 915B 28 25            jr z,4F
  88+ 915D 7A               ld a,d
  89+ 915E AE               xor (hl)
  90+ 915F 77               ld (hl),a
  91+ 9160 D1           	pop de
  92+ 9161 23           	inc hl
  93+ 9162 7B               ld a,e
  94+ 9163 AE               xor (hl)
  95+ 9164 77           	ld (hl),a
  96+ 9165 23           	inc hl
  97+ 9166 7A               ld a,d
  98+ 9167 AE               xor (hl)
  99+ 9168 77           	ld (hl),a
 100+ 9169 2B           	dec hl
 101+ 916A 2B           	dec hl
 102+ 916B 24           	inc h
 103+ 916C 7C               ld a,h
 104+ 916D E6 07            and 7
 105+ 916F 20 0A            jr nz,3F
 106+ 9171 7D               ld a,l
 107+ 9172 C6 20            add a,$20
 108+ 9174 6F               ld l,a
 109+ 9175 38 04            jr c,3F
 110+ 9177 7C               ld a,h
 111+ 9178 D6 08            sub 8
 112+ 917A 67               ld h,a
 113+ 917B 7C           3 ld a,h
 114+ 917C FE 58            cp $58
 115+ 917E 28 02            jr z,4F
 116+ 9180 10 B7            djnz 1B
 117+ 9182 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9186 C9           	ret
 119+ 9187
 120+ 9187              ; ---------------------------------------------------
 121+ 9187
 122+ 9187 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 918B FD F9        	ld sp,iy
 124+ 918D
 125+ 918D              ; >>>
 126+ 918D
 127+ 918D 06 10            ld b,16
 128+ 918F D1           1 pop de
 129+ 9190 7A           	ld a,d
 130+ 9191 AE           	xor (hl)
 131+ 9192 77           	ld (hl),a
 132+ 9193 24           	inc h
 133+ 9194 7C               ld a,h
 134+ 9195 E6 07            and 7
 135+ 9197 20 0C            jr nz,2F
 136+ 9199 7D               ld a,l
 137+ 919A C6 20            add a,$20
 138+ 919C 6F               ld l,a
 139+ 919D 38 06            jr c,2F
 140+ 919F 7C               ld a,h
 141+ 91A0 D6 08            sub 8
 142+ 91A2 67               ld h,a
 143+ 91A3 18 00            jr 2F
 144+ 91A5 7C           2 ld a,h
 145+ 91A6 FE 58            cp $58
 146+ 91A8 28 02            jr z,3F
 147+ 91AA 10 E3            djnz 1B
 148+ 91AC ED 7B DF 85  3 ld sp,(Stack)
 149+ 91B0 C9           	ret
 150+ 91B1
 151+ 91B1 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 91B5 FD F9        	ld sp,iy
 153+ 91B7
 154+ 91B7              ; >>>
 155+ 91B7
 156+ 91B7 06 10            ld b,16
 157+ 91B9 D1           1 pop de
 158+ 91BA 7B           	ld a,e
 159+ 91BB AE           	xor (hl)
 160+ 91BC 77           	ld (hl),a
 161+ 91BD 24           	inc h
 162+ 91BE 7C               ld a,h
 163+ 91BF E6 07            and 7
 164+ 91C1 20 0C            jr nz,2F
 165+ 91C3 7D               ld a,l
 166+ 91C4 C6 20            add a,$20
 167+ 91C6 6F               ld l,a
 168+ 91C7 38 06            jr c,2F
 169+ 91C9 7C               ld a,h
 170+ 91CA D6 08            sub 8
 171+ 91CC 67               ld h,a
 172+ 91CD 18 00            jr 2F
 173+ 91CF 7C           2 ld a,h
 174+ 91D0 FE 58            cp $58
 175+ 91D2 28 02            jr z,3F
 176+ 91D4 10 E3            djnz 1B
 177+ 91D6 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91DA C9           	ret
 179+ 91DB
 180+ 91DB              ; ---------------------------------------------------
 181+ 91DB
 182+ 91DB ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91DF FD F9        	ld sp,iy
 184+ 91E1 06 08            ld b,8
 185+ 91E3 D1           1 pop de
 186+ 91E4 7A           	ld a,d
 187+ 91E5 AE           	xor (hl)
 188+ 91E6 77           	ld (hl),a
 189+ 91E7 23           	inc hl
 190+ 91E8 D1           	pop de
 191+ 91E9 7B           	ld a,e
 192+ 91EA AE           	xor (hl)
 193+ 91EB 77           	ld (hl),a
 194+ 91EC 2B           	dec hl
 195+ 91ED 24            	inc h
 196+ 91EE 7C               ld a,h
 197+ 91EF E6 07            and 7
 198+ 91F1 20 0A            jr nz,2F
 199+ 91F3 7D               ld a,l
 200+ 91F4 C6 20            add a,$20
 201+ 91F6 6F               ld l,a
 202+ 91F7 38 04            jr c,2F
 203+ 91F9 7C               ld a,h
 204+ 91FA D6 08            sub 8
 205+ 91FC 67               ld h,a
 206+ 91FD 7C           2 ld a,h
 207+ 91FE FE 58            cp $58
 208+ 9200 28 20            jr z,4F
 209+ 9202 D1               pop de
 210+ 9203 7B           	ld a,e
 211+ 9204 AE           	xor (hl)
 212+ 9205 77           	ld (hl),a
 213+ 9206 23           	inc hl
 214+ 9207 7A           	ld a,d
 215+ 9208 AE           	xor (hl)
 216+ 9209 77           	ld (hl),a
 217+ 920A 2B           	dec hl
 218+ 920B 24           	inc h
 219+ 920C 7C               ld a,h
 220+ 920D E6 07            and 7
 221+ 920F 20 0A            jr nz,3F
 222+ 9211 7D               ld a,l
 223+ 9212 C6 20            add a,$20
 224+ 9214 6F               ld l,a
 225+ 9215 38 04            jr c,3F
 226+ 9217 7C               ld a,h
 227+ 9218 D6 08            sub 8
 228+ 921A 67               ld h,a
 229+ 921B 7C           3 ld a,h
 230+ 921C FE 58            cp $58
 231+ 921E 28 02            jr z,4F
 232+ 9220 10 C1            djnz 1B
 233+ 9222 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9226 C9           	ret
 235+ 9227
 236+ 9227 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 922B FD F9        	ld sp,iy
 238+ 922D 06 08            ld b,8
 239+ 922F D1           1 pop de
 240+ 9230 D1           	pop de
 241+ 9231 7B           	ld a,e
 242+ 9232 AE           	xor (hl)
 243+ 9233 77           	ld (hl),a
 244+ 9234 24            	inc h
 245+ 9235 7C               ld a,h
 246+ 9236 E6 07            and 7
 247+ 9238 20 0A            jr nz,2F
 248+ 923A 7D               ld a,l
 249+ 923B C6 20            add a,$20
 250+ 923D 6F               ld l,a
 251+ 923E 38 04            jr c,2F
 252+ 9240 7C               ld a,h
 253+ 9241 D6 08            sub 8
 254+ 9243 67               ld h,a
 255+ 9244 7C           2 ld a,h
 256+ 9245 FE 58            cp $58
 257+ 9247 28 1B            jr z,4F
 258+ 9249 D1               pop de
 259+ 924A 7A           	ld a,d
 260+ 924B AE           	xor (hl)
 261+ 924C 77           	ld (hl),a
 262+ 924D 24           	inc h
 263+ 924E 7C               ld a,h
 264+ 924F E6 07            and 7
 265+ 9251 20 0A            jr nz,3F
 266+ 9253 7D               ld a,l
 267+ 9254 C6 20            add a,$20
 268+ 9256 6F               ld l,a
 269+ 9257 38 04            jr c,3F
 270+ 9259 7C               ld a,h
 271+ 925A D6 08            sub 8
 272+ 925C 67               ld h,a
 273+ 925D 7C           3 ld a,h
 274+ 925E FE 58            cp $58
 275+ 9260 28 02            jr z,4F
 276+ 9262 10 CB            djnz 1B
 277+ 9264 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9268 C9           	ret
 279+ 9269
 280+ 9269 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 926D FD F9        	ld sp,iy
 282+ 926F 06 08            ld b,8
 283+ 9271 D1           1 pop de
 284+ 9272 7B           	ld a,e
 285+ 9273 AE           	xor (hl)
 286+ 9274 77           	ld (hl),a
 287+ 9275 23           	inc hl
 288+ 9276 7A           	ld a,d
 289+ 9277 AE           	xor (hl)
 290+ 9278 77           	ld (hl),a
 291+ 9279 2B           	dec hl
 292+ 927A 24             	inc h
 293+ 927B 7C               ld a,h
 294+ 927C E6 07            and 7
 295+ 927E 20 0A            jr nz,2F
 296+ 9280 7D               ld a,l
 297+ 9281 C6 20            add a,$20
 298+ 9283 6F               ld l,a
 299+ 9284 38 04            jr c,2F
 300+ 9286 7C               ld a,h
 301+ 9287 D6 08            sub 8
 302+ 9289 67               ld h,a
 303+ 928A 7C           2 ld a,h
 304+ 928B FE 58            cp $58
 305+ 928D 28 21            jr z,4F
 306+ 928F D1               pop de
 307+ 9290 7A           	ld a,d
 308+ 9291 AE           	xor (hl)
 309+ 9292 77           	ld (hl),a
 310+ 9293 23           	inc hl
 311+ 9294 D1               pop de
 312+ 9295 7B           	ld a,e
 313+ 9296 AE           	xor (hl)
 314+ 9297 77           	ld (hl),a
 315+ 9298 2B           	dec hl
 316+ 9299 24           	inc h
 317+ 929A 7C               ld a,h
 318+ 929B E6 07            and 7
 319+ 929D 20 0A            jr nz,3F
 320+ 929F 7D               ld a,l
 321+ 92A0 C6 20            add a,$20
 322+ 92A2 6F               ld l,a
 323+ 92A3 38 04            jr c,3F
 324+ 92A5 7C               ld a,h
 325+ 92A6 D6 08            sub 8
 326+ 92A8 67               ld h,a
 327+ 92A9 7C           3 ld a,h
 328+ 92AA FE 58            cp $58
 329+ 92AC 28 02            jr z,4F
 330+ 92AE 10 C1            djnz 1B
 331+ 92B0 ED 7B DF 85  4 ld sp,(Stack)
 332+ 92B4 C9           	ret
 333+ 92B5
 334+ 92B5 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 92B9 FD F9        	ld sp,iy
 336+ 92BB 06 08            ld b,8
 337+ 92BD D1           1 pop de
 338+ 92BE 7B           	ld a,e
 339+ 92BF AE           	xor (hl)
 340+ 92C0 77           	ld (hl),a
 341+ 92C1 24            	inc h
 342+ 92C2 7C               ld a,h
 343+ 92C3 E6 07            and 7
 344+ 92C5 20 0A            jr nz,2F
 345+ 92C7 7D               ld a,l
 346+ 92C8 C6 20            add a,$20
 347+ 92CA 6F               ld l,a
 348+ 92CB 38 04            jr c,2F
 349+ 92CD 7C               ld a,h
 350+ 92CE D6 08            sub 8
 351+ 92D0 67               ld h,a
 352+ 92D1 7C           2 ld a,h
 353+ 92D2 FE 58            cp $58
 354+ 92D4 28 1C            jr z,4F
 355+ 92D6 D1               pop de
 356+ 92D7 7A           	ld a,d
 357+ 92D8 AE           	xor (hl)
 358+ 92D9 77           	ld (hl),a
 359+ 92DA 24           	inc h
 360+ 92DB 7C               ld a,h
 361+ 92DC E6 07            and 7
 362+ 92DE 20 0A            jr nz,3F
 363+ 92E0 7D               ld a,l
 364+ 92E1 C6 20            add a,$20
 365+ 92E3 6F               ld l,a
 366+ 92E4 38 04            jr c,3F
 367+ 92E6 7C               ld a,h
 368+ 92E7 D6 08            sub 8
 369+ 92E9 67               ld h,a
 370+ 92EA 7C           3 ld a,h
 371+ 92EB FE 58            cp $58
 372+ 92ED 28 03            jr z,4F
 373+ 92EF D1               pop de
 374+ 92F0 10 CB            djnz 1B
 375+ 92F2 ED 7B DF 85  4 ld sp,(Stack)
 376+ 92F6 C9           	ret
 377+ 92F7
 378+ 92F7              ; ---------------------------------------------------
 379+ 92F7              ;
 380+ 92F7              ;   27/02/23
 381+ 92F7              ;
 382+ 92F7              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92F7              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92F7              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92F7
 386+ 92F7 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 92FB FD F9            ld sp,iy
 388+ 92FD 06 02            ld b,2
 389+ 92FF D1           1 pop de
 390+ 9300 7B               ld a,e
 391+ 9301 AE               xor (hl)
 392+ 9302 77               ld (hl),a
 393+ 9303 23               inc hl
 394+ 9304 7A               ld a,d
 395+ 9305 AE               xor (hl)
 396+ 9306 77               ld (hl),a
 397+ 9307 2B               dec hl
 398+ 9308
 399+ 9308 24               inc h
 400+ 9309 7C               ld a,h
 401+ 930A E6 07            and 7
 402+ 930C 20 0A            jr nz,2F
 403+ 930E 7D               ld a,l
 404+ 930F C6 20            add a,$20
 405+ 9311 6F               ld l,a
 406+ 9312 38 04            jr c,2F
 407+ 9314 7C               ld a,h
 408+ 9315 D6 08            sub 8
 409+ 9317 67               ld h,a
 410+ 9318 7C           2 ld a,h
 411+ 9319 FE 58            cp $58
 412+ 931B 28 02            jr z,3F
 413+ 931D
 414+ 931D 10 E0            djnz 1B
 415+ 931F ED 7B DF 85  3 ld sp,(Stack)
 416+ 9323 C9               ret
 417+ 9324
# file closed: Rutinas_de_impresion_sprites.asm
1033  9324              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9324              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9324              ;
   3+ 9324              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9324              ;
   5+ 9324              ; *****************************************************************************************************************************************************************************************
   6+ 9324              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9324
   8+ 9324 7C           calcula_tercio ld a,h
   9+ 9325 E6 18        	and $18
  10+ 9327 CB 2F        	sra a
  11+ 9329 CB 2F        	sra a
  12+ 932B CB 2F        	sra a
  13+ 932D C9           	ret
  14+ 932E
# file closed: calcula_tercio.asm
1034  932E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 932E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 932E              ;
   3+ 932E              ;
   4+ 932E              ;	CLS.
   5+ 932E              ;
   6+ 932E              ;	Limpia la pantalla y define sus atributos.
   7+ 932E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 932E              ;
   9+ 932E              ;	COLORES: 0 ..... NEGRO
  10+ 932E              ;    		 1 ..... AZUL
  11+ 932E              ; 			 2 ..... ROJO
  12+ 932E              ;			 3 ..... MAGENTA
  13+ 932E              ; 			 4 ..... VERDE
  14+ 932E              ; 			 5 ..... CIAN
  15+ 932E              ;			 6 ..... AMARILLO
  16+ 932E              ; 			 7 ..... BLANCO
  17+ 932E              ;
  18+ 932E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 932E              ;
  20+ 932E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 932E
  22+ 932E
  23+ 932E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9331 11 01 40     	LD DE,$4001
  25+ 9334 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9337 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9339 ED B0        	LDIR
  28+ 933B 01 FF 02     	LD BC,767
  29+ 933E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 933F ED B0        	LDIR
  31+ 9341 C9           	ret
  32+ 9342
# file closed: Cls.asm
1035  9342              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9342              ; ******************************************************************************************************************************************************************************************
   2+ 9342              ;
   3+ 9342              ;   22/01/23
   4+ 9342              ;
   5+ 9342              ;	Mov_down
   6+ 9342              ;
   7+ 9342              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9342              ;
   9+ 9342              ;
  10+ 9342 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9345 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9347              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9347              ; 																	; _ en el caso de que no lo haya.
  14+ 9347 3A B3 85     	ld a,(Vel_down)
  15+ 934A 47           	ld b,a
  16+ 934B 2A 9D 85         ld hl,(Posicion_actual)
  17+ 934E CD 24 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9351 E6 02        	and 2
  19+ 9353 28 0F        	jr z,1F
  20+ 9355
  21+ 9355              ; Nos encontramos en el último tercio de pantalla.
  22+ 9355              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9355
  24+ 9355 7C           	ld a,h
  25+ 9356 FE 57        	cp $57
  26+ 9358 20 0A        	jr nz,1F
  27+ 935A 7D           	ld a,l
  28+ 935B C6 20        	add $20
  29+ 935D 30 05        	jr nc,1F
  30+ 935F
  31+ 935F              ; ------------------------------
  32+ 935F CD 3A 96     	call Reaparece_arriba
  33+ 9362              ;	call Reinicio
  34+ 9362              ; ------------------------------
  35+ 9362
  36+ 9362 18 08        	jr 3F
  37+ 9364 CD 64 90     1 call NextScan
  38+ 9367 22 9D 85     	ld (Posicion_actual),hl
  39+ 936A 10 E2            djnz 2B
  40+ 936C CD 50 96     3 call Genera_coordenadas
  41+ 936F C9           	ret
  42+ 9370
  43+ 9370              ; ******************************************************************************************************************************************************************************************
  44+ 9370              ;
  45+ 9370              ;   22/01/23
  46+ 9370              ;
  47+ 9370              ;	Mov_up
  48+ 9370              ;
  49+ 9370              ; 	Mueve el Sprite hacia arriba.
  50+ 9370              ;
  51+ 9370              ;
  52+ 9370 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9373 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9375              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9375              ; 																		; _ en el caso de que no lo haya.
  56+ 9375 3A B2 85     	ld a,(Vel_up)
  57+ 9378 47           	ld b,a
  58+ 9379 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 937C CD 24 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 937F A7           	and a
  61+ 9380 20 10        	jr nz,1F
  62+ 9382
  63+ 9382              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9382              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9382
  66+ 9382 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9383 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9385 20 0B            jr nz,1F
  69+ 9387 7D               ld a,l
  70+ 9388 D6 20            sub $20
  71+ 938A 30 06            jr nc,1F
  72+ 938C 25               dec h
  73+ 938D
  74+ 938D              ; -----------------------------
  75+ 938D CD 2A 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9390              ;	call Reinicio
  77+ 9390              ; -----------------------------
  78+ 9390
  79+ 9390 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9392 CD 73 90     1 call PreviousScan
  81+ 9395 22 9D 85     	ld (Posicion_actual),hl
  82+ 9398 10 E2            djnz 3B
  83+ 939A CD 50 96     2 call Genera_coordenadas
  84+ 939D C9           	ret
  85+ 939E
  86+ 939E              ; ******************************************************************************************************************************************************************************************
  87+ 939E              ;
  88+ 939E              ;	19/10/22
  89+ 939E              ;
  90+ 939E              ;	Mov_right.
  91+ 939E              ;
  92+ 939E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 939E              ;
  94+ 939E
  95+ 939E 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 93A1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93A3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93A3              ; 																	; _ en el caso de que no lo haya.
  99+ 93A3 3A C9 85     	ld a,(Ctrl_0)
 100+ 93A6 CB 77        	bit 6,a
 101+ 93A8 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 93AA
 103+ 93AA CD D8 95     	call Stop_Amadeus_right
 104+ 93AD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 93AE 18 4D        	jr 8F
 106+ 93B0
 107+ 93B0 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 93B3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 93B5 20 46        	jr nz,8F
 110+ 93B7
 111+ 93B7 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 93BA A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 93BB 28 40        	jr z,8F
 114+ 93BD
 115+ 93BD              ; ---------- ---------- ----------
 116+ 93BD              ;
 117+ 93BD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 93BD
 119+ 93BD 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 93C0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 93C2 28 11        	jr z,1F
 122+ 93C4 38 06        	jr c,6F
 123+ 93C6 FE 04        	cp 4
 124+ 93C8 28 14        	jr z,7F
 125+ 93CA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93CC
 127+ 93CC              ; ---------- ---------- ----------
 128+ 93CC              ;
 129+ 93CC              ; Perfiles de velocidad
 130+ 93CC              ;
 131+ 93CC
 132+ 93CC 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93CF FE FE        	cp $fe
 134+ 93D1 20 2A        	jr nz,8F
 135+ 93D3 18 10        	jr 3F
 136+ 93D5 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93D8 FE FD        	cp $fd
 138+ 93DA 20 21        	jr nz,8F
 139+ 93DC 18 07        	jr 3F
 140+ 93DE 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93E1 FE FB        	cp $fb
 142+ 93E3 20 18        	jr nz,8F
 143+ 93E5
 144+ 93E5              ; ---------- ---------- ----------
 145+ 93E5
 146+ 93E5              3
 147+ 93E5 CD 18 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93E8              ;	call Reinicio
 149+ 93E8
 150+ 93E8              ; ---------- ---------- ----------
 151+ 93E8              ;
 152+ 93E8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93E8
 154+ 93E8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93EA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93EB CD 04 94     	call DESPLZ_DER
 157+ 93EE C1           	pop bc
 158+ 93EF 10 F9        	djnz 5B
 159+ 93F1 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93F4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93F5 22 9D 85     	ld (Posicion_actual),hl
 162+ 93F8 CD 50 96     	call Genera_coordenadas
 163+ 93FB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 93FD
 165+ 93FD              ; ---------- ---------- ----------
 166+ 93FD
 167+ 93FD 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 9400 CD 04 94     	call DESPLZ_DER
 169+ 9403 C9           2 ret
 170+ 9404
 171+ 9404              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9404              ;
 173+ 9404              ;	22/9/22
 174+ 9404              ;
 175+ 9404
 176+ 9404 CD 13 94     DESPLZ_DER call Desplaza_derecha
 177+ 9407 CD 5F 94         call modifica_parametros_1er_DESPLZ_2
 178+ 940A CD 88 94         call Ciclo_completo
 179+ 940D 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9410 CB FE        	set 7,(hl)
 181+ 9412 C9           	ret
 182+ 9413
 183+ 9413              ; ******************************************************************************************************************************************************************************************
 184+ 9413              ;	15/02/23
 185+ 9413              ;
 186+ 9413
 187+ 9413 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9416 47           	ld b,a
 189+ 9417 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 941A 23           1 inc hl
 191+ 941B 23           	inc hl
 192+ 941C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 941E 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9421 CD 0B 88     	call Extrae_address
 195+ 9424 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9427
 197+ 9427              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9427
 199+ 9427              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9427              ; Cuántos movimientos hemos hecho ??
 201+ 9427              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9427
 203+ 9427 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 942A EB           	ex de,hl
 205+ 942B A7           	and a
 206+ 942C ED 52        	sbc hl,de
 207+ 942E CB 3D        	srl l
 208+ 9430 3E 08        6 ld a,8
 209+ 9432 95           	sub l
 210+ 9433 30 1E        	jr nc,3F
 211+ 9435
 212+ 9435              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9435              ; B="0".
 214+ 9435
 215+ 9435 04           4 inc b
 216+ 9436 3C           	inc a
 217+ 9437 20 FC        	jr nz,4B
 218+ 9439 78           	ld a,b
 219+ 943A 08           	ex af,af
 220+ 943B 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 943E 23           5 inc hl
 222+ 943F 23           	inc hl
 223+ 9440 10 FC        	djnz 5B
 224+ 9442 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9445 CD 0B 88     	call Extrae_address
 226+ 9448 22 9F 85     	ld (Puntero_objeto),hl
 227+ 944B
 228+ 944B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 944B              ; _(Posicion_actual).
 230+ 944B
 231+ 944B 21 9D 85     	ld hl,Posicion_actual
 232+ 944E 34           	inc (hl)
 233+ 944F 08               ex af,af
 234+ 9450 6F           	ld l,a
 235+ 9451 18 DD        	jr 6B
 236+ 9453
 237+ 9453              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9453
 239+ 9453 47           3 ld b,a
 240+ 9454 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9457 23           2 inc hl
 242+ 9458 23           	inc hl
 243+ 9459 10 FC        	djnz 2B
 244+ 945B 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 945E C9           8 ret
 246+ 945F
 247+ 945F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 945F              ;
 249+ 945F              ;	24/7/22
 250+ 945F              ;
 251+ 945F              ;	modifica_parametros_1er_DESPLZ_2
 252+ 945F              ;
 253+ 945F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 945F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 945F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 945F
 257+ 945F 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9462 A7           	and a
 259+ 9463 20 1F        	jr nz,1F
 260+ 9465 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9467 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 946A
 263+ 946A 21 9C 85     	ld hl,Columns
 264+ 946D 34           	inc (hl)
 265+ 946E 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9471 E6 01        	and 1
 267+ 9473 28 0F        	jr z,1F
 268+ 9475 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9478 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9479 22 9D 85     	ld (Posicion_actual),hl
 271+ 947C CD 50 96     	call Genera_coordenadas
 272+ 947F CD E4 95     	call Inc_CTRL_DESPLZ
 273+ 9482 18 03        	jr 2F
 274+ 9484 CD E4 95     1 call Inc_CTRL_DESPLZ
 275+ 9487 C9           2 ret
 276+ 9488
 277+ 9488              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9488              ;
 279+ 9488              ;	24/7/22
 280+ 9488              ;
 281+ 9488              ;	Ciclo_completo.
 282+ 9488              ;
 283+ 9488              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9488              ;
 285+ 9488              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9488              ; 	Decrementamos (Columns).
 287+ 9488              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9488              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9488
 290+ 9488
 291+ 9488 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 948B FE FF        	cp $ff
 293+ 948D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 948F E6 F0        	and $f0
 295+ 9491 20 28        	jr nz,3F
 296+ 9493
 297+ 9493              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9493
 299+ 9493 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9496 47           	ld b,a
 301+ 9497 3E F8        	ld a,$f8
 302+ 9499 80           	add b
 303+ 949A 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 949D 18 1C        	jr 3F
 305+ 949F 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94A2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94A3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94A4 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 94A7 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 94AA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 94AC 20 0A        	jr nz,2F
 312+ 94AE 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 94B1 23           	inc hl
 314+ 94B2 22 9D 85     	ld (Posicion_actual),hl
 315+ 94B5 CD 50 96     	call Genera_coordenadas
 316+ 94B8
 317+ 94B8              ; Inicia el puntero de Sprite.
 318+ 94B8
 319+ 94B8 CD 22 88     2 call Inicia_puntero_objeto_der
 320+ 94BB C9           3 ret
 321+ 94BC
 322+ 94BC              ; ******************************************************************************************************************************************************************************************
 323+ 94BC              ;
 324+ 94BC              ;	15/02/23
 325+ 94BC              ;
 326+ 94BC              ;	Mov_left.
 327+ 94BC              ;
 328+ 94BC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 94BC              ;
 330+ 94BC              Mov_left
 331+ 94BC
 332+ 94BC 21 C9 85     	ld hl,Ctrl_0
 333+ 94BF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 94C1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 94C1              ; 																	; _ en el caso de que no lo haya.
 336+ 94C1 3A C9 85     	ld a,(Ctrl_0)
 337+ 94C4 CB 77        	bit 6,a
 338+ 94C6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94C8
 340+ 94C8 CD DE 95     	call Stop_Amadeus_left
 341+ 94CB C8           	ret z
 342+ 94CC 20 4A        	jr nz,8F
 343+ 94CE
 344+ 94CE 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94D1 A7           	and a
 346+ 94D2 20 44        	jr nz,8F
 347+ 94D4
 348+ 94D4 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94D7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94D8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94DA
 352+ 94DA              ; ---------- ---------- ----------
 353+ 94DA
 354+ 94DA 3A B0 85     	ld a,(Vel_left)
 355+ 94DD FE 02        	cp 2
 356+ 94DF 28 0F        	jr z,1F
 357+ 94E1 38 04        	jr c,6F
 358+ 94E3 FE 04        	cp 4
 359+ 94E5 28 12        	jr z,7F
 360+ 94E7
 361+ 94E7              ; ---------- ---------- ----------
 362+ 94E7
 363+ 94E7 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94EA FE F8        	cp $f8
 365+ 94EC 20 2A        	jr nz,8F
 366+ 94EE 18 10        	jr 4F
 367+ 94F0 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94F3 FE F9        	cp $f9
 369+ 94F5 20 21        	jr nz,8F
 370+ 94F7 18 07        	jr 4F
 371+ 94F9 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 94FC FE FB        	cp $fb
 373+ 94FE 20 18        	jr nz,8F
 374+ 9500
 375+ 9500              ; ---------- ---------- ----------
 376+ 9500
 377+ 9500              4
 378+ 9500 CD 06 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9503              ;	call Reinicio
 380+ 9503
 381+ 9503              ; ---------- ---------- ----------
 382+ 9503
 383+ 9503 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9505 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9506
 386+ 9506              ;	ld hl,(Indice_Sprite_izq)
 387+ 9506              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9506
 389+ 9506 CD 1F 95     	call DESPLZ_IZQ
 390+ 9509 C1           	pop bc
 391+ 950A 10 F9        	djnz 5B
 392+ 950C 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 950F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9510 22 9D 85     	ld (Posicion_actual),hl
 395+ 9513 CD 50 96     	call Genera_coordenadas
 396+ 9516 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9518
 398+ 9518              ; ---------- ---------- ----------
 399+ 9518
 400+ 9518              ; Movemos, no hay recolocación.
 401+ 9518
 402+ 9518 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 951B CD 1F 95     	call DESPLZ_IZQ
 404+ 951E C9           2 ret
 405+ 951F
 406+ 951F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 951F              ;
 408+ 951F              ;	22/9/22
 409+ 951F
 410+ 951F              DESPLZ_IZQ
 411+ 951F
 412+ 951F CD 2E 95     	call Desplaza_izquierda
 413+ 9522 CD 7A 95         call modifica_parametros_1er_DESPLZ
 414+ 9525 CD A2 95     	call Ciclo_completo_2
 415+ 9528 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 952B CB BE        	res 7,(hl)
 417+ 952D C9           	ret
 418+ 952E
 419+ 952E              Desplaza_izquierda
 420+ 952E
 421+ 952E 3A B0 85     	ld a,(Vel_left)
 422+ 9531 47           	ld b,a
 423+ 9532 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9535 23           1 inc hl
 425+ 9536 23           	inc hl
 426+ 9537 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9539 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 953C CD 0B 88     	call Extrae_address
 429+ 953F 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9542
 431+ 9542              ; Modifica (Puntero_DESPLZ_der).
 432+ 9542
 433+ 9542              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9542              ; Cuántos movimientos hemos hecho ??
 435+ 9542              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9542
 437+ 9542 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9545 EB           	ex de,hl
 439+ 9546 A7           	and a
 440+ 9547 ED 52        	sbc hl,de
 441+ 9549 CB 3D        	srl l
 442+ 954B 3E 08        6 ld a,8
 443+ 954D 95           	sub l
 444+ 954E 30 1E        	jr nc,3F
 445+ 9550
 446+ 9550              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9550              ; B="0".
 448+ 9550
 449+ 9550 04           4 inc b
 450+ 9551 3C           	inc a
 451+ 9552 20 FC        	jr nz,4B
 452+ 9554 78           	ld a,b
 453+ 9555 08           	ex af,af
 454+ 9556 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9559 23           5 inc hl
 456+ 955A 23           	inc hl
 457+ 955B 10 FC        	djnz 5B
 458+ 955D 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9560 CD 0B 88     	call Extrae_address
 460+ 9563 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9566
 462+ 9566              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9566              ; _(Posicion_actual).
 464+ 9566
 465+ 9566 21 9D 85     	ld hl,Posicion_actual
 466+ 9569 35           	dec (hl)
 467+ 956A 08           	ex af,af
 468+ 956B 6F           	ld l,a
 469+ 956C 18 DD        	jr 6B
 470+ 956E
 471+ 956E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 956E
 473+ 956E 47           3 ld b,a
 474+ 956F 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9572 23           2 inc hl
 476+ 9573 23           	inc hl
 477+ 9574 10 FC        	djnz 2B
 478+ 9576 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9579 C9           8 ret
 480+ 957A
 481+ 957A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 957A              ;
 483+ 957A              ;	modifica_parametros_1er_DESPLZ
 484+ 957A              ;
 485+ 957A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 957A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 957A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 957A
 489+ 957A 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 957D A7           	and a
 491+ 957E 20 1E        	jr nz,1F
 492+ 9580 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9581 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9584 21 9C 85     	ld hl,Columns
 495+ 9587 34           	inc (hl)
 496+ 9588 3A AF 85     	ld a,(Cuad_objeto)
 497+ 958B E6 01        	and 1
 498+ 958D 20 0F        	jr nz,1F
 499+ 958F 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9592 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9593 22 9D 85     	ld (Posicion_actual),hl
 502+ 9596 CD 50 96     	call Genera_coordenadas
 503+ 9599 CD F5 95     	call Dec_CTRL_DESPLZ
 504+ 959C 18 03        	jr 2F
 505+ 959E CD F5 95     1 call Dec_CTRL_DESPLZ
 506+ 95A1 C9           2 ret
 507+ 95A2
 508+ 95A2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95A2
 510+ 95A2 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95A5 FE F7        	cp $f7
 512+ 95A7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 95A9 30 2C        	jr nc,3F
 514+ 95AB
 515+ 95AB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 95AB
 517+ 95AB 06 00        	ld b,0
 518+ 95AD 04           4 inc b
 519+ 95AE 3C           	inc a
 520+ 95AF FE F7        	cp $f7
 521+ 95B1 20 FA        	jr nz,4B
 522+ 95B3 3E FF        	ld a,$ff
 523+ 95B5 90           	sub b
 524+ 95B6 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 95B9 18 1C        	jr 3F
 526+ 95BB
 527+ 95BB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 95BB
 529+ 95BB 21 9C 85     1 ld hl,Columns
 530+ 95BE 35           	dec (hl)
 531+ 95BF AF           	xor a
 532+ 95C0 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 95C3 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95C6 E6 01        	and 1
 535+ 95C8 28 0A        	jr z,2F
 536+ 95CA 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95CD 2B           	dec hl
 538+ 95CE 22 9D 85     	ld (Posicion_actual),hl
 539+ 95D1 CD 50 96     	call Genera_coordenadas
 540+ 95D4
 541+ 95D4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95D4
 543+ 95D4 CD 35 88     2 call Inicia_puntero_objeto_izq
 544+ 95D7 C9           3 ret
 545+ 95D8
 546+ 95D8              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95D8              ;
 548+ 95D8              ;	19/10/22
 549+ 95D8              ;
 550+ 95D8              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95D8              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95D8
 553+ 95D8 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95DB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95DD C9           	ret
 556+ 95DE
 557+ 95DE              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95DE              ;
 559+ 95DE              ;	19/10/22
 560+ 95DE              ;
 561+ 95DE              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95DE              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95DE
 564+ 95DE 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95E1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95E3 C9           	ret
 567+ 95E4
 568+ 95E4              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95E4              ;
 570+ 95E4              ;	24/7/22
 571+ 95E4              ;
 572+ 95E4              ;	Inc_CTRL_DESPLZ
 573+ 95E4              ;
 574+ 95E4              ;
 575+ 95E4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95E4
 577+ 95E4 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95E7 3A B1 85     	ld a,(Vel_right)
 579+ 95EA A7           	and a
 580+ 95EB 28 06        	jr z,1F
 581+ 95ED 47           	ld b,a
 582+ 95EE 34           3 inc (hl)
 583+ 95EF 10 FD        	djnz 3B
 584+ 95F1 18 01        	jr 2F
 585+ 95F3 34           1 inc (hl)
 586+ 95F4 C9           2 ret
 587+ 95F5
 588+ 95F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95F5              ;
 590+ 95F5              ;	5/2/23
 591+ 95F5              ;
 592+ 95F5              ;	Dec_CTRL_DESPLZ
 593+ 95F5              ;
 594+ 95F5              ;
 595+ 95F5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95F5
 597+ 95F5 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 95F8 3A B0 85     	ld a,(Vel_left)
 599+ 95FB A7           	and a
 600+ 95FC 28 06        	jr z,1F
 601+ 95FE 47           	ld b,a
 602+ 95FF 35           3 dec (hl)
 603+ 9600 10 FD        	djnz 3B
 604+ 9602 18 01        	jr 2F
 605+ 9604 35           1 dec (hl)
 606+ 9605 C9           2 ret
 607+ 9606
 608+ 9606              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9606
 610+ 9606 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9609 01 1F 00     	ld bc,31
 612+ 960C A7           	and a
 613+ 960D ED 4A        	adc hl,bc
 614+ 960F 22 9D 85     	ld (Posicion_actual),hl
 615+ 9612 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9615 CB C6        	set 0,(hl)
 617+ 9617 C9           	ret
 618+ 9618
 619+ 9618              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9618
 621+ 9618 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 961B 01 1F 00     	ld bc,31
 623+ 961E A7           	and a
 624+ 961F ED 42        	sbc hl,bc
 625+ 9621 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9624 21 C9 85     	ld hl,Ctrl_0
 627+ 9627 CB CE        	set 1,(hl)
 628+ 9629 C9           	ret
 629+ 962A
 630+ 962A              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 962A
 632+ 962A 24           Reaparece_abajo inc h
 633+ 962B 01 E0 17     	ld bc,$17e0
 634+ 962E A7           	and a
 635+ 962F ED 4A        	adc hl,bc
 636+ 9631 22 9D 85     	ld (Posicion_actual),hl
 637+ 9634 21 C9 85     	ld hl,Ctrl_0
 638+ 9637 CB D6        	set 2,(hl)
 639+ 9639 C9           	ret
 640+ 963A
 641+ 963A              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 963A
 643+ 963A 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 963D A7           	and a
 645+ 963E ED 42        	sbc hl,bc
 646+ 9640 22 9D 85     	ld (Posicion_actual),hl
 647+ 9643 21 C9 85     	ld hl,Ctrl_0
 648+ 9646 CB DE        	set 3,(hl)
 649+ 9648 C9           	ret
 650+ 9649
 651+ 9649              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9649
 653+ 9649 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 964C 22 9D 85     	ld (Posicion_actual),hl
 655+ 964F C9           	ret
# file closed: Direcciones.asm
1036  9650              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9650              ; ------------------------------------------------------------------------
   2+ 9650              ;
   3+ 9650              ;	02/04/23
   4+ 9650              ;
   5+ 9650              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9650              ;	Fila superior "0", Columna izquierda "0".
   7+ 9650              ;
   8+ 9650              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9650              ;
  10+ 9650              ;	Modifica: A,BC y DE.
  11+ 9650
  12+ 9650 C5           Genera_coordenadas push bc
  13+ 9651 E5           	push hl
  14+ 9652 D5           	push de
  15+ 9653
  16+ 9653 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9656
  18+ 9656 7D           	ld a,l
  19+ 9657 E6 1F        	and $1f
  20+ 9659 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 965C
  22+ 965C CD 24 93     	call calcula_tercio
  23+ 965F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9660
  25+ 9660 1E 00        	ld e,0
  26+ 9662 7D           	ld a,l
  27+ 9663 E6 E0        	and $e0
  28+ 9665 28 01        	jr z,1F
  29+ 9667 04           	inc b
  30+ 9668
  31+ 9668 04           1 inc b
  32+ 9669 05           	dec b
  33+ 966A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 966C              ;														; _ , salimos.
  35+ 966C 1C           3 inc e
  36+ 966D D6 20        	sub 32
  37+ 966F 20 FB        	jr nz,3B
  38+ 9671 10 F5        	djnz 1B
  39+ 9673
  40+ 9673 7B           2 ld a,e
  41+ 9674 32 A2 85     	ld (Coordenada_y),a
  42+ 9677
  43+ 9677 D1           	pop de
  44+ 9678 E1           	pop hl
  45+ 9679 C1           	pop bc
  46+ 967A
  47+ 967A C9           	ret
  48+ 967B
  49+ 967B              ; ------------------------------------------------------------------------
  50+ 967B              ;	28/03/23
  51+ 967B              ;
  52+ 967B              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 967B              ;	Fila superior "0", Columna izquierda "0".
  54+ 967B              ;
  55+ 967B              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 967B              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 967B              ;
  58+ 967B              ;		DE="$120d"
  59+ 967B              ;
  60+ 967B              ;		D, (Coordenada_X), Columnas, $12
  61+ 967B              ;		E, (Coordenada_y), Filas, $0d
  62+ 967B              ;
  63+ 967B              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 967B
  65+ 967B              ;	Modifica: A,BC y DE.
  66+ 967B
  67+ 967B
  68+ 967B              Genera_coordenadas_disparo
  69+ 967B
  70+ 967B              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 967B
  72+ 967B 7D           	ld a,l
  73+ 967C E6 1F        	and $1f
  74+ 967E 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 967F CD 24 93     	call calcula_tercio
  76+ 9682 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9683 1E 00        	ld e,0
  78+ 9685 7D           	ld a,l
  79+ 9686 E6 E0        	and $e0
  80+ 9688 28 01        	jr z,1F
  81+ 968A 04           	inc b
  82+ 968B 1C           1 inc e
  83+ 968C D6 20        	sub 32
  84+ 968E 20 FB        	jr nz,1B
  85+ 9690 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9692 C9           	ret
  87+ 9693
# file closed: Genera_coordenadas.asm
1037  9693              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9693
   2+ 9693
   3+ 9693              ;   11/8/22
   4+ 9693              ;
   5+ 9693              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9693              ;
   7+ 9693              ;   Mov_obj.asm
   8+ 9693              ;
   9+ 9693              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9693              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9693              ;
  12+ 9693              ;   Codificación:
  13+ 9693              ;
  14+ 9693              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9693
  16+ 9693              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9693
  18+ 9693 02 40 00     Arriba db 2,%01000000,0
  19+ 9696 02 80 00     Abajo db 2,%10000000,0
  20+ 9699 02 20 00     Derecha db 2,%00100000,0
  21+ 969C 02 10 00     Izquierda db 2,%00010000,0
  22+ 969F 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96A3 60 42 60 40
  22+ 96A7 63
  23+ 96A8 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 96AC 22 A3 80 A0
  24+ 96B0 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 96B4 84 A0 83 A0
  25+ 96B8 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 96BC 80 A3 22 A0
  26+ 96C0 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 96C4 40 60 42 60
  27+ 96C8 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96CC
  29+ 96CC 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96D0 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96D4 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96D8 84 00
  32+ 96DA 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96DE 84 00
  33+ 96E0 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96E4 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96E8 1F 1F 1F 1F
  35+ 96EC 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96F0 1F 1F 1F 1F
  35+ 96F4 1F
  36+ 96F5 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 96F9 2F 2F 2F 2F
  36+ 96FD 2F 2F
  37+ 96FF 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9703 2F 2F 00
  38+ 9706
  39+ 9706              ; ----- ----- ----- ----- -----
  40+ 9706
  41+ 9706 E4 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9708 E0 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 970A 9C 96        Indice_mov_Izquierda defw Izquierda
  44+ 970C 99 96        Indice_mov_Derecha defw Derecha
  45+ 970E 96 96        Indice_mov_Abajo defw Abajo
  46+ 9710 93 96        Indice_mov_Arriba defw Arriba
  47+ 9712 D0 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9714 D4 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9716 CC 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9718 DA 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 971A 9F 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 971C              ; ----- ----- ----- ----- -----
  53+ 971C
  54+ 971C 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 971F A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9720 28 02            jr z,1F
  57+ 9722 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9724 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9727 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9729 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 972C              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 972C 2A CD 85         ld hl,(Puntero_mov)
  63+ 972F 7E               ld a,(hl)
  64+ 9730 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9733 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9734 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9737
  68+ 9737 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 973A A7               and a
  70+ 973B 20 0C            jr nz,12F
  71+ 973D 2A CD 85         ld hl,(Puntero_mov)
  72+ 9740 7E               ld a,(hl)
  73+ 9741 A7               and a
  74+ 9742 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9744 E6 0F            and $0f
  76+ 9746 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9749              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9749 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 974C CB 7E            bit 7,(hl)
  80+ 974E 28 03            jr z,2F
  81+ 9750 CD 42 93         call Mov_down
  82+ 9753 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9756 CB 76            bit 6,(hl)
  84+ 9758 28 03            jr z,3F
  85+ 975A CD 70 93         call Mov_up
  86+ 975D 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9760 CB 6E            bit 5,(hl)
  88+ 9762 28 03            jr z,4F
  89+ 9764 CD 9E 93         call Mov_right
  90+ 9767 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 976A CB 66            bit 4,(hl)
  92+ 976C 28 03            jr z,5F
  93+ 976E CD BC 94         call Mov_left
  94+ 9771
  95+ 9771              ; ---------- --------- --------- ---------- ----------
  96+ 9771
  97+ 9771 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9774 A7               and a
  99+ 9775 28 07            jr z,6F
 100+ 9777 3D               dec a
 101+ 9778 32 D1 85         ld (Repetimos_db),a
 102+ 977B 28 01            jr z,6f
 103+ 977D C9           11 ret
 104+ 977E 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9781 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9782 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9785 23               inc hl
 108+ 9786 22 CD 85         ld (Puntero_mov),hl
 109+ 9789 18 F2            jr 11B
 110+ 978B 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 978E 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9791 47               ld b,a
 113+ 9792 23           8 inc hl
 114+ 9793 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9795 5E               ld e,(hl)
 116+ 9796 23               inc hl
 117+ 9797 56               ld d,(hl)
 118+ 9798 EB               ex de,hl
 119+ 9799 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 979C 18 DF            jr 11B
 121+ 979E
 122+ 979E              ; ---------- --------- --------- ---------- ----------
 123+ 979E              ;
 124+ 979E              ;   11/8/22
 125+ 979E              ;
 126+ 979E              ;   Prepara_Puntero_mov
 127+ 979E
 128+ 979E E5           Prepara_Puntero_mov push hl
 129+ 979F D5               push de
 130+ 97A0 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 97A3 5E               ld e,(hl)
 132+ 97A4 23               inc hl
 133+ 97A5 56               ld d,(hl)
 134+ 97A6 EB               ex de,hl
 135+ 97A7 22 CD 85         ld (Puntero_mov),hl
 136+ 97AA D1               pop de
 137+ 97AB E1               pop hl
 138+ 97AC C9               ret
 139+ 97AD
 140+ 97AD              ; ---------- --------- --------- ---------- ----------
 141+ 97AD              ;
 142+ 97AD              ;   11/8/22
 143+ 97AD              ;
 144+ 97AD              ;   Reinicia_el_movimiento
 145+ 97AD
 146+ 97AD CD 9E 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 97B0 AF               xor a
 148+ 97B1 32 CF 85         ld (Contador_db_mov),a
 149+ 97B4 32 D0 85         ld (Incrementa_puntero),a
 150+ 97B7 C3 1C 97         jp Movimiento
 151+ 97BA C9               ret
 152+ 97BB              ; ---------- --------- --------- ---------- ----------
 153+ 97BB
 154+ 97BB
 155+ 97BB
 156+ 97BB
 157+ 97BB
 158+ 97BB
 159+ 97BB
 160+ 97BB
 161+ 97BB
 162+ 97BB
 163+ 97BB
 164+ 97BB
 165+ 97BB
 166+ 97BB
 167+ 97BB
 168+ 97BB
 169+ 97BB
 170+ 97BB
# file closed: Patrones_de_mov.asm
1038  97BB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 97BB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 97BB              ;
   3+ 97BB              ;	3/1/23
   4+ 97BB              ;
   5+ 97BB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 97BB
   7+ 97BB              ;	ADC HL,SP	LD (addr),SP
   8+ 97BB              ;	ADD HL,SP	LD SP,(addr)
   9+ 97BB              ;	ADD IX,SP	LD SP,nn
  10+ 97BB              ; 	ADD IY,SP	LD SP,HL
  11+ 97BB              ;				LD SP,IX
  12+ 97BB              ;	DEC SP		LD SP,IY
  13+ 97BB
  14+ 97BB              ;	EX (SP),HL
  15+ 97BB              ;	EX (SP),IX
  16+ 97BB              ;	EX (SP),IY
  17+ 97BB
  18+ 97BB              ;	INC SP
  19+ 97BB
  20+ 97BB
  21+ 97BB                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 DF 85      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E5 85         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E3 85     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B DF 85  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1039  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1040  7FE6
1041  7FE6              	SAVESNA "Pruebas.sna", START
1042  7FE6
1043  7FE6
1044  7FE6
# file closed: Banco_de_pruebas.asm
