# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 9A 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 60 Bytes por entidad.
  96+ 8468
  97+ 8468 B2 84        	defw Entidad_1
  98+ 846A EE 84        	defw Entidad_2
  99+ 846C 2A 85        	defw Entidad_3
 100+ 846E 66 85        	defw Entidad_4
 101+ 8470 A2 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 142+ 84A7
 143+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AE
 146+ 84AE 00           	db 0 											; (Columnas).
 147+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B1 00           	db 0											; (Limite_vertical).
 149+ 84B2
 150+ 84B2              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B2
 152+ 84B2 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 153+ 84B4 00 00        	defw 0											; (Posicion_actual).
 154+ 84B6 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BB
 157+ 84BB 00           	db %00000000 									; (Attr).
 158+ 84BC
 159+ 84BC 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 84BE 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 84C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C4
 164+ 84C4 00 00        	defw 0											; (Posicion_inicio).
 165+ 84C6 00           	db 0											; (Cuad_objeto).
 166+ 84C7
 167+ 84C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CB
 169+ 84CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CC
 171+ 84CC 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CE 00 00        	defw 0											;	" " " " " " "
 173+ 84D0 00 00        	defw 0											;	" " " " " " "
 174+ 84D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D6
 176+ 84D6 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D8 00 00        	defw 0											;	" " " " " " "
 178+ 84DA 00 00        	defw 0											;	" " " " " " "
 179+ 84DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84E0
 181+ 84E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 182+ 84E3
 183+ 84E3 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84EA
 186+ 84EA 00           	db 0 											; (Columnas).
 187+ 84EB 00 00        	defw 0											; (Limite_horizontal).
 188+ 84ED 00           	db 0											; (Limite_vertical).
 189+ 84EE
 190+ 84EE              ; ---------- ---------- ---------- ---------- ----------
 191+ 84EE
 192+ 84EE 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84F0 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F2 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F7
 197+ 84F7 02           	db %00000010									; (Attr).
 198+ 84F8
 199+ 84F8 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84FA 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 8500
 204+ 8500 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8502 02           	db 2											; (Cuad_objeto).
 206+ 8503
 207+ 8503 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8507
 209+ 8507 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 8508
 211+ 8508 00 00        	db 0,0											; Variables_de_borrado
 212+ 850A 00 00        	defw 0										 	;	" " " " " " "
 213+ 850C 00 00        	defw 0											;	" " " " " " "
 214+ 850E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8512
 216+ 8512 00 00        	db 0,0											; Variables_de_pintado
 217+ 8514 00 00        	defw 0											;	" " " " " " "
 218+ 8516 00 00        	defw 0											;	" " " " " " "
 219+ 8518 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851C
 221+ 851C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 222+ 851F
 223+ 851F 6D 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8523 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 225+ 8526
 226+ 8526 00           	db 0 											; (Columnas).
 227+ 8527 00 00        	defw 0											; (Limite_horizontal).
 228+ 8529 00           	db 0											; (Limite_vertical).
 229+ 852A
 230+ 852A              ; ---------- ---------- ---------- ---------- ----------
 231+ 852A
 232+ 852A 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 233+ 852C 00 00        	defw 0                                          ; (Posicion_actual).
 234+ 852E 00 00        	defw 0											; (Puntero_objeto).
 235+ 8530 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8533
 237+ 8533 04           	db %00000100									; (Attr).
 238+ 8534
 239+ 8534 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 240+ 8536 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 241+ 8538
 242+ 8538 00 00        	defw 0											; (Puntero_DESPLZ_der).
 243+ 853A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 244+ 853C
 245+ 853C A1 47        	defw $47a1                                      ; (Posicion_inicio).
 246+ 853E 01           	db 1											; (Cuad_objeto).
 247+ 853F
 248+ 853F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 249+ 8543
 250+ 8543 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 251+ 8544
 252+ 8544 00 00        	db 0,0											; Variables_de_borrado
 253+ 8546 00 00        	defw 0										 	;	" " " " " " "
 254+ 8548 00 00        	defw 0											;	" " " " " " "
 255+ 854A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 256+ 854E
 257+ 854E 00 00        	db 0,0											; Variables_de_pintado
 258+ 8550 00 00        	defw 0											;	" " " " " " "
 259+ 8552 00 00        	defw 0											;	" " " " " " "
 260+ 8554 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 261+ 8558
 262+ 8558 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 263+ 855B
 264+ 855B 61 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 265+ 855F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 266+ 8562
 267+ 8562 00           	db 0 											; (Columnas).
 268+ 8563 00 00        	defw 0											; (Limite_horizontal).
 269+ 8565 00           	db 0											; (Limite_vertical).
 270+ 8566
 271+ 8566              ; ---------- ---------- ---------- ---------- ----------
 272+ 8566
 273+ 8566 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 274+ 8568 00 00        	defw 0                                          ; (Posicion_actual).
 275+ 856A 00 00        	defw 0 											; (Puntero_objeto).
 276+ 856C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 856F
 278+ 856F 01           	db %00000001									; (Attr).
 279+ 8570
 280+ 8570 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 281+ 8572 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 282+ 8574
 283+ 8574 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8576 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8578
 286+ 8578 BE 47        	defw $47be                                      ; (Posicion_inicio).
 287+ 857A 00           	db 0											; (Cuad_objeto).
 288+ 857B
 289+ 857B 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 857F
 291+ 857F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 8580
 293+ 8580 00 00        	db 0,0											; Variables_de_borrado
 294+ 8582 00 00        	defw 0										 	;	" " " " " " "
 295+ 8584 00 00        	defw 0											;	" " " " " " "
 296+ 8586 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 858A
 298+ 858A 00 00        	db 0,0											; Variables_de_pintado
 299+ 858C 00 00        	defw 0											;	" " " " " " "
 300+ 858E 00 00        	defw 0											;	" " " " " " "
 301+ 8590 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 8594
 303+ 8594 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 8597
 305+ 8597 6D 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
 306+ 859B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 859E
 308+ 859E 00           	db 0 											; (Columnas).
 309+ 859F 00 00        	defw 0											; (Limite_horizontal).
 310+ 85A1 00           	db 0											; (Limite_vertical).
 311+ 85A2
 312+ 85A2              ; ---------- ---------- ---------- ---------- ----------
 313+ 85A2
 314+ 85A2 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 315+ 85A4 00 00        	defw 0                                          ; (Posicion_actual).
 316+ 85A6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85A8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85AB
 319+ 85AB 01           	db %00000001									; (Attr).
 320+ 85AC
 321+ 85AC 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 322+ 85AE 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 323+ 85B0
 324+ 85B0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 325+ 85B2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 326+ 85B4
 327+ 85B4 0A 40        	defw $400a                                      ; (Posicion_inicio).
 328+ 85B6 01           	db 1											; (Cuad_objeto).
 329+ 85B7
 330+ 85B7 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 331+ 85BB
 332+ 85BB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 333+ 85BC
 334+ 85BC 00 00        	db 0,0											; Variables_de_borrado
 335+ 85BE 00 00        	defw 0										 	;	" " " " " " "
 336+ 85C0 00 00        	defw 0											;	" " " " " " "
 337+ 85C2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 338+ 85C6
 339+ 85C6 00 00        	db 0,0											; Variables_de_pintado
 340+ 85C8 00 00        	defw 0											;	" " " " " " "
 341+ 85CA 00 00        	defw 0											;	" " " " " " "
 342+ 85CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 343+ 85D0
 344+ 85D0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 345+ 85D3
 346+ 85D3 63 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 347+ 85D7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 348+ 85DA
 349+ 85DA 00           	db 0 											; (Columnas).
 350+ 85DB 00 00        	defw 0											; (Limite_horizontal).
 351+ 85DD 00           	db 0											; (Limite_vertical).
# file closed: Entidades_y_disparos.asm
  21  85DE
  22  85DE              ; ******************************************************************************************************************************************************************************************
  23  85DE              ; Constantes.
  24  85DE              ; ******************************************************************************************************************************************************************************************
  25  85DE              ;
  26  85DE              ; 8/11/22
  27  85DE              ;
  28  85DE              ; Constantes generales.
  29  85DE              ;
  30  85DE
  31  85DE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  85DE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  85DE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  85DE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  85DE
  36  85DE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  85DE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  85DE              ;                               				        ; De momento situamos este almacén en $7000.
  39  85DE              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  85DE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  85DE              ;                               				        ; De momento situamos este almacén en $7060.
  42  85DE
  43  85DE              ; ******************************************************************************************************************************************************************************************
  44  85DE              ; Variables.
  45  85DE              ; ******************************************************************************************************************************************************************************************
  46  85DE              ;
  47  85DE              ; 10/11/22
  48  85DE              ;
  49  85DE              ; Variables de DRAW. (Motor principal).
  50  85DE              ;
  51  85DE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  85DE
  53  85DE 02           Filas db 2												; Filas. [DRAW]
  54  85DF 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  85E0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  85E2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85E4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85E5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85E6
  60  85E6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85E6
  62  85E6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85E7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85E7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85E7 04           Attr db %00000100										; Atributos de la entidad:
  66  85E8
  67  85E8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85E8              ;
  69  85E8              ;	COLORES: 0 ..... NEGRO
  70  85E8              ;    		 1 ..... AZUL
  71  85E8              ; 			 2 ..... ROJO
  72  85E8              ;			 3 ..... MAGENTA
  73  85E8              ; 			 4 ..... VERDE
  74  85E8              ; 			 5 ..... CIAN
  75  85E8              ;			 6 ..... AMARILLO
  76  85E8              ; 			 7 ..... BLANCO
  77  85E8
  78  85E8 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85EA 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85EC 00 00        Puntero_DESPLZ_der defw 0
  81  85EE 00 00        Puntero_DESPLZ_izq defw 0
  82  85F0
  83  85F0 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85F2 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85F3
  86  85F3              ; Variables de objeto. (Características).
  87  85F3
  88  85F3 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85F4 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85F5 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85F6 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85F7
  93  85F7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85F8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85F8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85F8 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85FA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85FC 00 00        	defw 0
  99  85FE 00 00 00 00  	db 0,0,0,0
 100  8602
 101  8602 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  8604 00 00        	defw 0
 103  8606 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8608 00 00 00 00  	db 0,0,0,0
 105  860C
 106  860C              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  860C
 108  860C 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  860D              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  860D              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  860D              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  860D              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  860D              ;
 114  860D              ; 														DESCRIPCIÖN:
 115  860D              ;
 116  860D              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  860D              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  860D              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  860D              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  860D              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  860D              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  860D              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  860D              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  860D              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  860D              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  860D              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  860D              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  860D              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  860D              ;
 130  860D              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  860D              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  860D              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  860D
 134  860D 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  860E
 136  860E              ; Movimiento.
 137  860E
 138  860E
 139  860E 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 140  860F 6F 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 141  8611 00 00        Puntero_mov defw 0
 142  8613 00           Contador_db_mov db 0
 143  8614 00           Incrementa_puntero db 0
 144  8615 00           Repetimos_db db 0
 145  8616
 146  8616              ; Variables de funcionamiento. [DRAW].
 147  8616
 148  8616 00           Columnas db 0
 149  8617 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 150  8619              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 151  8619 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 152  861A
 153  861A              ; 60 Bytes por entidad.
 154  861A              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 155  861A              ;					         		---------;      ;---------
 156  861A
 157  861A
 158  861A              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 159  861A
 160  861A 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 161  861B
 162  861B              ;														DESCRIPCIÓN:
 163  861B              ;
 164  861B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 165  861B              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 166  861B              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 167  861B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 168  861B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 169  861B              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 170  861B
 171  861B              ; Gestión de ENTIDADES.
 172  861B
 173  861B 02           Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 174  861C 00 00        Puntero_store_entidades defw 0
 175  861E 00 00        Puntero_restore_entidades defw 0
 176  8620 00 00        Indice_restore defw 0
 177  8622 02           Numero_de_entidades db 2								; Nº de entidades en pantalla, (contando con Amadeus).
 178  8623 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  8624              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  8624              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  8624              ;														; _ (Numero_de_malotes)="0".
 182  8624 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  8626              ;														; _variable para almacenar lo posición del puntero_
 184  8626              ; 														; _de pila, SP.
 185  8626 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  8628              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  8628 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  862A              ;														; _el snapshot de los registros de la siguiente entidad.
 189  862A              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  862A 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  862C              ;														; _el snapshot de los registros del siguiente disparo.
 192  862C              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  862C
 194  862C              ;---------------------------------------------------------------------------------------------------------------
 195  862C
 196  862C              ; Gestión de Disparos.
 197  862C
 198  862C 00           Numero_de_disparotes db 0
 199  862D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 200  862F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 201  8631 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 202  8632              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 203  8632              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 204  8632 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 205  8634              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 206  8634              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 207  8634              ;														; _produzca colisión.
 208  8634 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 209  8636              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 210  8636 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 211  8639              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 212  8639 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 213  863C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 214  863C
 215  863C              ;---------------------------------------------------------------------------------------------------------------
 216  863C
 217  863C              ; Relojes y temporizaciones.
 218  863C
 219  863C 01           Habilita_disparo_Amadeus db 1
 220  863D 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 221  863E 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 222  863F
 223  863F 01           Habilita_disparo_entidad db 1
 224  8640 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 225  8641 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 226  8642
 227  8642              ;---------------------------------------------------------------------------------------------------------------
 228  8642
 229  8642              ; Gestión de FRAMES.
 230  8642
 231  8642 00           Switch db 0
 232  8643
 233  8643              ; Variables de Raster y localización en pantalla.
 234  8643
 235  8643 00 FF        Temp_Raster defw $ff00
 236  8645
 237  8645              ; Rutina principal *************************************************************************************************************************************************************************
 238  8645              ;
 239  8645              ;	14/11/22
 240  8645
 241  8645 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 242  8648
 243  8648 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 244  864A ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 245  864C ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 246  864E F3           	DI
 247  864F
 248  864F 3E 07        	ld a,%00000111
 249  8651 CD 83 93     	call Cls
 250  8654
 251  8654              ;	call Pinta_FILAS
 252  8654
 253  8654 CD 33 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 254  8657
 255  8657 21 22 86     	ld hl,Numero_de_entidades
 256  865A 46           	ld b,(hl)
 257  865B 04           	inc b
 258  865C 05           	dec b
 259  865D 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 260  865F
 261  865F CD 01 88     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 262  8662              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 263  8662
 264  8662              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 265  8662              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 266  8662              ;	Pintamos el resto de entidades:
 267  8662
 268  8662              ;	INICIA ENTIDADES !!!!!
 269  8662
 270  8662 C5           1 push bc  												; Guardo el contador de entidades.
 271  8663 CD 5B 88      	call Inicia_Puntero_objeto
 272  8666 CD D3 8D     	call Draw
 273  8669 CD A0 7F     	call Guarda_foto_registros
 274  866C CD A3 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 275  866F C1           	pop bc
 276  8670 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 277  8672
 278  8672              ; 	INICIA AMADEUS !!!!!
 279  8672
 280  8672 CD 0A 89     3 call Restore_Amadeus
 281  8675 CD 5B 88     	call Inicia_Puntero_objeto
 282  8678 CD D3 8D     	call Draw
 283  867B CD A0 7F     	call Guarda_foto_registros
 284  867E
 285  867E 11 76 84     	ld de,Amadeus_db
 286  8681 CD 1C 89     	call Store_Amadeus
 287  8684
 288  8684              ; 	INICIA DISPAROS !!!!!
 289  8684
 290  8684 CD 17 88     	call Inicia_Puntero_Disparo_Entidades
 291  8687 CD 1E 88     	call Inicia_Puntero_Disparo_Amadeus
 292  868A
 293  868A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 294  868A
 295  868A CD 01 88     	call Inicia_punteros_de_entidades
 296  868D CD E3 88     	call Restore_entidad
 297  8690
 298  8690 3A 22 86     	ld a,(Numero_de_entidades)
 299  8693 3C           	inc a
 300  8694 32 23 86     	ld (Numero_de_malotes),a
 301  8697
 302  8697 FB           2 ei
 303  8698 18 FD        	jr 2B
 304  869A
 305  869A              ; -----------------------------------------------------------------------------------
 306  869A
 307  869A              Frame
 308  869A
 309  869A              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 310  869A              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 311  869A
 312  869A              ; PINTAMOS.
 313  869A
 314  869A 3E 02            ld a,2
 315  869C D3 FE            out ($fe),a
 316  869E CD D7 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 317  86A1 CD 10 91     	call Extrae_foto_disparos
 318  86A4 3E 01            ld a,1
 319  86A6 D3 FE            out ($fe),a
 320  86A8
 321  86A8              ; ----------------------------------------------------------------------
 322  86A8
 323  86A8              ; RELOJES.
 324  86A8
 325  86A8 21 3C 86     	ld hl,Habilita_disparo_Amadeus
 326  86AB 11 3E 86     	ld de,Temporiza_disparo_Amadeus
 327  86AE CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 328  86B1
 329  86B1 21 3F 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 330  86B4 11 41 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 331  86B7 CD D5 7F     	call Habilita_disparos
 332  86BA
 333  86BA              ; COLISIONES.
 334  86BA
 335  86BA CD 75 8D     	call Selector_de_impactos
 336  86BD
 337  86BD              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 338  86BD              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 339  86BD              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 340  86BD
 341  86BD AF           	xor a
 342  86BE 32 31 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 343  86C1
 344  86C1 CD 01 88     	call Inicia_punteros_de_entidades
 345  86C4 CD E3 88     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_entidades),_
 346  86C7              ; 														; _ en DRAW.
 347  86C7 3A DE 85     	ld a,(Filas)
 348  86CA A7           	and a
 349  86CB 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 350  86CD CD F5 88     	call Incrementa_punteros_entidades
 351  86D0 18 F2        	jr 12B
 352  86D2
 353  86D2              ; ---------------------------------------------------------------------------------------
 354  86D2
 355  86D2 CD F5 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 356  86D5 21 00 70     	ld hl,Album_de_fotos
 357  86D8 22 28 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 358  86DB              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 359  86DB 3A 22 86     	ld a,(Numero_de_entidades)
 360  86DE 47               ld b,a
 361  86DF A7           	and a
 362  86E0 28 54        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 363  86E2
 364  86E2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 365  86E2
 366  86E2              ; Código que ejecutamos con cada entidad:
 367  86E2
 368  86E2              ; Impacto ???
 369  86E2
 370  86E2 C5           2 push bc 												; Nº de entidades.
 371  86E3
 372  86E3 3A F7 85     	ld a,(Impacto)
 373  86E6 A7           	and a
 374  86E7 28 0C        	jr z,8F
 375  86E9
 376  86E9              ; Hay Impacto en esta entidad.
 377  86E9
 378  86E9 CD B8 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 379  86EC CD 25 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 380  86EF 21 22 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 381  86F2 35           	dec (hl)
 382  86F3
 383  86F3 18 3B        	jr 6F
 384  86F5
 385  86F5              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 386  86F5              ; _con las coordenadas de la entidad almacenada en DRAW.
 387  86F5
 388  86F5 3A 1A 86     8 ld a,(Ctrl_1)
 389  86F8 CB 57        	bit 2,a
 390  86FA 28 1B        	jr z,7F
 391  86FC
 392  86FC 2A 34 86     	ld hl,(Coordenadas_disparo_certero)
 393  86FF EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 394  8700              ;														; E contiene la coordenada_X del disparo.
 395  8700 2A E4 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 396  8703              ;														; H Coordenado_y de la entidad.
 397  8703 A7           	and a
 398  8704 ED 52        	sbc hl,de
 399  8706 CD AC 8D     	call Determina_resultado_comparativa
 400  8709 04           	inc b
 401  870A 05           	dec b
 402  870B 28 0A        	jr z,7F
 403  870D
 404  870D              ; ----- ----- -----
 405  870D
 406  870D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 407  870F 32 F7 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 408  8712 21 1A 86     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 409  8715 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 410  8717
 411  8717 CD 69 87     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 412  871A
 413  871A 3A 0C 86     	ld a,(Ctrl_0)
 414  871D CB 67        	bit 4,a
 415  871F 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 416  8721
 417  8721              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 418  8721              ; [[[
 419  8721 CD 7E 89     	call Detecta_disparo_entidad
 420  8724              ; ]]]
 421  8724 CD C8 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 422  8727
 423  8727 21 0C 86     	ld hl,Ctrl_0
 424  872A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 425  872C AF           	xor a
 426  872D 32 0D 86     	ld (Obj_dibujado),a
 427  8730
 428  8730 CD A3 88     6 call Store_Restore_entidades
 429  8733
 430  8733 C1           	pop bc
 431  8734 10 AC        	djnz 2B
 432  8736
 433  8736              ; Tras la gestión de las entidades, ... AMADEUS.
 434  8736
 435  8736 CD 0A 89     4 call Restore_Amadeus
 436  8739
 437  8739 3A F7 85     	ld a,(Impacto)
 438  873C A7           	and a
 439  873D 20 FE        	jr nz,$
 440  873F
 441  873F              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 442  873F
 443  873F CD 99 87     	call Mov_Amadeus
 444  8742
 445  8742 3A 0C 86     	ld a,(Ctrl_0)
 446  8745 CB 67        	bit 4,a
 447  8747 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 448  8749
 449  8749 CD C8 87     	call Guarda_foto_entidad_a_pintar
 450  874C
 451  874C 21 0C 86     3 ld hl,Ctrl_0
 452  874F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 453  8751 AF           	xor a
 454  8752 32 0D 86     	ld (Obj_dibujado),a
 455  8755
 456  8755 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 457  8758 CD 1C 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 458  875B
 459  875B CD 13 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 460  875E
 461  875E              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 462  875E
 463  875E CD 3D 88     	call Calcula_numero_de_disparotes
 464  8761 CD 25 88     9 call Calcula_numero_de_malotes
 465  8764
 466  8764 3E 04        	ld a,4
 467  8766 D3 FE        	out ($fe),a
 468  8768
 469  8768 C9           	ret
 470  8769
 471  8769              ; --------------------------------------------------------------------------------------------------------------
 472  8769              ;
 473  8769              ;	27/03/23
 474  8769
 475  8769              Mov_obj
 476  8769
 477  8769              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 478  8769
 479  8769 AF           	xor a
 480  876A 32 0D 86     	ld (Obj_dibujado),a
 481  876D 32 0C 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 482  8770              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 483  8770              ; 														; _de la entidad.
 484  8770 CD D2 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 485  8773              ;														; Obj_dibujado="0".
 486  8773              ; Movemos Entidades malignas.
 487  8773
 488  8773 21 0F 86     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 489  8776 34           	inc (hl)
 490  8777 35           	dec (hl)                                            ; Salimos de la rutina.
 491  8778 C8           	ret z
 492  8779
 493  8779 CD 71 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 494  877C
 495  877C 3A 0C 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 496  877F CB 67        	bit 4,a
 497  8781 C8           	ret z
 498  8782
 499  8782              ; Ha habido desplazamiento de la entidad maligna.
 500  8782              ; Ha llegado a zona de AMADEUS ???
 501  8782
 502  8782 3A E5 85     	ld a,(Coordenada_y)
 503  8785 FE 14        	cp $14
 504  8787 D4 44 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 505  878A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 506  878A              ; ---------
 507  878A
 508  878A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 509  878C 32 0D 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 510  878F CD D2 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 511  8792 CD E9 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 512  8795 CD B8 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 513  8798 C9           	ret													; _de la misma.
 514  8799
 515  8799              ; --------------------------------------------------------------------------------------------------------------
 516  8799              ;
 517  8799              ;	29/1/23
 518  8799
 519  8799              Mov_Amadeus
 520  8799
 521  8799 AF           	xor a
 522  879A 32 0D 86     	ld (Obj_dibujado),a
 523  879D CD D2 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 524  87A0              ;														; Obj_dibujado="0".
 525  87A0              ; Movemos Amadeus.
 526  87A0
 527  87A0 CD 47 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 528  87A3 3A 0C 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 529  87A6 CB 67        	bit 4,a
 530  87A8 C8           	ret z
 531  87A9
 532  87A9              ; ---------
 533  87A9
 534  87A9 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 535  87AB 32 0D 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 536  87AE CD D2 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 537  87B1 CD E9 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 538  87B4 CD B8 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 539  87B7 C9           	ret													; _de la nave.
 540  87B8
 541  87B8              ; --------------------------------------------------------------------------------------------------------------
 542  87B8              ;
 543  87B8              ;	31/01/23
 544  87B8              ;
 545  87B8              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 546  87B8
 547  87B8              Guarda_foto_entidad_a_borrar
 548  87B8
 549  87B8 CD AD 90     	call Prepara_draw
 550  87BB CD E7 8F     	call calcula_CColumnass
 551  87BE CD 1E 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 552  87C1 CD 73 90     	call Define_rutina_de_impresion
 553  87C4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 554  87C7 C9           	ret
 555  87C8
 556  87C8              ; --------------------------------------------------------------------------------------------------------------
 557  87C8              ;
 558  87C8              ;	31/01/23
 559  87C8              ;
 560  87C8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 561  87C8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 562  87C8
 563  87C8              Guarda_foto_entidad_a_pintar
 564  87C8
 565  87C8 CD F5 87     	call Repone_pintar
 566  87CB CD D3 8D     	call Draw
 567  87CE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 568  87D1 C9           	ret
 569  87D2
 570  87D2              ; --------------------------------------------------------------------------------------------------------------
 571  87D2              ;
 572  87D2              ;
 573  87D2
 574  87D2 21 DE 85     Prepara_var_pintado_borrado	ld hl,Filas
 575  87D5 3A 0D 86     	ld a,(Obj_dibujado)
 576  87D8 A7           	and a
 577  87D9 28 05        	jr z,1F
 578  87DB 11 02 86     	ld de,Variables_de_pintado
 579  87DE 18 03        	jr 2F
 580  87E0 11 F8 85     1 ld de,Variables_de_borrado
 581  87E3 01 08 00     2 ld bc,8
 582  87E6 ED B0        	ldir
 583  87E8 C9           	ret
 584  87E9
 585  87E9              ; --------------------------------------------------------------------------------------------------------------
 586  87E9
 587  87E9 21 F8 85     Repone_borrar ld hl,Variables_de_borrado
 588  87EC 11 DE 85     	ld de,Filas
 589  87EF 01 08 00     	ld bc,8
 590  87F2 ED B0        	ldir
 591  87F4 C9           	ret
 592  87F5
 593  87F5 21 02 86     Repone_pintar ld hl,Variables_de_pintado
 594  87F8 11 DE 85     	ld de,Filas
 595  87FB 01 08 00     	ld bc,8
 596  87FE ED B0        	ldir
 597  8800 C9           	ret
 598  8801
 599  8801              ; *************************************************************************************************************************************************************
 600  8801              ;
 601  8801              ; 8/1/23
 602  8801              ;
 603  8801              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 604  8801              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 605  8801              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 606  8801
 607  8801              ; Destruye HL y DE !!!!!
 608  8801
 609  8801              Inicia_punteros_de_entidades
 610  8801
 611  8801 21 68 84     	ld hl,Indice_de_entidades
 612  8804 CD 55 88         call Extrae_address
 613  8807 22 1C 86         ld (Puntero_store_entidades),hl
 614  880A 21 6A 84     	ld hl,Indice_de_entidades+2
 615  880D 22 20 86     	ld (Indice_restore),hl
 616  8810 CD 55 88     	call Extrae_address
 617  8813 22 1E 86     	ld (Puntero_restore_entidades),hl
 618  8816 C9               ret
 619  8817
 620  8817              ; *************************************************************************************************************************************************************
 621  8817              ;
 622  8817              ; 8/1/23
 623  8817              ;
 624  8817              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 625  8817
 626  8817 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 627  881A 22 2D 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 628  881D C9           	ret
 629  881E 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 630  8821 22 2F 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 631  8824 C9           	ret
 632  8825
 633  8825              ; -------------------------------------------------------------------------------------------------------------
 634  8825              ;
 635  8825              ; 28/2/23
 636  8825              ;
 637  8825
 638  8825              Calcula_numero_de_malotes
 639  8825
 640  8825 21 00 70     	ld hl,Album_de_fotos
 641  8828 EB           	ex de,hl
 642  8829 2A 28 86     	ld hl,(Stack_snapshot)
 643  882C
 644  882C 06 00        	ld b,0
 645  882E 7D           	ld a,l
 646  882F 93           	sub e
 647  8830 28 07        	jr z,1F
 648  8832
 649  8832              ; Nº de malotes no es "0".
 650  8832
 651  8832 D6 06        2 sub 6
 652  8834 04           	inc b
 653  8835 A7           	and a
 654  8836 20 FA        	jr nz,2B
 655  8838 78           	ld a,b
 656  8839
 657  8839 32 23 86     1 ld (Numero_de_malotes),a
 658  883C C9           	ret
 659  883D
 660  883D              ; -------------------------------------------------------------------------------------------------------------
 661  883D              ;
 662  883D              ; 28/2/23
 663  883D              ;
 664  883D
 665  883D              Calcula_numero_de_disparotes
 666  883D
 667  883D 21 60 70     	ld hl,Album_de_fotos_disparos
 668  8840 EB           	ex de,hl
 669  8841 2A 2A 86     	ld hl,(Stack_snapshot_disparos)
 670  8844
 671  8844 06 00        	ld b,0
 672  8846 7D           	ld a,l
 673  8847 93           	sub e
 674  8848 28 07        	jr z,1F
 675  884A
 676  884A              ; Nº de malotes no es "0".
 677  884A
 678  884A D6 06        2 sub 6
 679  884C 04           	inc b
 680  884D A7           	and a
 681  884E 20 FA        	jr nz,2B
 682  8850 78           	ld a,b
 683  8851
 684  8851 32 2C 86     1 ld (Numero_de_disparotes),a
 685  8854 C9           	ret
 686  8855              ; *************************************************************************************************************************************************************
 687  8855              ;
 688  8855              ; 20/10/22
 689  8855              ;
 690  8855              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 691  8855              ;
 692  8855              ; Destruye el puntero y DE !!!!!
 693  8855
 694  8855 5E           Extrae_address ld e,(hl)
 695  8856 23           	inc hl
 696  8857 56           	ld d,(hl)
 697  8858 2B           	dec hl
 698  8859 EB           	ex de,hl
 699  885A C9           	ret
 700  885B
 701  885B              ; *************************************************************************************************************************************************************
 702  885B              ;
 703  885B              ;	7/2/23
 704  885B              ;
 705  885B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 706  885B              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 707  885B              ;
 708  885B              ;   Destruye HL y BC !!!!!,
 709  885B              ;
 710  885B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 711  885B              ;					"0" ..... Izquierda.
 712  885B
 713  885B              Inicia_Puntero_objeto
 714  885B
 715  885B 3A F2 85     	ld a,(Cuad_objeto)
 716  885E E6 01        	and 1
 717  8860 F5           	push af
 718  8861 CC 7F 88     	call z,Inicia_puntero_objeto_izq
 719  8864 F1           	pop af
 720  8865 28 2B        	jr z,1F
 721  8867 CD 6C 88     	call Inicia_puntero_objeto_der
 722  886A 18 26        	jr 1F
 723  886C
 724  886C              ; Arrancamos desde la parte izquierda de la pantalla.
 725  886C              ; Iniciamos (Indice_Sprite_der).
 726  886C
 727  886C 2A E8 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 728  886F 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 729  8872 CD 55 88     	call Extrae_address
 730  8875 22 E2 85     	ld (Puntero_objeto),hl
 731  8878
 732  8878 2A EA 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 733  887B 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 734  887E C9           	ret
 735  887F
 736  887F              ; Arrancamos desde la parte derecha de la pantalla.
 737  887F              ; Iniciamos (Indice_Sprite_izq).
 738  887F
 739  887F 2A EA 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 740  8882 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 741  8885 CD 55 88     	call Extrae_address
 742  8888 22 E2 85     	ld (Puntero_objeto),hl
 743  888B
 744  888B 2A E8 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 745  888E 22 EC 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 746  8891 C9           	ret
 747  8892
 748  8892              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 749  8892
 750  8892 21 38 83     1 ld hl,Amadeus
 751  8895 ED 4B E2 85  	ld bc,(Puntero_objeto)
 752  8899 B7 ED 42     	sub hl,bc
 753  889C C0           	ret nz
 754  889D 21 0C 86     	ld hl,Ctrl_0
 755  88A0 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 756  88A2 C9           	ret 												; _de nuestra nave en los extremos.
 757  88A3
 758  88A3              ; *************************************************************************************************************************************************************
 759  88A3              ;
 760  88A3              ;	8/1/23
 761  88A3              ;
 762  88A3              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 763  88A3              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 764  88A3
 765  88A3              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 766  88A3              ;	_de la 2ª y 3ª entidad respectivamente.
 767  88A3
 768  88A3              Store_Restore_entidades
 769  88A3
 770  88A3 3A 22 86     	ld a,(Numero_de_entidades)
 771  88A6 A7           	and a
 772  88A7 C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 773  88A8
 774  88A8 E5           	push hl
 775  88A9 D5           	push de
 776  88AA C5            	push bc
 777  88AB
 778  88AB              ;	STORE !!!!!
 779  88AB              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 780  88AB
 781  88AB 21 DE 85     	ld hl,Filas
 782  88AE ED 5B 1C 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 783  88B2 01 3C 00     	ld bc,60
 784  88B5 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 785  88B7
 786  88B7              ; 	Entidad_sospechosa. 20/4/23
 787  88B7
 788  88B7 3A F7 85     	ld a,(Impacto)
 789  88BA A7           	and a
 790  88BB 28 0C        	jr z,1F
 791  88BD
 792  88BD 2A 1C 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 793  88C0 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 794  88C3 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 795  88C4 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 796  88C6 22 32 86     	ld (Entidad_sospechosa_de_colision),hl
 797  88C9
 798  88C9              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 799  88C9
 800  88C9 2A 1E 86     1 ld hl,(Puntero_restore_entidades)
 801  88CC 7E           	ld a,(hl)
 802  88CD A7           	and a
 803  88CE F5           	push af
 804  88CF 28 08        	jr z,2F
 805  88D1
 806  88D1 11 DE 85     	ld de,Filas
 807  88D4 01 3C 00     	ld bc,60
 808  88D7 ED B0        	ldir
 809  88D9
 810  88D9 CD F5 88     2 call Incrementa_punteros_entidades
 811  88DC F1           	pop af
 812  88DD 28 EA        	jr z,1B
 813  88DF
 814  88DF C1           	pop bc
 815  88E0 D1           	pop de
 816  88E1 E1           	pop hl
 817  88E2
 818  88E2 C9           	ret
 819  88E3
 820  88E3              ; **************************************************************************************************
 821  88E3              ;
 822  88E3              ;	29/10/22
 823  88E3              ;
 824  88E3              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 825  88E3
 826  88E3 E5           Restore_entidad push hl
 827  88E4 D5           	push de
 828  88E5 C5            	push bc
 829  88E6
 830  88E6 2A 1C 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 831  88E9 11 DE 85     	ld de,Filas
 832  88EC 01 3C 00     	ld bc,60
 833  88EF ED B0        	ldir
 834  88F1
 835  88F1 C1           	pop bc
 836  88F2 D1           	pop de
 837  88F3 E1           	pop hl
 838  88F4 C9           	ret
 839  88F5
 840  88F5
 841  88F5              ; **************************************************************************************************
 842  88F5              ;
 843  88F5              ;	08/05/23
 844  88F5              ;
 845  88F5              ;	Incrementamos los dos punteros de entidades. (+1).
 846  88F5
 847  88F5 2A 1E 86     Incrementa_punteros_entidades ld hl,(Puntero_restore_entidades)
 848  88F8 22 1C 86     	ld (Puntero_store_entidades),hl
 849  88FB 2A 20 86     	ld hl,(Indice_restore)
 850  88FE 23           	inc hl
 851  88FF 23           	inc hl
 852  8900 22 20 86     	ld (Indice_restore),hl
 853  8903 CD 55 88         call Extrae_address
 854  8906 22 1E 86         ld (Puntero_restore_entidades),hl
 855  8909 C9               ret
 856  890A
 857  890A              ; **************************************************************************************************
 858  890A              ;
 859  890A              ;	25/01/23
 860  890A              ;
 861  890A              ;	Restore_Amadeus
 862  890A              ;
 863  890A              ;	Cargamos en DRAW los parámetros de Amadeus.
 864  890A              ;
 865  890A
 866  890A E5           Restore_Amadeus	push hl
 867  890B D5           	push de
 868  890C C5            	push bc
 869  890D 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 870  8910 11 DE 85     	ld de,Filas
 871  8913 01 3C 00     	ld bc,60
 872  8916 ED B0        	ldir
 873  8918 C1           	pop bc
 874  8919 D1           	pop de
 875  891A E1           	pop hl
 876  891B C9           	ret
 877  891C
 878  891C              ; *************************************************************************************************************************************************************
 879  891C              ;
 880  891C              ;	29/04/23
 881  891C              ;
 882  891C              ;	Store_Amadeus
 883  891C              ;
 884  891C              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 885  891C              ;
 886  891C              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 887  891C              ;
 888  891C              ;	DESTRUYE: HL y BC y DE.
 889  891C
 890  891C 21 DE 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 891  891F 01 3C 00     	ld bc,60
 892  8922 ED B0        	ldir
 893  8924 C9           	ret
 894  8925
 895  8925              ; -----------------------------------------------------------
 896  8925              ;
 897  8925              ;	27/04/23
 898  8925              ;
 899  8925              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 900  8925              ;
 901  8925              ;	Destruye: HL,BC,DE,A
 902  8925
 903  8925 21 DE 85     Borra_datos_entidad ld hl,Filas
 904  8928 01 3B 00     	ld bc,59
 905  892B AF           	xor a
 906  892C 77           	ld (hl),a
 907  892D 11 DF 85     	ld de,Filas+1
 908  8930 ED B0        	ldir
 909  8932 C9           	ret
 910  8933
 911  8933              ; -----------------------------------------------------------
 912  8933
 913  8933              ; Teclado.
 914  8933
 915  8933 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 916  8935 DB FE        	in a,($fe)
 917  8937 E6 01        	and $01
 918  8939 28 02        	jr z,1f
 919  893B 18 F6        	jr Pulsa_ENTER
 920  893D C9           1 ret
 921  893E
 922  893E              ; **************************************************************************************************
 923  893E              ;
 924  893E              ; Temporización.
 925  893E
 926  893E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 927  893E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 928  893E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 929  893E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 930  893E
 931  893E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 932  893E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 933  893E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 934  893E
 935  893E              ; A partir de $4f61 no hace falta DELAY.
 936  893E
 937  893E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 938  893E
 939  893E 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 940  8941 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 941  8942 78           	LD A,B
 942  8943 A7           	AND A
 943  8944 20 FB        	JR NZ,wait
 944  8946 C9           	RET
 945  8947
 946  8947              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 947  8947              ;
 948  8947              ;	5/3/23
 949  8947              ;
 950  8947              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 951  8947
 952  8947              Movimiento_Amadeus
 953  8947
 954  8947              ; Disparo.
 955  8947
 956  8947 3A 3C 86     	ld a,(Habilita_disparo_Amadeus)
 957  894A A7           	and a
 958  894B 20 02        	jr nz,1F
 959  894D 18 15        	jr 2F
 960  894F
 961  894F 3E F7        1 ld a,$f7													; "5" para disparar.
 962  8951 DB FE        	in a,($fe)
 963  8953 E6 10        	and $10
 964  8955
 965  8955 F5           	push af
 966  8956 CC C0 89     	call z,Genera_disparo
 967  8959 F1           	pop af
 968  895A 20 08        	jr nz,2F
 969  895C
 970  895C 3A 3C 86     	ld a,(Habilita_disparo_Amadeus)
 971  895F EE 01        	xor 1
 972  8961 32 3C 86     	ld (Habilita_disparo_Amadeus),a
 973  8964
 974  8964 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 975  8966 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 976  8968 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 977  896A CC 11 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
 978  896D 3E F7        	ld a,$f7
 979  896F DB FE        	in a,($fe)
 980  8971 E6 01        	and $01
 981  8973 C8           	ret z
 982  8974
 983  8974 3E F7        	ld a,$f7
 984  8976 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 985  8978 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 986  897A CC F3 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 987  897D C9           	ret
 988  897E
 989  897E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 990  897E              ;
 991  897E              ;	Rutina provisional para que los malotes cagen balas.
 992  897E
 993  897E              Detecta_disparo_entidad
 994  897E
 995  897E 3A 3F 86     	ld a,(Habilita_disparo_entidad)
 996  8981 A7           	and a
 997  8982 C8           	ret z
 998  8983 3E 7F        	ld a,$7f
 999  8985 DB FE        	in a,($fe)
1000  8987 E6 01        	and 1
1001  8989 C0           	ret nz
1002  898A CD C0 89     	call Genera_disparo
1003  898D C9           	ret
1004  898E
1005  898E              ; Pinta indicadores de FILAS. ------------------------------------------------------
1006  898E
1007  898E 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1008  8991
1009  8991              ; ----------
1010  8991 06 20        	ld b,32
1011  8993 E5           2 push hl
1012  8994 C5           	push bc
1013  8995              ; ----------
1014  8995
1015  8995 06 BF        	ld b,$bf
1016  8997 36 80        1 ld (hl),%10000000
1017  8999 CD B9 90     	call NextScan
1018  899C 10 F9        	djnz 1B
1019  899E
1020  899E              ; ----------
1021  899E C1           	pop bc
1022  899F E1           	pop hl
1023  89A0 2C           	inc l
1024  89A1 10 F0        	djnz 2B
1025  89A3              ; ----------
1026  89A3
1027  89A3 06 03        	ld b,3
1028  89A5 21 00 47         ld hl,$4700
1029  89A8 CD AE 89     3 call Bucle_1
1030  89AB 10 FB            djnz 3B
1031  89AD C9               ret
1032  89AE
1033  89AE C5           Bucle_1 push bc
1034  89AF E5                   push hl
1035  89B0 D1                   pop de
1036  89B1 13                   inc de
1037  89B2 01 FF 00             ld bc,255
1038  89B5 36 FF                ld (hl),255
1039  89B7 ED B0                ldir
1040  89B9 23                   inc hl
1041  89BA 3E 07                ld a,7
1042  89BC 84                   add a,h
1043  89BD 67                   ld h,a
1044  89BE C1                   pop bc
1045  89BF C9                   ret
1046  89C0
1047  89C0              ; ---------------------------------------------------------------
1048  89C0
1049  89C0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89C0              ; ******************************************************************************************************************************************************************************************
   2+ 89C0              ;
   3+ 89C0              ;   17/04/23
   4+ 89C0              ;
   5+ 89C0              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89C0              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89C0              ;
   8+ 89C0              ;
   9+ 89C0              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89C0              ;
  11+ 89C0              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89C0              ;               _ hacen las entidades hacia abajo.
  13+ 89C0              ;
  14+ 89C0              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89C0              ;
  16+ 89C0              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89C0              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89C0              ;
  19+ 89C0              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89C0              ;           _ la bala.
  21+ 89C0              ;
  22+ 89C0              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89C0              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89C0              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89C0              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89C0              ;           _ en el momento de generarse la bala)).
  27+ 89C0
  28+ 89C0              Genera_disparo
  29+ 89C0
  30+ 89C0              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89C0              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89C0              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89C0              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89C0              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89C0              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89C0              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89C0
  38+ 89C0              ; Exclusiones:
  39+ 89C0
  40+ 89C0 3A 16 86         ld a,(Columnas)
  41+ 89C3 47               ld b,a
  42+ 89C4 3A DF 85         ld a,(Columns)
  43+ 89C7 B8               cp b
  44+ 89C8 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89C9
  46+ 89C9              ; ----- ----- -----
  47+ 89C9
  48+ 89C9 3A 0C 86         ld a,(Ctrl_0)
  49+ 89CC CB 77            bit 6,a
  50+ 89CE 20 06            jr nz,14F
  51+ 89D0
  52+ 89D0 3A E5 85         ld a,(Coordenada_y)
  53+ 89D3 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89D5 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89D6
  56+ 89D6 21 00 80     14 ld hl,Indice_disparo
  57+ 89D9 3A E6 85         ld a,(CTRL_DESPLZ)
  58+ 89DC 4F               ld c,a
  59+ 89DD 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89DF              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89DF              ;                                            ""        ""       "f9", B="1"
  62+ 89DF              ;                                            ""        ""       "fb", B="2"
  63+ 89DF              ;                                            ""        ""       "fb", B="3"
  64+ 89DF A7               and a
  65+ 89E0 28 10            jr z,1F
  66+ 89E2 E6 01            and 1
  67+ 89E4 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89E5
  69+ 89E5 79               ld a,c
  70+ 89E6 16 F9            ld d,$f9
  71+ 89E8 23           2 inc hl
  72+ 89E9 23               inc hl
  73+ 89EA 04               inc b
  74+ 89EB BA               cp d
  75+ 89EC 28 04            jr z,1F
  76+ 89EE 14               inc d
  77+ 89EF 14               inc d
  78+ 89F0 18 F6            jr 2B
  79+ 89F2
  80+ 89F2 CD 55 88     1 call Extrae_address
  81+ 89F5 E5               push hl
  82+ 89F6 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89F8 DD 21 4C 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89FC
  85+ 89FC              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89FC              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89FC
  88+ 89FC 3A 0C 86         ld a,(Ctrl_0)
  89+ 89FF CB 77            bit 6,a
  90+ 8A01 20 04            jr nz,19F
  91+ 8A03
  92+ 8A03 AF               xor a
  93+ 8A04 32 3F 86         ld (Habilita_disparo_entidad),a
  94+ 8A07
  95+ 8A07 3A F2 85     19 ld a,(Cuad_objeto)
  96+ 8A0A FE 02            cp 2
  97+ 8A0C 38 66            jr c,3F
  98+ 8A0E 28 64            jr z,3F
  99+ 8A10
 100+ 8A10              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A10
 102+ 8A10 E6 01            and 1
 103+ 8A12 28 30            jr z,4F
 104+ 8A14
 105+ 8A14              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A14              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A14              ;
 108+ 8A14              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A14              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A14              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A14
 112+ 8A14 2A E0 85     	ld hl,(Posicion_actual)
 113+ 8A17
 114+ 8A17              ;   Amadeus o entidad ???.
 115+ 8A17
 116+ 8A17 3A 0C 86         ld a,(Ctrl_0)
 117+ 8A1A CB 77            bit 6,a
 118+ 8A1C 28 0A            jr z,8F
 119+ 8A1E
 120+ 8A1E              ; 	Dispara Amadeus.
 121+ 8A1E
 122+ 8A1E 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A20 CD C8 90         call PreviousScan
 124+ 8A23 CD C8 90         call PreviousScan
 125+ 8A26
 126+ 8A26              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A26              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A26              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A26              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A26
 131+ 8A26 18 11            jr 10F
 132+ 8A28
 133+ 8A28              ; 	Dispara Entidad.
 134+ 8A28
 135+ 8A28 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A2B              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A2B
 138+ 8A2B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A2B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A2B
 141+ 8A2B C5               push bc
 142+ 8A2C 06 10            ld b,16
 143+ 8A2E CD B9 90     9 call NextScan
 144+ 8A31 10 FB            djnz 9B
 145+ 8A33 C1               pop bc
 146+ 8A34 CD 9E 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A37 18 06            jr 17F
 148+ 8A39
 149+ 8A39              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A39              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A39              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A39              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A39
 154+ 8A39 CD 9E 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A3C CD 13 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A3F              ;                                                      ; _al generar el disparo.
 157+ 8A3F
 158+ 8A3F              ; 	LLegados a este punto tendremos:
 159+ 8A3F              ;
 160+ 8A3F              ;       Puntero_objeto_disparo en IY.
 161+ 8A3F              ;       Rutinas_de_impresion en IX.
 162+ 8A3F              ;       Puntero_de_impresion en HL.
 163+ 8A3F              ;       Impacto/Dirección en BC.
 164+ 8A3F
 165+ 8A3F CD A6 8A     17 call Almacena_disparo
 166+ 8A42 18 52            jr 6F                                             ; RET.
 167+ 8A44
 168+ 8A44              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A44              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A44              ;
 171+ 8A44              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A44              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A44              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A44
 175+ 8A44 2A E0 85     4 ld hl,(Posicion_actual)
 176+ 8A47
 177+ 8A47              ;   Amadeus o entidad ???.
 178+ 8A47
 179+ 8A47 3A 0C 86         ld a,(Ctrl_0)
 180+ 8A4A CB 77            bit 6,a
 181+ 8A4C 28 0A            jr z,11F
 182+ 8A4E
 183+ 8A4E              ; 	Dispara Amadeus.
 184+ 8A4E
 185+ 8A4E 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A50 CD C8 90         call PreviousScan
 187+ 8A53 CD C8 90         call PreviousScan
 188+ 8A56
 189+ 8A56              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A56              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A56              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A56              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A56
 194+ 8A56 18 11            jr 13F
 195+ 8A58
 196+ 8A58              ; 	Dispara Entidad.
 197+ 8A58
 198+ 8A58 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A5B              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A5B
 201+ 8A5B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A5B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A5B
 204+ 8A5B C5               push bc
 205+ 8A5C 06 10            ld b,16
 206+ 8A5E CD B9 90     12 call NextScan
 207+ 8A61 10 FB            djnz 12B
 208+ 8A63 C1               pop bc
 209+ 8A64
 210+ 8A64 CD 97 8A         call Ajusta_disparo_parte_derecha
 211+ 8A67 18 06            jr 18F
 212+ 8A69
 213+ 8A69              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A69              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A69              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A69              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A69
 218+ 8A69 CD 97 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A6C CD 13 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A6F              ;                                                       ; _al generar el disparo.
 221+ 8A6F
 222+ 8A6F              ; LLegados a este punto tendremos:
 223+ 8A6F              ;
 224+ 8A6F              ;       Puntero_objeto_disparo en IY.
 225+ 8A6F              ;       Rutinas_de_impresion en IX.
 226+ 8A6F              ;       Puntero_de_impresion en HL.
 227+ 8A6F              ;       Impacto/Dirección en BC.
 228+ 8A6F
 229+ 8A6F CD A6 8A     18 call Almacena_disparo
 230+ 8A72 18 22            jr 6F                                               ; RET.
 231+ 8A74
 232+ 8A74              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A74
 234+ 8A74 28 11        3 jr z,5F
 235+ 8A76
 236+ 8A76              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A76              ;
 238+ 8A76              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A76              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A76              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A76              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A76
 243+ 8A76              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A76              ;	   ""        ""       "f9", B="1"
 245+ 8A76              ;	   ""        ""       "fb", B="2"
 246+ 8A76              ; 	   ""        ""       "fb", B="3"
 247+ 8A76
 248+ 8A76 2A E0 85     	ld hl,(Posicion_actual)
 249+ 8A79 CD B9 90     	call NextScan
 250+ 8A7C
 251+ 8A7C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A7C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A7C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A7C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A7C
 256+ 8A7C CD 9E 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A7F
 258+ 8A7F              ; 	No se produce impacto. B="$80"
 259+ 8A7F              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A7F
 261+ 8A7F 01 80 80         ld bc,$8080
 262+ 8A82
 263+ 8A82              ; 	LLegados a este punto tendremos:
 264+ 8A82              ;
 265+ 8A82              ;       Puntero_objeto_disparo en IY.
 266+ 8A82              ;       Rutinas_de_impresion en IX.
 267+ 8A82              ;       Puntero_de_impresion en HL.
 268+ 8A82              ;       Impacto/Dirección en BC.
 269+ 8A82
 270+ 8A82 CD A6 8A         call Almacena_disparo
 271+ 8A85 18 0F            jr 6F                                           ; RET.
 272+ 8A87
 273+ 8A87              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A87              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A87              ;
 276+ 8A87              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A87              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A87              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A87              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A87
 281+ 8A87 2A E0 85     5 ld hl,(Posicion_actual)
 282+ 8A8A CD B9 90     	call NextScan
 283+ 8A8D
 284+ 8A8D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A8D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A8D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A8D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A8D
 289+ 8A8D CD 97 8A         call Ajusta_disparo_parte_derecha
 290+ 8A90
 291+ 8A90              ; 	No se produce impacto. B="$80"
 292+ 8A90              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A90
 294+ 8A90 01 80 80     15 ld bc,$8080
 295+ 8A93
 296+ 8A93              ; 	LLegados a este punto tendremos:
 297+ 8A93              ;
 298+ 8A93              ;       Puntero_objeto_disparo en IY.
 299+ 8A93              ;       Rutinas_de_impresion en IX.
 300+ 8A93              ;       Puntero_de_impresion en HL.
 301+ 8A93              ;       Impacto/Dirección en BC.
 302+ 8A93
 303+ 8A93 CD A6 8A         call Almacena_disparo
 304+ 8A96
 305+ 8A96 C9           6 ret
 306+ 8A97
 307+ 8A97              ; ----------------------------------------------------------------
 308+ 8A97              ;
 309+ 8A97              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A97              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A97              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A97
 313+ 8A97 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A98 FE 02            cp 2
 315+ 8A9A 38 01            jr c,1F
 316+ 8A9C 23               inc hl
 317+ 8A9D C9           1 ret
 318+ 8A9E
 319+ 8A9E 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A9F FE 01        	cp 1
 321+ 8AA1 20 01        	jr nz,1F
 322+ 8AA3 2B           	dec hl
 323+ 8AA4 2B           1 dec hl
 324+ 8AA5 C9               ret
 325+ 8AA6
 326+ 8AA6              ; ----------------------------------------------------------------
 327+ 8AA6              ;
 328+ 8AA6              ;   25/02/23
 329+ 8AA6              ;
 330+ 8AA6              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AA6              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AA6              ;
 333+ 8AA6              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AA6              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AA6
 336+ 8AA6              Almacena_disparo
 337+ 8AA6
 338+ 8AA6 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AA7 F1               pop af
 340+ 8AA8 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AA9
 342+ 8AA9 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AAA E6 01            and 1
 344+ 8AAC 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8AAE              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8AAE              ; 	Dispara AMADEUS.
 347+ 8AAE
 348+ 8AAE              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8AAE              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8AAE              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8AAE              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8AAE
 353+ 8AAE C5               push bc
 354+ 8AAF 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AB2 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AB5 A7               and a
 357+ 8AB6 ED 42            sbc hl,bc
 358+ 8AB8 CC 1E 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8ABB C1               pop bc
 360+ 8ABC 28 54            jr z,4F
 361+ 8ABE
 362+ 8ABE 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8AC1 23               inc hl
 364+ 8AC2 23               inc hl
 365+ 8AC3 22 2F 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AC6              ;                                                   ; _ Disparo_(+1).
 367+ 8AC6 18 18            jr 2F
 368+ 8AC8
 369+ 8AC8              ; Dispara una entidad.
 370+ 8AC8
 371+ 8AC8 C5           1 push bc
 372+ 8AC9 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8ACC 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8ACF A7               and a
 375+ 8AD0 ED 42            sbc hl,bc
 376+ 8AD2 CC 17 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8AD5 C1               pop bc
 378+ 8AD6 28 3A            jr z,4F
 379+ 8AD8
 380+ 8AD8 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8ADB 23               inc hl
 382+ 8ADC 23               inc hl
 383+ 8ADD 22 2D 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8AE0              ;                                                   ; _ Disparo_(+1).
 385+ 8AE0 CD 55 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8AE3              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8AE3              ;
 388+ 8AE3              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8AE3              ;                                                     Rutinas_de_impresion en IX.
 390+ 8AE3              ;                                                     Puntero_de_impresion en HL.
 391+ 8AE3              ;                                                     Impacto/Dirección en BC.
 392+ 8AE3
 393+ 8AE3 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8AE4 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AE5 23               inc hl                                          ; _ al siguiente.
 396+ 8AE6 A7               and a
 397+ 8AE7 20 C0            jr nz,3B
 398+ 8AE9
 399+ 8AE9 08               ex af,af
 400+ 8AEA ED 73 24 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AEE F9               ld sp,hl
 402+ 8AEF
 403+ 8AEF DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AF1 F5               push af                                         ; Puntero de impresión.
 405+ 8AF2 FD E5            push iy                                         ; Puntero objeto.
 406+ 8AF4 C5               push bc                                         ; Control.
 407+ 8AF5
 408+ 8AF5 ED 7B 24 86      ld sp,(Stack)
 409+ 8AF9
 410+ 8AF9              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AF9
 412+ 8AF9 21 1A 86     	ld hl,Ctrl_1
 413+ 8AFC CB C6        	set 0,(hl)
 414+ 8AFE
 415+ 8AFE DD E5        	push ix
 416+ 8B00 E1               pop hl
 417+ 8B01 F5               push af
 418+ 8B02 DD E1            pop ix
 419+ 8B04
 420+ 8B04 CD A0 7F     	call Guarda_foto_registros
 421+ 8B07
 422+ 8B07 21 1A 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B0A CB 86        	res 0,(hl)
 424+ 8B0C
 425+ 8B0C              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B0C              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B0C
 428+ 8B0C CD 1E 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B0F CD 17 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B12
 431+ 8B12 C9           4 ret
 432+ 8B13
 433+ 8B13              ; ----------------------------------------------------------------
 434+ 8B13              ;
 435+ 8B13              ;   4/3/23
 436+ 8B13              ;
 437+ 8B13              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B13              ;   _ al generarse el disparo.
 439+ 8B13              ;
 440+ 8B13              ;       "$80" ..... No se produce colisión.
 441+ 8B13              ;       "$81" ..... Se produce colisión.
 442+ 8B13
 443+ 8B13              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B13              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B13
 446+ 8B13
 447+ 8B13 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B15 E5               push hl                                        ; Puntero de impresión.
 449+ 8B16 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8B18 CD 34 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8B1B
 452+ 8B1B 7B               ld a,e
 453+ 8B1C E6 01            and 1
 454+ 8B1E 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8B20
 456+ 8B20 E1               pop hl
 457+ 8B21 E5               push hl
 458+ 8B22 CD B9 90         call NextScan
 459+ 8B25
 460+ 8B25 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8B26 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8B28 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8B2A              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8B2A 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8B2C CD 34 8B         call Bucle_2
 466+ 8B2F
 467+ 8B2F 43           2 ld b,e
 468+ 8B30 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8B31 FD E1            pop iy
 470+ 8B33 C9               ret
 471+ 8B34
 472+ 8B34               ; ---------- ----------
 473+ 8B34
 474+ 8B34 06 02        Bucle_2 ld b,2
 475+ 8B36 FD 7E 00     2 ld a,(iy)
 476+ 8B39 A6               and (hl)
 477+ 8B3A 28 02            jr z,1F
 478+ 8B3C 1E 81            ld e,$81
 479+ 8B3E 23           1 inc hl
 480+ 8B3F FD 23            inc iy
 481+ 8B41 10 F3            djnz 2B
 482+ 8B43 C9               ret
 483+ 8B44
 484+ 8B44              ; -------------------------------------------------------------------------------------------------------------
 485+ 8B44              ;
 486+ 8B44              ;   11/04/23
 487+ 8B44              ;
 488+ 8B44              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8B44              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8B44              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8B44              ;
 492+ 8B44              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8B44
 494+ 8B44              Compara_coordenadas_X
 495+ 8B44
 496+ 8B44              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8B44              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8B44
 499+ 8B44              ; Preparamos registros:
 500+ 8B44
 501+ 8B44 21 E4 85         ld hl,Filas+6
 502+ 8B47 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8B48 23               inc hl
 504+ 8B49 23               inc hl
 505+ 8B4A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8B4B 43               ld b,e
 507+ 8B4C 21 F2 85         ld hl,Filas+20
 508+ 8B4F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B50 21 39 86         ld hl,Coordenadas_X_Entidad
 510+ 8B53 CD 62 8D         call Guarda_coordenadas_X
 511+ 8B56
 512+ 8B56              ; Preparamos registros:
 513+ 8B56
 514+ 8B56 21 7C 84         ld hl,Amadeus_db+6
 515+ 8B59 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B5A 23               inc hl
 517+ 8B5B 23               inc hl
 518+ 8B5C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B5D 7B               ld a,e
 520+ 8B5E 08               ex af,af'
 521+ 8B5F 21 8A 84         ld hl,Amadeus_db+20
 522+ 8B62 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B63 21 36 86         ld hl,Coordenadas_X_Amadeus
 524+ 8B66 CD 62 8D         call Guarda_coordenadas_X
 525+ 8B69
 526+ 8B69              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B69              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B69
 529+ 8B69 04               inc b
 530+ 8B6A 05               dec b
 531+ 8B6B 28 04            jr z,1F
 532+ 8B6D 06 03            ld b,3
 533+ 8B6F 18 02            jr 2F
 534+ 8B71 06 02        1 ld b,2
 535+ 8B73 08           2 ex af,af'
 536+ 8B74 3C               inc a
 537+ 8B75 3D               dec a
 538+ 8B76 28 04            jr z,5F
 539+ 8B78 0E 03            ld c,3
 540+ 8B7A 18 02            jr 6F
 541+ 8B7C 0E 02        5 ld c,2
 542+ 8B7E 79           6 ld a,c
 543+ 8B7F 08               ex af,af'
 544+ 8B80 11 39 86         ld de,Coordenadas_X_Entidad
 545+ 8B83 1A           4 ld a,(de)
 546+ 8B84 21 36 86         ld hl,Coordenadas_X_Amadeus
 547+ 8B87 BE           3 cp (hl)
 548+ 8B88 28 0E            jr z,7F
 549+ 8B8A 23               inc hl
 550+ 8B8B 0D               dec c
 551+ 8B8C 20 F9            jr nz,3B
 552+ 8B8E 13               inc de
 553+ 8B8F 08               ex af,af'
 554+ 8B90 4F               ld c,a
 555+ 8B91 08               ex af,af'
 556+ 8B92 10 EF            djnz 4B
 557+ 8B94
 558+ 8B94              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B94
 560+ 8B94 CD A1 8D     8 call Limpia_Coordenadas_X
 561+ 8B97 C9               ret
 562+ 8B98
 563+ 8B98              7
 564+ 8B98 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B9A 32 F7 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8B9D 21 31 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8BA0 CB D6            set 2,(hl)
 568+ 8BA2 18 F0            jr 8B
 569+ 8BA4
 570+ 8BA4              ; -----------------------------------------------------------------------
 571+ 8BA4              ;
 572+ 8BA4              ;   17/04/23
 573+ 8BA4              ;
 574+ 8BA4
 575+ 8BA4              Detecta_colision_nave_entidad
 576+ 8BA4
 577+ 8BA4              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8BA4
 579+ 8BA4 2A E0 85         ld hl,(Posicion_actual)
 580+ 8BA7 CD 1E 90         call Calcula_puntero_de_impresion
 581+ 8BAA
 582+ 8BAA              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8BAA              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8BAA
 585+ 8BAA DD E5            push ix
 586+ 8BAC E1               pop hl
 587+ 8BAD E5               push hl
 588+ 8BAE
 589+ 8BAE              ; ----- ----- -----
 590+ 8BAE 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8BB0 06 0A            ld b,10
 592+ 8BB2 CD E2 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8BB5 7B               ld a,e
 594+ 8BB6 FE 05            cp 5
 595+ 8BB8 38 0E            jr c,3F
 596+ 8BBA
 597+ 8BBA              ; LLegados a este punto:
 598+ 8BBA              ;
 599+ 8BBA              ;   HAY COLISIÓN !!!!!.
 600+ 8BBA              ;
 601+ 8BBA              ;   .db (Impacto) de Amadeus a "1".
 602+ 8BBA              ;   SET el bit3 de (Impacto2).
 603+ 8BBA              ;
 604+ 8BBA              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8BBA
 606+ 8BBA 21 8F 84         ld hl,Amadeus_db+25
 607+ 8BBD 36 01            ld (hl),1
 608+ 8BBF 21 31 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8BC2 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8BC4 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8BC6 18 18            jr 1F
 612+ 8BC8
 613+ 8BC8              ; -----
 614+ 8BC8
 615+ 8BC8 E1           3 pop hl
 616+ 8BC9 CD B9 90         call NextScan
 617+ 8BCC E5               push hl
 618+ 8BCD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8BCE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8BD0 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8BD2 30 0C            jr nc,1F
 622+ 8BD4              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8BD4 10 DC            djnz 2B
 624+ 8BD6
 625+ 8BD6              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8BD6
 627+ 8BD6              ; LLegados a este punto:
 628+ 8BD6              ;
 629+ 8BD6              ;   NO HAY COLISIÓN !!!!!.
 630+ 8BD6              ;
 631+ 8BD6              ;   .db (Impacto) de Amadeus a "0".
 632+ 8BD6              ;   RES el bit2 de (Impacto2).
 633+ 8BD6              ;
 634+ 8BD6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8BD6              ;   Lo colocamos a "0".
 636+ 8BD6
 637+ 8BD6 21 31 86         ld hl,Impacto2
 638+ 8BD9 CB 96            res 2,(hl)
 639+ 8BDB 2A 32 86         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8BDE 36 00            ld (hl),0
 641+ 8BE0
 642+ 8BE0 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8BE1 C9               ret
 644+ 8BE2
 645+ 8BE2               ; ---------- ----------
 646+ 8BE2
 647+ 8BE2 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8BE3 3A DF 85         ld a,(Columns)
 649+ 8BE6 47               ld b,a
 650+ 8BE7 FD 7E 00     2 ld a,(iy)
 651+ 8BEA BE               cp (hl)
 652+ 8BEB 28 01            jr z,1F
 653+ 8BED
 654+ 8BED 1C               inc e
 655+ 8BEE
 656+ 8BEE 23           1 inc hl
 657+ 8BEF FD 23            inc iy
 658+ 8BF1 10 F4            djnz 2B
 659+ 8BF3 C1               pop bc
 660+ 8BF4 C9               ret
 661+ 8BF5
 662+ 8BF5              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BF5              ;
 664+ 8BF5              ;   13/03/23
 665+ 8BF5              ;
 666+ 8BF5              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BF5              ;
 668+ 8BF5              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BF5
 670+ 8BF5 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BF8 7E               ld a,(hl)
 672+ 8BF9 A7               and a
 673+ 8BFA C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8BFB
 675+ 8BFB 44               ld b,h
 676+ 8BFC 4D               ld c,l
 677+ 8BFD 2A 2A 86         ld hl,(Stack_snapshot_disparos)
 678+ 8C00 E5               push hl
 679+ 8C01 A7               and a
 680+ 8C02 ED 42            sbc hl,bc
 681+ 8C04 E5               push hl
 682+ 8C05 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8C06
 684+ 8C06 E1               pop hl
 685+ 8C07 54               ld d,h
 686+ 8C08 5D               ld e,l
 687+ 8C09 1B               dec de
 688+ 8C0A ED B8            lddr                                                ; Limpiamos.
 689+ 8C0C
 690+ 8C0C 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8C0F 22 2A 86         ld (Stack_snapshot_disparos),hl
 692+ 8C12
 693+ 8C12 C9               ret
 694+ 8C13
 695+ 8C13              ; -------------------------------------------------------------------------------------------------------------
 696+ 8C13              ;
 697+ 8C13              ;   28/03/23
 698+ 8C13              ;
 699+ 8C13
 700+ 8C13 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8C16 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8C19
 703+ 8C19 CD 55 88     2 call Extrae_address
 704+ 8C1C 7E               ld a,(hl)
 705+ 8C1D A7               and a
 706+ 8C1E 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8C20
 708+ 8C20              ; ----- ----- ----- ----- ----- -----
 709+ 8C20
 710+ 8C20 C5               push bc
 711+ 8C21 CD DD 8C         call foto_disparo_a_borrar
 712+ 8C24
 713+ 8C24              ; Existe colisión con este disparo???
 714+ 8C24
 715+ 8C24 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8C25 7E               ld a,(hl)
 717+ 8C26 2B               dec hl
 718+ 8C27 E6 01            and 1
 719+ 8C29 28 1D            jr z,9F
 720+ 8C2B
 721+ 8C2B              ;   En este punto:
 722+ 8C2B              ;
 723+ 8C2B              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8C2B              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8C2B              ;   _con la entidad).
 726+ 8C2B              ;
 727+ 8C2B              ;   Disparo_2A defw 0                                ; Control.
 728+ 8C2B              ;    defw 0                                          ; Puntero objeto.
 729+ 8C2B              ;    defw 0                                          ; Puntero de impresión.
 730+ 8C2B              ;    defw 0                                          ; Rutina de impresión.
 731+ 8C2B
 732+ 8C2B E5               push hl
 733+ 8C2C
 734+ 8C2C 06 04            ld b,4
 735+ 8C2E 23           19 inc hl
 736+ 8C2F 10 FD            djnz 19B
 737+ 8C31
 738+ 8C31 CD 55 88         call Extrae_address
 739+ 8C34 CD D0 96         call Genera_coordenadas_disparo
 740+ 8C37
 741+ 8C37              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8C37
 743+ 8C37 21 34 86         ld hl,Coordenadas_disparo_certero
 744+ 8C3A 72               ld (hl),d
 745+ 8C3B 23               inc hl
 746+ 8C3C 73               ld (hl),e
 747+ 8C3D
 748+ 8C3D              ; Elimino el disparo de la base de datos.
 749+ 8C3D
 750+ 8C3D E1               pop hl
 751+ 8C3E CD 57 8D         call Elimina_disparo_de_base_de_datos
 752+ 8C41 21 31 86         ld hl,Impacto2
 753+ 8C44 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8C46
 755+ 8C46 18 06            jr 11F
 756+ 8C48
 757+ 8C48 CD 06 8D     9 call Mueve_disparo
 758+ 8C4B CD DD 8C         call foto_disparo_a_borrar
 759+ 8C4E
 760+ 8C4E C1           11 pop bc
 761+ 8C4F 18 04            jr 7F
 762+ 8C51
 763+ 8C51              ; ----- ----- ----- ----- ----- -----
 764+ 8C51
 765+ 8C51 ED 42        1 sbc hl,bc
 766+ 8C53 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C55
 768+ 8C55 2A 2F 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C58 23               inc hl
 770+ 8C59 23               inc hl
 771+ 8C5A 22 2F 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C5D 18 BA            jr 2B
 773+ 8C5F
 774+ 8C5F CD 1E 88     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C62 01 66 84         ld bc,Disparo_11
 776+ 8C65 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C68
 778+ 8C68 CD 55 88     5 call Extrae_address
 779+ 8C6B 7E               ld a,(hl)
 780+ 8C6C A7               and a
 781+ 8C6D 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C6F
 783+ 8C6F              ; ----- ----- ----- ----- ----- -----
 784+ 8C6F
 785+ 8C6F C5               push bc
 786+ 8C70 CD DD 8C         call foto_disparo_a_borrar
 787+ 8C73
 788+ 8C73              ; Existe colisión con este disparo???
 789+ 8C73
 790+ 8C73 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C74 7E               ld a,(hl)
 792+ 8C75 2B               dec hl
 793+ 8C76 E6 01            and 1
 794+ 8C78 28 48            jr z,10F
 795+ 8C7A
 796+ 8C7A              ; La colisión se produce con Amadeus???
 797+ 8C7A              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C7A
 799+ 8C7A E5               push hl
 800+ 8C7B
 801+ 8C7B 06 04            ld b,4
 802+ 8C7D 23           16 inc hl
 803+ 8C7E 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C80 CD 55 88         call Extrae_address
 805+ 8C83 CD D0 96         call Genera_coordenadas_disparo
 806+ 8C86
 807+ 8C86 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C87 FE 16            cp $16
 809+ 8C89 38 22            jr c,15F
 810+ 8C8B
 811+ 8C8B              ; (Colisiones en filas 16 y 17).
 812+ 8C8B
 813+ 8C8B D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C8C
 815+ 8C8C              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C8C
 817+ 8C8C 21 7C 84         ld hl,Amadeus_db+6
 818+ 8C8F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C90 23               inc hl
 820+ 8C91 23               inc hl
 821+ 8C92 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C93 21 8A 84         ld hl,Amadeus_db+20
 823+ 8C96 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C97 21 36 86         ld hl,Coordenadas_X_Amadeus
 825+ 8C9A CD 62 8D         call Guarda_coordenadas_X
 826+ 8C9D
 827+ 8C9D D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8C9E
 829+ 8C9E              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8C9E
 831+ 8C9E 06 03            ld b,3
 832+ 8CA0 21 36 86         ld hl,Coordenadas_X_Amadeus
 833+ 8CA3 7E           18 ld a,(hl)
 834+ 8CA4 BA               cp d
 835+ 8CA5 20 03            jr nz,17F
 836+ 8CA7
 837+ 8CA7              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CA7
 839+ 8CA7 E1               pop hl
 840+ 8CA8 18 09            jr 14F
 841+ 8CAA
 842+ 8CAA 23           17 inc hl
 843+ 8CAB 10 F6            djnz 18B
 844+ 8CAD
 845+ 8CAD              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CAD              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CAD
 848+ 8CAD E1           15 pop hl
 849+ 8CAE 23               inc hl
 850+ 8CAF 35               dec (hl)
 851+ 8CB0 2B               dec hl
 852+ 8CB1 18 0F            jr 10F
 853+ 8CB3
 854+ 8CB3              ; -----------------------debug
 855+ 8CB3
 856+ 8CB3              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CB3              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CB3
 859+ 8CB3 E5           14 push hl
 860+ 8CB4 CD 57 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CB7 21 31 86         ld hl,Impacto2
 862+ 8CBA CB CE            set 1,(hl)
 863+ 8CBC CD A1 8D         call Limpia_Coordenadas_X
 864+ 8CBF
 865+ 8CBF E1               pop hl
 866+ 8CC0 18 06            jr 12F
 867+ 8CC2
 868+ 8CC2 CD 06 8D     10 call Mueve_disparo
 869+ 8CC5 CD DD 8C         call foto_disparo_a_borrar
 870+ 8CC8 C1           12 pop bc
 871+ 8CC9
 872+ 8CC9 18 04            jr 8F
 873+ 8CCB
 874+ 8CCB              ; ----- ----- ----- ----- ----- -----
 875+ 8CCB
 876+ 8CCB ED 42        4 sbc hl,bc
 877+ 8CCD 28 0A            jr z,6F
 878+ 8CCF
 879+ 8CCF 2A 2D 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8CD2 23               inc hl
 881+ 8CD3 23               inc hl
 882+ 8CD4 22 2D 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8CD7 18 8F            jr 5B
 884+ 8CD9
 885+ 8CD9 CD 17 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8CDC C9               ret
 887+ 8CDD
 888+ 8CDD              ; ------------------------------------------------------------------
 889+ 8CDD
 890+ 8CDD              foto_disparo_a_borrar
 891+ 8CDD
 892+ 8CDD 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8CDE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8CDF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8CE0
 896+ 8CE0 E5               push hl
 897+ 8CE1 23               inc hl
 898+ 8CE2 23               inc hl
 899+ 8CE3 ED 73 24 86      ld (Stack),sp
 900+ 8CE7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CE8 FD E1            pop iy
 902+ 8CEA DD E1            pop ix
 903+ 8CEC E1               pop hl
 904+ 8CED ED 7B 24 86      ld sp,(Stack)
 905+ 8CF1 3A 1A 86         ld a,(Ctrl_1)
 906+ 8CF4 CB C7            set 0,a
 907+ 8CF6 32 1A 86         ld (Ctrl_1),a
 908+ 8CF9 CD A0 7F         call Guarda_foto_registros
 909+ 8CFC 3A 1A 86         ld a,(Ctrl_1)
 910+ 8CFF CB 87            res 0,a
 911+ 8D01 32 1A 86         ld (Ctrl_1),a
 912+ 8D04 E1               pop hl
 913+ 8D05 C9               ret
 914+ 8D06
 915+ 8D06 E5           Mueve_disparo push hl
 916+ 8D07 7E               ld a,(hl)
 917+ 8D08 06 04            ld b,4
 918+ 8D0A 23           1 inc hl
 919+ 8D0B 10 FD            djnz 1B
 920+ 8D0D
 921+ 8D0D              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D0D
 923+ 8D0D CD 55 88         call Extrae_address
 924+ 8D10
 925+ 8D10 E6 01            and 1
 926+ 8D12 28 2A            jr z,2F
 927+ 8D14
 928+ 8D14              ; Disparo hacia arriba, (Amadeus).
 929+ 8D14
 930+ 8D14              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D14              ; _ de la dificultad.
 932+ 8D14
 933+ 8D14 CD C8 90         call PreviousScan
 934+ 8D17 CD C8 90         call PreviousScan
 935+ 8D1A CD C8 90         call PreviousScan
 936+ 8D1D
 937+ 8D1D              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D1D
 939+ 8D1D 7C               ld a,h
 940+ 8D1E FE 40            cp $40
 941+ 8D20 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D22
 943+ 8D22              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D22
 945+ 8D22 EB               ex de,hl
 946+ 8D23 06 04            ld b,4
 947+ 8D25 2B           6 dec hl
 948+ 8D26 10 FD            djnz 6B
 949+ 8D28
 950+ 8D28 CD 57 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D2B
 952+ 8D2B 18 0C            jr 4F
 953+ 8D2D
 954+ 8D2D              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D2D
 956+ 8D2D D5           3 push de
 957+ 8D2E C5               push bc
 958+ 8D2F CD 13 8B         call Comprueba_Colision
 959+ 8D32 78               ld a,b
 960+ 8D33 C1               pop bc
 961+ 8D34 D1               pop de
 962+ 8D35
 963+ 8D35 EB               ex de,hl
 964+ 8D36
 965+ 8D36 73               ld (hl),e
 966+ 8D37 23               inc hl
 967+ 8D38 72               ld (hl),d
 968+ 8D39
 969+ 8D39 E1           4 pop hl
 970+ 8D3A 23               inc hl
 971+ 8D3B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8D3C 2B               dec hl
 973+ 8D3D C9               ret
 974+ 8D3E
 975+ 8D3E              ; Disparo hacia abajo, (Entidad).
 976+ 8D3E
 977+ 8D3E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8D3E              ; _ de la dificultad.
 979+ 8D3E
 980+ 8D3E CD B9 90     2 call NextScan
 981+ 8D41 CD B9 90         call NextScan
 982+ 8D44 CD B9 90         call NextScan
 983+ 8D47
 984+ 8D47              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8D47
 986+ 8D47 7C               ld a,h
 987+ 8D48 FE 58            cp $58
 988+ 8D4A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8D4C
 990+ 8D4C EB               ex de,hl
 991+ 8D4D 06 04            ld b,4
 992+ 8D4F 2B           5 dec hl
 993+ 8D50 10 FD            djnz 5B
 994+ 8D52
 995+ 8D52 CD 57 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D55
 997+ 8D55 18 E2            jr 4B
 998+ 8D57
 999+ 8D57              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D57
1001+ 8D57 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D5A AF               xor a
1003+ 8D5B 77               ld (hl),a
1004+ 8D5C 54               ld d,h
1005+ 8D5D 5D               ld e,l
1006+ 8D5E 13               inc de
1007+ 8D5F ED B0            ldir
1008+ 8D61 C9               ret
1009+ 8D62
1010+ 8D62              ; -----------------------------------------------------------------
1011+ 8D62              ;
1012+ 8D62              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D62              ;
1014+ 8D62              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D62              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D62              ;
1017+ 8D62              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D62              ;
1019+ 8D62              ;   INPUTS:
1020+ 8D62              ;
1021+ 8D62              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D62              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D62              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D62
1025+ 8D62              ;   MODIFICA: A, HL, DE y C
1026+ 8D62
1027+ 8D62 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D63 79               ld a,c
1029+ 8D64 E6 01            and 1
1030+ 8D66 20 03            jr nz,1F
1031+ 8D68 14               inc d
1032+ 8D69 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D6B
1034+ 8D6B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D6B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D6B
1037+ 8D6B 15           1 dec d
1038+ 8D6C 23           2 inc hl
1039+ 8D6D 72               ld (hl),d
1040+ 8D6E
1041+ 8D6E 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D6F A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D70 C8               ret z
1044+ 8D71
1045+ 8D71 AF               xor a
1046+ 8D72 5F               ld e,a
1047+ 8D73 18 ED            jr Guarda_coordenadas_X
1048+ 8D75
1049+ 8D75              ; -----------------------------------------------------------------
1050+ 8D75              ;
1051+ 8D75              ;   12/04/23
1052+ 8D75              ;
1053+ 8D75
1054+ 8D75 3A 31 86     Selector_de_impactos ld a,(Impacto2)
1055+ 8D78 A7               and a
1056+ 8D79 C8               ret z
1057+ 8D7A
1058+ 8D7A FE 04            cp 4
1059+ 8D7C 20 09            jr nz,1F
1060+ 8D7E
1061+ 8D7E
1062+ 8D7E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D7E
1064+ 8D7E CD A4 8B         call Detecta_colision_nave_entidad
1065+ 8D81
1066+ 8D81 21 31 86         ld hl,Impacto2
1067+ 8D84 CB 5E            bit 3,(hl)
1068+ 8D86 C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D87
1070+ 8D87              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D87              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D87
1073+ 8D87 21 31 86     1 ld hl,Impacto2
1074+ 8D8A CB 4E            bit 1,(hl)
1075+ 8D8C 28 07            jr z,2F
1076+ 8D8E
1077+ 8D8E 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D91 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D93 18 0B            jr 3F
1080+ 8D95
1081+ 8D95 21 31 86     2 ld hl,Impacto2
1082+ 8D98 CB 46            bit 0,(hl)
1083+ 8D9A C8               ret z
1084+ 8D9B
1085+ 8D9B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8D9B
1087+ 8D9B 21 1A 86         ld hl,Ctrl_1
1088+ 8D9E CB D6            set 2,(hl)
1089+ 8DA0
1090+ 8DA0 C9           3 ret
1091+ 8DA1
1092+ 8DA1              ; -----------------------------------------------------------------
1093+ 8DA1              ;
1094+ 8DA1              ;   16/04/23
1095+ 8DA1              ;
1096+ 8DA1
1097+ 8DA1 AF           Limpia_Coordenadas_X xor a
1098+ 8DA2 06 06            ld b,6
1099+ 8DA4 21 36 86         ld hl,Coordenadas_X_Amadeus
1100+ 8DA7 77           1 ld (hl),a
1101+ 8DA8 23               inc hl
1102+ 8DA9 10 FC            djnz 1B
1103+ 8DAB C9               ret
1104+ 8DAC
1105+ 8DAC              ; -----------------------------------------------------------------
1106+ 8DAC              ;
1107+ 8DAC              ;   25/04/23
1108+ 8DAC              ;
1109+ 8DAC
1110+ 8DAC              Determina_resultado_comparativa
1111+ 8DAC
1112+ 8DAC 7C               ld a,h
1113+ 8DAD 06 00            ld b,0
1114+ 8DAF
1115+ 8DAF CD C7 8D         call Compara_cositas
1116+ 8DB2 04               inc b
1117+ 8DB3 05               dec b
1118+ 8DB4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8DB5
1120+ 8DB5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8DB6 06 00            ld b,0
1122+ 8DB8 FE 02            cp $02
1123+ 8DBA 28 09            jr z,1F
1124+ 8DBC FE FE            cp $fe
1125+ 8DBE 28 05            jr z,1F
1126+ 8DC0
1127+ 8DC0 CD C7 8D         call Compara_cositas
1128+ 8DC3 18 01            jr 2F
1129+ 8DC5
1130+ 8DC5 04           1 inc b
1131+ 8DC6 C9           2 ret
1132+ 8DC7
1133+ 8DC7 A7           Compara_cositas and a
1134+ 8DC8 28 07            jr z,1F
1135+ 8DCA FE FF            cp $ff
1136+ 8DCC 28 03            jr z,1F
1137+ 8DCE FE 01            cp $01
1138+ 8DD0 C0               ret nz
1139+ 8DD1 04           1 inc b
1140+ 8DD2 C9               ret
1141+ 8DD3
# file closed: Disparo.asm
1050  8DD3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DD3              ; ******************************************************************************************************************************************************************************************
   2+ 8DD3              ;
   3+ 8DD3              ; 01/23
   4+ 8DD3              ;
   5+ 8DD3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DD3
   7+ 8DD3 CD AD 90     Draw call Prepara_draw
   8+ 8DD6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DD7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DD8 28 05        	jr z,2F
  11+ 8DDA
  12+ 8DDA 3A F2 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DDD 18 0C        	jr 1F
  14+ 8DDF 2A F0 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DE2 22 E0 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DE5 CD 74 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DE8              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DE8 CD F3 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DEB 3A 0C 86     1 ld a,(Ctrl_0)
  20+ 8DEE CB 6F        	bit 5,a
  21+ 8DF0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DF2
  23+ 8DF2 CD 0A 8E     	call Comprueba_limite_horizontal
  24+ 8DF5 CD 9A 8E     	call Comprueba_limite_vertical
  25+ 8DF8
  26+ 8DF8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DF8
  28+ 8DF8 CD E7 8F     3 call calcula_CColumnass
  29+ 8DFB CD 1E 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8DFE CD 73 90     	call Define_rutina_de_impresion
  31+ 8E01
  32+ 8E01 3A 0C 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E04 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E06 32 0C 86     	ld (Ctrl_0),a
  35+ 8E09
  36+ 8E09 C9           	ret
  37+ 8E0A
  38+ 8E0A              ; *******************************************************************************************************************************************************************************************
  39+ 8E0A              ;	21/01/23
  40+ 8E0A              ;
  41+ 8E0A              ; 	Comprueba_limite_horizontal.
  42+ 8E0A              ;
  43+ 8E0A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E0A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E0A              ;
  46+ 8E0A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E0A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E0A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E0A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E0A
  51+ 8E0A
  52+ 8E0A
  53+ 8E0A 3A 0C 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E0D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E0F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E11 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E13 32 0C 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E16 18 09            jr 6F
  59+ 8E18 CB 5F        1 bit 3,a
  60+ 8E1A 28 0A            jr z,2F
  61+ 8E1C E6 F7            and $f7
  62+ 8E1E 32 0C 86         ld (Ctrl_0),a
  63+ 8E21 CD 74 8F     6 call Inicializacion
  64+ 8E24 18 5B            jr 5F
  65+ 8E26 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E27
  67+ 8E27              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E27              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E27
  70+ 8E27 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E28 2A 17 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E2B CD 79 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E2E 67           	ld h,a
  74+ 8E2F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E30 CD 79 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E33 67           	ld h,a
  77+ 8E34 A7           	and a
  78+ 8E35 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E37 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E38 3A F2 85     	ld a,(Cuad_objeto)
  81+ 8E3B FE 02        	cp 2
  82+ 8E3D 38 1E        	jr c,3F
  83+ 8E3F 28 1C        	jr z,3F
  84+ 8E41 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E42 28 23            jr z,7F
  86+ 8E44 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E46 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E48 E1           	pop hl
  89+ 8E49
  90+ 8E49              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E49              ; _para indicar con E="2" en caso necesario.
  92+ 8E49
  93+ 8E49 E5               push hl
  94+ 8E4A C5               push bc
  95+ 8E4B CD 79 93     	call calcula_tercio
  96+ 8E4E FE 01        	cp 1
  97+ 8E50 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E52 CD 82 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E55 28 26            jr z,9F
 100+ 8E57 38 24            jr c,9F
 101+ 8E59 1E 00        11 ld e,0
 102+ 8E5B 18 22            jr 8F
 103+ 8E5D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E5E 28 07        	jr z, 7F
 105+ 8E60 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E62 1E 00         	ld e,0
 107+ 8E64 E1           	pop hl
 108+ 8E65 18 04        	jr 4F
 109+ 8E67 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E69 18 15            jr 10F
 111+ 8E6B
 112+ 8E6B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E6B              ; _para indicar con E="2" en caso necesario.
 114+ 8E6B
 115+ 8E6B E5           4 push hl
 116+ 8E6C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E6D CD 79 93     	call calcula_tercio
 118+ 8E70 FE 01        	cp 1
 119+ 8E72 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E74 CD 82 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E77 28 04            jr z,9F
 122+ 8E79 30 02            jr nc,9F
 123+ 8E7B 18 02        	jr 8F
 124+ 8E7D 1E 02        9 ld e,2
 125+ 8E7F C1           8 pop bc
 126+ 8E80 E1           10 pop hl
 127+ 8E81 C9           5 ret
 128+ 8E82
 129+ 8E82              ; --------------------
 130+ 8E82              ;
 131+ 8E82              ; 25/08/22
 132+ 8E82
 133+ 8E82 CD 79 93     Comprueba_centro call calcula_tercio
 134+ 8E85 67               ld h,a
 135+ 8E86 08           	ex af,af
 136+ 8E87 FE 02        	cp 2
 137+ 8E89 38 07        	jr c,1F
 138+ 8E8B 28 05        	jr z,1F
 139+ 8E8D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E90 18 03        	jr 2F
 141+ 8E92 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E95 08           2 ex af,af
 143+ 8E96 A7               and a
 144+ 8E97 ED 42            sbc hl,bc
 145+ 8E99 C9               ret
 146+ 8E9A
 147+ 8E9A              ; *********************************************************************************************************************************************************************************************
 148+ 8E9A              ;
 149+ 8E9A              ;   16/8/22
 150+ 8E9A              ;
 151+ 8E9A              ;	Comprueba_limite_vertical
 152+ 8E9A              ;
 153+ 8E9A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E9A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E9A              ;
 156+ 8E9A
 157+ 8E9A 2A E0 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E9D 7D           	ld a,l
 159+ 8E9E E6 1F        	and $1F
 160+ 8EA0 57           	ld d,a
 161+ 8EA1 3A 19 86     	ld a,(Limite_vertical)
 162+ 8EA4 BA           	cp d 											; Límite - Posición.
 163+ 8EA5 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EA6 3A F2 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EA9 CB 47        	bit 0,a
 166+ 8EAB 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EAD
 168+ 8EAD              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EAD
 170+ 8EAD 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EAE 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EB0
 173+ 8EB0              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EB0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EB0
 176+ 8EB0 3A E4 85         ld a,(Coordenada_X)
 177+ 8EB3 16 0F            ld d,Centro_izquierda
 178+ 8EB5 A7               and a
 179+ 8EB6 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EB7 28 1E            jr z,3F
 181+ 8EB9 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8EBB              ;                                                    ; _salimos sin modificar nada.
 183+ 8EBB 18 0E            jr 2F
 184+ 8EBD 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8EBE 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8EC0
 187+ 8EC0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8EC0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8EC0
 190+ 8EC0 3A E4 85         ld a,(Coordenada_X)
 191+ 8EC3 16 10            ld d,Centro_derecha
 192+ 8EC5 A7               and a
 193+ 8EC6 92               sub d
 194+ 8EC7 28 0E            jr z,3F
 195+ 8EC9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8ECB              ;                                                    ; _salimos sin modificar nada.
 197+ 8ECB CB 43        2 bit 0,e
 198+ 8ECD 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8ECF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8ED0 CD 64 8F         call Modificaccionne
 201+ 8ED3 C1           	pop bc
 202+ 8ED4 CD 74 8F         call Inicializacion
 203+ 8ED7 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8ED8
 205+ 8ED8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8ED8
 207+ 8ED8 C5           4 push bc
 208+ 8ED9 01 DF 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8EDC 0A           	ld a,(bc)
 210+ 8EDD 3D           	dec a
 211+ 8EDE 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EDF 7D           	ld a,l
 213+ 8EE0 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EE1 CB 47        	bit 0,a
 215+ 8EE3 28 03        	jr z,5F
 216+ 8EE5 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EE6 18 2E        	jr 7F
 218+ 8EE8
 219+ 8EE8              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EE8
 221+ 8EE8 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EE9 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EEA 3A 0C 86     	ld a,(Ctrl_0)
 224+ 8EED CB 4F        	bit 1,a
 225+ 8EEF 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EF1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EF2
 228+ 8EF2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EF2
 230+ 8EF2 1C               inc e
 231+ 8EF3 1D               dec e
 232+ 8EF4 20 07            jr nz,12F
 233+ 8EF6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EF7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EF8 22 E0 85     	ld (Posicion_actual),hl
 236+ 8EFB 18 44        13 jr 9F
 237+ 8EFD CB 43        12 bit 0,e
 238+ 8EFF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F01              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F01 C1           	pop bc
 241+ 8F02 18 D3        	jr 3B
 242+ 8F04 80           14 add b
 243+ 8F05 6F               ld l,a
 244+ 8F06 22 E0 85     	ld (Posicion_actual),hl
 245+ 8F09 CD 64 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F0C 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F0E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F10 32 0C 86         ld (Ctrl_0),a
 249+ 8F13 F1           	pop af
 250+ 8F14 18 2B        	jr 9F
 251+ 8F16
 252+ 8F16              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F16
 254+ 8F16 F5           7 push af
 255+ 8F17 3A 0C 86     	ld a,(Ctrl_0)
 256+ 8F1A CB 47        	bit 0,a
 257+ 8F1C 20 1D        	jr nz,8F
 258+ 8F1E F1           	pop af
 259+ 8F1F
 260+ 8F1F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F1F
 262+ 8F1F 1C           	inc e
 263+ 8F20 1D               dec e
 264+ 8F21 20 07            jr nz,10F
 265+ 8F23 90           	sub b
 266+ 8F24 6F               ld l,a
 267+ 8F25 22 E0 85     	ld (Posicion_actual),hl
 268+ 8F28 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F2A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F2A CB 43        10 bit 0,e
 271+ 8F2C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F2E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F2E C1           	pop bc
 274+ 8F2F 18 A6        	jr 3B
 275+ 8F31 90           16 sub b
 276+ 8F32 6F               ld l,a
 277+ 8F33 22 E0 85     	ld (Posicion_actual),hl
 278+ 8F36 CD 64 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F39 18 06            jr 9F
 280+ 8F3B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F3D 32 0C 86         ld (Ctrl_0),a
 282+ 8F40 F1           	pop af
 283+ 8F41 C1           9 pop bc
 284+ 8F42 1E 00        	ld e,0
 285+ 8F44 CD 74 8F         call Inicializacion
 286+ 8F47 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F48 08           	ex af,af
 288+ 8F49 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F4A 18 8B            jr 3B
 290+ 8F4C
 291+ 8F4C              ; --------------------
 292+ 8F4C
 293+ 8F4C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F4E CD C8 90     1 call PreviousScan
 295+ 8F51 10 FB            djnz 1B
 296+ 8F53 22 E0 85     	ld (Posicion_actual),hl
 297+ 8F56 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F57 C9           	ret
 299+ 8F58
 300+ 8F58              ; --------------------
 301+ 8F58
 302+ 8F58 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F5A CD B9 90     1 call NextScan
 304+ 8F5D 10 FB            djnz 1B
 305+ 8F5F 22 E0 85     	ld (Posicion_actual),hl
 306+ 8F62 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F63 C9           	ret
 308+ 8F64
 309+ 8F64              ; --------------------
 310+ 8F64              ;
 311+ 8F64              ;	22/01/23
 312+ 8F64              ;
 313+ 8F64              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F64              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F64              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F64
 317+ 8F64
 318+ 8F64              Modificaccionne
 319+ 8F64
 320+ 8F64 3A F2 85     	ld a,(Cuad_objeto)
 321+ 8F67 FE 02        	cp 2
 322+ 8F69 CC 4C 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F6C DC 4C 8F         call c,Modifica_Pos_actual
 324+ 8F6F C8           	ret z
 325+ 8F70 CD 58 8F         call Modifica_Pos_actual2
 326+ 8F73 C9               ret
 327+ 8F74
 328+ 8F74              ; *************************************************************************************************************************************************************************************************
 329+ 8F74              ;
 330+ 8F74              ;	13/8/22
 331+ 8F74              ;
 332+ 8F74              ;	Inicializacion
 333+ 8F74              ;
 334+ 8F74              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F74              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F74              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F74              ;
 338+ 8F74              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F74              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F74              ;	_ desaparece/aparece.
 341+ 8F74
 342+ 8F74              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F74              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F74              ;
 345+ 8F74              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F74              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F74              ; 		   [E] ="0"
 348+ 8F74
 349+ 8F74              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F74
 351+ 8F74 CD 79 93     Inicializacion call calcula_tercio
 352+ 8F77 28 36        	jr z,primit
 353+ 8F79 E6 02        	and 2
 354+ 8F7B 20 07        	jr nz,segmit
 355+ 8F7D 7D           	ld a,l
 356+ 8F7E FE 7F        	cp $7f
 357+ 8F80 38 2D        	jr c,primit
 358+ 8F82 28 2B        	jr z,primit
 359+ 8F84 CD E1 8F     segmit call column
 360+ 8F87 38 13        	jr c,tercuad
 361+ 8F89 3E 04        cuarcuad ld a,4
 362+ 8F8B 32 F2 85     	ld (Cuad_objeto),a
 363+ 8F8E 21 20 48     	ld hl,$4820
 364+ 8F91 22 17 86     	ld (Limite_horizontal),hl
 365+ 8F94 21 19 86     	ld hl,Limite_vertical
 366+ 8F97 36 0D        	ld (hl),$0d
 367+ 8F99 08           	ex af,af
 368+ 8F9A 18 3C        	jr 1F
 369+ 8F9C              tercuad
 370+ 8F9C 3E 03        	ld a,3
 371+ 8F9E 32 F2 85     	ld (Cuad_objeto),a
 372+ 8FA1 21 20 48     	ld hl,$4820
 373+ 8FA4 22 17 86     	ld (Limite_horizontal),hl
 374+ 8FA7 21 19 86     	ld hl,Limite_vertical
 375+ 8FAA 36 12        	ld (hl),$12
 376+ 8FAC 08           	ex af,af
 377+ 8FAD 18 29        	jr 1F
 378+ 8FAF CD E1 8F     primit call column
 379+ 8FB2 38 13        	jr c, primcuad
 380+ 8FB4              segcuad
 381+ 8FB4 3E 02        	ld a,2
 382+ 8FB6 32 F2 85     	ld (Cuad_objeto),a
 383+ 8FB9 21 C0 4F     	ld hl,$4fc0
 384+ 8FBC 22 17 86     	ld (Limite_horizontal),hl
 385+ 8FBF 21 19 86     	ld hl,Limite_vertical
 386+ 8FC2 36 0D        	ld (hl),$0d
 387+ 8FC4 08           	ex af,af
 388+ 8FC5 18 11        	jr 1F
 389+ 8FC7              primcuad
 390+ 8FC7 3E 01        	ld a,1
 391+ 8FC9 32 F2 85     	ld (Cuad_objeto),a
 392+ 8FCC 21 C0 4F     	ld hl,$4fc0
 393+ 8FCF 22 17 86     	ld (Limite_horizontal),hl
 394+ 8FD2 21 19 86     	ld hl,Limite_vertical
 395+ 8FD5 36 12        	ld (hl),$12
 396+ 8FD7 08           	ex af,af
 397+ 8FD8 CD A5 96     1 call Genera_coordenadas
 398+ 8FDB 21 0C 86     	ld hl,Ctrl_0
 399+ 8FDE CB EE        	set 5,(hl)
 400+ 8FE0 C9           	ret
 401+ 8FE1
 402+ 8FE1              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FE1
 404+ 8FE1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FE1              ;
 406+ 8FE1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FE1
 408+ 8FE1 7D           column ld a,l
 409+ 8FE2 E6 1F        	and $1f
 410+ 8FE4 FE 10         	cp $10
 411+ 8FE6 C9            	ret
 412+ 8FE7
 413+ 8FE7              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FE7              ;
 415+ 8FE7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FE7              ;
 417+ 8FE7              ; 14/12/22
 418+ 8FE7              ;
 419+ 8FE7              ;	Modifica: A y BC.
 420+ 8FE7
 421+ 8FE7 3A F2 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FEA E6 01        	and 1
 423+ 8FEC 28 17        	jr z,1F
 424+ 8FEE
 425+ 8FEE              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FEE
 427+ 8FEE 3A E4 85     	ld a,(Coordenada_X)
 428+ 8FF1 47           	ld b,a
 429+ 8FF2 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FF3 79           	ld a,c
 431+ 8FF4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FF5 38 08        	jr c,2F
 433+ 8FF7 47           	ld b,a
 434+ 8FF8 79           	ld a,c
 435+ 8FF9 90           	sub b
 436+ 8FFA 32 16 86     	ld (Columnas),a
 437+ 8FFD 18 1B        	jr 4F
 438+ 8FFF 79           2 ld a,c
 439+ 9000 32 16 86     	ld (Columnas),a
 440+ 9003 18 15        	jr 4F
 441+ 9005
 442+ 9005              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9005
 444+ 9005 3A E4 85     1 ld a,(Coordenada_X)
 445+ 9008 81           	add c
 446+ 9009 3D           	dec a
 447+ 900A D6 1F        	sub $1f
 448+ 900C 38 08        	jr c,3F
 449+ 900E 47           	ld b,a
 450+ 900F 79           	ld a,c
 451+ 9010 90           	sub b
 452+ 9011 32 16 86     	ld (Columnas),a
 453+ 9014 18 04        	jr 4F
 454+ 9016 79           3 ld a,c
 455+ 9017 32 16 86     	ld (Columnas),a
 456+ 901A D9           4 exx
 457+ 901B 4F           	ld c,a
 458+ 901C D9           	exx
 459+ 901D C9            ret
 460+ 901E
 461+ 901E              ; --------------------------------------------------------------------------------------------------------------------
 462+ 901E              ;
 463+ 901E              ; 7/1/23
 464+ 901E              ;
 465+ 901E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 901E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 901E              ;
 468+ 901E              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 901E              ;	DESTRUYE: HL,B Y A.
 470+ 901E
 471+ 901E 3A F2 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9021 FE 02        	cp 2
 473+ 9023 38 18        	jr c,1F
 474+ 9025 28 16        	jr z,1F
 475+ 9027 E6 01        	and 1
 476+ 9029 28 0D        	jr z,3F
 477+ 902B
 478+ 902B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 902B
 480+ 902B CD 67 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 902E
 482+ 902E 7D           9 ld a,l
 483+ 902F E6 1F        	and $1f
 484+ 9031 28 2A        	jr z,7F
 485+ 9033 2B           	dec hl
 486+ 9034 10 F8        	djnz 9B
 487+ 9036 18 25        	jr 7F
 488+ 9038
 489+ 9038              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9038
 491+ 9038 2A E0 85     3 ld hl,(Posicion_actual)
 492+ 903B 18 20        	jr 7F
 493+ 903D
 494+ 903D 28 14        1 jr z,2F
 495+ 903F
 496+ 903F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 903F
 498+ 903F CD 67 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9042 7D           4 ld a,l
 500+ 9043 E6 1F        	and $1f
 501+ 9045 28 03        	jr z,6F
 502+ 9047 2B           	dec hl
 503+ 9048 10 F8        	djnz 4B
 504+ 904A 06 0F        6 ld b,15
 505+ 904C CD C8 90     5 call PreviousScan
 506+ 904F 10 FB        	djnz 5B
 507+ 9051 18 0A        	jr 7F
 508+ 9053
 509+ 9053              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9053
 511+ 9053 CD 67 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9056 06 0F        	ld b,15
 513+ 9058 CD C8 90     8 call PreviousScan
 514+ 905B 10 FB        	djnz 8B
 515+ 905D
 516+ 905D E5           7 push hl
 517+ 905E DD E1        	pop ix
 518+ 9060
 519+ 9060 2A E2 85     	ld hl,(Puntero_objeto)
 520+ 9063 E5           	push hl
 521+ 9064 FD E1        	pop iy
 522+ 9066
 523+ 9066 C9           	ret
 524+ 9067
 525+ 9067              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9067              ;
 527+ 9067              ;	2/1/23
 528+ 9067              ;
 529+ 9067              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9067              ;
 531+ 9067              ;	Tras esta rutina tenemos:
 532+ 9067              ;
 533+ 9067              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9067              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9067              ;
 536+ 9067              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9067
 538+ 9067 2A E0 85     Operandos ld hl,(Posicion_actual)
 539+ 906A 3A 16 86     	ld a,(Columnas)
 540+ 906D 3D           	dec a
 541+ 906E 20 01        	jr nz,1F
 542+ 9070 3C           	inc a
 543+ 9071 47           1 ld b,a
 544+ 9072 C9           	ret
 545+ 9073
 546+ 9073              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9073              ;
 548+ 9073              ;	3/1/23
 549+ 9073              ;
 550+ 9073              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9073              ;
 552+ 9073              ;	Destruye: A,B,HL y DE.
 553+ 9073
 554+ 9073              Define_rutina_de_impresion
 555+ 9073
 556+ 9073 3A DF 85     	ld a,(Columns)
 557+ 9076 47           	ld b,a
 558+ 9077 3A 16 86     	ld a,(Columnas)
 559+ 907A B8           	cp b
 560+ 907B 20 0D        	jr nz,2f
 561+ 907D
 562+ 907D              ;	La entidad se imprime entera.
 563+ 907D
 564+ 907D 21 49 91     	ld hl, Indice_entidades_completas
 565+ 9080 E6 01        	and 1
 566+ 9082 28 02        	jr z,1F
 567+ 9084
 568+ 9084 23           	inc hl
 569+ 9085 23           	inc hl
 570+ 9086
 571+ 9086 CD 55 88     1 call Extrae_address
 572+ 9089 C9           	ret		;	ret
 573+ 908A
 574+ 908A              ;	La entidad no se imprime entera en pantalla.
 575+ 908A
 576+ 908A 3A F2 85     2 ld a,(Cuad_objeto)
 577+ 908D E6 01        	and 1
 578+ 908F 28 17        	jr z,3F
 579+ 9091
 580+ 9091              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9091
 582+ 9091 21 4D 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9094 3A DF 85     4 ld a,(Columns)
 584+ 9097 E6 01        	and 1
 585+ 9099 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 909B
 587+ 909B 23           	inc hl
 588+ 909C 23           	inc hl
 589+ 909D
 590+ 909D 3A 16 86     	ld a,(Columnas)
 591+ 90A0 E6 01        	and 1
 592+ 90A2 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90A4
 594+ 90A4 23           	inc hl
 595+ 90A5 23           	inc hl
 596+ 90A6
 597+ 90A6 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90A8
 599+ 90A8 21 53 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90AB 18 E7        	jr 4B
 601+ 90AD
 602+ 90AD              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90AD              ;
 604+ 90AD              ;	Prepara_draw
 605+ 90AD              ;
 606+ 90AD              ;	Es una rutina de carga.
 607+ 90AD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90AD              ;
 609+ 90AD              ;	FUNCIONAMIENTO:
 610+ 90AD              ;
 611+ 90AD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90AD              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90AD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90AD              ;
 615+ 90AD              ;	DESTRUYE:
 616+ 90AD              ;
 617+ 90AD              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90AD
 619+ 90AD 21 DE 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90B0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90B1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90B2 4E           	ld c,(hl)
 623+ 90B3 2A E0 85     	ld hl,(Posicion_actual)
 624+ 90B6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90B8 C9           	ret
 626+ 90B9
 627+ 90B9              ;----------------------------------------------------------------------------------------------------------------
 628+ 90B9              ;
 629+ 90B9              ;	5/08/22
 630+ 90B9              ;
 631+ 90B9              ;   NextScan.
 632+ 90B9              ;
 633+ 90B9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90B9              ;
 635+ 90B9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90B9              ;
 637+ 90B9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90B9              ;
 639+ 90B9              ;       DESTRUIDOS: AF y HL !!!
 640+ 90B9              ;
 641+ 90B9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90B9              ;
 643+ 90B9
 644+ 90B9 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90BA 7C               ld a,h
 646+ 90BB E6 07            and 7
 647+ 90BD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90BE
 649+ 90BE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90BF C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90C1 6F               ld l,a
 652+ 90C2 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90C3
 654+ 90C3 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90C4 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90C6 67               ld h,a
 657+ 90C7 C9               ret
 658+ 90C8
 659+ 90C8              ;----------------------------------------------------------------------------------------------------------------
 660+ 90C8              ;
 661+ 90C8              ;	5/08/22
 662+ 90C8              ;
 663+ 90C8              ;   PreviousScan.
 664+ 90C8              ;
 665+ 90C8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90C8              ;
 667+ 90C8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90C8              ;
 669+ 90C8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90C8              ;
 671+ 90C8              ;       DESTRUIDOS: AF y HL !!!
 672+ 90C8              ;
 673+ 90C8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90C8              ;
 675+ 90C8
 676+ 90C8 7C           PreviousScan ld a,h
 677+ 90C9 25               dec h               ; Dec H.
 678+ 90CA E6 07            and 7
 679+ 90CC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90CD
 681+ 90CD 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90CE D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90D0 6F               ld l,a
 684+ 90D1 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90D2
 686+ 90D2 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90D3 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90D5 67               ld h,a
 689+ 90D6 C9               ret
 690+ 90D7
 691+ 90D7              ; -----------------------------------------------------------------------------------
 692+ 90D7              ;
 693+ 90D7              ;	28/2/23
 694+ 90D7              ;
 695+ 90D7              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90D7              ;	Extrae fotos de Album_de_fotos.
 697+ 90D7
 698+ 90D7              Extrae_foto_entidades
 699+ 90D7
 700+ 90D7 3A 23 86     	ld a,(Numero_de_malotes)
 701+ 90DA A7           	and a
 702+ 90DB C8           	ret z
 703+ 90DC ED 73 24 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90E0 31 00 70     	ld sp,Album_de_fotos
 705+ 90E3
 706+ 90E3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90E5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90E6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90E7
 710+ 90E7 ED 73 26 86  	ld (Stack_2),sp
 711+ 90EB ED 7B 24 86  	ld sp,(Stack)
 712+ 90EF
 713+ 90EF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90EF
 715+ 90EF 3E CD        	ld a,$cd
 716+ 90F1 32 F9 90     	ld (Imprime),a
 717+ 90F4 EB           	ex de,hl
 718+ 90F5 22 FA 90     	ld (Imprime+1),hl
 719+ 90F8 EB           	ex de,hl
 720+ 90F9
 721+ 90F9              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90F9
 723+ 90F9 00 00 00     Imprime db 0,0,0
 724+ 90FC
 725+ 90FC 3A 23 86     	ld a,(Numero_de_malotes)
 726+ 90FF 3D           	dec a
 727+ 9100 28 09        	jr z,1F
 728+ 9102 32 23 86      	ld (Numero_de_malotes),a
 729+ 9105
 730+ 9105 ED 7B 26 86   	ld sp,(Stack_2)
 731+ 9109 18 D8        	jr 2B
 732+ 910B
 733+ 910B AF           1 xor a
 734+ 910C 32 26 86     	ld (Stack_2),a
 735+ 910F C9           	ret
 736+ 9110
 737+ 9110              ; -----------------------------------------------------------------------------------
 738+ 9110              ;
 739+ 9110              ;	28/2/23
 740+ 9110              ;
 741+ 9110              ;	Pinta los disparos generados.
 742+ 9110
 743+ 9110              Extrae_foto_disparos
 744+ 9110
 745+ 9110 3A 2C 86     	ld a,(Numero_de_disparotes)
 746+ 9113 A7           	and a
 747+ 9114 C8           	ret z
 748+ 9115 ED 73 24 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9119 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 911C
 751+ 911C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 911E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 911F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9120
 755+ 9120 ED 73 26 86  	ld (Stack_2),sp
 756+ 9124 ED 7B 24 86  	ld sp,(Stack)
 757+ 9128
 758+ 9128              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9128
 760+ 9128 3E CD        	ld a,$cd
 761+ 912A 32 32 91     	ld (Imprime2),a
 762+ 912D EB           	ex de,hl
 763+ 912E 22 33 91     	ld (Imprime2+1),hl
 764+ 9131 EB           	ex de,hl
 765+ 9132
 766+ 9132              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9132
 768+ 9132 00 00 00     Imprime2 db 0,0,0
 769+ 9135
 770+ 9135 3A 2C 86     	ld a,(Numero_de_disparotes)
 771+ 9138 3D           	dec a
 772+ 9139 28 09        	jr z,1F
 773+ 913B 32 2C 86      	ld (Numero_de_disparotes),a
 774+ 913E
 775+ 913E ED 7B 26 86  	ld sp,(Stack_2)
 776+ 9142 18 D8        	jr 2B
 777+ 9144
 778+ 9144 AF           1 xor a
 779+ 9145 32 26 86     	ld (Stack_2),a
 780+ 9148 C9           	ret
 781+ 9149
# file closed: Draw_XOR.asm
1051  9149              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9149              ;   índices de Rutinas de impresión.
   2+ 9149
   3+ 9149 59 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 914B 86 91            defw Pinta_Amadeus_3x2
   5+ 914D
   6+ 914D DC 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 914F 7C 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9151 30 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9153
  10+ 9153 06 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9155 0A 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9157 BE 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9159
  14+ 9159
  15+ 9159              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9159              ;
  17+ 9159              ;   12/12/22
  18+ 9159              ;
  19+ 9159              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9159              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9159              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9159              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9159              ;
  24+ 9159              ;   Modifica: DE y HL.
  25+ 9159
  26+ 9159 ED 73 24 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 915D FD F9        	ld sp,iy
  28+ 915F 06 10            ld b,16
  29+ 9161 D1           1 pop de
  30+ 9162 7B               ld a,e
  31+ 9163 AE               xor (hl)
  32+ 9164 77           	ld (hl),a
  33+ 9165 23           	inc hl
  34+ 9166 7A               ld a,d
  35+ 9167 AE               xor (hl)
  36+ 9168 77           	ld (hl),a
  37+ 9169 2B           	dec hl
  38+ 916A 24           	inc h
  39+ 916B 7C               ld a,h
  40+ 916C E6 07            and 7
  41+ 916E 20 0A            jr nz,2F
  42+ 9170 7D               ld a,l
  43+ 9171 C6 20            add a,$20
  44+ 9173 6F               ld l,a
  45+ 9174 38 04            jr c,2F
  46+ 9176 7C               ld a,h
  47+ 9177 D6 08            sub 8
  48+ 9179 67               ld h,a
  49+ 917A 7C           2 ld a,h
  50+ 917B FE 58            cp $58
  51+ 917D 28 02            jr z,3F
  52+ 917F 10 E0            djnz 1B
  53+ 9181 ED 7B 24 86  3 ld sp,(Stack)
  54+ 9185 C9           	ret
  55+ 9186
  56+ 9186 ED 73 24 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 918A FD F9        	ld sp,iy
  58+ 918C 06 08            ld b,8
  59+ 918E D1           1 pop de
  60+ 918F 7B               ld a,e
  61+ 9190 AE               xor (hl)
  62+ 9191 77           	ld (hl),a
  63+ 9192 23           	inc hl
  64+ 9193 7A               ld a,d
  65+ 9194 AE               xor (hl)
  66+ 9195 77           	ld (hl),a
  67+ 9196 23           	inc hl
  68+ 9197 D1           	pop de
  69+ 9198 7B               ld a,e
  70+ 9199 AE               xor (hl)
  71+ 919A 77           	ld (hl),a
  72+ 919B 2B           	dec hl
  73+ 919C 2B           	dec hl
  74+ 919D 24           	inc h
  75+ 919E 7C               ld a,h
  76+ 919F E6 07            and 7
  77+ 91A1 20 0A            jr nz,2F
  78+ 91A3 7D               ld a,l
  79+ 91A4 C6 20            add a,$20
  80+ 91A6 6F               ld l,a
  81+ 91A7 38 04            jr c,2F
  82+ 91A9 7C               ld a,h
  83+ 91AA D6 08            sub 8
  84+ 91AC 67               ld h,a
  85+ 91AD 7C           2 ld a,h
  86+ 91AE FE 58            cp $58
  87+ 91B0 28 25            jr z,4F
  88+ 91B2 7A               ld a,d
  89+ 91B3 AE               xor (hl)
  90+ 91B4 77               ld (hl),a
  91+ 91B5 D1           	pop de
  92+ 91B6 23           	inc hl
  93+ 91B7 7B               ld a,e
  94+ 91B8 AE               xor (hl)
  95+ 91B9 77           	ld (hl),a
  96+ 91BA 23           	inc hl
  97+ 91BB 7A               ld a,d
  98+ 91BC AE               xor (hl)
  99+ 91BD 77           	ld (hl),a
 100+ 91BE 2B           	dec hl
 101+ 91BF 2B           	dec hl
 102+ 91C0 24           	inc h
 103+ 91C1 7C               ld a,h
 104+ 91C2 E6 07            and 7
 105+ 91C4 20 0A            jr nz,3F
 106+ 91C6 7D               ld a,l
 107+ 91C7 C6 20            add a,$20
 108+ 91C9 6F               ld l,a
 109+ 91CA 38 04            jr c,3F
 110+ 91CC 7C               ld a,h
 111+ 91CD D6 08            sub 8
 112+ 91CF 67               ld h,a
 113+ 91D0 7C           3 ld a,h
 114+ 91D1 FE 58            cp $58
 115+ 91D3 28 02            jr z,4F
 116+ 91D5 10 B7            djnz 1B
 117+ 91D7 ED 7B 24 86  4 ld sp,(Stack)
 118+ 91DB C9           	ret
 119+ 91DC
 120+ 91DC              ; ---------------------------------------------------
 121+ 91DC
 122+ 91DC ED 73 24 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91E0 FD F9        	ld sp,iy
 124+ 91E2
 125+ 91E2              ; >>>
 126+ 91E2
 127+ 91E2 06 10            ld b,16
 128+ 91E4 D1           1 pop de
 129+ 91E5 7A           	ld a,d
 130+ 91E6 AE           	xor (hl)
 131+ 91E7 77           	ld (hl),a
 132+ 91E8 24           	inc h
 133+ 91E9 7C               ld a,h
 134+ 91EA E6 07            and 7
 135+ 91EC 20 0C            jr nz,2F
 136+ 91EE 7D               ld a,l
 137+ 91EF C6 20            add a,$20
 138+ 91F1 6F               ld l,a
 139+ 91F2 38 06            jr c,2F
 140+ 91F4 7C               ld a,h
 141+ 91F5 D6 08            sub 8
 142+ 91F7 67               ld h,a
 143+ 91F8 18 00            jr 2F
 144+ 91FA 7C           2 ld a,h
 145+ 91FB FE 58            cp $58
 146+ 91FD 28 02            jr z,3F
 147+ 91FF 10 E3            djnz 1B
 148+ 9201 ED 7B 24 86  3 ld sp,(Stack)
 149+ 9205 C9           	ret
 150+ 9206
 151+ 9206 ED 73 24 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 920A FD F9        	ld sp,iy
 153+ 920C
 154+ 920C              ; >>>
 155+ 920C
 156+ 920C 06 10            ld b,16
 157+ 920E D1           1 pop de
 158+ 920F 7B           	ld a,e
 159+ 9210 AE           	xor (hl)
 160+ 9211 77           	ld (hl),a
 161+ 9212 24           	inc h
 162+ 9213 7C               ld a,h
 163+ 9214 E6 07            and 7
 164+ 9216 20 0C            jr nz,2F
 165+ 9218 7D               ld a,l
 166+ 9219 C6 20            add a,$20
 167+ 921B 6F               ld l,a
 168+ 921C 38 06            jr c,2F
 169+ 921E 7C               ld a,h
 170+ 921F D6 08            sub 8
 171+ 9221 67               ld h,a
 172+ 9222 18 00            jr 2F
 173+ 9224 7C           2 ld a,h
 174+ 9225 FE 58            cp $58
 175+ 9227 28 02            jr z,3F
 176+ 9229 10 E3            djnz 1B
 177+ 922B ED 7B 24 86  3 ld sp,(Stack)
 178+ 922F C9           	ret
 179+ 9230
 180+ 9230              ; ---------------------------------------------------
 181+ 9230
 182+ 9230 ED 73 24 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9234 FD F9        	ld sp,iy
 184+ 9236 06 08            ld b,8
 185+ 9238 D1           1 pop de
 186+ 9239 7A           	ld a,d
 187+ 923A AE           	xor (hl)
 188+ 923B 77           	ld (hl),a
 189+ 923C 23           	inc hl
 190+ 923D D1           	pop de
 191+ 923E 7B           	ld a,e
 192+ 923F AE           	xor (hl)
 193+ 9240 77           	ld (hl),a
 194+ 9241 2B           	dec hl
 195+ 9242 24            	inc h
 196+ 9243 7C               ld a,h
 197+ 9244 E6 07            and 7
 198+ 9246 20 0A            jr nz,2F
 199+ 9248 7D               ld a,l
 200+ 9249 C6 20            add a,$20
 201+ 924B 6F               ld l,a
 202+ 924C 38 04            jr c,2F
 203+ 924E 7C               ld a,h
 204+ 924F D6 08            sub 8
 205+ 9251 67               ld h,a
 206+ 9252 7C           2 ld a,h
 207+ 9253 FE 58            cp $58
 208+ 9255 28 20            jr z,4F
 209+ 9257 D1               pop de
 210+ 9258 7B           	ld a,e
 211+ 9259 AE           	xor (hl)
 212+ 925A 77           	ld (hl),a
 213+ 925B 23           	inc hl
 214+ 925C 7A           	ld a,d
 215+ 925D AE           	xor (hl)
 216+ 925E 77           	ld (hl),a
 217+ 925F 2B           	dec hl
 218+ 9260 24           	inc h
 219+ 9261 7C               ld a,h
 220+ 9262 E6 07            and 7
 221+ 9264 20 0A            jr nz,3F
 222+ 9266 7D               ld a,l
 223+ 9267 C6 20            add a,$20
 224+ 9269 6F               ld l,a
 225+ 926A 38 04            jr c,3F
 226+ 926C 7C               ld a,h
 227+ 926D D6 08            sub 8
 228+ 926F 67               ld h,a
 229+ 9270 7C           3 ld a,h
 230+ 9271 FE 58            cp $58
 231+ 9273 28 02            jr z,4F
 232+ 9275 10 C1            djnz 1B
 233+ 9277 ED 7B 24 86  4 ld sp,(Stack)
 234+ 927B C9           	ret
 235+ 927C
 236+ 927C ED 73 24 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9280 FD F9        	ld sp,iy
 238+ 9282 06 08            ld b,8
 239+ 9284 D1           1 pop de
 240+ 9285 D1           	pop de
 241+ 9286 7B           	ld a,e
 242+ 9287 AE           	xor (hl)
 243+ 9288 77           	ld (hl),a
 244+ 9289 24            	inc h
 245+ 928A 7C               ld a,h
 246+ 928B E6 07            and 7
 247+ 928D 20 0A            jr nz,2F
 248+ 928F 7D               ld a,l
 249+ 9290 C6 20            add a,$20
 250+ 9292 6F               ld l,a
 251+ 9293 38 04            jr c,2F
 252+ 9295 7C               ld a,h
 253+ 9296 D6 08            sub 8
 254+ 9298 67               ld h,a
 255+ 9299 7C           2 ld a,h
 256+ 929A FE 58            cp $58
 257+ 929C 28 1B            jr z,4F
 258+ 929E D1               pop de
 259+ 929F 7A           	ld a,d
 260+ 92A0 AE           	xor (hl)
 261+ 92A1 77           	ld (hl),a
 262+ 92A2 24           	inc h
 263+ 92A3 7C               ld a,h
 264+ 92A4 E6 07            and 7
 265+ 92A6 20 0A            jr nz,3F
 266+ 92A8 7D               ld a,l
 267+ 92A9 C6 20            add a,$20
 268+ 92AB 6F               ld l,a
 269+ 92AC 38 04            jr c,3F
 270+ 92AE 7C               ld a,h
 271+ 92AF D6 08            sub 8
 272+ 92B1 67               ld h,a
 273+ 92B2 7C           3 ld a,h
 274+ 92B3 FE 58            cp $58
 275+ 92B5 28 02            jr z,4F
 276+ 92B7 10 CB            djnz 1B
 277+ 92B9 ED 7B 24 86  4 ld sp,(Stack)
 278+ 92BD C9           	ret
 279+ 92BE
 280+ 92BE ED 73 24 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92C2 FD F9        	ld sp,iy
 282+ 92C4 06 08            ld b,8
 283+ 92C6 D1           1 pop de
 284+ 92C7 7B           	ld a,e
 285+ 92C8 AE           	xor (hl)
 286+ 92C9 77           	ld (hl),a
 287+ 92CA 23           	inc hl
 288+ 92CB 7A           	ld a,d
 289+ 92CC AE           	xor (hl)
 290+ 92CD 77           	ld (hl),a
 291+ 92CE 2B           	dec hl
 292+ 92CF 24             	inc h
 293+ 92D0 7C               ld a,h
 294+ 92D1 E6 07            and 7
 295+ 92D3 20 0A            jr nz,2F
 296+ 92D5 7D               ld a,l
 297+ 92D6 C6 20            add a,$20
 298+ 92D8 6F               ld l,a
 299+ 92D9 38 04            jr c,2F
 300+ 92DB 7C               ld a,h
 301+ 92DC D6 08            sub 8
 302+ 92DE 67               ld h,a
 303+ 92DF 7C           2 ld a,h
 304+ 92E0 FE 58            cp $58
 305+ 92E2 28 21            jr z,4F
 306+ 92E4 D1               pop de
 307+ 92E5 7A           	ld a,d
 308+ 92E6 AE           	xor (hl)
 309+ 92E7 77           	ld (hl),a
 310+ 92E8 23           	inc hl
 311+ 92E9 D1               pop de
 312+ 92EA 7B           	ld a,e
 313+ 92EB AE           	xor (hl)
 314+ 92EC 77           	ld (hl),a
 315+ 92ED 2B           	dec hl
 316+ 92EE 24           	inc h
 317+ 92EF 7C               ld a,h
 318+ 92F0 E6 07            and 7
 319+ 92F2 20 0A            jr nz,3F
 320+ 92F4 7D               ld a,l
 321+ 92F5 C6 20            add a,$20
 322+ 92F7 6F               ld l,a
 323+ 92F8 38 04            jr c,3F
 324+ 92FA 7C               ld a,h
 325+ 92FB D6 08            sub 8
 326+ 92FD 67               ld h,a
 327+ 92FE 7C           3 ld a,h
 328+ 92FF FE 58            cp $58
 329+ 9301 28 02            jr z,4F
 330+ 9303 10 C1            djnz 1B
 331+ 9305 ED 7B 24 86  4 ld sp,(Stack)
 332+ 9309 C9           	ret
 333+ 930A
 334+ 930A ED 73 24 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 930E FD F9        	ld sp,iy
 336+ 9310 06 08            ld b,8
 337+ 9312 D1           1 pop de
 338+ 9313 7B           	ld a,e
 339+ 9314 AE           	xor (hl)
 340+ 9315 77           	ld (hl),a
 341+ 9316 24            	inc h
 342+ 9317 7C               ld a,h
 343+ 9318 E6 07            and 7
 344+ 931A 20 0A            jr nz,2F
 345+ 931C 7D               ld a,l
 346+ 931D C6 20            add a,$20
 347+ 931F 6F               ld l,a
 348+ 9320 38 04            jr c,2F
 349+ 9322 7C               ld a,h
 350+ 9323 D6 08            sub 8
 351+ 9325 67               ld h,a
 352+ 9326 7C           2 ld a,h
 353+ 9327 FE 58            cp $58
 354+ 9329 28 1C            jr z,4F
 355+ 932B D1               pop de
 356+ 932C 7A           	ld a,d
 357+ 932D AE           	xor (hl)
 358+ 932E 77           	ld (hl),a
 359+ 932F 24           	inc h
 360+ 9330 7C               ld a,h
 361+ 9331 E6 07            and 7
 362+ 9333 20 0A            jr nz,3F
 363+ 9335 7D               ld a,l
 364+ 9336 C6 20            add a,$20
 365+ 9338 6F               ld l,a
 366+ 9339 38 04            jr c,3F
 367+ 933B 7C               ld a,h
 368+ 933C D6 08            sub 8
 369+ 933E 67               ld h,a
 370+ 933F 7C           3 ld a,h
 371+ 9340 FE 58            cp $58
 372+ 9342 28 03            jr z,4F
 373+ 9344 D1               pop de
 374+ 9345 10 CB            djnz 1B
 375+ 9347 ED 7B 24 86  4 ld sp,(Stack)
 376+ 934B C9           	ret
 377+ 934C
 378+ 934C              ; ---------------------------------------------------
 379+ 934C              ;
 380+ 934C              ;   27/02/23
 381+ 934C              ;
 382+ 934C              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 934C              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 934C              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 934C
 386+ 934C ED 73 24 86  Pinta_Disparo ld (Stack),sp
 387+ 9350 FD F9            ld sp,iy
 388+ 9352 06 02            ld b,2
 389+ 9354 D1           1 pop de
 390+ 9355 7B               ld a,e
 391+ 9356 AE               xor (hl)
 392+ 9357 77               ld (hl),a
 393+ 9358 23               inc hl
 394+ 9359 7A               ld a,d
 395+ 935A AE               xor (hl)
 396+ 935B 77               ld (hl),a
 397+ 935C 2B               dec hl
 398+ 935D
 399+ 935D 24               inc h
 400+ 935E 7C               ld a,h
 401+ 935F E6 07            and 7
 402+ 9361 20 0A            jr nz,2F
 403+ 9363 7D               ld a,l
 404+ 9364 C6 20            add a,$20
 405+ 9366 6F               ld l,a
 406+ 9367 38 04            jr c,2F
 407+ 9369 7C               ld a,h
 408+ 936A D6 08            sub 8
 409+ 936C 67               ld h,a
 410+ 936D 7C           2 ld a,h
 411+ 936E FE 58            cp $58
 412+ 9370 28 02            jr z,3F
 413+ 9372
 414+ 9372 10 E0            djnz 1B
 415+ 9374 ED 7B 24 86  3 ld sp,(Stack)
 416+ 9378 C9               ret
 417+ 9379
# file closed: Rutinas_de_impresion_sprites.asm
1052  9379              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9379              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9379              ;
   3+ 9379              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9379              ;
   5+ 9379              ; *****************************************************************************************************************************************************************************************
   6+ 9379              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9379
   8+ 9379 7C           calcula_tercio ld a,h
   9+ 937A E6 18        	and $18
  10+ 937C CB 2F        	sra a
  11+ 937E CB 2F        	sra a
  12+ 9380 CB 2F        	sra a
  13+ 9382 C9           	ret
  14+ 9383
# file closed: calcula_tercio.asm
1053  9383              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9383              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9383              ;
   3+ 9383              ;
   4+ 9383              ;	CLS.
   5+ 9383              ;
   6+ 9383              ;	Limpia la pantalla y define sus atributos.
   7+ 9383              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9383              ;
   9+ 9383              ;	COLORES: 0 ..... NEGRO
  10+ 9383              ;    		 1 ..... AZUL
  11+ 9383              ; 			 2 ..... ROJO
  12+ 9383              ;			 3 ..... MAGENTA
  13+ 9383              ; 			 4 ..... VERDE
  14+ 9383              ; 			 5 ..... CIAN
  15+ 9383              ;			 6 ..... AMARILLO
  16+ 9383              ; 			 7 ..... BLANCO
  17+ 9383              ;
  18+ 9383              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9383              ;
  20+ 9383              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9383
  22+ 9383
  23+ 9383 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9386 11 01 40     	LD DE,$4001
  25+ 9389 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 938C 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 938E ED B0        	LDIR
  28+ 9390 01 FF 02     	LD BC,767
  29+ 9393 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9394 ED B0        	LDIR
  31+ 9396 C9           	ret
  32+ 9397
# file closed: Cls.asm
1054  9397              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9397              ; ******************************************************************************************************************************************************************************************
   2+ 9397              ;
   3+ 9397              ;   22/01/23
   4+ 9397              ;
   5+ 9397              ;	Mov_down
   6+ 9397              ;
   7+ 9397              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9397              ;
   9+ 9397              ;
  10+ 9397 21 0C 86     Mov_down ld hl,Ctrl_0
  11+ 939A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 939C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 939C              ; 																	; _ en el caso de que no lo haya.
  14+ 939C 3A F6 85     	ld a,(Vel_down)
  15+ 939F 47           	ld b,a
  16+ 93A0 2A E0 85         ld hl,(Posicion_actual)
  17+ 93A3 CD 79 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93A6 E6 02        	and 2
  19+ 93A8 28 0F        	jr z,1F
  20+ 93AA
  21+ 93AA              ; Nos encontramos en el último tercio de pantalla.
  22+ 93AA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93AA
  24+ 93AA 7C           	ld a,h
  25+ 93AB FE 57        	cp $57
  26+ 93AD 20 0A        	jr nz,1F
  27+ 93AF 7D           	ld a,l
  28+ 93B0 C6 20        	add $20
  29+ 93B2 30 05        	jr nc,1F
  30+ 93B4
  31+ 93B4              ; ------------------------------
  32+ 93B4 CD 8F 96     	call Reaparece_arriba
  33+ 93B7              ;	call Reinicio
  34+ 93B7              ; ------------------------------
  35+ 93B7
  36+ 93B7 18 08        	jr 3F
  37+ 93B9 CD B9 90     1 call NextScan
  38+ 93BC 22 E0 85     	ld (Posicion_actual),hl
  39+ 93BF 10 E2            djnz 2B
  40+ 93C1 CD A5 96     3 call Genera_coordenadas
  41+ 93C4 C9           	ret
  42+ 93C5
  43+ 93C5              ; ******************************************************************************************************************************************************************************************
  44+ 93C5              ;
  45+ 93C5              ;   22/01/23
  46+ 93C5              ;
  47+ 93C5              ;	Mov_up
  48+ 93C5              ;
  49+ 93C5              ; 	Mueve el Sprite hacia arriba.
  50+ 93C5              ;
  51+ 93C5              ;
  52+ 93C5 21 0C 86     Mov_up ld hl,Ctrl_0
  53+ 93C8 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93CA              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93CA              ; 																		; _ en el caso de que no lo haya.
  56+ 93CA 3A F5 85     	ld a,(Vel_up)
  57+ 93CD 47           	ld b,a
  58+ 93CE 2A E0 85     	ld hl,(Posicion_actual)
  59+ 93D1 CD 79 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93D4 A7           	and a
  61+ 93D5 20 10        	jr nz,1F
  62+ 93D7
  63+ 93D7              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93D7              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93D7
  66+ 93D7 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93D8 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93DA 20 0B            jr nz,1F
  69+ 93DC 7D               ld a,l
  70+ 93DD D6 20            sub $20
  71+ 93DF 30 06            jr nc,1F
  72+ 93E1 25               dec h
  73+ 93E2
  74+ 93E2              ; -----------------------------
  75+ 93E2 CD 7F 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93E5              ;	call Reinicio
  77+ 93E5              ; -----------------------------
  78+ 93E5
  79+ 93E5 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93E7 CD C8 90     1 call PreviousScan
  81+ 93EA 22 E0 85     	ld (Posicion_actual),hl
  82+ 93ED 10 E2            djnz 3B
  83+ 93EF CD A5 96     2 call Genera_coordenadas
  84+ 93F2 C9           	ret
  85+ 93F3
  86+ 93F3              ; ******************************************************************************************************************************************************************************************
  87+ 93F3              ;
  88+ 93F3              ;	19/10/22
  89+ 93F3              ;
  90+ 93F3              ;	Mov_right.
  91+ 93F3              ;
  92+ 93F3              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93F3              ;
  94+ 93F3
  95+ 93F3 21 0C 86     Mov_right ld hl,Ctrl_0
  96+ 93F6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93F8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93F8              ; 																	; _ en el caso de que no lo haya.
  99+ 93F8 3A 0C 86     	ld a,(Ctrl_0)
 100+ 93FB CB 77        	bit 6,a
 101+ 93FD 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 93FF
 103+ 93FF CD 2D 96     	call Stop_Amadeus_right
 104+ 9402 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9403 18 4D        	jr 8F
 106+ 9405
 107+ 9405 3A E4 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9408 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 940A 20 46        	jr nz,8F
 110+ 940C
 111+ 940C 3A E6 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 940F A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9410 28 40        	jr z,8F
 114+ 9412
 115+ 9412              ; ---------- ---------- ----------
 116+ 9412              ;
 117+ 9412              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9412
 119+ 9412 3A F4 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9415 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9417 28 11        	jr z,1F
 122+ 9419 38 06        	jr c,6F
 123+ 941B FE 04        	cp 4
 124+ 941D 28 14        	jr z,7F
 125+ 941F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9421
 127+ 9421              ; ---------- ---------- ----------
 128+ 9421              ;
 129+ 9421              ; Perfiles de velocidad
 130+ 9421              ;
 131+ 9421
 132+ 9421 3A E6 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9424 FE FE        	cp $fe
 134+ 9426 20 2A        	jr nz,8F
 135+ 9428 18 10        	jr 3F
 136+ 942A 3A E6 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 942D FE FD        	cp $fd
 138+ 942F 20 21        	jr nz,8F
 139+ 9431 18 07        	jr 3F
 140+ 9433 3A E6 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9436 FE FB        	cp $fb
 142+ 9438 20 18        	jr nz,8F
 143+ 943A
 144+ 943A              ; ---------- ---------- ----------
 145+ 943A
 146+ 943A              3
 147+ 943A CD 6D 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 943D              ;	call Reinicio
 149+ 943D
 150+ 943D              ; ---------- ---------- ----------
 151+ 943D              ;
 152+ 943D              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 943D
 154+ 943D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 943F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9440 CD 59 94     	call DESPLZ_DER
 157+ 9443 C1           	pop bc
 158+ 9444 10 F9        	djnz 5B
 159+ 9446 2A E0 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9449 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 944A 22 E0 85     	ld (Posicion_actual),hl
 162+ 944D CD A5 96     	call Genera_coordenadas
 163+ 9450 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9452
 165+ 9452              ; ---------- ---------- ----------
 166+ 9452
 167+ 9452 2A E0 85     8 ld hl,(Posicion_actual)
 168+ 9455 CD 59 94     	call DESPLZ_DER
 169+ 9458 C9           2 ret
 170+ 9459
 171+ 9459              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9459              ;
 173+ 9459              ;	22/9/22
 174+ 9459              ;
 175+ 9459
 176+ 9459 CD 68 94     DESPLZ_DER call Desplaza_derecha
 177+ 945C CD B4 94         call modifica_parametros_1er_DESPLZ_2
 178+ 945F CD DD 94         call Ciclo_completo
 179+ 9462 21 0C 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9465 CB FE        	set 7,(hl)
 181+ 9467 C9           	ret
 182+ 9468
 183+ 9468              ; ******************************************************************************************************************************************************************************************
 184+ 9468              ;	15/02/23
 185+ 9468              ;
 186+ 9468
 187+ 9468 3A F4 85     Desplaza_derecha ld a,(Vel_right)
 188+ 946B 47           	ld b,a
 189+ 946C 2A EC 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 946F 23           1 inc hl
 191+ 9470 23           	inc hl
 192+ 9471 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9473 22 EC 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9476 CD 55 88     	call Extrae_address
 195+ 9479 22 E2 85     	ld (Puntero_objeto),hl
 196+ 947C
 197+ 947C              ; Modifica (Puntero_DESPLZ_izq).
 198+ 947C
 199+ 947C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 947C              ; Cuántos movimientos hemos hecho ??
 201+ 947C              ; DE contiene (Puntero_DESPLZ_der).
 202+ 947C
 203+ 947C 2A E8 85     7 ld hl,(Indice_Sprite_der)
 204+ 947F EB           	ex de,hl
 205+ 9480 A7           	and a
 206+ 9481 ED 52        	sbc hl,de
 207+ 9483 CB 3D        	srl l
 208+ 9485 3E 08        6 ld a,8
 209+ 9487 95           	sub l
 210+ 9488 30 1E        	jr nc,3F
 211+ 948A
 212+ 948A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 948A              ; B="0".
 214+ 948A
 215+ 948A 04           4 inc b
 216+ 948B 3C           	inc a
 217+ 948C 20 FC        	jr nz,4B
 218+ 948E 78           	ld a,b
 219+ 948F 08           	ex af,af
 220+ 9490 2A E8 85     	ld hl,(Indice_Sprite_der)
 221+ 9493 23           5 inc hl
 222+ 9494 23           	inc hl
 223+ 9495 10 FC        	djnz 5B
 224+ 9497 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 225+ 949A CD 55 88     	call Extrae_address
 226+ 949D 22 E2 85     	ld (Puntero_objeto),hl
 227+ 94A0
 228+ 94A0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94A0              ; _(Posicion_actual).
 230+ 94A0
 231+ 94A0 21 E0 85     	ld hl,Posicion_actual
 232+ 94A3 34           	inc (hl)
 233+ 94A4 08               ex af,af
 234+ 94A5 6F           	ld l,a
 235+ 94A6 18 DD        	jr 6B
 236+ 94A8
 237+ 94A8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94A8
 239+ 94A8 47           3 ld b,a
 240+ 94A9 2A EA 85     	ld hl,(Indice_Sprite_izq)
 241+ 94AC 23           2 inc hl
 242+ 94AD 23           	inc hl
 243+ 94AE 10 FC        	djnz 2B
 244+ 94B0 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94B3 C9           8 ret
 246+ 94B4
 247+ 94B4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94B4              ;
 249+ 94B4              ;	24/7/22
 250+ 94B4              ;
 251+ 94B4              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94B4              ;
 253+ 94B4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94B4              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94B4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94B4
 257+ 94B4 3A E6 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94B7 A7           	and a
 259+ 94B8 20 1F        	jr nz,1F
 260+ 94BA D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94BC 32 E6 85         ld (CTRL_DESPLZ),a
 262+ 94BF
 263+ 94BF 21 DF 85     	ld hl,Columns
 264+ 94C2 34           	inc (hl)
 265+ 94C3 3A F2 85     	ld a,(Cuad_objeto)
 266+ 94C6 E6 01        	and 1
 267+ 94C8 28 0F        	jr z,1F
 268+ 94CA 2A E0 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94CD 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94CE 22 E0 85     	ld (Posicion_actual),hl
 271+ 94D1 CD A5 96     	call Genera_coordenadas
 272+ 94D4 CD 39 96     	call Inc_CTRL_DESPLZ
 273+ 94D7 18 03        	jr 2F
 274+ 94D9 CD 39 96     1 call Inc_CTRL_DESPLZ
 275+ 94DC C9           2 ret
 276+ 94DD
 277+ 94DD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94DD              ;
 279+ 94DD              ;	24/7/22
 280+ 94DD              ;
 281+ 94DD              ;	Ciclo_completo.
 282+ 94DD              ;
 283+ 94DD              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94DD              ;
 285+ 94DD              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94DD              ; 	Decrementamos (Columns).
 287+ 94DD              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94DD              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94DD
 290+ 94DD
 291+ 94DD 3A E6 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94E0 FE FF        	cp $ff
 293+ 94E2 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94E4 E6 F0        	and $f0
 295+ 94E6 20 28        	jr nz,3F
 296+ 94E8
 297+ 94E8              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94E8
 299+ 94E8 3A E6 85     	ld a,(CTRL_DESPLZ)
 300+ 94EB 47           	ld b,a
 301+ 94EC 3E F8        	ld a,$f8
 302+ 94EE 80           	add b
 303+ 94EF 32 E6 85     	ld (CTRL_DESPLZ),a
 304+ 94F2 18 1C        	jr 3F
 305+ 94F4 21 DF 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94F7 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94F8 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94F9 32 E6 85     	ld (CTRL_DESPLZ),a
 309+ 94FC 3A F2 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 94FF E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9501 20 0A        	jr nz,2F
 312+ 9503 2A E0 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9506 23           	inc hl
 314+ 9507 22 E0 85     	ld (Posicion_actual),hl
 315+ 950A CD A5 96     	call Genera_coordenadas
 316+ 950D
 317+ 950D              ; Inicia el puntero de Sprite.
 318+ 950D
 319+ 950D CD 6C 88     2 call Inicia_puntero_objeto_der
 320+ 9510 C9           3 ret
 321+ 9511
 322+ 9511              ; ******************************************************************************************************************************************************************************************
 323+ 9511              ;
 324+ 9511              ;	15/02/23
 325+ 9511              ;
 326+ 9511              ;	Mov_left.
 327+ 9511              ;
 328+ 9511              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9511              ;
 330+ 9511              Mov_left
 331+ 9511
 332+ 9511 21 0C 86     	ld hl,Ctrl_0
 333+ 9514 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9516              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9516              ; 																	; _ en el caso de que no lo haya.
 336+ 9516 3A 0C 86     	ld a,(Ctrl_0)
 337+ 9519 CB 77        	bit 6,a
 338+ 951B 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 951D
 340+ 951D CD 33 96     	call Stop_Amadeus_left
 341+ 9520 C8           	ret z
 342+ 9521 20 4A        	jr nz,8F
 343+ 9523
 344+ 9523 3A E4 85     11 ld a,(Coordenada_X)
 345+ 9526 A7           	and a
 346+ 9527 20 44        	jr nz,8F
 347+ 9529
 348+ 9529 3A E6 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 952C A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 952D 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 952F
 352+ 952F              ; ---------- ---------- ----------
 353+ 952F
 354+ 952F 3A F3 85     	ld a,(Vel_left)
 355+ 9532 FE 02        	cp 2
 356+ 9534 28 0F        	jr z,1F
 357+ 9536 38 04        	jr c,6F
 358+ 9538 FE 04        	cp 4
 359+ 953A 28 12        	jr z,7F
 360+ 953C
 361+ 953C              ; ---------- ---------- ----------
 362+ 953C
 363+ 953C 3A E6 85     6 ld a,(CTRL_DESPLZ)
 364+ 953F FE F8        	cp $f8
 365+ 9541 20 2A        	jr nz,8F
 366+ 9543 18 10        	jr 4F
 367+ 9545 3A E6 85     1 ld a,(CTRL_DESPLZ)
 368+ 9548 FE F9        	cp $f9
 369+ 954A 20 21        	jr nz,8F
 370+ 954C 18 07        	jr 4F
 371+ 954E 3A E6 85     7 ld a,(CTRL_DESPLZ)
 372+ 9551 FE FB        	cp $fb
 373+ 9553 20 18        	jr nz,8F
 374+ 9555
 375+ 9555              ; ---------- ---------- ----------
 376+ 9555
 377+ 9555              4
 378+ 9555 CD 5B 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9558              ;	call Reinicio
 380+ 9558
 381+ 9558              ; ---------- ---------- ----------
 382+ 9558
 383+ 9558 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 955A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 955B
 386+ 955B              ;	ld hl,(Indice_Sprite_izq)
 387+ 955B              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 955B
 389+ 955B CD 74 95     	call DESPLZ_IZQ
 390+ 955E C1           	pop bc
 391+ 955F 10 F9        	djnz 5B
 392+ 9561 2A E0 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9564 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9565 22 E0 85     	ld (Posicion_actual),hl
 395+ 9568 CD A5 96     	call Genera_coordenadas
 396+ 956B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 956D
 398+ 956D              ; ---------- ---------- ----------
 399+ 956D
 400+ 956D              ; Movemos, no hay recolocación.
 401+ 956D
 402+ 956D 2A E0 85     8 ld hl,(Posicion_actual)
 403+ 9570 CD 74 95     	call DESPLZ_IZQ
 404+ 9573 C9           2 ret
 405+ 9574
 406+ 9574              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9574              ;
 408+ 9574              ;	22/9/22
 409+ 9574
 410+ 9574              DESPLZ_IZQ
 411+ 9574
 412+ 9574 CD 83 95     	call Desplaza_izquierda
 413+ 9577 CD CF 95         call modifica_parametros_1er_DESPLZ
 414+ 957A CD F7 95     	call Ciclo_completo_2
 415+ 957D 21 0C 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9580 CB BE        	res 7,(hl)
 417+ 9582 C9           	ret
 418+ 9583
 419+ 9583              Desplaza_izquierda
 420+ 9583
 421+ 9583 3A F3 85     	ld a,(Vel_left)
 422+ 9586 47           	ld b,a
 423+ 9587 2A EE 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 958A 23           1 inc hl
 425+ 958B 23           	inc hl
 426+ 958C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 958E 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9591 CD 55 88     	call Extrae_address
 429+ 9594 22 E2 85     	ld (Puntero_objeto),hl
 430+ 9597
 431+ 9597              ; Modifica (Puntero_DESPLZ_der).
 432+ 9597
 433+ 9597              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9597              ; Cuántos movimientos hemos hecho ??
 435+ 9597              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9597
 437+ 9597 2A EA 85     7 ld hl,(Indice_Sprite_izq)
 438+ 959A EB           	ex de,hl
 439+ 959B A7           	and a
 440+ 959C ED 52        	sbc hl,de
 441+ 959E CB 3D        	srl l
 442+ 95A0 3E 08        6 ld a,8
 443+ 95A2 95           	sub l
 444+ 95A3 30 1E        	jr nc,3F
 445+ 95A5
 446+ 95A5              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95A5              ; B="0".
 448+ 95A5
 449+ 95A5 04           4 inc b
 450+ 95A6 3C           	inc a
 451+ 95A7 20 FC        	jr nz,4B
 452+ 95A9 78           	ld a,b
 453+ 95AA 08           	ex af,af
 454+ 95AB 2A EA 85     	ld hl,(Indice_Sprite_izq)
 455+ 95AE 23           5 inc hl
 456+ 95AF 23           	inc hl
 457+ 95B0 10 FC        	djnz 5B
 458+ 95B2 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95B5 CD 55 88     	call Extrae_address
 460+ 95B8 22 E2 85     	ld (Puntero_objeto),hl
 461+ 95BB
 462+ 95BB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95BB              ; _(Posicion_actual).
 464+ 95BB
 465+ 95BB 21 E0 85     	ld hl,Posicion_actual
 466+ 95BE 35           	dec (hl)
 467+ 95BF 08           	ex af,af
 468+ 95C0 6F           	ld l,a
 469+ 95C1 18 DD        	jr 6B
 470+ 95C3
 471+ 95C3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95C3
 473+ 95C3 47           3 ld b,a
 474+ 95C4 2A E8 85     	ld hl,(Indice_Sprite_der)
 475+ 95C7 23           2 inc hl
 476+ 95C8 23           	inc hl
 477+ 95C9 10 FC        	djnz 2B
 478+ 95CB 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95CE C9           8 ret
 480+ 95CF
 481+ 95CF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95CF              ;
 483+ 95CF              ;	modifica_parametros_1er_DESPLZ
 484+ 95CF              ;
 485+ 95CF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95CF              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95CF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95CF
 489+ 95CF 3A E6 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95D2 A7           	and a
 491+ 95D3 20 1E        	jr nz,1F
 492+ 95D5 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95D6 32 E6 85         ld (CTRL_DESPLZ),a
 494+ 95D9 21 DF 85     	ld hl,Columns
 495+ 95DC 34           	inc (hl)
 496+ 95DD 3A F2 85     	ld a,(Cuad_objeto)
 497+ 95E0 E6 01        	and 1
 498+ 95E2 20 0F        	jr nz,1F
 499+ 95E4 2A E0 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95E7 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95E8 22 E0 85     	ld (Posicion_actual),hl
 502+ 95EB CD A5 96     	call Genera_coordenadas
 503+ 95EE CD 4A 96     	call Dec_CTRL_DESPLZ
 504+ 95F1 18 03        	jr 2F
 505+ 95F3 CD 4A 96     1 call Dec_CTRL_DESPLZ
 506+ 95F6 C9           2 ret
 507+ 95F7
 508+ 95F7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95F7
 510+ 95F7 3A E6 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95FA FE F7        	cp $f7
 512+ 95FC 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 95FE 30 2C        	jr nc,3F
 514+ 9600
 515+ 9600              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9600
 517+ 9600 06 00        	ld b,0
 518+ 9602 04           4 inc b
 519+ 9603 3C           	inc a
 520+ 9604 FE F7        	cp $f7
 521+ 9606 20 FA        	jr nz,4B
 522+ 9608 3E FF        	ld a,$ff
 523+ 960A 90           	sub b
 524+ 960B 32 E6 85     	ld (CTRL_DESPLZ),a
 525+ 960E 18 1C        	jr 3F
 526+ 9610
 527+ 9610              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9610
 529+ 9610 21 DF 85     1 ld hl,Columns
 530+ 9613 35           	dec (hl)
 531+ 9614 AF           	xor a
 532+ 9615 32 E6 85     	ld (CTRL_DESPLZ),a
 533+ 9618 3A F2 85     	ld a,(Cuad_objeto)
 534+ 961B E6 01        	and 1
 535+ 961D 28 0A        	jr z,2F
 536+ 961F 2A E0 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9622 2B           	dec hl
 538+ 9623 22 E0 85     	ld (Posicion_actual),hl
 539+ 9626 CD A5 96     	call Genera_coordenadas
 540+ 9629
 541+ 9629              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9629
 543+ 9629 CD 7F 88     2 call Inicia_puntero_objeto_izq
 544+ 962C C9           3 ret
 545+ 962D
 546+ 962D              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 962D              ;
 548+ 962D              ;	19/10/22
 549+ 962D              ;
 550+ 962D              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 962D              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 962D
 553+ 962D 3A E4 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9630 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9632 C9           	ret
 556+ 9633
 557+ 9633              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9633              ;
 559+ 9633              ;	19/10/22
 560+ 9633              ;
 561+ 9633              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9633              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9633
 564+ 9633 3A E4 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9636 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9638 C9           	ret
 567+ 9639
 568+ 9639              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9639              ;
 570+ 9639              ;	24/7/22
 571+ 9639              ;
 572+ 9639              ;	Inc_CTRL_DESPLZ
 573+ 9639              ;
 574+ 9639              ;
 575+ 9639              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9639
 577+ 9639 21 E6 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 963C 3A F4 85     	ld a,(Vel_right)
 579+ 963F A7           	and a
 580+ 9640 28 06        	jr z,1F
 581+ 9642 47           	ld b,a
 582+ 9643 34           3 inc (hl)
 583+ 9644 10 FD        	djnz 3B
 584+ 9646 18 01        	jr 2F
 585+ 9648 34           1 inc (hl)
 586+ 9649 C9           2 ret
 587+ 964A
 588+ 964A              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 964A              ;
 590+ 964A              ;	5/2/23
 591+ 964A              ;
 592+ 964A              ;	Dec_CTRL_DESPLZ
 593+ 964A              ;
 594+ 964A              ;
 595+ 964A              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 964A
 597+ 964A 21 E6 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 964D 3A F3 85     	ld a,(Vel_left)
 599+ 9650 A7           	and a
 600+ 9651 28 06        	jr z,1F
 601+ 9653 47           	ld b,a
 602+ 9654 35           3 dec (hl)
 603+ 9655 10 FD        	djnz 3B
 604+ 9657 18 01        	jr 2F
 605+ 9659 35           1 dec (hl)
 606+ 965A C9           2 ret
 607+ 965B
 608+ 965B              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 965B
 610+ 965B 2A E0 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 965E 01 1F 00     	ld bc,31
 612+ 9661 A7           	and a
 613+ 9662 ED 4A        	adc hl,bc
 614+ 9664 22 E0 85     	ld (Posicion_actual),hl
 615+ 9667 21 0C 86     	ld hl,Ctrl_0														; $xxx1
 616+ 966A CB C6        	set 0,(hl)
 617+ 966C C9           	ret
 618+ 966D
 619+ 966D              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 966D
 621+ 966D 2A E0 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9670 01 1F 00     	ld bc,31
 623+ 9673 A7           	and a
 624+ 9674 ED 42        	sbc hl,bc
 625+ 9676 22 E0 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9679 21 0C 86     	ld hl,Ctrl_0
 627+ 967C CB CE        	set 1,(hl)
 628+ 967E C9           	ret
 629+ 967F
 630+ 967F              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 967F
 632+ 967F 24           Reaparece_abajo inc h
 633+ 9680 01 E0 17     	ld bc,$17e0
 634+ 9683 A7           	and a
 635+ 9684 ED 4A        	adc hl,bc
 636+ 9686 22 E0 85     	ld (Posicion_actual),hl
 637+ 9689 21 0C 86     	ld hl,Ctrl_0
 638+ 968C CB D6        	set 2,(hl)
 639+ 968E C9           	ret
 640+ 968F
 641+ 968F              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 968F
 643+ 968F 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9692 A7           	and a
 645+ 9693 ED 42        	sbc hl,bc
 646+ 9695 22 E0 85     	ld (Posicion_actual),hl
 647+ 9698 21 0C 86     	ld hl,Ctrl_0
 648+ 969B CB DE        	set 3,(hl)
 649+ 969D C9           	ret
 650+ 969E
 651+ 969E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 969E
 653+ 969E 2A F0 85     Reinicio ld hl,(Posicion_inicio)
 654+ 96A1 22 E0 85     	ld (Posicion_actual),hl
 655+ 96A4 C9           	ret
# file closed: Direcciones.asm
1055  96A5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96A5              ; ------------------------------------------------------------------------
   2+ 96A5              ;
   3+ 96A5              ;	02/04/23
   4+ 96A5              ;
   5+ 96A5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96A5              ;	Fila superior "0", Columna izquierda "0".
   7+ 96A5              ;
   8+ 96A5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96A5              ;
  10+ 96A5              ;	Modifica: A,BC y DE.
  11+ 96A5
  12+ 96A5 C5           Genera_coordenadas push bc
  13+ 96A6 E5           	push hl
  14+ 96A7 D5           	push de
  15+ 96A8
  16+ 96A8 2A E0 85     	ld hl,(Posicion_actual)
  17+ 96AB
  18+ 96AB 7D           	ld a,l
  19+ 96AC E6 1F        	and $1f
  20+ 96AE 32 E4 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96B1
  22+ 96B1 CD 79 93     	call calcula_tercio
  23+ 96B4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96B5
  25+ 96B5 1E 00        	ld e,0
  26+ 96B7 7D           	ld a,l
  27+ 96B8 E6 E0        	and $e0
  28+ 96BA 28 01        	jr z,1F
  29+ 96BC 04           	inc b
  30+ 96BD
  31+ 96BD 04           1 inc b
  32+ 96BE 05           	dec b
  33+ 96BF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96C1              ;														; _ , salimos.
  35+ 96C1 1C           3 inc e
  36+ 96C2 D6 20        	sub 32
  37+ 96C4 20 FB        	jr nz,3B
  38+ 96C6 10 F5        	djnz 1B
  39+ 96C8
  40+ 96C8 7B           2 ld a,e
  41+ 96C9 32 E5 85     	ld (Coordenada_y),a
  42+ 96CC
  43+ 96CC D1           	pop de
  44+ 96CD E1           	pop hl
  45+ 96CE C1           	pop bc
  46+ 96CF
  47+ 96CF C9           	ret
  48+ 96D0
  49+ 96D0              ; ------------------------------------------------------------------------
  50+ 96D0              ;	28/03/23
  51+ 96D0              ;
  52+ 96D0              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96D0              ;	Fila superior "0", Columna izquierda "0".
  54+ 96D0              ;
  55+ 96D0              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96D0              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96D0              ;
  58+ 96D0              ;		DE="$120d"
  59+ 96D0              ;
  60+ 96D0              ;		D, (Coordenada_X), Columnas, $12
  61+ 96D0              ;		E, (Coordenada_y), Filas, $0d
  62+ 96D0              ;
  63+ 96D0              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96D0
  65+ 96D0              ;	Modifica: A,BC y DE.
  66+ 96D0
  67+ 96D0
  68+ 96D0              Genera_coordenadas_disparo
  69+ 96D0
  70+ 96D0              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96D0
  72+ 96D0 7D           	ld a,l
  73+ 96D1 E6 1F        	and $1f
  74+ 96D3 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96D4 CD 79 93     	call calcula_tercio
  76+ 96D7 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96D8 1E 00        	ld e,0
  78+ 96DA 7D           	ld a,l
  79+ 96DB E6 E0        	and $e0
  80+ 96DD 28 01        	jr z,1F
  81+ 96DF 04           	inc b
  82+ 96E0 1C           1 inc e
  83+ 96E1 D6 20        	sub 32
  84+ 96E3 20 FB        	jr nz,1B
  85+ 96E5 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96E7 C9           	ret
  87+ 96E8
# file closed: Genera_coordenadas.asm
1056  96E8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96E8
   2+ 96E8
   3+ 96E8              ;   11/8/22
   4+ 96E8              ;
   5+ 96E8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96E8              ;
   7+ 96E8              ;   Mov_obj.asm
   8+ 96E8              ;
   9+ 96E8              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96E8              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96E8              ;
  12+ 96E8              ;   Codificación:
  13+ 96E8              ;
  14+ 96E8              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96E8
  16+ 96E8              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96E8
  18+ 96E8 02 40 00     Arriba db 2,%01000000,0
  19+ 96EB 02 80 00     Abajo db 2,%10000000,0
  20+ 96EE 02 20 00     Derecha db 2,%00100000,0
  21+ 96F1 02 10 00     Izquierda db 2,%00010000,0
  22+ 96F4 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96F8 60 42 60 40
  22+ 96FC 63
  23+ 96FD 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9701 22 A3 80 A0
  24+ 9705 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9709 84 A0 83 A0
  25+ 970D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9711 80 A3 22 A0
  26+ 9715 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9719 40 60 42 60
  27+ 971D 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9721
  29+ 9721 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9725 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9729 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 972D 84 00
  32+ 972F 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9733 84 00
  33+ 9735 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9739 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 973D 1F 1F 1F 1F
  35+ 9741 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9745 1F 1F 1F 1F
  35+ 9749 1F
  36+ 974A 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 974E 2F 2F 2F 2F
  36+ 9752 2F 2F
  37+ 9754 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9758 2F 2F 00
  38+ 975B
  39+ 975B              ; ----- ----- ----- ----- -----
  40+ 975B
  41+ 975B 39 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 975D 35 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 975F F1 96        Indice_mov_Izquierda defw Izquierda
  44+ 9761 EE 96        Indice_mov_Derecha defw Derecha
  45+ 9763 EB 96        Indice_mov_Abajo defw Abajo
  46+ 9765 E8 96        Indice_mov_Arriba defw Arriba
  47+ 9767 25 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9769 29 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 976B 21 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 976D 2F 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 976F F4 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9771              ; ----- ----- ----- ----- -----
  53+ 9771
  54+ 9771 3A 13 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9774 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9775 28 02            jr z,1F
  57+ 9777 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9779 3A 14 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 977C C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 977E 32 14 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9781              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9781 2A 11 86         ld hl,(Puntero_mov)
  63+ 9784 7E               ld a,(hl)
  64+ 9785 32 13 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9788 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9789 22 11 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 978C
  68+ 978C 3A 15 86     Decoder ld a,(Repetimos_db)
  69+ 978F A7               and a
  70+ 9790 20 0C            jr nz,12F
  71+ 9792 2A 11 86         ld hl,(Puntero_mov)
  72+ 9795 7E               ld a,(hl)
  73+ 9796 A7               and a
  74+ 9797 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9799 E6 0F            and $0f
  76+ 979B 32 15 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 979E              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 979E 2A 11 86     12 ld hl,(Puntero_mov)
  79+ 97A1 CB 7E            bit 7,(hl)
  80+ 97A3 28 03            jr z,2F
  81+ 97A5 CD 97 93         call Mov_down
  82+ 97A8 2A 11 86     2 ld hl, (Puntero_mov)
  83+ 97AB CB 76            bit 6,(hl)
  84+ 97AD 28 03            jr z,3F
  85+ 97AF CD C5 93         call Mov_up
  86+ 97B2 2A 11 86     3 ld hl, (Puntero_mov)
  87+ 97B5 CB 6E            bit 5,(hl)
  88+ 97B7 28 03            jr z,4F
  89+ 97B9 CD F3 93         call Mov_right
  90+ 97BC 2A 11 86     4 ld hl, (Puntero_mov)
  91+ 97BF CB 66            bit 4,(hl)
  92+ 97C1 28 03            jr z,5F
  93+ 97C3 CD 11 95         call Mov_left
  94+ 97C6
  95+ 97C6              ; ---------- --------- --------- ---------- ----------
  96+ 97C6
  97+ 97C6 3A 15 86     5 ld a,(Repetimos_db)
  98+ 97C9 A7               and a
  99+ 97CA 28 07            jr z,6F
 100+ 97CC 3D               dec a
 101+ 97CD 32 15 86         ld (Repetimos_db),a
 102+ 97D0 28 01            jr z,6f
 103+ 97D2 C9           11 ret
 104+ 97D3 21 13 86     6 ld hl,Contador_db_mov
 105+ 97D6 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97D7 2A 11 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97DA 23               inc hl
 108+ 97DB 22 11 86         ld (Puntero_mov),hl
 109+ 97DE 18 F2            jr 11B
 110+ 97E0 2A 0F 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97E3 3A 14 86         ld a,(Incrementa_puntero)
 112+ 97E6 47               ld b,a
 113+ 97E7 23           8 inc hl
 114+ 97E8 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97EA 5E               ld e,(hl)
 116+ 97EB 23               inc hl
 117+ 97EC 56               ld d,(hl)
 118+ 97ED EB               ex de,hl
 119+ 97EE 22 11 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97F1 18 DF            jr 11B
 121+ 97F3
 122+ 97F3              ; ---------- --------- --------- ---------- ----------
 123+ 97F3              ;
 124+ 97F3              ;   11/8/22
 125+ 97F3              ;
 126+ 97F3              ;   Prepara_Puntero_mov
 127+ 97F3
 128+ 97F3 E5           Prepara_Puntero_mov push hl
 129+ 97F4 D5               push de
 130+ 97F5 2A 0F 86         ld hl,(Puntero_indice_mov)
 131+ 97F8 5E               ld e,(hl)
 132+ 97F9 23               inc hl
 133+ 97FA 56               ld d,(hl)
 134+ 97FB EB               ex de,hl
 135+ 97FC 22 11 86         ld (Puntero_mov),hl
 136+ 97FF D1               pop de
 137+ 9800 E1               pop hl
 138+ 9801 C9               ret
 139+ 9802
 140+ 9802              ; ---------- --------- --------- ---------- ----------
 141+ 9802              ;
 142+ 9802              ;   11/8/22
 143+ 9802              ;
 144+ 9802              ;   Reinicia_el_movimiento
 145+ 9802
 146+ 9802 CD F3 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9805 AF               xor a
 148+ 9806 32 13 86         ld (Contador_db_mov),a
 149+ 9809 32 14 86         ld (Incrementa_puntero),a
 150+ 980C C3 71 97         jp Movimiento
 151+ 980F C9               ret
 152+ 9810              ; ---------- --------- --------- ---------- ----------
 153+ 9810
 154+ 9810
 155+ 9810
 156+ 9810
 157+ 9810
 158+ 9810
 159+ 9810
 160+ 9810
 161+ 9810
 162+ 9810
 163+ 9810
 164+ 9810
 165+ 9810
 166+ 9810
 167+ 9810
 168+ 9810
 169+ 9810
 170+ 9810
# file closed: Patrones_de_mov.asm
1057  9810              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9810              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9810              ;
   3+ 9810              ;	3/1/23
   4+ 9810              ;
   5+ 9810              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9810
   7+ 9810              ;	ADC HL,SP	LD (addr),SP
   8+ 9810              ;	ADD HL,SP	LD SP,(addr)
   9+ 9810              ;	ADD IX,SP	LD SP,nn
  10+ 9810              ; 	ADD IY,SP	LD SP,HL
  11+ 9810              ;				LD SP,IX
  12+ 9810              ;	DEC SP		LD SP,IY
  13+ 9810
  14+ 9810              ;	EX (SP),HL
  15+ 9810              ;	EX (SP),IX
  16+ 9810              ;	EX (SP),IY
  17+ 9810
  18+ 9810              ;	INC SP
  19+ 9810
  20+ 9810
  21+ 9810                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 24 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 1A 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 2A 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 28 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 2A 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 28 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 24 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1058  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1059  7FE6
1060  7FE6              	SAVESNA "Pruebas.sna", START
1061  7FE6
1062  7FE6
1063  7FE6
# file closed: Banco_de_pruebas.asm
