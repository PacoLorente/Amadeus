# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 0D 8B  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A 17 8B     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 10        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 0C        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24              ;! Debugg!!!!!!!
  44  AA24
  45  AA24              ;	ld a,(Contador_de_frames_2)
  46  AA24              ;	cp $03
  47  AA24              ;	jr nz,2F
  48  AA24              ;	ld a,(Contador_de_frames)
  49  AA24              ;	cp $58
  50  AA24              ;	jr z,$
  51  AA24
  52  AA24              ; Borramos:
  53  AA24
  54  AA24 CD 4E 9C     	call Pinta_Sprites
  55  AA27
  56  AA27              ; Pintamos:
  57  AA27
  58  AA27 2A 0F 8B     	ld hl,(Album_de_pintado)
  59  AA2A 22 15 8B     	ld (Scanlines_album_SP),hl
  60  AA2D
  61  AA2D CD 4E 9C     	call Pinta_Sprites
  62  AA30
  63  AA30              ;	ld a,6
  64  AA30              ;	out ($fe),a
  65  AA30              ;	call Pinta_Amadeus										; Borde amarillo.
  66  AA30
  67  AA30              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  68  AA30              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  69  AA30
  70  AA30              ;	ld a,7
  71  AA30              ;	out ($fe),a												; Borde blanco.
  72  AA30              ;	call Guarda_parametros_DRAW
  73  AA30              ;	call Restore_Amadeus
  74  AA30
  75  AA30              ; Posible colisión Entidad-Amadeus ???
  76  AA30
  77  AA30              ;	ld a,(Impacto2)
  78  AA30              ;	bit 2,a
  79  AA30              ;	jr z,1F
  80  AA30
  81  AA30              ;	call Detecta_colision_nave_entidad
  82  AA30
  83  AA30              ;1 ld a,4
  84  AA30              ;	out ($fe),a
  85  AA30              ;	call Gestiona_Amadeus
  86  AA30
  87  AA30              ;	ld a,7
  88  AA30              ;	out ($fe),a											; Borde blanco.
  89  AA30              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  90  AA30              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  91  AA30
  92  AA30              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  93  AA30
  94  AA30              ;	call Recupera_parametros_DRAW
  95  AA30
  96  AA30 CD 6C 8D     1 call Actualiza_relojes
  97  AA33
  98  AA33 21 17 8B     	ld hl,Ctrl_3
  99  AA36 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 100  AA38 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 101  AA3A
 102  AA3A FD E1        	pop iy
 103  AA3C DD E1        	pop ix
 104  AA3E F1           	pop af
 105  AA3F C1           	pop bc
 106  AA40 D1           	pop de
 107  AA41 E1           	pop hl
 108  AA42 D9           	exx
 109  AA43 C1           	pop bc
 110  AA44 D1           	pop de
 111  AA45 E1           	pop hl
 112  AA46 08           	ex af,af'
 113  AA47 F1           	pop af
 114  AA48 08           	ex af,af'
 115  AA49 D9           	exx
 116  AA4A
 117  AA4A ED 7B 0D 8B  	ld sp,(Stack_3)
 118  AA4E
 119  AA4E FB           	ei
 120  AA4F
 121  AA4F 3E 01        	ld a,1												; Borde azul.
 122  AA51 D3 FE        	out ($fe),a
 123  AA53
 124  AA53 C9           	ret
 125  AA54
 126  AA54              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 127  AA54
 128  AA54              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA54              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA54              ;
   3+ AA54              ;	17/02/23
   4+ AA54              ;
   5+ AA54              ;	Sprites e índices.
   6+ AA54
   7+ AA54              	org $8319
   8+ 8319
   9+ 8319              ; Disparo.
  10+ 8319
  11+ 8319 21 83        Indice_disparo defw Disparo_0
  12+ 831B 27 83        	defw Disparo_f9
  13+ 831D 2D 83        	defw Disparo_fb
  14+ 831F 33 83        	defw Disparo_fd
  15+ 8321
  16+ 8321              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8321 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8325 01 80
  18+ 8327              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8327 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 832B 00 60
  20+ 832D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 832D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8331 18 00
  22+ 8333              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8333 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8337 06 00
  24+ 8339
  25+ 8339              ; ----------------------------------------------------------------------------------------
  26+ 8339
  27+ 8339              ; Badsat_izq. 2x2.
  28+ 8339
  29+ 8339 49 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 833B C0 84        	defw Badsat_izq_fe
  31+ 833D 90 84        	defw Badsat_izq_fd
  32+ 833F 60 84        	defw Badsat_izq_fc
  33+ 8341 30 84        	defw Badsat_izq_fb
  34+ 8343 00 84        	defw Badsat_izq_fa
  35+ 8345 A9 83        	defw Badsat_izq_f9
  36+ 8347 79 83        	defw Badsat_izq_f8
  37+ 8349
  38+ 8349 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 834C 02 14 00     	DEFB 	$02,$14,$00
  40+ 834F 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8352 02 55 00     	DEFB 	$02,$55,$00
  42+ 8355 02 AA 00     	DEFB	$02,$AA,$00
  43+ 8358 02 54 00     	DEFB 	$02,$54,$00
  44+ 835B 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 835E 03 60 00     	DEFB 	$03,$60,$00
  46+ 8361 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 8364 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 8367 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 836A 54 40 00     	DEFB 	$54,$40,$00
  50+ 836D AA 60 00     	DEFB	$AA,$60,$00
  51+ 8370 54 00 00     	DEFB 	$54,$00,$00
  52+ 8373 28 00 00     	DEFB 	$28,$00,$00
  53+ 8376 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8379
  55+ 8379 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 837D 0A 00 01 15
  56+ 8381 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 8385 01 55 00 01
  57+ 8389 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 838D 00 01 B0 00
  58+ 8391 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 8395 FC 00 15 F4
  59+ 8399 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 839D 55 30 00 2A
  60+ 83A1 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83A5 00 08 00 00
  61+ 83A9
  62+ 83A9 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 83AD 85 00 00 8A
  63+ 83B1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 83B5 00 AA 80 00
  64+ 83B9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 83BD 00 00 D8 00
  65+ 83C1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 83C5 FE 00 0A FA
  66+ 83C9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 83CD 2A 98 00 15
  67+ 83D1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 83D5 00 04 00 00
  68+ 83D9
  69+ 83D9
  70+ 83D9              ;! 23 bytes libres aquí !!!!!
  71+ 83D9
  72+ 83D9              	org $8400
  73+ 8400
  74+ 8400 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8404 42 80 00 45
  75+ 8408 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 840C 00 55 40 00
  76+ 8410 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8414 00 00 6C 00
  77+ 8418 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 841C FF 00 05 7D
  78+ 8420 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8424 15 4C 00 0A
  79+ 8428 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 842C 00 02 00 00
  80+ 8430
  81+ 8430 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8434 21 40 00 22
  82+ 8438 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 843C 00 2A A0 00
  83+ 8440 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8444 80 00 36 00
  84+ 8448 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 844C 7F 80 02 BE
  85+ 8450 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8454 0A A6 00 05
  86+ 8458 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 845C 00 01 00 00
  87+ 8460
  88+ 8460 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8464 10 A0 00 11
  89+ 8468 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 846C 00 15 50 00
  90+ 8470 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8474 40 00 1B 00
  91+ 8478 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 847C BF C0 01 5F
  92+ 8480 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8484 05 53 00 02
  93+ 8488 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 848C 00 00 80 00
  94+ 8490
  95+ 8490 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8494 08 50 00 08
  96+ 8498 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 849C 00 0A A8 00
  97+ 84A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 84A4 A0 00 0D 80
  98+ 84A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 84AC 5F F8 00 AF
  99+ 84B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 84B4 02 A9 00 01
 100+ 84B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 84BC 00 00 40 00
 101+ 84C0
 102+ 84C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 84C4 04 28 00 04
 103+ 84C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 84CC 00 05 54 00
 104+ 84D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 84D4 D0 00 06 C0
 105+ 84D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 84DC 2F FC 00 57
 106+ 84E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 84E4 01 54 80 00
 107+ 84E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 84EC 00 00 20 00
 108+ 84F0
 109+ 84F0
 110+ 84F0 00 85        Indice_Badsat_der defw Badsat_derecha
 111+ 84F2 30 85        	defw Badsat_der_f8
 112+ 84F4 60 85        	defw Badsat_der_f9
 113+ 84F6 90 85        	defw Badsat_der_fa
 114+ 84F8 C0 85        	defw Badsat_der_fb
 115+ 84FA 00 86        	defw Badsat_der_fc
 116+ 84FC 30 86        	defw Badsat_der_fd
 117+ 84FE 60 86        	defw Badsat_der_fe
 118+ 8500
 119+ 8500 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8503 28 40 00     	DEFB    $28,$40,$00
 121+ 8506 54 40 00     	DEFB	$54,$40,$00
 122+ 8509 AA 40 00     	DEFB	$AA,$40,$00
 123+ 850C 55 40 00     	DEFB	$55,$40,$00
 124+ 850F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8512 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8515 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8518 07 50 00     	DEFB	$07,$50,$00
 128+ 851B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 851E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8521 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8524 06 55 00     	DEFB	$06,$55,$00
 132+ 8527 00 2A 00     	DEFB	$00,$2A,$00
 133+ 852A 00 14 00     	DEFB	$00,$14,$00
 134+ 852D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8530
 136+ 8530 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8534 20 00 2A 20
 137+ 8538 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 853C 2A A0 00 15
 138+ 8540 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8544 00 03 60 00
 139+ 8548 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 854C F4 00 0B EA
 140+ 8550 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8554 03 2A 80 00
 141+ 8558 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 855C 00 00 04 00
 142+ 8560
 143+ 8560 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8564 10 00 15 10
 144+ 8568 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 856C 15 50 00 0A
 145+ 8570 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8574 80 01 B0 00
 146+ 8578 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 857C FA 00 05 F5
 147+ 8580 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8584 01 95 40 00
 148+ 8588 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 858C 00 00 02 00
 149+ 8590
 150+ 8590 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8594 08 00 0A 88
 151+ 8598 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 859C 0A A8 00 05
 152+ 85A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 85A4 C0 00 D8 00
 153+ 85A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 85AC FD 00 02 FA
 154+ 85B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 85B4 00 CA A0 00
 155+ 85B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 85BC 80 00 01 00
 156+ 85C0
 157+ 85C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 85C4 84 00 05 44
 158+ 85C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 85CC 05 54 00 02
 159+ 85D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 85D4 E0 00 6C 00
 160+ 85D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 85DC FE 80 01 7D
 161+ 85E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 85E4 00 65 50 00
 162+ 85E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 85EC 40 00 00 80
 163+ 85F0
 164+ 85F0              ;! 16 bytes libres aquí !!!!!
 165+ 85F0
 166+ 85F0              	org $8600
 167+ 8600
 168+ 8600 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8604 42 00 02 A2
 169+ 8608 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 860C 02 AA 00 01
 170+ 8610 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8614 F0 00 36 00
 171+ 8618 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 861C FF 40 00 BE
 172+ 8620 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8624 00 32 A8 00
 173+ 8628 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 862C A0 00 00 40
 174+ 8630
 175+ 8630 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8634 A1 00 01 51
 176+ 8638 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 863C 01 55 00 00
 177+ 8640 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8644 F8 00 1B 00
 178+ 8648 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 864C FF A0 00 1F
 179+ 8650 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8654 00 09 54 00
 180+ 8658 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 865C 50 00 00 20
 181+ 8660
 182+ 8660 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8664 50 80 00 A8
 183+ 8668 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 866C 00 AA 80 00
 184+ 8670 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8674 FC 00 0D 80
 185+ 8678 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 867C FF D0 00 0F
 186+ 8680 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8684 00 04 AA 00
 187+ 8688 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 868C 28 00 00 10
 188+ 8690
 189+ 8690              ; ----------------------------------------------------------------------------------------
 190+ 8690
 191+ 8690              ; Amadeus. 2x2.
 192+ 8690
 193+ 8690              	org $8119
 194+ 8119
 195+ 8119 39 81        Indice_Amadeus_der defw Amadeus
 196+ 811B 00 00        	defw 0
 197+ 811D 59 81        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 811F 00 00        	defw 0
 199+ 8121 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 8123 00 00        	defw 0
 201+ 8125 B9 81        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 8127 00 00        	defw 0	 								; (Fín de índice).
 203+ 8129
 204+ 8129 39 81        Indice_Amadeus_izq defw Amadeus
 205+ 812B 00 00        	defw 0
 206+ 812D B9 81        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 812F 00 00        	defw 0
 208+ 8131 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 8133 00 00        	defw 0
 210+ 8135 59 81        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 8137 00 00        	defw 0	 								; (Fín de índice).
 212+ 8139
 213+ 8139 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 813D 26 64 24 24
 214+ 8141 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 8145 6F F6 67 E6
 215+ 8149 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 814D F7 EF FF FF
 216+ 8151 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 8155 8B D1 71 8E
 217+ 8159
 218+ 8159 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 815D F1 00 09 99
 219+ 8161 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 8165 0B 0D 00 1B
 220+ 8169 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 816D 80 19 F9 80
 221+ 8171 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 8175 F3 C0 3D FB
 222+ 8179 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 817D 3E F7 C0 3E
 223+ 8181 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 8185 40 1C 63 80
 224+ 8189
 225+ 8189 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 818D 3C 40 02 66
 226+ 8191 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 8195 02 C3 40 06
 227+ 8199 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 819D 60 06 7E 60
 228+ 81A1 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 81A5 3C F0 0F 7E
 229+ 81A9 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 81AD 0F BD F0 0F
 230+ 81B1 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 81B5 10 07 18 E0
 231+ 81B9
 232+ 81B9 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 81BD 8F 10 00 99
 233+ 81C1 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 81C5 00 B0 D0 01
 234+ 81C9 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 81CD D8 01 9F 98
 235+ 81D1 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 81D5 CF 3C 03 DF
 236+ 81D9 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 81DD 03 EF 7C 03
 237+ 81E1 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 81E5 44 01 C6 38
 238+ 81E9
 239+ 81E9              ; ----------------------------------------------------------------------------------------
 240+ 81E9
 241+ 81E9              	org $8690
 242+ 8690
 243+ 8690 96 86        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8692 C6 86        	defw Explosion_2x3_2
 245+ 8694 F6 86        	defw Explosion_2x3_3
 246+ 8696
 247+ 8696 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 869A 10 00 04 38
 248+ 869E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 86A2 02 E6 80 01
 249+ 86A6 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 86AA 00 03 DD 80
 250+ 86AE 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 86B2 3B 80 01 9D
 251+ 86B6 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 86BA 02 FD 80 03
 252+ 86BE 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 86C2 00 08 00 00
 253+ 86C6
 254+ 86C6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 86CA 38 10 03 BC
 255+ 86CE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 86D2 04 06 C0 00
 256+ 86D6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 86DA 00 03 DD 80
 257+ 86DE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 86E2 3A 70 01 9C
 258+ 86E6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 86EA 04 F8 80 06
 259+ 86EE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 86F2 00 00 00 00
 260+ 86F6
 261+ 86F6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 86FA 00 20 08 00
 262+ 86FE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 8702 00 06 00 00
 263+ 8706 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 870A 00 00 14 30
 264+ 870E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 8712 38 00 01 08
 265+ 8716 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 871A 00 80 00 04
 266+ 871E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 8722 10 08 00 20
 267+ 8726
 268+ 8726              ; ------------------------------------------
 269+ 8726
 270+ 8726 2C 87        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 8728 4C 87        	defw Explosion_2x2_2
 272+ 872A 6C 87        	defw Explosion_2x2_3
 273+ 872C
 274+ 872C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8730 43 84 37 D8
 275+ 8734 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8738 17 F0 3D D8
 276+ 873C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8740 19 D0 1F 60
 277+ 8744 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8748 40 00 80 00
 278+ 874C
 279+ 874C
 280+ 874C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8750 3B C2 60 0C
 281+ 8754 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8758 07 F0 3D D8
 282+ 875C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8760 19 C6 1F 64
 283+ 8764 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8768 80 00 00 00
 284+ 876C
 285+ 876C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8770 88 04 10 0C
 286+ 8774 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8778 81 E0 01 43
 287+ 877C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8780 10 80 18 00
 288+ 8784 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8788 60 01 80 02
 289+ 878C
 290+ 878C
 291+ 878C
 292+ 878C
 293+ 878C
# file closed: Sprites_e_indices.asm
 129  878C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 878C
   2+ 878C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 878C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 878C
   5+ 878C              ; 19/01/24
   6+ 878C
   7+ 878C FB 88        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 878E              ;	defw ...
   9+ 878E              ; 	defw ...
  10+ 878E 00 00        	defw 0
  11+ 8790
  12+ 8790              ; Control. %00000001 00000001
  13+ 8790              ;
  14+ 8790              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8790              ;                    _ hacen las entidades hacia abajo.
  16+ 8790              ;
  17+ 8790              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8790
  19+ 8790 96 87        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8792 9E 87        	defw Disparo_2A
  21+ 8794 A6 87        	defw Disparo_3A
  22+ 8796
  23+ 8796 00 00        Disparo_1A defw 0									; Control.
  24+ 8798 00 00        	defw 0											; Puntero objeto.
  25+ 879A 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 879C 00 00        	defw 0											; Rutina de impresión.
  27+ 879E
  28+ 879E 00 00        Disparo_2A defw 0									; Control.
  29+ 87A0 00 00        	defw 0											; Puntero objeto.
  30+ 87A2 00 00        	defw 0											; Puntero de impresión.
  31+ 87A4 00 00        	defw 0											; Rutina de impresión.
  32+ 87A6
  33+ 87A6 00 00        Disparo_3A defw 0
  34+ 87A8
  35+ 87A8 BE 87        Indice_de_disparos_entidades defw Disparo_1
  36+ 87AA C6 87        	defw Disparo_2
  37+ 87AC CE 87        	defw Disparo_3
  38+ 87AE D6 87        	defw Disparo_4
  39+ 87B0 DE 87        	defw Disparo_5
  40+ 87B2 E6 87        	defw Disparo_6
  41+ 87B4 EE 87        	defw Disparo_7
  42+ 87B6 F6 87        	defw Disparo_8
  43+ 87B8 FE 87        	defw Disparo_9
  44+ 87BA 06 88        	defw Disparo_10
  45+ 87BC 0E 88        	defw Disparo_11
  46+ 87BE
  47+ 87BE 00 00        Disparo_1 defw 0									; Control.
  48+ 87C0 00 00        	defw 0											; Puntero objeto.
  49+ 87C2 00 00        	defw 0											; Puntero de impresión.
  50+ 87C4 00 00        	defw 0											; Rutina de impresión.
  51+ 87C6
  52+ 87C6 00 00        Disparo_2 defw 0									; Control.
  53+ 87C8 00 00        	defw 0											; Puntero objeto.
  54+ 87CA 00 00        	defw 0											; Puntero de impresión.
  55+ 87CC 00 00        	defw 0											; Rutina de impresión.
  56+ 87CE
  57+ 87CE 00 00        Disparo_3 defw 0									; Control.
  58+ 87D0 00 00        	defw 0											; Puntero objeto.
  59+ 87D2 00 00        	defw 0											; Puntero de impresión.
  60+ 87D4 00 00        	defw 0											; Rutina de impresión.
  61+ 87D6
  62+ 87D6 00 00        Disparo_4 defw 0									; Control.
  63+ 87D8 00 00        	defw 0											; Puntero objeto.
  64+ 87DA 00 00        	defw 0											; Puntero de impresión.
  65+ 87DC 00 00        	defw 0											; Rutina de impresión.
  66+ 87DE
  67+ 87DE 00 00        Disparo_5 defw 0									; Control.
  68+ 87E0 00 00        	defw 0											; Puntero objeto.
  69+ 87E2 00 00        	defw 0											; Puntero de impresión.
  70+ 87E4 00 00        	defw 0											; Rutina de impresión.
  71+ 87E6
  72+ 87E6 00 00        Disparo_6 defw 0									; Control.
  73+ 87E8 00 00        	defw 0											; Puntero objeto.
  74+ 87EA 00 00        	defw 0											; Puntero de impresión.
  75+ 87EC 00 00        	defw 0											; Rutina de impresión.
  76+ 87EE
  77+ 87EE 00 00        Disparo_7 defw 0									; Control.
  78+ 87F0 00 00        	defw 0											; Puntero objeto.
  79+ 87F2 00 00        	defw 0											; Puntero de impresión.
  80+ 87F4 00 00        	defw 0											; Rutina de impresión.
  81+ 87F6
  82+ 87F6 00 00        Disparo_8 defw 0									; Control.
  83+ 87F8 00 00        	defw 0											; Puntero objeto.
  84+ 87FA 00 00        	defw 0											; Puntero de impresión.
  85+ 87FC 00 00        	defw 0											; Rutina de impresión.
  86+ 87FE
  87+ 87FE 00 00        Disparo_9 defw 0									; Control.
  88+ 8800 00 00        	defw 0											; Puntero objeto.
  89+ 8802 00 00        	defw 0											; Puntero de impresión.
  90+ 8804 00 00        	defw 0											; Rutina de impresión.
  91+ 8806
  92+ 8806 00 00        Disparo_10 defw 0									; Control.
  93+ 8808 00 00        	defw 0											; Puntero objeto.
  94+ 880A 00 00        	defw 0											; Puntero de impresión.
  95+ 880C 00 00        	defw 0											; Rutina de impresión.
  96+ 880E
  97+ 880E 00 00        Disparo_11 defw 0
  98+ 8810
  99+ 8810              ; -------------------------------------------------------------------------------------
 100+ 8810              ;
 101+ 8810              ;	Índice de cajas de entidades.
 102+ 8810              ;
 103+ 8810              ;	18/1/24
 104+ 8810              ;
 105+ 8810
 106+ 8810              Indice_de_cajas_de_entidades
 107+ 8810
 108+ 8810 58 88        	defw Caja_1
 109+ 8812 6B 88        	defw Caja_2
 110+ 8814 7E 88        	defw Caja_3
 111+ 8816 91 88        	defw Caja_4
 112+ 8818 A4 88        	defw Caja_5
 113+ 881A B7 88        	defw Caja_6
 114+ 881C CA 88        	defw Caja_7
 115+ 881E
 116+ 881E 00 00        	defw 0
 117+ 8820 00 00        	defw 0
 118+ 8822
 119+ 8822              ; ---------- ---------- ---------- ---------- ----------
 120+ 8822
 121+ 8822 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8825 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8827 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8829 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 882B
 126+ 882B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 882C 05           	db %00000101										; (Attr).
 128+ 882D 19 81        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 882F 29 81        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8831 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8833 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8835 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8837 04           	db 4 												; (Cuad_objeto).
 134+ 8838 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8839 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 883F
 137+ 883F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8841
 139+ 8841              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8841 00 00        	defw 0
 141+ 8843
 142+ 8843 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8845 40           	db $40												; (Ctrl_0).
 144+ 8846 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 884A 00 00
 145+ 884C 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 884F 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8851 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8852 00           	db 0 												; (Columnas).
 149+ 8853 00 00        	defw 0												; (Limite_horizontal).
 150+ 8855 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 8858
 152+ 8858              ; ---------- ---------- ---------- ---------- ----------
 153+ 8858              ;
 154+ 8858              ;	22/01/24
 155+ 8858              ;
 156+ 8858              ; 	Cada caja tiene 19 bytes !!!
 157+ 8858
 158+ 8858 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 885B 00           	db %00000000										; (Attr).
 160+ 885C              ;	db 0												; (Cuad_objeto).
 161+ 885C 00           	db 0												; (Impacto).
 162+ 885D 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8863 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8865 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 8867 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 8869 00           	db 0												; (Ctrl_0).
 167+ 886A 00           	db 0												; (Ctrl_2).
 168+ 886B
 169+ 886B              ; ---------- ---------- ---------- ---------- ----------
 170+ 886B
 171+ 886B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 886E 00           	db %00000000										; (Attr).
 173+ 886F              ;	db 0												; (Cuad_objeto).
 174+ 886F 00           	db 0												; (Impacto).
 175+ 8870 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 8876 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 8878 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 887A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 887C 00           	db 0												; (Ctrl_0).
 180+ 887D 00           	db 0												; (Ctrl_2).
 181+ 887E
 182+ 887E              ; ---------- ---------- ---------- ---------- ----------
 183+ 887E
 184+ 887E 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8881 00           	db %00000000										; (Attr).
 186+ 8882              ;	db 0												; (Cuad_objeto).
 187+ 8882 00           	db 0												; (Impacto).
 188+ 8883 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 8889 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 888B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 888D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 888F 00           	db 0												; (Ctrl_0).
 193+ 8890 00           	db 0												; (Ctrl_2).
 194+ 8891
 195+ 8891              ; ---------- ---------- ---------- ---------- ----------
 196+ 8891
 197+ 8891 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8894 00           	db %00000000										; (Attr).
 199+ 8895              ;	db 0												; (Cuad_objeto).
 200+ 8895 00           	db 0												; (Impacto).
 201+ 8896 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 889C 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 889E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 88A0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 88A2 00           	db 0												; (Ctrl_0).
 206+ 88A3 00           	db 0												; (Ctrl_2).
 207+ 88A4
 208+ 88A4              ; ---------- ---------- ---------- ---------- ----------
 209+ 88A4
 210+ 88A4 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 88A7 00           	db %00000000										; (Attr).
 212+ 88A8              ;	db 0												; (Cuad_objeto).
 213+ 88A8 00           	db 0												; (Impacto).
 214+ 88A9 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 88AF 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 88B1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 88B3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 88B5 00           	db 0												; (Ctrl_0).
 219+ 88B6 00           	db 0												; (Ctrl_2).
 220+ 88B7
 221+ 88B7              ; ---------- ---------- ---------- ---------- ----------
 222+ 88B7
 223+ 88B7 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 88BA 00           	db %00000000										; (Attr).
 225+ 88BB              ;	db 0												; (Cuad_objeto).
 226+ 88BB 00           	db 0												; (Impacto).
 227+ 88BC 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 88C2 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 88C4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 88C6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 88C8 00           	db 0												; (Ctrl_0).
 232+ 88C9 00           	db 0												; (Ctrl_2).
 233+ 88CA
 234+ 88CA              ; ---------- ---------- ---------- ---------- ----------
 235+ 88CA
 236+ 88CA 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 88CD 00           	db %00000000										; (Attr).
 238+ 88CE              ;	db 0												; (Cuad_objeto).
 239+ 88CE 00           	db 0												; (Impacto).
 240+ 88CF 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 88D5 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 88D7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 88D9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 88DB 00           	db 0												; (Ctrl_0).
 245+ 88DC 00           	db 0												; (Ctrl_2).
 246+ 88DD
 247+ 88DD              ; -------------------------------------------------------------------------------------
 248+ 88DD              ;
 249+ 88DD              ;	11/1/24
 250+ 88DD              ;
 251+ 88DD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 88DD              ;
 253+ 88DD              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 88DD              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 88DD              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 88DD              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 88DD
 258+ 88DD              Indice_de_definiciones_de_entidades
 259+ 88DD
 260+ 88DD E1 88        	defw Entidad_1
 261+ 88DF EE 88        	defw Entidad_2
 262+ 88E1
 263+ 88E1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 88E1
 265+ 88E1              ;	BADSAT, (Satélite malvado).
 266+ 88E1
 267+ 88E1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 88E4 04           	db %00000100										; (Attr).
 269+ 88E5 F0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 88E7 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 88E9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 88EB 01           	db 1												; (Cuad_objeto).
 273+ 88EC 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 88EE
 275+ 88EE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 88F1 02           	db %00000010										; (Attr).
 277+ 88F2 F0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 88F4 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 88F6 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 88F8 01           	db 1												; (Cuad_objeto).
 281+ 88F9 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 88FB
# file closed: Cajas_y_disparos.asm
 130  88FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 88FB
   2+ 88FB
   3+ 88FB              ;   07/07/23
   4+ 88FB              ;
   5+ 88FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 88FB              ;
   7+ 88FB              ;   Codificación:
   8+ 88FB              ;
   9+ 88FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 88FB              ;
  11+ 88FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 88FB              ;
  13+ 88FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 88FB              ;
  15+ 88FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 88FB              ;
  17+ 88FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 88FB              ;                               ..... %01000010 Vel_up 4
  19+ 88FB              ;                                               Vel_down 2
  20+ 88FB              ;                               ..... $42
  21+ 88FB              ;
  22+ 88FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 88FB              ;
  24+ 88FB              ;                               ..... %01000010 Vel_left 4
  25+ 88FB              ;                                               Vel_right 2
  26+ 88FB              ;                               ..... $42
  27+ 88FB              ;
  28+ 88FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 88FB              ;
  30+ 88FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 88FB              ;
  32+ 88FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 88FB              ;
  34+ 88FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 88FB              ;                                     $53
  36+ 88FB              ;
  37+ 88FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 88FB              ;
  39+ 88FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 88FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 88FB              ;
  42+ 88FB              ;                       Arriba ..... $81
  43+ 88FB              ;                       Arriba - izquierda ..... $a1
  44+ 88FB              ;                       Arriba - derecha ..... $91
  45+ 88FB              ;
  46+ 88FB              ;                       Abajo ..... $41
  47+ 88FB              ;                       Abajo - izquierda ..... $61
  48+ 88FB              ;                       Abajo - derecha ..... $51
  49+ 88FB              ;
  50+ 88FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 88FB              ;
  52+ 88FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 88FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 88FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 88FB              ;
  56+ 88FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 88FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 88FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 88FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 88FB              ;
  61+ 88FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 88FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 88FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 88FB              ;
  65+ 88FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 88FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 88FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 88FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 88FB
  70+ 88FB              ; ----- ----- ----- ----- -----
  71+ 88FB
  72+ 88FB 27 89        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 88FD 2F 89            defw F_1
  74+ 88FF 39 89            defw F_2
  75+ 8901 43 89            defw Codo_abajo_derecha
  76+ 8903 77 89            defw Derecha_y_subiendo
  77+ 8905 81 89            defw Derecha_y_subiendo_1
  78+ 8907 8B 89            defw F_3
  79+ 8909 95 89            defw F_4
  80+ 890B 9F 89            defw Derecha_y_bajando
  81+ 890D A9 89            defw Derecha_y_bajando_1
  82+ 890F B3 89            defw Derecha_y_bajando_2
  83+ 8911 BD 89            defw Codo_derecha_abajo
  84+ 8913 ED 89            defw Codo_abajo_izq.
  85+ 8915 21 8A            defw Izquierda_y_subiendo
  86+ 8917 2B 8A            defw Izquierda_y_subiendo_1
  87+ 8919 35 8A            defw F_5
  88+ 891B 3F 8A            defw F_6
  89+ 891D 49 8A            defw Izquierda_y_bajando
  90+ 891F 53 8A            defw Izquierda_y_bajando_1
  91+ 8921 5D 8A            defw Izquierda_y_bajando_2
  92+ 8923 67 8A            defw Codo_izquierda_abajo
  93+ 8925 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8927
  95+ 8927 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 892B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 892F
  98+ 892F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8933 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8937 08 00
 100+ 8939
 101+ 8939 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 893D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8941 0F FE
 103+ 8943
 104+ 8943 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8947 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 894B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 894F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8953 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8957 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 895B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 895F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8963 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8967 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 896B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 896F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8973 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8977
 118+ 8977 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 897B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 897F 06 00
 120+ 8981
 121+ 8981 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8985 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8989 02 00
 123+ 898B
 124+ 898B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 898F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8993 04 00
 126+ 8995
 127+ 8995 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8999 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 899D 08 00
 129+ 899F
 130+ 899F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 89A3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 89A7 02 00
 132+ 89A9
 133+ 89A9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 89AD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 89B1 06 00
 135+ 89B3
 136+ 89B3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 89B7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 89BB 06 00
 138+ 89BD
 139+ 89BD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 89BD
 141+ 89BD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 89C1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 89C5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 89C9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 89CD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 89D1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 89D5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 89D9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 89DD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 89E1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 89E5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 89E9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 89ED
 154+ 89ED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 89F1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 89F5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 89F9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 89FD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8A01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8A05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8A09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8A0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8A11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8A15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8A19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8A1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8A21
 168+ 8A21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8A25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8A29 06 00
 170+ 8A2B
 171+ 8A2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8A2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8A33 02 00
 173+ 8A35
 174+ 8A35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8A39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8A3D 04 00
 176+ 8A3F
 177+ 8A3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8A43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8A47 08 00
 179+ 8A49
 180+ 8A49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8A4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8A51 02 00
 182+ 8A53
 183+ 8A53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8A57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8A5B 06 00
 185+ 8A5D
 186+ 8A5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8A61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8A65 06 00
 188+ 8A67
 189+ 8A67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8A6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8A6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8A73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8A77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8A7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8A7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8A83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8A87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8A8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8A8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8A93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8A97
 202+ 8A97
 203+ 8A97
 204+ 8A97
 205+ 8A97
 206+ 8A97
 207+ 8A97
 208+ 8A97
 209+ 8A97
 210+ 8A97
# file closed: Patrones_de_mov.asm
 131  8A97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8A97              ; 19/1/24
   2+ 8A97
   3+ 8A97              Indice_de_niveles
   4+ 8A97
   5+ 8A97 9F 8A        	defw Nivel_1
   6+ 8A99 A5 8A        	defw Nivel_2
   7+ 8A9B
   8+ 8A9B              ;	...
   9+ 8A9B              ;	...
  10+ 8A9B              ;	+ Niveles ...
  11+ 8A9B
  12+ 8A9B 00 00        	defw 0
  13+ 8A9D 00 00        	defw 0
  14+ 8A9F
  15+ 8A9F 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8AA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8AA4 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8AA5
  19+ 8AA5 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8AA6 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8AAA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8AAE 01 02
  22+ 8AB0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8AB4 01 02
  23+ 8AB6
# file closed: Niveles.asm
 132  8AB6
 133  8AB6              ; ******************************************************************************************************************************************************************************************
 134  8AB6              ; Constantes.
 135  8AB6              ; ******************************************************************************************************************************************************************************************
 136  8AB6              ;
 137  8AB6              ; 09/03/24
 138  8AB6
 139  8AB6              ;
 140  8AB6              ; Constantes.
 141  8AB6              ;
 142  8AB6
 143  8AB6              Sprite_vacio equ $eae0
 144  8AB6
 145  8AB6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 146  8AB6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 147  8AB6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 148  8AB6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 149  8AB6
 150  8AB6              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 151  8AB6              ;Almacen_de_scanlines_masticados equ $e900
 152  8AB6              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 153  8AB6              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 154  8AB6              ;
 155  8AB6              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 156  8AB6
 157  8AB6              ;	($8119 - $81e8) = Índice y datos de Amadeus. "$d0", 208 bytes.
 158  8AB6
 159  8AB6
 160  8AB6              ;                                                       ;	35 bytes por entidad.
 161  8AB6              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 162  8AB6              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 163  8AB6              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 164  8AB6              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 165  8AB6
 166  8AB6              Scanlines_album_2 equ $8200    ;    (8200h - 8318h)
 167  8AB6
 168  8AB6              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 169  8AB6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 170  8AB6              ;														; 55 Bytes.
 171  8AB6
 172  8AB6              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 173  8AB6
 174  8AB6              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 175  8AB6
 176  8AB6
 177  8AB6              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 178  8AB6
 179  8AB6              ; ******************************************************************************************************************************************************************************************
 180  8AB6              ; Variables.
 181  8AB6              ; ******************************************************************************************************************************************************************************************
 182  8AB6              ;
 183  8AB6              ; 18/01/24
 184  8AB6              ;
 185  8AB6              ; Variables de DRAW. (Motor principal).	42 Bytes.
 186  8AB6              ;
 187  8AB6
 188  8AB6              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 189  8AB6
 190  8AB6 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 191  8AB7              ;															- Patrón de movimiento.
 192  8AB7              ;															- Aspecto
 193  8AB7 00           Filas db 0												; Filas. [DRAW]
 194  8AB8 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 195  8AB9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 196  8ABB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 197  8ABD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 198  8ABE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 199  8ABF
 200  8ABF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 201  8ABF
 202  8ABF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 203  8AC0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 204  8AC0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 205  8AC0 00           Attr db 0												; Atributos de la entidad:
 206  8AC1
 207  8AC1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 208  8AC1              ;
 209  8AC1              ;	COLORES: 0 ..... NEGRO
 210  8AC1              ;    		 1 ..... AZUL
 211  8AC1              ; 			 2 ..... ROJO
 212  8AC1              ;			 3 ..... MAGENTA
 213  8AC1              ; 			 4 ..... VERDE
 214  8AC1              ; 			 5 ..... CIAN
 215  8AC1              ;			 6 ..... AMARILLO
 216  8AC1              ; 			 7 ..... BLANCO
 217  8AC1
 218  8AC1 00 00        Indice_Sprite_der defw 0
 219  8AC3 00 00        Indice_Sprite_izq defw 0
 220  8AC5 00 00        Puntero_DESPLZ_der defw 0
 221  8AC7 00 00        Puntero_DESPLZ_izq defw 0
 222  8AC9
 223  8AC9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 224  8ACB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 225  8ACC
 226  8ACC              ; Variables de objeto. (Características).
 227  8ACC
 228  8ACC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 229  8ACD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 230  8ACD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 231  8ACD 00 00 00...  Variables_de_borrado ds 6
 232  8AD3
 233  8AD3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 234  8AD5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 235  8AD5
 236  8AD5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 237  8AD7
 238  8AD7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 239  8AD7              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 240  8AD7
 241  8AD7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 242  8AD9              ;														; _palabras que componen el "movimiento_masticado".
 243  8AD9
 244  8AD9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 245  8AD9
 246  8AD9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 247  8ADA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 248  8ADA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 249  8ADA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 250  8ADA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 251  8ADA              ;
 252  8ADA              ; 														DESCRIPCIÖN:
 253  8ADA              ;
 254  8ADA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 255  8ADA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 256  8ADA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 257  8ADA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 258  8ADA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 259  8ADA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 260  8ADA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 261  8ADA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 262  8ADA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 263  8ADA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 264  8ADA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 265  8ADA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 266  8ADA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 267  8ADA              ;
 268  8ADA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 269  8ADA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 270  8ADA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 271  8ADA
 272  8ADA              ; Variables de funcionamiento. [DRAW].
 273  8ADA
 274  8ADA 00           Columnas db 0
 275  8ADB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8ADD              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8ADD 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8ADE
 279  8ADE              ; variables de control general.
 280  8ADE
 281  8ADE 00           Ctrl_2 db 0
 282  8ADF              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 283  8ADF              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 284  8ADF              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 285  8ADF              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 286  8ADF              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 287  8ADF              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 288  8ADF              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 289  8ADF              ;
 290  8ADF              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 291  8ADF              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 292  8ADF              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 293  8ADF              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 294  8ADF              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 295  8ADF              ;														BIT 4, ???
 296  8ADF              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 297  8ADF
 298  8ADF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 299  8AE0
 300  8AE0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 301  8AE0
 302  8AE0              ;					         		---------;      ;---------
 303  8AE0
 304  8AE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 305  8AE0
 306  8AE0              Perfiles_de_velocidad
 307  8AE0
 308  8AE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 309  8AE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 310  8AE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 311  8AE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 312  8AE4
 313  8AE4              ; Contadores de 16 bits.
 314  8AE4
 315  8AE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 316  8AE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 317  8AE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 318  8AEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 319  8AEC
 320  8AEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 321  8AEC
 322  8AEC              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 323  8AEC              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 324  8AEC              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 325  8AEC
 326  8AEC              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 327  8AEC
 328  8AEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 329  8AEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 330  8AF0 00 00        Puntero_indice_mov_bucle defw 0							;
 331  8AF2              ;
 332  8AF2              ;
 333  8AF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 334  8AF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 335  8AF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 336  8AF3 00           Incrementa_puntero_backup db 0
 337  8AF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 338  8AF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 339  8AF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 340  8AF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 341  8AF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 342  8AF8              ;
 343  8AF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 344  8AF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 345  8AF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 346  8AF8              ;
 347  8AF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 348  8AF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 349  8AF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 350  8AF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 351  8AF8              ;
 352  8AF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 353  8AF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 354  8AF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 355  8AF8              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 356  8AF8
 357  8AF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 358  8AF9
 359  8AF9              ;														DESCRIPCIÓN:
 360  8AF9              ;
 361  8AF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 362  8AF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 363  8AF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 364  8AF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 365  8AF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 366  8AF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 367  8AF9
 368  8AF9              ;														BIT 3, Recarga de nueva oleada.
 369  8AF9              ;														BIT 4, Recarga de nueva oleada.
 370  8AF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 371  8AF9              ;														BIT 6, **** Frame completo.
 372  8AF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 373  8AF9
 374  8AF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 375  8AFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 376  8AFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 377  8AFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 378  8AFB
 379  8AFB              ; Gestión de ENTIDADES y CAJAS.
 380  8AFB
 381  8AFB 00 00        Puntero_store_caja defw 0
 382  8AFD 00 00        Puntero_restore_caja defw 0
 383  8AFF 00 00        Indice_restore_caja defw 0
 384  8B01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 385  8B02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 386  8B03 00           Entidades_en_curso db 0									; ..... ..... .....
 387  8B04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 388  8B05              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 389  8B05              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 390  8B05              ;														; _ (Numero_de_malotes)="0".
 391  8B05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 392  8B07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 393  8B09              ;														; _ puntero (Indice_entidades).
 394  8B09
 395  8B09              ;---------------------------------------------------------------------------------------------------------------
 396  8B09              ;
 397  8B09              ;	11/01/24
 398  8B09              ;
 399  8B09              ;	Álbumes.
 400  8B09
 401  8B09 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 402  8B0B              ;														; _variable para almacenar lo posición del puntero_
 403  8B0B              ; 														; _de pila, SP.
 404  8B0B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 405  8B0D              ;														; La utiliza la rutina [Extrae_foto_registros].
 406  8B0D 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 407  8B0F
 408  8B0F 00 00        Album_de_pintado defw 0
 409  8B11 00 00        Album_de_borrado defw 0
 410  8B13
 411  8B13              ;Techo_Scanlines_album defw 0
 412  8B13              ;Techo_Scanlines_album_2 defw 0
 413  8B13
 414  8B13 00           Techo_de_pintado db 0
 415  8B14 00           Techo_de_borrado db 0
 416  8B15 00 00        Scanlines_album_SP defw 0
 417  8B17
 418  8B17 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 419  8B18              ;
 420  8B18              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 421  8B18              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 422  8B18              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 423  8B18              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 424  8B18              ;																Habilita el borrado/pintado de sprites.
 425  8B18              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 426  8B18              ;																_ a la baja.
 427  8B18
 428  8B18 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 429  8B19              ;
 430  8B19              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 431  8B19              ;
 432  8B19              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 433  8B19              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 434  8B19              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 435  8B19              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 436  8B19              ;
 437  8B19              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 438  8B19              ;															_ masticados ya generados.
 439  8B19              ;
 440  8B19              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 441  8B19              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 442  8B19              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 443  8B19              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 444  8B19
 445  8B19
 446  8B19              ; Gestión de Disparos.
 447  8B19
 448  8B19              ;;Numero_de_disparotes db 0
 449  8B19              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 450  8B19              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 451  8B19              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 452  8B19              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 453  8B19              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 454  8B19              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8B19              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8B19              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 457  8B19              ;														; _produzca colisión.
 458  8B19              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 459  8B19              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8B19              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8B19              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 462  8B19 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8B1C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8B1C              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 465  8B1C
 466  8B1C              ;---------------------------------------------------------------------------------------------------------------
 467  8B1C
 468  8B1C              ; Relojes y temporizaciones.
 469  8B1C
 470  8B1C 00           Contador_de_frames db 0
 471  8B1D 00           Contador_de_frames_2 db 0
 472  8B1E
 473  8B1E              ;Clock_explosion db 4
 474  8B1E 14           Clock_Entidades_en_curso db 20
 475  8B1F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8B20              ;														; Repite la oleada de entidades.
 477  8B20              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 478  8B20              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 479  8B20              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 480  8B20
 481  8B20              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 482  8B20              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 483  8B20              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 484  8B20
 485  8B20              ;---------------------------------------------------------------------------------------------------------------
 486  8B20
 487  8B20              ; Gestión de NIVELES.
 488  8B20
 489  8B20 00           Nivel db 0												; Nivel actual del juego.
 490  8B21 00 00        Puntero_indice_NIVELES defw 0
 491  8B23 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8B25              ; 														; _ que definen el NIVEL.
 493  8B25              ; Y todo comienza aquí .....
 494  8B25              ;
 495  8B25              ; 	INICIO  *************************************************************************************************************************************************************************
 496  8B25              ;
 497  8B25              ;	5/1/24
 498  8B25
 499  8B25              START
 500  8B25
 501  8B25 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 502  8B28 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 503  8B2A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 504  8B2C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 505  8B2E F3           	DI
 506  8B2F
 507  8B2F              ;	ld a,%00000111
 508  8B2F              ;	call Cls
 509  8B2F CD 58 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 510  8B32
 511  8B32              ; INICIALIZACIÓN.
 512  8B32
 513  8B32              ;	Inicializa 1er Nivel.
 514  8B32
 515  8B32 21 97 8A     	ld hl,Indice_de_niveles
 516  8B35 22 21 8B     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 517  8B38 CD 7E 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 518  8B3B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 519  8B3B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 520  8B3B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 521  8B3B
 522  8B3B              ;	Provisional, (para desarrollo).
 523  8B3B              	;-
 524  8B3B              ;	ld hl,Numero_parcial_de_entidades
 525  8B3B              ;	ld b,(hl)
 526  8B3B              ;	inc b
 527  8B3B              ;	dec b
 528  8B3B              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 529  8B3B
 530  8B3B CD 9E 8C     	call Inicia_albumes_de_lineas
 531  8B3E
 532  8B3E CD C3 8D     4 call Inicia_Entidades
 533  8B41
 534  8B41 CD AE 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 535  8B44              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 536  8B44              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 537  8B44              ; (Esto se dá cuando se inicia una nueva oleada).
 538  8B44
 539  8B44              ;	ld a,(Ctrl_1)
 540  8B44              ;	bit 3,a
 541  8B44              ;	jr nz,5F											 ; Loop
 542  8B44
 543  8B44              ; 	INICIA AMADEUS !!!!!
 544  8B44
 545  8B44              ;3 call Restore_Amadeus
 546  8B44              ;	call Inicia_Puntero_objeto
 547  8B44              ;	call Draw
 548  8B44
 549  8B44              ;	call Guarda_movimiento_masticado	;! Provisional
 550  8B44
 551  8B44              ;	call Genera_datos_de_impresion
 552  8B44              ;	call Guarda_datos_de_borrado_Amadeus
 553  8B44
 554  8B44              ;	ld de,Amadeus_db
 555  8B44              ;	call Store_Amadeus
 556  8B44
 557  8B44              ; 	INICIA DISPAROS !!!!!
 558  8B44
 559  8B44              ;	call Inicia_Puntero_Disparo_Entidades
 560  8B44              ;	call Inicia_Puntero_Disparo_Amadeus
 561  8B44
 562  8B44              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 563  8B44
 564  8B44              ;5 call Inicia_punteros_de_cajas
 565  8B44              ;	call Restore_entidad
 566  8B44
 567  8B44              ;	ld a,(Ctrl_1)
 568  8B44              ;	bit 3,a
 569  8B44              ;	jr z,6F
 570  8B44
 571  8B44              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 572  8B44
 573  8B44              ;	ld hl,Ctrl_1
 574  8B44              ;	res 3,(hl)
 575  8B44              ;	jr Main
 576  8B44
 577  8B44              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 578  8B44
 579  8B44              6
 580  8B44
 581  8B44              ;	call Calcula_numero_de_malotes
 582  8B44
 583  8B44              ; Damos por concluida la construcción del FRAME.
 584  8B44              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 585  8B44
 586  8B44 2A 15 8B     	ld hl,(Scanlines_album_SP)
 587  8B47 7D           	ld a,l
 588  8B48 32 13 8B     	ld (Techo_de_pintado),a
 589  8B4B
 590  8B4B 2A 11 8B     	ld hl,(Album_de_borrado)
 591  8B4E 22 15 8B     	ld (Scanlines_album_SP),hl
 592  8B51
 593  8B51 21 17 8B     	ld hl,Ctrl_3
 594  8B54 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 595  8B56 CB D6        	set 2,(hl)
 596  8B58
 597  8B58 FB           	ei
 598  8B59 76           	halt
 599  8B5A
 600  8B5A              ; ------------------------------------
 601  8B5A
 602  8B5A              Main
 603  8B5A              ;
 604  8B5A              ;	11/12/23
 605  8B5A
 606  8B5A              ; Aparece nueva entidad ???
 607  8B5A
 608  8B5A              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 609  8B5A              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 610  8B5A              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 611  8B5A              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 612  8B5A              ;														; _un 2º bloque.
 613  8B5A
 614  8B5A              ;	call Genera_scanlines_masticados_a_borrar
 615  8B5A              ;	call Limpia_Almacen_de_scanlines_masticados
 616  8B5A
 617  8B5A              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 618  8B5A              ; 													 	; _(Scanlines_album_SP).
 619  8B5A
 620  8B5A 3A 1E 8B     	ld a,(Clock_Entidades_en_curso)
 621  8B5D 47           	ld b,a
 622  8B5E 3A 1C 8B     	ld a,(Contador_de_frames)
 623  8B61 B8           	cp b
 624  8B62 20 18        	jr nz,13F
 625  8B64
 626  8B64              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 627  8B64              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 628  8B64
 629  8B64 3A 02 8B     21 ld a,(Numero_parcial_de_entidades)
 630  8B67 47           	ld b,a
 631  8B68 3A 03 8B     	ld a,(Entidades_en_curso)
 632  8B6B B8           	cp b
 633  8B6C 28 0E        	jr z,13F
 634  8B6E 30 0C        	jr nc,13F
 635  8B70
 636  8B70 3C           	inc a
 637  8B71 32 03 8B     	ld (Entidades_en_curso),a
 638  8B74
 639  8B74              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 640  8B74
 641  8B74 3A 1E 8B     	ld a,(Clock_Entidades_en_curso)
 642  8B77              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 643  8B77              ;! _ IMPREDECIBLE !!!!
 644  8B77 C6 64        	add 100
 645  8B79 32 1E 8B     	ld (Clock_Entidades_en_curso),a
 646  8B7C
 647  8B7C              ; -------------------------------------------------------------------------------------------------------------
 648  8B7C
 649  8B7C              ; Habilita disparos.
 650  8B7C
 651  8B7C              13
 652  8B7C
 653  8B7C              ;	ld hl,Disparo_Amadeus
 654  8B7C              ;	ld de,CLOCK_repone_disparo_Amadeus
 655  8B7C              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 656  8B7C
 657  8B7C              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 658  8B7C              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 659  8B7C              ;	call Habilita_disparos
 660  8B7C
 661  8B7C              ; COLISIONES.
 662  8B7C
 663  8B7C              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 664  8B7C
 665  8B7C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 666  8B7C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 667  8B7C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 668  8B7C
 669  8B7C              ;	xor a
 670  8B7C              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 671  8B7C
 672  8B7C              ;	call Inicia_punteros_de_cajas
 673  8B7C              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 674  8B7C              ; 														; _ en DRAW.
 675  8B7C
 676  8B7C              ;	ld a,(Filas)
 677  8B7C              ;	and a
 678  8B7C              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 679  8B7C              ;	call Incrementa_punteros_de_cajas
 680  8B7C              ;	jr 12B
 681  8B7C
 682  8B7C              ; ---------------------------------------------------------------------------------------
 683  8B7C
 684  8B7C 3A 02 8B     10 ld a,(Numero_parcial_de_entidades)
 685  8B7F 47               ld b,a
 686  8B80 A7           	and a
 687  8B81 20 00        	jr nz,11F
 688  8B83
 689  8B83              ;	ld hl,Ctrl_1;
 690  8B83              ;	bit 4,(hl)
 691  8B83              ;	jp nz,16F
 692  8B83
 693  8B83              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 694  8B83
 695  8B83              ;	ld hl,Ctrl_1
 696  8B83              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 697  8B83
 698  8B83              ;	ld a,(Contador_de_frames)
 699  8B83              ;	inc a
 700  8B83              ;	ld (Activa_recarga_cajas),a
 701  8B83
 702  8B83              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 703  8B83
 704  8B83 3A 03 8B     11 ld a,(Entidades_en_curso)
 705  8B86 A7           	and a
 706  8B87 28 1F        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 707  8B89 47           	ld b,a												; No hay entidades que gestionar.
 708  8B8A
 709  8B8A              ; ( Código que ejecutamos con cada entidad: ).
 710  8B8A
 711  8B8A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 712  8B8A              ;
 713  8B8A              ;	Se produce MOVIMIENTO.
 714  8B8A
 715  8B8A 21 17 8B     	ld hl,Ctrl_3
 716  8B8D CB D6        	set 2,(hl)
 717  8B8F CD BC 8B     	call Change
 718  8B92
 719  8B92 C5           15 push bc 												; Nº de entidades en curso.
 720  8B93
 721  8B93 CD 17 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 722  8B96
 723  8B96              ; Existe "Entidad_guía" ???.
 724  8B96              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 725  8B96
 726  8B96              ;	ld a,(Ctrl_3)
 727  8B96              ;	bit 1,a
 728  8B96              ;	jr nz,22F
 729  8B96
 730  8B96              ; Almacén de "Movimientos_masticados" lleno ???
 731  8B96              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 732  8B96              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 733  8B96
 734  8B96              ;;	ld a,(Ctrl_3)
 735  8B96              ;;	bit 3,a
 736  8B96              ;;	jr nz,22F
 737  8B96
 738  8B96              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 739  8B96
 740  8B96              ;	ld hl,Ctrl_2
 741  8B96              ;	set 5,(hl)
 742  8B96              ;	ld hl,Ctrl_3
 743  8B96              ;	set 1,(hl)
 744  8B96
 745  8B96              ; Impacto ???
 746  8B96
 747  8B96              ;22 ld a,(Impacto)
 748  8B96              ;	and a
 749  8B96              ;	jr z,8F
 750  8B96
 751  8B96              ; Hay Impacto en esta entidad.
 752  8B96
 753  8B96              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 754  8B96              ;	dec (hl)
 755  8B96              ;	jp nz,17F
 756  8B96
 757  8B96              ;! Velocidad de la animación de la explosión.
 758  8B96
 759  8B96              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 760  8B96              ;														; _,(velocidad de la explosión).
 761  8B96              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 762  8B96
 763  8B96              ;	call Repone_datos_de_borrado
 764  8B96              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 765  8B96
 766  8B96              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 767  8B96
 768  8B96              ;	ld a,(Ctrl_2)
 769  8B96              ;	bit 1,a
 770  8B96              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 771  8B96
 772  8B96              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 773  8B96
 774  8B96              ;	ld a,(CTRL_DESPLZ)
 775  8B96              ;	and a
 776  8B96              ;	jr nz,18F
 777  8B96
 778  8B96              ;	ld hl,Indice_Explosion_2x2-2
 779  8B96              ;	ld (Puntero_DESPLZ_der),hl
 780  8B96              ;	jr 19F
 781  8B96
 782  8B96              ;18 ld hl,Indice_Explosion_2x3-2
 783  8B96              ;	ld (Puntero_DESPLZ_der),hl
 784  8B96
 785  8B96              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 786  8B96              ;	set 1,(hl)
 787  8B96              ;	jr 7F
 788  8B96
 789  8B96              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 790  8B96              ; _con las coordenadas de la entidad almacenada en DRAW.
 791  8B96
 792  8B96              ;8 ld a,(Ctrl_1)
 793  8B96              ;	bit 2,a
 794  8B96              ;	jr z,7F
 795  8B96
 796  8B96              ;	ld hl,(Coordenadas_disparo_certero)
 797  8B96              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 798  8B96              ;														; E contiene la coordenada_X del disparo.
 799  8B96              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 800  8B96              ;														; H FILA, (Coordenada_y de la entidad).
 801  8B96              ;	and a
 802  8B96              ;	sbc hl,de
 803  8B96
 804  8B96              ;	call Determina_resultado_comparativa
 805  8B96
 806  8B96              ;	ld a,b
 807  8B96              ;	and a
 808  8B96              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 809  8B96
 810  8B96              ; ----- ----- -----
 811  8B96
 812  8B96              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 813  8B96              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 814  8B96
 815  8B96              ;	ld hl,Ctrl_1
 816  8B96              ;	res 2,(hl)
 817  8B96
 818  8B96 CD BB 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 819  8B99
 820  8B99              ;	ld a,(Ctrl_0)
 821  8B99              ;	bit 4,a
 822  8B99              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 823  8B99
 824  8B99              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 825  8B99              ; [[[
 826  8B99              ;	call Detecta_disparo_entidad
 827  8B99              ; ]]]
 828  8B99
 829  8B99 CD 2D 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 830  8B9C
 831  8B9C              ;	ld hl,Ctrl_0
 832  8B9C              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 833  8B9C
 834  8B9C CD 1D 8E     17 call Store_Restore_cajas
 835  8B9F
 836  8B9F C1           	pop bc
 837  8BA0
 838  8BA0 10 F0        	djnz 15B
 839  8BA2
 840  8BA2 CD AE 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 841  8BA5
 842  8BA5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 843  8BA5              ; Hemos gestionado todas las unidades.
 844  8BA5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 845  8BA5
 846  8BA5              ;	ld hl,Ctrl_1
 847  8BA5              ;	res 2,(hl)
 848  8BA5
 849  8BA5 CD DF 8B     	call Borra_diferencia
 850  8BA8
 851  8BA8              16
 852  8BA8
 853  8BA8 2A 11 8B     	ld hl,(Album_de_borrado)
 854  8BAB 22 15 8B     	ld (Scanlines_album_SP),hl
 855  8BAE
 856  8BAE 21 17 8B     	ld hl,Ctrl_3
 857  8BB1 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 858  8BB3
 859  8BB3 AF           	xor a
 860  8BB4 D3 FE        	out ($fe),a
 861  8BB6 76           	halt
 862  8BB7
 863  8BB7              ; ----------------------------------------
 864  8BB7
 865  8BB7              ;	ld a,(Ctrl_1) 										; Existe Loop?
 866  8BB7              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 867  8BB7 CA 5A 8B     	jp z,Main
 868  8BBA
 869  8BBA              ; RECARGA DE NUEVA OLEADA.
 870  8BBA
 871  8BBA              ;	ld a,(Contador_de_frames)
 872  8BBA              ;	ld b,a
 873  8BBA              ;	ld a,(Activa_recarga_cajas)
 874  8BBA              ;	cp b
 875  8BBA              ;	jr z,20F
 876  8BBA
 877  8BBA              ;	ld hl,Ctrl_1
 878  8BBA              ;	set 4,(hl)
 879  8BBA              ;	jp Main
 880  8BBA
 881  8BBA              ;20 ld hl,Ctrl_1
 882  8BBA              ;	res 4,(hl)
 883  8BBA
 884  8BBA              ;	ld a,(Contador_de_frames)
 885  8BBA
 886  8BBA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 887  8BBA              ;! _ IMPREDECIBLE !!!!
 888  8BBA
 889  8BBA              ;	add 10
 890  8BBA              ;	ld (Clock_Entidades_en_curso),a
 891  8BBA
 892  8BBA              ;	jp 4B
 893  8BBA
 894  8BBA C9           	ret
 895  8BBB
 896  8BBB              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 897  8BBB              ;
 898  8BBB              ;	16/11/23
 899  8BBB
 900  8BBB              ;;Gestiona_Amadeus
 901  8BBB
 902  8BBB              ;! Activa/desactiva impacto con Amadeus.
 903  8BBB
 904  8BBB              ;	ld a,(Impacto)
 905  8BBB              ;	and a
 906  8BBB              ;	jr nz,2F
 907  8BBB
 908  8BBB              ;;	call Mov_Amadeus
 909  8BBB
 910  8BBB              ;;2 ld a,(Ctrl_0)
 911  8BBB              ;;	bit 4,a
 912  8BBB              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 913  8BBB
 914  8BBB              ;;	call Guarda_foto_entidad_a_pintar
 915  8BBB              ;;	call Guarda_datos_de_borrado_Amadeus
 916  8BBB
 917  8BBB              ;;1 ld hl,Ctrl_0
 918  8BBB              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 919  8BBB
 920  8BBB              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 921  8BBB
 922  8BBB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 923  8BBB
 924  8BBB              ;	call Calcula_numero_de_disparotes
 925  8BBB
 926  8BBB              ;;	ret
 927  8BBB
 928  8BBB              ; -----------------------------
 929  8BBB              ;
 930  8BBB              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 931  8BBB              ;
 932  8BBB              ;	INPUTS: B a de estar a "0".
 933  8BBB
 934  8BBB              ;Prepara_Borra_sprites
 935  8BBB
 936  8BBB              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 937  8BBB              ;	ld a,l
 938  8BBB              ;	ret z
 939  8BBB
 940  8BBB              ;	srl a
 941  8BBB
 942  8BBB              ;2 sub 16
 943  8BBB              ;	jr z,1F
 944  8BBB              ;	inc b
 945  8BBB              ;	jr 2B
 946  8BBB
 947  8BBB              ;1 inc b
 948  8BBB
 949  8BBB              ;	exx
 950  8BBB              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 951  8BBB              ;	exx
 952  8BBB
 953  8BBB              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 954  8BBB              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 955  8BBB
 956  8BBB              ;	ret
 957  8BBB
 958  8BBB              ; --------------------------------------------------------------------------------------------------------------
 959  8BBB              ;
 960  8BBB              ;	15/12/23
 961  8BBB
 962  8BBB              Mov_obj
 963  8BBB
 964  8BBB              ;	ld a,(Ctrl_2)
 965  8BBB              ;	bit 1,a
 966  8BBB              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 967  8BBB
 968  8BBB              ; Explosión:
 969  8BBB
 970  8BBB              ;	ld a,(Frames_explosion)
 971  8BBB              ;	and a
 972  8BBB              ;	jr nz,4F
 973  8BBB
 974  8BBB              ;!  Una alimaña menos!!!!!!!!!1
 975  8BBB
 976  8BBB              ; Se trataba de una Entidad_guía ???
 977  8BBB
 978  8BBB              ;	ld a,(Ctrl_2)
 979  8BBB              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 980  8BBB              ;	jr z,5F
 981  8BBB
 982  8BBB              ;	ld hl,Ctrl_3
 983  8BBB              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 984  8BBB
 985  8BBB              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 986  8BBB              ;!! _generado puede ser distinto, (aletoriedad).
 987  8BBB
 988  8BBB              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 989  8BBB              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 990  8BBB              ;	dec (hl)
 991  8BBB              ;	ld hl,Entidades_en_curso
 992  8BBB              ;	dec (hl)
 993  8BBB              ;	ld hl,Numero_de_entidades
 994  8BBB              ;	dec (hl)
 995  8BBB              ;	jr 3F
 996  8BBB
 997  8BBB              ; -----
 998  8BBB
 999  8BBB              ;	`Movemos´ la explosión.
1000  8BBB
1001  8BBB              ;4 ld hl,(Puntero_DESPLZ_der)
1002  8BBB              ;	inc hl
1003  8BBB              ;	inc hl
1004  8BBB              ;	call Extrae_address
1005  8BBB              ;;	ld (Puntero_objeto),hl
1006  8BBB
1007  8BBB              ;;	ld hl,Frames_explosion
1008  8BBB              ;;	dec (hl)
1009  8BBB
1010  8BBB              ;;	ld hl,Ctrl_0
1011  8BBB              ;;	set 4,(hl);;
1012  8BBB
1013  8BBB              ;;	jr 3F
1014  8BBB
1015  8BBB              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1016  8BBB
1017  8BBB              ;2 xor a
1018  8BBB              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1019  8BBB
1020  8BBB              ; Movemos Entidades malignas.
1021  8BBB              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1022  8BBB
1023  8BBB              ;	ld a,(Ctrl_2)
1024  8BBB              ;	bit 5,a
1025  8BBB              ;	jr nz,8F
1026  8BBB
1027  8BBB              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1028  8BBB              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1029  8BBB              ;	jr 7F
1030  8BBB
1031  8BBB              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1032  8BBB
1033  8BBB              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1034  8BBB              ;	bit 4,a
1035  8BBB              ;	ret z
1036  8BBB
1037  8BBB              ; Ha habido desplazamiento de la entidad maligna.
1038  8BBB              ; Ha llegado a zona de AMADEUS ???
1039  8BBB
1040  8BBB              ;7 ld a,(Coordenada_y)
1041  8BBB              ;	cp $14
1042  8BBB              ;	jr c,1F
1043  8BBB
1044  8BBB              ; ---------
1045  8BBB
1046  8BBB              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1047  8BBB              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1048  8BBB
1049  8BBB              ;	di
1050  8BBB              ;	call Genera_coordenadas_X
1051  8BBB              ;	call Compara_coordenadas_X
1052  8BBB              ;	ei
1053  8BBB
1054  8BBB              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1055  8BBB
1056  8BBB              ; ---------
1057  8BBB
1058  8BBB              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1059  8BBB              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1060  8BBB              ;	call Limpia_Variables_de_borrado
1061  8BBB
1062  8BBB C9           3 ret
1063  8BBC
1064  8BBC              ; --------------------------------------------------------------------------------------------------------------
1065  8BBC              ;
1066  8BBC              ;	29/1/23
1067  8BBC
1068  8BBC              ;Mov_Amadeus
1069  8BBC
1070  8BBC              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1071  8BBC
1072  8BBC              ;	call Mov_right
1073  8BBC
1074  8BBC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1075  8BBC              ;	bit 4,a
1076  8BBC              ;	ret z
1077  8BBC
1078  8BBC              ; ---------
1079  8BBC
1080  8BBC              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1081  8BBC              ;	call Repone_datos_de_borrado_Amadeus
1082  8BBC              ;	call Limpia_Variables_de_borrado
1083  8BBC
1084  8BBC              ;	ret
1085  8BBC
1086  8BBC              ; --------------------------------------------------------------------------------------------------------------
1087  8BBC              ;
1088  8BBC              ;	17/3/24
1089  8BBC
1090  8BBC              Change
1091  8BBC
1092  8BBC
1093  8BBC              ;! Debugg!!!!!!!
1094  8BBC
1095  8BBC              ;	ld a,(Contador_de_frames_2)
1096  8BBC              ;	cp $03
1097  8BBC              ;	jr nz,1F
1098  8BBC              ;	ld a,(Contador_de_frames)
1099  8BBC              ;	cp $59
1100  8BBC              ;	di
1101  8BBC              ;	jr z,$
1102  8BBC              ;	ei
1103  8BBC
1104  8BBC
1105  8BBC 2A 0F 8B     	ld hl,(Album_de_pintado)
1106  8BBF ED 5B 11 8B  	ld de,(Album_de_borrado)
1107  8BC3 EB           	ex de,hl
1108  8BC4 22 0F 8B     	ld (Album_de_pintado),hl
1109  8BC7 22 15 8B     	ld (Scanlines_album_SP),hl
1110  8BCA
1111  8BCA ED 53 11 8B  	ld (Album_de_borrado),de
1112  8BCE
1113  8BCE 3A 13 8B     	ld a,(Techo_de_pintado)
1114  8BD1 57           	ld d,a
1115  8BD2 3A 14 8B     	ld a,(Techo_de_borrado)
1116  8BD5 5F           	ld e,a
1117  8BD6
1118  8BD6 7B           	ld a,e
1119  8BD7 32 13 8B     	ld (Techo_de_pintado),a
1120  8BDA 7A           	ld a,d
1121  8BDB 32 14 8B     	ld (Techo_de_borrado),a
1122  8BDE
1123  8BDE C9           	ret
1124  8BDF
1125  8BDF              ; ------------------------------------
1126  8BDF              ;
1127  8BDF              ; 18/03/24
1128  8BDF
1129  8BDF              Borra_diferencia
1130  8BDF
1131  8BDF F3           	di
1132  8BE0 18 FE        	jr $
1133  8BE2 FB           	ei
1134  8BE3
1135  8BE3 2A 15 8B     	ld hl,(Scanlines_album_SP)
1136  8BE6 3A 13 8B     	ld a,(Techo_de_pintado)
1137  8BE9
1138  8BE9 95           	sub l
1139  8BEA
1140  8BEA C8           	ret z
1141  8BEB D8           	ret c
1142  8BEC
1143  8BEC              ; Nuevo techo, (más bajo que el anterior).
1144  8BEC
1145  8BEC 22 14 8B     	ld (Techo_de_borrado),hl
1146  8BEF
1147  8BEF              ; Borramos_diferencia.
1148  8BEF
1149  8BEF 47           	ld b,a
1150  8BF0 AF           	xor a
1151  8BF1
1152  8BF1 77           1 ld (hl),a
1153  8BF2 2C           	inc l
1154  8BF3 10 FC        	djnz 1B
1155  8BF5
1156  8BF5              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1157  8BF5
1158  8BF5 21 17 8B     	ld hl,Ctrl_3
1159  8BF8 CB DE        	set 3,(hl)
1160  8BFA
1161  8BFA C9           	ret
1162  8BFB
1163  8BFB              ; -----------------------------------------------------------------------------------
1164  8BFB              ;
1165  8BFB              ;	20/01/24
1166  8BFB              ;
1167  8BFB              ;
1168  8BFB
1169  8BFB              Construye_movimientos_masticados_entidad
1170  8BFB
1171  8BFB 2A D5 8A     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1172  8BFE E5           	push hl
1173  8BFF CD 42 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1174  8C02              ;															; _ el (Contador_de_mov_masticados).
1175  8C02 CD E2 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1176  8C05              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1177  8C05 CD E0 95     	call Recompone_posicion_inicio
1178  8C08
1179  8C08 CD 74 8F     1 call Draw
1180  8C0B CD 27 8C     	call Guarda_movimiento_masticado
1181  8C0E
1182  8C0E CD 5A 99     	call Movimiento
1183  8C11
1184  8C11 3A 17 8B     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1185  8C14 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1186  8C16 28 F0        	jr z,1B
1187  8C18
1188  8C18              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1189  8C18              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1190  8C18
1191  8C18 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1192  8C19 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
1193  8C1C
1194  8C1C              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1195  8C1C
1196  8C1C CD BE 9A     	call Situa_en_contador_general_de_mov_masticados
1197  8C1F
1198  8C1F              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1199  8C1F              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1200  8C1F
1201  8C1F ED 4B D7 8A  	ld bc,(Contador_de_mov_masticados)
1202  8C23 71           	ld (hl),c
1203  8C24 23           	inc hl
1204  8C25 70           	ld (hl),b
1205  8C26
1206  8C26 C9           	ret
1207  8C27
1208  8C27              ; -----------------------------------------------------------------------------------
1209  8C27              ;
1210  8C27              ;	28/12/23
1211  8C27              ;
1212  8C27              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1213  8C27              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1214  8C27
1215  8C27              Guarda_movimiento_masticado
1216  8C27
1217  8C27 ED 73 09 8B  	ld (Stack),sp
1218  8C2B ED 7B D5 8A  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1219  8C2F
1220  8C2F              ;	push hl
1221  8C2F DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1222  8C31 FD E5            push iy 												; Pushea Puntero_objeto.
1223  8C33
1224  8C33 ED 7B 09 8B      ld sp,(Stack)
1225  8C37
1226  8C37 2A D7 8A        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1227  8C3A 23           	inc hl
1228  8C3B 22 D7 8A     	ld (Contador_de_mov_masticados),hl
1229  8C3E
1230  8C3E CD 42 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1231  8C41              ;															; _ el (Contador_de_mov_masticados).
1232  8C41 C9               ret
1233  8C42
1234  8C42              ; --------------------------------------------------------------------------------------------------------------
1235  8C42              ;
1236  8C42              ;	12/1/24
1237  8C42              ;
1238  8C42              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1239  8C42
1240  8C42              Actualiza_Puntero_de_almacen_de_mov_masticados
1241  8C42
1242  8C42 2A D5 8A     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1243  8C45 01 04 00     	ld bc,4
1244  8C48 A7           	and a
1245  8C49 ED 4A        	adc hl,bc
1246  8C4B 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
1247  8C4E C9           	ret
1248  8C4F
1249  8C4F              ; --------------------------------------------------------------------------------------------------------------
1250  8C4F              ;
1251  8C4F              ;	09/03/24
1252  8C4F              ;
1253  8C4F              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1254  8C4F              ;
1255  8C4F              ;	IX contiene el puntero de impresión.
1256  8C4F              ;	DE contiene (Puntero_objeto).
1257  8C4F
1258  8C4F
1259  8C4F ED 73 09 8B  Cargamos_registros_con_mov_masticado ld (Stack),sp
1260  8C53 ED 7B D5 8A  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1261  8C57
1262  8C57 D1           	pop de 															; DE contiene Puntero_objeto
1263  8C58 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1264  8C5A
1265  8C5A ED 73 D5 8A  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1266  8C5E
1267  8C5E ED 7B 09 8B  	ld sp,(Stack)
1268  8C62
1269  8C62 C9           	ret
1270  8C63
1271  8C63              ; --------------------------------------------------------------------------------------------------------------
1272  8C63              ;
1273  8C63              ;	28/12/23
1274  8C63              ;
1275  8C63              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1276  8C63              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1277  8C63
1278  8C63              Guarda_foto_entidad_a_pintar
1279  8C63
1280  8C63 3A D9 8A     	ld a,(Ctrl_0)
1281  8C66 CB 77        	bit 6,a
1282  8C68 28 04        	jr z,5F
1283  8C6A
1284  8C6A              ;	Guarda la foto de Amadeus.
1285  8C6A
1286  8C6A              ;	call Draw
1287  8C6A              ;	call Guarda_movimiento_masticado	;! Provisional
1288  8C6A CD 45 9B     	call Genera_datos_de_impresion
1289  8C6D C9           	ret
1290  8C6E
1291  8C6E              ; ENTIDADES!
1292  8C6E              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1293  8C6E
1294  8C6E 3A 17 8B     5 ld a,(Ctrl_3)
1295  8C71 CB 5F        	bit 3,a
1296  8C73 28 01        	jr z,1F
1297  8C75
1298  8C75              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1299  8C75
1300  8C75              4
1301  8C75              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1302  8C75 C9           	ret
1303  8C76
1304  8C76              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1305  8C76
1306  8C76 3A 17 8B     1 ld a,(Ctrl_3)
1307  8C79 CB 57        	bit 2,a
1308  8C7B 20 10        	jr nz,6F
1309  8C7D
1310  8C7D              ; Entidad guía o fantasma ???
1311  8C7D
1312  8C7D 3A DE 8A     	ld a,(Ctrl_2)
1313  8C80 CB 6F        	bit 5,a
1314  8C82 20 10        	jr nz,3F
1315  8C84
1316  8C84              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1317  8C84
1318  8C84 18 EF        	jr 4B
1319  8C86
1320  8C86              ; ENTIDAD_GUÍA:
1321  8C86              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1322  8C86              ; _guardando "movimientos_masticados".
1323  8C86
1324  8C86 3A 17 8B     2 ld a,(Ctrl_3)
1325  8C89 CB 57        	bit 2,a
1326  8C8B 28 07        	jr z,3F
1327  8C8D
1328  8C8D              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1329  8C8D              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1330  8C8D
1331  8C8D CB 97        6 res 2,a
1332  8C8F CB DF        	set 3,a
1333  8C91 32 17 8B     	ld (Ctrl_3),a
1334  8C94
1335  8C94
1336  8C94              ;	Esto sólo lo ejecuta una entidad guía.
1337  8C94
1338  8C94 CD 74 8F     3 	call Draw
1339  8C97 CD 27 8C     	call Guarda_movimiento_masticado
1340  8C9A CD 45 9B     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1341  8C9D
1342  8C9D              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1343  8C9D              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1344  8C9D
1345  8C9D              ;	call Convierte_guia_en_fantasma
1346  8C9D C9           	ret
1347  8C9E
1348  8C9E              ; ---------------------------------------------------------------------------------------------------------------------
1349  8C9E              ;
1350  8C9E              ;	13/03/24
1351  8C9E              ;
1352  8C9E
1353  8C9E              Inicia_albumes_de_lineas
1354  8C9E
1355  8C9E 21 00 80     	ld hl,Scanlines_album
1356  8CA1 22 0F 8B     	ld (Album_de_pintado),hl
1357  8CA4 22 15 8B     	ld (Scanlines_album_SP),hl
1358  8CA7
1359  8CA7 21 00 82     	ld hl,Scanlines_album_2
1360  8CAA 22 11 8B     	ld (Album_de_borrado),hl
1361  8CAD
1362  8CAD C9           	ret
1363  8CAE
1364  8CAE
1365  8CAE
1366  8CAE              ; ---------------------------------------------------------------------------------------------------------------------
1367  8CAE              ;
1368  8CAE              ; 8/1/23
1369  8CAE              ;
1370  8CAE              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1371  8CAE              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1372  8CAE              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1373  8CAE
1374  8CAE              ; Destruye HL y DE !!!!!
1375  8CAE
1376  8CAE              Inicia_punteros_de_cajas
1377  8CAE
1378  8CAE 21 10 88     	ld hl,Indice_de_cajas_de_entidades
1379  8CB1 CD DC 8C         call Extrae_address
1380  8CB4 22 FB 8A         ld (Puntero_store_caja),hl
1381  8CB7 21 12 88     	ld hl,Indice_de_cajas_de_entidades+2
1382  8CBA 22 FF 8A     	ld (Indice_restore_caja),hl
1383  8CBD CD DC 8C     	call Extrae_address
1384  8CC0 22 FD 8A     	ld (Puntero_restore_caja),hl
1385  8CC3 C9               ret
1386  8CC4
1387  8CC4              ; *************************************************************************************************************************************************************
1388  8CC4              ;
1389  8CC4              ; 8/1/23
1390  8CC4              ;
1391  8CC4              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1392  8CC4
1393  8CC4              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1394  8CC4              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1395  8CC4              ;	ret
1396  8CC4              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1397  8CC4              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1398  8CC4              ;	ret
1399  8CC4
1400  8CC4              ; -------------------------------------------------------------------------------------------------------------
1401  8CC4              ;
1402  8CC4              ; 21/9/23
1403  8CC4              ;
1404  8CC4
1405  8CC4              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1406  8CC4
1407  8CC4              ;;Limpia_album_Amadeus
1408  8CC4              ;
1409  8CC4              ;;	ld hl,Scanlines_album_Amadeus
1410  8CC4              ;;	ld a,(hl)
1411  8CC4              ;;	and a
1412  8CC4              ;;	ret z
1413  8CC4
1414  8CC4              ;;	ld hl,Scanlines_album_Amadeus;
1415  8CC4              ;;	ld de,Scanlines_album_Amadeus+1
1416  8CC4              ;;	ld bc,11
1417  8CC4              ;;	xor a
1418  8CC4              ;;	ld (hl),a
1419  8CC4              ;;	ldir
1420  8CC4
1421  8CC4              ;;	ld hl,Scanlines_album_Amadeus
1422  8CC4              ;;	ld (End_Snapshot_Amadeus),hl
1423  8CC4
1424  8CC4              ;;	ret
1425  8CC4
1426  8CC4              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1427  8CC4              ;	ld de,Variables_de_borrado+1
1428  8CC4              ;	ld bc,5
1429  8CC4              ;	xor a
1430  8CC4              ;	ld (hl),a
1431  8CC4              ;	ldir
1432  8CC4              ;	ret
1433  8CC4
1434  8CC4              ; -------------------------------------------------------------------------------------------------------------
1435  8CC4              ;
1436  8CC4              ; 	21/02/24
1437  8CC4              ;
1438  8CC4              ;	MODIFICA: AF,HL,BC,DE
1439  8CC4              ;
1440  8CC4              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1441  8CC4              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1442  8CC4
1443  8CC4              Calcula_numero_de_malotes
1444  8CC4
1445  8CC4 21 00 80     	ld hl,Scanlines_album
1446  8CC7 EB           	ex de,hl
1447  8CC8 2A 15 8B     	ld hl,(Scanlines_album_SP)
1448  8CCB
1449  8CCB 06 00        	ld b,0
1450  8CCD 7D           	ld a,l
1451  8CCE 93           	sub e
1452  8CCF 28 07        	jr z,1F
1453  8CD1
1454  8CD1              ; Nº de malotes no es "0".
1455  8CD1
1456  8CD1 D6 06        2 sub 6
1457  8CD3 04           	inc b
1458  8CD4 A7           	and a
1459  8CD5 20 FA        	jr nz,2B
1460  8CD7 78           	ld a,b
1461  8CD8
1462  8CD8 32 04 8B     1 ld (Numero_de_malotes),a
1463  8CDB C9           	ret
1464  8CDC
1465  8CDC              ; *************************************************************************************************************************************************************
1466  8CDC              ;
1467  8CDC              ; 20/10/22
1468  8CDC              ;
1469  8CDC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1470  8CDC              ;
1471  8CDC              ; Destruye el puntero y DE !!!!!
1472  8CDC
1473  8CDC 5E           Extrae_address ld e,(hl)
1474  8CDD 23           	inc hl
1475  8CDE 56           	ld d,(hl)
1476  8CDF 2B           	dec hl
1477  8CE0 EB           	ex de,hl
1478  8CE1 C9           	ret
1479  8CE2
1480  8CE2              ; *************************************************************************************************************************************************************
1481  8CE2              ;
1482  8CE2              ;	20/1/24
1483  8CE2              ;
1484  8CE2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1485  8CE2              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1486  8CE2              ;
1487  8CE2              ;   Destruye HL y BC !!!!!,
1488  8CE2              ;
1489  8CE2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1490  8CE2              ;					"0" ..... Izquierda.
1491  8CE2
1492  8CE2              Inicia_Puntero_objeto
1493  8CE2
1494  8CE2 3A CB 8A     	ld a,(Cuad_objeto)
1495  8CE5 E6 01        	and 1
1496  8CE7 F5           	push af
1497  8CE8 CC 04 8D     	call z,Inicia_puntero_objeto_izq
1498  8CEB F1           	pop af
1499  8CEC C8           	ret z
1500  8CED CD F1 8C     	call Inicia_puntero_objeto_der
1501  8CF0 C9           	ret
1502  8CF1
1503  8CF1              ; Arrancamos desde la parte izquierda de la pantalla.
1504  8CF1              ; Iniciamos (Indice_Sprite_der).
1505  8CF1
1506  8CF1 2A C1 8A     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1507  8CF4 22 C5 8A     	ld (Puntero_DESPLZ_der),hl
1508  8CF7 CD DC 8C     	call Extrae_address
1509  8CFA 22 BB 8A     	ld (Puntero_objeto),hl
1510  8CFD
1511  8CFD 2A C3 8A     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1512  8D00 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
1513  8D03 C9           	ret
1514  8D04
1515  8D04              ; Arrancamos desde la parte derecha de la pantalla.
1516  8D04              ; Iniciamos (Indice_Sprite_izq).
1517  8D04
1518  8D04 2A C3 8A     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1519  8D07 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
1520  8D0A CD DC 8C     	call Extrae_address
1521  8D0D 22 BB 8A     	ld (Puntero_objeto),hl
1522  8D10
1523  8D10 2A C1 8A     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1524  8D13 22 C5 8A     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1525  8D16 C9           	ret
1526  8D17
1527  8D17              ; **************************************************************************************************
1528  8D17              ;
1529  8D17              ;	31/01/24
1530  8D17              ;
1531  8D17              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1532  8D17
1533  8D17              Restore_entidad
1534  8D17
1535  8D17 2A FB 8A     	ld hl,(Puntero_store_caja)
1536  8D1A 11 B6 8A     	ld de,Bandeja_DRAW
1537  8D1D 7E           	ld a,(hl)
1538  8D1E 12           	ld (de),a
1539  8D1F 23           	inc hl 											; (Tipo).
1540  8D20
1541  8D20 11 BD 8A     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1542  8D23 01 02 00     	ld bc,2
1543  8D26 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1544  8D28
1545  8D28 13           	inc de
1546  8D29 7E           	ld a,(hl)
1547  8D2A 12           	ld (de),a 										; Transferimos (Attr).
1548  8D2B 23           	inc hl
1549  8D2C
1550  8D2C 11 CC 8A     	ld de,Impacto
1551  8D2F
1552  8D2F 7E           	ld a,(hl)
1553  8D30 12           	ld (de),a 										; Transferimos (Impacto).
1554  8D31 23           	inc hl
1555  8D32
1556  8D32 13           	inc de
1557  8D33
1558  8D33 01 06 00     	ld bc,6
1559  8D36 ED B0        	ldir
1560  8D38
1561  8D38 01 07 00     	ld bc,7
1562  8D3B ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1563  8D3D              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1564  8D3D 11 DE 8A     	ld de,Ctrl_2
1565  8D40
1566  8D40 7E           	ld a,(hl)
1567  8D41 12           	ld (de),a 										; Transferimos (Ctrl_2).
1568  8D42
1569  8D42 C9           	ret
1570  8D43
1571  8D43              ; **************************************************************************************************
1572  8D43              ;
1573  8D43              ;	08/05/23
1574  8D43              ;
1575  8D43              ;	Incrementamos los dos punteros de entidades. (+1).
1576  8D43
1577  8D43              Incrementa_punteros_de_cajas
1578  8D43
1579  8D43 2A FD 8A     	ld hl,(Puntero_restore_caja)
1580  8D46 22 FB 8A     	ld (Puntero_store_caja),hl
1581  8D49 2A FF 8A     	ld hl,(Indice_restore_caja)
1582  8D4C 23           	inc hl
1583  8D4D 23           	inc hl
1584  8D4E 22 FF 8A     	ld (Indice_restore_caja),hl
1585  8D51 CD DC 8C         call Extrae_address
1586  8D54 22 FD 8A         ld (Puntero_restore_caja),hl
1587  8D57 C9               ret
1588  8D58
1589  8D58              ; **************************************************************************************************
1590  8D58              ;
1591  8D58              ;	21/12/23
1592  8D58              ;
1593  8D58              ;	Restore_Amadeus
1594  8D58              ;
1595  8D58              ;	Cargamos en DRAW los parámetros de Amadeus.
1596  8D58              ;
1597  8D58
1598  8D58              ;Restore_Amadeus	push hl
1599  8D58              ;	push de
1600  8D58              ; 	push bc
1601  8D58              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1602  8D58              ;	ld de,Bandeja_DRAW
1603  8D58              ;	ld bc,42
1604  8D58              ;	ldir
1605  8D58              ;	pop bc
1606  8D58              ;	pop de
1607  8D58              ;	pop hl
1608  8D58              ;	ret
1609  8D58
1610  8D58              ; *************************************************************************************************************************************************************
1611  8D58              ;
1612  8D58              ;	21/12/23
1613  8D58              ;
1614  8D58              ;	Store_Amadeus
1615  8D58              ;
1616  8D58              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1617  8D58              ;
1618  8D58              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1619  8D58              ;
1620  8D58              ;	DESTRUYE: HL y BC y DE.
1621  8D58
1622  8D58              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1623  8D58              ;	ld bc,42
1624  8D58              ;	ldir
1625  8D58              ;	ret
1626  8D58
1627  8D58              ; -----------------------------------------------------------
1628  8D58              ;
1629  8D58              ;	21/12/23
1630  8D58              ;
1631  8D58              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1632  8D58              ;
1633  8D58              ;	Destruye: HL,BC,DE,A
1634  8D58
1635  8D58              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1636  8D58              ;	ld bc,41
1637  8D58              ;	xor a
1638  8D58              ;	ld (hl),a;
1639  8D58              ;	ld de,Bandeja_DRAW+1
1640  8D58              ;	ldir
1641  8D58              ;	ret
1642  8D58
1643  8D58              ; -----------------------------------------------------------
1644  8D58
1645  8D58              ; Teclado.
1646  8D58
1647  8D58 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1648  8D5A DB FE        	in a,($fe)
1649  8D5C E6 01        	and $01
1650  8D5E 28 02        	jr z,1f
1651  8D60 18 F6        	jr Pulsa_ENTER
1652  8D62 C9           1 ret
1653  8D63
1654  8D63              ; **************************************************************************************************
1655  8D63              ;
1656  8D63              ; Temporización.
1657  8D63
1658  8D63              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1659  8D63              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1660  8D63              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1661  8D63              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1662  8D63
1663  8D63              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1664  8D63              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1665  8D63              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1666  8D63
1667  8D63              ; A partir de $4f61 no hace falta DELAY.
1668  8D63
1669  8D63              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1670  8D63
1671  8D63 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1672  8D66 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1673  8D67 78           	LD A,B
1674  8D68 A7           	AND A
1675  8D69 20 FB        	JR NZ,wait
1676  8D6B C9           	RET
1677  8D6C
1678  8D6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1679  8D6C              ;
1680  8D6C              ;	5/3/23
1681  8D6C              ;
1682  8D6C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1683  8D6C
1684  8D6C              ;Movimiento_Amadeus
1685  8D6C
1686  8D6C              ; Disparo.
1687  8D6C
1688  8D6C              ;	ld a,(Disparo_Amadeus)
1689  8D6C              ;	and a
1690  8D6C              ;	jr nz,1F
1691  8D6C              ;	jr 2F
1692  8D6C
1693  8D6C              ;1 ld a,$f7													; "5" para disparar.
1694  8D6C              ;	in a,($fe)
1695  8D6C              ;	and $10
1696  8D6C
1697  8D6C              ;	push af
1698  8D6C              ;	call z,Genera_disparo
1699  8D6C              ;	pop af
1700  8D6C              ;	jr nz,2F
1701  8D6C
1702  8D6C              ;	ld a,(Disparo_Amadeus)
1703  8D6C              ;	xor 1
1704  8D6C              ;	ld (Disparo_Amadeus),a
1705  8D6C              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1706  8D6C              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1707  8D6C              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1708  8D6C              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1709  8D6C
1710  8D6C              ;	ld a,$f7
1711  8D6C              ;	in a,($fe)
1712  8D6C              ;	and $01
1713  8D6C              ;	ret z
1714  8D6C
1715  8D6C              ;	ld a,$f7
1716  8D6C              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1717  8D6C              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1718  8D6C              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1719  8D6C              ;	ret
1720  8D6C
1721  8D6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1722  8D6C              ;
1723  8D6C              ;	Rutina provisional para que los malotes cagen balas.
1724  8D6C
1725  8D6C              ;Detecta_disparo_entidad
1726  8D6C
1727  8D6C              ;	ld a,(Disparo_entidad)
1728  8D6C              ;	and a
1729  8D6C              ;	ret z
1730  8D6C
1731  8D6C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1732  8D6C
1733  8D6C              ;	ld a,$7f				; Detecta SPACE.
1734  8D6C              ;	in a,($fe)
1735  8D6C              ;	and 1
1736  8D6C              ;	ret nz
1737  8D6C
1738  8D6C              ;	call Genera_disparo
1739  8D6C              ;	ret
1740  8D6C
1741  8D6C              ; ----------------------------------------------------------------------
1742  8D6C              ;
1743  8D6C              ;	8/9/23
1744  8D6C
1745  8D6C              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1746  8D6C              ; 	dec hl
1747  8D6C              ;	ld a,(hl)
1748  8D6C              ;	and a
1749  8D6C              ;	ret z										; Salimos si es álbum está vacío.
1750  8D6C
1751  8D6C              ;	ld de,Variables_de_borrado+5
1752  8D6C              ;	ld bc,6
1753  8D6C              ;	lddr
1754  8D6C              ;	ret
1755  8D6C
1756  8D6C              ; ----------------------------------------------------------------------
1757  8D6C              ;
1758  8D6C              ;	9/9/23
1759  8D6C
1760  8D6C              ;Repone_datos_de_borrado_Amadeus
1761  8D6C
1762  8D6C              ;	ld hl,Variables_de_borrado
1763  8D6C              ;	ld de,Scanlines_album_Amadeus
1764  8D6C              ;	ld bc,6
1765  8D6C              ;	ldir
1766  8D6C
1767  8D6C              ;	ex de,hl
1768  8D6C              ;	ld (End_Snapshot_Amadeus),hl
1769  8D6C
1770  8D6C              ;	ret
1771  8D6C
1772  8D6C              ; ----------------------------------------------------------------------
1773  8D6C              ;
1774  8D6C              ;	27/10/23
1775  8D6C              ;
1776  8D6C
1777  8D6C              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1778  8D6C              ;	_ Scanlines_album correspondiente.
1779  8D6C
1780  8D6C              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1781  8D6C              ;	_ durante el proceso de escritura.
1782  8D6C
1783  8D6C              ;Repone_datos_de_borrado
1784  8D6C
1785  8D6C              ;	ld de,(Scanlines_album_SP)
1786  8D6C              ;	ld hl,Variables_de_borrado
1787  8D6C              ;	ld bc,6
1788  8D6C              ;	ldir
1789  8D6C
1790  8D6C              ;	ex de,hl
1791  8D6C              ;	ld (Scanlines_album_SP),hl
1792  8D6C
1793  8D6C              ;	ret
1794  8D6C
1795  8D6C              ; --------------------------------------------------------------------------------------
1796  8D6C
1797  8D6C              ;Pinta_Amadeus
1798  8D6C
1799  8D6C              ;   	call Calcula_malotes_Amadeus
1800  8D6C              ;	call Extrae_foto_Amadeus
1801  8D6C              ;	call Limpia_album_Amadeus
1802  8D6C
1803  8D6C              ;	ret
1804  8D6C
1805  8D6C              ; -----------------------------------------------------------------------------------
1806  8D6C              ;
1807  8D6C              ;	10/12/23
1808  8D6C              ;
1809  8D6C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1810  8D6C
1811  8D6C              Actualiza_relojes
1812  8D6C
1813  8D6C 3A 17 8B     	ld a,(Ctrl_3)
1814  8D6F CB 47        	bit 0,a
1815  8D71 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1816  8D72
1817  8D72 21 1C 8B     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1818  8D75 34           	inc (hl)
1819  8D76
1820  8D76 34           	inc (hl)
1821  8D77 35           	dec (hl)
1822  8D78 C0           	ret nz
1823  8D79
1824  8D79 21 1D 8B     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1825  8D7C 34           	inc (hl)
1826  8D7D C9           	ret
1827  8D7E
1828  8D7E              ; ---------------------------------------------------------------
1829  8D7E
1830  8D7E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D7E              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D7E              ;
   3+ 8D7E              ;   8/3/24
   4+ 8D7E              ;
   5+ 8D7E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D7E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D7E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D7E              ;	_ de la 1ª entidad del Nivel.
   9+ 8D7E              ;
  10+ 8D7E              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8D7E
  12+ 8D7E              ;	MODIFICA: HL,DE y A.
  13+ 8D7E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8D7E
  15+ 8D7E              Inicializa_Nivel
  16+ 8D7E
  17+ 8D7E 2A 21 8B     	ld hl,(Puntero_indice_NIVELES)
  18+ 8D81 CD DC 8C     	call Extrae_address
  19+ 8D84 7E           	ld a,(hl)
  20+ 8D85 32 01 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8D88 23           	inc hl
  22+ 8D89 CD 96 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8D8C 22 23 8B     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D8F CD 9F 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8D92
  26+ 8D92 CD B0 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8D95 C9           	ret
  28+ 8D96
  29+ 8D96              ; ----------------------
  30+ 8D96
  31+ 8D96 11 E0 8A     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8D99 01 04 00     	ld bc,4
  33+ 8D9C ED B0        	ldir
  34+ 8D9E C9           	ret
  35+ 8D9F
  36+ 8D9F 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8DA0 CD F0 8E         call Calcula_salto_en_BC
  38+ 8DA3 21 8C 87         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8DA6 A7               and a
  40+ 8DA7 ED 4A            adc hl,bc
  41+ 8DA9 CD DC 8C         call Extrae_address
  42+ 8DAC 22 EC 8A         ld (Puntero_indice_mov),hl
  43+ 8DAF C9               ret
  44+ 8DB0
  45+ 8DB0 3A B6 8A     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8DB3 CD F0 8E     	call Calcula_salto_en_BC
  47+ 8DB6 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8DB9 A7               and a
  49+ 8DBA ED 4A            adc hl,bc
  50+ 8DBC CD DC 8C         call Extrae_address
  51+ 8DBF 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8DC2 C9           	ret
  53+ 8DC3
  54+ 8DC3              ;---------------------------------------------------------------------------------------------------------------
  55+ 8DC3              ;
  56+ 8DC3              ;   5/1/24
  57+ 8DC3              ;
  58+ 8DC3              ;	Destruye A,BC,HL,DE
  59+ 8DC3
  60+ 8DC3              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8DC3              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8DC3
  63+ 8DC3              Inicia_Entidades
  64+ 8DC3
  65+ 8DC3              ; Preparamos los punteros de las cajas de entidades:
  66+ 8DC3
  67+ 8DC3 CD AE 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8DC6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8DC6 CD 57 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8DC9
  71+ 8DC9 2A 23 8B     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8DCC
  73+ 8DCC 22 23 8B     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8DCF
  75+ 8DCF CD 9E 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8DD2
  77+ 8DD2 2A 23 8B     	ld hl,(Datos_de_nivel)
  78+ 8DD5
  79+ 8DD5              ; En este punto:
  80+ 8DD5              ;
  81+ 8DD5              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8DD5              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8DD5
  84+ 8DD5 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8DD6
  86+ 8DD6 7E           	ld a,(hl)
  87+ 8DD7 CD 13 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8DDA
  89+ 8DDA CD 02 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8DDD
  91+ 8DDD              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8DDD
  93+ 8DDD CD C0 8E     	call Busca_mov_masticados_segun_tipo
  94+ 8DE0
  95+ 8DE0 A7           	and a
  96+ 8DE1 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8DE3
  98+ 8DE3              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8DE3
 100+ 8DE3              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8DE3              ;	_ de este tipo de entidad.
 102+ 8DE3
 103+ 8DE3 CD BE 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ 8DE6 CD CB 9A     	call Transfiere_datos_de_contadores
 105+ 8DE9
 106+ 8DE9 18 06        	jr 4F
 107+ 8DEB
 108+ 8DEB CD FB 8B     3 call Construye_movimientos_masticados_entidad
 109+ 8DEE
 110+ 8DEE              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8DEE              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8DEE              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8DEE              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8DEE              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8DEE
 116+ 8DEE CD 7E 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8DF1              ;																; _ Mov_masticados ya generados.
 118+ 8DF1 CD 2D 8E     4 call Guarda_foto_de_mov_masticado
 119+ 8DF4
 120+ 8DF4              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8DF4
 122+ 8DF4 2A D3 8A     	ld hl,(Puntero_de_impresion)
 123+ 8DF7 CD 01 9B     	call Genera_coordenadas
 124+ 8DFA CD 29 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8DFD CD 37 8E     	call Limpiamos_bandeja_DRAW
 126+ 8E00 CD 43 8D     	call Incrementa_punteros_de_cajas
 127+ 8E03
 128+ 8E03              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8E03              ; _ entidad del Nivel.
 130+ 8E03
 131+ 8E03 3A 18 8B     	ld a,(Ctrl_4)
 132+ 8E06 E6 F0        	and $f0
 133+ 8E08 32 18 8B     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8E0B
 135+ 8E0B              ; Siguiente entidad del Nivel.
 136+ 8E0B
 137+ 8E0B 2A 23 8B     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8E0E 23           	inc hl 														; _ entidad del Nivel.
 139+ 8E0F
 140+ 8E0F C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8E10
 142+ 8E10 10 BA        	djnz 2B
 143+ 8E12
 144+ 8E12 C9           	ret
 145+ 8E13
 146+ 8E13              ; ---------------------------------------------------------------------
 147+ 8E13              ;
 148+ 8E13              ;	10/02/24
 149+ 8E13              ;
 150+ 8E13              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8E13              ;
 152+ 8E13              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8E13
 154+ 8E13              Definicion_segun_tipo
 155+ 8E13
 156+ 8E13 CD F0 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8E16 21 DD 88     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8E19 CD F8 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8E1C C9           	ret
 160+ 8E1D
 161+ 8E1D              ; ---------------------------------------------------------------------
 162+ 8E1D              ;
 163+ 8E1D              ;	30/01/24
 164+ 8E1D
 165+ 8E1D
 166+ 8E1D              Store_Restore_cajas
 167+ 8E1D
 168+ 8E1D              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8E1D
 170+ 8E1D 2A D3 8A     	ld hl,(Puntero_de_impresion)
 171+ 8E20 CD 01 9B     	call Genera_coordenadas
 172+ 8E23
 173+ 8E23 CD 29 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8E26 CD 37 8E     	call Limpiamos_bandeja_DRAW
 175+ 8E29
 176+ 8E29              ; 	Entidad_sospechosa. 20/4/23
 177+ 8E29
 178+ 8E29              ;	ld a,(Impacto)
 179+ 8E29              ;	and a
 180+ 8E29              ;	jr z,1F
 181+ 8E29
 182+ 8E29              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8E29              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8E29              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8E29              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8E29              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8E29
 188+ 8E29
 189+ 8E29              ;1 ld hl,(Puntero_restore_caja)
 190+ 8E29              ;	ld a,(hl)
 191+ 8E29              ;	and a
 192+ 8E29              ;	push af
 193+ 8E29              ;	jr z,2F
 194+ 8E29
 195+ 8E29              ;	di
 196+ 8E29              ;	ld de,Bandeja_DRAW
 197+ 8E29              ;	ld bc,42
 198+ 8E29              ;	ldir
 199+ 8E29              ;	ei
 200+ 8E29
 201+ 8E29 CD 43 8D     2 call Incrementa_punteros_de_cajas
 202+ 8E2C C9           	ret
 203+ 8E2D
 204+ 8E2D
 205+ 8E2D              ; ---------------------------------------------------------------------
 206+ 8E2D              ;
 207+ 8E2D              ;	29/01/24
 208+ 8E2D
 209+ 8E2D              Guarda_foto_de_mov_masticado
 210+ 8E2D
 211+ 8E2D CD 4F 8C     	call Cargamos_registros_con_mov_masticado
 212+ 8E30 CD 45 9B     	call Genera_datos_de_impresion
 213+ 8E33              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8E33              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8E33              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8E33              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8E33
 218+ 8E33 CD 42 8E     	call Decrementa_Contador_de_mov_masticados
 219+ 8E36 C9           	ret
 220+ 8E37
 221+ 8E37              ; ---------------------------------------------------------------------
 222+ 8E37              ;
 223+ 8E37              ;	25/01/24
 224+ 8E37
 225+ 8E37 21 B6 8A     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8E3A 06 2A        	ld b,42
 227+ 8E3C AF           	xor a
 228+ 8E3D
 229+ 8E3D 77           1 ld (hl),a
 230+ 8E3E 23           	inc hl
 231+ 8E3F 10 FC        	djnz 1B
 232+ 8E41
 233+ 8E41 C9           	ret
 234+ 8E42
 235+ 8E42              ; ---------------------------------------------------------------------
 236+ 8E42              ;
 237+ 8E42              ;	22/01/24
 238+ 8E42
 239+ 8E42 2A D7 8A     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8E45 2B           	dec hl
 241+ 8E46
 242+ 8E46 24           	inc h
 243+ 8E47 25           	dec h
 244+ 8E48
 245+ 8E48 FC 4F 8E     	call m,Reinicia_entidad_maliciosa
 246+ 8E4B
 247+ 8E4B              ;	jr nz,1F
 248+ 8E4B
 249+ 8E4B              ;	inc l
 250+ 8E4B              ;	dec l
 251+ 8E4B
 252+ 8E4B              ;	di
 253+ 8E4B              ;	jr z,$
 254+ 8E4B              ;	ei
 255+ 8E4B
 256+ 8E4B 22 D7 8A     1 ld (Contador_de_mov_masticados),hl
 257+ 8E4E C9           	ret
 258+ 8E4F
 259+ 8E4F              ; ---------------------------------------------------------------------
 260+ 8E4F              ;
 261+ 8E4F              ;	10/2/24
 262+ 8E4F
 263+ 8E4F              Reinicia_entidad_maliciosa
 264+ 8E4F
 265+ 8E4F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8E4F
 267+ 8E4F CD BE 9A     	call Situa_en_contador_general_de_mov_masticados
 268+ 8E52 CD CB 9A     	call Transfiere_datos_de_contadores
 269+ 8E55
 270+ 8E55              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8E55
 272+ 8E55 3A B6 8A     	ld a,(Tipo)
 273+ 8E58 CD 13 8E     	call Definicion_segun_tipo
 274+ 8E5B
 275+ 8E5B E5           	push hl
 276+ 8E5C DD E1        	pop ix
 277+ 8E5E
 278+ 8E5E DD 6E 0B     	ld l,(ix+11)
 279+ 8E61 DD 66 0C     	ld h,(ix+12)
 280+ 8E64
 281+ 8E64 22 D5 8A     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8E67
 283+ 8E67              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8E67              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8E67
 286+ 8E67 2A 15 8B     	ld hl,(Scanlines_album_SP)
 287+ 8E6A 01 06 00     	ld bc,6
 288+ 8E6D A7           	and a
 289+ 8E6E ED 42        	sbc hl,bc
 290+ 8E70 22 15 8B     	ld (Scanlines_album_SP),hl
 291+ 8E73
 292+ 8E73 CD 4F 8C     	call Cargamos_registros_con_mov_masticado
 293+ 8E76 CD 45 9B     	call Genera_datos_de_impresion
 294+ 8E79
 295+ 8E79 2A D7 8A     	ld hl,(Contador_de_mov_masticados)
 296+ 8E7C 2B           	dec hl
 297+ 8E7D
 298+ 8E7D C9           	ret
 299+ 8E7E
 300+ 8E7E
 301+ 8E7E
 302+ 8E7E
 303+ 8E7E              ; ---------------------------------------------------------------------
 304+ 8E7E              ;
 305+ 8E7E              ;	22/01/24
 306+ 8E7E
 307+ 8E7E 21 18 8B     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8E81 CB 46        	bit 0,(hl)
 309+ 8E83 20 0D        	jr nz,1F
 310+ 8E85 CB 4E        	bit 1,(hl)
 311+ 8E87 20 0C        	jr nz,2F
 312+ 8E89 CB 56        	bit 2,(hl)
 313+ 8E8B 20 0B        	jr nz,3F
 314+ 8E8D CB 5E        	bit 3,(hl)
 315+ 8E8F 20 0A        	jr nz,4F
 316+ 8E91 C9           	ret
 317+ 8E92
 318+ 8E92 CB E6        1 set 4,(hl)
 319+ 8E94 C9           	ret
 320+ 8E95 CB EE        2 set 5,(hl)
 321+ 8E97 C9           	ret
 322+ 8E98 CB F6        3 set 6,(hl)
 323+ 8E9A C9           	ret
 324+ 8E9B CB FE        4 set 7,(hl)
 325+ 8E9D C9           	ret
 326+ 8E9E
 327+ 8E9E              ; ---------------------------------------------------------------------
 328+ 8E9E              ;
 329+ 8E9E              ;	23/01/24
 330+ 8E9E              ;
 331+ 8E9E              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8E9E              ;
 333+ 8E9E              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8E9E              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8E9E              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8E9E              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8E9E
 338+ 8E9E              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8E9E
 340+ 8E9E 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8E9F 3D           	dec a
 342+ 8EA0 20 06        	jr nz,1F
 343+ 8EA2
 344+ 8EA2              ; --- Tipo_1
 345+ 8EA2
 346+ 8EA2 21 18 8B     	ld hl,Ctrl_4
 347+ 8EA5 CB C6        	set 0,(hl)
 348+ 8EA7 C9           	ret
 349+ 8EA8
 350+ 8EA8 3D           1 dec a
 351+ 8EA9 20 06        	jr nz,2F
 352+ 8EAB
 353+ 8EAB              ; --- Tipo_2
 354+ 8EAB
 355+ 8EAB 21 18 8B     	ld hl,Ctrl_4
 356+ 8EAE CB CE        	set 1,(hl)
 357+ 8EB0 C9           	ret
 358+ 8EB1
 359+ 8EB1 3D           2 dec a
 360+ 8EB2 20 06        	jr nz,3F
 361+ 8EB4
 362+ 8EB4              ; --- Tipo_3
 363+ 8EB4
 364+ 8EB4 21 18 8B     	ld hl,Ctrl_4
 365+ 8EB7 CB D6        	set 2,(hl)
 366+ 8EB9 C9           	ret
 367+ 8EBA
 368+ 8EBA              ; --- Tipo_3
 369+ 8EBA
 370+ 8EBA 21 18 8B     3 ld hl,Ctrl_4
 371+ 8EBD CB D6        	set 2,(hl)
 372+ 8EBF C9           	ret
 373+ 8EC0
 374+ 8EC0              ; ---------------------------------------------------------------------
 375+ 8EC0              ;
 376+ 8EC0              ;	22/01/24
 377+ 8EC0
 378+ 8EC0 21 18 8B     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8EC3 CB 46        	bit 0,(hl)
 380+ 8EC5 20 0E        	jr nz,1F
 381+ 8EC7
 382+ 8EC7 CB 4E        	bit 1,(hl)
 383+ 8EC9 20 10        	jr nz,2F
 384+ 8ECB
 385+ 8ECB CB 56        	bit 2,(hl)
 386+ 8ECD 20 12        	jr nz,3F
 387+ 8ECF
 388+ 8ECF CB 5E        	bit 3,(hl)
 389+ 8ED1 20 14        	jr nz,4F
 390+ 8ED3 18 19        	jr 6F
 391+ 8ED5
 392+ 8ED5              ; Entidad_de_Tipo_1.
 393+ 8ED5
 394+ 8ED5 CB 66        1 bit 4,(hl)
 395+ 8ED7 28 15        	jr z,6F
 396+ 8ED9 18 10        	jr 5F
 397+ 8EDB
 398+ 8EDB              ; Entidad_de_Tipo_2.
 399+ 8EDB
 400+ 8EDB CB 6E        2 bit 5,(hl)
 401+ 8EDD 28 0F        	jr z,6F
 402+ 8EDF 18 0A        	jr 5F
 403+ 8EE1
 404+ 8EE1              ; Entidad_de_Tipo_3.
 405+ 8EE1
 406+ 8EE1 CB 76        3 bit 6,(hl)
 407+ 8EE3 28 09        	jr z,6F
 408+ 8EE5 18 04        	jr 5F
 409+ 8EE7
 410+ 8EE7              ; Entidad_de_Tipo_4.
 411+ 8EE7
 412+ 8EE7 CB 7E        4 bit 7,(hl)
 413+ 8EE9 28 03        	jr z,6F
 414+ 8EEB
 415+ 8EEB              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8EEB
 417+ 8EEB AF           5 xor a
 418+ 8EEC 3C           	inc a
 419+ 8EED C9           	ret
 420+ 8EEE
 421+ 8EEE              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8EEE
 423+ 8EEE AF           6 xor a
 424+ 8EEF C9           	ret
 425+ 8EF0
 426+ 8EF0              ;	------------------------------------------------------------------------------------
 427+ 8EF0              ;
 428+ 8EF0              ;	12/01/24
 429+ 8EF0              ;
 430+ 8EF0              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8EF0              ;
 432+ 8EF0              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8EF0              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8EF0
 435+ 8EF0 CB 27        Calcula_salto_en_BC sla a
 436+ 8EF2 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8EF4 4F           	ld c,a
 438+ 8EF5 06 00        	ld b,0
 439+ 8EF7 C9           	ret
 440+ 8EF8
 441+ 8EF8              ; ------------------------------------------------------------------
 442+ 8EF8              ;
 443+ 8EF8              ;	19/1/24
 444+ 8EF8              ;
 445+ 8EF8              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8EF8              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8EF8
 448+ 8EF8 A7           Situa_en_datos_de_definicion and a
 449+ 8EF9 ED 4A        	adc hl,bc
 450+ 8EFB CD DC 8C     	call Extrae_address
 451+ 8EFE 22 07 8B         ld (Datos_de_entidad),hl
 452+ 8F01 C9           	ret
 453+ 8F02
 454+ 8F02              ; ------------------------------------------------------------------
 455+ 8F02
 456+ 8F02              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8F02              ; 	inc de
 458+ 8F02              ; 	inc de
 459+ 8F02              ; 	ex de,hl
 460+ 8F02              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8F02              ; 	ret
 462+ 8F02
 463+ 8F02              ; ----------------------------------------------------------------------------------------------------------
 464+ 8F02              ;
 465+ 8F02              ;	31/1/24
 466+ 8F02              ;
 467+ 8F02              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8F02              ;	_ de entidad.
 469+ 8F02              ;
 470+ 8F02              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8F02              ;
 472+ 8F02              ;
 473+ 8F02              ;	MODIFICA: HL,DE y BC
 474+ 8F02
 475+ 8F02
 476+ 8F02              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8F02
 478+ 8F02 11 B6 8A     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8F05 01 03 00     	ld bc,3
 480+ 8F08 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8F0A              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8F0A 11 C0 8A     	ld de,Attr									; DE en (Attr).
 483+ 8F0D 01 05 00     	ld bc,5
 484+ 8F10 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8F12              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8F12 11 C9 8A     	ld de,Posicion_inicio
 487+ 8F15 01 03 00     	ld bc,3
 488+ 8F18 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8F1A              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8F1A 11 D5 8A     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8F1D 01 02 00     	ld bc,2
 492+ 8F20 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8F22
 494+ 8F22 11 DF 8A     	ld de,Frames_explosion
 495+ 8F25 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8F27 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8F28
 498+ 8F28 C9           	ret
 499+ 8F29
 500+ 8F29              ; ----------------------------------------------------------------------------------------------------------
 501+ 8F29              ;
 502+ 8F29              ;	22/01/24
 503+ 8F29              ;
 504+ 8F29              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8F29              ;
 506+ 8F29              ;	Las cajas contienen entidades iniciadas:
 507+ 8F29              ;
 508+ 8F29              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8F29              ;
 510+ 8F29              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8F29              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8F29              ;
 513+ 8F29              ;	MODIFICA: HL,DE y BC
 514+ 8F29
 515+ 8F29 21 B6 8A     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8F2C ED 5B FB 8A  	ld de,(Puntero_store_caja)
 517+ 8F30 7E           	ld a,(hl)
 518+ 8F31 12           	ld (de),a
 519+ 8F32 13           	inc de 													; (Tipo).
 520+ 8F33
 521+ 8F33 21 BD 8A     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8F36 01 02 00     	ld bc,2
 523+ 8F39 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8F3B              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8F3B 23           	inc hl
 526+ 8F3C 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8F3D 12           	ld (de),a
 528+ 8F3E 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8F3F
 530+ 8F3F 21 CC 8A     	ld hl,Impacto
 531+ 8F42 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8F43 12           	ld (de),a
 533+ 8F44 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8F45              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8F45 23           	inc hl
 536+ 8F46 01 06 00     	ld bc,6
 537+ 8F49 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8F4B              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8F4B 01 07 00     	ld bc,7
 540+ 8F4E ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8F50              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8F50              ;															; HL apunta ahora a (Columnas).
 543+ 8F50 21 DE 8A     	ld hl,Ctrl_2
 544+ 8F53 7E           	ld a,(hl)
 545+ 8F54 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8F55 13           	inc de
 547+ 8F56
 548+ 8F56 C9           	ret
 549+ 8F57
 550+ 8F57              ;---------------------------------------------------------------------------------------------------------------
 551+ 8F57              ;
 552+ 8F57              ;	5/1/24
 553+ 8F57              ;
 554+ 8F57              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8F57              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8F57              ;
 557+ 8F57              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8F57              ;
 559+ 8F57              ;	(Numero_parcial_de_entidades)="7".
 560+ 8F57              ;
 561+ 8F57              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8F57              ;
 563+ 8F57              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8F57              ;
 565+ 8F57              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8F57              ;	MODIFICA: A y B.
 567+ 8F57              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8F57
 569+ 8F57              Inicializa_Numero_parcial_de_entidades
 570+ 8F57
 571+ 8F57              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8F57
 573+ 8F57 3A 01 8B     	ld a,(Numero_de_entidades)
 574+ 8F5A A7           	and a
 575+ 8F5B
 576+ 8F5B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8F5B              ;	jr z,$
 578+ 8F5B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8F5B
 580+ 8F5B 20 03        	jr nz,3F
 581+ 8F5D
 582+ 8F5D              ; ---------- ---------- ----------
 583+ 8F5D
 584+ 8F5D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8F5D              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8F5D
 587+ 8F5D CD 7E 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8F60
 589+ 8F60              ; ---------- ---------- ----------
 590+ 8F60
 591+ 8F60 3A 01 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8F63 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8F65 38 08        	jr c,1F
 594+ 8F67
 595+ 8F67              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8F67              ; Actualizamos variables.
 597+ 8F67
 598+ 8F67 3E 07        	ld a,7
 599+ 8F69 32 02 8B     	ld (Numero_parcial_de_entidades),a
 600+ 8F6C 47           	ld b,a
 601+ 8F6D 18 04        	jr 2F
 602+ 8F6F
 603+ 8F6F              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8F6F              ; (Numero_de_entidades)="0".
 605+ 8F6F
 606+ 8F6F 32 02 8B     1 ld (Numero_parcial_de_entidades),a
 607+ 8F72 47           	ld b,a
 608+ 8F73 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1831  8F74              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F74              ; ******************************************************************************************************************************************************************************************
   2+ 8F74              ;
   3+ 8F74              ; 26/06/23
   4+ 8F74              ;
   5+ 8F74              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F74
   7+ 8F74              Draw
   8+ 8F74
   9+ 8F74 CD 5E 92     	call Prepara_draw
  10+ 8F77 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F78 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F79 28 05        	jr z,2F
  13+ 8F7B
  14+ 8F7B 3A CB 8A     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F7E 18 0C        	jr 1F
  16+ 8F80
  17+ 8F80 2A C9 8A     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F83 22 B9 8A     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F86 CD 12 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F89              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F89
  22+ 8F89 CD 22 9A     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F8C
  24+ 8F8C 3A D9 8A     1 ld a,(Ctrl_0)
  25+ 8F8F CB 6F        	bit 5,a
  26+ 8F91 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F93
  28+ 8F93 CD A8 8F     	call Comprueba_limite_horizontal
  29+ 8F96 CD 38 90     	call Comprueba_limite_vertical
  30+ 8F99
  31+ 8F99              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F99              ; -----------------------
  33+ 8F99              ; -----------------------
  34+ 8F99              ; -----------------------
  35+ 8F99
  36+ 8F99 CD 8E 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F9C CD C5 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F9F              ;	call Define_rutina_de_impresion
  39+ 8F9F
  40+ 8F9F 3A D9 8A     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8FA2 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8FA4 32 D9 8A     	ld (Ctrl_0),a
  43+ 8FA7
  44+ 8FA7 C9           	ret
  45+ 8FA8
  46+ 8FA8              ; *******************************************************************************************************************************************************************************************
  47+ 8FA8              ;	21/01/23
  48+ 8FA8              ;
  49+ 8FA8              ; 	Comprueba_limite_horizontal.
  50+ 8FA8              ;
  51+ 8FA8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8FA8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8FA8              ;
  54+ 8FA8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8FA8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8FA8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8FA8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8FA8
  59+ 8FA8
  60+ 8FA8
  61+ 8FA8 3A D9 8A     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8FAB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8FAD 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FAF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8FB1 32 D9 8A     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8FB4 18 09            jr 6F
  67+ 8FB6 CB 5F        1 bit 3,a
  68+ 8FB8 28 0A            jr z,2F
  69+ 8FBA E6 F7            and $f7
  70+ 8FBC 32 D9 8A         ld (Ctrl_0),a
  71+ 8FBF CD 12 91     6 call Inicializacion
  72+ 8FC2 18 5B            jr 5F
  73+ 8FC4 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8FC5
  75+ 8FC5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8FC5              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8FC5
  78+ 8FC5 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8FC6 2A DB 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8FC9 CD E3 9A     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8FCC 67           	ld h,a
  82+ 8FCD EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8FCE CD E3 9A     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8FD1 67           	ld h,a
  85+ 8FD2 A7           	and a
  86+ 8FD3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8FD5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8FD6 3A CB 8A     	ld a,(Cuad_objeto)
  89+ 8FD9 FE 02        	cp 2
  90+ 8FDB 38 1E        	jr c,3F
  91+ 8FDD 28 1C        	jr z,3F
  92+ 8FDF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8FE0 28 23            jr z,7F
  94+ 8FE2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8FE4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8FE6 E1           	pop hl
  97+ 8FE7
  98+ 8FE7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8FE7              ; _para indicar con E="2" en caso necesario.
 100+ 8FE7
 101+ 8FE7 E5               push hl
 102+ 8FE8 C5               push bc
 103+ 8FE9 CD E3 9A     	call calcula_tercio
 104+ 8FEC FE 01        	cp 1
 105+ 8FEE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8FF0 CD 20 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8FF3 28 26            jr z,9F
 108+ 8FF5 38 24            jr c,9F
 109+ 8FF7 1E 00        11 ld e,0
 110+ 8FF9 18 22            jr 8F
 111+ 8FFB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8FFC 28 07        	jr z, 7F
 113+ 8FFE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9000 1E 00         	ld e,0
 115+ 9002 E1           	pop hl
 116+ 9003 18 04        	jr 4F
 117+ 9005 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9007 18 15            jr 10F
 119+ 9009
 120+ 9009              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9009              ; _para indicar con E="2" en caso necesario.
 122+ 9009
 123+ 9009 E5           4 push hl
 124+ 900A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 900B CD E3 9A     	call calcula_tercio
 126+ 900E FE 01        	cp 1
 127+ 9010 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9012 CD 20 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9015 28 04            jr z,9F
 130+ 9017 30 02            jr nc,9F
 131+ 9019 18 02        	jr 8F
 132+ 901B 1E 02        9 ld e,2
 133+ 901D C1           8 pop bc
 134+ 901E E1           10 pop hl
 135+ 901F C9           5 ret
 136+ 9020
 137+ 9020              ; --------------------
 138+ 9020              ;
 139+ 9020              ; 25/08/22
 140+ 9020
 141+ 9020 CD E3 9A     Comprueba_centro call calcula_tercio
 142+ 9023 67               ld h,a
 143+ 9024 08           	ex af,af
 144+ 9025 FE 02        	cp 2
 145+ 9027 38 07        	jr c,1F
 146+ 9029 28 05        	jr z,1F
 147+ 902B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 902E 18 03        	jr 2F
 149+ 9030 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9033 08           2 ex af,af
 151+ 9034 A7               and a
 152+ 9035 ED 42            sbc hl,bc
 153+ 9037 C9               ret
 154+ 9038
 155+ 9038              ; *********************************************************************************************************************************************************************************************
 156+ 9038              ;
 157+ 9038              ;   16/8/22
 158+ 9038              ;
 159+ 9038              ;	Comprueba_limite_vertical
 160+ 9038              ;
 161+ 9038              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 9038              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 9038              ;
 164+ 9038
 165+ 9038 2A B9 8A     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 903B 7D           	ld a,l
 167+ 903C E6 1F        	and $1F
 168+ 903E 57           	ld d,a
 169+ 903F 3A DD 8A     	ld a,(Limite_vertical)
 170+ 9042 BA           	cp d 											; Límite - Posición.
 171+ 9043 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9044 3A CB 8A     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9047 CB 47        	bit 0,a
 174+ 9049 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 904B
 176+ 904B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 904B
 178+ 904B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 904C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 904E
 181+ 904E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 904E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 904E
 184+ 904E 3A BD 8A         ld a,(Coordenada_X)
 185+ 9051 16 0F            ld d,Centro_izquierda
 186+ 9053 A7               and a
 187+ 9054 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9055 28 1E            jr z,3F
 189+ 9057 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 9059              ;                                                    ; _salimos sin modificar nada.
 191+ 9059 18 0E            jr 2F
 192+ 905B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 905C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 905E
 195+ 905E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 905E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 905E
 198+ 905E 3A BD 8A         ld a,(Coordenada_X)
 199+ 9061 16 10            ld d,Centro_derecha
 200+ 9063 A7               and a
 201+ 9064 92               sub d
 202+ 9065 28 0E            jr z,3F
 203+ 9067 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9069              ;                                                    ; _salimos sin modificar nada.
 205+ 9069 CB 43        2 bit 0,e
 206+ 906B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 906D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 906E CD 02 91         call Modificaccionne
 209+ 9071 C1           	pop bc
 210+ 9072 CD 12 91         call Inicializacion
 211+ 9075 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9076
 213+ 9076              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9076
 215+ 9076 C5           4 push bc
 216+ 9077 01 B8 8A     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 907A 0A           	ld a,(bc)
 218+ 907B 3D           	dec a
 219+ 907C 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 907D 7D           	ld a,l
 221+ 907E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 907F CB 47        	bit 0,a
 223+ 9081 28 03        	jr z,5F
 224+ 9083 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9084 18 2E        	jr 7F
 226+ 9086
 227+ 9086              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9086
 229+ 9086 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9087 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9088 3A D9 8A     	ld a,(Ctrl_0)
 232+ 908B CB 4F        	bit 1,a
 233+ 908D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 908F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9090
 236+ 9090              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9090
 238+ 9090 1C               inc e
 239+ 9091 1D               dec e
 240+ 9092 20 07            jr nz,12F
 241+ 9094 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9095 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9096 22 B9 8A     	ld (Posicion_actual),hl
 244+ 9099 18 44        13 jr 9F
 245+ 909B CB 43        12 bit 0,e
 246+ 909D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 909F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 909F C1           	pop bc
 249+ 90A0 18 D3        	jr 3B
 250+ 90A2 80           14 add b
 251+ 90A3 6F               ld l,a
 252+ 90A4 22 B9 8A     	ld (Posicion_actual),hl
 253+ 90A7 CD 02 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 90AA 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 90AC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90AE 32 D9 8A         ld (Ctrl_0),a
 257+ 90B1 F1           	pop af
 258+ 90B2 18 2B        	jr 9F
 259+ 90B4
 260+ 90B4              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 90B4
 262+ 90B4 F5           7 push af
 263+ 90B5 3A D9 8A     	ld a,(Ctrl_0)
 264+ 90B8 CB 47        	bit 0,a
 265+ 90BA 20 1D        	jr nz,8F
 266+ 90BC F1           	pop af
 267+ 90BD
 268+ 90BD              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 90BD
 270+ 90BD 1C           	inc e
 271+ 90BE 1D               dec e
 272+ 90BF 20 07            jr nz,10F
 273+ 90C1 90           	sub b
 274+ 90C2 6F               ld l,a
 275+ 90C3 22 B9 8A     	ld (Posicion_actual),hl
 276+ 90C6 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 90C8              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 90C8 CB 43        10 bit 0,e
 279+ 90CA 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 90CC              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 90CC C1           	pop bc
 282+ 90CD 18 A6        	jr 3B
 283+ 90CF 90           16 sub b
 284+ 90D0 6F               ld l,a
 285+ 90D1 22 B9 8A     	ld (Posicion_actual),hl
 286+ 90D4 CD 02 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 90D7 18 06            jr 9F
 288+ 90D9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 90DB 32 D9 8A         ld (Ctrl_0),a
 290+ 90DE F1           	pop af
 291+ 90DF C1           9 pop bc
 292+ 90E0 1E 00        	ld e,0
 293+ 90E2 CD 12 91         call Inicializacion
 294+ 90E5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 90E6 08           	ex af,af
 296+ 90E7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 90E8 18 8B            jr 3B
 298+ 90EA
 299+ 90EA              ; --------------------
 300+ 90EA
 301+ 90EA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 90EC CD 79 92     1 call PreviousScan
 303+ 90EF 10 FB            djnz 1B
 304+ 90F1 22 B9 8A     	ld (Posicion_actual),hl
 305+ 90F4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 90F5 C9           	ret
 307+ 90F6
 308+ 90F6              ; --------------------
 309+ 90F6
 310+ 90F6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 90F8 CD 6A 92     1 call NextScan
 312+ 90FB 10 FB            djnz 1B
 313+ 90FD 22 B9 8A     	ld (Posicion_actual),hl
 314+ 9100 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9101 C9           	ret
 316+ 9102
 317+ 9102              ; --------------------
 318+ 9102              ;
 319+ 9102              ;	22/01/23
 320+ 9102              ;
 321+ 9102              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9102              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9102              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9102
 325+ 9102
 326+ 9102              Modificaccionne
 327+ 9102
 328+ 9102 3A CB 8A     	ld a,(Cuad_objeto)
 329+ 9105 FE 02        	cp 2
 330+ 9107 CC EA 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 910A DC EA 90         call c,Modifica_Pos_actual
 332+ 910D C8           	ret z
 333+ 910E CD F6 90         call Modifica_Pos_actual2
 334+ 9111 C9               ret
 335+ 9112
 336+ 9112              ; *************************************************************************************************************************************************************************************************
 337+ 9112              ;
 338+ 9112              ;	13/8/22
 339+ 9112              ;
 340+ 9112              ;	Inicializacion
 341+ 9112              ;
 342+ 9112              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9112              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9112              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9112              ;
 346+ 9112              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9112              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9112              ;	_ desaparece/aparece.
 349+ 9112
 350+ 9112              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9112              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9112              ;
 353+ 9112              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9112              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9112              ; 		   [E] ="0"
 356+ 9112
 357+ 9112              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9112
 359+ 9112 CD E3 9A     Inicializacion call calcula_tercio
 360+ 9115 28 36        	jr z,primit
 361+ 9117 E6 02        	and 2
 362+ 9119 20 07        	jr nz,segmit
 363+ 911B 7D           	ld a,l
 364+ 911C FE 7F        	cp $7f
 365+ 911E 38 2D        	jr c,primit
 366+ 9120 28 2B        	jr z,primit
 367+ 9122 CD 88 91     segmit call column
 368+ 9125 38 13        	jr c,tercuad
 369+ 9127 3E 04        cuarcuad ld a,4
 370+ 9129 32 CB 8A     	ld (Cuad_objeto),a
 371+ 912C 21 20 48     	ld hl,$4820
 372+ 912F 22 DB 8A     	ld (Limite_horizontal),hl
 373+ 9132 21 DD 8A     	ld hl,Limite_vertical
 374+ 9135 36 0D        	ld (hl),$0d
 375+ 9137 08           	ex af,af
 376+ 9138 18 3C        	jr 1F
 377+ 913A              tercuad
 378+ 913A 3E 03        	ld a,3
 379+ 913C 32 CB 8A     	ld (Cuad_objeto),a
 380+ 913F 21 20 48     	ld hl,$4820
 381+ 9142 22 DB 8A     	ld (Limite_horizontal),hl
 382+ 9145 21 DD 8A     	ld hl,Limite_vertical
 383+ 9148 36 12        	ld (hl),$12
 384+ 914A 08           	ex af,af
 385+ 914B 18 29        	jr 1F
 386+ 914D CD 88 91     primit call column
 387+ 9150 38 13        	jr c, primcuad
 388+ 9152              segcuad
 389+ 9152 3E 02        	ld a,2
 390+ 9154 32 CB 8A     	ld (Cuad_objeto),a
 391+ 9157 21 C0 4F     	ld hl,$4fc0
 392+ 915A 22 DB 8A     	ld (Limite_horizontal),hl
 393+ 915D 21 DD 8A     	ld hl,Limite_vertical
 394+ 9160 36 0D        	ld (hl),$0d
 395+ 9162 08           	ex af,af
 396+ 9163 18 11        	jr 1F
 397+ 9165              primcuad
 398+ 9165 3E 01        	ld a,1
 399+ 9167 32 CB 8A     	ld (Cuad_objeto),a
 400+ 916A 21 C0 4F     	ld hl,$4fc0
 401+ 916D 22 DB 8A     	ld (Limite_horizontal),hl
 402+ 9170 21 DD 8A     	ld hl,Limite_vertical
 403+ 9173 36 12        	ld (hl),$12
 404+ 9175 08           	ex af,af
 405+ 9176
 406+ 9176 C5           1 push bc
 407+ 9177 E5           	push hl
 408+ 9178 D5           	push de
 409+ 9179
 410+ 9179 2A B9 8A     	ld hl,(Posicion_actual)
 411+ 917C CD 01 9B     	call Genera_coordenadas
 412+ 917F
 413+ 917F D1           	pop de
 414+ 9180 E1           	pop hl
 415+ 9181 C1           	pop bc
 416+ 9182
 417+ 9182 21 D9 8A     	ld hl,Ctrl_0
 418+ 9185 CB EE        	set 5,(hl)
 419+ 9187 C9           	ret
 420+ 9188
 421+ 9188              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9188
 423+ 9188              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9188              ;
 425+ 9188              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9188
 427+ 9188 7D           column ld a,l
 428+ 9189 E6 1F        	and $1f
 429+ 918B FE 10         	cp $10
 430+ 918D C9            	ret
 431+ 918E
 432+ 918E              ; --------------------------------------------------------------------------------------------------------------------
 433+ 918E              ;
 434+ 918E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 918E              ;
 436+ 918E              ; 14/12/22
 437+ 918E              ;
 438+ 918E              ;	Modifica: A y BC.
 439+ 918E
 440+ 918E 3A CB 8A     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9191 E6 01        	and 1
 442+ 9193 28 17        	jr z,1F
 443+ 9195
 444+ 9195              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9195
 446+ 9195 3A BD 8A     	ld a,(Coordenada_X)
 447+ 9198 47           	ld b,a
 448+ 9199 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 919A 79           	ld a,c
 450+ 919B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 919C 38 08        	jr c,2F
 452+ 919E 47           	ld b,a
 453+ 919F 79           	ld a,c
 454+ 91A0 90           	sub b
 455+ 91A1 32 DA 8A     	ld (Columnas),a
 456+ 91A4 18 1B        	jr 4F
 457+ 91A6 79           2 ld a,c
 458+ 91A7 32 DA 8A     	ld (Columnas),a
 459+ 91AA 18 15        	jr 4F
 460+ 91AC
 461+ 91AC              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 91AC
 463+ 91AC 3A BD 8A     1 ld a,(Coordenada_X)
 464+ 91AF 81           	add c
 465+ 91B0 3D           	dec a
 466+ 91B1 D6 1F        	sub $1f
 467+ 91B3 38 08        	jr c,3F
 468+ 91B5 47           	ld b,a
 469+ 91B6 79           	ld a,c
 470+ 91B7 90           	sub b
 471+ 91B8 32 DA 8A     	ld (Columnas),a
 472+ 91BB 18 04        	jr 4F
 473+ 91BD 79           3 ld a,c
 474+ 91BE 32 DA 8A     	ld (Columnas),a
 475+ 91C1 D9           4 exx
 476+ 91C2 4F           	ld c,a
 477+ 91C3 D9           	exx
 478+ 91C4 C9            ret
 479+ 91C5
 480+ 91C5              ; --------------------------------------------------------------------------------------------------------------------
 481+ 91C5              ;
 482+ 91C5              ;   19/7/23
 483+ 91C5              ;
 484+ 91C5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 91C5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 91C5              ;
 487+ 91C5              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 91C5              ;			HL e IY Contienen (Puntero_objeto).
 489+ 91C5              ;
 490+ 91C5              ;	DESTRUYE: HL,B Y A.
 491+ 91C5
 492+ 91C5 3A CB 8A     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 91C8 FE 02        	cp 2
 494+ 91CA 38 18        	jr c,1F
 495+ 91CC 28 16        	jr z,1F
 496+ 91CE E6 01        	and 1
 497+ 91D0 28 0D        	jr z,3F
 498+ 91D2
 499+ 91D2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 91D2
 501+ 91D2 CD 18 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 91D5
 503+ 91D5 7D           9 ld a,l
 504+ 91D6 E6 1F        	and $1f
 505+ 91D8 28 2A        	jr z,7F
 506+ 91DA 2B           	dec hl
 507+ 91DB 10 F8        	djnz 9B
 508+ 91DD 18 25        	jr 7F
 509+ 91DF
 510+ 91DF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 91DF
 512+ 91DF 2A B9 8A     3 ld hl,(Posicion_actual)
 513+ 91E2 18 20        	jr 7F
 514+ 91E4
 515+ 91E4 28 14        1 jr z,2F
 516+ 91E6
 517+ 91E6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 91E6
 519+ 91E6 CD 18 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 91E9
 521+ 91E9 7D           4 ld a,l
 522+ 91EA E6 1F        	and $1f
 523+ 91EC 28 03        	jr z,6F
 524+ 91EE 2B           	dec hl
 525+ 91EF 10 F8        	djnz 4B
 526+ 91F1 06 0F        6 ld b,15
 527+ 91F3 CD 79 92     5 call PreviousScan
 528+ 91F6 10 FB        	djnz 5B
 529+ 91F8 18 0A        	jr 7F
 530+ 91FA
 531+ 91FA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 91FA
 533+ 91FA CD 18 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 91FD 06 0F        	ld b,15
 535+ 91FF CD 79 92     8 call PreviousScan
 536+ 9202 10 FB        	djnz 8B
 537+ 9204
 538+ 9204 E5           7 push hl
 539+ 9205 DD E1        	pop ix
 540+ 9207
 541+ 9207 2A BB 8A     	ld hl,(Puntero_objeto)
 542+ 920A E5           	push hl
 543+ 920B FD E1        	pop iy
 544+ 920D
 545+ 920D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 920D
 547+ 920D 3A D9 8A     	ld a,(Ctrl_0)
 548+ 9210 CB 77        	bit 6,a
 549+ 9212 C8           	ret z
 550+ 9213
 551+ 9213              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9213              ; _ entidad / Amadeus´.
 553+ 9213
 554+ 9213 DD 22 3F 88  	ld (p.imp.amadeus),ix
 555+ 9217
 556+ 9217 C9           	ret
 557+ 9218
 558+ 9218              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9218              ;
 560+ 9218              ;	2/1/23
 561+ 9218              ;
 562+ 9218              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9218              ;
 564+ 9218              ;	Tras esta rutina tenemos:
 565+ 9218              ;
 566+ 9218              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9218              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9218              ;
 569+ 9218              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9218
 571+ 9218 2A B9 8A     Operandos ld hl,(Posicion_actual)
 572+ 921B 3A DA 8A     	ld a,(Columnas)
 573+ 921E 3D           	dec a
 574+ 921F 20 01        	jr nz,1F
 575+ 9221 3C           	inc a
 576+ 9222 47           1 ld b,a
 577+ 9223 C9           	ret
 578+ 9224
 579+ 9224              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9224              ;
 581+ 9224              ;	3/1/23
 582+ 9224              ;
 583+ 9224              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9224              ;
 585+ 9224              ;	Destruye: A,B,HL y DE.
 586+ 9224
 587+ 9224              Define_rutina_de_impresion
 588+ 9224
 589+ 9224 3A B8 8A     	ld a,(Columns)
 590+ 9227 47           	ld b,a
 591+ 9228 3A DA 8A     	ld a,(Columnas)
 592+ 922B B8           	cp b
 593+ 922C 20 0D        	jr nz,2f
 594+ 922E
 595+ 922E              ;	La entidad se imprime entera.
 596+ 922E
 597+ 922E 21 CB 92     	ld hl, Indice_entidades_completas
 598+ 9231 E6 01        	and 1
 599+ 9233 28 02        	jr z,1F
 600+ 9235
 601+ 9235 23           	inc hl
 602+ 9236 23           	inc hl
 603+ 9237
 604+ 9237 CD DC 8C     1 call Extrae_address
 605+ 923A C9           	ret		;	ret
 606+ 923B
 607+ 923B              ;	La entidad no se imprime entera en pantalla.
 608+ 923B
 609+ 923B 3A CB 8A     2 ld a,(Cuad_objeto)
 610+ 923E E6 01        	and 1
 611+ 9240 28 17        	jr z,3F
 612+ 9242
 613+ 9242              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9242
 615+ 9242 21 CF 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9245 3A B8 8A     4 ld a,(Columns)
 617+ 9248 E6 01        	and 1
 618+ 924A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 924C
 620+ 924C 23           	inc hl
 621+ 924D 23           	inc hl
 622+ 924E
 623+ 924E 3A DA 8A     	ld a,(Columnas)
 624+ 9251 E6 01        	and 1
 625+ 9253 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9255
 627+ 9255 23           	inc hl
 628+ 9256 23           	inc hl
 629+ 9257
 630+ 9257 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 9259
 632+ 9259 21 D5 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 925C 18 E7        	jr 4B
 634+ 925E
 635+ 925E              ; --------------------------------------------------------------------------------------------------------------------
 636+ 925E              ;
 637+ 925E              ;	Prepara_draw
 638+ 925E              ;
 639+ 925E              ;	Es una rutina de carga.
 640+ 925E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 925E              ;
 642+ 925E              ;	FUNCIONAMIENTO:
 643+ 925E              ;
 644+ 925E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 925E              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 925E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 925E              ;
 648+ 925E              ;	DESTRUYE:
 649+ 925E              ;
 650+ 925E              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 925E
 652+ 925E 21 B7 8A     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9261 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9262 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9263 4E           	ld c,(hl)
 656+ 9264 2A B9 8A     	ld hl,(Posicion_actual)
 657+ 9267 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9269 C9           	ret
 659+ 926A
 660+ 926A              ;----------------------------------------------------------------------------------------------------------------
 661+ 926A              ;
 662+ 926A              ;	5/08/22
 663+ 926A              ;
 664+ 926A              ;   NextScan.
 665+ 926A              ;
 666+ 926A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 926A              ;
 668+ 926A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 926A              ;
 670+ 926A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 926A              ;
 672+ 926A              ;       DESTRUIDOS: AF y HL !!!
 673+ 926A              ;
 674+ 926A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 926A              ;
 676+ 926A
 677+ 926A 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 926B 7C               ld a,h
 679+ 926C E6 07            and 7
 680+ 926E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 926F
 682+ 926F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9270 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9272 6F               ld l,a
 685+ 9273 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9274
 687+ 9274 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9275 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9277 67               ld h,a
 690+ 9278 C9               ret
 691+ 9279
 692+ 9279              ;----------------------------------------------------------------------------------------------------------------
 693+ 9279              ;
 694+ 9279              ;	5/08/22
 695+ 9279              ;
 696+ 9279              ;   PreviousScan.
 697+ 9279              ;
 698+ 9279              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9279              ;
 700+ 9279              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9279              ;
 702+ 9279              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9279              ;
 704+ 9279              ;       DESTRUIDOS: AF y HL !!!
 705+ 9279              ;
 706+ 9279              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9279              ;
 708+ 9279
 709+ 9279 7C           PreviousScan ld a,h
 710+ 927A 25               dec h               ; Dec H.
 711+ 927B E6 07            and 7
 712+ 927D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 927E
 714+ 927E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 927F D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9281 6F               ld l,a
 717+ 9282 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9283
 719+ 9283 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9284 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9286 67               ld h,a
 722+ 9287 C9               ret
 723+ 9288
 724+ 9288              ; -----------------------------------------------------------------------------------
 725+ 9288              ;
 726+ 9288              ;	31/7/23
 727+ 9288              ;
 728+ 9288              ;	Rutina principal de pintado de entidades.
 729+ 9288              ;	Extrae la foto del frame, (entidades).
 730+ 9288
 731+ 9288              Extrae_Scanlines_album
 732+ 9288
 733+ 9288 21 01 80     	ld hl,Scanlines_album+1
 734+ 928B 7E           	ld a,(hl)
 735+ 928C A7           	and a
 736+ 928D C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 928E
 738+ 928E              ;	No hay datos, (entidades para pintar en este frame).
 739+ 928E
 740+ 928E 3A 04 8B     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9291 A7           	and a
 742+ 9292 C8           	ret z
 743+ 9293
 744+ 9293              ; -----------------------------------
 745+ 9293
 746+ 9293 ED 73 09 8B  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 9297 31 00 80     	ld sp,Scanlines_album
 748+ 929A
 749+ 929A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 929C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 929D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 929E
 753+ 929E ED 73 0B 8B  	ld (Stack_2),sp
 754+ 92A2 ED 7B 09 8B  	ld sp,(Stack)
 755+ 92A6
 756+ 92A6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 92A6
 758+ 92A6 3E CD        	ld a,$cd
 759+ 92A8 32 B0 92     	ld (Imprime),a
 760+ 92AB EB           	ex de,hl
 761+ 92AC 22 B1 92     	ld (Imprime+1),hl
 762+ 92AF EB           	ex de,hl
 763+ 92B0
 764+ 92B0              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 92B0
 766+ 92B0 00 00 00     Imprime db 0,0,0
 767+ 92B3
 768+ 92B3 ED 73 09 8B  	ld (Stack),sp
 769+ 92B7
 770+ 92B7 3A 04 8B     	ld a,(Numero_de_malotes)
 771+ 92BA 3D           	dec a
 772+ 92BB 28 09        	jr z,1F
 773+ 92BD 32 04 8B      	ld (Numero_de_malotes),a
 774+ 92C0
 775+ 92C0 ED 7B 0B 8B  	ld sp,(Stack_2)
 776+ 92C4 18 D4        	jr 2B
 777+ 92C6
 778+ 92C6 AF           1 xor a
 779+ 92C7 32 0B 8B     	ld (Stack_2),a
 780+ 92CA
 781+ 92CA C9           	ret
 782+ 92CB
 783+ 92CB              ; -----------------------------------------------------------------------------------
 784+ 92CB              ;
 785+ 92CB              ;	28/2/23
 786+ 92CB              ;
 787+ 92CB              ;	Pinta los disparos generados.
 788+ 92CB
 789+ 92CB              ;Extrae_foto_disparos
 790+ 92CB
 791+ 92CB              ;	ld hl,Scanlines_album_disparos+1
 792+ 92CB              ;    ld a,(hl)
 793+ 92CB              ;    and a
 794+ 92CB              ;    ret z
 795+ 92CB
 796+ 92CB              ;	ld a,(Numero_de_disparotes)
 797+ 92CB              ;	and a
 798+ 92CB              ;	ret z
 799+ 92CB              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 92CB              ;	ld sp,Scanlines_album_disparos
 801+ 92CB
 802+ 92CB              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 92CB              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 92CB              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 92CB
 806+ 92CB              ;	ld (Stack_2),sp
 807+ 92CB              ;	ld sp,(Stack)
 808+ 92CB
 809+ 92CB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 92CB
 811+ 92CB              ;	ld a,$cd
 812+ 92CB              ;	ld (Imprime2),a
 813+ 92CB              ;	ex de,hl
 814+ 92CB              ;	ld (Imprime2+1),hl
 815+ 92CB              ;	ex de,hl
 816+ 92CB
 817+ 92CB              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 92CB
 819+ 92CB              ;Imprime2 db 0,0,0
 820+ 92CB
 821+ 92CB              ;	ld a,(Numero_de_disparotes)
 822+ 92CB              ;	dec a
 823+ 92CB              ;	jr z,1F
 824+ 92CB              ; 	ld (Numero_de_disparotes),a
 825+ 92CB
 826+ 92CB              ;	ld sp,(Stack_2)
 827+ 92CB              ;	jr 2B
 828+ 92CB
 829+ 92CB              ;1 xor a
 830+ 92CB              ;	ld (Stack_2),a
 831+ 92CB              ;	ret
 832+ 92CB
 833+ 92CB              ; -----------------------------------------------------------------------------------
 834+ 92CB              ;
 835+ 92CB              ;	4/9/23
 836+ 92CB              ;
 837+ 92CB              ;	Rutina principal de pintado de Amadeus.
 838+ 92CB              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 92CB
 840+ 92CB              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 92CB              ;	ld a,(hl)
 842+ 92CB              ;	and a
 843+ 92CB              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92CB
 845+ 92CB              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92CB              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92CB              ;	ret z
 848+ 92CB
 849+ 92CB              ; -----------------------------------
 850+ 92CB
 851+ 92CB              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 92CB              ;	ld sp,Scanlines_album_Amadeus
 853+ 92CB
 854+ 92CB              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92CB              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92CB              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92CB
 858+ 92CB              ;	ld (Stack_2),sp
 859+ 92CB              ;	ld sp,(Stack)
 860+ 92CB
 861+ 92CB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92CB
 863+ 92CB              ;	ld a,$cd
 864+ 92CB              ;	ld (Imprime_Amadeus),a
 865+ 92CB              ;	ex de,hl
 866+ 92CB              ;	ld (Imprime_Amadeus+1),hl
 867+ 92CB              ;	ex de,hl
 868+ 92CB
 869+ 92CB              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92CB
 871+ 92CB              ;Imprime_Amadeus db 0,0,0
 872+ 92CB
 873+ 92CB              ;	ld (Stack),sp
 874+ 92CB
 875+ 92CB              ;	ld a,(Numero_de_malotes)
 876+ 92CB              ;	dec a
 877+ 92CB              ;	jr z,1F
 878+ 92CB              ; 	ld (Numero_de_malotes),a
 879+ 92CB
 880+ 92CB              ;	ld sp,(Stack_2)
 881+ 92CB              ;	jr 2B
 882+ 92CB
 883+ 92CB              ;1 xor a
 884+ 92CB              ;	ld (Stack_2),a
 885+ 92CB
 886+ 92CB              ;	ret
 887+ 92CB
 888+ 92CB
 889+ 92CB
 890+ 92CB
 891+ 92CB
 892+ 92CB
# file closed: Draw_XOR.asm
1832  92CB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92CB              ;   índices de Rutinas de impresión.
   2+ 92CB
   3+ 92CB DB 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92CD 6F 93            defw Pinta_Amadeus_3x2
   5+ 92CF
   6+ 92CF 43 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92D1 E3 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92D3 97 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92D5
  10+ 92D5 6D 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92D7 71 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92D9 25 95            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92DB
  14+ 92DB
  15+ 92DB              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92DB              ;
  17+ 92DB              ;   28/2/24
  18+ 92DB              ;
  19+ 92DB              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 92DB              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92DB              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 92DB              ;
  23+ 92DB              ;   Modifica: AF,HL,BC y DE.
  24+ 92DB
  25+ 92DB              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 92DB
  27+ 92DB D9               exx
  28+ 92DC 36 01            ld (hl),1
  29+ 92DE 2C               inc l
  30+ 92DF D9               exx
  31+ 92E0
  32+ 92E0 FD E5            push iy
  33+ 92E2 D1               pop de
  34+ 92E3
  35+ 92E3 ED 73 09 8B      ld (Stack),sp
  36+ 92E7 F9           	ld sp,hl
  37+ 92E8 06 10            ld b,16
  38+ 92EA
  39+ 92EA E1               pop hl
  40+ 92EB 1A               ld a,(de)
  41+ 92EC 77               ld (hl),a
  42+ 92ED 1C           	inc e
  43+ 92EE 2C               inc l
  44+ 92EF 1A               ld a,(de)
  45+ 92F0 77               ld (hl),a
  46+ 92F1 1C               inc e
  47+ 92F2
  48+ 92F2 E1               pop hl
  49+ 92F3 1A               ld a,(de)
  50+ 92F4 77               ld (hl),a
  51+ 92F5 1C           	inc e
  52+ 92F6 2C               inc l
  53+ 92F7 1A               ld a,(de)
  54+ 92F8 77               ld (hl),a
  55+ 92F9 1C               inc e
  56+ 92FA
  57+ 92FA E1               pop hl
  58+ 92FB 1A               ld a,(de)
  59+ 92FC 77               ld (hl),a
  60+ 92FD 1C           	inc e
  61+ 92FE 2C               inc l
  62+ 92FF 1A               ld a,(de)
  63+ 9300 77               ld (hl),a
  64+ 9301 1C               inc e
  65+ 9302
  66+ 9302 E1               pop hl
  67+ 9303 1A               ld a,(de)
  68+ 9304 77               ld (hl),a
  69+ 9305 1C           	inc e
  70+ 9306 2C               inc l
  71+ 9307 1A               ld a,(de)
  72+ 9308 77               ld (hl),a
  73+ 9309 1C               inc e
  74+ 930A
  75+ 930A E1               pop hl
  76+ 930B 1A               ld a,(de)
  77+ 930C 77               ld (hl),a
  78+ 930D 1C           	inc e
  79+ 930E 2C               inc l
  80+ 930F 1A               ld a,(de)
  81+ 9310 77               ld (hl),a
  82+ 9311 1C               inc e
  83+ 9312
  84+ 9312 E1               pop hl
  85+ 9313 1A               ld a,(de)
  86+ 9314 77               ld (hl),a
  87+ 9315 1C           	inc e
  88+ 9316 2C               inc l
  89+ 9317 1A               ld a,(de)
  90+ 9318 77               ld (hl),a
  91+ 9319 1C               inc e
  92+ 931A
  93+ 931A E1               pop hl
  94+ 931B 1A               ld a,(de)
  95+ 931C 77               ld (hl),a
  96+ 931D 1C           	inc e
  97+ 931E 2C               inc l
  98+ 931F 1A               ld a,(de)
  99+ 9320 77               ld (hl),a
 100+ 9321 1C               inc e
 101+ 9322
 102+ 9322 E1               pop hl
 103+ 9323 1A               ld a,(de)
 104+ 9324 77               ld (hl),a
 105+ 9325 1C           	inc e
 106+ 9326 2C               inc l
 107+ 9327 1A               ld a,(de)
 108+ 9328 77               ld (hl),a
 109+ 9329 1C               inc e
 110+ 932A
 111+ 932A E1               pop hl
 112+ 932B 1A               ld a,(de)
 113+ 932C 77               ld (hl),a
 114+ 932D 1C           	inc e
 115+ 932E 2C               inc l
 116+ 932F 1A               ld a,(de)
 117+ 9330 77               ld (hl),a
 118+ 9331 1C               inc e
 119+ 9332
 120+ 9332 E1               pop hl
 121+ 9333 1A               ld a,(de)
 122+ 9334 77               ld (hl),a
 123+ 9335 1C           	inc e
 124+ 9336 2C               inc l
 125+ 9337 1A               ld a,(de)
 126+ 9338 77               ld (hl),a
 127+ 9339 1C               inc e
 128+ 933A
 129+ 933A E1               pop hl
 130+ 933B 1A               ld a,(de)
 131+ 933C 77               ld (hl),a
 132+ 933D 1C           	inc e
 133+ 933E 2C               inc l
 134+ 933F 1A               ld a,(de)
 135+ 9340 77               ld (hl),a
 136+ 9341 1C               inc e
 137+ 9342
 138+ 9342 E1               pop hl
 139+ 9343 1A               ld a,(de)
 140+ 9344 77               ld (hl),a
 141+ 9345 1C           	inc e
 142+ 9346 2C               inc l
 143+ 9347 1A               ld a,(de)
 144+ 9348 77               ld (hl),a
 145+ 9349 1C               inc e
 146+ 934A
 147+ 934A E1               pop hl
 148+ 934B 1A               ld a,(de)
 149+ 934C 77               ld (hl),a
 150+ 934D 1C           	inc e
 151+ 934E 2C               inc l
 152+ 934F 1A               ld a,(de)
 153+ 9350 77               ld (hl),a
 154+ 9351 1C               inc e
 155+ 9352
 156+ 9352 E1               pop hl
 157+ 9353 1A               ld a,(de)
 158+ 9354 77               ld (hl),a
 159+ 9355 1C           	inc e
 160+ 9356 2C               inc l
 161+ 9357 1A               ld a,(de)
 162+ 9358 77               ld (hl),a
 163+ 9359 1C               inc e
 164+ 935A
 165+ 935A E1               pop hl
 166+ 935B 1A               ld a,(de)
 167+ 935C 77               ld (hl),a
 168+ 935D 1C           	inc e
 169+ 935E 2C               inc l
 170+ 935F 1A               ld a,(de)
 171+ 9360 77               ld (hl),a
 172+ 9361 1C               inc e
 173+ 9362
 174+ 9362 E1               pop hl
 175+ 9363 1A               ld a,(de)
 176+ 9364 77               ld (hl),a
 177+ 9365 1C           	inc e
 178+ 9366 2C               inc l
 179+ 9367 1A               ld a,(de)
 180+ 9368 77               ld (hl),a
 181+ 9369 1C               inc e
 182+ 936A
 183+ 936A ED 7B 09 8B      ld sp,(Stack)
 184+ 936E
 185+ 936E C9           	ret
 186+ 936F
 187+ 936F              Pinta_Amadeus_3x2
 188+ 936F
 189+ 936F D9               exx
 190+ 9370 36 02            ld (hl),2
 191+ 9372 2C               inc l
 192+ 9373 D9               exx
 193+ 9374
 194+ 9374 FD E5            push iy
 195+ 9376 D1               pop de
 196+ 9377
 197+ 9377 ED 73 09 8B      ld (Stack),sp
 198+ 937B F9               ld sp,hl
 199+ 937C 06 10            ld b,16
 200+ 937E
 201+ 937E E1               pop hl
 202+ 937F 1A               ld a,(de)
 203+ 9380 77               ld (hl),a
 204+ 9381 1C               inc e
 205+ 9382 2C               inc l
 206+ 9383 1A               ld a,(de)
 207+ 9384 77               ld (hl),a
 208+ 9385 1C               inc e
 209+ 9386 2C               inc l
 210+ 9387 1A               ld a,(de)
 211+ 9388 77               ld (hl),a
 212+ 9389 1C               inc e
 213+ 938A
 214+ 938A E1               pop hl
 215+ 938B 1A               ld a,(de)
 216+ 938C 77               ld (hl),a
 217+ 938D 1C               inc e
 218+ 938E 2C               inc l
 219+ 938F 1A               ld a,(de)
 220+ 9390 77               ld (hl),a
 221+ 9391 1C               inc e
 222+ 9392 2C               inc l
 223+ 9393 1A               ld a,(de)
 224+ 9394 77               ld (hl),a
 225+ 9395 1C               inc e
 226+ 9396
 227+ 9396 E1               pop hl
 228+ 9397 1A               ld a,(de)
 229+ 9398 77               ld (hl),a
 230+ 9399 1C               inc e
 231+ 939A 2C               inc l
 232+ 939B 1A               ld a,(de)
 233+ 939C 77               ld (hl),a
 234+ 939D 1C               inc e
 235+ 939E 2C               inc l
 236+ 939F 1A               ld a,(de)
 237+ 93A0 77               ld (hl),a
 238+ 93A1 1C               inc e
 239+ 93A2
 240+ 93A2 E1               pop hl
 241+ 93A3 1A               ld a,(de)
 242+ 93A4 77               ld (hl),a
 243+ 93A5 1C               inc e
 244+ 93A6 2C               inc l
 245+ 93A7 1A               ld a,(de)
 246+ 93A8 77               ld (hl),a
 247+ 93A9 1C               inc e
 248+ 93AA 2C               inc l
 249+ 93AB 1A               ld a,(de)
 250+ 93AC 77               ld (hl),a
 251+ 93AD 1C               inc e
 252+ 93AE
 253+ 93AE E1               pop hl
 254+ 93AF 1A               ld a,(de)
 255+ 93B0 77               ld (hl),a
 256+ 93B1 1C               inc e
 257+ 93B2 2C               inc l
 258+ 93B3 1A               ld a,(de)
 259+ 93B4 77               ld (hl),a
 260+ 93B5 1C               inc e
 261+ 93B6 2C               inc l
 262+ 93B7 1A               ld a,(de)
 263+ 93B8 77               ld (hl),a
 264+ 93B9 1C               inc e
 265+ 93BA
 266+ 93BA E1               pop hl
 267+ 93BB 1A               ld a,(de)
 268+ 93BC 77               ld (hl),a
 269+ 93BD 1C               inc e
 270+ 93BE 2C               inc l
 271+ 93BF 1A               ld a,(de)
 272+ 93C0 77               ld (hl),a
 273+ 93C1 1C               inc e
 274+ 93C2 2C               inc l
 275+ 93C3 1A               ld a,(de)
 276+ 93C4 77               ld (hl),a
 277+ 93C5 1C               inc e
 278+ 93C6
 279+ 93C6 E1               pop hl
 280+ 93C7 1A               ld a,(de)
 281+ 93C8 77               ld (hl),a
 282+ 93C9 1C               inc e
 283+ 93CA 2C               inc l
 284+ 93CB 1A               ld a,(de)
 285+ 93CC 77               ld (hl),a
 286+ 93CD 1C               inc e
 287+ 93CE 2C               inc l
 288+ 93CF 1A               ld a,(de)
 289+ 93D0 77               ld (hl),a
 290+ 93D1 1C               inc e
 291+ 93D2
 292+ 93D2 E1               pop hl
 293+ 93D3 1A               ld a,(de)
 294+ 93D4 77               ld (hl),a
 295+ 93D5 1C               inc e
 296+ 93D6 2C               inc l
 297+ 93D7 1A               ld a,(de)
 298+ 93D8 77               ld (hl),a
 299+ 93D9 1C               inc e
 300+ 93DA 2C               inc l
 301+ 93DB 1A               ld a,(de)
 302+ 93DC 77               ld (hl),a
 303+ 93DD 1C               inc e
 304+ 93DE
 305+ 93DE E1               pop hl
 306+ 93DF 1A               ld a,(de)
 307+ 93E0 77               ld (hl),a
 308+ 93E1 1C               inc e
 309+ 93E2 2C               inc l
 310+ 93E3 1A               ld a,(de)
 311+ 93E4 77               ld (hl),a
 312+ 93E5 1C               inc e
 313+ 93E6 2C               inc l
 314+ 93E7 1A               ld a,(de)
 315+ 93E8 77               ld (hl),a
 316+ 93E9 1C               inc e
 317+ 93EA
 318+ 93EA E1               pop hl
 319+ 93EB 1A               ld a,(de)
 320+ 93EC 77               ld (hl),a
 321+ 93ED 1C               inc e
 322+ 93EE 2C               inc l
 323+ 93EF 1A               ld a,(de)
 324+ 93F0 77               ld (hl),a
 325+ 93F1 1C               inc e
 326+ 93F2 2C               inc l
 327+ 93F3 1A               ld a,(de)
 328+ 93F4 77               ld (hl),a
 329+ 93F5 1C               inc e
 330+ 93F6
 331+ 93F6 E1               pop hl
 332+ 93F7 1A               ld a,(de)
 333+ 93F8 77               ld (hl),a
 334+ 93F9 1C               inc e
 335+ 93FA 2C               inc l
 336+ 93FB 1A               ld a,(de)
 337+ 93FC 77               ld (hl),a
 338+ 93FD 1C               inc e
 339+ 93FE 2C               inc l
 340+ 93FF 1A               ld a,(de)
 341+ 9400 77               ld (hl),a
 342+ 9401 1C               inc e
 343+ 9402
 344+ 9402 E1               pop hl
 345+ 9403 1A               ld a,(de)
 346+ 9404 77               ld (hl),a
 347+ 9405 1C               inc e
 348+ 9406 2C               inc l
 349+ 9407 1A               ld a,(de)
 350+ 9408 77               ld (hl),a
 351+ 9409 1C               inc e
 352+ 940A 2C               inc l
 353+ 940B 1A               ld a,(de)
 354+ 940C 77               ld (hl),a
 355+ 940D 1C               inc e
 356+ 940E
 357+ 940E E1               pop hl
 358+ 940F 1A               ld a,(de)
 359+ 9410 77               ld (hl),a
 360+ 9411 1C               inc e
 361+ 9412 2C               inc l
 362+ 9413 1A               ld a,(de)
 363+ 9414 77               ld (hl),a
 364+ 9415 1C               inc e
 365+ 9416 2C               inc l
 366+ 9417 1A               ld a,(de)
 367+ 9418 77               ld (hl),a
 368+ 9419 1C               inc e
 369+ 941A
 370+ 941A E1               pop hl
 371+ 941B 1A               ld a,(de)
 372+ 941C 77               ld (hl),a
 373+ 941D 1C               inc e
 374+ 941E 2C               inc l
 375+ 941F 1A               ld a,(de)
 376+ 9420 77               ld (hl),a
 377+ 9421 1C               inc e
 378+ 9422 2C               inc l
 379+ 9423 1A               ld a,(de)
 380+ 9424 77               ld (hl),a
 381+ 9425 1C               inc e
 382+ 9426
 383+ 9426 E1               pop hl
 384+ 9427 1A               ld a,(de)
 385+ 9428 77               ld (hl),a
 386+ 9429 1C               inc e
 387+ 942A 2C               inc l
 388+ 942B 1A               ld a,(de)
 389+ 942C 77               ld (hl),a
 390+ 942D 1C               inc e
 391+ 942E 2C               inc l
 392+ 942F 1A               ld a,(de)
 393+ 9430 77               ld (hl),a
 394+ 9431 1C               inc e
 395+ 9432
 396+ 9432 E1               pop hl
 397+ 9433 1A               ld a,(de)
 398+ 9434 77               ld (hl),a
 399+ 9435 1C               inc e
 400+ 9436 2C               inc l
 401+ 9437 1A               ld a,(de)
 402+ 9438 77               ld (hl),a
 403+ 9439 1C               inc e
 404+ 943A 2C               inc l
 405+ 943B 1A               ld a,(de)
 406+ 943C 77               ld (hl),a
 407+ 943D 1C               inc e
 408+ 943E
 409+ 943E ED 7B 09 8B      ld sp,(Stack)
 410+ 9442
 411+ 9442 C9               ret
 412+ 9443
 413+ 9443              ; ---------------------------------------------------
 414+ 9443
 415+ 9443 ED 73 09 8B  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 9447 FD F9        	ld sp,iy
 417+ 9449
 418+ 9449              ; >>>
 419+ 9449
 420+ 9449 06 10            ld b,16
 421+ 944B D1           1 pop de
 422+ 944C 7A           	ld a,d
 423+ 944D AE           	xor (hl)
 424+ 944E 77           	ld (hl),a
 425+ 944F 24           	inc h
 426+ 9450 7C               ld a,h
 427+ 9451 E6 07            and 7
 428+ 9453 20 0C            jr nz,2F
 429+ 9455 7D               ld a,l
 430+ 9456 C6 20            add a,$20
 431+ 9458 6F               ld l,a
 432+ 9459 38 06            jr c,2F
 433+ 945B 7C               ld a,h
 434+ 945C D6 08            sub 8
 435+ 945E 67               ld h,a
 436+ 945F 18 00            jr 2F
 437+ 9461 7C           2 ld a,h
 438+ 9462 FE 58            cp $58
 439+ 9464 28 02            jr z,3F
 440+ 9466 10 E3            djnz 1B
 441+ 9468 ED 7B 09 8B  3 ld sp,(Stack)
 442+ 946C C9           	ret
 443+ 946D
 444+ 946D ED 73 09 8B  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9471 FD F9        	ld sp,iy
 446+ 9473
 447+ 9473              ; >>>
 448+ 9473
 449+ 9473 06 10            ld b,16
 450+ 9475 D1           1 pop de
 451+ 9476 7B           	ld a,e
 452+ 9477 AE           	xor (hl)
 453+ 9478 77           	ld (hl),a
 454+ 9479 24           	inc h
 455+ 947A 7C               ld a,h
 456+ 947B E6 07            and 7
 457+ 947D 20 0C            jr nz,2F
 458+ 947F 7D               ld a,l
 459+ 9480 C6 20            add a,$20
 460+ 9482 6F               ld l,a
 461+ 9483 38 06            jr c,2F
 462+ 9485 7C               ld a,h
 463+ 9486 D6 08            sub 8
 464+ 9488 67               ld h,a
 465+ 9489 18 00            jr 2F
 466+ 948B 7C           2 ld a,h
 467+ 948C FE 58            cp $58
 468+ 948E 28 02            jr z,3F
 469+ 9490 10 E3            djnz 1B
 470+ 9492 ED 7B 09 8B  3 ld sp,(Stack)
 471+ 9496 C9           	ret
 472+ 9497
 473+ 9497              ; ---------------------------------------------------
 474+ 9497
 475+ 9497 ED 73 09 8B  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 949B FD F9        	ld sp,iy
 477+ 949D 06 08            ld b,8
 478+ 949F D1           1 pop de
 479+ 94A0 7A           	ld a,d
 480+ 94A1 AE           	xor (hl)
 481+ 94A2 77           	ld (hl),a
 482+ 94A3 23           	inc hl
 483+ 94A4 D1           	pop de
 484+ 94A5 7B           	ld a,e
 485+ 94A6 AE           	xor (hl)
 486+ 94A7 77           	ld (hl),a
 487+ 94A8 2B           	dec hl
 488+ 94A9 24            	inc h
 489+ 94AA 7C               ld a,h
 490+ 94AB E6 07            and 7
 491+ 94AD 20 0A            jr nz,2F
 492+ 94AF 7D               ld a,l
 493+ 94B0 C6 20            add a,$20
 494+ 94B2 6F               ld l,a
 495+ 94B3 38 04            jr c,2F
 496+ 94B5 7C               ld a,h
 497+ 94B6 D6 08            sub 8
 498+ 94B8 67               ld h,a
 499+ 94B9 7C           2 ld a,h
 500+ 94BA FE 58            cp $58
 501+ 94BC 28 20            jr z,4F
 502+ 94BE D1               pop de
 503+ 94BF 7B           	ld a,e
 504+ 94C0 AE           	xor (hl)
 505+ 94C1 77           	ld (hl),a
 506+ 94C2 23           	inc hl
 507+ 94C3 7A           	ld a,d
 508+ 94C4 AE           	xor (hl)
 509+ 94C5 77           	ld (hl),a
 510+ 94C6 2B           	dec hl
 511+ 94C7 24           	inc h
 512+ 94C8 7C               ld a,h
 513+ 94C9 E6 07            and 7
 514+ 94CB 20 0A            jr nz,3F
 515+ 94CD 7D               ld a,l
 516+ 94CE C6 20            add a,$20
 517+ 94D0 6F               ld l,a
 518+ 94D1 38 04            jr c,3F
 519+ 94D3 7C               ld a,h
 520+ 94D4 D6 08            sub 8
 521+ 94D6 67               ld h,a
 522+ 94D7 7C           3 ld a,h
 523+ 94D8 FE 58            cp $58
 524+ 94DA 28 02            jr z,4F
 525+ 94DC 10 C1            djnz 1B
 526+ 94DE ED 7B 09 8B  4 ld sp,(Stack)
 527+ 94E2 C9           	ret
 528+ 94E3
 529+ 94E3 ED 73 09 8B  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 94E7 FD F9        	ld sp,iy
 531+ 94E9 06 08            ld b,8
 532+ 94EB D1           1 pop de
 533+ 94EC D1           	pop de
 534+ 94ED 7B           	ld a,e
 535+ 94EE AE           	xor (hl)
 536+ 94EF 77           	ld (hl),a
 537+ 94F0 24            	inc h
 538+ 94F1 7C               ld a,h
 539+ 94F2 E6 07            and 7
 540+ 94F4 20 0A            jr nz,2F
 541+ 94F6 7D               ld a,l
 542+ 94F7 C6 20            add a,$20
 543+ 94F9 6F               ld l,a
 544+ 94FA 38 04            jr c,2F
 545+ 94FC 7C               ld a,h
 546+ 94FD D6 08            sub 8
 547+ 94FF 67               ld h,a
 548+ 9500 7C           2 ld a,h
 549+ 9501 FE 58            cp $58
 550+ 9503 28 1B            jr z,4F
 551+ 9505 D1               pop de
 552+ 9506 7A           	ld a,d
 553+ 9507 AE           	xor (hl)
 554+ 9508 77           	ld (hl),a
 555+ 9509 24           	inc h
 556+ 950A 7C               ld a,h
 557+ 950B E6 07            and 7
 558+ 950D 20 0A            jr nz,3F
 559+ 950F 7D               ld a,l
 560+ 9510 C6 20            add a,$20
 561+ 9512 6F               ld l,a
 562+ 9513 38 04            jr c,3F
 563+ 9515 7C               ld a,h
 564+ 9516 D6 08            sub 8
 565+ 9518 67               ld h,a
 566+ 9519 7C           3 ld a,h
 567+ 951A FE 58            cp $58
 568+ 951C 28 02            jr z,4F
 569+ 951E 10 CB            djnz 1B
 570+ 9520 ED 7B 09 8B  4 ld sp,(Stack)
 571+ 9524 C9           	ret
 572+ 9525
 573+ 9525 ED 73 09 8B  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 9529 FD F9        	ld sp,iy
 575+ 952B 06 08            ld b,8
 576+ 952D D1           1 pop de
 577+ 952E 7B           	ld a,e
 578+ 952F AE           	xor (hl)
 579+ 9530 77           	ld (hl),a
 580+ 9531 23           	inc hl
 581+ 9532 7A           	ld a,d
 582+ 9533 AE           	xor (hl)
 583+ 9534 77           	ld (hl),a
 584+ 9535 2B           	dec hl
 585+ 9536 24             	inc h
 586+ 9537 7C               ld a,h
 587+ 9538 E6 07            and 7
 588+ 953A 20 0A            jr nz,2F
 589+ 953C 7D               ld a,l
 590+ 953D C6 20            add a,$20
 591+ 953F 6F               ld l,a
 592+ 9540 38 04            jr c,2F
 593+ 9542 7C               ld a,h
 594+ 9543 D6 08            sub 8
 595+ 9545 67               ld h,a
 596+ 9546 7C           2 ld a,h
 597+ 9547 FE 58            cp $58
 598+ 9549 28 21            jr z,4F
 599+ 954B D1               pop de
 600+ 954C 7A           	ld a,d
 601+ 954D AE           	xor (hl)
 602+ 954E 77           	ld (hl),a
 603+ 954F 23           	inc hl
 604+ 9550 D1               pop de
 605+ 9551 7B           	ld a,e
 606+ 9552 AE           	xor (hl)
 607+ 9553 77           	ld (hl),a
 608+ 9554 2B           	dec hl
 609+ 9555 24           	inc h
 610+ 9556 7C               ld a,h
 611+ 9557 E6 07            and 7
 612+ 9559 20 0A            jr nz,3F
 613+ 955B 7D               ld a,l
 614+ 955C C6 20            add a,$20
 615+ 955E 6F               ld l,a
 616+ 955F 38 04            jr c,3F
 617+ 9561 7C               ld a,h
 618+ 9562 D6 08            sub 8
 619+ 9564 67               ld h,a
 620+ 9565 7C           3 ld a,h
 621+ 9566 FE 58            cp $58
 622+ 9568 28 02            jr z,4F
 623+ 956A 10 C1            djnz 1B
 624+ 956C ED 7B 09 8B  4 ld sp,(Stack)
 625+ 9570 C9           	ret
 626+ 9571
 627+ 9571 ED 73 09 8B  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9575 FD F9        	ld sp,iy
 629+ 9577 06 08            ld b,8
 630+ 9579 D1           1 pop de
 631+ 957A 7B           	ld a,e
 632+ 957B AE           	xor (hl)
 633+ 957C 77           	ld (hl),a
 634+ 957D 24            	inc h
 635+ 957E 7C               ld a,h
 636+ 957F E6 07            and 7
 637+ 9581 20 0A            jr nz,2F
 638+ 9583 7D               ld a,l
 639+ 9584 C6 20            add a,$20
 640+ 9586 6F               ld l,a
 641+ 9587 38 04            jr c,2F
 642+ 9589 7C               ld a,h
 643+ 958A D6 08            sub 8
 644+ 958C 67               ld h,a
 645+ 958D 7C           2 ld a,h
 646+ 958E FE 58            cp $58
 647+ 9590 28 1C            jr z,4F
 648+ 9592 D1               pop de
 649+ 9593 7A           	ld a,d
 650+ 9594 AE           	xor (hl)
 651+ 9595 77           	ld (hl),a
 652+ 9596 24           	inc h
 653+ 9597 7C               ld a,h
 654+ 9598 E6 07            and 7
 655+ 959A 20 0A            jr nz,3F
 656+ 959C 7D               ld a,l
 657+ 959D C6 20            add a,$20
 658+ 959F 6F               ld l,a
 659+ 95A0 38 04            jr c,3F
 660+ 95A2 7C               ld a,h
 661+ 95A3 D6 08            sub 8
 662+ 95A5 67               ld h,a
 663+ 95A6 7C           3 ld a,h
 664+ 95A7 FE 58            cp $58
 665+ 95A9 28 03            jr z,4F
 666+ 95AB D1               pop de
 667+ 95AC 10 CB            djnz 1B
 668+ 95AE ED 7B 09 8B  4 ld sp,(Stack)
 669+ 95B2 C9           	ret
 670+ 95B3
 671+ 95B3              ; ---------------------------------------------------
 672+ 95B3              ;
 673+ 95B3              ;   27/02/23
 674+ 95B3              ;
 675+ 95B3              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 95B3              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 95B3              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 95B3
 679+ 95B3 ED 73 09 8B  Pinta_Disparo ld (Stack),sp
 680+ 95B7 FD F9            ld sp,iy
 681+ 95B9 06 03            ld b,3
 682+ 95BB D1           1 pop de
 683+ 95BC 7B               ld a,e
 684+ 95BD AE               xor (hl)
 685+ 95BE 77               ld (hl),a
 686+ 95BF 23               inc hl
 687+ 95C0 7A               ld a,d
 688+ 95C1 AE               xor (hl)
 689+ 95C2 77               ld (hl),a
 690+ 95C3 2B               dec hl
 691+ 95C4
 692+ 95C4 24               inc h
 693+ 95C5 7C               ld a,h
 694+ 95C6 E6 07            and 7
 695+ 95C8 20 0A            jr nz,2F
 696+ 95CA 7D               ld a,l
 697+ 95CB C6 20            add a,$20
 698+ 95CD 6F               ld l,a
 699+ 95CE 38 04            jr c,2F
 700+ 95D0 7C               ld a,h
 701+ 95D1 D6 08            sub 8
 702+ 95D3 67               ld h,a
 703+ 95D4 7C           2 ld a,h
 704+ 95D5 FE 58            cp $58
 705+ 95D7 28 02            jr z,3F
 706+ 95D9
 707+ 95D9 10 E0            djnz 1B
 708+ 95DB ED 7B 09 8B  3 ld sp,(Stack)
 709+ 95DF C9               ret
 710+ 95E0
# file closed: Rutinas_de_impresion_sprites.asm
1833  95E0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 95E0
   2+ 95E0              ; ******************************************************************************************************************************************************************************************
   3+ 95E0              ;
   4+ 95E0              ;   20/05/23
   5+ 95E0              ;
   6+ 95E0              ;	Recompone_posicion_inicio
   7+ 95E0              ;
   8+ 95E0              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 95E0              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 95E0              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 95E0              ;	_ a una u otra rutina.
  12+ 95E0
  13+ 95E0              Recompone_posicion_inicio
  14+ 95E0
  15+ 95E0 2A C9 8A     	ld hl,(Posicion_inicio)
  16+ 95E3 7D           	ld a,l
  17+ 95E4 E6 1F        	and $1f
  18+ 95E6 28 16        	jr z,1F
  19+ 95E8
  20+ 95E8 FE 1F        	cp $1f
  21+ 95EA 28 0D        	jr z,3F
  22+ 95EC
  23+ 95EC 21 DE 8A     	ld hl,Ctrl_2
  24+ 95EF CB C6        	set 0,(hl)
  25+ 95F1 2A BB 8A     	ld hl,(Puntero_objeto)
  26+ 95F4 22 F9 8A     	ld (Repone_puntero_objeto),hl
  27+ 95F7 18 08        	jr 2F
  28+ 95F9
  29+ 95F9 CD A7 97     3 call Mov_left
  30+ 95FC 18 03        	jr 2F
  31+ 95FE
  32+ 95FE CD 84 96     1 call Mov_right
  33+ 9601 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9604 22 BB 8A     	ld (Puntero_objeto),hl
  35+ 9607 C9           	ret
  36+ 9608
  37+ 9608              ; ******************************************************************************************************************************************************************************************
  38+ 9608              ;
  39+ 9608              ;   27/05/23
  40+ 9608              ;
  41+ 9608              ;	Mov_down
  42+ 9608              ;
  43+ 9608              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9608              ;
  45+ 9608              ;
  46+ 9608              Mov_down
  47+ 9608
  48+ 9608 CD 72 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 960B              ;																	; _ repone (Puntero_objeto).
  50+ 960B 21 D9 8A     	ld hl,Ctrl_0
  51+ 960E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9610              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9610              ; 																	; _ en el caso de que no lo haya.
  54+ 9610 3A E3 8A     	ld a,(Vel_down)
  55+ 9613 47           	ld b,a
  56+ 9614 2A B9 8A         ld hl,(Posicion_actual)
  57+ 9617 CD E3 9A     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 961A E6 02        	and 2
  59+ 961C 28 17        	jr z,1F
  60+ 961E
  61+ 961E              ; Nos encontramos en el último tercio de pantalla.
  62+ 961E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 961E
  64+ 961E 7C           	ld a,h
  65+ 961F FE 57        	cp $57
  66+ 9621 20 12        	jr nz,1F
  67+ 9623
  68+ 9623 7D           	ld a,l
  69+ 9624 C6 20        	add $20
  70+ 9626 30 0D        	jr nc,1F
  71+ 9628
  72+ 9628              ; ------------------------------
  73+ 9628              ;
  74+ 9628              ;	12/01/24
  75+ 9628
  76+ 9628              ;	call Reaparece_arriba
  77+ 9628 CD 34 99     	call Reinicio
  78+ 962B
  79+ 962B              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 962B
  81+ 962B 3A 17 8B     	ld a,(Ctrl_3)
  82+ 962E CB CF        	set 1,a
  83+ 9630 32 17 8B     	ld (Ctrl_3),a
  84+ 9633
  85+ 9633 18 08        	jr 3F
  86+ 9635              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9635              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9635              ; ------------------------------
  89+ 9635
  90+ 9635 CD 6A 92     1 call NextScan
  91+ 9638 22 B9 8A     	ld (Posicion_actual),hl
  92+ 963B 10 DA            djnz 2B
  93+ 963D CD 01 9B     3 call Genera_coordenadas
  94+ 9640 C9           	ret
  95+ 9641
  96+ 9641              ; ******************************************************************************************************************************************************************************************
  97+ 9641              ;
  98+ 9641              ;   27/05/23
  99+ 9641              ;
 100+ 9641              ;	Mov_up
 101+ 9641              ;
 102+ 9641              ; 	Mueve el Sprite hacia arriba.
 103+ 9641              ;
 104+ 9641              ;
 105+ 9641              Mov_up
 106+ 9641
 107+ 9641 CD 72 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9644              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9644 21 D9 8A     	ld hl,Ctrl_0
 110+ 9647 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9649              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9649              ; 																		; _ en el caso de que no lo haya.
 113+ 9649 3A E2 8A     	ld a,(Vel_up)
 114+ 964C 47           	ld b,a
 115+ 964D 2A B9 8A     	ld hl,(Posicion_actual)
 116+ 9650 CD E3 9A     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9653 A7           	and a
 118+ 9654 20 10        	jr nz,1F
 119+ 9656
 120+ 9656              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9656              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9656
 123+ 9656 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9657 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9659 20 0B            jr nz,1F
 126+ 965B 7D               ld a,l
 127+ 965C D6 20            sub $20
 128+ 965E 30 06            jr nc,1F
 129+ 9660 25               dec h
 130+ 9661
 131+ 9661              ; -----------------------------
 132+ 9661 CD 15 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9664              ;	call Reinicio
 134+ 9664              ; -----------------------------
 135+ 9664
 136+ 9664 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9666 CD 79 92     1 call PreviousScan
 138+ 9669 22 B9 8A     	ld (Posicion_actual),hl
 139+ 966C 10 E2            djnz 3B
 140+ 966E CD 01 9B     2 call Genera_coordenadas
 141+ 9671 C9           	ret
 142+ 9672
 143+ 9672              ; -----------------------------
 144+ 9672              ;
 145+ 9672              ;	27/5/23
 146+ 9672              ;
 147+ 9672              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9672              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9672              ;
 150+ 9672              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9672              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9672              ;
 153+ 9672              ;	Modifica: A y (Puntero_objeto).
 154+ 9672
 155+ 9672 3A DE 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9675 CB 47        	bit 0,a
 157+ 9677 C8           	ret z
 158+ 9678 CB 87        	res 0,a
 159+ 967A 32 DE 8A     	ld (Ctrl_2),a
 160+ 967D 2A F9 8A     	ld hl,(Repone_puntero_objeto)
 161+ 9680 22 BB 8A     	ld (Puntero_objeto),hl
 162+ 9683 C9           	ret
 163+ 9684
 164+ 9684              ; ******************************************************************************************************************************************************************************************
 165+ 9684              ;
 166+ 9684              ;	19/10/22
 167+ 9684              ;
 168+ 9684              ;	Mov_right.
 169+ 9684              ;
 170+ 9684              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9684              ;
 172+ 9684
 173+ 9684 3A D9 8A     Mov_right ld a,(Ctrl_0)
 174+ 9687 CB 77        	bit 6,a
 175+ 9689 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 968B
 177+ 968B CD C3 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 968E C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 968F
 180+ 968F 21 D9 8A     	ld hl,Ctrl_0
 181+ 9692 CB E6        	set 4,(hl)
 182+ 9694 18 52        	jr 8F
 183+ 9696
 184+ 9696 21 D9 8A     10 ld hl,Ctrl_0
 185+ 9699 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 969B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 969B              ; 																	; _ en el caso de que no lo haya.
 188+ 969B 3A BD 8A     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 969E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 96A0 20 46        	jr nz,8F
 191+ 96A2
 192+ 96A2 3A BF 8A     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 96A5 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 96A6 28 40        	jr z,8F
 195+ 96A8
 196+ 96A8              ; ---------- ---------- ----------
 197+ 96A8              ;
 198+ 96A8              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 96A8
 200+ 96A8 3A E1 8A     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 96AB FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 96AD 28 11        	jr z,1F
 203+ 96AF 38 06        	jr c,6F
 204+ 96B1 FE 04        	cp 4
 205+ 96B3 28 14        	jr z,7F
 206+ 96B5 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 96B7
 208+ 96B7              ; ---------- ---------- ----------
 209+ 96B7              ;
 210+ 96B7              ; Perfiles de velocidad
 211+ 96B7              ;
 212+ 96B7
 213+ 96B7 3A BF 8A     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 96BA FE FE        	cp $fe
 215+ 96BC 20 2A        	jr nz,8F
 216+ 96BE 18 10        	jr 3F
 217+ 96C0 3A BF 8A     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 96C3 FE FD        	cp $fd
 219+ 96C5 20 21        	jr nz,8F
 220+ 96C7 18 07        	jr 3F
 221+ 96C9 3A BF 8A     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 96CC FE FB        	cp $fb
 223+ 96CE 20 18        	jr nz,8F
 224+ 96D0
 225+ 96D0              ; ---------- ---------- ----------
 226+ 96D0
 227+ 96D0              3
 228+ 96D0 CD 03 99     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 96D3              ;	call Reinicio
 230+ 96D3
 231+ 96D3              ; ---------- ---------- ----------
 232+ 96D3              ;
 233+ 96D3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 96D3
 235+ 96D3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 96D5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 96D6 CD EF 96     	call DESPLZ_DER
 238+ 96D9 C1           	pop bc
 239+ 96DA 10 F9        	djnz 5B
 240+ 96DC 2A B9 8A     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 96DF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 96E0 22 B9 8A     	ld (Posicion_actual),hl
 243+ 96E3 CD 01 9B     	call Genera_coordenadas
 244+ 96E6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96E8
 246+ 96E8              ; ---------- ---------- ----------
 247+ 96E8
 248+ 96E8 2A B9 8A     8 ld hl,(Posicion_actual)
 249+ 96EB CD EF 96     	call DESPLZ_DER
 250+ 96EE C9           2 ret
 251+ 96EF
 252+ 96EF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 96EF              ;
 254+ 96EF              ;	22/9/22
 255+ 96EF              ;
 256+ 96EF
 257+ 96EF CD FE 96     DESPLZ_DER call Desplaza_derecha
 258+ 96F2 CD 4A 97         call modifica_parametros_1er_DESPLZ_2
 259+ 96F5 CD 73 97         call Ciclo_completo
 260+ 96F8 21 D9 8A     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 96FB CB FE        	set 7,(hl)
 262+ 96FD C9           	ret
 263+ 96FE
 264+ 96FE              ; ******************************************************************************************************************************************************************************************
 265+ 96FE              ;	15/02/23
 266+ 96FE              ;
 267+ 96FE
 268+ 96FE 3A E1 8A     Desplaza_derecha ld a,(Vel_right)
 269+ 9701 47           	ld b,a
 270+ 9702 2A C5 8A     	ld hl,(Puntero_DESPLZ_der)
 271+ 9705 23           1 inc hl
 272+ 9706 23           	inc hl
 273+ 9707 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9709 22 C5 8A     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 970C CD DC 8C     	call Extrae_address
 276+ 970F 22 BB 8A     	ld (Puntero_objeto),hl
 277+ 9712
 278+ 9712              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9712
 280+ 9712              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9712              ; Cuántos movimientos hemos hecho ??
 282+ 9712              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9712
 284+ 9712 2A C1 8A     7 ld hl,(Indice_Sprite_der)
 285+ 9715 EB           	ex de,hl
 286+ 9716 A7           	and a
 287+ 9717 ED 52        	sbc hl,de
 288+ 9719 CB 3D        	srl l
 289+ 971B 3E 08        6 ld a,8
 290+ 971D 95           	sub l
 291+ 971E 30 1E        	jr nc,3F
 292+ 9720
 293+ 9720              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9720              ; B="0".
 295+ 9720
 296+ 9720 04           4 inc b
 297+ 9721 3C           	inc a
 298+ 9722 20 FC        	jr nz,4B
 299+ 9724 78           	ld a,b
 300+ 9725 08           	ex af,af
 301+ 9726 2A C1 8A     	ld hl,(Indice_Sprite_der)
 302+ 9729 23           5 inc hl
 303+ 972A 23           	inc hl
 304+ 972B 10 FC        	djnz 5B
 305+ 972D 22 C5 8A     	ld (Puntero_DESPLZ_der),hl
 306+ 9730 CD DC 8C     	call Extrae_address
 307+ 9733 22 BB 8A     	ld (Puntero_objeto),hl
 308+ 9736
 309+ 9736              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9736              ; _(Posicion_actual).
 311+ 9736
 312+ 9736 21 B9 8A     	ld hl,Posicion_actual
 313+ 9739 34           	inc (hl)
 314+ 973A 08               ex af,af
 315+ 973B 6F           	ld l,a
 316+ 973C 18 DD        	jr 6B
 317+ 973E
 318+ 973E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 973E
 320+ 973E 47           3 ld b,a
 321+ 973F 2A C3 8A     	ld hl,(Indice_Sprite_izq)
 322+ 9742 23           2 inc hl
 323+ 9743 23           	inc hl
 324+ 9744 10 FC        	djnz 2B
 325+ 9746 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
 326+ 9749 C9           8 ret
 327+ 974A
 328+ 974A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 974A              ;
 330+ 974A              ;	24/7/22
 331+ 974A              ;
 332+ 974A              ;	modifica_parametros_1er_DESPLZ_2
 333+ 974A              ;
 334+ 974A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 974A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 974A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 974A
 338+ 974A 3A BF 8A     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 974D A7           	and a
 340+ 974E 20 1F        	jr nz,1F
 341+ 9750 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9752 32 BF 8A         ld (CTRL_DESPLZ),a
 343+ 9755
 344+ 9755 21 B8 8A     	ld hl,Columns
 345+ 9758 34           	inc (hl)
 346+ 9759 3A CB 8A     	ld a,(Cuad_objeto)
 347+ 975C E6 01        	and 1
 348+ 975E 28 0F        	jr z,1F
 349+ 9760 2A B9 8A     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9763 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9764 22 B9 8A     	ld (Posicion_actual),hl
 352+ 9767 CD 01 9B     	call Genera_coordenadas
 353+ 976A CD CF 98     	call Inc_CTRL_DESPLZ
 354+ 976D 18 03        	jr 2F
 355+ 976F CD CF 98     1 call Inc_CTRL_DESPLZ
 356+ 9772 C9           2 ret
 357+ 9773
 358+ 9773              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9773              ;
 360+ 9773              ;	24/7/22
 361+ 9773              ;
 362+ 9773              ;	Ciclo_completo.
 363+ 9773              ;
 364+ 9773              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9773              ;
 366+ 9773              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9773              ; 	Decrementamos (Columns).
 368+ 9773              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9773              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9773
 371+ 9773
 372+ 9773 3A BF 8A     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9776 FE FF        	cp $ff
 374+ 9778 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 977A E6 F0        	and $f0
 376+ 977C 20 28        	jr nz,3F
 377+ 977E
 378+ 977E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 977E
 380+ 977E 3A BF 8A     	ld a,(CTRL_DESPLZ)
 381+ 9781 47           	ld b,a
 382+ 9782 3E F8        	ld a,$f8
 383+ 9784 80           	add b
 384+ 9785 32 BF 8A     	ld (CTRL_DESPLZ),a
 385+ 9788 18 1C        	jr 3F
 386+ 978A 21 B8 8A     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 978D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 978E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 978F 32 BF 8A     	ld (CTRL_DESPLZ),a
 390+ 9792 3A CB 8A     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9795 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9797 20 0A        	jr nz,2F
 393+ 9799 2A B9 8A     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 979C 23           	inc hl
 395+ 979D 22 B9 8A     	ld (Posicion_actual),hl
 396+ 97A0 CD 01 9B     	call Genera_coordenadas
 397+ 97A3
 398+ 97A3              ; Inicia el puntero de Sprite.
 399+ 97A3
 400+ 97A3 CD F1 8C     2 call Inicia_puntero_objeto_der
 401+ 97A6 C9           3 ret
 402+ 97A7
 403+ 97A7              ; ******************************************************************************************************************************************************************************************
 404+ 97A7              ;
 405+ 97A7              ;	15/02/23
 406+ 97A7              ;
 407+ 97A7              ;	Mov_left.
 408+ 97A7              ;
 409+ 97A7              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 97A7              ;
 411+ 97A7              Mov_left
 412+ 97A7
 413+ 97A7 21 D9 8A     	ld hl,Ctrl_0
 414+ 97AA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 97AC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 97AC              ; 																	; _ en el caso de que no lo haya.
 417+ 97AC 3A D9 8A     	ld a,(Ctrl_0)
 418+ 97AF CB 77        	bit 6,a
 419+ 97B1 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 97B3
 421+ 97B3 CD C9 98     	call Stop_Amadeus_left
 422+ 97B6 C8           	ret z
 423+ 97B7 20 4A        	jr nz,8F
 424+ 97B9
 425+ 97B9 3A BD 8A     11 ld a,(Coordenada_X)
 426+ 97BC A7           	and a
 427+ 97BD 20 44        	jr nz,8F
 428+ 97BF
 429+ 97BF 3A BF 8A     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 97C2 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 97C3 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 97C5
 433+ 97C5              ; ---------- ---------- ----------
 434+ 97C5
 435+ 97C5 3A E0 8A     	ld a,(Vel_left)
 436+ 97C8 FE 02        	cp 2
 437+ 97CA 28 0F        	jr z,1F
 438+ 97CC 38 04        	jr c,6F
 439+ 97CE FE 04        	cp 4
 440+ 97D0 28 12        	jr z,7F
 441+ 97D2
 442+ 97D2              ; ---------- ---------- ----------
 443+ 97D2
 444+ 97D2 3A BF 8A     6 ld a,(CTRL_DESPLZ)
 445+ 97D5 FE F8        	cp $f8
 446+ 97D7 20 2A        	jr nz,8F
 447+ 97D9 18 10        	jr 4F
 448+ 97DB 3A BF 8A     1 ld a,(CTRL_DESPLZ)
 449+ 97DE FE F9        	cp $f9
 450+ 97E0 20 21        	jr nz,8F
 451+ 97E2 18 07        	jr 4F
 452+ 97E4 3A BF 8A     7 ld a,(CTRL_DESPLZ)
 453+ 97E7 FE FB        	cp $fb
 454+ 97E9 20 18        	jr nz,8F
 455+ 97EB
 456+ 97EB              ; ---------- ---------- ----------
 457+ 97EB
 458+ 97EB              4
 459+ 97EB CD F1 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 97EE              ;	call Reinicio
 461+ 97EE
 462+ 97EE              ; ---------- ---------- ----------
 463+ 97EE
 464+ 97EE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 97F0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 97F1
 467+ 97F1              ;	ld hl,(Indice_Sprite_izq)
 468+ 97F1              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 97F1
 470+ 97F1 CD 0A 98     	call DESPLZ_IZQ
 471+ 97F4 C1           	pop bc
 472+ 97F5 10 F9        	djnz 5B
 473+ 97F7 2A B9 8A     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 97FA 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 97FB 22 B9 8A     	ld (Posicion_actual),hl
 476+ 97FE CD 01 9B     	call Genera_coordenadas
 477+ 9801 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9803
 479+ 9803              ; ---------- ---------- ----------
 480+ 9803
 481+ 9803              ; Movemos, no hay recolocación.
 482+ 9803
 483+ 9803 2A B9 8A     8 ld hl,(Posicion_actual)
 484+ 9806 CD 0A 98     	call DESPLZ_IZQ
 485+ 9809 C9           2 ret
 486+ 980A
 487+ 980A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 980A              ;
 489+ 980A              ;	22/9/22
 490+ 980A
 491+ 980A              DESPLZ_IZQ
 492+ 980A
 493+ 980A CD 19 98     	call Desplaza_izquierda
 494+ 980D CD 65 98         call modifica_parametros_1er_DESPLZ
 495+ 9810 CD 8D 98     	call Ciclo_completo_2
 496+ 9813 21 D9 8A     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9816 CB BE        	res 7,(hl)
 498+ 9818 C9           	ret
 499+ 9819
 500+ 9819              Desplaza_izquierda
 501+ 9819
 502+ 9819 3A E0 8A     	ld a,(Vel_left)
 503+ 981C 47           	ld b,a
 504+ 981D 2A C7 8A     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9820 23           1 inc hl
 506+ 9821 23           	inc hl
 507+ 9822 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9824 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
 509+ 9827 CD DC 8C     	call Extrae_address
 510+ 982A 22 BB 8A     	ld (Puntero_objeto),hl
 511+ 982D
 512+ 982D              ; Modifica (Puntero_DESPLZ_der).
 513+ 982D
 514+ 982D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 982D              ; Cuántos movimientos hemos hecho ??
 516+ 982D              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 982D
 518+ 982D 2A C3 8A     7 ld hl,(Indice_Sprite_izq)
 519+ 9830 EB           	ex de,hl
 520+ 9831 A7           	and a
 521+ 9832 ED 52        	sbc hl,de
 522+ 9834 CB 3D        	srl l
 523+ 9836 3E 08        6 ld a,8
 524+ 9838 95           	sub l
 525+ 9839 30 1E        	jr nc,3F
 526+ 983B
 527+ 983B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 983B              ; B="0".
 529+ 983B
 530+ 983B 04           4 inc b
 531+ 983C 3C           	inc a
 532+ 983D 20 FC        	jr nz,4B
 533+ 983F 78           	ld a,b
 534+ 9840 08           	ex af,af
 535+ 9841 2A C3 8A     	ld hl,(Indice_Sprite_izq)
 536+ 9844 23           5 inc hl
 537+ 9845 23           	inc hl
 538+ 9846 10 FC        	djnz 5B
 539+ 9848 22 C7 8A     	ld (Puntero_DESPLZ_izq),hl
 540+ 984B CD DC 8C     	call Extrae_address
 541+ 984E 22 BB 8A     	ld (Puntero_objeto),hl
 542+ 9851
 543+ 9851              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9851              ; _(Posicion_actual).
 545+ 9851
 546+ 9851 21 B9 8A     	ld hl,Posicion_actual
 547+ 9854 35           	dec (hl)
 548+ 9855 08           	ex af,af
 549+ 9856 6F           	ld l,a
 550+ 9857 18 DD        	jr 6B
 551+ 9859
 552+ 9859              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9859
 554+ 9859 47           3 ld b,a
 555+ 985A 2A C1 8A     	ld hl,(Indice_Sprite_der)
 556+ 985D 23           2 inc hl
 557+ 985E 23           	inc hl
 558+ 985F 10 FC        	djnz 2B
 559+ 9861 22 C5 8A     	ld (Puntero_DESPLZ_der),hl
 560+ 9864 C9           8 ret
 561+ 9865
 562+ 9865              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9865              ;
 564+ 9865              ;	modifica_parametros_1er_DESPLZ
 565+ 9865              ;
 566+ 9865              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9865              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9865              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9865
 570+ 9865 3A BF 8A     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9868 A7           	and a
 572+ 9869 20 1E        	jr nz,1F
 573+ 986B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 986C 32 BF 8A         ld (CTRL_DESPLZ),a
 575+ 986F 21 B8 8A     	ld hl,Columns
 576+ 9872 34           	inc (hl)
 577+ 9873 3A CB 8A     	ld a,(Cuad_objeto)
 578+ 9876 E6 01        	and 1
 579+ 9878 20 0F        	jr nz,1F
 580+ 987A 2A B9 8A     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 987D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 987E 22 B9 8A     	ld (Posicion_actual),hl
 583+ 9881 CD 01 9B     	call Genera_coordenadas
 584+ 9884 CD E0 98     	call Dec_CTRL_DESPLZ
 585+ 9887 18 03        	jr 2F
 586+ 9889 CD E0 98     1 call Dec_CTRL_DESPLZ
 587+ 988C C9           2 ret
 588+ 988D
 589+ 988D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 988D
 591+ 988D 3A BF 8A     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9890 FE F7        	cp $f7
 593+ 9892 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9894 30 2C        	jr nc,3F
 595+ 9896
 596+ 9896              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9896
 598+ 9896 06 00        	ld b,0
 599+ 9898 04           4 inc b
 600+ 9899 3C           	inc a
 601+ 989A FE F7        	cp $f7
 602+ 989C 20 FA        	jr nz,4B
 603+ 989E 3E FF        	ld a,$ff
 604+ 98A0 90           	sub b
 605+ 98A1 32 BF 8A     	ld (CTRL_DESPLZ),a
 606+ 98A4 18 1C        	jr 3F
 607+ 98A6
 608+ 98A6              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 98A6
 610+ 98A6 21 B8 8A     1 ld hl,Columns
 611+ 98A9 35           	dec (hl)
 612+ 98AA AF           	xor a
 613+ 98AB 32 BF 8A     	ld (CTRL_DESPLZ),a
 614+ 98AE 3A CB 8A     	ld a,(Cuad_objeto)
 615+ 98B1 E6 01        	and 1
 616+ 98B3 28 0A        	jr z,2F
 617+ 98B5 2A B9 8A     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 98B8 2B           	dec hl
 619+ 98B9 22 B9 8A     	ld (Posicion_actual),hl
 620+ 98BC CD 01 9B     	call Genera_coordenadas
 621+ 98BF
 622+ 98BF              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 98BF
 624+ 98BF CD 04 8D     2 call Inicia_puntero_objeto_izq
 625+ 98C2 C9           3 ret
 626+ 98C3
 627+ 98C3              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 98C3              ;
 629+ 98C3              ;	19/10/22
 630+ 98C3              ;
 631+ 98C3              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 98C3              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 98C3
 634+ 98C3 3A BD 8A     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 98C6 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 98C8 C9           	ret
 637+ 98C9
 638+ 98C9              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 98C9              ;
 640+ 98C9              ;	19/10/22
 641+ 98C9              ;
 642+ 98C9              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 98C9              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 98C9
 645+ 98C9 3A BD 8A     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 98CC FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 98CE C9           	ret
 648+ 98CF
 649+ 98CF              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 98CF              ;
 651+ 98CF              ;	24/7/22
 652+ 98CF              ;
 653+ 98CF              ;	Inc_CTRL_DESPLZ
 654+ 98CF              ;
 655+ 98CF              ;
 656+ 98CF              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 98CF
 658+ 98CF 21 BF 8A     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 98D2 3A E1 8A     	ld a,(Vel_right)
 660+ 98D5 A7           	and a
 661+ 98D6 28 06        	jr z,1F
 662+ 98D8 47           	ld b,a
 663+ 98D9 34           3 inc (hl)
 664+ 98DA 10 FD        	djnz 3B
 665+ 98DC 18 01        	jr 2F
 666+ 98DE 34           1 inc (hl)
 667+ 98DF C9           2 ret
 668+ 98E0
 669+ 98E0              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 98E0              ;
 671+ 98E0              ;	5/2/23
 672+ 98E0              ;
 673+ 98E0              ;	Dec_CTRL_DESPLZ
 674+ 98E0              ;
 675+ 98E0              ;
 676+ 98E0              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 98E0
 678+ 98E0 21 BF 8A     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 98E3 3A E0 8A     	ld a,(Vel_left)
 680+ 98E6 A7           	and a
 681+ 98E7 28 06        	jr z,1F
 682+ 98E9 47           	ld b,a
 683+ 98EA 35           3 dec (hl)
 684+ 98EB 10 FD        	djnz 3B
 685+ 98ED 18 01        	jr 2F
 686+ 98EF 35           1 dec (hl)
 687+ 98F0 C9           2 ret
 688+ 98F1
 689+ 98F1              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 98F1
 691+ 98F1 2A B9 8A     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 98F4 01 1F 00     	ld bc,31
 693+ 98F7 A7           	and a
 694+ 98F8 ED 4A        	adc hl,bc
 695+ 98FA 22 B9 8A     	ld (Posicion_actual),hl
 696+ 98FD 21 D9 8A     	ld hl,Ctrl_0														; $xxx1
 697+ 9900 CB C6        	set 0,(hl)
 698+ 9902 C9           	ret
 699+ 9903
 700+ 9903              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9903
 702+ 9903 2A B9 8A     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9906 01 1F 00     	ld bc,31
 704+ 9909 A7           	and a
 705+ 990A ED 42        	sbc hl,bc
 706+ 990C 22 B9 8A     	ld (Posicion_actual),hl 											; $xx1x
 707+ 990F 21 D9 8A     	ld hl,Ctrl_0
 708+ 9912 CB CE        	set 1,(hl)
 709+ 9914 C9           	ret
 710+ 9915
 711+ 9915              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9915
 713+ 9915 24           Reaparece_abajo inc h
 714+ 9916 01 E0 17     	ld bc,$17e0
 715+ 9919 A7           	and a
 716+ 991A ED 4A        	adc hl,bc
 717+ 991C 22 B9 8A     	ld (Posicion_actual),hl
 718+ 991F 21 D9 8A     	ld hl,Ctrl_0
 719+ 9922 CB D6        	set 2,(hl)
 720+ 9924 C9           	ret
 721+ 9925
 722+ 9925              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9925
 724+ 9925 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9928 A7           	and a
 726+ 9929 ED 42        	sbc hl,bc
 727+ 992B 22 B9 8A     	ld (Posicion_actual),hl
 728+ 992E 21 D9 8A     	ld hl,Ctrl_0
 729+ 9931 CB DE        	set 3,(hl)
 730+ 9933 C9           	ret
 731+ 9934
 732+ 9934              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9934              ;
 734+ 9934              ;	15/07/23
 735+ 9934
 736+ 9934              Reinicio
 737+ 9934
 738+ 9934              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9934
 740+ 9934 AF           	xor a
 741+ 9935 21 F0 8A     	ld hl,Puntero_indice_mov_bucle
 742+ 9938 CD 56 99     	call Limpia_contenido_hl
 743+ 993B
 744+ 993B 21 B9 8A     	ld hl,Posicion_actual
 745+ 993E CD 56 99     	call Limpia_contenido_hl
 746+ 9941
 747+ 9941 CD 9F 8D     	call Inicializa_Puntero_indice_mov
 748+ 9944 CD 22 9A     	call Inicia_Puntero_mov
 749+ 9947
 750+ 9947 21 F2 8A     	ld hl,Incrementa_puntero
 751+ 994A 06 05        	ld b,5
 752+ 994C 77           1 ld (hl),a
 753+ 994D 23           	inc hl
 754+ 994E 10 FC        	djnz 1B
 755+ 9950
 756+ 9950 21 DE 8A     	ld hl,Ctrl_2
 757+ 9953 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9955
 759+ 9955 C9           	ret
 760+ 9956
 761+ 9956 77           Limpia_contenido_hl	ld (hl),a
 762+ 9957 23           	inc hl
 763+ 9958 77           	ld (hl),a
 764+ 9959 C9           	ret
 765+ 995A
 766+ 995A
# file closed: Direcciones.asm
1834  995A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 995A              ; ----- ----- ----- ----- -----
   2+ 995A              ;
   3+ 995A              ;   28/12/23
   4+ 995A
   5+ 995A              Movimiento
   6+ 995A
   7+ 995A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 995A
   9+ 995A 3A DE 8A         ld a,(Ctrl_2)
  10+ 995D CB 57            bit 2,a
  11+ 995F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9961
  13+ 9961 2A EE 8A         ld hl,(Puntero_mov)
  14+ 9964 7E               ld a,(hl)
  15+ 9965
  16+ 9965              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9965
  18+ 9965              Inicia_desplazamiento.
  19+ 9965
  20+ 9965              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9965
  22+ 9965 CD 58 9A         call Ajusta_velocidad_desplazamiento
  23+ 9968
  24+ 9968              ; Iniciamos (Repetimos_mov).
  25+ 9968
  26+ 9968 7E               ld a,(hl)
  27+ 9969 E6 0F            and $0f
  28+ 996B 32 F4 8A         ld (Repetimos_desplazamiento),a
  29+ 996E 32 F5 8A         ld (Repetimos_desplazamiento_backup),a
  30+ 9971
  31+ 9971              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9971
  33+ 9971 23               inc hl
  34+ 9972 7E               ld a,(hl)
  35+ 9973 32 F7 8A         ld (Cola_de_desplazamiento),a
  36+ 9976 2B               dec hl
  37+ 9977
  38+ 9977 21 DE 8A         ld hl,Ctrl_2
  39+ 997A CB D6            set 2,(hl)
  40+ 997C
  41+ 997C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 997C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 997C
  44+ 997C              Desplazamiento_iniciado
  45+ 997C
  46+ 997C CD 2C 9A         call Aplica_desplazamiento
  47+ 997F
  48+ 997F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 997F
  50+ 997F 3A 17 8B         ld a,(Ctrl_3)
  51+ 9982 CB 4F            bit 1,a
  52+ 9984 C0               ret nz
  53+ 9985
  54+ 9985 21 F4 8A     3 ld hl,Repetimos_desplazamiento
  55+ 9988 35               dec (hl)
  56+ 9989 C0               ret nz
  57+ 998A
  58+ 998A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 998A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 998A              ; Analiza (Cola_de_desplazamiento).
  61+ 998A
  62+ 998A 3A F7 8A     Cola ld a,(Cola_de_desplazamiento)
  63+ 998D A7               and a
  64+ 998E CC 81 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9991 28 30            jr z,Reinicia_el_movimiento
  66+ 9993
  67+ 9993 FE FF            cp $ff
  68+ 9995 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9997
  70+ 9997 FE FE            cp $fe
  71+ 9999 CC 06 9A         call z,Fijamos_bucle
  72+ 999C 28 25            jr z,Reinicia_el_movimiento
  73+ 999E
  74+ 999E FE FD            cp $fd
  75+ 99A0 20 11            jr nz,1F
  76+ 99A2
  77+ 99A2              ; ---
  78+ 99A2              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 99A2
  80+ 99A2 3A DE 8A         ld a,(Ctrl_2)
  81+ 99A5 CB 5F            bit 3,a
  82+ 99A7 20 1A            jr nz,Reinicia_el_movimiento
  83+ 99A9
  84+ 99A9              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 99A9
  86+ 99A9 21 DE 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 99AC CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 99AE
  89+ 99AE CD 17 9A         call Inicia_Repetimos_movimiento
  90+ 99B1 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 99B3              ; ---
  92+ 99B3
  93+ 99B3 FE 01        1 cp 1
  94+ 99B5 CA F0 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 99B8
  96+ 99B8 3D               dec a
  97+ 99B9 32 F7 8A         ld (Cola_de_desplazamiento),a
  98+ 99BC
  99+ 99BC 3A F5 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 99BF 32 F4 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 99C2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 99C2 C9               ret
 103+ 99C3
 104+ 99C3              Reinicia_el_movimiento
 105+ 99C3
 106+ 99C3 3A DE 8A         ld a,(Ctrl_2)
 107+ 99C6 CB 5F            bit 3,a
 108+ 99C8 28 1B            jr z,2F
 109+ 99CA
 110+ 99CA              ; (Cola_de_desplazamiento)="254".
 111+ 99CA
 112+ 99CA 21 F6 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 99CD 35               dec (hl)
 114+ 99CE 20 15            jr nz,2F
 115+ 99D0
 116+ 99D0              ; Fin de las repeticiones del último movimiento.
 117+ 99D0
 118+ 99D0 21 DE 8A         ld hl,Ctrl_2
 119+ 99D3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 99D5
 121+ 99D5 2A EE 8A         ld hl,(Puntero_mov)
 122+ 99D8 23               inc hl
 123+ 99D9 23               inc hl
 124+ 99DA 23               inc hl
 125+ 99DB 22 EE 8A         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 99DE              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 99DE 7E               ld a,(hl)
 128+ 99DF 32 F7 8A         ld (Cola_de_desplazamiento),a
 129+ 99E2
 130+ 99E2 C3 8A 99         jp Cola
 131+ 99E5
 132+ 99E5 CD 22 9A     2 call Inicia_Puntero_mov
 133+ 99E8
 134+ 99E8 21 DE 8A         ld hl,Ctrl_2
 135+ 99EB CB 96            res 2,(hl)
 136+ 99ED
 137+ 99ED C3 5A 99         jp Movimiento
 138+ 99F0
 139+ 99F0              Siguiente_desplazamiento
 140+ 99F0
 141+ 99F0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 99F0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 99F0
 144+ 99F0 21 DE 8A         ld hl,Ctrl_2
 145+ 99F3 CB 96            res 2,(hl)
 146+ 99F5
 147+ 99F5 2A EE 8A         ld hl,(Puntero_mov)
 148+ 99F8 23               inc hl
 149+ 99F9 23               inc hl
 150+ 99FA 22 EE 8A         ld (Puntero_mov),hl
 151+ 99FD
 152+ 99FD 7E               ld a,(hl)
 153+ 99FE A7               and a
 154+ 99FF CC 81 9A         call z,Incrementa_Puntero_indice_mov
 155+ 9A02 CA C3 99         jp z,Reinicia_el_movimiento
 156+ 9A05
 157+ 9A05 C9               ret
 158+ 9A06
 159+ 9A06              ; Subrutinas -----------------------------------------
 160+ 9A06              ; ---------- --------- --------- ---------- ----------
 161+ 9A06              ;
 162+ 9A06              ;   24/07/23
 163+ 9A06              ;
 164+ 9A06              ;   Fijamos_bucle
 165+ 9A06              ;
 166+ 9A06              ;
 167+ 9A06
 168+ 9A06              Fijamos_bucle
 169+ 9A06
 170+ 9A06 3A F2 8A         ld a,(Incrementa_puntero)
 171+ 9A09 3C               inc a
 172+ 9A0A 32 F3 8A         ld (Incrementa_puntero_backup),a
 173+ 9A0D
 174+ 9A0D CD 81 9A         call Incrementa_Puntero_indice_mov
 175+ 9A10 2A EC 8A         ld hl,(Puntero_indice_mov)
 176+ 9A13 22 F0 8A         ld (Puntero_indice_mov_bucle),hl
 177+ 9A16 C9               ret
 178+ 9A17
 179+ 9A17              ; ---------- --------- --------- ---------- ----------
 180+ 9A17              ;
 181+ 9A17              ;   07/7/23
 182+ 9A17              ;
 183+ 9A17              ;   Inicia_Repetimos_movimiento
 184+ 9A17              ;
 185+ 9A17              ;
 186+ 9A17
 187+ 9A17              Inicia_Repetimos_movimiento
 188+ 9A17
 189+ 9A17              ; Iniciamos (Repetimos_movimiento).
 190+ 9A17
 191+ 9A17 DD 2A EE 8A      ld ix,(Puntero_mov)
 192+ 9A1B DD 7E 02         ld a,(ix+2)
 193+ 9A1E 32 F6 8A         ld (Repetimos_movimiento),a
 194+ 9A21
 195+ 9A21 C9               ret
 196+ 9A22
 197+ 9A22              ; ---------- --------- --------- ---------- ----------
 198+ 9A22              ;
 199+ 9A22              ;   26/6/23
 200+ 9A22              ;
 201+ 9A22              ;   Inicia_Puntero_mov
 202+ 9A22              ;
 203+ 9A22              ;
 204+ 9A22
 205+ 9A22 2A EC 8A     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9A25 CD DC 8C         call Extrae_address
 207+ 9A28 22 EE 8A         ld (Puntero_mov),hl
 208+ 9A2B C9               ret
 209+ 9A2C
 210+ 9A2C              ; ---------- --------- --------- ---------- ----------
 211+ 9A2C              ;
 212+ 9A2C              ;   27/06/23
 213+ 9A2C              ;
 214+ 9A2C              ;   Aplica_movimiento.
 215+ 9A2C
 216+ 9A2C              Aplica_desplazamiento
 217+ 9A2C
 218+ 9A2C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9A2C
 220+ 9A2C 2A EE 8A         ld hl, (Puntero_mov)
 221+ 9A2F
 222+ 9A2F 7E               ld a,(hl)
 223+ 9A30 E6 F0            and $f0
 224+ 9A32 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9A33
 226+ 9A33 CB 7E            bit 7,(hl)
 227+ 9A35 28 03            jr z,1F
 228+ 9A37 CD 41 96         call Mov_up
 229+ 9A3A 2A EE 8A     1 ld hl, (Puntero_mov)
 230+ 9A3D CB 76            bit 6,(hl)
 231+ 9A3F 28 03            jr z,2F
 232+ 9A41 CD 08 96         call Mov_down
 233+ 9A44
 234+ 9A44              ; Se ha aplicado reinicio ???
 235+ 9A44              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A44
 237+ 9A44              ;    ld a,(Ctrl_3)
 238+ 9A44              ;    bit 1,a
 239+ 9A44              ;    ret nz
 240+ 9A44
 241+ 9A44 2A EE 8A     2 ld hl, (Puntero_mov)
 242+ 9A47 CB 6E            bit 5,(hl)
 243+ 9A49 28 03            jr z,3F
 244+ 9A4B CD A7 97         call Mov_left
 245+ 9A4E 2A EE 8A     3 ld hl, (Puntero_mov)
 246+ 9A51 CB 66            bit 4,(hl)
 247+ 9A53 C8               ret z
 248+ 9A54 CD 84 96         call Mov_right
 249+ 9A57 C9               ret
 250+ 9A58
 251+ 9A58              ; ---------- --------- --------- ---------- ----------
 252+ 9A58              ;
 253+ 9A58              ;   26/06/23
 254+ 9A58              ;
 255+ 9A58              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A58
 257+ 9A58              Ajusta_velocidad_desplazamiento
 258+ 9A58
 259+ 9A58              ; 1er byte de la cadena de movimiento.
 260+ 9A58              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A58
 262+ 9A58 CD 76 9A         call Extrae_nibble_alto
 263+ 9A5B
 264+ 9A5B 32 E2 8A         ld (Vel_up),a
 265+ 9A5E 79               ld a,c
 266+ 9A5F E6 0F            and $0f
 267+ 9A61 32 E3 8A         ld (Vel_down),a
 268+ 9A64
 269+ 9A64              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A64              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A64
 272+ 9A64 23               inc hl
 273+ 9A65 CD 76 9A         call Extrae_nibble_alto
 274+ 9A68
 275+ 9A68 32 E0 8A         ld (Vel_left),a
 276+ 9A6B 79               ld a,c
 277+ 9A6C E6 0F            and $0f
 278+ 9A6E 32 E1 8A         ld (Vel_right),a
 279+ 9A71
 280+ 9A71              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A71
 282+ 9A71 23               inc hl
 283+ 9A72 22 EE 8A         ld (Puntero_mov),hl
 284+ 9A75 C9               ret
 285+ 9A76
 286+ 9A76 06 04        Extrae_nibble_alto ld b,4
 287+ 9A78 7E               ld a,(hl)
 288+ 9A79 4F               ld c,a
 289+ 9A7A E6 F0            and $f0
 290+ 9A7C CB 3F        1 srl a
 291+ 9A7E 10 FC            djnz 1B
 292+ 9A80 C9               ret
 293+ 9A81
 294+ 9A81              ; ---------- --------- --------- ---------- ----------
 295+ 9A81              ;
 296+ 9A81              ;   5/7/23
 297+ 9A81              ;
 298+ 9A81              ;   Incrementa_Puntero_indice_mov
 299+ 9A81
 300+ 9A81              Incrementa_Puntero_indice_mov
 301+ 9A81
 302+ 9A81 21 F2 8A         ld hl,Incrementa_puntero
 303+ 9A84 34               inc (hl)
 304+ 9A85
 305+ 9A85 2A EC 8A         ld hl,(Puntero_indice_mov)
 306+ 9A88 01 02 00         ld bc,2
 307+ 9A8B A7               and a
 308+ 9A8C 09               add hl,bc
 309+ 9A8D 22 EC 8A         ld (Puntero_indice_mov),hl
 310+ 9A90
 311+ 9A90 7E               ld a,(hl)
 312+ 9A91 A7               and a
 313+ 9A92
 314+ 9A92              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9A92
 316+ 9A92              ;    jr z,$
 317+ 9A92
 318+ 9A92              ;! Reinicia el Patrón de movimiento.
 319+ 9A92
 320+ 9A92 CC 97 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9A95
 322+ 9A95 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9A96
 324+ 9A96 C9               ret
 325+ 9A97
 326+ 9A97              ; ---------- --------- --------- ---------- ----------
 327+ 9A97              ;
 328+ 9A97              ;   15/01/24
 329+ 9A97              ;
 330+ 9A97              ;   Inicializa_Puntero_indice_mov
 331+ 9A97
 332+ 9A97              Inicializa_Puntero_indice_mov_2
 333+ 9A97
 334+ 9A97              ; Existe etiqueta de bucle principal???
 335+ 9A97
 336+ 9A97 2A F0 8A         ld hl,(Puntero_indice_mov_bucle)
 337+ 9A9A 24               inc h
 338+ 9A9B 25               dec h
 339+ 9A9C 28 05            jr z,2F
 340+ 9A9E
 341+ 9A9E 22 EC 8A         ld (Puntero_indice_mov),hl
 342+ 9AA1 18 14            jr 3F
 343+ 9AA3
 344+ 9AA3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9AA3
 346+ 9AA3 3A F2 8A     2 ld a,(Incrementa_puntero)
 347+ 9AA6 47               ld b,a
 348+ 9AA7
 349+ 9AA7 2A EC 8A         ld hl,(Puntero_indice_mov)
 350+ 9AAA 2B           1 dec hl
 351+ 9AAB 2B               dec hl
 352+ 9AAC 10 FC            djnz 1B
 353+ 9AAE 22 EC 8A         ld (Puntero_indice_mov),hl
 354+ 9AB1
 355+ 9AB1 AF               xor a
 356+ 9AB2 32 F2 8A         ld (Incrementa_puntero),a
 357+ 9AB5 18 06            jr 4F
 358+ 9AB7
 359+ 9AB7 3A F3 8A     3 ld a,(Incrementa_puntero_backup)
 360+ 9ABA 32 F2 8A         ld (Incrementa_puntero),a
 361+ 9ABD C9           4 ret
 362+ 9ABE
 363+ 9ABE              ; ----------------------------------------------------------------------
 364+ 9ABE              ;
 365+ 9ABE              ;   30/01/24
 366+ 9ABE              ;
 367+ 9ABE              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9ABE
 369+ 9ABE 3A B6 8A     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9AC1 CD F0 8E         call Calcula_salto_en_BC
 371+ 9AC4 21 E4 8A         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9AC7 A7               and a
 373+ 9AC8 ED 4A            adc hl,bc
 374+ 9ACA C9               ret
 375+ 9ACB
 376+ 9ACB              ; ----------------------------------------------------------------------
 377+ 9ACB              ;
 378+ 9ACB              ;   30/01/24
 379+ 9ACB              ;
 380+ 9ACB              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9ACB              ;
 382+ 9ACB              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9ACB
 384+ 9ACB 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9ACC 23               inc hl
 386+ 9ACD 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9ACE 69               ld l,c
 388+ 9ACF 60               ld h,b
 389+ 9AD0 22 D7 8A         ld (Contador_de_mov_masticados),hl
 390+ 9AD3 C9               ret
 391+ 9AD4
# file closed: Movimiento.asm
1835  9AD4              ;	include "Disparo.asm"
1836  9AD4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9AD4              ; Relojes y temporizaciones.
   2+ 9AD4
   3+ 9AD4              ; ------------------------------------------------------
   4+ 9AD4              ;
   5+ 9AD4              ;	16/7/23
   6+ 9AD4              ;
   7+ 9AD4              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9AD4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9AD4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9AD4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9AD4              ;
  12+ 9AD4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9AD4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9AD4
  15+ 9AD4              ; Disparo_entidad db 1
  16+ 9AD4              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9AD4              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9AD4
  19+ 9AD4              Habilita_disparos
  20+ 9AD4
  21+ 9AD4 7E           	ld a,(hl)
  22+ 9AD5 A7           	and a
  23+ 9AD6 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9AD7
  25+ 9AD7 EB           	ex de,hl
  26+ 9AD8
  27+ 9AD8 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9AD9 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9ADA
  30+ 9ADA              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9ADA
  32+ 9ADA 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9ADB 7E           	ld a,(hl)
  34+ 9ADC 23           	inc hl
  35+ 9ADD 77           	ld (hl),a
  36+ 9ADE
  37+ 9ADE EB           	ex de,hl						; Habilitamos disparo.
  38+ 9ADF 3E 01        	ld a,1
  39+ 9AE1 77           	ld (hl),a
  40+ 9AE2 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1837  9AE3              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9AE3              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9AE3              ;
   3+ 9AE3              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9AE3              ;
   5+ 9AE3              ; *****************************************************************************************************************************************************************************************
   6+ 9AE3              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9AE3
   8+ 9AE3 7C           calcula_tercio ld a,h
   9+ 9AE4 E6 18        	and $18
  10+ 9AE6 CB 2F        	sra a
  11+ 9AE8 CB 2F        	sra a
  12+ 9AEA CB 2F        	sra a
  13+ 9AEC C9           	ret
  14+ 9AED
# file closed: calcula_tercio.asm
1838  9AED              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9AED              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9AED              ;
   3+ 9AED              ;
   4+ 9AED              ;	CLS.
   5+ 9AED              ;
   6+ 9AED              ;	Limpia la pantalla y define sus atributos.
   7+ 9AED              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9AED              ;
   9+ 9AED              ;	COLORES: 0 ..... NEGRO
  10+ 9AED              ;    		 1 ..... AZUL
  11+ 9AED              ; 			 2 ..... ROJO
  12+ 9AED              ;			 3 ..... MAGENTA
  13+ 9AED              ; 			 4 ..... VERDE
  14+ 9AED              ; 			 5 ..... CIAN
  15+ 9AED              ;			 6 ..... AMARILLO
  16+ 9AED              ; 			 7 ..... BLANCO
  17+ 9AED              ;
  18+ 9AED              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9AED              ;
  20+ 9AED              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9AED
  22+ 9AED
  23+ 9AED 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9AF0 11 01 40     	LD DE,$4001
  25+ 9AF3 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9AF6 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9AF8 ED B0        	LDIR
  28+ 9AFA 01 FF 02     	LD BC,767
  29+ 9AFD 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9AFE ED B0        	LDIR
  31+ 9B00 C9           	ret
  32+ 9B01
# file closed: Cls.asm
1839  9B01              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B01              ; ------------------------------------------------------------------------
   2+ 9B01              ;
   3+ 9B01              ;	30/1/24
   4+ 9B01              ;
   5+ 9B01              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B01              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B01              ;
   8+ 9B01              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B01              ;
  10+ 9B01              ;	Modifica: A,BC y DE.
  11+ 9B01
  12+ 9B01 7D           Genera_coordenadas ld a,l
  13+ 9B02 E6 1F        	and $1f
  14+ 9B04 32 BD 8A     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B07
  16+ 9B07 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B08 FE 40        	cp $40
  18+ 9B0A 38 1C        	jr c,4F
  19+ 9B0C
  20+ 9B0C CD E3 9A     	call calcula_tercio
  21+ 9B0F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9B10
  23+ 9B10 1E 00        	ld e,0
  24+ 9B12 7D           	ld a,l
  25+ 9B13 E6 E0        	and $e0
  26+ 9B15 28 01        	jr z,1F
  27+ 9B17 04           	inc b
  28+ 9B18
  29+ 9B18 04           1 inc b
  30+ 9B19 05           	dec b
  31+ 9B1A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9B1C              ;														; _ , salimos.
  33+ 9B1C 1C           3 inc e
  34+ 9B1D D6 20        	sub 32
  35+ 9B1F 20 FB        	jr nz,3B
  36+ 9B21 10 F5        	djnz 1B
  37+ 9B23
  38+ 9B23 7B           2 ld a,e
  39+ 9B24 32 BE 8A     	ld (Coordenada_y),a
  40+ 9B27 C9           	ret
  41+ 9B28
  42+ 9B28 AF           4 xor a
  43+ 9B29 32 BE 8A     	ld (Coordenada_y),a
  44+ 9B2C C9           	ret
  45+ 9B2D
  46+ 9B2D              ; ------------------------------------------------------------------------
  47+ 9B2D              ;	28/05/23
  48+ 9B2D              ;
  49+ 9B2D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9B2D              ;	Fila superior "0", Columna izquierda "0".
  51+ 9B2D              ;
  52+ 9B2D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9B2D              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9B2D              ;
  55+ 9B2D              ;		DE="$120d"
  56+ 9B2D              ;
  57+ 9B2D              ;		D, (Coordenada_X), Columnas, $12
  58+ 9B2D              ;		E, (Coordenada_y), Filas, $0d
  59+ 9B2D              ;
  60+ 9B2D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9B2D
  62+ 9B2D              ;	Modifica: A,BC y DE.
  63+ 9B2D
  64+ 9B2D
  65+ 9B2D              Genera_coordenadas_disparo
  66+ 9B2D
  67+ 9B2D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9B2D
  69+ 9B2D 7D           	ld a,l
  70+ 9B2E E6 1F        	and $1f
  71+ 9B30 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9B31 CD E3 9A     	call calcula_tercio
  73+ 9B34 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9B35 1E 00        	ld e,0
  75+ 9B37 7D           	ld a,l
  76+ 9B38 E6 E0        	and $e0
  77+ 9B3A 28 01        	jr z,1F
  78+ 9B3C 04           	inc b
  79+ 9B3D 1C           1 inc e
  80+ 9B3E D6 20        	sub 32
  81+ 9B40 20 FB        	jr nz,1B
  82+ 9B42 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9B44 C9           	ret
  84+ 9B45
# file closed: Genera_coordenadas.asm
1840  9B45              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9B45              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9B45              ;
   3+ 9B45              ;	11/03/24
   4+ 9B45              ;
   5+ 9B45              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9B45              ;   DE contiene Puntero_objeto.
   7+ 9B45              ;   IX contiene el Puntero de impresión.
   8+ 9B45
   9+ 9B45              Genera_datos_de_impresion
  10+ 9B45
  11+ 9B45 ED 73 09 8B      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9B49 31 D5 8A         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 9B4C DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 9B4E
  15+ 9B4E 2A 15 8B         ld hl,(Scanlines_album_SP)
  16+ 9B51
  17+ 9B51 3E 05            ld a,5
  18+ 9B53 85               add l
  19+ 9B54 6F               ld l,a
  20+ 9B55
  21+ 9B55 F9               ld sp,hl
  22+ 9B56 22 15 8B         ld (Scanlines_album_SP),hl
  23+ 9B59
  24+ 9B59 21 00 00         ld hl,0
  25+ 9B5C
  26+ 9B5C DD E5            push ix
  27+ 9B5E 3B               dec sp
  28+ 9B5F ED 7A            adc hl,sp
  29+ 9B61 D5               push de
  30+ 9B62
  31+ 9B62              ; Recuperamos SP.
  32+ 9B62
  33+ 9B62 ED 7B 09 8B      ld sp,(Stack)
  34+ 9B66
  35+ 9B66 E5               push hl
  36+ 9B67 F1               pop af
  37+ 9B68 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 9B69
  39+ 9B69              ; Tenemos el encabezado listo.
  40+ 9B69              ; Preparamos registros para generar los scanlines.
  41+ 9B69
  42+ 9B69 DD E5            push ix
  43+ 9B6B E1               pop hl                                          ; 1er scanline en HL.
  44+ 9B6C
  45+ 9B6C ED 5B 15 8B      ld de,(Scanlines_album_SP)
  46+ 9B70
  47+ 9B70              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 9B70              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 9B70
  50+ 9B70 7C               ld a,h
  51+ 9B71 FE 50            cp $50
  52+ 9B73 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 9B75
  54+ 9B75 20 05            jr nz,2F
  55+ 9B77
  56+ 9B77 7D               ld a,l
  57+ 9B78 FE E0            cp $e0
  58+ 9B7A 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 9B7C
  60+ 9B7C 7D           2 ld a,l
  61+ 9B7D FE C0            cp $c0
  62+ 9B7F D2 11 9C         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 9B82
  64+ 9B82              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 9B82
  66+ 9B82 CD 6A 92         call NextScan
  67+ 9B85 EB               ex de,hl
  68+ 9B86
  69+ 9B86 73               ld (hl),e
  70+ 9B87 2C               inc l
  71+ 9B88 72               ld (hl),d
  72+ 9B89 2C               inc l
  73+ 9B8A
  74+ 9B8A EB               ex de,hl
  75+ 9B8B
  76+ 9B8B CD 6A 92         call NextScan
  77+ 9B8E EB               ex de,hl
  78+ 9B8F
  79+ 9B8F 73               ld (hl),e
  80+ 9B90 2C               inc l
  81+ 9B91 72               ld (hl),d
  82+ 9B92 2C               inc l
  83+ 9B93
  84+ 9B93 EB               ex de,hl
  85+ 9B94
  86+ 9B94 CD 6A 92         call NextScan
  87+ 9B97 EB               ex de,hl
  88+ 9B98
  89+ 9B98 73               ld (hl),e
  90+ 9B99 2C               inc l
  91+ 9B9A 72               ld (hl),d
  92+ 9B9B 2C               inc l
  93+ 9B9C
  94+ 9B9C EB               ex de,hl
  95+ 9B9D
  96+ 9B9D CD 6A 92         call NextScan
  97+ 9BA0 EB               ex de,hl
  98+ 9BA1
  99+ 9BA1 73               ld (hl),e
 100+ 9BA2 2C               inc l
 101+ 9BA3 72               ld (hl),d
 102+ 9BA4 2C               inc l
 103+ 9BA5
 104+ 9BA5 EB               ex de,hl
 105+ 9BA6
 106+ 9BA6 CD 6A 92         call NextScan
 107+ 9BA9 EB               ex de,hl
 108+ 9BAA
 109+ 9BAA 73               ld (hl),e
 110+ 9BAB 2C               inc l
 111+ 9BAC 72               ld (hl),d
 112+ 9BAD 2C               inc l
 113+ 9BAE
 114+ 9BAE EB               ex de,hl
 115+ 9BAF
 116+ 9BAF CD 6A 92         call NextScan
 117+ 9BB2 EB               ex de,hl
 118+ 9BB3
 119+ 9BB3 73               ld (hl),e
 120+ 9BB4 2C               inc l
 121+ 9BB5 72               ld (hl),d
 122+ 9BB6 2C               inc l
 123+ 9BB7
 124+ 9BB7 EB               ex de,hl
 125+ 9BB8
 126+ 9BB8 CD 6A 92         call NextScan
 127+ 9BBB EB               ex de,hl
 128+ 9BBC
 129+ 9BBC 73               ld (hl),e
 130+ 9BBD 2C               inc l
 131+ 9BBE 72               ld (hl),d
 132+ 9BBF 2C               inc l
 133+ 9BC0
 134+ 9BC0 EB               ex de,hl
 135+ 9BC1
 136+ 9BC1 CD 6A 92         call NextScan
 137+ 9BC4 EB               ex de,hl
 138+ 9BC5
 139+ 9BC5 73               ld (hl),e
 140+ 9BC6 2C               inc l
 141+ 9BC7 72               ld (hl),d
 142+ 9BC8 2C               inc l
 143+ 9BC9
 144+ 9BC9 EB               ex de,hl
 145+ 9BCA
 146+ 9BCA CD 6A 92         call NextScan
 147+ 9BCD EB               ex de,hl
 148+ 9BCE
 149+ 9BCE 73               ld (hl),e
 150+ 9BCF 2C               inc l
 151+ 9BD0 72               ld (hl),d
 152+ 9BD1 2C               inc l
 153+ 9BD2
 154+ 9BD2 EB               ex de,hl
 155+ 9BD3
 156+ 9BD3 CD 6A 92         call NextScan
 157+ 9BD6 EB               ex de,hl
 158+ 9BD7
 159+ 9BD7 73               ld (hl),e
 160+ 9BD8 2C               inc l
 161+ 9BD9 72               ld (hl),d
 162+ 9BDA 2C               inc l
 163+ 9BDB
 164+ 9BDB EB               ex de,hl
 165+ 9BDC
 166+ 9BDC CD 6A 92         call NextScan
 167+ 9BDF EB               ex de,hl
 168+ 9BE0
 169+ 9BE0 73               ld (hl),e
 170+ 9BE1 2C               inc l
 171+ 9BE2 72               ld (hl),d
 172+ 9BE3 2C               inc l
 173+ 9BE4
 174+ 9BE4 EB               ex de,hl
 175+ 9BE5
 176+ 9BE5 CD 6A 92         call NextScan
 177+ 9BE8 EB               ex de,hl
 178+ 9BE9
 179+ 9BE9 73               ld (hl),e
 180+ 9BEA 2C               inc l
 181+ 9BEB 72               ld (hl),d
 182+ 9BEC 2C               inc l
 183+ 9BED
 184+ 9BED EB               ex de,hl
 185+ 9BEE
 186+ 9BEE CD 6A 92         call NextScan
 187+ 9BF1 EB               ex de,hl
 188+ 9BF2
 189+ 9BF2 73               ld (hl),e
 190+ 9BF3 2C               inc l
 191+ 9BF4 72               ld (hl),d
 192+ 9BF5 2C               inc l
 193+ 9BF6
 194+ 9BF6 EB               ex de,hl
 195+ 9BF7
 196+ 9BF7 CD 6A 92         call NextScan
 197+ 9BFA EB               ex de,hl
 198+ 9BFB
 199+ 9BFB 73               ld (hl),e
 200+ 9BFC 2C               inc l
 201+ 9BFD 72               ld (hl),d
 202+ 9BFE 2C               inc l
 203+ 9BFF
 204+ 9BFF EB               ex de,hl
 205+ 9C00
 206+ 9C00 CD 6A 92         call NextScan
 207+ 9C03 EB               ex de,hl
 208+ 9C04
 209+ 9C04 73               ld (hl),e
 210+ 9C05 2C               inc l
 211+ 9C06 72               ld (hl),d
 212+ 9C07 2C               inc l
 213+ 9C08
 214+ 9C08              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 9C08
 216+ 9C08 22 15 8B         ld (Scanlines_album_SP),hl
 217+ 9C0B
 218+ 9C0B              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 9C0B
 220+ 9C0B 08               ex af,af
 221+ 9C0C
 222+ 9C0C F5               push af
 223+ 9C0D E1               pop hl
 224+ 9C0E
 225+ 9C0E 36 10            ld (hl),16
 226+ 9C10
 227+ 9C10 C9               ret
 228+ 9C11
 229+ 9C11              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 9C11
 231+ 9C11              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 9C11
 233+ 9C11 3E 57            ld a,$57
 234+ 9C13 94               sub h
 235+ 9C14 20 04            jr nz,4F
 236+ 9C16
 237+ 9C16 0E 01            ld c,1
 238+ 9C18 18 1B            jr 5F
 239+ 9C1A
 240+ 9C1A 47           4 ld b,a
 241+ 9C1B
 242+ 9C1B 3E DF            ld a,$df
 243+ 9C1D BD               cp l
 244+ 9C1E 38 04            jr c,1F
 245+ 9C20
 246+ 9C20 3E 08            ld a,8
 247+ 9C22 80               add b
 248+ 9C23 47               ld b,a
 249+ 9C24
 250+ 9C24              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 251+ 9C24              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 252+ 9C24
 253+ 9C24 48           1 ld c,b
 254+ 9C25 0C               inc c
 255+ 9C26
 256+ 9C26 CD 6A 92     3 call NextScan
 257+ 9C29 EB               ex de,hl
 258+ 9C2A
 259+ 9C2A 73               ld (hl),e
 260+ 9C2B 2C               inc l
 261+ 9C2C 72               ld (hl),d
 262+ 9C2D 2C               inc l
 263+ 9C2E
 264+ 9C2E EB               ex de,hl
 265+ 9C2F
 266+ 9C2F 10 F5            djnz 3B
 267+ 9C31
 268+ 9C31 ED 53 15 8B      ld (Scanlines_album_SP),de
 269+ 9C35
 270+ 9C35 08           5 ex af,af
 271+ 9C36 F5               push af
 272+ 9C37 E1               pop hl
 273+ 9C38
 274+ 9C38 71               ld (hl),c
 275+ 9C39
 276+ 9C39 C9               ret
 277+ 9C3A
 278+ 9C3A              ; -----------------------------------------------------------------------------
 279+ 9C3A              ;
 280+ 9C3A              ;   21/11/23
 281+ 9C3A
 282+ 9C3A              Limpia_y_reinicia_Scanlines_album
 283+ 9C3A
 284+ 9C3A              ;   Limpia Scanlines_album.
 285+ 9C3A
 286+ 9C3A 2A 15 8B         ld hl,(Scanlines_album_SP)
 287+ 9C3D 7D               ld a,l
 288+ 9C3E A7               and a
 289+ 9C3F C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 9C40
 291+ 9C40 47               ld b,a
 292+ 9C41 04               inc b
 293+ 9C42
 294+ 9C42 36 00        1 ld (hl),0
 295+ 9C44 2D               dec l
 296+ 9C45 10 FB            djnz 1B
 297+ 9C47
 298+ 9C47              ;   Reinicializa (Scanlines_album_SP).
 299+ 9C47
 300+ 9C47 21 00 80         ld hl,Scanlines_album
 301+ 9C4A 22 15 8B         ld (Scanlines_album_SP),hl
 302+ 9C4D
 303+ 9C4D C9               ret
 304+ 9C4E
 305+ 9C4E              ; -----------------------------------------------------------------------------
 306+ 9C4E              ;
 307+ 9C4E              ;   11/03/24
 308+ 9C4E              ;
 309+ 9C4E
 310+ 9C4E              Pinta_Sprites
 311+ 9C4E
 312+ 9C4E 2A 15 8B         ld hl,(Scanlines_album_SP)
 313+ 9C51 CD DC 8C         call Extrae_address
 314+ 9C54
 315+ 9C54 24               inc h
 316+ 9C55 25               dec h
 317+ 9C56 C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 318+ 9C57
 319+ 9C57 ED 73 09 8B      ld (Stack),sp
 320+ 9C5B
 321+ 9C5B EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 322+ 9C5C              ;                                       ; DE se encuentra en los datos del sprite.
 323+ 9C5C 2C               inc l
 324+ 9C5D 2C               inc l
 325+ 9C5E
 326+ 9C5E 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 327+ 9C5F
 328+ 9C5F 2C               inc l
 329+ 9C60 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 330+ 9C61
 331+ 9C61              ;   Seleccionamos rutina de impresión:
 332+ 9C61
 333+ 9C61 3E 10            ld a,16
 334+ 9C63 B8               cp b
 335+ 9C64 C2 62 9D         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 336+ 9C67
 337+ 9C67              ;   Rutinas:
 338+ 9C67
 339+ 9C67              Pinta_rapido    ;   1520 t/states.
 340+ 9C67
 341+ 9C67 E1               pop hl
 342+ 9C68
 343+ 9C68 1A               ld a,(de)
 344+ 9C69 AE               xor (hl)
 345+ 9C6A 77               ld (hl),a
 346+ 9C6B 2C               inc l
 347+ 9C6C 1C               inc e
 348+ 9C6D 1A               ld a,(de)
 349+ 9C6E AE               xor (hl)
 350+ 9C6F 77               ld (hl),a
 351+ 9C70 2C               inc l
 352+ 9C71 1C               inc e
 353+ 9C72 1A               ld a,(de)
 354+ 9C73 AE               xor (hl)
 355+ 9C74 77               ld (hl),a
 356+ 9C75 13               inc de
 357+ 9C76
 358+ 9C76 E1               pop hl
 359+ 9C77
 360+ 9C77 1A               ld a,(de)
 361+ 9C78 AE               xor (hl)
 362+ 9C79 77               ld (hl),a
 363+ 9C7A 2C               inc l
 364+ 9C7B 1C               inc e
 365+ 9C7C 1A               ld a,(de)
 366+ 9C7D AE               xor (hl)
 367+ 9C7E 77               ld (hl),a
 368+ 9C7F 2C               inc l
 369+ 9C80 1C               inc e
 370+ 9C81 1A               ld a,(de)
 371+ 9C82 AE               xor (hl)
 372+ 9C83 77               ld (hl),a
 373+ 9C84 13               inc de
 374+ 9C85
 375+ 9C85 E1               pop hl
 376+ 9C86
 377+ 9C86 1A               ld a,(de)
 378+ 9C87 AE               xor (hl)
 379+ 9C88 77               ld (hl),a
 380+ 9C89 2C               inc l
 381+ 9C8A 1C               inc e
 382+ 9C8B 1A               ld a,(de)
 383+ 9C8C AE               xor (hl)
 384+ 9C8D 77               ld (hl),a
 385+ 9C8E 2C               inc l
 386+ 9C8F 1C               inc e
 387+ 9C90 1A               ld a,(de)
 388+ 9C91 AE               xor (hl)
 389+ 9C92 77               ld (hl),a
 390+ 9C93 13               inc de
 391+ 9C94
 392+ 9C94 E1               pop hl
 393+ 9C95
 394+ 9C95 1A               ld a,(de)
 395+ 9C96 AE               xor (hl)
 396+ 9C97 77               ld (hl),a
 397+ 9C98 2C               inc l
 398+ 9C99 1C               inc e
 399+ 9C9A 1A               ld a,(de)
 400+ 9C9B AE               xor (hl)
 401+ 9C9C 77               ld (hl),a
 402+ 9C9D 2C               inc l
 403+ 9C9E 1C               inc e
 404+ 9C9F 1A               ld a,(de)
 405+ 9CA0 AE               xor (hl)
 406+ 9CA1 77               ld (hl),a
 407+ 9CA2 13               inc de
 408+ 9CA3
 409+ 9CA3 E1               pop hl
 410+ 9CA4
 411+ 9CA4 1A               ld a,(de)
 412+ 9CA5 AE               xor (hl)
 413+ 9CA6 77               ld (hl),a
 414+ 9CA7 2C               inc l
 415+ 9CA8 1C               inc e
 416+ 9CA9 1A               ld a,(de)
 417+ 9CAA AE               xor (hl)
 418+ 9CAB 77               ld (hl),a
 419+ 9CAC 2C               inc l
 420+ 9CAD 1C               inc e
 421+ 9CAE 1A               ld a,(de)
 422+ 9CAF AE               xor (hl)
 423+ 9CB0 77               ld (hl),a
 424+ 9CB1 13               inc de
 425+ 9CB2
 426+ 9CB2 E1               pop hl
 427+ 9CB3
 428+ 9CB3 1A               ld a,(de)
 429+ 9CB4 AE               xor (hl)
 430+ 9CB5 77               ld (hl),a
 431+ 9CB6 2C               inc l
 432+ 9CB7 1C               inc e
 433+ 9CB8 1A               ld a,(de)
 434+ 9CB9 AE               xor (hl)
 435+ 9CBA 77               ld (hl),a
 436+ 9CBB 2C               inc l
 437+ 9CBC 1C               inc e
 438+ 9CBD 1A               ld a,(de)
 439+ 9CBE AE               xor (hl)
 440+ 9CBF 77               ld (hl),a
 441+ 9CC0 13               inc de
 442+ 9CC1
 443+ 9CC1 E1               pop hl
 444+ 9CC2
 445+ 9CC2 1A               ld a,(de)
 446+ 9CC3 AE               xor (hl)
 447+ 9CC4 77               ld (hl),a
 448+ 9CC5 2C               inc l
 449+ 9CC6 1C               inc e
 450+ 9CC7 1A               ld a,(de)
 451+ 9CC8 AE               xor (hl)
 452+ 9CC9 77               ld (hl),a
 453+ 9CCA 2C               inc l
 454+ 9CCB 1C               inc e
 455+ 9CCC 1A               ld a,(de)
 456+ 9CCD AE               xor (hl)
 457+ 9CCE 77               ld (hl),a
 458+ 9CCF 13               inc de
 459+ 9CD0
 460+ 9CD0 E1               pop hl
 461+ 9CD1
 462+ 9CD1 1A               ld a,(de)
 463+ 9CD2 AE               xor (hl)
 464+ 9CD3 77               ld (hl),a
 465+ 9CD4 2C               inc l
 466+ 9CD5 1C               inc e
 467+ 9CD6 1A               ld a,(de)
 468+ 9CD7 AE               xor (hl)
 469+ 9CD8 77               ld (hl),a
 470+ 9CD9 2C               inc l
 471+ 9CDA 1C               inc e
 472+ 9CDB 1A               ld a,(de)
 473+ 9CDC AE               xor (hl)
 474+ 9CDD 77               ld (hl),a
 475+ 9CDE 13               inc de
 476+ 9CDF
 477+ 9CDF E1               pop hl
 478+ 9CE0
 479+ 9CE0 1A               ld a,(de)
 480+ 9CE1 AE               xor (hl)
 481+ 9CE2 77               ld (hl),a
 482+ 9CE3 2C               inc l
 483+ 9CE4 1C               inc e
 484+ 9CE5 1A               ld a,(de)
 485+ 9CE6 AE               xor (hl)
 486+ 9CE7 77               ld (hl),a
 487+ 9CE8 2C               inc l
 488+ 9CE9 1C               inc e
 489+ 9CEA 1A               ld a,(de)
 490+ 9CEB AE               xor (hl)
 491+ 9CEC 77               ld (hl),a
 492+ 9CED 13               inc de
 493+ 9CEE
 494+ 9CEE E1               pop hl
 495+ 9CEF
 496+ 9CEF 1A               ld a,(de)
 497+ 9CF0 AE               xor (hl)
 498+ 9CF1 77               ld (hl),a
 499+ 9CF2 2C               inc l
 500+ 9CF3 1C               inc e
 501+ 9CF4 1A               ld a,(de)
 502+ 9CF5 AE               xor (hl)
 503+ 9CF6 77               ld (hl),a
 504+ 9CF7 2C               inc l
 505+ 9CF8 1C               inc e
 506+ 9CF9 1A               ld a,(de)
 507+ 9CFA AE               xor (hl)
 508+ 9CFB 77               ld (hl),a
 509+ 9CFC 13               inc de
 510+ 9CFD
 511+ 9CFD E1               pop hl
 512+ 9CFE
 513+ 9CFE 1A               ld a,(de)
 514+ 9CFF AE               xor (hl)
 515+ 9D00 77               ld (hl),a
 516+ 9D01 2C               inc l
 517+ 9D02 1C               inc e
 518+ 9D03 1A               ld a,(de)
 519+ 9D04 AE               xor (hl)
 520+ 9D05 77               ld (hl),a
 521+ 9D06 2C               inc l
 522+ 9D07 1C               inc e
 523+ 9D08 1A               ld a,(de)
 524+ 9D09 AE               xor (hl)
 525+ 9D0A 77               ld (hl),a
 526+ 9D0B 13               inc de
 527+ 9D0C
 528+ 9D0C E1               pop hl
 529+ 9D0D
 530+ 9D0D 1A               ld a,(de)
 531+ 9D0E AE               xor (hl)
 532+ 9D0F 77               ld (hl),a
 533+ 9D10 2C               inc l
 534+ 9D11 1C               inc e
 535+ 9D12 1A               ld a,(de)
 536+ 9D13 AE               xor (hl)
 537+ 9D14 77               ld (hl),a
 538+ 9D15 2C               inc l
 539+ 9D16 1C               inc e
 540+ 9D17 1A               ld a,(de)
 541+ 9D18 AE               xor (hl)
 542+ 9D19 77               ld (hl),a
 543+ 9D1A 13               inc de
 544+ 9D1B
 545+ 9D1B E1               pop hl
 546+ 9D1C
 547+ 9D1C 1A               ld a,(de)
 548+ 9D1D AE               xor (hl)
 549+ 9D1E 77               ld (hl),a
 550+ 9D1F 2C               inc l
 551+ 9D20 1C               inc e
 552+ 9D21 1A               ld a,(de)
 553+ 9D22 AE               xor (hl)
 554+ 9D23 77               ld (hl),a
 555+ 9D24 2C               inc l
 556+ 9D25 1C               inc e
 557+ 9D26 1A               ld a,(de)
 558+ 9D27 AE               xor (hl)
 559+ 9D28 77               ld (hl),a
 560+ 9D29 13               inc de
 561+ 9D2A
 562+ 9D2A E1               pop hl
 563+ 9D2B
 564+ 9D2B 1A               ld a,(de)
 565+ 9D2C AE               xor (hl)
 566+ 9D2D 77               ld (hl),a
 567+ 9D2E 2C               inc l
 568+ 9D2F 1C               inc e
 569+ 9D30 1A               ld a,(de)
 570+ 9D31 AE               xor (hl)
 571+ 9D32 77               ld (hl),a
 572+ 9D33 2C               inc l
 573+ 9D34 1C               inc e
 574+ 9D35 1A               ld a,(de)
 575+ 9D36 AE               xor (hl)
 576+ 9D37 77               ld (hl),a
 577+ 9D38 13               inc de
 578+ 9D39
 579+ 9D39 E1               pop hl
 580+ 9D3A
 581+ 9D3A 1A               ld a,(de)
 582+ 9D3B AE               xor (hl)
 583+ 9D3C 77               ld (hl),a
 584+ 9D3D 2C               inc l
 585+ 9D3E 1C               inc e
 586+ 9D3F 1A               ld a,(de)
 587+ 9D40 AE               xor (hl)
 588+ 9D41 77               ld (hl),a
 589+ 9D42 2C               inc l
 590+ 9D43 1C               inc e
 591+ 9D44 1A               ld a,(de)
 592+ 9D45 AE               xor (hl)
 593+ 9D46 77               ld (hl),a
 594+ 9D47 13               inc de
 595+ 9D48
 596+ 9D48 E1               pop hl
 597+ 9D49
 598+ 9D49 1A               ld a,(de)
 599+ 9D4A AE               xor (hl)
 600+ 9D4B 77               ld (hl),a
 601+ 9D4C 2C               inc l
 602+ 9D4D 1C               inc e
 603+ 9D4E 1A               ld a,(de)
 604+ 9D4F AE               xor (hl)
 605+ 9D50 77               ld (hl),a
 606+ 9D51 2C               inc l
 607+ 9D52 1C               inc e
 608+ 9D53 1A               ld a,(de)
 609+ 9D54 AE               xor (hl)
 610+ 9D55 77               ld (hl),a
 611+ 9D56 13               inc de
 612+ 9D57
 613+ 9D57 ED 73 15 8B  2 ld (Scanlines_album_SP),sp
 614+ 9D5B ED 7B 09 8B      ld sp,(Stack)
 615+ 9D5F C3 4E 9C         jp Pinta_Sprites
 616+ 9D62
 617+ 9D62              Pinta_lento
 618+ 9D62
 619+ 9D62 E1           1 pop hl
 620+ 9D63
 621+ 9D63 1A               ld a,(de)
 622+ 9D64 AE               xor (hl)
 623+ 9D65 77               ld (hl),a
 624+ 9D66 2C               inc l
 625+ 9D67 1C               inc e
 626+ 9D68 1A               ld a,(de)
 627+ 9D69 AE               xor (hl)
 628+ 9D6A 77               ld (hl),a
 629+ 9D6B 2C               inc l
 630+ 9D6C 1C               inc e
 631+ 9D6D 1A               ld a,(de)
 632+ 9D6E AE               xor (hl)
 633+ 9D6F 77               ld (hl),a
 634+ 9D70 13               inc de
 635+ 9D71
 636+ 9D71 10 EF            djnz 1B
 637+ 9D73
 638+ 9D73 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1841  9D75
1842  9D75              	SAVESNA "Pruebas.sna", START
1843  9D75
1844  9D75
1845  9D75
1846  9D75
# file closed: Banco_de_pruebas.asm
