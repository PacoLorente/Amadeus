# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 42 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
<<<<<<< HEAD
198+  84FA 7E 50        	defw $507e                                      ; (Posicion_inicio).
199+  84FC 04           	db 4											; (Cuad_objeto).
=======
198+  84FA 61 47        	defw $4761                                      ; (Posicion_inicio).
199+  84FC 01           	db 1											; (Cuad_objeto).
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
200+  84FD
201+  84FD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
<<<<<<< HEAD
215+  8517 D0 94 00 00  	defw Indice_mov_Izquierda_y_derecha,0  	  		; (Puntero_indice_mov) / (Puntero_mov).
=======
215+  8517 C9 94 00 00  	defw Indice_mov_Escaloncitos_derecha_abajo,0  	; (Puntero_indice_mov) / (Puntero_mov).
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
<<<<<<< HEAD
254+  8551 E4 94 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
=======
254+  8551 CF 94 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
<<<<<<< HEAD
293+  858B D4 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
=======
293+  858B BF 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 CD 50        Posicion_inicio defw $50cd								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 03           Cuad_objeto db 3										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
<<<<<<< HEAD
135   85C5 00 00        Puntero_indice_mov defw 0
=======
135   85C5 BB 94        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1 00           Numero_de_disparotes db 0
194   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
195   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
196   85E6 00           Impacto db 0											; Este byte indica que se ha producido impacto:
197   85E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
198   85E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
199   85E7 00 00        Direccion_de_impacto defw 0								; Esta variable almacena la direccíon de mem. de pantalla donde se ha producido_
200   85E9              ;														; _ el impacto.
201   85E9
202   85E9              ; Gestión de FRAMES.
203   85E9
204   85E9 00           Switch db 0
205   85EA
206   85EA              ; Variables de Raster y localización en pantalla.
207   85EA
208   85EA 00 FF        Temp_Raster defw $ff00
209   85EC
210   85EC              ; Rutina principal *************************************************************************************************************************************************************************
211   85EC              ;
212   85EC              ;	14/11/22
213   85EC
214   85EC 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
215   85EF
216   85EF 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
217   85F1 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
218   85F3 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
219   85F5 F3           	DI
220   85F6
221   85F6 3E 01        	ld a,1
222   85F8 D3 FE        	out ($fe),a
223   85FA
224   85FA 3E 07        	ld a,%00000111
<<<<<<< HEAD
225   85FC CD FD 90     	call Cls
226   85FF
227   85FF              ;	call Pinta_FILAS
228   85FF
229   85FF CD 4C 88     	call Pulsa_ENTER
=======
225   85FC CD F9 90     	call Cls
226   85FF
227   85FF              ;	call Pinta_FILAS
228   85FF
229   85FF CD 4A 88     	call Pulsa_ENTER
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
230   8602
231   8602 21 D7 85     	ld hl,Numero_de_entidades
232   8605 46           	ld b,(hl)
233   8606 04           	inc b
234   8607 05           	dec b
235   8608 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
236   860A
237   860A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
238   860A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
239   860A              ;	Pintamos el resto de entidades:
240   860A
<<<<<<< HEAD
241   860A CD 45 87     	call Inicia_punteros_de_entidades
=======
241   860A CD 43 87     	call Inicia_punteros_de_entidades
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
242   860D
243   860D              ;	INICIA ENTIDADES!!!!!
244   860D
245   860D C5           1 push bc  												; Guardo el contador de entidades.
<<<<<<< HEAD
246   860E CD 9F 87      	call Inicia_Puntero_objeto
247   8611 CD 4D 8B     	call Draw
248   8614 CD A0 7F     	call Guarda_foto_registros
249   8617 CD E7 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
=======
246   860E CD 9D 87      	call Inicia_Puntero_objeto
247   8611 CD 49 8B     	call Draw
248   8614 CD A0 7F     	call Guarda_foto_registros
249   8617 CD E5 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
250   861A C1           	pop bc
251   861B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
252   861D
253   861D              ;
254   861D
<<<<<<< HEAD
255   861D
256   861D
257   861D
258   861D
259   861D
260   861D
261   861D
262   861D
263   861D              ; 	INICIA AMADEUS!!!!!
264   861D
265   861D CD 28 88     3 call Restore_Amadeus
266   8620 CD 9F 87     	call Inicia_Puntero_objeto
267   8623 CD 4D 8B     	call Draw
268   8626 CD A0 7F     	call Guarda_foto_registros
269   8629 CD 3A 88     	call Store_Amadeus
270   862C
271   862C              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
272   862C
273   862C CD 5B 87     	call Inicia_Puntero_Disparo_Entidades
274   862F CD 62 87     	call Inicia_Puntero_Disparo_Amadeus
275   8632
276   8632              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
277   8632
278   8632 CD 45 87     	call Inicia_punteros_de_entidades
279   8635 CD 16 88     	call Restore_Primera_entidad
280   8638
281   8638 3A D7 85     	ld a,(Numero_de_entidades)
282   863B 3C           	inc a
283   863C 32 D8 85     	ld (Numero_de_malotes),a
284   863F
285   863F FB           2 ei
286   8640 18 FD        	jr 2B
287   8642
288   8642              ; -----------------------------------------------------------------------------------
289   8642
290   8642              Frame
291   8642
292   8642              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
293   8642              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
294   8642
295   8642 3E 02            ld a,2
296   8644 D3 FE            out ($fe),a
297   8646 CD 51 8E     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
298   8649 CD 8A 8E     	call Extrae_foto_disparos
299   864C 3E 01            ld a,1
300   864E D3 FE            out ($fe),a
301   8650
302   8650              ; ----------------------------------------------------------------------
303   8650
304   8650              ;	Existe colisión?????
305   8650
306   8650 3A E6 85     	ld a,(Impacto)
307   8653 A7           	and a
308   8654 28 02        	jr z,5F
309   8656
310   8656              ; A="1" Impacto en entidad.
311   8656              ; A="2"	Impacto en Amadeus.
312   8656
313   8656 18 FE        	jr $
314   8658
315   8658
316   8658
317   8658 CD 31 8A     5 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
318   865B CD 4F 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
319   865E
320   865E 21 00 70     	ld hl,Album_de_fotos
321   8661 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
322   8664              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
323   8664 3A D7 85         ld a,(Numero_de_entidades)
324   8667 47               ld b,a
325   8668 A7           	and a
326   8669 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
327   866B
328   866B C5           2 push bc
329   866C CD B8 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
330   866F 3A C3 85     	ld a,(Ctrl_0)
331   8672 CB 67        	bit 4,a
332   8674 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
333   8676
334   8676              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
335   8676              ; Las entidades sólo generan disparo cuando se mueven.
336   8676              ; 16/02/23.
337   8676              ; [[[
338   8676 CD 83 88     	call Detecta_disparo_entidad
339   8679              ; ]]]
340   8679 CD 0C 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
341   867C
342   867C 21 C3 85     1 ld hl,Ctrl_0
343   867F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
344   8681 AF           	xor a
345   8682 32 C4 85     	ld (Obj_dibujado),a
346   8685 CD E7 87     	call Store_Restore_entidades
347   8688 C1           	pop bc
348   8689 10 E0        	djnz 2B
349   868B
350   868B              ; Tras la gestión de las entidades, ... AMADEUS.
351   868B
352   868B CD 28 88     4 call Restore_Amadeus
353   868E CD DD 86     	call Mov_Amadeus
354   8691 3A C3 85     	ld a,(Ctrl_0)
355   8694 CB 67        	bit 4,a
356   8696 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
357   8698 CD 0C 87     	call Guarda_foto_entidad_a_pintar
358   869B
359   869B 21 C3 85     3 ld hl,Ctrl_0
360   869E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
361   86A0 AF           	xor a
362   86A1 32 C4 85     	ld (Obj_dibujado),a
363   86A4 CD 3A 88     	call Store_Amadeus
364   86A7
365   86A7              ; -----
366   86A7
367   86A7 CD 45 87     	call Inicia_punteros_de_entidades
368   86AA CD 16 88     	call Restore_Primera_entidad
369   86AD
370   86AD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
371   86AD
372   86AD CD 69 87     	call Calcula_numero_de_malotes
373   86B0 CD 81 87     	call Calcula_numero_de_disparotes
374   86B3
375   86B3 3E 04        	ld a,4
376   86B5 D3 FE        	out ($fe),a
377   86B7 C9           	ret
378   86B8
379   86B8              ; --------------------------------------------------------------------------------------------------------------
380   86B8              ;
381   86B8              ;	27/03/23
382   86B8
383   86B8              Mov_obj
384   86B8
385   86B8              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
386   86B8
387   86B8 AF           	xor a
388   86B9 32 C4 85     	ld (Obj_dibujado),a
389   86BC CD 16 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
390   86BF              ;														; Obj_dibujado="0".
391   86BF              ; Movemos Entidades malignas.
392   86BF
393   86BF 2A C5 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
394   86C2 24           	inc h                                               ; Salimos de la rutina.
395   86C3 25           	dec h
396   86C4 C8           	ret z
397   86C5
398   86C5 CD E6 94     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
399   86C8 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
400   86CB CB 67        	bit 4,a
401   86CD C8           	ret z
402   86CE
403   86CE              ; ---------
404   86CE
405   86CE 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
406   86D0 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
407   86D3 CD 16 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
408   86D6 CD 2D 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
409   86D9 CD FC 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
410   86DC C9           	ret													; _de la misma.
411   86DD
412   86DD              ; --------------------------------------------------------------------------------------------------------------
413   86DD              ;
414   86DD              ;	29/1/23
415   86DD
416   86DD              Mov_Amadeus
417   86DD
418   86DD AF           	xor a
419   86DE 32 C4 85     	ld (Obj_dibujado),a
420   86E1 CD 16 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
421   86E4              ;														; Obj_dibujado="0".
422   86E4              ; Movemos Amadeus.
423   86E4
424   86E4 CD 60 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
425   86E7 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
426   86EA CB 67        	bit 4,a
427   86EC C8           	ret z
428   86ED
429   86ED              ; ---------
430   86ED
431   86ED 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
432   86EF 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
433   86F2 CD 16 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
434   86F5 CD 2D 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
435   86F8 CD FC 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
436   86FB C9           	ret													; _de la nave.
437   86FC
438   86FC              ; --------------------------------------------------------------------------------------------------------------
439   86FC              ;
440   86FC              ;	31/01/23
441   86FC              ;
442   86FC              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
443   86FC
444   86FC              Guarda_foto_entidad_a_borrar
445   86FC
446   86FC CD 27 8E     	call Prepara_draw
447   86FF CD 61 8D     	call calcula_CColumnass
448   8702 CD 98 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
449   8705 CD ED 8D     	call Define_rutina_de_impresion
450   8708 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
451   870B C9           	ret
452   870C
453   870C              ; --------------------------------------------------------------------------------------------------------------
454   870C              ;
455   870C              ;	31/01/23
456   870C              ;
457   870C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
458   870C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
459   870C
460   870C              Guarda_foto_entidad_a_pintar
461   870C
462   870C CD 39 87     	call Repone_pintar
463   870F CD 4D 8B     	call Draw
464   8712 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
465   8715 C9           	ret
466   8716
467   8716              ; --------------------------------------------------------------------------------------------------------------
468   8716              ;
469   8716              ;
470   8716
471   8716 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
472   8719 3A C4 85     	ld a,(Obj_dibujado)
473   871C A7           	and a
474   871D 28 05        	jr z,1F
475   871F 11 B9 85     	ld de,Variables_de_pintado
476   8722 18 03        	jr 2F
477   8724 11 AF 85     1 ld de,Variables_de_borrado
478   8727 01 08 00     2 ld bc,8
479   872A ED B0        	ldir
480   872C C9           	ret
481   872D
482   872D              ; --------------------------------------------------------------------------------------------------------------
483   872D
484   872D 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
485   8730 11 96 85     	ld de,Filas
486   8733 01 08 00     	ld bc,8
487   8736 ED B0        	ldir
488   8738 C9           	ret
489   8739
490   8739 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
491   873C 11 96 85     	ld de,Filas
492   873F 01 08 00     	ld bc,8
493   8742 ED B0        	ldir
494   8744 C9           	ret
495   8745
496   8745              ; *************************************************************************************************************************************************************
497   8745              ;
498   8745              ; 8/1/23
499   8745              ;
500   8745              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
501   8745              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
502   8745              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
503   8745
504   8745              ; Destruye HL y DE !!!!!
505   8745
506   8745              Inicia_punteros_de_entidades
507   8745
508   8745 21 68 84     	ld hl,Indice_de_entidades
509   8748 CD 99 87         call Extrae_address
510   874B 22 D1 85         ld (Puntero_store_entidades),hl
511   874E 21 6A 84     	ld hl,Indice_de_entidades+2
512   8751 22 D5 85     	ld (Indice_restore),hl
513   8754 CD 99 87     	call Extrae_address
514   8757 22 D3 85     	ld (Puntero_restore_entidades),hl
515   875A C9               ret
516   875B
517   875B              ; *************************************************************************************************************************************************************
518   875B              ;
519   875B              ; 8/1/23
520   875B              ;
521   875B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
522   875B
523   875B 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
524   875E 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
525   8761 C9           	ret
526   8762 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
527   8765 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
528   8768 C9           	ret
529   8769
530   8769              ; -------------------------------------------------------------------------------------------------------------
531   8769              ;
532   8769              ; 28/2/23
533   8769              ;
534   8769
535   8769              Calcula_numero_de_malotes
536   8769
537   8769 21 00 70     	ld hl,Album_de_fotos
538   876C EB           	ex de,hl
539   876D 2A DD 85     	ld hl,(Stack_snapshot)
540   8770
541   8770 06 00        	ld b,0
542   8772 7D           	ld a,l
543   8773 93           	sub e
544   8774 28 07        	jr z,1F
545   8776
546   8776              ; Nº de malotes no es "0".
547   8776
548   8776 D6 06        2 sub 6
549   8778 04           	inc b
550   8779 A7           	and a
551   877A 20 FA        	jr nz,2B
552   877C 78           	ld a,b
553   877D
554   877D 32 D8 85     1 ld (Numero_de_malotes),a
555   8780 C9           	ret
556   8781
557   8781              ; -------------------------------------------------------------------------------------------------------------
558   8781              ;
559   8781              ; 28/2/23
560   8781              ;
561   8781
562   8781              Calcula_numero_de_disparotes
563   8781
564   8781 21 60 70     	ld hl,Album_de_fotos_disparos
565   8784 EB           	ex de,hl
566   8785 2A DF 85     	ld hl,(Stack_snapshot_disparos)
567   8788
568   8788 06 00        	ld b,0
569   878A 7D           	ld a,l
570   878B 93           	sub e
571   878C 28 07        	jr z,1F
572   878E
573   878E              ; Nº de malotes no es "0".
574   878E
575   878E D6 06        2 sub 6
576   8790 04           	inc b
577   8791 A7           	and a
578   8792 20 FA        	jr nz,2B
579   8794 78           	ld a,b
580   8795
581   8795 32 E1 85     1 ld (Numero_de_disparotes),a
582   8798 C9           	ret
583   8799              ; *************************************************************************************************************************************************************
584   8799              ;
585   8799              ; 20/10/22
586   8799              ;
587   8799              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
588   8799              ;
589   8799              ; Destruye el puntero y DE !!!!!
590   8799
591   8799 5E           Extrae_address ld e,(hl)
592   879A 23           	inc hl
593   879B 56           	ld d,(hl)
594   879C 2B           	dec hl
595   879D EB           	ex de,hl
596   879E C9           	ret
597   879F
598   879F              ; *************************************************************************************************************************************************************
599   879F              ;
600   879F              ;	7/2/23
601   879F              ;
602   879F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
603   879F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
604   879F              ;
605   879F              ;   Destruye HL y BC !!!!!,
606   879F              ;
607   879F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
608   879F              ;					"0" ..... Izquierda.
609   879F
610   879F              Inicia_Puntero_objeto
611   879F
612   879F 3A AA 85     	ld a,(Cuad_objeto)
613   87A2 E6 01        	and 1
614   87A4 F5           	push af
615   87A5 CC C3 87     	call z,Inicia_puntero_objeto_izq
616   87A8 F1           	pop af
617   87A9 28 2B        	jr z,1F
618   87AB CD B0 87     	call Inicia_puntero_objeto_der
619   87AE 18 26        	jr 1F
620   87B0
621   87B0              ; Arrancamos desde la parte izquierda de la pantalla.
622   87B0              ; Iniciamos (Indice_Sprite_der).
623   87B0
624   87B0 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
625   87B3 22 A4 85     	ld (Puntero_DESPLZ_der),hl
626   87B6 CD 99 87     	call Extrae_address
627   87B9 22 9A 85     	ld (Puntero_objeto),hl
628   87BC
629   87BC 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
630   87BF              ;	call Extrae_address
631   87BF 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
632   87C2 C9           	ret
633   87C3
634   87C3              ; Arrancamos desde la parte derecha de la pantalla.
635   87C3              ; Iniciamos (Indice_Sprite_izq).
636   87C3
637   87C3 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
638   87C6 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
639   87C9 CD 99 87     	call Extrae_address
640   87CC 22 9A 85     	ld (Puntero_objeto),hl
641   87CF
642   87CF 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
643   87D2              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
644   87D2 22 A4 85     	ld (Puntero_DESPLZ_der),hl
645   87D5 C9           	ret
646   87D6
647   87D6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
648   87D6
649   87D6 21 38 83     1 ld hl,Amadeus
650   87D9 ED 4B 9A 85  	ld bc,(Puntero_objeto)
651   87DD B7 ED 42     	sub hl,bc
652   87E0 C0           	ret nz
653   87E1 21 C3 85     	ld hl,Ctrl_0
654   87E4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
655   87E6 C9           	ret 												; _de nuestra nave en los extremos.
656   87E7
657   87E7              ; *************************************************************************************************************************************************************
658   87E7              ;
659   87E7              ;	8/1/23
660   87E7              ;
661   87E7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
662   87E7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
663   87E7
664   87E7              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
665   87E7              ;	_de la 2ª y 3ª entidad respectivamente.
666   87E7
667   87E7              Store_Restore_entidades
668   87E7
669   87E7 E5           	push hl
670   87E8 D5           	push de
671   87E9 C5            	push bc
672   87EA
673   87EA              ;	STORE !!!!!
674   87EA              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
675   87EA
676   87EA 21 96 85     	ld hl,Filas
677   87ED ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
678   87F1 01 3A 00     	ld bc,58
679   87F4 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
680   87F6
681   87F6              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
682   87F6
683   87F6 2A D3 85     	ld hl,(Puntero_restore_entidades)
684   87F9 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
685   87FC 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
686   87FF 01 3A 00     	ld bc,58
687   8802 ED B0        	ldir
688   8804
689   8804              ;	Incrementa RESTORE !!!!!
690   8804
691   8804 2A D5 85         ld hl,(Indice_restore)
692   8807 23           	inc hl
693   8808 23           	inc hl
694   8809 22 D5 85     	ld (Indice_restore),hl
695   880C CD 99 87         call Extrae_address
696   880F 22 D3 85         ld (Puntero_restore_entidades),hl
697   8812 C1           	pop bc
698   8813 D1           	pop de
699   8814 E1           	pop hl
700   8815 C9           	ret
701   8816
702   8816              ; **************************************************************************************************
703   8816              ;
704   8816              ;	29/10/22
705   8816              ;
706   8816              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
707   8816
708   8816 E5           Restore_Primera_entidad push hl
709   8817 D5           	push de
710   8818 C5            	push bc
711   8819 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
712   881C 11 96 85     	ld de,Filas
713   881F 01 3A 00     	ld bc,58
714   8822 ED B0        	ldir
715   8824 C1           	pop bc
716   8825 D1           	pop de
717   8826 E1           	pop hl
718   8827 C9           	ret
719   8828
720   8828              ; **************************************************************************************************
721   8828              ;
722   8828              ;	25/01/23
723   8828              ;
724   8828              ;	Restore_Amadeus
725   8828              ;
726   8828              ;	Cargamos en DRAW los parámetros de Amadeus.
727   8828              ;
728   8828
729   8828 E5           Restore_Amadeus	push hl
730   8829 D5           	push de
731   882A C5            	push bc
732   882B 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
733   882E 11 96 85     	ld de,Filas
734   8831 01 3A 00     	ld bc,58
735   8834 ED B0        	ldir
736   8836 C1           	pop bc
737   8837 D1           	pop de
738   8838 E1           	pop hl
739   8839 C9           	ret
740   883A
741   883A              ; *************************************************************************************************************************************************************
742   883A              ;
743   883A              ;	29/01/23
744   883A              ;
745   883A              ;	Store_Amadeus
746   883A              ;
747   883A              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
748   883A              ;
749   883A
750   883A E5           Store_Amadeus push hl
751   883B D5           	push de
752   883C C5            	push bc
753   883D 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
754   8840 11 74 84     	ld de,Amadeus_db
755   8843 01 3A 00     	ld bc,58
756   8846 ED B0        	ldir
757   8848 C1           	pop bc
758   8849 D1           	pop de
759   884A E1           	pop hl
760   884B C9           	ret
761   884C
762   884C              ; **************************************************************************************************
763   884C
764   884C              ; Teclado.
765   884C
766   884C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
767   884E DB FE        	in a,($fe)
768   8850 E6 01        	and $01
769   8852 28 02        	jr z,1f
770   8854 18 F6        	jr Pulsa_ENTER
771   8856 C9           1 ret
772   8857
773   8857              ; **************************************************************************************************
774   8857              ;
775   8857              ; Temporización.
776   8857
777   8857              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
778   8857              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
779   8857              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
780   8857              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
781   8857
782   8857              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
783   8857              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
784   8857              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
785   8857
786   8857              ; A partir de $4f61 no hace falta DELAY.
787   8857
788   8857              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
789   8857
790   8857 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
791   885A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
792   885B 78           	LD A,B
793   885C A7           	AND A
794   885D 20 FB        	JR NZ,wait
795   885F C9           	RET
796   8860
797   8860              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
798   8860              ;
799   8860              ;	5/3/23
800   8860              ;
801   8860              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
802   8860
803   8860              Movimiento_Amadeus
804   8860
805   8860              ; Disparo.
806   8860
807   8860 3E F7        	ld a,$f7												; "5" para disparar.
808   8862 DB FE        	in a,($fe)
809   8864 E6 10        	and $10
810   8866 CC B7 88     	call z,Genera_disparo
811   8869
812   8869 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
813   886B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
814   886D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
815   886F CC 8B 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
816   8872 3E F7        	ld a,$f7
817   8874 DB FE        	in a,($fe)
818   8876 E6 01        	and $01
819   8878 C8           	ret z
820   8879
821   8879 3E F7        	ld a,$f7
822   887B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
823   887D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
824   887F CC 6D 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
825   8882 C9           	ret
826   8883
827   8883              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
828   8883              ;
829   8883              ;	Rutina provisional para que los malotes cagen balas.
830   8883
831   8883 3E 7F        Detecta_disparo_entidad ld a,$7f
832   8885 DB FE        	in a,($fe)
833   8887 E6 01        	and 1
834   8889 C0           	ret nz
835   888A CD B7 88     	call Genera_disparo
836   888D C9           	ret
837   888E
838   888E              ; Pinta indicadores de FILAS. ------------------------------------------------------
839   888E
840   888E 21 10 40     Pinta_FILAS ld hl,$4010
841   8891              ;	ld b,9
842   8891              ;2 push hl
843   8891              ;	push bc
844   8891 06 BF        	ld b,$bf
845   8893 36 80        1 ld (hl),%10000000
846   8895 CD 33 8E     	call NextScan
847   8898 10 F9        	djnz 1B
848   889A              ;	pop bc
849   889A              ;	pop hl
850   889A              ;	inc l
851   889A              ;	djnz 2B
852   889A 06 03        	ld b,3
853   889C 21 00 47         ld hl,$4700
854   889F CD A5 88     3 call Bucle_1
855   88A2 10 FB            djnz 3B
856   88A4 C9               ret
857   88A5
858   88A5 C5           Bucle_1 push bc
859   88A6 E5                   push hl
860   88A7 D1                   pop de
861   88A8 13                   inc de
862   88A9 01 FF 00             ld bc,255
863   88AC 36 FF                ld (hl),255
864   88AE ED B0                ldir
865   88B0 23                   inc hl
866   88B1 3E 07                ld a,7
867   88B3 84                   add a,h
868   88B4 67                   ld h,a
869   88B5 C1                   pop bc
870   88B6 C9                   ret
871   88B7
872   88B7              ; ---------------------------------------------------------------
873   88B7
874   88B7              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88B7              ; ******************************************************************************************************************************************************************************************
  2+  88B7              ;
  3+  88B7              ;   27/03/23
  4+  88B7              ;
  5+  88B7              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88B7              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88B7              ;
  8+  88B7              ;
  9+  88B7              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88B7              ;
 11+  88B7              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88B7              ;               _ hacen las entidades hacia abajo.
 13+  88B7              ;
 14+  88B7              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88B7              ;
 16+  88B7              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88B7              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88B7              ;
 19+  88B7              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88B7              ;           _ la bala.
 21+  88B7              ;
 22+  88B7              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88B7              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88B7              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88B7              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88B7              ;           _ en el momento de generarse la bala)).
 27+  88B7
 28+  88B7              Genera_disparo
 29+  88B7
 30+  88B7              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88B7              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88B7              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88B7              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88B7              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88B7              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88B7              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88B7
 38+  88B7              ; Exclusiones:
 39+  88B7
 40+  88B7 3A CC 85         ld a,(Columnas)
 41+  88BA 47               ld b,a
 42+  88BB 3A 97 85         ld a,(Columns)
 43+  88BE B8               cp b
 44+  88BF C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88C0
 46+  88C0              ; ----- ----- -----
 47+  88C0
 48+  88C0 3A C3 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88C3 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88C5 20 06            jr nz,16F
 51+  88C7
 52+  88C7 3A 9D 85         ld a,(Coordenada_y)
 53+  88CA FE 14            cp $14
 54+  88CC D0               ret nc
 55+  88CD
 56+  88CD              ; ----- ----- -----
 57+  88CD
 58+  88CD              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88CD
 60+  88CD 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88D0 CD 99 87         call Extrae_address
 62+  88D3 24               inc h
 63+  88D4 25               dec h
 64+  88D5 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88D7
 66+  88D7 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88DA A7               and a
 68+  88DB ED 52            sbc hl,de
 69+  88DD D0               ret nc
 70+  88DE
 71+  88DE              ; ----- ----- -----
 72+  88DE
 73+  88DE 21 00 80     14 ld hl,Indice_disparo
 74+  88E1 3A 9E 85         ld a,(CTRL_DESPLZ)
 75+  88E4 4F               ld c,a
 76+  88E5 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  88E7              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  88E7              ;                                            ""        ""       "f9", B="1"
 79+  88E7              ;                                            ""        ""       "fb", B="2"
 80+  88E7              ;                                            ""        ""       "fb", B="3"
 81+  88E7 A7               and a
 82+  88E8 28 10            jr z,1F
 83+  88EA E6 01            and 1
 84+  88EC C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  88ED
 86+  88ED 79               ld a,c
 87+  88EE 16 F9            ld d,$f9
 88+  88F0 23           2 inc hl
 89+  88F1 23               inc hl
 90+  88F2 04               inc b
 91+  88F3 BA               cp d
 92+  88F4 28 04            jr z,1F
 93+  88F6 14               inc d
 94+  88F7 14               inc d
 95+  88F8 18 F6            jr 2B
 96+  88FA
 97+  88FA CD 99 87     1 call Extrae_address
 98+  88FD E5               push hl
 99+  88FE FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  8900 DD 21 C6 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  8904
102+  8904              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  8904              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  8904
105+  8904 3A AA 85     	ld a,(Cuad_objeto)
106+  8907 FE 02            cp 2
107+  8909 38 60            jr c,3F
108+  890B 28 5E            jr z,3F
109+  890D
110+  890D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  890D
112+  890D E6 01            and 1
113+  890F 28 2D            jr z,4F
114+  8911
115+  8911              ; 	Estamos en el 3er cuadrante de pantalla.
116+  8911              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  8911              ;
118+  8911              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  8911              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  8911              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  8911
122+  8911 2A 98 85     	ld hl,(Posicion_actual)
123+  8914
124+  8914              ;   Amadeus o entidad ???.
125+  8914
126+  8914 3A C3 85         ld a,(Ctrl_0)
127+  8917 CB 77            bit 6,a
128+  8919 28 0D            jr z,8F
129+  891B
130+  891B              ; 	Dispara Amadeus.
131+  891B
132+  891B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  891D CD 42 8E         call PreviousScan
134+  8920 CD 42 8E         call PreviousScan
135+  8923
136+  8923              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  8923              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  8923              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  8923              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  8923
141+  8923 CD 95 89         call Ajusta_disparo_parte_izquierda
142+  8926 18 0E            jr 10F
143+  8928
144+  8928              ; 	Dispara Entidad.
145+  8928
146+  8928 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  892A
148+  892A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  892A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  892A
151+  892A C5               push bc
152+  892B 06 10            ld b,16
153+  892D CD 33 8E     9 call NextScan
154+  8930 10 FB            djnz 9B
155+  8932 C1               pop bc
156+  8933
157+  8933              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  8933              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  8933              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  8933              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  8933
162+  8933 CD 95 89         call Ajusta_disparo_parte_izquierda
163+  8936
164+  8936 CD 0A 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  8939              ;                                                   ; _al generar el disparo.
166+  8939
167+  8939              ; 	LLegados a este punto tendremos:
168+  8939              ;
169+  8939              ;       Puntero_objeto_disparo en IY.
170+  8939              ;       Rutinas_de_impresion en IX.
171+  8939              ;       Puntero_de_impresion en HL.
172+  8939              ;       Impacto/Dirección en BC.
173+  8939
174+  8939 CD 9D 89         call Almacena_disparo
175+  893C 18 4F            jr 6F                                           ; RET.
176+  893E
177+  893E
178+  893E              ; 	Estamos en el 4º cuadrante de pantalla.
179+  893E              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  893E              ;
181+  893E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  893E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  893E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  893E
185+  893E 2A 98 85     4 ld hl,(Posicion_actual)
186+  8941
187+  8941              ;   Amadeus o entidad ???.
188+  8941
189+  8941 3A C3 85         ld a,(Ctrl_0)
190+  8944 CB 77            bit 6,a
191+  8946 28 0D            jr z,11F
192+  8948
193+  8948              ; 	Dispara Amadeus.
194+  8948
195+  8948 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  894A CD 42 8E         call PreviousScan
197+  894D CD 42 8E         call PreviousScan
198+  8950
199+  8950              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  8950              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  8950              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  8950              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  8950
204+  8950 CD 8E 89         call Ajusta_disparo_parte_derecha
205+  8953 18 0E            jr 13F
206+  8955
207+  8955              ; 	Dispara Entidad.
208+  8955
209+  8955 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  8957
211+  8957              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  8957              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  8957
214+  8957 C5               push bc
215+  8958
216+  8958 06 10            ld b,16
217+  895A CD 33 8E     12 call NextScan
218+  895D 10 FB            djnz 12B
219+  895F
220+  895F C1               pop bc
221+  8960
222+  8960              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  8960              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  8960              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  8960              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  8960
227+  8960 CD 8E 89         call Ajusta_disparo_parte_derecha
228+  8963
229+  8963 CD 0A 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  8966              ;                                                     ; _al generar el disparo.
231+  8966
232+  8966              ; LLegados a este punto tendremos:
233+  8966              ;
234+  8966              ;       Puntero_objeto_disparo en IY.
235+  8966              ;       Rutinas_de_impresion en IX.
236+  8966              ;       Puntero_de_impresion en HL.
237+  8966              ;       Impacto/Dirección en BC.
238+  8966
239+  8966 CD 9D 89         call Almacena_disparo
240+  8969 18 22            jr 6F                                           ; RET.
241+  896B
242+  896B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  896B
244+  896B 28 11        3 jr z,5F
245+  896D
246+  896D              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  896D              ;
248+  896D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  896D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  896D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  896D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  896D
253+  896D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  896D              ;	   ""        ""       "f9", B="1"
255+  896D              ;	   ""        ""       "fb", B="2"
256+  896D              ; 	   ""        ""       "fb", B="3"
257+  896D
258+  896D 2A 98 85     	ld hl,(Posicion_actual)
259+  8970 CD 33 8E     	call NextScan
260+  8973
261+  8973              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  8973              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  8973              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  8973              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  8973
266+  8973 CD 95 89         call Ajusta_disparo_parte_izquierda
267+  8976
268+  8976              ; 	No se produce impacto. B="$80"
269+  8976              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  8976
271+  8976 01 80 80         ld bc,$8080
272+  8979
273+  8979              ; 	LLegados a este punto tendremos:
274+  8979              ;
275+  8979              ;       Puntero_objeto_disparo en IY.
276+  8979              ;       Rutinas_de_impresion en IX.
277+  8979              ;       Puntero_de_impresion en HL.
278+  8979              ;       Impacto/Dirección en BC.
279+  8979
280+  8979 CD 9D 89         call Almacena_disparo
281+  897C 18 0F            jr 6F                                           ; RET.
282+  897E
283+  897E              ; 	Estamos en el 2º cuadrante de pantalla.
284+  897E              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  897E              ;
286+  897E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  897E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  897E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  897E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  897E
291+  897E 2A 98 85     5 ld hl,(Posicion_actual)
292+  8981 CD 33 8E     	call NextScan
293+  8984
294+  8984              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  8984              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  8984              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  8984              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  8984
299+  8984 CD 8E 89         call Ajusta_disparo_parte_derecha
300+  8987
301+  8987              ; 	No se produce impacto. B="$80"
302+  8987              ; 	Dirección del proyectil hacia abajo. C="80"
303+  8987
304+  8987 01 80 80     15 ld bc,$8080
305+  898A
306+  898A              ; 	LLegados a este punto tendremos:
307+  898A              ;
308+  898A              ;       Puntero_objeto_disparo en IY.
309+  898A              ;       Rutinas_de_impresion en IX.
310+  898A              ;       Puntero_de_impresion en HL.
311+  898A              ;       Impacto/Dirección en BC.
312+  898A
313+  898A CD 9D 89         call Almacena_disparo
314+  898D
315+  898D C9           6 ret
316+  898E
317+  898E              ; ----------------------------------------------------------------
318+  898E              ;
319+  898E              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  898E              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  898E              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  898E
323+  898E 78           Ajusta_disparo_parte_derecha ld a,b
324+  898F FE 02            cp 2
325+  8991 38 01            jr c,1F
326+  8993 23               inc hl
327+  8994 C9           1 ret
328+  8995
329+  8995 78           Ajusta_disparo_parte_izquierda ld a,b
330+  8996 FE 01        	cp 1
331+  8998 20 01        	jr nz,1F
332+  899A 2B           	dec hl
333+  899B 2B           1 dec hl
334+  899C C9               ret
335+  899D
336+  899D              ; ----------------------------------------------------------------
337+  899D              ;
338+  899D              ;   25/02/23
339+  899D              ;
340+  899D              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  899D              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  899D
343+  899D              Almacena_disparo
344+  899D
345+  899D E5               push hl  										; HL contiene el puntero de impresión.
346+  899E F1               pop af
347+  899F 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89A0
349+  89A0 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89A1 E6 01            and 1
351+  89A3 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89A5              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89A5              ; 	Dispara AMADEUS.
354+  89A5
355+  89A5              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89A5              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89A5              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89A5              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89A5
360+  89A5 C5               push bc
361+  89A6 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89A9 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89AC A7               and a
364+  89AD ED 42            sbc hl,bc
365+  89AF CC 62 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89B2 C1               pop bc
367+  89B3 28 54            jr z,4F
368+  89B5
369+  89B5 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89B8 23               inc hl
371+  89B9 23               inc hl
372+  89BA 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89BD              ;                                                   ; _ Disparo_(+1).
374+  89BD 18 18            jr 2F
375+  89BF
376+  89BF              ; Dispara una entidad.
377+  89BF
378+  89BF C5           1 push bc
379+  89C0 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89C3 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89C6 A7               and a
382+  89C7 ED 42            sbc hl,bc
383+  89C9 CC 5B 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89CC C1               pop bc
385+  89CD 28 3A            jr z,4F
386+  89CF
387+  89CF 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89D2 23               inc hl
389+  89D3 23               inc hl
390+  89D4 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89D7              ;                                                   ; _ Disparo_(+1).
392+  89D7 CD 99 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89DA              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89DA              ;
395+  89DA              ;                                                     Puntero_objeto_disparo en IY.
396+  89DA              ;                                                     Rutinas_de_impresion en IX.
397+  89DA              ;                                                     Puntero_de_impresion en HL.
398+  89DA              ;                                                     Impacto/Dirección en BC.
399+  89DA
400+  89DA 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  89DB 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  89DC 23               inc hl                                          ; _ al siguiente.
403+  89DD A7               and a
404+  89DE 20 C0            jr nz,3B
405+  89E0
406+  89E0 08               ex af,af
407+  89E1 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  89E5 F9               ld sp,hl
409+  89E6
410+  89E6 DD E5            push ix                                         ; Rutina de impresión.
411+  89E8 F5               push af                                         ; Puntero de impresión.
412+  89E9 FD E5            push iy                                         ; Puntero objeto.
413+  89EB C5               push bc                                         ; Control.
414+  89EC
415+  89EC ED 7B D9 85      ld sp,(Stack)
416+  89F0
417+  89F0              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  89F0
419+  89F0 21 D0 85     	ld hl,Ctrl_1
420+  89F3 CB C6        	set 0,(hl)
421+  89F5
422+  89F5 DD E5        	push ix
423+  89F7 E1               pop hl
424+  89F8 F5               push af
425+  89F9 DD E1            pop ix
426+  89FB
427+  89FB CD A0 7F     	call Guarda_foto_registros
428+  89FE
429+  89FE 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A01 CB 86        	res 0,(hl)
431+  8A03
432+  8A03              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A03              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A03
435+  8A03 CD 62 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A06 CD 5B 87         call Inicia_Puntero_Disparo_Entidades
437+  8A09
438+  8A09 C9           4 ret
439+  8A0A
440+  8A0A              ; ----------------------------------------------------------------
441+  8A0A              ;
442+  8A0A              ;   4/3/23
443+  8A0A              ;
444+  8A0A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A0A              ;   _ al generarse el disparo.
446+  8A0A              ;
447+  8A0A              ;       "$80" ..... No se produce colisión.
448+  8A0A              ;       "$81" ..... Se produce colisión.
449+  8A0A
450+  8A0A              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A0A              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A0A
453+  8A0A
454+  8A0A FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A0C E5               push hl                                        ; Puntero de impresión.
456+  8A0D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A0F CD 21 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A12 E1               pop hl
459+  8A13 E5               push hl
460+  8A14 CD 33 8E         call NextScan
461+  8A17 1E 80            ld e,$80                                       ; ----- ( ) -----
462+  8A19 CD 21 8A         call Bucle_2
463+  8A1C
464+  8A1C              ; Hay impacto.
465+  8A1C
466+  8A1C 43           2 ld b,e
467+  8A1D E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
468+  8A1E FD E1            pop iy
469+  8A20 C9               ret
470+  8A21
471+  8A21               ; ---------- ----------
472+  8A21
473+  8A21 06 02        Bucle_2 ld b,2
474+  8A23 FD 7E 00     2 ld a,(iy)
475+  8A26 A6               and (hl)
476+  8A27 28 02            jr z,1F
477+  8A29 1E 81            ld e,$81
478+  8A2B 23           1 inc hl
479+  8A2C FD 23            inc iy
480+  8A2E 10 F3            djnz 2B
481+  8A30 C9               ret
482+  8A31
483+  8A31              ; -------------------------------------------------------------------------------------------------------------
484+  8A31              ;
485+  8A31              ;   13/03/23
486+  8A31              ;
487+  8A31              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
488+  8A31              ;
489+  8A31              ;   DESTRUYE: HL,BC,DE y A.
490+  8A31
491+  8A31 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
492+  8A34 7E               ld a,(hl)
493+  8A35 A7               and a
494+  8A36 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
495+  8A37
496+  8A37 44               ld b,h
497+  8A38 4D               ld c,l
498+  8A39 2A DF 85         ld hl,(Stack_snapshot_disparos)
499+  8A3C E5               push hl
500+  8A3D A7               and a
501+  8A3E ED 42            sbc hl,bc
502+  8A40 E5               push hl
503+  8A41 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
504+  8A42
505+  8A42 E1               pop hl
506+  8A43 54               ld d,h
507+  8A44 5D               ld e,l
508+  8A45 1B               dec de
509+  8A46 ED B8            lddr                                                ; Limpiamos.
510+  8A48
511+  8A48 21 60 70         ld hl,Album_de_fotos_disparos
512+  8A4B 22 DF 85         ld (Stack_snapshot_disparos),hl
513+  8A4E
514+  8A4E C9               ret
515+  8A4F
516+  8A4F              ; -------------------------------------------------------------------------------------------------------------
517+  8A4F              ;
518+  8A4F              ;   22/03/23
519+  8A4F              ;
520+  8A4F
521+  8A4F 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
522+  8A52 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
523+  8A55
524+  8A55 CD 99 87     2 call Extrae_address
525+  8A58 7E               ld a,(hl)
526+  8A59 A7               and a
527+  8A5A 28 1E            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
528+  8A5C
529+  8A5C              ; ----- ----- ----- ----- ----- -----
530+  8A5C
531+  8A5C C5               push bc
532+  8A5D CD C8 8A         call foto_disparo_a_borrar
533+  8A60
534+  8A60              ; Existe colisión con este disparo???
535+  8A60
536+  8A60 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
537+  8A61 7E               ld a,(hl)
538+  8A62 2B               dec hl
539+  8A63 E6 01            and 1
540+  8A65 28 0A            jr z,9F
541+  8A67
542+  8A67              ; Elimino el disparo de la base de datos.
543+  8A67
544+  8A67 E5               push hl
545+  8A68 CD 42 8B         call Elimina_disparo_de_base_de_datos
546+  8A6B E1               pop hl
547+  8A6C 3E 01            ld a,1
548+  8A6E 32 E6 85         ld (Impacto),a                                       ; Indicamos que se ha producido Impacto en una entidad.
549+  8A71
550+  8A71 CD F1 8A     9 call Mueve_disparo
551+  8A74 CD C8 8A         call foto_disparo_a_borrar
552+  8A77 C1               pop bc
553+  8A78
554+  8A78 18 04            jr 7F
555+  8A7A
556+  8A7A              ; ----- ----- ----- ----- ----- -----
557+  8A7A
558+  8A7A ED 42        1 sbc hl,bc
559+  8A7C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
560+  8A7E
561+  8A7E 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
562+  8A81 23               inc hl
563+  8A82 23               inc hl
564+  8A83 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
565+  8A86 18 CD            jr 2B
566+  8A88
567+  8A88 CD 62 87     3 call Inicia_Puntero_Disparo_Amadeus
568+  8A8B
569+  8A8B 01 66 84         ld bc,Disparo_11
570+  8A8E 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
571+  8A91
572+  8A91 CD 99 87     5 call Extrae_address
573+  8A94 7E               ld a,(hl)
574+  8A95 A7               and a
575+  8A96 28 1E            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
576+  8A98
577+  8A98              ; ----- ----- ----- ----- ----- -----
578+  8A98
579+  8A98 C5               push bc
580+  8A99 CD C8 8A         call foto_disparo_a_borrar
581+  8A9C
582+  8A9C              ; Existe colisión con este disparo???
583+  8A9C
584+  8A9C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
585+  8A9D 7E               ld a,(hl)
586+  8A9E 2B               dec hl
587+  8A9F E6 01            and 1
588+  8AA1 28 0A            jr z,10F
589+  8AA3
590+  8AA3              ; Elimino el disparo de la base de datos.
591+  8AA3
592+  8AA3 E5               push hl
593+  8AA4 CD 42 8B         call Elimina_disparo_de_base_de_datos
594+  8AA7 E1               pop hl
595+  8AA8 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
596+  8AAA 32 E6 85         ld (Impacto),a
597+  8AAD
598+  8AAD CD F1 8A     10 call Mueve_disparo
599+  8AB0 CD C8 8A         call foto_disparo_a_borrar
600+  8AB3 C1               pop bc
601+  8AB4
602+  8AB4 18 04            jr 8F
603+  8AB6
604+  8AB6              ; ----- ----- ----- ----- ----- -----
605+  8AB6
606+  8AB6 ED 42        4 sbc hl,bc
607+  8AB8 28 0A            jr z,6F
608+  8ABA
609+  8ABA 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
610+  8ABD 23               inc hl
611+  8ABE 23               inc hl
612+  8ABF 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
613+  8AC2 18 CD            jr 5B
614+  8AC4
615+  8AC4 CD 5B 87     6 call Inicia_Puntero_Disparo_Entidades
616+  8AC7 C9               ret
617+  8AC8
618+  8AC8              ; ------------------------------------------------------------------
619+  8AC8
620+  8AC8              foto_disparo_a_borrar
621+  8AC8
622+  8AC8 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
623+  8AC9 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
624+  8ACA C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
625+  8ACB
626+  8ACB E5               push hl
627+  8ACC 23               inc hl
628+  8ACD 23               inc hl
629+  8ACE ED 73 D9 85      ld (Stack),sp
630+  8AD2 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
631+  8AD3 FD E1            pop iy
632+  8AD5 DD E1            pop ix
633+  8AD7 E1               pop hl
634+  8AD8 ED 7B D9 85      ld sp,(Stack)
635+  8ADC 3A D0 85         ld a,(Ctrl_1)
636+  8ADF CB C7            set 0,a
637+  8AE1 32 D0 85         ld (Ctrl_1),a
638+  8AE4 CD A0 7F         call Guarda_foto_registros
639+  8AE7 3A D0 85         ld a,(Ctrl_1)
640+  8AEA CB 87            res 0,a
641+  8AEC 32 D0 85         ld (Ctrl_1),a
642+  8AEF E1               pop hl
643+  8AF0 C9               ret
644+  8AF1
645+  8AF1 E5           Mueve_disparo push hl
646+  8AF2 7E               ld a,(hl)
647+  8AF3 06 04            ld b,4
648+  8AF5 23           1 inc hl
649+  8AF6 10 FD            djnz 1B
650+  8AF8
651+  8AF8 CD 99 87         call Extrae_address
652+  8AFB
653+  8AFB E6 01            and 1
654+  8AFD 28 2A            jr z,2F
655+  8AFF
656+  8AFF              ; Disparo hacia arriba, (Amadeus).
657+  8AFF
658+  8AFF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
659+  8AFF              ; _ de la dificultad.
660+  8AFF
661+  8AFF CD 42 8E         call PreviousScan
662+  8B02 CD 42 8E         call PreviousScan
663+  8B05 CD 42 8E         call PreviousScan
664+  8B08
665+  8B08              ; Detecta si el disparo de Amadeus sale de pantalla:
666+  8B08
667+  8B08 7C               ld a,h
668+  8B09 FE 40            cp $40
669+  8B0B 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
670+  8B0D
671+  8B0D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
672+  8B0D
673+  8B0D EB               ex de,hl
674+  8B0E 06 04            ld b,4
675+  8B10 2B           6 dec hl
676+  8B11 10 FD            djnz 6B
677+  8B13
678+  8B13 CD 42 8B         call Elimina_disparo_de_base_de_datos
679+  8B16
680+  8B16 18 0C            jr 4F
681+  8B18
682+  8B18              ; Se ha desplazado la bala, compruebo colisión.
683+  8B18
684+  8B18 D5           3 push de
685+  8B19 C5               push bc
686+  8B1A CD 0A 8A         call Comprueba_Colision
687+  8B1D 78               ld a,b
688+  8B1E C1               pop bc
689+  8B1F D1               pop de
690+  8B20
691+  8B20 EB               ex de,hl
692+  8B21
693+  8B21 73               ld (hl),e
694+  8B22 23               inc hl
695+  8B23 72               ld (hl),d
696+  8B24
697+  8B24 E1           4 pop hl
698+  8B25 23               inc hl
699+  8B26 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
700+  8B27 2B               dec hl
701+  8B28 C9               ret
702+  8B29
703+  8B29              ; Disparo hacia abajo, (Entidad).
704+  8B29
705+  8B29              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
706+  8B29              ; _ de la dificultad.
707+  8B29
708+  8B29 CD 33 8E     2 call NextScan
709+  8B2C CD 33 8E         call NextScan
710+  8B2F CD 33 8E         call NextScan
711+  8B32
712+  8B32              ; Detecta si el disparo de la entidad sale de la pantalla.
713+  8B32
714+  8B32 7C               ld a,h
715+  8B33 FE 58            cp $58
716+  8B35 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
717+  8B37
718+  8B37 EB               ex de,hl
719+  8B38 06 04            ld b,4
720+  8B3A 2B           5 dec hl
721+  8B3B 10 FD            djnz 5B
722+  8B3D
723+  8B3D CD 42 8B         call Elimina_disparo_de_base_de_datos
724+  8B40
725+  8B40 18 E2            jr 4B
726+  8B42
727+  8B42              ; HL apunta al primer byte de la base de datos del disparo.
728+  8B42 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
729+  8B45 AF               xor a
730+  8B46 77               ld (hl),a
731+  8B47 54               ld d,h
732+  8B48 5D               ld e,l
733+  8B49 13               inc de
734+  8B4A ED B0            ldir
735+  8B4C C9               ret
# file closed: Disparo.asm
875   8B4D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8B4D              ; ******************************************************************************************************************************************************************************************
  2+  8B4D              ;
  3+  8B4D              ; 01/23
  4+  8B4D              ;
  5+  8B4D              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8B4D
  7+  8B4D CD 27 8E     Draw call Prepara_draw
  8+  8B50 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8B51 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8B52 28 05        	jr z,2F
 11+  8B54
 12+  8B54 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8B57 18 0C        	jr 1F
 14+  8B59 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8B5C 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8B5F CD EE 8C     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8B62              ;													; _la esquina superior izquierda de la pantalla.
 18+  8B62 CD 68 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8B65 3A C3 85     1 ld a,(Ctrl_0)
 20+  8B68 CB 6F        	bit 5,a
 21+  8B6A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8B6C
 23+  8B6C CD 84 8B     	call Comprueba_limite_horizontal
 24+  8B6F CD 14 8C     	call Comprueba_limite_vertical
 25+  8B72
 26+  8B72              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8B72
 28+  8B72 CD 61 8D     3 call calcula_CColumnass
 29+  8B75 CD 98 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8B78 CD ED 8D     	call Define_rutina_de_impresion
 31+  8B7B
 32+  8B7B 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8B7E CB AF        	res 5,a											; _a ser de utilidad.
 34+  8B80 32 C3 85     	ld (Ctrl_0),a
 35+  8B83
 36+  8B83 C9           	ret
 37+  8B84
 38+  8B84              ; *******************************************************************************************************************************************************************************************
 39+  8B84              ;	21/01/23
 40+  8B84              ;
 41+  8B84              ; 	Comprueba_limite_horizontal.
 42+  8B84              ;
 43+  8B84              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8B84              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8B84              ;
 46+  8B84              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8B84              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8B84              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8B84              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8B84
 51+  8B84
 52+  8B84
 53+  8B84 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8B87 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8B89 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8B8B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8B8D 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8B90 18 09            jr 6F
 59+  8B92 CB 5F        1 bit 3,a
 60+  8B94 28 0A            jr z,2F
 61+  8B96 E6 F7            and $f7
 62+  8B98 32 C3 85         ld (Ctrl_0),a
 63+  8B9B CD EE 8C     6 call Inicializacion
 64+  8B9E 18 5B            jr 5F
 65+  8BA0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8BA1
 67+  8BA1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8BA1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8BA1
 70+  8BA1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8BA2 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8BA5 CD F3 90     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8BA8 67           	ld h,a
 74+  8BA9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8BAA CD F3 90     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8BAD 67           	ld h,a
 77+  8BAE A7           	and a
 78+  8BAF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8BB1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8BB2 3A AA 85     	ld a,(Cuad_objeto)
 81+  8BB5 FE 02        	cp 2
 82+  8BB7 38 1E        	jr c,3F
 83+  8BB9 28 1C        	jr z,3F
 84+  8BBB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8BBC 28 23            jr z,7F
 86+  8BBE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8BC0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8BC2 E1           	pop hl
 89+  8BC3
 90+  8BC3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8BC3              ; _para indicar con E="2" en caso necesario.
 92+  8BC3
 93+  8BC3 E5               push hl
 94+  8BC4 C5               push bc
 95+  8BC5 CD F3 90     	call calcula_tercio
 96+  8BC8 FE 01        	cp 1
 97+  8BCA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8BCC CD FC 8B         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8BCF 28 26            jr z,9F
100+  8BD1 38 24            jr c,9F
101+  8BD3 1E 00        11 ld e,0
102+  8BD5 18 22            jr 8F
103+  8BD7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8BD8 28 07        	jr z, 7F
105+  8BDA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8BDC 1E 00         	ld e,0
107+  8BDE E1           	pop hl
108+  8BDF 18 04        	jr 4F
109+  8BE1 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8BE3 18 15            jr 10F
111+  8BE5
112+  8BE5              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8BE5              ; _para indicar con E="2" en caso necesario.
114+  8BE5
115+  8BE5 E5           4 push hl
116+  8BE6 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8BE7 CD F3 90     	call calcula_tercio
118+  8BEA FE 01        	cp 1
119+  8BEC 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8BEE CD FC 8B         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8BF1 28 04            jr z,9F
122+  8BF3 30 02            jr nc,9F
123+  8BF5 18 02        	jr 8F
124+  8BF7 1E 02        9 ld e,2
125+  8BF9 C1           8 pop bc
126+  8BFA E1           10 pop hl
127+  8BFB C9           5 ret
128+  8BFC
129+  8BFC              ; --------------------
130+  8BFC              ;
131+  8BFC              ; 25/08/22
132+  8BFC
133+  8BFC CD F3 90     Comprueba_centro call calcula_tercio
134+  8BFF 67               ld h,a
135+  8C00 08           	ex af,af
136+  8C01 FE 02        	cp 2
137+  8C03 38 07        	jr c,1F
138+  8C05 28 05        	jr z,1F
139+  8C07 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8C0A 18 03        	jr 2F
141+  8C0C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8C0F 08           2 ex af,af
143+  8C10 A7               and a
144+  8C11 ED 42            sbc hl,bc
145+  8C13 C9               ret
146+  8C14
147+  8C14              ; *********************************************************************************************************************************************************************************************
148+  8C14              ;
149+  8C14              ;   16/8/22
150+  8C14              ;
151+  8C14              ;	Comprueba_limite_vertical
152+  8C14              ;
153+  8C14              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8C14              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8C14              ;
156+  8C14
157+  8C14 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8C17 7D           	ld a,l
159+  8C18 E6 1F        	and $1F
160+  8C1A 57           	ld d,a
161+  8C1B 3A CF 85     	ld a,(Limite_vertical)
162+  8C1E BA           	cp d 											; Límite - Posición.
163+  8C1F 08           	ex af,af 										; Resultado de CP d en F'.
164+  8C20 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8C23 CB 47        	bit 0,a
166+  8C25 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8C27
168+  8C27              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8C27
170+  8C27 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8C28 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8C2A
173+  8C2A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8C2A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8C2A
176+  8C2A 3A 9C 85         ld a,(Coordenada_X)
177+  8C2D 16 0F            ld d,Centro_izquierda
178+  8C2F A7               and a
179+  8C30 92               sub d 											 ; Posición - Centro_izquierda.
180+  8C31 28 1E            jr z,3F
181+  8C33 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8C35              ;                                                    ; _salimos sin modificar nada.
183+  8C35 18 0E            jr 2F
184+  8C37 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8C38 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8C3A
187+  8C3A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8C3A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8C3A
190+  8C3A 3A 9C 85         ld a,(Coordenada_X)
191+  8C3D 16 10            ld d,Centro_derecha
192+  8C3F A7               and a
193+  8C40 92               sub d
194+  8C41 28 0E            jr z,3F
195+  8C43 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8C45              ;                                                    ; _salimos sin modificar nada.
197+  8C45 CB 43        2 bit 0,e
198+  8C47 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8C49 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8C4A CD DE 8C         call Modificaccionne
201+  8C4D C1           	pop bc
202+  8C4E CD EE 8C         call Inicializacion
203+  8C51 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8C52
205+  8C52              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8C52
207+  8C52 C5           4 push bc
208+  8C53 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8C56 0A           	ld a,(bc)
210+  8C57 3D           	dec a
211+  8C58 47           	ld b,a 											 ; Columnas-1 en B.
212+  8C59 7D           	ld a,l
213+  8C5A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8C5B CB 47        	bit 0,a
215+  8C5D 28 03        	jr z,5F
216+  8C5F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8C60 18 2E        	jr 7F
218+  8C62
219+  8C62              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8C62
221+  8C62 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8C63 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8C64 3A C3 85     	ld a,(Ctrl_0)
224+  8C67 CB 4F        	bit 1,a
225+  8C69 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8C6B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8C6C
228+  8C6C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8C6C
230+  8C6C 1C               inc e
231+  8C6D 1D               dec e
232+  8C6E 20 07            jr nz,12F
233+  8C70 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8C71 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8C72 22 98 85     	ld (Posicion_actual),hl
236+  8C75 18 44        13 jr 9F
237+  8C77 CB 43        12 bit 0,e
238+  8C79 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8C7B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8C7B C1           	pop bc
241+  8C7C 18 D3        	jr 3B
242+  8C7E 80           14 add b
243+  8C7F 6F               ld l,a
244+  8C80 22 98 85     	ld (Posicion_actual),hl
245+  8C83 CD DE 8C         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8C86 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8C88 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8C8A 32 C3 85         ld (Ctrl_0),a
249+  8C8D F1           	pop af
250+  8C8E 18 2B        	jr 9F
251+  8C90
252+  8C90              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8C90
254+  8C90 F5           7 push af
255+  8C91 3A C3 85     	ld a,(Ctrl_0)
256+  8C94 CB 47        	bit 0,a
257+  8C96 20 1D        	jr nz,8F
258+  8C98 F1           	pop af
259+  8C99
260+  8C99              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8C99
262+  8C99 1C           	inc e
263+  8C9A 1D               dec e
264+  8C9B 20 07            jr nz,10F
265+  8C9D 90           	sub b
266+  8C9E 6F               ld l,a
267+  8C9F 22 98 85     	ld (Posicion_actual),hl
268+  8CA2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8CA4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8CA4 CB 43        10 bit 0,e
271+  8CA6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8CA8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8CA8 C1           	pop bc
274+  8CA9 18 A6        	jr 3B
275+  8CAB 90           16 sub b
276+  8CAC 6F               ld l,a
277+  8CAD 22 98 85     	ld (Posicion_actual),hl
278+  8CB0 CD DE 8C         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8CB3 18 06            jr 9F
280+  8CB5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8CB7 32 C3 85         ld (Ctrl_0),a
282+  8CBA F1           	pop af
283+  8CBB C1           9 pop bc
284+  8CBC 1E 00        	ld e,0
285+  8CBE CD EE 8C         call Inicializacion
286+  8CC1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8CC2 08           	ex af,af
288+  8CC3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8CC4 18 8B            jr 3B
290+  8CC6
291+  8CC6              ; --------------------
292+  8CC6
293+  8CC6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8CC8 CD 42 8E     1 call PreviousScan
295+  8CCB 10 FB            djnz 1B
296+  8CCD 22 98 85     	ld (Posicion_actual),hl
297+  8CD0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8CD1 C9           	ret
299+  8CD2
300+  8CD2              ; --------------------
301+  8CD2
302+  8CD2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8CD4 CD 33 8E     1 call NextScan
304+  8CD7 10 FB            djnz 1B
305+  8CD9 22 98 85     	ld (Posicion_actual),hl
306+  8CDC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8CDD C9           	ret
308+  8CDE
309+  8CDE              ; --------------------
310+  8CDE              ;
311+  8CDE              ;	22/01/23
312+  8CDE              ;
313+  8CDE              ;	E="1". Hemos cambiado de cuadrante.
314+  8CDE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8CDE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8CDE
317+  8CDE
318+  8CDE              Modificaccionne
319+  8CDE
320+  8CDE 3A AA 85     	ld a,(Cuad_objeto)
321+  8CE1 FE 02        	cp 2
322+  8CE3 CC C6 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8CE6 DC C6 8C         call c,Modifica_Pos_actual
324+  8CE9 C8           	ret z
325+  8CEA CD D2 8C         call Modifica_Pos_actual2
326+  8CED C9               ret
327+  8CEE
328+  8CEE              ; *************************************************************************************************************************************************************************************************
329+  8CEE              ;
330+  8CEE              ;	13/8/22
331+  8CEE              ;
332+  8CEE              ;	Inicializacion
333+  8CEE              ;
334+  8CEE              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8CEE              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8CEE              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8CEE              ;
338+  8CEE              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8CEE              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8CEE              ;	_ desaparece/aparece.
341+  8CEE
342+  8CEE              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8CEE              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8CEE              ;
345+  8CEE              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8CEE              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8CEE              ; 		   [E] ="0"
348+  8CEE
349+  8CEE              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8CEE
351+  8CEE CD F3 90     Inicializacion call calcula_tercio
352+  8CF1 28 36        	jr z,primit
353+  8CF3 E6 02        	and 2
354+  8CF5 20 07        	jr nz,segmit
355+  8CF7 7D           	ld a,l
356+  8CF8 FE 7F        	cp $7f
357+  8CFA 38 2D        	jr c,primit
358+  8CFC 28 2B        	jr z,primit
359+  8CFE CD 5B 8D     segmit call column
360+  8D01 38 13        	jr c,tercuad
361+  8D03 3E 04        cuarcuad ld a,4
362+  8D05 32 AA 85     	ld (Cuad_objeto),a
363+  8D08 21 20 48     	ld hl,$4820
364+  8D0B 22 CD 85     	ld (Limite_horizontal),hl
365+  8D0E 21 CF 85     	ld hl,Limite_vertical
366+  8D11 36 0D        	ld (hl),$0d
367+  8D13 08           	ex af,af
368+  8D14 18 3C        	jr 1F
369+  8D16              tercuad
370+  8D16 3E 03        	ld a,3
371+  8D18 32 AA 85     	ld (Cuad_objeto),a
372+  8D1B 21 20 48     	ld hl,$4820
373+  8D1E 22 CD 85     	ld (Limite_horizontal),hl
374+  8D21 21 CF 85     	ld hl,Limite_vertical
375+  8D24 36 12        	ld (hl),$12
376+  8D26 08           	ex af,af
377+  8D27 18 29        	jr 1F
378+  8D29 CD 5B 8D     primit call column
379+  8D2C 38 13        	jr c, primcuad
380+  8D2E              segcuad
381+  8D2E 3E 02        	ld a,2
382+  8D30 32 AA 85     	ld (Cuad_objeto),a
383+  8D33 21 C0 4F     	ld hl,$4fc0
384+  8D36 22 CD 85     	ld (Limite_horizontal),hl
385+  8D39 21 CF 85     	ld hl,Limite_vertical
386+  8D3C 36 0D        	ld (hl),$0d
387+  8D3E 08           	ex af,af
388+  8D3F 18 11        	jr 1F
389+  8D41              primcuad
390+  8D41 3E 01        	ld a,1
391+  8D43 32 AA 85     	ld (Cuad_objeto),a
392+  8D46 21 C0 4F     	ld hl,$4fc0
393+  8D49 22 CD 85     	ld (Limite_horizontal),hl
394+  8D4C 21 CF 85     	ld hl,Limite_vertical
395+  8D4F 36 12        	ld (hl),$12
396+  8D51 08           	ex af,af
397+  8D52 CD 25 94     1 call Genera_coordenadas
398+  8D55 21 C3 85     	ld hl,Ctrl_0
399+  8D58 CB EE        	set 5,(hl)
400+  8D5A C9           	ret
401+  8D5B
402+  8D5B              ; ------------------------------------------------------------------------------------------------------------------
403+  8D5B
404+  8D5B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8D5B              ;
406+  8D5B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8D5B
408+  8D5B 7D           column ld a,l
409+  8D5C E6 1F        	and $1f
410+  8D5E FE 10         	cp $10
411+  8D60 C9            	ret
412+  8D61
413+  8D61              ; --------------------------------------------------------------------------------------------------------------------
414+  8D61              ;
415+  8D61              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8D61              ;
417+  8D61              ; 14/12/22
418+  8D61              ;
419+  8D61              ;	Modifica: A y BC.
420+  8D61
421+  8D61 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8D64 E6 01        	and 1
423+  8D66 28 17        	jr z,1F
424+  8D68
425+  8D68              ; Nos encontramos en la parte izquierda de la pantalla
426+  8D68
427+  8D68 3A 9C 85     	ld a,(Coordenada_X)
428+  8D6B 47           	ld b,a
429+  8D6C 04           	inc b											; (Coordenada_X)+1 en B.
430+  8D6D 79           	ld a,c
431+  8D6E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8D6F 38 08        	jr c,2F
433+  8D71 47           	ld b,a
434+  8D72 79           	ld a,c
435+  8D73 90           	sub b
436+  8D74 32 CC 85     	ld (Columnas),a
437+  8D77 18 1B        	jr 4F
438+  8D79 79           2 ld a,c
439+  8D7A 32 CC 85     	ld (Columnas),a
440+  8D7D 18 15        	jr 4F
441+  8D7F
442+  8D7F              ; Nos encontramos en la parte derecha de la pantalla.
443+  8D7F
444+  8D7F 3A 9C 85     1 ld a,(Coordenada_X)
445+  8D82 81           	add c
446+  8D83 3D           	dec a
447+  8D84 D6 1F        	sub $1f
448+  8D86 38 08        	jr c,3F
449+  8D88 47           	ld b,a
450+  8D89 79           	ld a,c
451+  8D8A 90           	sub b
452+  8D8B 32 CC 85     	ld (Columnas),a
453+  8D8E 18 04        	jr 4F
454+  8D90 79           3 ld a,c
455+  8D91 32 CC 85     	ld (Columnas),a
456+  8D94 D9           4 exx
457+  8D95 4F           	ld c,a
458+  8D96 D9           	exx
459+  8D97 C9            ret
460+  8D98
461+  8D98              ; --------------------------------------------------------------------------------------------------------------------
462+  8D98              ;
463+  8D98              ; 7/1/23
464+  8D98              ;
465+  8D98              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8D98              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8D98              ;
468+  8D98              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8D98              ;	DESTRUYE: HL,B Y A.
470+  8D98
471+  8D98 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8D9B FE 02        	cp 2
473+  8D9D 38 18        	jr c,1F
474+  8D9F 28 16        	jr z,1F
475+  8DA1 E6 01        	and 1
476+  8DA3 28 0D        	jr z,3F
477+  8DA5
478+  8DA5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8DA5
480+  8DA5 CD E1 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8DA8
482+  8DA8 7D           9 ld a,l
483+  8DA9 E6 1F        	and $1f
484+  8DAB 28 2A        	jr z,7F
485+  8DAD 2B           	dec hl
486+  8DAE 10 F8        	djnz 9B
487+  8DB0 18 25        	jr 7F
488+  8DB2
489+  8DB2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8DB2
491+  8DB2 2A 98 85     3 ld hl,(Posicion_actual)
492+  8DB5 18 20        	jr 7F
493+  8DB7
494+  8DB7 28 14        1 jr z,2F
495+  8DB9
496+  8DB9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8DB9
498+  8DB9 CD E1 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8DBC 7D           4 ld a,l
500+  8DBD E6 1F        	and $1f
501+  8DBF 28 03        	jr z,6F
502+  8DC1 2B           	dec hl
503+  8DC2 10 F8        	djnz 4B
504+  8DC4 06 0F        6 ld b,15
505+  8DC6 CD 42 8E     5 call PreviousScan
506+  8DC9 10 FB        	djnz 5B
507+  8DCB 18 0A        	jr 7F
508+  8DCD
509+  8DCD              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8DCD
511+  8DCD CD E1 8D     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8DD0 06 0F        	ld b,15
513+  8DD2 CD 42 8E     8 call PreviousScan
514+  8DD5 10 FB        	djnz 8B
515+  8DD7
516+  8DD7 E5           7 push hl
517+  8DD8 DD E1        	pop ix
518+  8DDA
519+  8DDA 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8DDD E5           	push hl
521+  8DDE FD E1        	pop iy
522+  8DE0
523+  8DE0 C9           	ret
524+  8DE1
525+  8DE1              ; --------------------------------------------------------------------------------------------------------------------
526+  8DE1              ;
527+  8DE1              ;	2/1/23
528+  8DE1              ;
529+  8DE1              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8DE1              ;
531+  8DE1              ;	Tras esta rutina tenemos:
532+  8DE1              ;
533+  8DE1              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8DE1              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8DE1              ;
536+  8DE1              ;	DESTRUYE!!!!! HL,B y A.
537+  8DE1
538+  8DE1 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8DE4 3A CC 85     	ld a,(Columnas)
540+  8DE7 3D           	dec a
541+  8DE8 20 01        	jr nz,1F
542+  8DEA 3C           	inc a
543+  8DEB 47           1 ld b,a
544+  8DEC C9           	ret
545+  8DED
546+  8DED              ; --------------------------------------------------------------------------------------------------------------------
547+  8DED              ;
548+  8DED              ;	3/1/23
549+  8DED              ;
550+  8DED              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8DED              ;
552+  8DED              ;	Destruye: A,B,HL y DE.
553+  8DED
554+  8DED              Define_rutina_de_impresion
555+  8DED
556+  8DED 3A 97 85     	ld a,(Columns)
557+  8DF0 47           	ld b,a
558+  8DF1 3A CC 85     	ld a,(Columnas)
559+  8DF4 B8           	cp b
560+  8DF5 20 0D        	jr nz,2f
561+  8DF7
562+  8DF7              ;	La entidad se imprime entera.
563+  8DF7
564+  8DF7 21 C3 8E     	ld hl, Indice_entidades_completas
565+  8DFA E6 01        	and 1
566+  8DFC 28 02        	jr z,1F
567+  8DFE
568+  8DFE 23           	inc hl
569+  8DFF 23           	inc hl
570+  8E00
571+  8E00 CD 99 87     1 call Extrae_address
572+  8E03 C9           	ret		;	ret
573+  8E04
574+  8E04              ;	La entidad no se imprime entera en pantalla.
575+  8E04
576+  8E04 3A AA 85     2 ld a,(Cuad_objeto)
577+  8E07 E6 01        	and 1
578+  8E09 28 17        	jr z,3F
579+  8E0B
580+  8E0B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8E0B
582+  8E0B 21 C7 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8E0E 3A 97 85     4 ld a,(Columns)
584+  8E11 E6 01        	and 1
585+  8E13 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8E15
587+  8E15 23           	inc hl
588+  8E16 23           	inc hl
589+  8E17
590+  8E17 3A CC 85     	ld a,(Columnas)
591+  8E1A E6 01        	and 1
592+  8E1C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8E1E
594+  8E1E 23           	inc hl
595+  8E1F 23           	inc hl
596+  8E20
597+  8E20 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8E22
599+  8E22 21 CD 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8E25 18 E7        	jr 4B
601+  8E27
602+  8E27              ; --------------------------------------------------------------------------------------------------------------------
603+  8E27              ;
604+  8E27              ;	Prepara_draw
605+  8E27              ;
606+  8E27              ;	Es una rutina de carga.
607+  8E27              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8E27              ;
609+  8E27              ;	FUNCIONAMIENTO:
610+  8E27              ;
611+  8E27              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8E27              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8E27              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8E27              ;
615+  8E27              ;	DESTRUYE:
616+  8E27              ;
617+  8E27              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8E27
619+  8E27 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8E2A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8E2B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8E2C 4E           	ld c,(hl)
623+  8E2D 2A 98 85     	ld hl,(Posicion_actual)
624+  8E30 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8E32 C9           	ret
626+  8E33
627+  8E33              ;----------------------------------------------------------------------------------------------------------------
628+  8E33              ;
629+  8E33              ;	5/08/22
630+  8E33              ;
631+  8E33              ;   NextScan.
632+  8E33              ;
633+  8E33              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8E33              ;
635+  8E33              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8E33              ;
637+  8E33              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8E33              ;
639+  8E33              ;       DESTRUIDOS: AF y HL !!!
640+  8E33              ;
641+  8E33              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8E33              ;
643+  8E33
644+  8E33 24           NextScan inc h          ; Incrementamos el scanline.
645+  8E34 7C               ld a,h
646+  8E35 E6 07            and 7
647+  8E37 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8E38
649+  8E38 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8E39 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8E3B 6F               ld l,a
652+  8E3C D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8E3D
654+  8E3D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8E3E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8E40 67               ld h,a
657+  8E41 C9               ret
658+  8E42
659+  8E42              ;----------------------------------------------------------------------------------------------------------------
660+  8E42              ;
661+  8E42              ;	5/08/22
662+  8E42              ;
663+  8E42              ;   PreviousScan.
664+  8E42              ;
665+  8E42              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8E42              ;
667+  8E42              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8E42              ;
669+  8E42              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8E42              ;
671+  8E42              ;       DESTRUIDOS: AF y HL !!!
672+  8E42              ;
673+  8E42              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8E42              ;
675+  8E42
676+  8E42 7C           PreviousScan ld a,h
677+  8E43 25               dec h               ; Dec H.
678+  8E44 E6 07            and 7
679+  8E46 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8E47
681+  8E47 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8E48 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8E4A 6F               ld l,a
684+  8E4B D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8E4C
686+  8E4C 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8E4D C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8E4F 67               ld h,a
689+  8E50 C9               ret
690+  8E51
691+  8E51              ; -----------------------------------------------------------------------------------
692+  8E51              ;
693+  8E51              ;	28/2/23
694+  8E51              ;
695+  8E51              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8E51              ;	Extrae fotos de Album_de_fotos.
697+  8E51
698+  8E51 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8E54 A7           	and a
700+  8E55 C8           	ret z
701+  8E56 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8E5A 31 00 70     	ld sp,Album_de_fotos
703+  8E5D
704+  8E5D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8E5F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8E60 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8E61
708+  8E61 ED 73 DB 85  	ld (Stack_2),sp
709+  8E65 ED 7B D9 85  	ld sp,(Stack)
710+  8E69
711+  8E69              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8E69
713+  8E69 3E CD        	ld a,$cd
714+  8E6B 32 73 8E     	ld (Imprime),a
715+  8E6E EB           	ex de,hl
716+  8E6F 22 74 8E     	ld (Imprime+1),hl
717+  8E72 EB           	ex de,hl
718+  8E73
719+  8E73              ; Ejecuta la llamada:	CALL $xx,xx
720+  8E73
721+  8E73 00 00 00     Imprime db 0,0,0
722+  8E76
723+  8E76 3A D8 85     	ld a,(Numero_de_malotes)
724+  8E79 3D           	dec a
725+  8E7A 28 09        	jr z,1F
726+  8E7C 32 D8 85      	ld (Numero_de_malotes),a
727+  8E7F
728+  8E7F ED 7B DB 85   	ld sp,(Stack_2)
729+  8E83 18 D8        	jr 2B
730+  8E85
731+  8E85 AF           1 xor a
732+  8E86 32 DB 85     	ld (Stack_2),a
733+  8E89 C9           	ret
734+  8E8A
735+  8E8A              ; -----------------------------------------------------------------------------------
736+  8E8A              ;
737+  8E8A              ;	28/2/23
738+  8E8A              ;
739+  8E8A              ;	Pinta los disparos generados.
740+  8E8A
741+  8E8A              Extrae_foto_disparos
742+  8E8A
743+  8E8A 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8E8D A7           	and a
745+  8E8E C8           	ret z
746+  8E8F ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8E93 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8E96
749+  8E96 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8E98 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8E99 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8E9A
753+  8E9A ED 73 DB 85  	ld (Stack_2),sp
754+  8E9E ED 7B D9 85  	ld sp,(Stack)
755+  8EA2
756+  8EA2              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8EA2
758+  8EA2 3E CD        	ld a,$cd
759+  8EA4 32 AC 8E     	ld (Imprime2),a
760+  8EA7 EB           	ex de,hl
761+  8EA8 22 AD 8E     	ld (Imprime2+1),hl
762+  8EAB EB           	ex de,hl
763+  8EAC
764+  8EAC              ; Ejecuta la llamada:	CALL $xx,xx
765+  8EAC
766+  8EAC 00 00 00     Imprime2 db 0,0,0
767+  8EAF
768+  8EAF 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8EB2 3D           	dec a
770+  8EB3 28 09        	jr z,1F
771+  8EB5 32 E1 85      	ld (Numero_de_disparotes),a
772+  8EB8
773+  8EB8 ED 7B DB 85  	ld sp,(Stack_2)
774+  8EBC 18 D8        	jr 2B
775+  8EBE
776+  8EBE AF           1 xor a
777+  8EBF 32 DB 85     	ld (Stack_2),a
778+  8EC2 C9           	ret
779+  8EC3
# file closed: Draw_XOR.asm
876   8EC3              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8EC3              ;   índices de Rutinas de impresión.
  2+  8EC3
  3+  8EC3 D3 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8EC5 00 8F            defw Pinta_Amadeus_3x2
  5+  8EC7
  6+  8EC7 56 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8EC9 F6 8F            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8ECB AA 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8ECD
 10+  8ECD 80 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8ECF 84 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8ED1 38 90            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8ED3
 14+  8ED3
 15+  8ED3              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8ED3              ;
 17+  8ED3              ;   12/12/22
 18+  8ED3              ;
 19+  8ED3              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8ED3              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8ED3              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8ED3              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8ED3              ;
 24+  8ED3              ;   Modifica: DE y HL.
 25+  8ED3
 26+  8ED3 ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8ED7 FD F9        	ld sp,iy
 28+  8ED9 06 10            ld b,16
 29+  8EDB D1           1 pop de
 30+  8EDC 7B               ld a,e
 31+  8EDD AE               xor (hl)
 32+  8EDE 77           	ld (hl),a
 33+  8EDF 23           	inc hl
 34+  8EE0 7A               ld a,d
 35+  8EE1 AE               xor (hl)
 36+  8EE2 77           	ld (hl),a
 37+  8EE3 2B           	dec hl
 38+  8EE4 24           	inc h
 39+  8EE5 7C               ld a,h
 40+  8EE6 E6 07            and 7
 41+  8EE8 20 0A            jr nz,2F
 42+  8EEA 7D               ld a,l
 43+  8EEB C6 20            add a,$20
 44+  8EED 6F               ld l,a
 45+  8EEE 38 04            jr c,2F
 46+  8EF0 7C               ld a,h
 47+  8EF1 D6 08            sub 8
 48+  8EF3 67               ld h,a
 49+  8EF4 7C           2 ld a,h
 50+  8EF5 FE 58            cp $58
 51+  8EF7 28 02            jr z,3F
 52+  8EF9 10 E0            djnz 1B
 53+  8EFB ED 7B D9 85  3 ld sp,(Stack)
 54+  8EFF C9           	ret
 55+  8F00
 56+  8F00 ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8F04 FD F9        	ld sp,iy
 58+  8F06 06 08            ld b,8
 59+  8F08 D1           1 pop de
 60+  8F09 7B               ld a,e
 61+  8F0A AE               xor (hl)
 62+  8F0B 77           	ld (hl),a
 63+  8F0C 23           	inc hl
 64+  8F0D 7A               ld a,d
 65+  8F0E AE               xor (hl)
 66+  8F0F 77           	ld (hl),a
 67+  8F10 23           	inc hl
 68+  8F11 D1           	pop de
 69+  8F12 7B               ld a,e
 70+  8F13 AE               xor (hl)
 71+  8F14 77           	ld (hl),a
 72+  8F15 2B           	dec hl
 73+  8F16 2B           	dec hl
 74+  8F17 24           	inc h
 75+  8F18 7C               ld a,h
 76+  8F19 E6 07            and 7
 77+  8F1B 20 0A            jr nz,2F
 78+  8F1D 7D               ld a,l
 79+  8F1E C6 20            add a,$20
 80+  8F20 6F               ld l,a
 81+  8F21 38 04            jr c,2F
 82+  8F23 7C               ld a,h
 83+  8F24 D6 08            sub 8
 84+  8F26 67               ld h,a
 85+  8F27 7C           2 ld a,h
 86+  8F28 FE 58            cp $58
 87+  8F2A 28 25            jr z,4F
 88+  8F2C 7A               ld a,d
 89+  8F2D AE               xor (hl)
 90+  8F2E 77               ld (hl),a
 91+  8F2F D1           	pop de
 92+  8F30 23           	inc hl
 93+  8F31 7B               ld a,e
 94+  8F32 AE               xor (hl)
 95+  8F33 77           	ld (hl),a
 96+  8F34 23           	inc hl
 97+  8F35 7A               ld a,d
 98+  8F36 AE               xor (hl)
 99+  8F37 77           	ld (hl),a
100+  8F38 2B           	dec hl
101+  8F39 2B           	dec hl
102+  8F3A 24           	inc h
103+  8F3B 7C               ld a,h
104+  8F3C E6 07            and 7
105+  8F3E 20 0A            jr nz,3F
106+  8F40 7D               ld a,l
107+  8F41 C6 20            add a,$20
108+  8F43 6F               ld l,a
109+  8F44 38 04            jr c,3F
110+  8F46 7C               ld a,h
111+  8F47 D6 08            sub 8
112+  8F49 67               ld h,a
113+  8F4A 7C           3 ld a,h
114+  8F4B FE 58            cp $58
115+  8F4D 28 02            jr z,4F
116+  8F4F 10 B7            djnz 1B
117+  8F51 ED 7B D9 85  4 ld sp,(Stack)
118+  8F55 C9           	ret
119+  8F56
120+  8F56              ; ---------------------------------------------------
121+  8F56
122+  8F56 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8F5A FD F9        	ld sp,iy
124+  8F5C
125+  8F5C              ; >>>
126+  8F5C
127+  8F5C 06 10            ld b,16
128+  8F5E D1           1 pop de
129+  8F5F 7A           	ld a,d
130+  8F60 AE           	xor (hl)
131+  8F61 77           	ld (hl),a
132+  8F62 24           	inc h
133+  8F63 7C               ld a,h
134+  8F64 E6 07            and 7
135+  8F66 20 0C            jr nz,2F
136+  8F68 7D               ld a,l
137+  8F69 C6 20            add a,$20
138+  8F6B 6F               ld l,a
139+  8F6C 38 06            jr c,2F
140+  8F6E 7C               ld a,h
141+  8F6F D6 08            sub 8
142+  8F71 67               ld h,a
143+  8F72 18 00            jr 2F
144+  8F74 7C           2 ld a,h
145+  8F75 FE 58            cp $58
146+  8F77 28 02            jr z,3F
147+  8F79 10 E3            djnz 1B
148+  8F7B ED 7B D9 85  3 ld sp,(Stack)
149+  8F7F C9           	ret
150+  8F80
151+  8F80 ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8F84 FD F9        	ld sp,iy
153+  8F86
154+  8F86              ; >>>
155+  8F86
156+  8F86 06 10            ld b,16
157+  8F88 D1           1 pop de
158+  8F89 7B           	ld a,e
159+  8F8A AE           	xor (hl)
160+  8F8B 77           	ld (hl),a
161+  8F8C 24           	inc h
162+  8F8D 7C               ld a,h
163+  8F8E E6 07            and 7
164+  8F90 20 0C            jr nz,2F
165+  8F92 7D               ld a,l
166+  8F93 C6 20            add a,$20
167+  8F95 6F               ld l,a
168+  8F96 38 06            jr c,2F
169+  8F98 7C               ld a,h
170+  8F99 D6 08            sub 8
171+  8F9B 67               ld h,a
172+  8F9C 18 00            jr 2F
173+  8F9E 7C           2 ld a,h
174+  8F9F FE 58            cp $58
175+  8FA1 28 02            jr z,3F
176+  8FA3 10 E3            djnz 1B
177+  8FA5 ED 7B D9 85  3 ld sp,(Stack)
178+  8FA9 C9           	ret
179+  8FAA
180+  8FAA              ; ---------------------------------------------------
181+  8FAA
182+  8FAA ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8FAE FD F9        	ld sp,iy
184+  8FB0 06 08            ld b,8
185+  8FB2 D1           1 pop de
186+  8FB3 7A           	ld a,d
187+  8FB4 AE           	xor (hl)
188+  8FB5 77           	ld (hl),a
189+  8FB6 23           	inc hl
190+  8FB7 D1           	pop de
191+  8FB8 7B           	ld a,e
192+  8FB9 AE           	xor (hl)
193+  8FBA 77           	ld (hl),a
194+  8FBB 2B           	dec hl
195+  8FBC 24            	inc h
196+  8FBD 7C               ld a,h
197+  8FBE E6 07            and 7
198+  8FC0 20 0A            jr nz,2F
199+  8FC2 7D               ld a,l
200+  8FC3 C6 20            add a,$20
201+  8FC5 6F               ld l,a
202+  8FC6 38 04            jr c,2F
203+  8FC8 7C               ld a,h
204+  8FC9 D6 08            sub 8
205+  8FCB 67               ld h,a
206+  8FCC 7C           2 ld a,h
207+  8FCD FE 58            cp $58
208+  8FCF 28 20            jr z,4F
209+  8FD1 D1               pop de
210+  8FD2 7B           	ld a,e
211+  8FD3 AE           	xor (hl)
212+  8FD4 77           	ld (hl),a
213+  8FD5 23           	inc hl
214+  8FD6 7A           	ld a,d
215+  8FD7 AE           	xor (hl)
216+  8FD8 77           	ld (hl),a
217+  8FD9 2B           	dec hl
218+  8FDA 24           	inc h
219+  8FDB 7C               ld a,h
220+  8FDC E6 07            and 7
221+  8FDE 20 0A            jr nz,3F
222+  8FE0 7D               ld a,l
223+  8FE1 C6 20            add a,$20
224+  8FE3 6F               ld l,a
225+  8FE4 38 04            jr c,3F
226+  8FE6 7C               ld a,h
227+  8FE7 D6 08            sub 8
228+  8FE9 67               ld h,a
229+  8FEA 7C           3 ld a,h
230+  8FEB FE 58            cp $58
231+  8FED 28 02            jr z,4F
232+  8FEF 10 C1            djnz 1B
233+  8FF1 ED 7B D9 85  4 ld sp,(Stack)
234+  8FF5 C9           	ret
235+  8FF6
236+  8FF6 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8FFA FD F9        	ld sp,iy
238+  8FFC 06 08            ld b,8
239+  8FFE D1           1 pop de
240+  8FFF D1           	pop de
241+  9000 7B           	ld a,e
242+  9001 AE           	xor (hl)
243+  9002 77           	ld (hl),a
244+  9003 24            	inc h
245+  9004 7C               ld a,h
246+  9005 E6 07            and 7
247+  9007 20 0A            jr nz,2F
248+  9009 7D               ld a,l
249+  900A C6 20            add a,$20
250+  900C 6F               ld l,a
251+  900D 38 04            jr c,2F
252+  900F 7C               ld a,h
253+  9010 D6 08            sub 8
254+  9012 67               ld h,a
255+  9013 7C           2 ld a,h
256+  9014 FE 58            cp $58
257+  9016 28 1B            jr z,4F
258+  9018 D1               pop de
259+  9019 7A           	ld a,d
260+  901A AE           	xor (hl)
261+  901B 77           	ld (hl),a
262+  901C 24           	inc h
263+  901D 7C               ld a,h
264+  901E E6 07            and 7
265+  9020 20 0A            jr nz,3F
266+  9022 7D               ld a,l
267+  9023 C6 20            add a,$20
268+  9025 6F               ld l,a
269+  9026 38 04            jr c,3F
270+  9028 7C               ld a,h
271+  9029 D6 08            sub 8
272+  902B 67               ld h,a
273+  902C 7C           3 ld a,h
274+  902D FE 58            cp $58
275+  902F 28 02            jr z,4F
276+  9031 10 CB            djnz 1B
277+  9033 ED 7B D9 85  4 ld sp,(Stack)
278+  9037 C9           	ret
279+  9038
280+  9038 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  903C FD F9        	ld sp,iy
282+  903E 06 08            ld b,8
283+  9040 D1           1 pop de
284+  9041 7B           	ld a,e
285+  9042 AE           	xor (hl)
286+  9043 77           	ld (hl),a
287+  9044 23           	inc hl
288+  9045 7A           	ld a,d
289+  9046 AE           	xor (hl)
290+  9047 77           	ld (hl),a
291+  9048 2B           	dec hl
292+  9049 24             	inc h
293+  904A 7C               ld a,h
294+  904B E6 07            and 7
295+  904D 20 0A            jr nz,2F
296+  904F 7D               ld a,l
297+  9050 C6 20            add a,$20
298+  9052 6F               ld l,a
299+  9053 38 04            jr c,2F
300+  9055 7C               ld a,h
301+  9056 D6 08            sub 8
302+  9058 67               ld h,a
303+  9059 7C           2 ld a,h
304+  905A FE 58            cp $58
305+  905C 28 21            jr z,4F
306+  905E D1               pop de
307+  905F 7A           	ld a,d
308+  9060 AE           	xor (hl)
309+  9061 77           	ld (hl),a
310+  9062 23           	inc hl
311+  9063 D1               pop de
312+  9064 7B           	ld a,e
313+  9065 AE           	xor (hl)
314+  9066 77           	ld (hl),a
315+  9067 2B           	dec hl
316+  9068 24           	inc h
317+  9069 7C               ld a,h
318+  906A E6 07            and 7
319+  906C 20 0A            jr nz,3F
320+  906E 7D               ld a,l
321+  906F C6 20            add a,$20
322+  9071 6F               ld l,a
323+  9072 38 04            jr c,3F
324+  9074 7C               ld a,h
325+  9075 D6 08            sub 8
326+  9077 67               ld h,a
327+  9078 7C           3 ld a,h
328+  9079 FE 58            cp $58
329+  907B 28 02            jr z,4F
330+  907D 10 C1            djnz 1B
331+  907F ED 7B D9 85  4 ld sp,(Stack)
332+  9083 C9           	ret
333+  9084
334+  9084 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9088 FD F9        	ld sp,iy
336+  908A 06 08            ld b,8
337+  908C D1           1 pop de
338+  908D 7B           	ld a,e
339+  908E AE           	xor (hl)
340+  908F 77           	ld (hl),a
341+  9090 24            	inc h
342+  9091 7C               ld a,h
343+  9092 E6 07            and 7
344+  9094 20 0A            jr nz,2F
345+  9096 7D               ld a,l
346+  9097 C6 20            add a,$20
347+  9099 6F               ld l,a
348+  909A 38 04            jr c,2F
349+  909C 7C               ld a,h
350+  909D D6 08            sub 8
351+  909F 67               ld h,a
352+  90A0 7C           2 ld a,h
353+  90A1 FE 58            cp $58
354+  90A3 28 1C            jr z,4F
355+  90A5 D1               pop de
356+  90A6 7A           	ld a,d
357+  90A7 AE           	xor (hl)
358+  90A8 77           	ld (hl),a
359+  90A9 24           	inc h
360+  90AA 7C               ld a,h
361+  90AB E6 07            and 7
362+  90AD 20 0A            jr nz,3F
363+  90AF 7D               ld a,l
364+  90B0 C6 20            add a,$20
365+  90B2 6F               ld l,a
366+  90B3 38 04            jr c,3F
367+  90B5 7C               ld a,h
368+  90B6 D6 08            sub 8
369+  90B8 67               ld h,a
370+  90B9 7C           3 ld a,h
371+  90BA FE 58            cp $58
372+  90BC 28 03            jr z,4F
373+  90BE D1               pop de
374+  90BF 10 CB            djnz 1B
375+  90C1 ED 7B D9 85  4 ld sp,(Stack)
376+  90C5 C9           	ret
377+  90C6
378+  90C6              ; ---------------------------------------------------
379+  90C6              ;
380+  90C6              ;   27/02/23
381+  90C6              ;
382+  90C6              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  90C6              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  90C6              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  90C6
386+  90C6 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  90CA FD F9            ld sp,iy
388+  90CC 06 02            ld b,2
389+  90CE D1           1 pop de
390+  90CF 7B               ld a,e
391+  90D0 AE               xor (hl)
392+  90D1 77               ld (hl),a
393+  90D2 23               inc hl
394+  90D3 7A               ld a,d
395+  90D4 AE               xor (hl)
396+  90D5 77               ld (hl),a
397+  90D6 2B               dec hl
398+  90D7
399+  90D7 24               inc h
400+  90D8 7C               ld a,h
401+  90D9 E6 07            and 7
402+  90DB 20 0A            jr nz,2F
403+  90DD 7D               ld a,l
404+  90DE C6 20            add a,$20
405+  90E0 6F               ld l,a
406+  90E1 38 04            jr c,2F
407+  90E3 7C               ld a,h
408+  90E4 D6 08            sub 8
409+  90E6 67               ld h,a
410+  90E7 7C           2 ld a,h
411+  90E8 FE 58            cp $58
412+  90EA 28 02            jr z,3F
413+  90EC
414+  90EC 10 E0            djnz 1B
415+  90EE ED 7B D9 85  3 ld sp,(Stack)
416+  90F2 C9               ret
417+  90F3
# file closed: Rutinas_de_impresion_sprites.asm
877   90F3              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  90F3              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  90F3              ;
  3+  90F3              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  90F3              ;
  5+  90F3              ; *****************************************************************************************************************************************************************************************
  6+  90F3              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  90F3
  8+  90F3 7C           calcula_tercio ld a,h
  9+  90F4 E6 18        	and $18
 10+  90F6 CB 2F        	sra a
 11+  90F8 CB 2F        	sra a
 12+  90FA CB 2F        	sra a
 13+  90FC C9           	ret
 14+  90FD
# file closed: calcula_tercio.asm
878   90FD              	include "Cls.asm"
# file opened: Cls.asm
  1+  90FD              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  90FD              ;
  3+  90FD              ;
  4+  90FD              ;	CLS.
  5+  90FD              ;
  6+  90FD              ;	Limpia la pantalla y define sus atributos.
  7+  90FD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  90FD              ;
  9+  90FD              ;	COLORES: 0 ..... NEGRO
 10+  90FD              ;    		 1 ..... AZUL
 11+  90FD              ; 			 2 ..... ROJO
 12+  90FD              ;			 3 ..... MAGENTA
 13+  90FD              ; 			 4 ..... VERDE
 14+  90FD              ; 			 5 ..... CIAN
 15+  90FD              ;			 6 ..... AMARILLO
 16+  90FD              ; 			 7 ..... BLANCO
 17+  90FD              ;
 18+  90FD              ;	INPUT: A contiene los atributos de pantalla.
 19+  90FD              ;
 20+  90FD              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  90FD
 22+  90FD
 23+  90FD 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  9100 11 01 40     	LD DE,$4001
 25+  9103 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  9106 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  9108 ED B0        	LDIR
 28+  910A 01 FF 02     	LD BC,767
 29+  910D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  910E ED B0        	LDIR
 31+  9110 C9           	ret
 32+  9111
# file closed: Cls.asm
879   9111              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  9111              ; ******************************************************************************************************************************************************************************************
  2+  9111              ;
  3+  9111              ;   22/01/23
  4+  9111              ;
  5+  9111              ;	Mov_down
  6+  9111              ;
  7+  9111              ; 	Mueve el Sprite X px hacia abajo.
  8+  9111              ;
  9+  9111              ;
 10+  9111 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  9114 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  9116              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  9116              ; 																	; _ en el caso de que no lo haya.
 14+  9116 3A AE 85     	ld a,(Vel_down)
 15+  9119 47           	ld b,a
 16+  911A 2A 98 85         ld hl,(Posicion_actual)
 17+  911D CD F3 90     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  9120 E6 02        	and 2
 19+  9122 28 0F        	jr z,1F
 20+  9124
 21+  9124              ; Nos encontramos en el último tercio de pantalla.
 22+  9124              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  9124
 24+  9124 7C           	ld a,h
 25+  9125 FE 57        	cp $57
 26+  9127 20 0A        	jr nz,1F
 27+  9129 7D           	ld a,l
 28+  912A C6 20        	add $20
 29+  912C 30 05        	jr nc,1F
 30+  912E
 31+  912E              ; ------------------------------
 32+  912E CD 0F 94     	call Reaparece_arriba
 33+  9131              ;	call Reinicio
 34+  9131              ; ------------------------------
 35+  9131 18 08        	jr 3F
 36+  9133 CD 33 8E     1 call NextScan
 37+  9136 22 98 85     	ld (Posicion_actual),hl
 38+  9139 10 E2            djnz 2B
 39+  913B CD 25 94     3 call Genera_coordenadas
 40+  913E C9           	ret
 41+  913F
 42+  913F
 43+  913F              ; ******************************************************************************************************************************************************************************************
 44+  913F              ;
 45+  913F              ;   22/01/23
 46+  913F              ;
 47+  913F              ;	Mov_up
 48+  913F              ;
 49+  913F              ; 	Mueve el Sprite hacia arriba.
 50+  913F              ;
 51+  913F              ;
 52+  913F 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  9142 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  9144              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  9144              ; 																		; _ en el caso de que no lo haya.
 56+  9144 3A AD 85     	ld a,(Vel_up)
 57+  9147 47           	ld b,a
 58+  9148 2A 98 85     	ld hl,(Posicion_actual)
 59+  914B CD F3 90     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  914E A7           	and a
 61+  914F 20 10        	jr nz,1F
 62+  9151
 63+  9151              ; Nos encontramos en el 1er tercio de pantalla.
 64+  9151              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  9151
 66+  9151 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  9152 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9154 20 0B            jr nz,1F
 69+  9156 7D               ld a,l
 70+  9157 D6 20            sub $20
 71+  9159 30 06            jr nc,1F
 72+  915B 25               dec h
 73+  915C
 74+  915C              ; -----------------------------
 75+  915C CD FF 93         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  915F              ;	call Reinicio
 77+  915F              ; -----------------------------
 78+  915F
 79+  915F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9161 CD 42 8E     1 call PreviousScan
 81+  9164 22 98 85     	ld (Posicion_actual),hl
 82+  9167 10 E2            djnz 3B
 83+  9169 CD 25 94     2 call Genera_coordenadas
 84+  916C C9           	ret
 85+  916D
 86+  916D              ; ******************************************************************************************************************************************************************************************
 87+  916D              ;
 88+  916D              ;	19/10/22
 89+  916D              ;
 90+  916D              ;	Mov_right.
 91+  916D              ;
 92+  916D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  916D              ;
 94+  916D
 95+  916D 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  9170 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9172              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9172              ; 																	; _ en el caso de que no lo haya.
 99+  9172 3A C3 85     	ld a,(Ctrl_0)
100+  9175 CB 77        	bit 6,a
101+  9177 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9179
103+  9179 CD AD 93     	call Stop_Amadeus_right
104+  917C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  917D 18 4D        	jr 8F
106+  917F
107+  917F 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9182 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9184 20 46        	jr nz,8F
110+  9186
111+  9186 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9189 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  918A 28 40        	jr z,8F
114+  918C
115+  918C              ; ---------- ---------- ----------
116+  918C              ;
117+  918C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  918C
119+  918C 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  918F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  9191 28 11        	jr z,1F
122+  9193 38 06        	jr c,6F
123+  9195 FE 04        	cp 4
124+  9197 28 14        	jr z,7F
125+  9199 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  919B
127+  919B              ; ---------- ---------- ----------
128+  919B              ;
129+  919B              ; Perfiles de velocidad
130+  919B              ;
131+  919B
132+  919B 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  919E FE FE        	cp $fe
134+  91A0 20 2A        	jr nz,8F
135+  91A2 18 10        	jr 3F
136+  91A4 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  91A7 FE FD        	cp $fd
138+  91A9 20 21        	jr nz,8F
139+  91AB 18 07        	jr 3F
140+  91AD 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  91B0 FE FB        	cp $fb
142+  91B2 20 18        	jr nz,8F
143+  91B4
144+  91B4              ; ---------- ---------- ----------
145+  91B4
146+  91B4              3
147+  91B4 CD ED 93     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  91B7              ;	call Reinicio
149+  91B7
150+  91B7              ; ---------- ---------- ----------
151+  91B7              ;
152+  91B7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  91B7
154+  91B7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  91B9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  91BA CD D3 91     	call DESPLZ_DER
157+  91BD C1           	pop bc
158+  91BE 10 F9        	djnz 5B
159+  91C0 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  91C3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  91C4 22 98 85     	ld (Posicion_actual),hl
162+  91C7 CD 25 94     	call Genera_coordenadas
163+  91CA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  91CC
165+  91CC              ; ---------- ---------- ----------
166+  91CC
167+  91CC 2A 98 85     8 ld hl,(Posicion_actual)
168+  91CF CD D3 91     	call DESPLZ_DER
169+  91D2 C9           2 ret
170+  91D3
171+  91D3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  91D3              ;
173+  91D3              ;	22/9/22
174+  91D3              ;
175+  91D3
176+  91D3 CD E2 91     DESPLZ_DER call Desplaza_derecha
177+  91D6 CD 2E 92         call modifica_parametros_1er_DESPLZ_2
178+  91D9 CD 57 92         call Ciclo_completo
179+  91DC 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  91DF CB FE        	set 7,(hl)
181+  91E1 C9           	ret
182+  91E2
183+  91E2              ; ******************************************************************************************************************************************************************************************
184+  91E2              ;	15/02/23
185+  91E2              ;
186+  91E2
187+  91E2 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  91E5 47           	ld b,a
189+  91E6 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  91E9 23           1 inc hl
191+  91EA 23           	inc hl
192+  91EB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  91ED 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  91F0 CD 99 87     	call Extrae_address
195+  91F3 22 9A 85     	ld (Puntero_objeto),hl
196+  91F6
197+  91F6              ; Modifica (Puntero_DESPLZ_izq).
198+  91F6
199+  91F6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  91F6              ; Cuántos movimientos hemos hecho ??
201+  91F6              ; DE contiene (Puntero_DESPLZ_der).
202+  91F6
203+  91F6 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  91F9 EB           	ex de,hl
205+  91FA A7           	and a
206+  91FB ED 52        	sbc hl,de
207+  91FD CB 3D        	srl l
208+  91FF 3E 08        6 ld a,8
209+  9201 95           	sub l
210+  9202 30 1E        	jr nc,3F
211+  9204
212+  9204              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  9204              ; B="0".
214+  9204
215+  9204 04           4 inc b
216+  9205 3C           	inc a
217+  9206 20 FC        	jr nz,4B
218+  9208 78           	ld a,b
219+  9209 08           	ex af,af
220+  920A 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  920D 23           5 inc hl
222+  920E 23           	inc hl
223+  920F 10 FC        	djnz 5B
224+  9211 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  9214 CD 99 87     	call Extrae_address
226+  9217 22 9A 85     	ld (Puntero_objeto),hl
227+  921A
228+  921A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  921A              ; _(Posicion_actual).
230+  921A
231+  921A 21 98 85     	ld hl,Posicion_actual
232+  921D 34           	inc (hl)
233+  921E 08               ex af,af
234+  921F 6F           	ld l,a
235+  9220 18 DD        	jr 6B
236+  9222
237+  9222              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  9222
239+  9222 47           3 ld b,a
240+  9223 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  9226 23           2 inc hl
242+  9227 23           	inc hl
243+  9228 10 FC        	djnz 2B
244+  922A 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  922D C9           8 ret
246+  922E
247+  922E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  922E              ;
249+  922E              ;	24/7/22
250+  922E              ;
251+  922E              ;	modifica_parametros_1er_DESPLZ_2
252+  922E              ;
253+  922E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  922E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  922E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  922E
257+  922E 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9231 A7           	and a
259+  9232 20 1F        	jr nz,1F
260+  9234 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  9236 32 9E 85         ld (CTRL_DESPLZ),a
262+  9239
263+  9239 21 97 85     	ld hl,Columns
264+  923C 34           	inc (hl)
265+  923D 3A AA 85     	ld a,(Cuad_objeto)
266+  9240 E6 01        	and 1
267+  9242 28 0F        	jr z,1F
268+  9244 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  9247 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9248 22 98 85     	ld (Posicion_actual),hl
271+  924B CD 25 94     	call Genera_coordenadas
272+  924E CD B9 93     	call Inc_CTRL_DESPLZ
273+  9251 18 03        	jr 2F
274+  9253 CD B9 93     1 call Inc_CTRL_DESPLZ
275+  9256 C9           2 ret
276+  9257
277+  9257              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9257              ;
279+  9257              ;	24/7/22
280+  9257              ;
281+  9257              ;	Ciclo_completo.
282+  9257              ;
283+  9257              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9257              ;
285+  9257              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9257              ; 	Decrementamos (Columns).
287+  9257              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9257              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9257
290+  9257
291+  9257 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  925A FE FF        	cp $ff
293+  925C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  925E E6 F0        	and $f0
295+  9260 20 28        	jr nz,3F
296+  9262
297+  9262              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9262
299+  9262 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9265 47           	ld b,a
301+  9266 3E F8        	ld a,$f8
302+  9268 80           	add b
303+  9269 32 9E 85     	ld (CTRL_DESPLZ),a
304+  926C 18 1C        	jr 3F
305+  926E 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9271 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9272 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9273 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9276 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9279 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  927B 20 0A        	jr nz,2F
312+  927D 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9280 23           	inc hl
314+  9281 22 98 85     	ld (Posicion_actual),hl
315+  9284 CD 25 94     	call Genera_coordenadas
316+  9287
317+  9287              ; Inicia el puntero de Sprite.
318+  9287
319+  9287 CD B0 87     2 call Inicia_puntero_objeto_der
320+  928A C9           3 ret
321+  928B
322+  928B              ; ******************************************************************************************************************************************************************************************
323+  928B              ;
324+  928B              ;	15/02/23
325+  928B              ;
326+  928B              ;	Mov_left.
327+  928B              ;
328+  928B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  928B              ;
330+  928B              Mov_left
331+  928B
332+  928B 21 C3 85     	ld hl,Ctrl_0
333+  928E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9290              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9290              ; 																	; _ en el caso de que no lo haya.
336+  9290 3A C3 85     	ld a,(Ctrl_0)
337+  9293 CB 77        	bit 6,a
338+  9295 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9297
340+  9297 CD B3 93     	call Stop_Amadeus_left
341+  929A C8           	ret z
342+  929B 20 50        	jr nz,8F
343+  929D
344+  929D 3A 9C 85     11 ld a,(Coordenada_X)
345+  92A0 A7           	and a
346+  92A1 20 4A        	jr nz,8F
347+  92A3
348+  92A3 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  92A6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  92A7 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  92A9
352+  92A9              ; ---------- ---------- ----------
353+  92A9
354+  92A9 3A AB 85     	ld a,(Vel_left)
355+  92AC FE 02        	cp 2
356+  92AE 28 0F        	jr z,1F
357+  92B0 38 04        	jr c,6F
358+  92B2 FE 04        	cp 4
359+  92B4 28 12        	jr z,7F
360+  92B6
361+  92B6              ; ---------- ---------- ----------
362+  92B6
363+  92B6 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  92B9 FE F9        	cp $f9
365+  92BB 20 30        	jr nz,8F
366+  92BD 18 10        	jr 4F
367+  92BF 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  92C2 FE FA        	cp $fa
369+  92C4 20 27        	jr nz,8F
370+  92C6 18 07        	jr 4F
371+  92C8 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  92CB FE FC        	cp $fc
373+  92CD 20 1E        	jr nz,8F
374+  92CF
375+  92CF              ; ---------- ---------- ----------
376+  92CF
377+  92CF              4
378+  92CF CD DB 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  92D2              ;	call Reinicio
380+  92D2
381+  92D2              ; ---------- ---------- ----------
382+  92D2
383+  92D2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  92D4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  92D5
386+  92D5 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  92D8 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  92DB
389+  92DB CD F4 92     	call DESPLZ_IZQ
390+  92DE C1           	pop bc
391+  92DF 10 F3        	djnz 5B
392+  92E1 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  92E4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  92E5 22 98 85     	ld (Posicion_actual),hl
395+  92E8 CD 25 94     	call Genera_coordenadas
396+  92EB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  92ED
398+  92ED              ; ---------- ---------- ----------
399+  92ED              ; Movemos, no hay recolocación.
400+  92ED
401+  92ED 2A 98 85     8 ld hl,(Posicion_actual)
402+  92F0 CD F4 92     	call DESPLZ_IZQ
403+  92F3 C9           2 ret
404+  92F4
405+  92F4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  92F4              ;
407+  92F4              ;	22/9/22
408+  92F4
409+  92F4              DESPLZ_IZQ
410+  92F4
411+  92F4 CD 03 93     	call Desplaza_izquierda
412+  92F7 CD 4F 93         call modifica_parametros_1er_DESPLZ
413+  92FA CD 77 93     	call Ciclo_completo_2
414+  92FD 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  9300 CB BE        	res 7,(hl)
416+  9302 C9           	ret
417+  9303
418+  9303              Desplaza_izquierda
419+  9303
420+  9303 3A AB 85     	ld a,(Vel_left)
421+  9306 47           	ld b,a
422+  9307 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  930A 23           1 inc hl
424+  930B 23           	inc hl
425+  930C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  930E 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  9311 CD 99 87     	call Extrae_address
428+  9314 22 9A 85     	ld (Puntero_objeto),hl
429+  9317
430+  9317              ; Modifica (Puntero_DESPLZ_der).
431+  9317
432+  9317              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  9317              ; Cuántos movimientos hemos hecho ??
434+  9317              ; DE contiene (Puntero_DESPLZ_izq).
435+  9317
436+  9317 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  931A EB           	ex de,hl
438+  931B A7           	and a
439+  931C ED 52        	sbc hl,de
440+  931E CB 3D        	srl l
441+  9320 3E 08        6 ld a,8
442+  9322 95           	sub l
443+  9323 30 1E        	jr nc,3F
444+  9325
445+  9325              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  9325              ; B="0".
447+  9325
448+  9325 04           4 inc b
449+  9326 3C           	inc a
450+  9327 20 FC        	jr nz,4B
451+  9329 78           	ld a,b
452+  932A 08           	ex af,af
453+  932B 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  932E 23           5 inc hl
455+  932F 23           	inc hl
456+  9330 10 FC        	djnz 5B
457+  9332 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  9335 CD 99 87     	call Extrae_address
459+  9338 22 9A 85     	ld (Puntero_objeto),hl
460+  933B
461+  933B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  933B              ; _(Posicion_actual).
463+  933B
464+  933B 21 98 85     	ld hl,Posicion_actual
465+  933E 35           	dec (hl)
466+  933F 08           	ex af,af
467+  9340 6F           	ld l,a
468+  9341 18 DD        	jr 6B
469+  9343
470+  9343              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  9343
472+  9343 47           3 ld b,a
473+  9344 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  9347 23           2 inc hl
475+  9348 23           	inc hl
476+  9349 10 FC        	djnz 2B
477+  934B 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  934E C9           8 ret
479+  934F
480+  934F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  934F              ;
482+  934F              ;	modifica_parametros_1er_DESPLZ
483+  934F              ;
484+  934F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  934F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  934F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  934F
488+  934F 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  9352 A7           	and a
490+  9353 20 1E        	jr nz,1F
491+  9355 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  9356 32 9E 85         ld (CTRL_DESPLZ),a
493+  9359 21 97 85     	ld hl,Columns
494+  935C 34           	inc (hl)
495+  935D 3A AA 85     	ld a,(Cuad_objeto)
496+  9360 E6 01        	and 1
497+  9362 20 0F        	jr nz,1F
498+  9364 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9367 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9368 22 98 85     	ld (Posicion_actual),hl
501+  936B CD 25 94     	call Genera_coordenadas
502+  936E CD CA 93     	call Dec_CTRL_DESPLZ
503+  9371 18 03        	jr 2F
504+  9373 CD CA 93     1 call Dec_CTRL_DESPLZ
505+  9376 C9           2 ret
506+  9377
507+  9377              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9377
509+  9377 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  937A FE F7        	cp $f7
511+  937C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  937E 30 2C        	jr nc,3F
513+  9380
514+  9380              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  9380
516+  9380 06 00        	ld b,0
517+  9382 04           4 inc b
518+  9383 3C           	inc a
519+  9384 FE F7        	cp $f7
520+  9386 20 FA        	jr nz,4B
521+  9388 3E FF        	ld a,$ff
522+  938A 90           	sub b
523+  938B 32 9E 85     	ld (CTRL_DESPLZ),a
524+  938E 18 1C        	jr 3F
525+  9390
526+  9390              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  9390
528+  9390 21 97 85     1 ld hl,Columns
529+  9393 35           	dec (hl)
530+  9394 AF           	xor a
531+  9395 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9398 3A AA 85     	ld a,(Cuad_objeto)
533+  939B E6 01        	and 1
534+  939D 28 0A        	jr z,2F
535+  939F 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  93A2 2B           	dec hl
537+  93A3 22 98 85     	ld (Posicion_actual),hl
538+  93A6 CD 25 94     	call Genera_coordenadas
539+  93A9
540+  93A9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  93A9
542+  93A9 CD C3 87     2 call Inicia_puntero_objeto_izq
543+  93AC C9           3 ret
544+  93AD
545+  93AD              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  93AD              ;
547+  93AD              ;	19/10/22
548+  93AD              ;
549+  93AD              ;	(cp 29) para un Amadeus de 3 Columns.
550+  93AD              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  93AD
552+  93AD 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  93B0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  93B2 C9           	ret
555+  93B3
556+  93B3              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  93B3              ;
558+  93B3              ;	19/10/22
559+  93B3              ;
560+  93B3              ;	(cp 2) para un Amadeus de 3 Columns.
561+  93B3              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  93B3
563+  93B3 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  93B6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  93B8 C9           	ret
566+  93B9
567+  93B9              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  93B9              ;
569+  93B9              ;	24/7/22
570+  93B9              ;
571+  93B9              ;	Inc_CTRL_DESPLZ
572+  93B9              ;
573+  93B9              ;
574+  93B9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  93B9
576+  93B9 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  93BC 3A AC 85     	ld a,(Vel_right)
578+  93BF A7           	and a
579+  93C0 28 06        	jr z,1F
580+  93C2 47           	ld b,a
581+  93C3 34           3 inc (hl)
582+  93C4 10 FD        	djnz 3B
583+  93C6 18 01        	jr 2F
584+  93C8 34           1 inc (hl)
585+  93C9 C9           2 ret
586+  93CA
587+  93CA              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  93CA              ;
589+  93CA              ;	5/2/23
590+  93CA              ;
591+  93CA              ;	Dec_CTRL_DESPLZ
592+  93CA              ;
593+  93CA              ;
594+  93CA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  93CA
596+  93CA 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  93CD 3A AB 85     	ld a,(Vel_left)
598+  93D0 A7           	and a
599+  93D1 28 06        	jr z,1F
600+  93D3 47           	ld b,a
601+  93D4 35           3 dec (hl)
602+  93D5 10 FD        	djnz 3B
603+  93D7 18 01        	jr 2F
604+  93D9 35           1 dec (hl)
605+  93DA C9           2 ret
606+  93DB
607+  93DB              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  93DB
609+  93DB 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  93DE 01 1F 00     	ld bc,31
611+  93E1 A7           	and a
612+  93E2 ED 4A        	adc hl,bc
613+  93E4 22 98 85     	ld (Posicion_actual),hl
614+  93E7 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  93EA CB C6        	set 0,(hl)
616+  93EC C9           	ret
617+  93ED
618+  93ED              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  93ED
620+  93ED 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  93F0 01 1F 00     	ld bc,31
622+  93F3 A7           	and a
623+  93F4 ED 42        	sbc hl,bc
624+  93F6 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  93F9 21 C3 85     	ld hl,Ctrl_0
626+  93FC CB CE        	set 1,(hl)
627+  93FE C9           	ret
628+  93FF
629+  93FF              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  93FF
631+  93FF 24           Reaparece_abajo inc h
632+  9400 01 E0 17     	ld bc,$17e0
633+  9403 A7           	and a
634+  9404 ED 4A        	adc hl,bc
635+  9406 22 98 85     	ld (Posicion_actual),hl
636+  9409 21 C3 85     	ld hl,Ctrl_0
637+  940C CB D6        	set 2,(hl)
638+  940E C9           	ret
639+  940F
640+  940F              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  940F
642+  940F 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  9412 A7           	and a
644+  9413 ED 42        	sbc hl,bc
645+  9415 22 98 85     	ld (Posicion_actual),hl
646+  9418 21 C3 85     	ld hl,Ctrl_0
647+  941B CB DE        	set 3,(hl)
648+  941D C9           	ret
649+  941E
650+  941E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  941E
652+  941E 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  9421 22 98 85     	ld (Posicion_actual),hl
654+  9424 C9           	ret
# file closed: Direcciones.asm
880   9425              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9425              ; ------------------------------------------------------------------------
  2+  9425              ;
  3+  9425              ;	28/03/23
  4+  9425              ;
  5+  9425              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  9425              ;	Fila superior "0", Columna izquierda "0".
  7+  9425              ;
  8+  9425              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  9425              ;
 10+  9425              ;	Modifica: A,BC y DE.
 11+  9425
 12+  9425 C5           Genera_coordenadas push bc
 13+  9426 E5           	push hl
 14+  9427
 15+  9427 2A 98 85     	ld hl,(Posicion_actual)
 16+  942A 7D           	ld a,l
 17+  942B E6 1F        	and $1f
 18+  942D 32 9C 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 19+  9430
 20+  9430 CD F3 90     	call calcula_tercio
 21+  9433 3C           	inc a
 22+  9434 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 23+  9435
 24+  9435 1E 00        	ld e,0
 25+  9437 7D           	ld a,l
 26+  9438 E6 E0        	and $e0
 27+  943A 1C           1 inc e
 28+  943B D6 20        	sub 32
 29+  943D 20 FB        	jr nz,1B
 30+  943F
 31+  943F 10 F9        	djnz 1B
 32+  9441
 33+  9441 7B           	ld a,e
 34+  9442 32 9D 85     	ld (Coordenada_y),a
 35+  9445
 36+  9445 E1           	pop hl
 37+  9446 C1           	pop bc
 38+  9447
 39+  9447 C9           	ret
 40+  9448
 41+  9448              ; ------------------------------------------------------------------------
 42+  9448              ;	28/03/23
 43+  9448              ;
 44+  9448              ;	Proporciona las coordenadas del disparo a imprimir.
 45+  9448              ;	Fila superior "0", Columna izquierda "0".
 46+  9448              ;
 47+  9448              ;	Input: HL contendrá la posición del proyectil en pantalla.
 48+  9448              ;	Output: DE contendrá las coordenadas del disparo:
 49+  9448              ;
 50+  9448              ;		DE="$120d"
 51+  9448              ;
 52+  9448              ;		D, (Coordenada_X), Columnas, $12
 53+  9448              ;		E, (Coordenada_y), Filas, $0d
 54+  9448              ;
 55+  9448              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 56+  9448
 57+  9448              ;	Modifica: A,BC y DE.
 58+  9448
 59+  9448
 60+  9448              Genera_coordenadas_disparo
 61+  9448
 62+  9448              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 63+  9448
 64+  9448 7D           	ld a,l
 65+  9449 E6 1F        	and $1f
 66+  944B 57           	ld d,a 												; Columnas en D. Coordenada_X.
 67+  944C
 68+  944C CD F3 90     	call calcula_tercio
 69+  944F 3C           	inc a
 70+  9450 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 71+  9451
 72+  9451 1E 00        	ld e,0
 73+  9453 7D           	ld a,l
 74+  9454 E6 E0        	and $e0
 75+  9456 1C           1 inc e
 76+  9457 D6 20        	sub 32
 77+  9459 20 FB        	jr nz,1B
 78+  945B
 79+  945B 10 F9        	djnz 1B
 80+  945D C9           	ret
 81+  945E
# file closed: Genera_coordenadas.asm
881   945E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  945E
  2+  945E
  3+  945E              ;   11/8/22
  4+  945E              ;
  5+  945E              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  945E              ;
  7+  945E              ;   Mov_obj.asm
  8+  945E              ;
  9+  945E              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  945E              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  945E              ;
 12+  945E              ;   Codificación:
 13+  945E              ;
 14+  945E              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  945E
 16+  945E              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  945E
 18+  945E 02 40 00     Arriba db 2,%01000000,0
 19+  9461 02 80 00     Abajo db 2,%10000000,0
 20+  9464 02 20 00     Derecha db 2,%00100000,0
 21+  9467 02 10 00     Izquierda db 2,%00010000,0
 22+  946A 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  946E 60 42 60 40
 22+  9472 63
 23+  9473 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9477 22 A3 80 A0
 24+  947B 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  947F 84 A0 83 A0
 25+  9483 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9487 80 A3 22 A0
 26+  948B 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  948F 40 60 42 60
 27+  9493 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9497 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  949B 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  949F 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  94A3 84
 31+  94A4 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  94A8 84 00
 32+  94AA 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  94AE 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  94B2 1F 1F 1F 1F
 34+  94B6 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  94BA 1F 1F 1F 1F
 34+  94BE 1F
 35+  94BF 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  94C3 2F 2F 2F 2F
 35+  94C7 2F 2F
 36+  94C9 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  94CD 2F 2F 00
 37+  94D0
 38+  94D0
 39+  94D0              ; ----- ----- ----- ----- -----
 40+  94D0
 41+  94D0 AE 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  94D2 AA 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  94D4 67 94        Indice_mov_Izquierda defw Izquierda
 44+  94D6 64 94        Indice_mov_Derecha defw Derecha
 45+  94D8 61 94        Indice_mov_Abajo defw Abajo
 46+  94DA 5E 94        Indice_mov_Arriba defw Arriba
 47+  94DC 9B 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  94DE 9F 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  94E0 97 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  94E2 A4 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  94E4 6A 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  94E6              ; ----- ----- ----- ----- -----
 53+  94E6
 54+  94E6 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  94E9 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  94EA 28 02            jr z,1F
 57+  94EC 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  94EE 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  94F1 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  94F3 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  94F6              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  94F6 2A C7 85         ld hl,(Puntero_mov)
 63+  94F9 7E               ld a,(hl)
 64+  94FA 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  94FD 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  94FE 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  9501
 68+  9501 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  9504 A7               and a
 70+  9505 20 0C            jr nz,12F
 71+  9507 2A C7 85         ld hl,(Puntero_mov)
 72+  950A 7E               ld a,(hl)
 73+  950B A7               and a
 74+  950C 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  950E E6 0F            and $0f
 76+  9510 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9513              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9513 2A C7 85     12 ld hl,(Puntero_mov)
 79+  9516 CB 7E            bit 7,(hl)
 80+  9518 28 03            jr z,2F
 81+  951A CD 11 91         call Mov_down
 82+  951D 2A C7 85     2 ld hl, (Puntero_mov)
 83+  9520 CB 76            bit 6,(hl)
 84+  9522 28 03            jr z,3F
 85+  9524 CD 3F 91         call Mov_up
 86+  9527 2A C7 85     3 ld hl, (Puntero_mov)
 87+  952A CB 6E            bit 5,(hl)
 88+  952C 28 03            jr z,4F
 89+  952E CD 6D 91         call Mov_right
 90+  9531 2A C7 85     4 ld hl, (Puntero_mov)
 91+  9534 CB 66            bit 4,(hl)
 92+  9536 28 03            jr z,5F
 93+  9538 CD 8B 92         call Mov_left
 94+  953B
 95+  953B              ; ---------- --------- --------- ---------- ----------
 96+  953B
 97+  953B 3A CB 85     5 ld a,(Repetimos_db)
 98+  953E A7               and a
 99+  953F 28 07            jr z,6F
100+  9541 3D               dec a
101+  9542 32 CB 85         ld (Repetimos_db),a
102+  9545 28 01            jr z,6f
103+  9547 C9           11 ret
104+  9548 21 C9 85     6 ld hl,Contador_db_mov
105+  954B 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  954C 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  954F 23               inc hl
108+  9550 22 C7 85         ld (Puntero_mov),hl
109+  9553 18 F2            jr 11B
110+  9555 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9558 3A CA 85         ld a,(Incrementa_puntero)
112+  955B 47               ld b,a
113+  955C 23           8 inc hl
114+  955D 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  955F 5E               ld e,(hl)
116+  9560 23               inc hl
117+  9561 56               ld d,(hl)
118+  9562 EB               ex de,hl
119+  9563 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9566 18 DF            jr 11B
121+  9568
122+  9568              ; ---------- --------- --------- ---------- ----------
123+  9568              ;
124+  9568              ;   11/8/22
125+  9568              ;
126+  9568              ;   Prepara_Puntero_mov
127+  9568
128+  9568 E5           Prepara_Puntero_mov push hl
129+  9569 D5               push de
130+  956A 2A C5 85         ld hl,(Puntero_indice_mov)
131+  956D 5E               ld e,(hl)
132+  956E 23               inc hl
133+  956F 56               ld d,(hl)
134+  9570 EB               ex de,hl
135+  9571 22 C7 85         ld (Puntero_mov),hl
136+  9574 D1               pop de
137+  9575 E1               pop hl
138+  9576 C9               ret
139+  9577
140+  9577              ; ---------- --------- --------- ---------- ----------
141+  9577              ;
142+  9577              ;   11/8/22
143+  9577              ;
144+  9577              ;   Reinicia_el_movimiento
145+  9577
146+  9577 CD 68 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  957A AF               xor a
148+  957B 32 C9 85         ld (Contador_db_mov),a
149+  957E 32 CA 85         ld (Incrementa_puntero),a
150+  9581 C3 E6 94         jp Movimiento
151+  9584 C9               ret
152+  9585              ; ---------- --------- --------- ---------- ----------
153+  9585
154+  9585
155+  9585
156+  9585
157+  9585
158+  9585
159+  9585
160+  9585
161+  9585
162+  9585
163+  9585
164+  9585
165+  9585
166+  9585
167+  9585
168+  9585
169+  9585
170+  9585
# file closed: Patrones_de_mov.asm
882   9585              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9585              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9585              ;
  3+  9585              ;	3/1/23
  4+  9585              ;
  5+  9585              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9585
  7+  9585              ;	ADC HL,SP	LD (addr),SP
  8+  9585              ;	ADD HL,SP	LD SP,(addr)
  9+  9585              ;	ADD IX,SP	LD SP,nn
 10+  9585              ; 	ADD IY,SP	LD SP,HL
 11+  9585              ;				LD SP,IX
 12+  9585              ;	DEC SP		LD SP,IY
 13+  9585
 14+  9585              ;	EX (SP),HL
 15+  9585              ;	EX (SP),IX
 16+  9585              ;	EX (SP),IY
 17+  9585
 18+  9585              ;	INC SP
 19+  9585
 20+  9585
 21+  9585                  org $7fa0
=======
255   861D CD 26 88     3 call Restore_Amadeus
256   8620 CD 9D 87     	call Inicia_Puntero_objeto
257   8623 CD 49 8B     	call Draw
258   8626 CD A0 7F     	call Guarda_foto_registros
259   8629 CD 38 88     	call Store_Amadeus
260   862C
261   862C              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
262   862C
263   862C CD 59 87     	call Inicia_Puntero_Disparo_Entidades
264   862F CD 60 87     	call Inicia_Puntero_Disparo_Amadeus
265   8632
266   8632              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
267   8632
268   8632 CD 43 87     	call Inicia_punteros_de_entidades
269   8635 CD 14 88     	call Restore_Primera_entidad
270   8638
271   8638 3A D7 85     	ld a,(Numero_de_entidades)
272   863B 3C           	inc a
273   863C 32 D8 85     	ld (Numero_de_malotes),a
274   863F
275   863F FB           2 ei
276   8640 18 FD        	jr 2B
277   8642
278   8642              ; -----------------------------------------------------------------------------------
279   8642
280   8642              Frame
281   8642
282   8642              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
283   8642              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
284   8642
285   8642 3E 02            ld a,2
286   8644 D3 FE            out ($fe),a
287   8646 CD 4D 8E     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
288   8649 CD 86 8E     	call Extrae_foto_disparos
289   864C 3E 01            ld a,1
290   864E D3 FE            out ($fe),a
291   8650
292   8650              ; ----------------------------------------------------------------------
293   8650
294   8650              ;	Existe colisión?????
295   8650
296   8650 3A E6 85     	ld a,(Impacto)
297   8653 A7           	and a
298   8654 28 02        	jr z,5F
299   8656
300   8656              ; A="1" Impacto en entidad.
301   8656              ; A="2"	Impacto en Amadeus.
302   8656
303   8656 18 FE        	jr $
304   8658
305   8658 AF           5 xor a
306   8659 32 E6 85     	ld (Impacto),a										; Flag (Impacto) a "0".
307   865C
308   865C CD 27 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
309   865F CD 45 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
310   8662
311   8662 21 00 70     	ld hl,Album_de_fotos
312   8665 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
313   8668              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
314   8668 3A D7 85         ld a,(Numero_de_entidades)
315   866B 47               ld b,a
316   866C A7           	and a
317   866D 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
318   866F
319   866F C5           2 push bc
320   8670 CD BC 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
321   8673 3A C3 85     	ld a,(Ctrl_0)
322   8676 CB 67        	bit 4,a
323   8678 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
324   867A
325   867A              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
326   867A              ; Las entidades sólo generan disparo cuando se mueven.
327   867A              ; 16/02/23.
328   867A              ; [[[
329   867A CD 81 88     	call Detecta_disparo_entidad
330   867D              ; ]]]
331   867D CD 0A 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
332   8680
333   8680 21 C3 85     1 ld hl,Ctrl_0
334   8683 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
335   8685 AF           	xor a
336   8686 32 C4 85     	ld (Obj_dibujado),a
337   8689 CD E5 87     	call Store_Restore_entidades
338   868C C1           	pop bc
339   868D 10 E0        	djnz 2B
340   868F
341   868F              ; Tras la gestión de las entidades, ... AMADEUS.
342   868F
343   868F CD 26 88     4 call Restore_Amadeus
344   8692 CD DB 86     	call Mov_Amadeus
345   8695 3A C3 85     	ld a,(Ctrl_0)
346   8698 CB 67        	bit 4,a
347   869A 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
348   869C CD 0A 87     	call Guarda_foto_entidad_a_pintar
349   869F
350   869F 21 C3 85     3 ld hl,Ctrl_0
351   86A2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
352   86A4 AF           	xor a
353   86A5 32 C4 85     	ld (Obj_dibujado),a
354   86A8 CD 38 88     	call Store_Amadeus
355   86AB
356   86AB              ; -----
357   86AB
358   86AB CD 43 87     	call Inicia_punteros_de_entidades
359   86AE CD 14 88     	call Restore_Primera_entidad
360   86B1
361   86B1              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
362   86B1
363   86B1 CD 67 87     	call Calcula_numero_de_malotes
364   86B4 CD 7F 87     	call Calcula_numero_de_disparotes
365   86B7
366   86B7 3E 04        	ld a,4
367   86B9 D3 FE        	out ($fe),a
368   86BB C9           	ret
369   86BC
370   86BC              ; --------------------------------------------------------------------------------------------------------------
371   86BC              ;
372   86BC              ;	29/1/23
373   86BC
374   86BC              Mov_obj
375   86BC
376   86BC              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
377   86BC
378   86BC AF           	xor a
379   86BD 32 C4 85     	ld (Obj_dibujado),a
380   86C0 CD 14 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
381   86C3              ;														; Obj_dibujado="0".
382   86C3              ; Movemos Entidades malignas.
383   86C3
384   86C3 CD D1 94     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
385   86C6 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
386   86C9 CB 67        	bit 4,a
387   86CB C8           	ret z
388   86CC
389   86CC              ; ---------
390   86CC
391   86CC 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
392   86CE 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
393   86D1 CD 14 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
394   86D4 CD 2B 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
395   86D7 CD FA 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
396   86DA C9           	ret													; _de la misma.
397   86DB
398   86DB              ; --------------------------------------------------------------------------------------------------------------
399   86DB              ;
400   86DB              ;	29/1/23
401   86DB
402   86DB              Mov_Amadeus
403   86DB
404   86DB AF           	xor a
405   86DC 32 C4 85     	ld (Obj_dibujado),a
406   86DF CD 14 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
407   86E2              ;														; Obj_dibujado="0".
408   86E2              ; Movemos Amadeus.
409   86E2
410   86E2 CD 5E 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
411   86E5 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
412   86E8 CB 67        	bit 4,a
413   86EA C8           	ret z
414   86EB
415   86EB              ; ---------
416   86EB
417   86EB 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
418   86ED 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
419   86F0 CD 14 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
420   86F3 CD 2B 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
421   86F6 CD FA 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
422   86F9 C9           	ret													; _de la nave.
423   86FA
424   86FA              ; --------------------------------------------------------------------------------------------------------------
425   86FA              ;
426   86FA              ;	31/01/23
427   86FA              ;
428   86FA              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
429   86FA
430   86FA              Guarda_foto_entidad_a_borrar
431   86FA
432   86FA CD 23 8E     	call Prepara_draw
433   86FD CD 5D 8D     	call calcula_CColumnass
434   8700 CD 94 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
435   8703 CD E9 8D     	call Define_rutina_de_impresion
436   8706 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
437   8709 C9           	ret
438   870A
439   870A              ; --------------------------------------------------------------------------------------------------------------
440   870A              ;
441   870A              ;	31/01/23
442   870A              ;
443   870A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
444   870A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
445   870A
446   870A              Guarda_foto_entidad_a_pintar
447   870A
448   870A CD 37 87     	call Repone_pintar
449   870D CD 49 8B     	call Draw
450   8710 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
451   8713 C9           	ret
452   8714
453   8714              ; --------------------------------------------------------------------------------------------------------------
454   8714              ;
455   8714              ;
456   8714
457   8714 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
458   8717 3A C4 85     	ld a,(Obj_dibujado)
459   871A A7           	and a
460   871B 28 05        	jr z,1F
461   871D 11 B9 85     	ld de,Variables_de_pintado
462   8720 18 03        	jr 2F
463   8722 11 AF 85     1 ld de,Variables_de_borrado
464   8725 01 08 00     2 ld bc,8
465   8728 ED B0        	ldir
466   872A C9           	ret
467   872B
468   872B              ; --------------------------------------------------------------------------------------------------------------
469   872B
470   872B 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
471   872E 11 96 85     	ld de,Filas
472   8731 01 08 00     	ld bc,8
473   8734 ED B0        	ldir
474   8736 C9           	ret
475   8737
476   8737 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
477   873A 11 96 85     	ld de,Filas
478   873D 01 08 00     	ld bc,8
479   8740 ED B0        	ldir
480   8742 C9           	ret
481   8743
482   8743              ; *************************************************************************************************************************************************************
483   8743              ;
484   8743              ; 8/1/23
485   8743              ;
486   8743              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
487   8743              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
488   8743              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
489   8743
490   8743              ; Destruye HL y DE !!!!!
491   8743
492   8743              Inicia_punteros_de_entidades
493   8743
494   8743 21 68 84     	ld hl,Indice_de_entidades
495   8746 CD 97 87         call Extrae_address
496   8749 22 D1 85         ld (Puntero_store_entidades),hl
497   874C 21 6A 84     	ld hl,Indice_de_entidades+2
498   874F 22 D5 85     	ld (Indice_restore),hl
499   8752 CD 97 87     	call Extrae_address
500   8755 22 D3 85     	ld (Puntero_restore_entidades),hl
501   8758 C9               ret
502   8759
503   8759              ; *************************************************************************************************************************************************************
504   8759              ;
505   8759              ; 8/1/23
506   8759              ;
507   8759              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
508   8759
509   8759 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
510   875C 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
511   875F C9           	ret
512   8760 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
513   8763 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
514   8766 C9           	ret
515   8767
516   8767              ; -------------------------------------------------------------------------------------------------------------
517   8767              ;
518   8767              ; 28/2/23
519   8767              ;
520   8767
521   8767              Calcula_numero_de_malotes
522   8767
523   8767 21 00 70     	ld hl,Album_de_fotos
524   876A EB           	ex de,hl
525   876B 2A DD 85     	ld hl,(Stack_snapshot)
526   876E
527   876E 06 00        	ld b,0
528   8770 7D           	ld a,l
529   8771 93           	sub e
530   8772 28 07        	jr z,1F
531   8774
532   8774              ; Nº de malotes no es "0".
533   8774
534   8774 D6 06        2 sub 6
535   8776 04           	inc b
536   8777 A7           	and a
537   8778 20 FA        	jr nz,2B
538   877A 78           	ld a,b
539   877B
540   877B 32 D8 85     1 ld (Numero_de_malotes),a
541   877E C9           	ret
542   877F
543   877F              ; -------------------------------------------------------------------------------------------------------------
544   877F              ;
545   877F              ; 28/2/23
546   877F              ;
547   877F
548   877F              Calcula_numero_de_disparotes
549   877F
550   877F 21 60 70     	ld hl,Album_de_fotos_disparos
551   8782 EB           	ex de,hl
552   8783 2A DF 85     	ld hl,(Stack_snapshot_disparos)
553   8786
554   8786 06 00        	ld b,0
555   8788 7D           	ld a,l
556   8789 93           	sub e
557   878A 28 07        	jr z,1F
558   878C
559   878C              ; Nº de malotes no es "0".
560   878C
561   878C D6 06        2 sub 6
562   878E 04           	inc b
563   878F A7           	and a
564   8790 20 FA        	jr nz,2B
565   8792 78           	ld a,b
566   8793
567   8793 32 E1 85     1 ld (Numero_de_disparotes),a
568   8796 C9           	ret
569   8797              ; *************************************************************************************************************************************************************
570   8797              ;
571   8797              ; 20/10/22
572   8797              ;
573   8797              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
574   8797              ;
575   8797              ; Destruye el puntero y DE !!!!!
576   8797
577   8797 5E           Extrae_address ld e,(hl)
578   8798 23           	inc hl
579   8799 56           	ld d,(hl)
580   879A 2B           	dec hl
581   879B EB           	ex de,hl
582   879C C9           	ret
583   879D
584   879D              ; *************************************************************************************************************************************************************
585   879D              ;
586   879D              ;	7/2/23
587   879D              ;
588   879D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
589   879D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
590   879D              ;
591   879D              ;   Destruye HL y BC !!!!!,
592   879D              ;
593   879D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
594   879D              ;					"0" ..... Izquierda.
595   879D
596   879D              Inicia_Puntero_objeto
597   879D
598   879D 3A AA 85     	ld a,(Cuad_objeto)
599   87A0 E6 01        	and 1
600   87A2 F5           	push af
601   87A3 CC C1 87     	call z,Inicia_puntero_objeto_izq
602   87A6 F1           	pop af
603   87A7 28 2B        	jr z,1F
604   87A9 CD AE 87     	call Inicia_puntero_objeto_der
605   87AC 18 26        	jr 1F
606   87AE
607   87AE              ; Arrancamos desde la parte izquierda de la pantalla.
608   87AE              ; Iniciamos (Indice_Sprite_der).
609   87AE
610   87AE 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
611   87B1 22 A4 85     	ld (Puntero_DESPLZ_der),hl
612   87B4 CD 97 87     	call Extrae_address
613   87B7 22 9A 85     	ld (Puntero_objeto),hl
614   87BA
615   87BA 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
616   87BD              ;	call Extrae_address
617   87BD 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
618   87C0 C9           	ret
619   87C1
620   87C1              ; Arrancamos desde la parte derecha de la pantalla.
621   87C1              ; Iniciamos (Indice_Sprite_izq).
622   87C1
623   87C1 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
624   87C4 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
625   87C7 CD 97 87     	call Extrae_address
626   87CA 22 9A 85     	ld (Puntero_objeto),hl
627   87CD
628   87CD 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
629   87D0              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
630   87D0 22 A4 85     	ld (Puntero_DESPLZ_der),hl
631   87D3 C9           	ret
632   87D4
633   87D4              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
634   87D4
635   87D4 21 38 83     1 ld hl,Amadeus
636   87D7 ED 4B 9A 85  	ld bc,(Puntero_objeto)
637   87DB B7 ED 42     	sub hl,bc
638   87DE C0           	ret nz
639   87DF 21 C3 85     	ld hl,Ctrl_0
640   87E2 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
641   87E4 C9           	ret 												; _de nuestra nave en los extremos.
642   87E5
643   87E5              ; *************************************************************************************************************************************************************
644   87E5              ;
645   87E5              ;	8/1/23
646   87E5              ;
647   87E5              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
648   87E5              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
649   87E5
650   87E5              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
651   87E5              ;	_de la 2ª y 3ª entidad respectivamente.
652   87E5
653   87E5              Store_Restore_entidades
654   87E5
655   87E5 E5           	push hl
656   87E6 D5           	push de
657   87E7 C5            	push bc
658   87E8
659   87E8              ;	STORE !!!!!
660   87E8              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
661   87E8
662   87E8 21 96 85     	ld hl,Filas
663   87EB ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
664   87EF 01 3A 00     	ld bc,58
665   87F2 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
666   87F4
667   87F4              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
668   87F4
669   87F4 2A D3 85     	ld hl,(Puntero_restore_entidades)
670   87F7 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
671   87FA 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
672   87FD 01 3A 00     	ld bc,58
673   8800 ED B0        	ldir
674   8802
675   8802              ;	Incrementa RESTORE !!!!!
676   8802
677   8802 2A D5 85         ld hl,(Indice_restore)
678   8805 23           	inc hl
679   8806 23           	inc hl
680   8807 22 D5 85     	ld (Indice_restore),hl
681   880A CD 97 87         call Extrae_address
682   880D 22 D3 85         ld (Puntero_restore_entidades),hl
683   8810 C1           	pop bc
684   8811 D1           	pop de
685   8812 E1           	pop hl
686   8813 C9           	ret
687   8814
688   8814              ; **************************************************************************************************
689   8814              ;
690   8814              ;	29/10/22
691   8814              ;
692   8814              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
693   8814
694   8814 E5           Restore_Primera_entidad push hl
695   8815 D5           	push de
696   8816 C5            	push bc
697   8817 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
698   881A 11 96 85     	ld de,Filas
699   881D 01 3A 00     	ld bc,58
700   8820 ED B0        	ldir
701   8822 C1           	pop bc
702   8823 D1           	pop de
703   8824 E1           	pop hl
704   8825 C9           	ret
705   8826
706   8826              ; **************************************************************************************************
707   8826              ;
708   8826              ;	25/01/23
709   8826              ;
710   8826              ;	Restore_Amadeus
711   8826              ;
712   8826              ;	Cargamos en DRAW los parámetros de Amadeus.
713   8826              ;
714   8826
715   8826 E5           Restore_Amadeus	push hl
716   8827 D5           	push de
717   8828 C5            	push bc
718   8829 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
719   882C 11 96 85     	ld de,Filas
720   882F 01 3A 00     	ld bc,58
721   8832 ED B0        	ldir
722   8834 C1           	pop bc
723   8835 D1           	pop de
724   8836 E1           	pop hl
725   8837 C9           	ret
726   8838
727   8838              ; *************************************************************************************************************************************************************
728   8838              ;
729   8838              ;	29/01/23
730   8838              ;
731   8838              ;	Store_Amadeus
732   8838              ;
733   8838              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
734   8838              ;
735   8838
736   8838 E5           Store_Amadeus push hl
737   8839 D5           	push de
738   883A C5            	push bc
739   883B 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
740   883E 11 74 84     	ld de,Amadeus_db
741   8841 01 3A 00     	ld bc,58
742   8844 ED B0        	ldir
743   8846 C1           	pop bc
744   8847 D1           	pop de
745   8848 E1           	pop hl
746   8849 C9           	ret
747   884A
748   884A              ; **************************************************************************************************
749   884A
750   884A              ; Teclado.
751   884A
752   884A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
753   884C DB FE        	in a,($fe)
754   884E E6 01        	and $01
755   8850 28 02        	jr z,1f
756   8852 18 F6        	jr Pulsa_ENTER
757   8854 C9           1 ret
758   8855
759   8855              ; **************************************************************************************************
760   8855              ;
761   8855              ; Temporización.
762   8855
763   8855              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
764   8855              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
765   8855              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
766   8855              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
767   8855
768   8855              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
769   8855              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
770   8855              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
771   8855
772   8855              ; A partir de $4f61 no hace falta DELAY.
773   8855
774   8855              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
775   8855
776   8855 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
777   8858 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
778   8859 78           	LD A,B
779   885A A7           	AND A
780   885B 20 FB        	JR NZ,wait
781   885D C9           	RET
782   885E
783   885E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
784   885E              ;
785   885E              ;	5/3/23
786   885E              ;
787   885E              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
788   885E
789   885E              Movimiento_Amadeus
790   885E
791   885E              ; Disparo.
792   885E
793   885E 3E F7        	ld a,$f7												; "5" para disparar.
794   8860 DB FE        	in a,($fe)
795   8862 E6 10        	and $10
796   8864 CC B5 88     	call z,Genera_disparo
797   8867
798   8867 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
799   8869 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
800   886B E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
801   886D CC 87 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
802   8870 3E F7        	ld a,$f7
803   8872 DB FE        	in a,($fe)
804   8874 E6 01        	and $01
805   8876 C8           	ret z
806   8877
807   8877 3E F7        	ld a,$f7
808   8879 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
809   887B E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
810   887D CC 69 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
811   8880 C9           	ret
812   8881
813   8881              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
814   8881              ;
815   8881              ;	Rutina provisional para que los malotes cagen balas.
816   8881
817   8881 3E 7F        Detecta_disparo_entidad ld a,$7f
818   8883 DB FE        	in a,($fe)
819   8885 E6 01        	and 1
820   8887 C0           	ret nz
821   8888 CD B5 88     	call Genera_disparo
822   888B C9           	ret
823   888C
824   888C              ; Pinta indicadores de FILAS. ------------------------------------------------------
825   888C
826   888C 21 10 40     Pinta_FILAS ld hl,$4010
827   888F              ;	ld b,9
828   888F              ;2 push hl
829   888F              ;	push bc
830   888F 06 BF        	ld b,$bf
831   8891 36 80        1 ld (hl),%10000000
832   8893 CD 2F 8E     	call NextScan
833   8896 10 F9        	djnz 1B
834   8898              ;	pop bc
835   8898              ;	pop hl
836   8898              ;	inc l
837   8898              ;	djnz 2B
838   8898 06 03        	ld b,3
839   889A 21 00 47         ld hl,$4700
840   889D CD A3 88     3 call Bucle_1
841   88A0 10 FB            djnz 3B
842   88A2 C9               ret
843   88A3
844   88A3 C5           Bucle_1 push bc
845   88A4 E5                   push hl
846   88A5 D1                   pop de
847   88A6 13                   inc de
848   88A7 01 FF 00             ld bc,255
849   88AA 36 FF                ld (hl),255
850   88AC ED B0                ldir
851   88AE 23                   inc hl
852   88AF 3E 07                ld a,7
853   88B1 84                   add a,h
854   88B2 67                   ld h,a
855   88B3 C1                   pop bc
856   88B4 C9                   ret
857   88B5
858   88B5              ; ---------------------------------------------------------------
859   88B5
860   88B5              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88B5              ; ******************************************************************************************************************************************************************************************
  2+  88B5              ;
  3+  88B5              ;   19/02/23
  4+  88B5              ;
  5+  88B5              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88B5              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88B5              ;
  8+  88B5              ;
  9+  88B5              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88B5              ;
 11+  88B5              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88B5              ;               _ hacen las entidades hacia abajo.
 13+  88B5              ;
 14+  88B5              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88B5              ;
 16+  88B5              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88B5              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88B5              ;
 19+  88B5              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88B5              ;           _ la bala.
 21+  88B5              ;
 22+  88B5              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88B5              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88B5              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88B5              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88B5              ;           _ en el momento de generarse la bala)).
 27+  88B5
 28+  88B5              Genera_disparo
 29+  88B5
 30+  88B5              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88B5              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88B5              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88B5              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88B5              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88B5              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88B5              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88B5
 38+  88B5              ; Exclusiones:
 39+  88B5
 40+  88B5 3A CC 85         ld a,(Columnas)
 41+  88B8 47               ld b,a
 42+  88B9 3A 97 85         ld a,(Columns)
 43+  88BC B8               cp b
 44+  88BD C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88BE
 46+  88BE              ; ----- ----- -----
 47+  88BE
 48+  88BE              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 49+  88BE
 50+  88BE 21 F2 83         ld hl,ON_Disparo_2A
 51+  88C1 CD 97 87         call Extrae_address
 52+  88C4 24               inc h
 53+  88C5 25               dec h
 54+  88C6 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 55+  88C8
 56+  88C8 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 57+  88CB A7               and a
 58+  88CC ED 52            sbc hl,de
 59+  88CE D0               ret nc
 60+  88CF
 61+  88CF              ; ----- ----- -----
 62+  88CF
 63+  88CF 21 00 80     14 ld hl,Indice_disparo
 64+  88D2 3A 9E 85         ld a,(CTRL_DESPLZ)
 65+  88D5 4F               ld c,a
 66+  88D6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 67+  88D8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 68+  88D8              ;                                            ""        ""       "f9", B="1"
 69+  88D8              ;                                            ""        ""       "fb", B="2"
 70+  88D8              ;                                            ""        ""       "fb", B="3"
 71+  88D8 A7               and a
 72+  88D9 28 10            jr z,1F
 73+  88DB E6 01            and 1
 74+  88DD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 75+  88DE
 76+  88DE 79               ld a,c
 77+  88DF 16 F9            ld d,$f9
 78+  88E1 23           2 inc hl
 79+  88E2 23               inc hl
 80+  88E3 04               inc b
 81+  88E4 BA               cp d
 82+  88E5 28 04            jr z,1F
 83+  88E7 14               inc d
 84+  88E8 14               inc d
 85+  88E9 18 F6            jr 2B
 86+  88EB
 87+  88EB CD 97 87     1 call Extrae_address
 88+  88EE E5               push hl
 89+  88EF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 90+  88F1 DD 21 C2 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 91+  88F5
 92+  88F5              ;	Se cumplen las condiciones necesarias para generar un disparo.
 93+  88F5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 94+  88F5
 95+  88F5 3A AA 85     	ld a,(Cuad_objeto)
 96+  88F8 FE 02            cp 2
 97+  88FA 38 60            jr c,3F
 98+  88FC 28 5E            jr z,3F
 99+  88FE
100+  88FE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
101+  88FE
102+  88FE E6 01            and 1
103+  8900 28 2D            jr z,4F
104+  8902
105+  8902              ; 	Estamos en el 3er cuadrante de pantalla.
106+  8902              ; 	3er CUAD. ----- ----- ----- ----- -----
107+  8902              ;
108+  8902              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
109+  8902              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
110+  8902              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
111+  8902
112+  8902 2A 98 85     	ld hl,(Posicion_actual)
113+  8905
114+  8905              ;   Amadeus o entidad ???.
115+  8905
116+  8905 3A C3 85         ld a,(Ctrl_0)
117+  8908 CB 77            bit 6,a
118+  890A 28 0D            jr z,8F
119+  890C
120+  890C              ; 	Dispara Amadeus.
121+  890C
122+  890C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
123+  890E CD 3E 8E         call PreviousScan
124+  8911 CD 3E 8E         call PreviousScan
125+  8914
126+  8914              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
127+  8914              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
128+  8914              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
129+  8914              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
130+  8914
131+  8914 CD 86 89         call Ajusta_disparo_parte_izquierda
132+  8917 18 0E            jr 10F
133+  8919
134+  8919              ; 	Dispara Entidad.
135+  8919
136+  8919 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
137+  891B
138+  891B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
139+  891B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
140+  891B
141+  891B C5               push bc
142+  891C 06 10            ld b,16
143+  891E CD 2F 8E     9 call NextScan
144+  8921 10 FB            djnz 9B
145+  8923 C1               pop bc
146+  8924
147+  8924              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
148+  8924              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
149+  8924              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
150+  8924              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
151+  8924
152+  8924 CD 86 89         call Ajusta_disparo_parte_izquierda
153+  8927
154+  8927 CD FB 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
155+  892A              ;                                                   ; _al generar el disparo.
156+  892A
157+  892A              ; 	LLegados a este punto tendremos:
158+  892A              ;
159+  892A              ;       Puntero_objeto_disparo en IY.
160+  892A              ;       Rutinas_de_impresion en IX.
161+  892A              ;       Puntero_de_impresion en HL.
162+  892A              ;       Impacto/Dirección en BC.
163+  892A
164+  892A CD 8E 89         call Almacena_disparo
165+  892D 18 4F            jr 6F                                           ; RET.
166+  892F
167+  892F
168+  892F              ; 	Estamos en el 4º cuadrante de pantalla.
169+  892F              ; 	4º CUAD. ----- ----- ----- ----- -----
170+  892F              ;
171+  892F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
172+  892F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
173+  892F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
174+  892F
175+  892F 2A 98 85     4 ld hl,(Posicion_actual)
176+  8932
177+  8932              ;   Amadeus o entidad ???.
178+  8932
179+  8932 3A C3 85         ld a,(Ctrl_0)
180+  8935 CB 77            bit 6,a
181+  8937 28 0D            jr z,11F
182+  8939
183+  8939              ; 	Dispara Amadeus.
184+  8939
185+  8939 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
186+  893B CD 3E 8E         call PreviousScan
187+  893E CD 3E 8E         call PreviousScan
188+  8941
189+  8941              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
190+  8941              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
191+  8941              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
192+  8941              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
193+  8941
194+  8941 CD 7F 89         call Ajusta_disparo_parte_derecha
195+  8944 18 0E            jr 13F
196+  8946
197+  8946              ; 	Dispara Entidad.
198+  8946
199+  8946 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
200+  8948
201+  8948              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
202+  8948              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
203+  8948
204+  8948 C5               push bc
205+  8949
206+  8949 06 10            ld b,16
207+  894B CD 2F 8E     12 call NextScan
208+  894E 10 FB            djnz 12B
209+  8950
210+  8950 C1               pop bc
211+  8951
212+  8951              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
213+  8951              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
214+  8951              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
215+  8951              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
216+  8951
217+  8951 CD 7F 89         call Ajusta_disparo_parte_derecha
218+  8954
219+  8954 CD FB 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
220+  8957              ;                                                     ; _al generar el disparo.
221+  8957
222+  8957              ; LLegados a este punto tendremos:
223+  8957              ;
224+  8957              ;       Puntero_objeto_disparo en IY.
225+  8957              ;       Rutinas_de_impresion en IX.
226+  8957              ;       Puntero_de_impresion en HL.
227+  8957              ;       Impacto/Dirección en BC.
228+  8957
229+  8957 CD 8E 89         call Almacena_disparo
230+  895A 18 22            jr 6F                                           ; RET.
231+  895C
232+  895C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
233+  895C
234+  895C 28 11        3 jr z,5F
235+  895E
236+  895E              ; 	1er CUAD. ----- ----- ----- ----- -----
237+  895E              ;
238+  895E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
239+  895E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
240+  895E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
241+  895E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
242+  895E
243+  895E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
244+  895E              ;	   ""        ""       "f9", B="1"
245+  895E              ;	   ""        ""       "fb", B="2"
246+  895E              ; 	   ""        ""       "fb", B="3"
247+  895E
248+  895E 2A 98 85     	ld hl,(Posicion_actual)
249+  8961 CD 2F 8E     	call NextScan
250+  8964
251+  8964              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
252+  8964              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
253+  8964              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
254+  8964              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
255+  8964
256+  8964 CD 86 89         call Ajusta_disparo_parte_izquierda
257+  8967
258+  8967              ; 	No se produce impacto. B="$80"
259+  8967              ; 	Dirección del proyectil hacia abajo. C="$80"
260+  8967
261+  8967 01 80 80         ld bc,$8080
262+  896A
263+  896A              ; 	LLegados a este punto tendremos:
264+  896A              ;
265+  896A              ;       Puntero_objeto_disparo en IY.
266+  896A              ;       Rutinas_de_impresion en IX.
267+  896A              ;       Puntero_de_impresion en HL.
268+  896A              ;       Impacto/Dirección en BC.
269+  896A
270+  896A CD 8E 89         call Almacena_disparo
271+  896D 18 0F            jr 6F                                           ; RET.
272+  896F
273+  896F              ; 	Estamos en el 2º cuadrante de pantalla.
274+  896F              ; 	2º CUAD. ----- ----- ----- ----- -----
275+  896F              ;
276+  896F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
277+  896F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
278+  896F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
279+  896F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
280+  896F
281+  896F 2A 98 85     5 ld hl,(Posicion_actual)
282+  8972 CD 2F 8E     	call NextScan
283+  8975
284+  8975              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
285+  8975              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
286+  8975              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
287+  8975              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
288+  8975
289+  8975 CD 7F 89         call Ajusta_disparo_parte_derecha
290+  8978
291+  8978              ; 	No se produce impacto. B="$80"
292+  8978              ; 	Dirección del proyectil hacia abajo. C="80"
293+  8978
294+  8978 01 80 80     15 ld bc,$8080
295+  897B
296+  897B              ; 	LLegados a este punto tendremos:
297+  897B              ;
298+  897B              ;       Puntero_objeto_disparo en IY.
299+  897B              ;       Rutinas_de_impresion en IX.
300+  897B              ;       Puntero_de_impresion en HL.
301+  897B              ;       Impacto/Dirección en BC.
302+  897B
303+  897B CD 8E 89         call Almacena_disparo
304+  897E
305+  897E C9           6 ret
306+  897F
307+  897F              ; ----------------------------------------------------------------
308+  897F              ;
309+  897F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
310+  897F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
311+  897F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
312+  897F
313+  897F 78           Ajusta_disparo_parte_derecha ld a,b
314+  8980 FE 02            cp 2
315+  8982 38 01            jr c,1F
316+  8984 23               inc hl
317+  8985 C9           1 ret
318+  8986
319+  8986 78           Ajusta_disparo_parte_izquierda ld a,b
320+  8987 FE 01        	cp 1
321+  8989 20 01        	jr nz,1F
322+  898B 2B           	dec hl
323+  898C 2B           1 dec hl
324+  898D C9               ret
325+  898E
326+  898E              ; ----------------------------------------------------------------
327+  898E              ;
328+  898E              ;   25/02/23
329+  898E              ;
330+  898E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
331+  898E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
332+  898E
333+  898E              Almacena_disparo
334+  898E
335+  898E E5               push hl  										; HL contiene el puntero de impresión.
336+  898F F1               pop af
337+  8990 08               ex af,af                                        ; Puntero_de_impresion en AF'.
338+  8991
339+  8991 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
340+  8992 E6 01            and 1
341+  8994 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
342+  8996              ;                                                   ; _ es Amadeus o una entidad la que dispara.
343+  8996              ; 	Dispara AMADEUS.
344+  8996
345+  8996              ;	Comprobamos que a Amadeus aún le quedan disparos.
346+  8996              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
347+  8996              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
348+  8996              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
349+  8996
350+  8996 C5               push bc
351+  8997 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
352+  899A 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
353+  899D A7               and a
354+  899E ED 42            sbc hl,bc
355+  89A0 CC 60 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
356+  89A3 C1               pop bc
357+  89A4 28 54            jr z,4F
358+  89A6
359+  89A6 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
360+  89A9 23               inc hl
361+  89AA 23               inc hl
362+  89AB 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
363+  89AE              ;                                                   ; _ Disparo_(+1).
364+  89AE 18 18            jr 2F
365+  89B0
366+  89B0              ; Dispara una entidad.
367+  89B0
368+  89B0 C5           1 push bc
369+  89B1 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
370+  89B4 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
371+  89B7 A7               and a
372+  89B8 ED 42            sbc hl,bc
373+  89BA CC 59 87         call z,Inicia_Puntero_Disparo_Entidades
374+  89BD C1               pop bc
375+  89BE 28 3A            jr z,4F
376+  89C0
377+  89C0 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
378+  89C3 23               inc hl
379+  89C4 23               inc hl
380+  89C5 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
381+  89C8              ;                                                   ; _ Disparo_(+1).
382+  89C8 CD 97 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
383+  89CB              ;                                                   ; _ los 8 bytes que definen el disparo:
384+  89CB              ;
385+  89CB              ;                                                     Puntero_objeto_disparo en IY.
386+  89CB              ;                                                     Rutinas_de_impresion en IX.
387+  89CB              ;                                                     Puntero_de_impresion en HL.
388+  89CB              ;                                                     Impacto/Dirección en BC.
389+  89CB
390+  89CB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
391+  89CC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
392+  89CD 23               inc hl                                          ; _ al siguiente.
393+  89CE A7               and a
394+  89CF 20 C0            jr nz,3B
395+  89D1
396+  89D1 08               ex af,af
397+  89D2 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
398+  89D6 F9               ld sp,hl
399+  89D7
400+  89D7 DD E5            push ix                                         ; Rutina de impresión.
401+  89D9 F5               push af                                         ; Puntero de impresión.
402+  89DA FD E5            push iy                                         ; Puntero objeto.
403+  89DC C5               push bc                                         ; Control.
404+  89DD
405+  89DD ED 7B D9 85      ld sp,(Stack)
406+  89E1
407+  89E1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
408+  89E1
409+  89E1 21 D0 85     	ld hl,Ctrl_1
410+  89E4 CB C6        	set 0,(hl)
411+  89E6
412+  89E6 DD E5        	push ix
413+  89E8 E1               pop hl
414+  89E9 F5               push af
415+  89EA DD E1            pop ix
416+  89EC
417+  89EC CD A0 7F     	call Guarda_foto_registros
418+  89EF
419+  89EF 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
420+  89F2 CB 86        	res 0,(hl)
421+  89F4
422+  89F4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
423+  89F4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
424+  89F4
425+  89F4 CD 60 87         call Inicia_Puntero_Disparo_Amadeus
426+  89F7 CD 59 87         call Inicia_Puntero_Disparo_Entidades
427+  89FA
428+  89FA C9           4 ret
429+  89FB
430+  89FB              ; ----------------------------------------------------------------
431+  89FB              ;
432+  89FB              ;   4/3/23
433+  89FB              ;
434+  89FB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
435+  89FB              ;   _ al generarse el disparo.
436+  89FB              ;
437+  89FB              ;       "$80" ..... No se produce colisión.
438+  89FB              ;       "$81" ..... Se produce colisión.
439+  89FB
440+  89FB              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
441+  89FB              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
442+  89FB
443+  89FB
444+  89FB FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
445+  89FD E5               push hl                                        ; Puntero de impresión.
446+  89FE 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
447+  8A00 CD 17 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
448+  8A03 E1               pop hl
449+  8A04 E5               push hl
450+  8A05 CD 2F 8E         call NextScan
451+  8A08
452+  8A08 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
453+  8A09 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
454+  8A0B 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
455+  8A0D              ;                                                  ; _ 2º scanline si esto es así.
456+  8A0D 1E 80            ld e,$80                                       ; ----- ( ) -----
457+  8A0F CD 17 8A         call Bucle_2
458+  8A12
459+  8A12 43           2 ld b,e
460+  8A13 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
461+  8A14 FD E1            pop iy
462+  8A16 C9               ret
463+  8A17
464+  8A17               ; ---------- ----------
465+  8A17
466+  8A17 06 02        Bucle_2 ld b,2
467+  8A19 FD 7E 00     2 ld a,(iy)
468+  8A1C A6               and (hl)
469+  8A1D 28 02            jr z,1F
470+  8A1F 1E 81            ld e,$81
471+  8A21 23           1 inc hl
472+  8A22 FD 23            inc iy
473+  8A24 10 F3            djnz 2B
474+  8A26 C9               ret
475+  8A27
476+  8A27              ; -------------------------------------------------------------------------------------------------------------
477+  8A27              ;
478+  8A27              ;   13/03/23
479+  8A27              ;
480+  8A27              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
481+  8A27              ;
482+  8A27              ;   DESTRUYE: HL,BC,DE y A.
483+  8A27
484+  8A27 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
485+  8A2A 7E               ld a,(hl)
486+  8A2B A7               and a
487+  8A2C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
488+  8A2D
489+  8A2D 44               ld b,h
490+  8A2E 4D               ld c,l
491+  8A2F 2A DF 85         ld hl,(Stack_snapshot_disparos)
492+  8A32 E5               push hl
493+  8A33 A7               and a
494+  8A34 ED 42            sbc hl,bc
495+  8A36 E5               push hl
496+  8A37 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
497+  8A38
498+  8A38 E1               pop hl
499+  8A39 54               ld d,h
500+  8A3A 5D               ld e,l
501+  8A3B 1B               dec de
502+  8A3C ED B8            lddr                                                ; Limpiamos.
503+  8A3E
504+  8A3E 21 60 70         ld hl,Album_de_fotos_disparos
505+  8A41 22 DF 85         ld (Stack_snapshot_disparos),hl
506+  8A44
507+  8A44 C9               ret
508+  8A45
509+  8A45              ; -------------------------------------------------------------------------------------------------------------
510+  8A45              ;
511+  8A45              ;   22/03/23
512+  8A45              ;
513+  8A45
514+  8A45 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
515+  8A48 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
516+  8A4B
517+  8A4B CD 97 87     2 call Extrae_address
518+  8A4E 7E               ld a,(hl)
519+  8A4F A7               and a
520+  8A50 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
521+  8A52
522+  8A52              ; ----- ----- ----- ----- ----- -----
523+  8A52
524+  8A52 C5               push bc
525+  8A53 CD C4 8A         call foto_disparo_a_borrar
526+  8A56
527+  8A56              ; Existe colisión con este disparo???
528+  8A56
529+  8A56 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
530+  8A57 7E               ld a,(hl)
531+  8A58 2B               dec hl
532+  8A59 E6 01            and 1
533+  8A5B 28 0C            jr z,9F
534+  8A5D
535+  8A5D              ; Elimino el disparo de la base de datos.
536+  8A5D
537+  8A5D E5               push hl
538+  8A5E CD 3E 8B         call Elimina_disparo_de_base_de_datos
539+  8A61 E1               pop hl
540+  8A62 3E 01            ld a,1
541+  8A64 32 E6 85         ld (Impacto),a                                       ; Indicamos que se ha producido Impacto en una entidad.
542+  8A67 18 06            jr 11F
543+  8A69
544+  8A69 CD ED 8A     9 call Mueve_disparo
545+  8A6C CD C4 8A         call foto_disparo_a_borrar
546+  8A6F
547+  8A6F C1           11 pop bc
548+  8A70
549+  8A70 18 04            jr 7F
550+  8A72
551+  8A72              ; ----- ----- ----- ----- ----- -----
552+  8A72
553+  8A72 ED 42        1 sbc hl,bc
554+  8A74 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
555+  8A76
556+  8A76 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
557+  8A79 23               inc hl
558+  8A7A 23               inc hl
559+  8A7B 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
560+  8A7E 18 CB            jr 2B
561+  8A80
562+  8A80 CD 60 87     3 call Inicia_Puntero_Disparo_Amadeus
563+  8A83
564+  8A83 01 66 84         ld bc,Disparo_11
565+  8A86 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
566+  8A89
567+  8A89 CD 97 87     5 call Extrae_address
568+  8A8C 7E               ld a,(hl)
569+  8A8D A7               and a
570+  8A8E 28 22            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
571+  8A90
572+  8A90              ; ----- ----- ----- ----- ----- -----
573+  8A90
574+  8A90 C5               push bc
575+  8A91 CD C4 8A         call foto_disparo_a_borrar
576+  8A94
577+  8A94              ; Existe colisión con este disparo???
578+  8A94
579+  8A94 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
580+  8A95 7E               ld a,(hl)
581+  8A96 2B               dec hl
582+  8A97 E6 01            and 1
583+  8A99 28 0E            jr z,10F
584+  8A9B
585+  8A9B              ; La colisión se produce con Amadeus???
586+  8A9B
587+  8A9B              ; -----------------------debug
588+  8A9B
589+  8A9B 18 FE            jr $
590+  8A9D
591+  8A9D              ; -----------------------debug
592+  8A9D
593+  8A9D              ; Elimino el disparo de la base de datos.
594+  8A9D
595+  8A9D E5           14 push hl
596+  8A9E CD 3E 8B         call Elimina_disparo_de_base_de_datos
597+  8AA1 E1               pop hl
598+  8AA2
599+  8AA2 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
600+  8AA4 32 E6 85         ld (Impacto),a
601+  8AA7 18 06            jr 12F
602+  8AA9
603+  8AA9 CD ED 8A     10 call Mueve_disparo
604+  8AAC CD C4 8A         call foto_disparo_a_borrar
605+  8AAF C1           12 pop bc
606+  8AB0
607+  8AB0 18 04            jr 8F
608+  8AB2
609+  8AB2              ; ----- ----- ----- ----- ----- -----
610+  8AB2
611+  8AB2 ED 42        4 sbc hl,bc
612+  8AB4 28 0A            jr z,6F
613+  8AB6
614+  8AB6 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
615+  8AB9 23               inc hl
616+  8ABA 23               inc hl
617+  8ABB 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
618+  8ABE 18 C9            jr 5B
619+  8AC0
620+  8AC0 CD 59 87     6 call Inicia_Puntero_Disparo_Entidades
621+  8AC3 C9               ret
622+  8AC4
623+  8AC4              ; ------------------------------------------------------------------
624+  8AC4
625+  8AC4              foto_disparo_a_borrar
626+  8AC4
627+  8AC4 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
628+  8AC5 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
629+  8AC6 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
630+  8AC7
631+  8AC7 E5               push hl
632+  8AC8 23               inc hl
633+  8AC9 23               inc hl
634+  8ACA ED 73 D9 85      ld (Stack),sp
635+  8ACE F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
636+  8ACF FD E1            pop iy
637+  8AD1 DD E1            pop ix
638+  8AD3 E1               pop hl
639+  8AD4 ED 7B D9 85      ld sp,(Stack)
640+  8AD8 3A D0 85         ld a,(Ctrl_1)
641+  8ADB CB C7            set 0,a
642+  8ADD 32 D0 85         ld (Ctrl_1),a
643+  8AE0 CD A0 7F         call Guarda_foto_registros
644+  8AE3 3A D0 85         ld a,(Ctrl_1)
645+  8AE6 CB 87            res 0,a
646+  8AE8 32 D0 85         ld (Ctrl_1),a
647+  8AEB E1               pop hl
648+  8AEC C9               ret
649+  8AED
650+  8AED E5           Mueve_disparo push hl
651+  8AEE 7E               ld a,(hl)
652+  8AEF 06 04            ld b,4
653+  8AF1 23           1 inc hl
654+  8AF2 10 FD            djnz 1B
655+  8AF4
656+  8AF4              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
657+  8AF4
658+  8AF4 CD 97 87         call Extrae_address
659+  8AF7
660+  8AF7 E6 01            and 1
661+  8AF9 28 2A            jr z,2F
662+  8AFB
663+  8AFB              ; Disparo hacia arriba, (Amadeus).
664+  8AFB
665+  8AFB              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
666+  8AFB              ; _ de la dificultad.
667+  8AFB
668+  8AFB CD 3E 8E         call PreviousScan
669+  8AFE CD 3E 8E         call PreviousScan
670+  8B01 CD 3E 8E         call PreviousScan
671+  8B04
672+  8B04              ; Detecta si el disparo de Amadeus sale de pantalla:
673+  8B04
674+  8B04 7C               ld a,h
675+  8B05 FE 40            cp $40
676+  8B07 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
677+  8B09
678+  8B09              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
679+  8B09
680+  8B09 EB               ex de,hl
681+  8B0A 06 04            ld b,4
682+  8B0C 2B           6 dec hl
683+  8B0D 10 FD            djnz 6B
684+  8B0F
685+  8B0F CD 3E 8B         call Elimina_disparo_de_base_de_datos
686+  8B12
687+  8B12 18 0C            jr 4F
688+  8B14
689+  8B14              ; Se ha desplazado la bala, compruebo colisión.
690+  8B14
691+  8B14 D5           3 push de
692+  8B15 C5               push bc
693+  8B16 CD FB 89         call Comprueba_Colision
694+  8B19 78               ld a,b
695+  8B1A C1               pop bc
696+  8B1B D1               pop de
697+  8B1C
698+  8B1C EB               ex de,hl
699+  8B1D
700+  8B1D 73               ld (hl),e
701+  8B1E 23               inc hl
702+  8B1F 72               ld (hl),d
703+  8B20
704+  8B20 E1           4 pop hl
705+  8B21 23               inc hl
706+  8B22 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
707+  8B23 2B               dec hl
708+  8B24 C9               ret
709+  8B25
710+  8B25              ; Disparo hacia abajo, (Entidad).
711+  8B25
712+  8B25              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
713+  8B25              ; _ de la dificultad.
714+  8B25
715+  8B25 CD 2F 8E     2 call NextScan
716+  8B28 CD 2F 8E         call NextScan
717+  8B2B CD 2F 8E         call NextScan
718+  8B2E
719+  8B2E                ; Detecta si el disparo de la entidad sale de la pantalla.
720+  8B2E
721+  8B2E 7C               ld a,h
722+  8B2F FE 58            cp $58
723+  8B31 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
724+  8B33
725+  8B33 EB               ex de,hl
726+  8B34 06 04            ld b,4
727+  8B36 2B           5 dec hl
728+  8B37 10 FD            djnz 5B
729+  8B39
730+  8B39 CD 3E 8B         call Elimina_disparo_de_base_de_datos
731+  8B3C
732+  8B3C 18 E2            jr 4B
733+  8B3E
734+  8B3E              ; HL apunta al primer byte de la base de datos del disparo.
735+  8B3E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
736+  8B41 AF               xor a
737+  8B42 77               ld (hl),a
738+  8B43 54               ld d,h
739+  8B44 5D               ld e,l
740+  8B45 13               inc de
741+  8B46 ED B0            ldir
742+  8B48 C9               ret
# file closed: Disparo.asm
861   8B49              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8B49              ; ******************************************************************************************************************************************************************************************
  2+  8B49              ;
  3+  8B49              ; 01/23
  4+  8B49              ;
  5+  8B49              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8B49
  7+  8B49 CD 23 8E     Draw call Prepara_draw
  8+  8B4C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8B4D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8B4E 28 05        	jr z,2F
 11+  8B50
 12+  8B50 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8B53 18 0C        	jr 1F
 14+  8B55 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8B58 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8B5B CD EA 8C     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8B5E              ;													; _la esquina superior izquierda de la pantalla.
 18+  8B5E CD 53 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8B61 3A C3 85     1 ld a,(Ctrl_0)
 20+  8B64 CB 6F        	bit 5,a
 21+  8B66 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8B68
 23+  8B68 CD 80 8B     	call Comprueba_limite_horizontal
 24+  8B6B CD 10 8C     	call Comprueba_limite_vertical
 25+  8B6E
 26+  8B6E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8B6E
 28+  8B6E CD 5D 8D     3 call calcula_CColumnass
 29+  8B71 CD 94 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8B74 CD E9 8D     	call Define_rutina_de_impresion
 31+  8B77
 32+  8B77 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8B7A CB AF        	res 5,a											; _a ser de utilidad.
 34+  8B7C 32 C3 85     	ld (Ctrl_0),a
 35+  8B7F
 36+  8B7F C9           	ret
 37+  8B80
 38+  8B80              ; *******************************************************************************************************************************************************************************************
 39+  8B80              ;	21/01/23
 40+  8B80              ;
 41+  8B80              ; 	Comprueba_limite_horizontal.
 42+  8B80              ;
 43+  8B80              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8B80              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8B80              ;
 46+  8B80              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8B80              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8B80              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8B80              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8B80
 51+  8B80
 52+  8B80
 53+  8B80 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8B83 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8B85 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8B87 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8B89 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8B8C 18 09            jr 6F
 59+  8B8E CB 5F        1 bit 3,a
 60+  8B90 28 0A            jr z,2F
 61+  8B92 E6 F7            and $f7
 62+  8B94 32 C3 85         ld (Ctrl_0),a
 63+  8B97 CD EA 8C     6 call Inicializacion
 64+  8B9A 18 5B            jr 5F
 65+  8B9C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8B9D
 67+  8B9D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8B9D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8B9D
 70+  8B9D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8B9E 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8BA1 CD EF 90     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8BA4 67           	ld h,a
 74+  8BA5 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8BA6 CD EF 90     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8BA9 67           	ld h,a
 77+  8BAA A7           	and a
 78+  8BAB ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8BAD 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8BAE 3A AA 85     	ld a,(Cuad_objeto)
 81+  8BB1 FE 02        	cp 2
 82+  8BB3 38 1E        	jr c,3F
 83+  8BB5 28 1C        	jr z,3F
 84+  8BB7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8BB8 28 23            jr z,7F
 86+  8BBA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8BBC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8BBE E1           	pop hl
 89+  8BBF
 90+  8BBF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8BBF              ; _para indicar con E="2" en caso necesario.
 92+  8BBF
 93+  8BBF E5               push hl
 94+  8BC0 C5               push bc
 95+  8BC1 CD EF 90     	call calcula_tercio
 96+  8BC4 FE 01        	cp 1
 97+  8BC6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8BC8 CD F8 8B         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8BCB 28 26            jr z,9F
100+  8BCD 38 24            jr c,9F
101+  8BCF 1E 00        11 ld e,0
102+  8BD1 18 22            jr 8F
103+  8BD3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8BD4 28 07        	jr z, 7F
105+  8BD6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8BD8 1E 00         	ld e,0
107+  8BDA E1           	pop hl
108+  8BDB 18 04        	jr 4F
109+  8BDD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8BDF 18 15            jr 10F
111+  8BE1
112+  8BE1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8BE1              ; _para indicar con E="2" en caso necesario.
114+  8BE1
115+  8BE1 E5           4 push hl
116+  8BE2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8BE3 CD EF 90     	call calcula_tercio
118+  8BE6 FE 01        	cp 1
119+  8BE8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8BEA CD F8 8B         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8BED 28 04            jr z,9F
122+  8BEF 30 02            jr nc,9F
123+  8BF1 18 02        	jr 8F
124+  8BF3 1E 02        9 ld e,2
125+  8BF5 C1           8 pop bc
126+  8BF6 E1           10 pop hl
127+  8BF7 C9           5 ret
128+  8BF8
129+  8BF8              ; --------------------
130+  8BF8              ;
131+  8BF8              ; 25/08/22
132+  8BF8
133+  8BF8 CD EF 90     Comprueba_centro call calcula_tercio
134+  8BFB 67               ld h,a
135+  8BFC 08           	ex af,af
136+  8BFD FE 02        	cp 2
137+  8BFF 38 07        	jr c,1F
138+  8C01 28 05        	jr z,1F
139+  8C03 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8C06 18 03        	jr 2F
141+  8C08 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8C0B 08           2 ex af,af
143+  8C0C A7               and a
144+  8C0D ED 42            sbc hl,bc
145+  8C0F C9               ret
146+  8C10
147+  8C10              ; *********************************************************************************************************************************************************************************************
148+  8C10              ;
149+  8C10              ;   16/8/22
150+  8C10              ;
151+  8C10              ;	Comprueba_limite_vertical
152+  8C10              ;
153+  8C10              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8C10              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8C10              ;
156+  8C10
157+  8C10 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8C13 7D           	ld a,l
159+  8C14 E6 1F        	and $1F
160+  8C16 57           	ld d,a
161+  8C17 3A CF 85     	ld a,(Limite_vertical)
162+  8C1A BA           	cp d 											; Límite - Posición.
163+  8C1B 08           	ex af,af 										; Resultado de CP d en F'.
164+  8C1C 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8C1F CB 47        	bit 0,a
166+  8C21 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8C23
168+  8C23              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8C23
170+  8C23 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8C24 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8C26
173+  8C26              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8C26              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8C26
176+  8C26 3A 9C 85         ld a,(Coordenada_X)
177+  8C29 16 0F            ld d,Centro_izquierda
178+  8C2B A7               and a
179+  8C2C 92               sub d 											 ; Posición - Centro_izquierda.
180+  8C2D 28 1E            jr z,3F
181+  8C2F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8C31              ;                                                    ; _salimos sin modificar nada.
183+  8C31 18 0E            jr 2F
184+  8C33 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8C34 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8C36
187+  8C36              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8C36              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8C36
190+  8C36 3A 9C 85         ld a,(Coordenada_X)
191+  8C39 16 10            ld d,Centro_derecha
192+  8C3B A7               and a
193+  8C3C 92               sub d
194+  8C3D 28 0E            jr z,3F
195+  8C3F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8C41              ;                                                    ; _salimos sin modificar nada.
197+  8C41 CB 43        2 bit 0,e
198+  8C43 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8C45 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8C46 CD DA 8C         call Modificaccionne
201+  8C49 C1           	pop bc
202+  8C4A CD EA 8C         call Inicializacion
203+  8C4D C9           3 ret 				 								 ; Salimos de la rutina.
204+  8C4E
205+  8C4E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8C4E
207+  8C4E C5           4 push bc
208+  8C4F 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8C52 0A           	ld a,(bc)
210+  8C53 3D           	dec a
211+  8C54 47           	ld b,a 											 ; Columnas-1 en B.
212+  8C55 7D           	ld a,l
213+  8C56 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8C57 CB 47        	bit 0,a
215+  8C59 28 03        	jr z,5F
216+  8C5B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8C5C 18 2E        	jr 7F
218+  8C5E
219+  8C5E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8C5E
221+  8C5E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8C5F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8C60 3A C3 85     	ld a,(Ctrl_0)
224+  8C63 CB 4F        	bit 1,a
225+  8C65 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8C67 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8C68
228+  8C68              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8C68
230+  8C68 1C               inc e
231+  8C69 1D               dec e
232+  8C6A 20 07            jr nz,12F
233+  8C6C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8C6D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8C6E 22 98 85     	ld (Posicion_actual),hl
236+  8C71 18 44        13 jr 9F
237+  8C73 CB 43        12 bit 0,e
238+  8C75 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8C77              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8C77 C1           	pop bc
241+  8C78 18 D3        	jr 3B
242+  8C7A 80           14 add b
243+  8C7B 6F               ld l,a
244+  8C7C 22 98 85     	ld (Posicion_actual),hl
245+  8C7F CD DA 8C         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8C82 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8C84 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8C86 32 C3 85         ld (Ctrl_0),a
249+  8C89 F1           	pop af
250+  8C8A 18 2B        	jr 9F
251+  8C8C
252+  8C8C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8C8C
254+  8C8C F5           7 push af
255+  8C8D 3A C3 85     	ld a,(Ctrl_0)
256+  8C90 CB 47        	bit 0,a
257+  8C92 20 1D        	jr nz,8F
258+  8C94 F1           	pop af
259+  8C95
260+  8C95              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8C95
262+  8C95 1C           	inc e
263+  8C96 1D               dec e
264+  8C97 20 07            jr nz,10F
265+  8C99 90           	sub b
266+  8C9A 6F               ld l,a
267+  8C9B 22 98 85     	ld (Posicion_actual),hl
268+  8C9E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8CA0              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8CA0 CB 43        10 bit 0,e
271+  8CA2 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8CA4              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8CA4 C1           	pop bc
274+  8CA5 18 A6        	jr 3B
275+  8CA7 90           16 sub b
276+  8CA8 6F               ld l,a
277+  8CA9 22 98 85     	ld (Posicion_actual),hl
278+  8CAC CD DA 8C         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8CAF 18 06            jr 9F
280+  8CB1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8CB3 32 C3 85         ld (Ctrl_0),a
282+  8CB6 F1           	pop af
283+  8CB7 C1           9 pop bc
284+  8CB8 1E 00        	ld e,0
285+  8CBA CD EA 8C         call Inicializacion
286+  8CBD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8CBE 08           	ex af,af
288+  8CBF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8CC0 18 8B            jr 3B
290+  8CC2
291+  8CC2              ; --------------------
292+  8CC2
293+  8CC2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8CC4 CD 3E 8E     1 call PreviousScan
295+  8CC7 10 FB            djnz 1B
296+  8CC9 22 98 85     	ld (Posicion_actual),hl
297+  8CCC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8CCD C9           	ret
299+  8CCE
300+  8CCE              ; --------------------
301+  8CCE
302+  8CCE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8CD0 CD 2F 8E     1 call NextScan
304+  8CD3 10 FB            djnz 1B
305+  8CD5 22 98 85     	ld (Posicion_actual),hl
306+  8CD8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8CD9 C9           	ret
308+  8CDA
309+  8CDA              ; --------------------
310+  8CDA              ;
311+  8CDA              ;	22/01/23
312+  8CDA              ;
313+  8CDA              ;	E="1". Hemos cambiado de cuadrante.
314+  8CDA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8CDA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8CDA
317+  8CDA
318+  8CDA              Modificaccionne
319+  8CDA
320+  8CDA 3A AA 85     	ld a,(Cuad_objeto)
321+  8CDD FE 02        	cp 2
322+  8CDF CC C2 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8CE2 DC C2 8C         call c,Modifica_Pos_actual
324+  8CE5 C8           	ret z
325+  8CE6 CD CE 8C         call Modifica_Pos_actual2
326+  8CE9 C9               ret
327+  8CEA
328+  8CEA              ; *************************************************************************************************************************************************************************************************
329+  8CEA              ;
330+  8CEA              ;	13/8/22
331+  8CEA              ;
332+  8CEA              ;	Inicializacion
333+  8CEA              ;
334+  8CEA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8CEA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8CEA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8CEA              ;
338+  8CEA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8CEA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8CEA              ;	_ desaparece/aparece.
341+  8CEA
342+  8CEA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8CEA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8CEA              ;
345+  8CEA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8CEA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8CEA              ; 		   [E] ="0"
348+  8CEA
349+  8CEA              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8CEA
351+  8CEA CD EF 90     Inicializacion call calcula_tercio
352+  8CED 28 36        	jr z,primit
353+  8CEF E6 02        	and 2
354+  8CF1 20 07        	jr nz,segmit
355+  8CF3 7D           	ld a,l
356+  8CF4 FE 7F        	cp $7f
357+  8CF6 38 2D        	jr c,primit
358+  8CF8 28 2B        	jr z,primit
359+  8CFA CD 57 8D     segmit call column
360+  8CFD 38 13        	jr c,tercuad
361+  8CFF 3E 04        cuarcuad ld a,4
362+  8D01 32 AA 85     	ld (Cuad_objeto),a
363+  8D04 21 20 48     	ld hl,$4820
364+  8D07 22 CD 85     	ld (Limite_horizontal),hl
365+  8D0A 21 CF 85     	ld hl,Limite_vertical
366+  8D0D 36 0D        	ld (hl),$0d
367+  8D0F 08           	ex af,af
368+  8D10 18 3C        	jr 1F
369+  8D12              tercuad
370+  8D12 3E 03        	ld a,3
371+  8D14 32 AA 85     	ld (Cuad_objeto),a
372+  8D17 21 20 48     	ld hl,$4820
373+  8D1A 22 CD 85     	ld (Limite_horizontal),hl
374+  8D1D 21 CF 85     	ld hl,Limite_vertical
375+  8D20 36 12        	ld (hl),$12
376+  8D22 08           	ex af,af
377+  8D23 18 29        	jr 1F
378+  8D25 CD 57 8D     primit call column
379+  8D28 38 13        	jr c, primcuad
380+  8D2A              segcuad
381+  8D2A 3E 02        	ld a,2
382+  8D2C 32 AA 85     	ld (Cuad_objeto),a
383+  8D2F 21 C0 4F     	ld hl,$4fc0
384+  8D32 22 CD 85     	ld (Limite_horizontal),hl
385+  8D35 21 CF 85     	ld hl,Limite_vertical
386+  8D38 36 0D        	ld (hl),$0d
387+  8D3A 08           	ex af,af
388+  8D3B 18 11        	jr 1F
389+  8D3D              primcuad
390+  8D3D 3E 01        	ld a,1
391+  8D3F 32 AA 85     	ld (Cuad_objeto),a
392+  8D42 21 C0 4F     	ld hl,$4fc0
393+  8D45 22 CD 85     	ld (Limite_horizontal),hl
394+  8D48 21 CF 85     	ld hl,Limite_vertical
395+  8D4B 36 12        	ld (hl),$12
396+  8D4D 08           	ex af,af
397+  8D4E CD 1B 94     1 call Genera_coordenadas
398+  8D51 21 C3 85     	ld hl,Ctrl_0
399+  8D54 CB EE        	set 5,(hl)
400+  8D56 C9           	ret
401+  8D57
402+  8D57              ; ------------------------------------------------------------------------------------------------------------------
403+  8D57
404+  8D57              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8D57              ;
406+  8D57              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8D57
408+  8D57 7D           column ld a,l
409+  8D58 E6 1F        	and $1f
410+  8D5A FE 10         	cp $10
411+  8D5C C9            	ret
412+  8D5D
413+  8D5D              ; --------------------------------------------------------------------------------------------------------------------
414+  8D5D              ;
415+  8D5D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8D5D              ;
417+  8D5D              ; 14/12/22
418+  8D5D              ;
419+  8D5D              ;	Modifica: A y BC.
420+  8D5D
421+  8D5D 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8D60 E6 01        	and 1
423+  8D62 28 17        	jr z,1F
424+  8D64
425+  8D64              ; Nos encontramos en la parte izquierda de la pantalla
426+  8D64
427+  8D64 3A 9C 85     	ld a,(Coordenada_X)
428+  8D67 47           	ld b,a
429+  8D68 04           	inc b											; (Coordenada_X)+1 en B.
430+  8D69 79           	ld a,c
431+  8D6A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8D6B 38 08        	jr c,2F
433+  8D6D 47           	ld b,a
434+  8D6E 79           	ld a,c
435+  8D6F 90           	sub b
436+  8D70 32 CC 85     	ld (Columnas),a
437+  8D73 18 1B        	jr 4F
438+  8D75 79           2 ld a,c
439+  8D76 32 CC 85     	ld (Columnas),a
440+  8D79 18 15        	jr 4F
441+  8D7B
442+  8D7B              ; Nos encontramos en la parte derecha de la pantalla.
443+  8D7B
444+  8D7B 3A 9C 85     1 ld a,(Coordenada_X)
445+  8D7E 81           	add c
446+  8D7F 3D           	dec a
447+  8D80 D6 1F        	sub $1f
448+  8D82 38 08        	jr c,3F
449+  8D84 47           	ld b,a
450+  8D85 79           	ld a,c
451+  8D86 90           	sub b
452+  8D87 32 CC 85     	ld (Columnas),a
453+  8D8A 18 04        	jr 4F
454+  8D8C 79           3 ld a,c
455+  8D8D 32 CC 85     	ld (Columnas),a
456+  8D90 D9           4 exx
457+  8D91 4F           	ld c,a
458+  8D92 D9           	exx
459+  8D93 C9            ret
460+  8D94
461+  8D94              ; --------------------------------------------------------------------------------------------------------------------
462+  8D94              ;
463+  8D94              ; 7/1/23
464+  8D94              ;
465+  8D94              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8D94              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8D94              ;
468+  8D94              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8D94              ;	DESTRUYE: HL,B Y A.
470+  8D94
471+  8D94 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8D97 FE 02        	cp 2
473+  8D99 38 18        	jr c,1F
474+  8D9B 28 16        	jr z,1F
475+  8D9D E6 01        	and 1
476+  8D9F 28 0D        	jr z,3F
477+  8DA1
478+  8DA1              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8DA1
480+  8DA1 CD DD 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8DA4
482+  8DA4 7D           9 ld a,l
483+  8DA5 E6 1F        	and $1f
484+  8DA7 28 2A        	jr z,7F
485+  8DA9 2B           	dec hl
486+  8DAA 10 F8        	djnz 9B
487+  8DAC 18 25        	jr 7F
488+  8DAE
489+  8DAE              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8DAE
491+  8DAE 2A 98 85     3 ld hl,(Posicion_actual)
492+  8DB1 18 20        	jr 7F
493+  8DB3
494+  8DB3 28 14        1 jr z,2F
495+  8DB5
496+  8DB5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8DB5
498+  8DB5 CD DD 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8DB8 7D           4 ld a,l
500+  8DB9 E6 1F        	and $1f
501+  8DBB 28 03        	jr z,6F
502+  8DBD 2B           	dec hl
503+  8DBE 10 F8        	djnz 4B
504+  8DC0 06 0F        6 ld b,15
505+  8DC2 CD 3E 8E     5 call PreviousScan
506+  8DC5 10 FB        	djnz 5B
507+  8DC7 18 0A        	jr 7F
508+  8DC9
509+  8DC9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8DC9
511+  8DC9 CD DD 8D     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8DCC 06 0F        	ld b,15
513+  8DCE CD 3E 8E     8 call PreviousScan
514+  8DD1 10 FB        	djnz 8B
515+  8DD3
516+  8DD3 E5           7 push hl
517+  8DD4 DD E1        	pop ix
518+  8DD6
519+  8DD6 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8DD9 E5           	push hl
521+  8DDA FD E1        	pop iy
522+  8DDC
523+  8DDC C9           	ret
524+  8DDD
525+  8DDD              ; --------------------------------------------------------------------------------------------------------------------
526+  8DDD              ;
527+  8DDD              ;	2/1/23
528+  8DDD              ;
529+  8DDD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8DDD              ;
531+  8DDD              ;	Tras esta rutina tenemos:
532+  8DDD              ;
533+  8DDD              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8DDD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8DDD              ;
536+  8DDD              ;	DESTRUYE!!!!! HL,B y A.
537+  8DDD
538+  8DDD 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8DE0 3A CC 85     	ld a,(Columnas)
540+  8DE3 3D           	dec a
541+  8DE4 20 01        	jr nz,1F
542+  8DE6 3C           	inc a
543+  8DE7 47           1 ld b,a
544+  8DE8 C9           	ret
545+  8DE9
546+  8DE9              ; --------------------------------------------------------------------------------------------------------------------
547+  8DE9              ;
548+  8DE9              ;	3/1/23
549+  8DE9              ;
550+  8DE9              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8DE9              ;
552+  8DE9              ;	Destruye: A,B,HL y DE.
553+  8DE9
554+  8DE9              Define_rutina_de_impresion
555+  8DE9
556+  8DE9 3A 97 85     	ld a,(Columns)
557+  8DEC 47           	ld b,a
558+  8DED 3A CC 85     	ld a,(Columnas)
559+  8DF0 B8           	cp b
560+  8DF1 20 0D        	jr nz,2f
561+  8DF3
562+  8DF3              ;	La entidad se imprime entera.
563+  8DF3
564+  8DF3 21 BF 8E     	ld hl, Indice_entidades_completas
565+  8DF6 E6 01        	and 1
566+  8DF8 28 02        	jr z,1F
567+  8DFA
568+  8DFA 23           	inc hl
569+  8DFB 23           	inc hl
570+  8DFC
571+  8DFC CD 97 87     1 call Extrae_address
572+  8DFF C9           	ret		;	ret
573+  8E00
574+  8E00              ;	La entidad no se imprime entera en pantalla.
575+  8E00
576+  8E00 3A AA 85     2 ld a,(Cuad_objeto)
577+  8E03 E6 01        	and 1
578+  8E05 28 17        	jr z,3F
579+  8E07
580+  8E07              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8E07
582+  8E07 21 C3 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8E0A 3A 97 85     4 ld a,(Columns)
584+  8E0D E6 01        	and 1
585+  8E0F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8E11
587+  8E11 23           	inc hl
588+  8E12 23           	inc hl
589+  8E13
590+  8E13 3A CC 85     	ld a,(Columnas)
591+  8E16 E6 01        	and 1
592+  8E18 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8E1A
594+  8E1A 23           	inc hl
595+  8E1B 23           	inc hl
596+  8E1C
597+  8E1C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8E1E
599+  8E1E 21 C9 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8E21 18 E7        	jr 4B
601+  8E23
602+  8E23              ; --------------------------------------------------------------------------------------------------------------------
603+  8E23              ;
604+  8E23              ;	Prepara_draw
605+  8E23              ;
606+  8E23              ;	Es una rutina de carga.
607+  8E23              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8E23              ;
609+  8E23              ;	FUNCIONAMIENTO:
610+  8E23              ;
611+  8E23              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8E23              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8E23              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8E23              ;
615+  8E23              ;	DESTRUYE:
616+  8E23              ;
617+  8E23              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8E23
619+  8E23 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8E26 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8E27 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8E28 4E           	ld c,(hl)
623+  8E29 2A 98 85     	ld hl,(Posicion_actual)
624+  8E2C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8E2E C9           	ret
626+  8E2F
627+  8E2F              ;----------------------------------------------------------------------------------------------------------------
628+  8E2F              ;
629+  8E2F              ;	5/08/22
630+  8E2F              ;
631+  8E2F              ;   NextScan.
632+  8E2F              ;
633+  8E2F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8E2F              ;
635+  8E2F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8E2F              ;
637+  8E2F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8E2F              ;
639+  8E2F              ;       DESTRUIDOS: AF y HL !!!
640+  8E2F              ;
641+  8E2F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8E2F              ;
643+  8E2F
644+  8E2F 24           NextScan inc h          ; Incrementamos el scanline.
645+  8E30 7C               ld a,h
646+  8E31 E6 07            and 7
647+  8E33 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8E34
649+  8E34 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8E35 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8E37 6F               ld l,a
652+  8E38 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8E39
654+  8E39 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8E3A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8E3C 67               ld h,a
657+  8E3D C9               ret
658+  8E3E
659+  8E3E              ;----------------------------------------------------------------------------------------------------------------
660+  8E3E              ;
661+  8E3E              ;	5/08/22
662+  8E3E              ;
663+  8E3E              ;   PreviousScan.
664+  8E3E              ;
665+  8E3E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8E3E              ;
667+  8E3E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8E3E              ;
669+  8E3E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8E3E              ;
671+  8E3E              ;       DESTRUIDOS: AF y HL !!!
672+  8E3E              ;
673+  8E3E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8E3E              ;
675+  8E3E
676+  8E3E 7C           PreviousScan ld a,h
677+  8E3F 25               dec h               ; Dec H.
678+  8E40 E6 07            and 7
679+  8E42 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8E43
681+  8E43 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8E44 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8E46 6F               ld l,a
684+  8E47 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8E48
686+  8E48 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8E49 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8E4B 67               ld h,a
689+  8E4C C9               ret
690+  8E4D
691+  8E4D              ; -----------------------------------------------------------------------------------
692+  8E4D              ;
693+  8E4D              ;	28/2/23
694+  8E4D              ;
695+  8E4D              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8E4D              ;	Extrae fotos de Album_de_fotos.
697+  8E4D
698+  8E4D 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8E50 A7           	and a
700+  8E51 C8           	ret z
701+  8E52 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8E56 31 00 70     	ld sp,Album_de_fotos
703+  8E59
704+  8E59 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8E5B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8E5C D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8E5D
708+  8E5D ED 73 DB 85  	ld (Stack_2),sp
709+  8E61 ED 7B D9 85  	ld sp,(Stack)
710+  8E65
711+  8E65              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8E65
713+  8E65 3E CD        	ld a,$cd
714+  8E67 32 6F 8E     	ld (Imprime),a
715+  8E6A EB           	ex de,hl
716+  8E6B 22 70 8E     	ld (Imprime+1),hl
717+  8E6E EB           	ex de,hl
718+  8E6F
719+  8E6F              ; Ejecuta la llamada:	CALL $xx,xx
720+  8E6F
721+  8E6F 00 00 00     Imprime db 0,0,0
722+  8E72
723+  8E72 3A D8 85     	ld a,(Numero_de_malotes)
724+  8E75 3D           	dec a
725+  8E76 28 09        	jr z,1F
726+  8E78 32 D8 85      	ld (Numero_de_malotes),a
727+  8E7B
728+  8E7B ED 7B DB 85   	ld sp,(Stack_2)
729+  8E7F 18 D8        	jr 2B
730+  8E81
731+  8E81 AF           1 xor a
732+  8E82 32 DB 85     	ld (Stack_2),a
733+  8E85 C9           	ret
734+  8E86
735+  8E86              ; -----------------------------------------------------------------------------------
736+  8E86              ;
737+  8E86              ;	28/2/23
738+  8E86              ;
739+  8E86              ;	Pinta los disparos generados.
740+  8E86
741+  8E86              Extrae_foto_disparos
742+  8E86
743+  8E86 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8E89 A7           	and a
745+  8E8A C8           	ret z
746+  8E8B ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8E8F 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8E92
749+  8E92 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8E94 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8E95 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8E96
753+  8E96 ED 73 DB 85  	ld (Stack_2),sp
754+  8E9A ED 7B D9 85  	ld sp,(Stack)
755+  8E9E
756+  8E9E              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8E9E
758+  8E9E 3E CD        	ld a,$cd
759+  8EA0 32 A8 8E     	ld (Imprime2),a
760+  8EA3 EB           	ex de,hl
761+  8EA4 22 A9 8E     	ld (Imprime2+1),hl
762+  8EA7 EB           	ex de,hl
763+  8EA8
764+  8EA8              ; Ejecuta la llamada:	CALL $xx,xx
765+  8EA8
766+  8EA8 00 00 00     Imprime2 db 0,0,0
767+  8EAB
768+  8EAB 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8EAE 3D           	dec a
770+  8EAF 28 09        	jr z,1F
771+  8EB1 32 E1 85      	ld (Numero_de_disparotes),a
772+  8EB4
773+  8EB4 ED 7B DB 85  	ld sp,(Stack_2)
774+  8EB8 18 D8        	jr 2B
775+  8EBA
776+  8EBA AF           1 xor a
777+  8EBB 32 DB 85     	ld (Stack_2),a
778+  8EBE C9           	ret
779+  8EBF
# file closed: Draw_XOR.asm
862   8EBF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8EBF              ;   índices de Rutinas de impresión.
  2+  8EBF
  3+  8EBF CF 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8EC1 FC 8E            defw Pinta_Amadeus_3x2
  5+  8EC3
  6+  8EC3 52 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8EC5 F2 8F            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8EC7 A6 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8EC9
 10+  8EC9 7C 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8ECB 80 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8ECD 34 90            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8ECF
 14+  8ECF
 15+  8ECF              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8ECF              ;
 17+  8ECF              ;   12/12/22
 18+  8ECF              ;
 19+  8ECF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8ECF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8ECF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8ECF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8ECF              ;
 24+  8ECF              ;   Modifica: DE y HL.
 25+  8ECF
 26+  8ECF ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8ED3 FD F9        	ld sp,iy
 28+  8ED5 06 10            ld b,16
 29+  8ED7 D1           1 pop de
 30+  8ED8 7B               ld a,e
 31+  8ED9 AE               xor (hl)
 32+  8EDA 77           	ld (hl),a
 33+  8EDB 23           	inc hl
 34+  8EDC 7A               ld a,d
 35+  8EDD AE               xor (hl)
 36+  8EDE 77           	ld (hl),a
 37+  8EDF 2B           	dec hl
 38+  8EE0 24           	inc h
 39+  8EE1 7C               ld a,h
 40+  8EE2 E6 07            and 7
 41+  8EE4 20 0A            jr nz,2F
 42+  8EE6 7D               ld a,l
 43+  8EE7 C6 20            add a,$20
 44+  8EE9 6F               ld l,a
 45+  8EEA 38 04            jr c,2F
 46+  8EEC 7C               ld a,h
 47+  8EED D6 08            sub 8
 48+  8EEF 67               ld h,a
 49+  8EF0 7C           2 ld a,h
 50+  8EF1 FE 58            cp $58
 51+  8EF3 28 02            jr z,3F
 52+  8EF5 10 E0            djnz 1B
 53+  8EF7 ED 7B D9 85  3 ld sp,(Stack)
 54+  8EFB C9           	ret
 55+  8EFC
 56+  8EFC ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8F00 FD F9        	ld sp,iy
 58+  8F02 06 08            ld b,8
 59+  8F04 D1           1 pop de
 60+  8F05 7B               ld a,e
 61+  8F06 AE               xor (hl)
 62+  8F07 77           	ld (hl),a
 63+  8F08 23           	inc hl
 64+  8F09 7A               ld a,d
 65+  8F0A AE               xor (hl)
 66+  8F0B 77           	ld (hl),a
 67+  8F0C 23           	inc hl
 68+  8F0D D1           	pop de
 69+  8F0E 7B               ld a,e
 70+  8F0F AE               xor (hl)
 71+  8F10 77           	ld (hl),a
 72+  8F11 2B           	dec hl
 73+  8F12 2B           	dec hl
 74+  8F13 24           	inc h
 75+  8F14 7C               ld a,h
 76+  8F15 E6 07            and 7
 77+  8F17 20 0A            jr nz,2F
 78+  8F19 7D               ld a,l
 79+  8F1A C6 20            add a,$20
 80+  8F1C 6F               ld l,a
 81+  8F1D 38 04            jr c,2F
 82+  8F1F 7C               ld a,h
 83+  8F20 D6 08            sub 8
 84+  8F22 67               ld h,a
 85+  8F23 7C           2 ld a,h
 86+  8F24 FE 58            cp $58
 87+  8F26 28 25            jr z,4F
 88+  8F28 7A               ld a,d
 89+  8F29 AE               xor (hl)
 90+  8F2A 77               ld (hl),a
 91+  8F2B D1           	pop de
 92+  8F2C 23           	inc hl
 93+  8F2D 7B               ld a,e
 94+  8F2E AE               xor (hl)
 95+  8F2F 77           	ld (hl),a
 96+  8F30 23           	inc hl
 97+  8F31 7A               ld a,d
 98+  8F32 AE               xor (hl)
 99+  8F33 77           	ld (hl),a
100+  8F34 2B           	dec hl
101+  8F35 2B           	dec hl
102+  8F36 24           	inc h
103+  8F37 7C               ld a,h
104+  8F38 E6 07            and 7
105+  8F3A 20 0A            jr nz,3F
106+  8F3C 7D               ld a,l
107+  8F3D C6 20            add a,$20
108+  8F3F 6F               ld l,a
109+  8F40 38 04            jr c,3F
110+  8F42 7C               ld a,h
111+  8F43 D6 08            sub 8
112+  8F45 67               ld h,a
113+  8F46 7C           3 ld a,h
114+  8F47 FE 58            cp $58
115+  8F49 28 02            jr z,4F
116+  8F4B 10 B7            djnz 1B
117+  8F4D ED 7B D9 85  4 ld sp,(Stack)
118+  8F51 C9           	ret
119+  8F52
120+  8F52              ; ---------------------------------------------------
121+  8F52
122+  8F52 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8F56 FD F9        	ld sp,iy
124+  8F58
125+  8F58              ; >>>
126+  8F58
127+  8F58 06 10            ld b,16
128+  8F5A D1           1 pop de
129+  8F5B 7A           	ld a,d
130+  8F5C AE           	xor (hl)
131+  8F5D 77           	ld (hl),a
132+  8F5E 24           	inc h
133+  8F5F 7C               ld a,h
134+  8F60 E6 07            and 7
135+  8F62 20 0C            jr nz,2F
136+  8F64 7D               ld a,l
137+  8F65 C6 20            add a,$20
138+  8F67 6F               ld l,a
139+  8F68 38 06            jr c,2F
140+  8F6A 7C               ld a,h
141+  8F6B D6 08            sub 8
142+  8F6D 67               ld h,a
143+  8F6E 18 00            jr 2F
144+  8F70 7C           2 ld a,h
145+  8F71 FE 58            cp $58
146+  8F73 28 02            jr z,3F
147+  8F75 10 E3            djnz 1B
148+  8F77 ED 7B D9 85  3 ld sp,(Stack)
149+  8F7B C9           	ret
150+  8F7C
151+  8F7C ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8F80 FD F9        	ld sp,iy
153+  8F82
154+  8F82              ; >>>
155+  8F82
156+  8F82 06 10            ld b,16
157+  8F84 D1           1 pop de
158+  8F85 7B           	ld a,e
159+  8F86 AE           	xor (hl)
160+  8F87 77           	ld (hl),a
161+  8F88 24           	inc h
162+  8F89 7C               ld a,h
163+  8F8A E6 07            and 7
164+  8F8C 20 0C            jr nz,2F
165+  8F8E 7D               ld a,l
166+  8F8F C6 20            add a,$20
167+  8F91 6F               ld l,a
168+  8F92 38 06            jr c,2F
169+  8F94 7C               ld a,h
170+  8F95 D6 08            sub 8
171+  8F97 67               ld h,a
172+  8F98 18 00            jr 2F
173+  8F9A 7C           2 ld a,h
174+  8F9B FE 58            cp $58
175+  8F9D 28 02            jr z,3F
176+  8F9F 10 E3            djnz 1B
177+  8FA1 ED 7B D9 85  3 ld sp,(Stack)
178+  8FA5 C9           	ret
179+  8FA6
180+  8FA6              ; ---------------------------------------------------
181+  8FA6
182+  8FA6 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8FAA FD F9        	ld sp,iy
184+  8FAC 06 08            ld b,8
185+  8FAE D1           1 pop de
186+  8FAF 7A           	ld a,d
187+  8FB0 AE           	xor (hl)
188+  8FB1 77           	ld (hl),a
189+  8FB2 23           	inc hl
190+  8FB3 D1           	pop de
191+  8FB4 7B           	ld a,e
192+  8FB5 AE           	xor (hl)
193+  8FB6 77           	ld (hl),a
194+  8FB7 2B           	dec hl
195+  8FB8 24            	inc h
196+  8FB9 7C               ld a,h
197+  8FBA E6 07            and 7
198+  8FBC 20 0A            jr nz,2F
199+  8FBE 7D               ld a,l
200+  8FBF C6 20            add a,$20
201+  8FC1 6F               ld l,a
202+  8FC2 38 04            jr c,2F
203+  8FC4 7C               ld a,h
204+  8FC5 D6 08            sub 8
205+  8FC7 67               ld h,a
206+  8FC8 7C           2 ld a,h
207+  8FC9 FE 58            cp $58
208+  8FCB 28 20            jr z,4F
209+  8FCD D1               pop de
210+  8FCE 7B           	ld a,e
211+  8FCF AE           	xor (hl)
212+  8FD0 77           	ld (hl),a
213+  8FD1 23           	inc hl
214+  8FD2 7A           	ld a,d
215+  8FD3 AE           	xor (hl)
216+  8FD4 77           	ld (hl),a
217+  8FD5 2B           	dec hl
218+  8FD6 24           	inc h
219+  8FD7 7C               ld a,h
220+  8FD8 E6 07            and 7
221+  8FDA 20 0A            jr nz,3F
222+  8FDC 7D               ld a,l
223+  8FDD C6 20            add a,$20
224+  8FDF 6F               ld l,a
225+  8FE0 38 04            jr c,3F
226+  8FE2 7C               ld a,h
227+  8FE3 D6 08            sub 8
228+  8FE5 67               ld h,a
229+  8FE6 7C           3 ld a,h
230+  8FE7 FE 58            cp $58
231+  8FE9 28 02            jr z,4F
232+  8FEB 10 C1            djnz 1B
233+  8FED ED 7B D9 85  4 ld sp,(Stack)
234+  8FF1 C9           	ret
235+  8FF2
236+  8FF2 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8FF6 FD F9        	ld sp,iy
238+  8FF8 06 08            ld b,8
239+  8FFA D1           1 pop de
240+  8FFB D1           	pop de
241+  8FFC 7B           	ld a,e
242+  8FFD AE           	xor (hl)
243+  8FFE 77           	ld (hl),a
244+  8FFF 24            	inc h
245+  9000 7C               ld a,h
246+  9001 E6 07            and 7
247+  9003 20 0A            jr nz,2F
248+  9005 7D               ld a,l
249+  9006 C6 20            add a,$20
250+  9008 6F               ld l,a
251+  9009 38 04            jr c,2F
252+  900B 7C               ld a,h
253+  900C D6 08            sub 8
254+  900E 67               ld h,a
255+  900F 7C           2 ld a,h
256+  9010 FE 58            cp $58
257+  9012 28 1B            jr z,4F
258+  9014 D1               pop de
259+  9015 7A           	ld a,d
260+  9016 AE           	xor (hl)
261+  9017 77           	ld (hl),a
262+  9018 24           	inc h
263+  9019 7C               ld a,h
264+  901A E6 07            and 7
265+  901C 20 0A            jr nz,3F
266+  901E 7D               ld a,l
267+  901F C6 20            add a,$20
268+  9021 6F               ld l,a
269+  9022 38 04            jr c,3F
270+  9024 7C               ld a,h
271+  9025 D6 08            sub 8
272+  9027 67               ld h,a
273+  9028 7C           3 ld a,h
274+  9029 FE 58            cp $58
275+  902B 28 02            jr z,4F
276+  902D 10 CB            djnz 1B
277+  902F ED 7B D9 85  4 ld sp,(Stack)
278+  9033 C9           	ret
279+  9034
280+  9034 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9038 FD F9        	ld sp,iy
282+  903A 06 08            ld b,8
283+  903C D1           1 pop de
284+  903D 7B           	ld a,e
285+  903E AE           	xor (hl)
286+  903F 77           	ld (hl),a
287+  9040 23           	inc hl
288+  9041 7A           	ld a,d
289+  9042 AE           	xor (hl)
290+  9043 77           	ld (hl),a
291+  9044 2B           	dec hl
292+  9045 24             	inc h
293+  9046 7C               ld a,h
294+  9047 E6 07            and 7
295+  9049 20 0A            jr nz,2F
296+  904B 7D               ld a,l
297+  904C C6 20            add a,$20
298+  904E 6F               ld l,a
299+  904F 38 04            jr c,2F
300+  9051 7C               ld a,h
301+  9052 D6 08            sub 8
302+  9054 67               ld h,a
303+  9055 7C           2 ld a,h
304+  9056 FE 58            cp $58
305+  9058 28 21            jr z,4F
306+  905A D1               pop de
307+  905B 7A           	ld a,d
308+  905C AE           	xor (hl)
309+  905D 77           	ld (hl),a
310+  905E 23           	inc hl
311+  905F D1               pop de
312+  9060 7B           	ld a,e
313+  9061 AE           	xor (hl)
314+  9062 77           	ld (hl),a
315+  9063 2B           	dec hl
316+  9064 24           	inc h
317+  9065 7C               ld a,h
318+  9066 E6 07            and 7
319+  9068 20 0A            jr nz,3F
320+  906A 7D               ld a,l
321+  906B C6 20            add a,$20
322+  906D 6F               ld l,a
323+  906E 38 04            jr c,3F
324+  9070 7C               ld a,h
325+  9071 D6 08            sub 8
326+  9073 67               ld h,a
327+  9074 7C           3 ld a,h
328+  9075 FE 58            cp $58
329+  9077 28 02            jr z,4F
330+  9079 10 C1            djnz 1B
331+  907B ED 7B D9 85  4 ld sp,(Stack)
332+  907F C9           	ret
333+  9080
334+  9080 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9084 FD F9        	ld sp,iy
336+  9086 06 08            ld b,8
337+  9088 D1           1 pop de
338+  9089 7B           	ld a,e
339+  908A AE           	xor (hl)
340+  908B 77           	ld (hl),a
341+  908C 24            	inc h
342+  908D 7C               ld a,h
343+  908E E6 07            and 7
344+  9090 20 0A            jr nz,2F
345+  9092 7D               ld a,l
346+  9093 C6 20            add a,$20
347+  9095 6F               ld l,a
348+  9096 38 04            jr c,2F
349+  9098 7C               ld a,h
350+  9099 D6 08            sub 8
351+  909B 67               ld h,a
352+  909C 7C           2 ld a,h
353+  909D FE 58            cp $58
354+  909F 28 1C            jr z,4F
355+  90A1 D1               pop de
356+  90A2 7A           	ld a,d
357+  90A3 AE           	xor (hl)
358+  90A4 77           	ld (hl),a
359+  90A5 24           	inc h
360+  90A6 7C               ld a,h
361+  90A7 E6 07            and 7
362+  90A9 20 0A            jr nz,3F
363+  90AB 7D               ld a,l
364+  90AC C6 20            add a,$20
365+  90AE 6F               ld l,a
366+  90AF 38 04            jr c,3F
367+  90B1 7C               ld a,h
368+  90B2 D6 08            sub 8
369+  90B4 67               ld h,a
370+  90B5 7C           3 ld a,h
371+  90B6 FE 58            cp $58
372+  90B8 28 03            jr z,4F
373+  90BA D1               pop de
374+  90BB 10 CB            djnz 1B
375+  90BD ED 7B D9 85  4 ld sp,(Stack)
376+  90C1 C9           	ret
377+  90C2
378+  90C2              ; ---------------------------------------------------
379+  90C2              ;
380+  90C2              ;   27/02/23
381+  90C2              ;
382+  90C2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  90C2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  90C2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  90C2
386+  90C2 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  90C6 FD F9            ld sp,iy
388+  90C8 06 02            ld b,2
389+  90CA D1           1 pop de
390+  90CB 7B               ld a,e
391+  90CC AE               xor (hl)
392+  90CD 77               ld (hl),a
393+  90CE 23               inc hl
394+  90CF 7A               ld a,d
395+  90D0 AE               xor (hl)
396+  90D1 77               ld (hl),a
397+  90D2 2B               dec hl
398+  90D3
399+  90D3 24               inc h
400+  90D4 7C               ld a,h
401+  90D5 E6 07            and 7
402+  90D7 20 0A            jr nz,2F
403+  90D9 7D               ld a,l
404+  90DA C6 20            add a,$20
405+  90DC 6F               ld l,a
406+  90DD 38 04            jr c,2F
407+  90DF 7C               ld a,h
408+  90E0 D6 08            sub 8
409+  90E2 67               ld h,a
410+  90E3 7C           2 ld a,h
411+  90E4 FE 58            cp $58
412+  90E6 28 02            jr z,3F
413+  90E8
414+  90E8 10 E0            djnz 1B
415+  90EA ED 7B D9 85  3 ld sp,(Stack)
416+  90EE C9               ret
417+  90EF
# file closed: Rutinas_de_impresion_sprites.asm
863   90EF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  90EF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  90EF              ;
  3+  90EF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  90EF              ;
  5+  90EF              ; *****************************************************************************************************************************************************************************************
  6+  90EF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  90EF
  8+  90EF 7C           calcula_tercio ld a,h
  9+  90F0 E6 18        	and $18
 10+  90F2 CB 2F        	sra a
 11+  90F4 CB 2F        	sra a
 12+  90F6 CB 2F        	sra a
 13+  90F8 C9           	ret
 14+  90F9
# file closed: calcula_tercio.asm
864   90F9              	include "Cls.asm"
# file opened: Cls.asm
  1+  90F9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  90F9              ;
  3+  90F9              ;
  4+  90F9              ;	CLS.
  5+  90F9              ;
  6+  90F9              ;	Limpia la pantalla y define sus atributos.
  7+  90F9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  90F9              ;
  9+  90F9              ;	COLORES: 0 ..... NEGRO
 10+  90F9              ;    		 1 ..... AZUL
 11+  90F9              ; 			 2 ..... ROJO
 12+  90F9              ;			 3 ..... MAGENTA
 13+  90F9              ; 			 4 ..... VERDE
 14+  90F9              ; 			 5 ..... CIAN
 15+  90F9              ;			 6 ..... AMARILLO
 16+  90F9              ; 			 7 ..... BLANCO
 17+  90F9              ;
 18+  90F9              ;	INPUT: A contiene los atributos de pantalla.
 19+  90F9              ;
 20+  90F9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  90F9
 22+  90F9
 23+  90F9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  90FC 11 01 40     	LD DE,$4001
 25+  90FF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  9102 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  9104 ED B0        	LDIR
 28+  9106 01 FF 02     	LD BC,767
 29+  9109 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  910A ED B0        	LDIR
 31+  910C C9           	ret
 32+  910D
# file closed: Cls.asm
865   910D              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  910D              ; ******************************************************************************************************************************************************************************************
  2+  910D              ;
  3+  910D              ;   22/01/23
  4+  910D              ;
  5+  910D              ;	Mov_down
  6+  910D              ;
  7+  910D              ; 	Mueve el Sprite X px hacia abajo.
  8+  910D              ;
  9+  910D              ;
 10+  910D 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  9110 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  9112              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  9112              ; 																	; _ en el caso de que no lo haya.
 14+  9112 3A AE 85     	ld a,(Vel_down)
 15+  9115 47           	ld b,a
 16+  9116 2A 98 85         ld hl,(Posicion_actual)
 17+  9119 CD EF 90     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  911C E6 02        	and 2
 19+  911E 28 0F        	jr z,1F
 20+  9120
 21+  9120              ; Nos encontramos en el último tercio de pantalla.
 22+  9120              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  9120
 24+  9120 7C           	ld a,h
 25+  9121 FE 57        	cp $57
 26+  9123 20 0A        	jr nz,1F
 27+  9125 7D           	ld a,l
 28+  9126 C6 20        	add $20
 29+  9128 30 05        	jr nc,1F
 30+  912A
 31+  912A              ; ------------------------------
 32+  912A CD 05 94     	call Reaparece_arriba
 33+  912D              ;	call Reinicio
 34+  912D              ; ------------------------------
 35+  912D 18 08        	jr 3F
 36+  912F CD 2F 8E     1 call NextScan
 37+  9132 22 98 85     	ld (Posicion_actual),hl
 38+  9135 10 E2            djnz 2B
 39+  9137 CD 1B 94     3 call Genera_coordenadas
 40+  913A C9           	ret
 41+  913B
 42+  913B
 43+  913B              ; ******************************************************************************************************************************************************************************************
 44+  913B              ;
 45+  913B              ;   22/01/23
 46+  913B              ;
 47+  913B              ;	Mov_up
 48+  913B              ;
 49+  913B              ; 	Mueve el Sprite hacia arriba.
 50+  913B              ;
 51+  913B              ;
 52+  913B 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  913E CB DE        	set 3,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  9140              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  9140              ; 																		; _ en el caso de que no lo haya.
 56+  9140 3A AD 85     	ld a,(Vel_up)
 57+  9143 47           	ld b,a
 58+  9144 2A 98 85     	ld hl,(Posicion_actual)
 59+  9147 CD EF 90     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  914A A7           	and a
 61+  914B 20 10        	jr nz,1F
 62+  914D
 63+  914D              ; Nos encontramos en el 1er tercio de pantalla.
 64+  914D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  914D
 66+  914D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  914E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9150 20 0B            jr nz,1F
 69+  9152 7D               ld a,l
 70+  9153 D6 20            sub $20
 71+  9155 30 06            jr nc,1F
 72+  9157 25               dec h
 73+  9158
 74+  9158              ; -----------------------------
 75+  9158 CD F5 93         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  915B              ;	call Reinicio
 77+  915B              ; -----------------------------
 78+  915B
 79+  915B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  915D CD 3E 8E     1 call PreviousScan
 81+  9160 22 98 85     	ld (Posicion_actual),hl
 82+  9163 10 E2            djnz 3B
 83+  9165 CD 1B 94     2 call Genera_coordenadas
 84+  9168 C9           	ret
 85+  9169
 86+  9169              ; ******************************************************************************************************************************************************************************************
 87+  9169              ;
 88+  9169              ;	19/10/22
 89+  9169              ;
 90+  9169              ;	Mov_right.
 91+  9169              ;
 92+  9169              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9169              ;
 94+  9169
 95+  9169 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  916C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  916E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  916E              ; 																	; _ en el caso de que no lo haya.
 99+  916E 3A C3 85     	ld a,(Ctrl_0)
100+  9171 CB 77        	bit 6,a
101+  9173 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9175
103+  9175 CD A3 93     	call Stop_Amadeus_right
104+  9178 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9179 18 4D        	jr 8F
106+  917B
107+  917B 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  917E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9180 20 46        	jr nz,8F
110+  9182
111+  9182 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9185 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9186 28 40        	jr z,8F
114+  9188
115+  9188              ; ---------- ---------- ----------
116+  9188              ;
117+  9188              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9188
119+  9188 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  918B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  918D 28 11        	jr z,1F
122+  918F 38 06        	jr c,6F
123+  9191 FE 04        	cp 4
124+  9193 28 14        	jr z,7F
125+  9195 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9197
127+  9197              ; ---------- ---------- ----------
128+  9197              ;
129+  9197              ; Perfiles de velocidad
130+  9197              ;
131+  9197
132+  9197 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  919A FE FE        	cp $fe
134+  919C 20 2A        	jr nz,8F
135+  919E 18 10        	jr 3F
136+  91A0 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  91A3 FE FD        	cp $fd
138+  91A5 20 21        	jr nz,8F
139+  91A7 18 07        	jr 3F
140+  91A9 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  91AC FE FB        	cp $fb
142+  91AE 20 18        	jr nz,8F
143+  91B0
144+  91B0              ; ---------- ---------- ----------
145+  91B0
146+  91B0              3
147+  91B0 CD E3 93     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  91B3              ;	call Reinicio
149+  91B3
150+  91B3              ; ---------- ---------- ----------
151+  91B3              ;
152+  91B3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  91B3
154+  91B3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  91B5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  91B6 CD CF 91     	call DESPLZ_DER
157+  91B9 C1           	pop bc
158+  91BA 10 F9        	djnz 5B
159+  91BC 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  91BF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  91C0 22 98 85     	ld (Posicion_actual),hl
162+  91C3 CD 1B 94     	call Genera_coordenadas
163+  91C6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  91C8
165+  91C8              ; ---------- ---------- ----------
166+  91C8
167+  91C8 2A 98 85     8 ld hl,(Posicion_actual)
168+  91CB CD CF 91     	call DESPLZ_DER
169+  91CE C9           2 ret
170+  91CF
171+  91CF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  91CF              ;
173+  91CF              ;	22/9/22
174+  91CF              ;
175+  91CF
176+  91CF CD DE 91     DESPLZ_DER call Desplaza_derecha
177+  91D2 CD 2A 92         call modifica_parametros_1er_DESPLZ_2
178+  91D5 CD 53 92         call Ciclo_completo
179+  91D8 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  91DB CB FE        	set 7,(hl)
181+  91DD C9           	ret
182+  91DE
183+  91DE              ; ******************************************************************************************************************************************************************************************
184+  91DE              ;	15/02/23
185+  91DE              ;
186+  91DE
187+  91DE 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  91E1 47           	ld b,a
189+  91E2 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  91E5 23           1 inc hl
191+  91E6 23           	inc hl
192+  91E7 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  91E9 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  91EC CD 97 87     	call Extrae_address
195+  91EF 22 9A 85     	ld (Puntero_objeto),hl
196+  91F2
197+  91F2              ; Modifica (Puntero_DESPLZ_izq).
198+  91F2
199+  91F2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  91F2              ; Cuántos movimientos hemos hecho ??
201+  91F2              ; DE contiene (Puntero_DESPLZ_der).
202+  91F2
203+  91F2 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  91F5 EB           	ex de,hl
205+  91F6 A7           	and a
206+  91F7 ED 52        	sbc hl,de
207+  91F9 CB 3D        	srl l
208+  91FB 3E 08        6 ld a,8
209+  91FD 95           	sub l
210+  91FE 30 1E        	jr nc,3F
211+  9200
212+  9200              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  9200              ; B="0".
214+  9200
215+  9200 04           4 inc b
216+  9201 3C           	inc a
217+  9202 20 FC        	jr nz,4B
218+  9204 78           	ld a,b
219+  9205 08           	ex af,af
220+  9206 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  9209 23           5 inc hl
222+  920A 23           	inc hl
223+  920B 10 FC        	djnz 5B
224+  920D 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  9210 CD 97 87     	call Extrae_address
226+  9213 22 9A 85     	ld (Puntero_objeto),hl
227+  9216
228+  9216              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9216              ; _(Posicion_actual).
230+  9216
231+  9216 21 98 85     	ld hl,Posicion_actual
232+  9219 34           	inc (hl)
233+  921A 08               ex af,af
234+  921B 6F           	ld l,a
235+  921C 18 DD        	jr 6B
236+  921E
237+  921E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  921E
239+  921E 47           3 ld b,a
240+  921F 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  9222 23           2 inc hl
242+  9223 23           	inc hl
243+  9224 10 FC        	djnz 2B
244+  9226 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  9229 C9           8 ret
246+  922A
247+  922A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  922A              ;
249+  922A              ;	24/7/22
250+  922A              ;
251+  922A              ;	modifica_parametros_1er_DESPLZ_2
252+  922A              ;
253+  922A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  922A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  922A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  922A
257+  922A 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  922D A7           	and a
259+  922E 20 1F        	jr nz,1F
260+  9230 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  9232 32 9E 85         ld (CTRL_DESPLZ),a
262+  9235
263+  9235 21 97 85     	ld hl,Columns
264+  9238 34           	inc (hl)
265+  9239 3A AA 85     	ld a,(Cuad_objeto)
266+  923C E6 01        	and 1
267+  923E 28 0F        	jr z,1F
268+  9240 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  9243 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9244 22 98 85     	ld (Posicion_actual),hl
271+  9247 CD 1B 94     	call Genera_coordenadas
272+  924A CD AF 93     	call Inc_CTRL_DESPLZ
273+  924D 18 03        	jr 2F
274+  924F CD AF 93     1 call Inc_CTRL_DESPLZ
275+  9252 C9           2 ret
276+  9253
277+  9253              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9253              ;
279+  9253              ;	24/7/22
280+  9253              ;
281+  9253              ;	Ciclo_completo.
282+  9253              ;
283+  9253              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9253              ;
285+  9253              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9253              ; 	Decrementamos (Columns).
287+  9253              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9253              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9253
290+  9253
291+  9253 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9256 FE FF        	cp $ff
293+  9258 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  925A E6 F0        	and $f0
295+  925C 20 28        	jr nz,3F
296+  925E
297+  925E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  925E
299+  925E 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9261 47           	ld b,a
301+  9262 3E F8        	ld a,$f8
302+  9264 80           	add b
303+  9265 32 9E 85     	ld (CTRL_DESPLZ),a
304+  9268 18 1C        	jr 3F
305+  926A 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  926D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  926E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  926F 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9272 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9275 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9277 20 0A        	jr nz,2F
312+  9279 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  927C 23           	inc hl
314+  927D 22 98 85     	ld (Posicion_actual),hl
315+  9280 CD 1B 94     	call Genera_coordenadas
316+  9283
317+  9283              ; Inicia el puntero de Sprite.
318+  9283
319+  9283 CD AE 87     2 call Inicia_puntero_objeto_der
320+  9286 C9           3 ret
321+  9287
322+  9287              ; ******************************************************************************************************************************************************************************************
323+  9287              ;
324+  9287              ;	15/02/23
325+  9287              ;
326+  9287              ;	Mov_left.
327+  9287              ;
328+  9287              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9287              ;
330+  9287              Mov_left
331+  9287
332+  9287 21 C3 85     	ld hl,Ctrl_0
333+  928A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  928C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  928C              ; 																	; _ en el caso de que no lo haya.
336+  928C 3A C3 85     	ld a,(Ctrl_0)
337+  928F CB 77        	bit 6,a
338+  9291 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9293
340+  9293 CD A9 93     	call Stop_Amadeus_left
341+  9296 C8           	ret z
342+  9297 20 4A        	jr nz,8F
343+  9299
344+  9299 3A 9C 85     11 ld a,(Coordenada_X)
345+  929C A7           	and a
346+  929D 20 44        	jr nz,8F
347+  929F
348+  929F 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  92A2 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  92A3 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  92A5
352+  92A5              ; ---------- ---------- ----------
353+  92A5
354+  92A5 3A AB 85     	ld a,(Vel_left)
355+  92A8 FE 02        	cp 2
356+  92AA 28 0F        	jr z,1F
357+  92AC 38 04        	jr c,6F
358+  92AE FE 04        	cp 4
359+  92B0 28 12        	jr z,7F
360+  92B2
361+  92B2              ; ---------- ---------- ----------
362+  92B2
363+  92B2 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  92B5 FE F9        	cp $f9
365+  92B7 20 2A        	jr nz,8F
366+  92B9 18 10        	jr 4F
367+  92BB 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  92BE FE FA        	cp $fa
369+  92C0 20 21        	jr nz,8F
370+  92C2 18 07        	jr 4F
371+  92C4 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  92C7 FE FC        	cp $fc
373+  92C9 20 18        	jr nz,8F
374+  92CB
375+  92CB              ; ---------- ---------- ----------
376+  92CB
377+  92CB              4
378+  92CB CD D1 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  92CE              ;	call Reinicio
380+  92CE
381+  92CE              ; ---------- ---------- ----------
382+  92CE
383+  92CE 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  92D0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  92D1
386+  92D1              ;	ld hl,(Indice_Sprite_izq)
387+  92D1              ;	ld (Puntero_DESPLZ_izq),hl
388+  92D1
389+  92D1 CD EA 92     	call DESPLZ_IZQ
390+  92D4 C1           	pop bc
391+  92D5 10 F9        	djnz 5B
392+  92D7 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  92DA 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  92DB 22 98 85     	ld (Posicion_actual),hl
395+  92DE CD 1B 94     	call Genera_coordenadas
396+  92E1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  92E3
398+  92E3              ; ---------- ---------- ----------
399+  92E3
400+  92E3              ; Movemos, no hay recolocación.
401+  92E3
402+  92E3 2A 98 85     8 ld hl,(Posicion_actual)
403+  92E6 CD EA 92     	call DESPLZ_IZQ
404+  92E9 C9           2 ret
405+  92EA
406+  92EA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  92EA              ;
408+  92EA              ;	22/9/22
409+  92EA
410+  92EA              DESPLZ_IZQ
411+  92EA
412+  92EA CD F9 92     	call Desplaza_izquierda
413+  92ED CD 45 93         call modifica_parametros_1er_DESPLZ
414+  92F0 CD 6D 93     	call Ciclo_completo_2
415+  92F3 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  92F6 CB BE        	res 7,(hl)
417+  92F8 C9           	ret
418+  92F9
419+  92F9              Desplaza_izquierda
420+  92F9
421+  92F9 3A AB 85     	ld a,(Vel_left)
422+  92FC 47           	ld b,a
423+  92FD 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
424+  9300 23           1 inc hl
425+  9301 23           	inc hl
426+  9302 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  9304 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
428+  9307 CD 97 87     	call Extrae_address
429+  930A 22 9A 85     	ld (Puntero_objeto),hl
430+  930D
431+  930D              ; Modifica (Puntero_DESPLZ_der).
432+  930D
433+  930D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  930D              ; Cuántos movimientos hemos hecho ??
435+  930D              ; DE contiene (Puntero_DESPLZ_izq).
436+  930D
437+  930D 2A A2 85     7 ld hl,(Indice_Sprite_izq)
438+  9310 EB           	ex de,hl
439+  9311 A7           	and a
440+  9312 ED 52        	sbc hl,de
441+  9314 CB 3D        	srl l
442+  9316 3E 08        6 ld a,8
443+  9318 95           	sub l
444+  9319 30 1E        	jr nc,3F
445+  931B
446+  931B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  931B              ; B="0".
448+  931B
449+  931B 04           4 inc b
450+  931C 3C           	inc a
451+  931D 20 FC        	jr nz,4B
452+  931F 78           	ld a,b
453+  9320 08           	ex af,af
454+  9321 2A A2 85     	ld hl,(Indice_Sprite_izq)
455+  9324 23           5 inc hl
456+  9325 23           	inc hl
457+  9326 10 FC        	djnz 5B
458+  9328 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
459+  932B CD 97 87     	call Extrae_address
460+  932E 22 9A 85     	ld (Puntero_objeto),hl
461+  9331
462+  9331              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  9331              ; _(Posicion_actual).
464+  9331
465+  9331 21 98 85     	ld hl,Posicion_actual
466+  9334 35           	dec (hl)
467+  9335 08           	ex af,af
468+  9336 6F           	ld l,a
469+  9337 18 DD        	jr 6B
470+  9339
471+  9339              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  9339
473+  9339 47           3 ld b,a
474+  933A 2A A0 85     	ld hl,(Indice_Sprite_der)
475+  933D 23           2 inc hl
476+  933E 23           	inc hl
477+  933F 10 FC        	djnz 2B
478+  9341 22 A4 85     	ld (Puntero_DESPLZ_der),hl
479+  9344 C9           8 ret
480+  9345
481+  9345              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  9345              ;
483+  9345              ;	modifica_parametros_1er_DESPLZ
484+  9345              ;
485+  9345              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  9345              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  9345              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  9345
489+  9345 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  9348 A7           	and a
491+  9349 20 1E        	jr nz,1F
492+  934B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  934C 32 9E 85         ld (CTRL_DESPLZ),a
494+  934F 21 97 85     	ld hl,Columns
495+  9352 34           	inc (hl)
496+  9353 3A AA 85     	ld a,(Cuad_objeto)
497+  9356 E6 01        	and 1
498+  9358 20 0F        	jr nz,1F
499+  935A 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  935D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  935E 22 98 85     	ld (Posicion_actual),hl
502+  9361 CD 1B 94     	call Genera_coordenadas
503+  9364 CD C0 93     	call Dec_CTRL_DESPLZ
504+  9367 18 03        	jr 2F
505+  9369 CD C0 93     1 call Dec_CTRL_DESPLZ
506+  936C C9           2 ret
507+  936D
508+  936D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  936D
510+  936D 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  9370 FE F7        	cp $f7
512+  9372 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  9374 30 2C        	jr nc,3F
514+  9376
515+  9376              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  9376
517+  9376 06 00        	ld b,0
518+  9378 04           4 inc b
519+  9379 3C           	inc a
520+  937A FE F7        	cp $f7
521+  937C 20 FA        	jr nz,4B
522+  937E 3E FF        	ld a,$ff
523+  9380 90           	sub b
524+  9381 32 9E 85     	ld (CTRL_DESPLZ),a
525+  9384 18 1C        	jr 3F
526+  9386
527+  9386              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  9386
529+  9386 21 97 85     1 ld hl,Columns
530+  9389 35           	dec (hl)
531+  938A AF           	xor a
532+  938B 32 9E 85     	ld (CTRL_DESPLZ),a
533+  938E 3A AA 85     	ld a,(Cuad_objeto)
534+  9391 E6 01        	and 1
535+  9393 28 0A        	jr z,2F
536+  9395 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  9398 2B           	dec hl
538+  9399 22 98 85     	ld (Posicion_actual),hl
539+  939C CD 1B 94     	call Genera_coordenadas
540+  939F
541+  939F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  939F
543+  939F CD C1 87     2 call Inicia_puntero_objeto_izq
544+  93A2 C9           3 ret
545+  93A3
546+  93A3              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  93A3              ;
548+  93A3              ;	19/10/22
549+  93A3              ;
550+  93A3              ;	(cp 29) para un Amadeus de 3 Columns.
551+  93A3              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  93A3
553+  93A3 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  93A6 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  93A8 C9           	ret
556+  93A9
557+  93A9              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  93A9              ;
559+  93A9              ;	19/10/22
560+  93A9              ;
561+  93A9              ;	(cp 2) para un Amadeus de 3 Columns.
562+  93A9              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  93A9
564+  93A9 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  93AC FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  93AE C9           	ret
567+  93AF
568+  93AF              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  93AF              ;
570+  93AF              ;	24/7/22
571+  93AF              ;
572+  93AF              ;	Inc_CTRL_DESPLZ
573+  93AF              ;
574+  93AF              ;
575+  93AF              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  93AF
577+  93AF 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  93B2 3A AC 85     	ld a,(Vel_right)
579+  93B5 A7           	and a
580+  93B6 28 06        	jr z,1F
581+  93B8 47           	ld b,a
582+  93B9 34           3 inc (hl)
583+  93BA 10 FD        	djnz 3B
584+  93BC 18 01        	jr 2F
585+  93BE 34           1 inc (hl)
586+  93BF C9           2 ret
587+  93C0
588+  93C0              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  93C0              ;
590+  93C0              ;	5/2/23
591+  93C0              ;
592+  93C0              ;	Dec_CTRL_DESPLZ
593+  93C0              ;
594+  93C0              ;
595+  93C0              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  93C0
597+  93C0 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  93C3 3A AB 85     	ld a,(Vel_left)
599+  93C6 A7           	and a
600+  93C7 28 06        	jr z,1F
601+  93C9 47           	ld b,a
602+  93CA 35           3 dec (hl)
603+  93CB 10 FD        	djnz 3B
604+  93CD 18 01        	jr 2F
605+  93CF 35           1 dec (hl)
606+  93D0 C9           2 ret
607+  93D1
608+  93D1              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  93D1
610+  93D1 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  93D4 01 1F 00     	ld bc,31
612+  93D7 A7           	and a
613+  93D8 ED 4A        	adc hl,bc
614+  93DA 22 98 85     	ld (Posicion_actual),hl
615+  93DD 21 C3 85     	ld hl,Ctrl_0														; $xxx1
616+  93E0 CB C6        	set 0,(hl)
617+  93E2 C9           	ret
618+  93E3
619+  93E3              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  93E3
621+  93E3 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  93E6 01 1F 00     	ld bc,31
623+  93E9 A7           	and a
624+  93EA ED 42        	sbc hl,bc
625+  93EC 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
626+  93EF 21 C3 85     	ld hl,Ctrl_0
627+  93F2 CB CE        	set 1,(hl)
628+  93F4 C9           	ret
629+  93F5
630+  93F5              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  93F5
632+  93F5 24           Reaparece_abajo inc h
633+  93F6 01 E0 17     	ld bc,$17e0
634+  93F9 A7           	and a
635+  93FA ED 4A        	adc hl,bc
636+  93FC 22 98 85     	ld (Posicion_actual),hl
637+  93FF 21 C3 85     	ld hl,Ctrl_0
638+  9402 CB D6        	set 2,(hl)
639+  9404 C9           	ret
640+  9405
641+  9405              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  9405
643+  9405 01 E0 17     Reaparece_arriba ld bc,$17e0
644+  9408 A7           	and a
645+  9409 ED 42        	sbc hl,bc
646+  940B 22 98 85     	ld (Posicion_actual),hl
647+  940E 21 C3 85     	ld hl,Ctrl_0
648+  9411 CB DE        	set 3,(hl)
649+  9413 C9           	ret
650+  9414
651+  9414              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
652+  9414
653+  9414 2A A8 85     Reinicio ld hl,(Posicion_inicio)
654+  9417 22 98 85     	ld (Posicion_actual),hl
655+  941A C9           	ret
# file closed: Direcciones.asm
866   941B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  941B              ;	12/12/22
  2+  941B              ;
  3+  941B              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  941B              ;	Fila superior "0", Columna izquierda "0".
  5+  941B              ;
  6+  941B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  941B              ;
  8+  941B              ;	Modifica: A
  9+  941B
 10+  941B C5           Genera_coordenadas push bc
 11+  941C E5           	push hl
 12+  941D 2A 98 85     	ld hl,(Posicion_actual)
 13+  9420 7D           	ld a,l
 14+  9421 E6 1F        	and $1f
 15+  9423 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  9426 CD EF 90     	call calcula_tercio
 17+  9429 47           	ld b,a
 18+  942A 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  942B 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  942D 7D           	ld a,l
 21+  942E E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  9430 28 05        	jr z,2F
 23+  9432 0C           1 inc c
 24+  9433 D6 20        	sub 32
 25+  9435 20 FB        	jr nz,1B
 26+  9437 0C           2 inc c
 27+  9438 04           	inc b
 28+  9439 05           	dec b
 29+  943A 28 04        	jr z,3F
 30+  943C 3E E0        	ld a,$e0
 31+  943E 10 F2        	djnz 1B
 32+  9440 79           3 ld a,c
 33+  9441 3D           	dec a
 34+  9442 32 9D 85     	ld (Coordenada_y),a
 35+  9445 E1           	pop hl
 36+  9446 C1           	pop bc
 37+  9447 C9           	ret
# file closed: Genera_coordenadas.asm
867   9448              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  9448
  2+  9448
  3+  9448              ;   11/8/22
  4+  9448              ;
  5+  9448              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  9448              ;
  7+  9448              ;   Mov_obj.asm
  8+  9448              ;
  9+  9448              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  9448              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  9448              ;
 12+  9448              ;   Codificación:
 13+  9448              ;
 14+  9448              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  9448
 16+  9448              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  9448
 18+  9448 02 40 00     Arriba db 2,%01000000,0
 19+  944B 02 80 00     Abajo db 2,%10000000,0
 20+  944E 02 20 00     Derecha db 2,%00100000,0
 21+  9451 02 10 00     Izquierda db 2,%00010000,0
 22+  9454 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9458 60 42 60 40
 22+  945C 63
 23+  945D 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9461 22 A3 80 A0
 24+  9465 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9469 84 A0 83 A0
 25+  946D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9471 80 A3 22 A0
 26+  9475 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9479 40 60 42 60
 27+  947D 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9481
 29+  9481 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  9485 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  9489 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  948D 84 00
 32+  948F 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  9493 84 00
 33+  9495 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  9499 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  949D 1F 1F 1F 1F
 35+  94A1 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  94A5 1F 1F 1F 1F
 35+  94A9 1F
 36+  94AA 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  94AE 2F 2F 2F 2F
 36+  94B2 2F 2F
 37+  94B4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  94B8 2F 2F 00
 38+  94BB
 39+  94BB              ; ----- ----- ----- ----- -----
 40+  94BB
 41+  94BB 99 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  94BD 95 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  94BF 51 94        Indice_mov_Izquierda defw Izquierda
 44+  94C1 4E 94        Indice_mov_Derecha defw Derecha
 45+  94C3 4B 94        Indice_mov_Abajo defw Abajo
 46+  94C5 48 94        Indice_mov_Arriba defw Arriba
 47+  94C7 85 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  94C9 89 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  94CB 81 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  94CD 8F 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  94CF 54 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  94D1              ; ----- ----- ----- ----- -----
 53+  94D1
 54+  94D1 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  94D4 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  94D5 28 02            jr z,1F
 57+  94D7 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  94D9 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  94DC C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  94DE 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  94E1              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  94E1 2A C7 85         ld hl,(Puntero_mov)
 63+  94E4 7E               ld a,(hl)
 64+  94E5 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  94E8 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  94E9 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  94EC
 68+  94EC 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  94EF A7               and a
 70+  94F0 20 0C            jr nz,12F
 71+  94F2 2A C7 85         ld hl,(Puntero_mov)
 72+  94F5 7E               ld a,(hl)
 73+  94F6 A7               and a
 74+  94F7 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  94F9 E6 0F            and $0f
 76+  94FB 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  94FE              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  94FE 2A C7 85     12 ld hl,(Puntero_mov)
 79+  9501 CB 7E            bit 7,(hl)
 80+  9503 28 03            jr z,2F
 81+  9505 CD 0D 91         call Mov_down
 82+  9508 2A C7 85     2 ld hl, (Puntero_mov)
 83+  950B CB 76            bit 6,(hl)
 84+  950D 28 03            jr z,3F
 85+  950F CD 3B 91         call Mov_up
 86+  9512 2A C7 85     3 ld hl, (Puntero_mov)
 87+  9515 CB 6E            bit 5,(hl)
 88+  9517 28 03            jr z,4F
 89+  9519 CD 69 91         call Mov_right
 90+  951C 2A C7 85     4 ld hl, (Puntero_mov)
 91+  951F CB 66            bit 4,(hl)
 92+  9521 28 03            jr z,5F
 93+  9523 CD 87 92         call Mov_left
 94+  9526
 95+  9526              ; ---------- --------- --------- ---------- ----------
 96+  9526
 97+  9526 3A CB 85     5 ld a,(Repetimos_db)
 98+  9529 A7               and a
 99+  952A 28 07            jr z,6F
100+  952C 3D               dec a
101+  952D 32 CB 85         ld (Repetimos_db),a
102+  9530 28 01            jr z,6f
103+  9532 C9           11 ret
104+  9533 21 C9 85     6 ld hl,Contador_db_mov
105+  9536 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  9537 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  953A 23               inc hl
108+  953B 22 C7 85         ld (Puntero_mov),hl
109+  953E 18 F2            jr 11B
110+  9540 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9543 3A CA 85         ld a,(Incrementa_puntero)
112+  9546 47               ld b,a
113+  9547 23           8 inc hl
114+  9548 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  954A 5E               ld e,(hl)
116+  954B 23               inc hl
117+  954C 56               ld d,(hl)
118+  954D EB               ex de,hl
119+  954E 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9551 18 DF            jr 11B
121+  9553
122+  9553              ; ---------- --------- --------- ---------- ----------
123+  9553              ;
124+  9553              ;   11/8/22
125+  9553              ;
126+  9553              ;   Prepara_Puntero_mov
127+  9553
128+  9553 E5           Prepara_Puntero_mov push hl
129+  9554 D5               push de
130+  9555 2A C5 85         ld hl,(Puntero_indice_mov)
131+  9558 5E               ld e,(hl)
132+  9559 23               inc hl
133+  955A 56               ld d,(hl)
134+  955B EB               ex de,hl
135+  955C 22 C7 85         ld (Puntero_mov),hl
136+  955F D1               pop de
137+  9560 E1               pop hl
138+  9561 C9               ret
139+  9562
140+  9562              ; ---------- --------- --------- ---------- ----------
141+  9562              ;
142+  9562              ;   11/8/22
143+  9562              ;
144+  9562              ;   Reinicia_el_movimiento
145+  9562
146+  9562 CD 53 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  9565 AF               xor a
148+  9566 32 C9 85         ld (Contador_db_mov),a
149+  9569 32 CA 85         ld (Incrementa_puntero),a
150+  956C
151+  956C              ;    jr $
152+  956C
153+  956C C3 D1 94         jp Movimiento
154+  956F C9               ret
155+  9570              ; ---------- --------- --------- ---------- ----------
156+  9570
157+  9570
158+  9570
159+  9570
160+  9570
161+  9570
162+  9570
163+  9570
164+  9570
165+  9570
166+  9570
167+  9570
168+  9570
169+  9570
170+  9570
171+  9570
172+  9570
173+  9570
# file closed: Patrones_de_mov.asm
868   9570              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9570              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9570              ;
  3+  9570              ;	3/1/23
  4+  9570              ;
  5+  9570              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9570
  7+  9570              ;	ADC HL,SP	LD (addr),SP
  8+  9570              ;	ADD HL,SP	LD SP,(addr)
  9+  9570              ;	ADD IX,SP	LD SP,nn
 10+  9570              ; 	ADD IY,SP	LD SP,HL
 11+  9570              ;				LD SP,IX
 12+  9570              ;	DEC SP		LD SP,IY
 13+  9570
 14+  9570              ;	EX (SP),HL
 15+  9570              ;	EX (SP),IX
 16+  9570              ;	EX (SP),IY
 17+  9570
 18+  9570              ;	INC SP
 19+  9570
 20+  9570
 21+  9570                  org $7fa0
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
<<<<<<< HEAD
883   7FD4
884   7FD4              	SAVESNA "Pruebas.sna", START
885   7FD4
886   7FD4
887   7FD4
=======
869   7FD4
870   7FD4              	SAVESNA "Pruebas.sna", START
871   7FD4
872   7FD4
873   7FD4
>>>>>>> c0a0d270ee4450360613338b998b740c4540e8f8
# file closed: Banco_de_pruebas.asm
