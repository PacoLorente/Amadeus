# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD DB 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD D9 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD E9 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04
 357  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C08              ;														; _ puntero (Indice_entidades).
 360  8C08
 361  8C08              ;---------------------------------------------------------------------------------------------------------------
 362  8C08              ;
 363  8C08              ;	31/08/24
 364  8C08              ;
 365  8C08              ;	Álbumes.
 366  8C08
 367  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C0A              ;														; _variable para almacenar lo posición del puntero_
 369  8C0A              ; 														; _de pila, SP.
 370  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C0C
 373  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C0C
 375  8C0C 00 00        Album_de_pintado defw 0
 376  8C0E 00 00        Album_de_borrado defw 0
 377  8C10 00 00        Album_de_pintado_Amadeus defw 0
 378  8C12 00 00        Album_de_borrado_Amadeus defw 0
 379  8C14 00 00        Album_de_pintado_disparos defw 0
 380  8C16 00 00        Album_de_borrado_disparos defw 0
 381  8C18
 382  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C1A 00           Num_de_bytes_album_de_disparos db 0
 384  8C1B 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C1C
 386  8C1C 02           Numero_de_disparos_de_Amadeus db 2						; Inicialmente disponemos de 2 disparos.
 387  8C1D 00           Numero_de_disparos_de_entidades db 0
 388  8C1E
 389  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 390  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 391  8C1F
 392  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 393  8C21
 394  8C21 00 00        Techo_Scanlines_album defw 0
 395  8C23 00 00        Techo_Scanlines_album_2 defw 0
 396  8C25 00           Switch db 0
 397  8C26 00 00        Techo defw 0
 398  8C28 00 00        Scanlines_album_SP defw 0
 399  8C2A 00 89        India_SP defw Tabla_de_pintado
 400  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 401  8C2E
 402  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 403  8C2F              ;
 404  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 405  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 406  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 407  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 408  8C2F              ;																Habilita el borrado/pintado de sprites.
 409  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 410  8C2F              ;																_ a la baja.
 411  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 412  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 413  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 414  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 415  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 416  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 417  8C2F
 418  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 419  8C30              ;
 420  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 421  8C30              ;
 422  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 423  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 424  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 425  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 426  8C30              ;
 427  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 428  8C30              ;															_ masticados ya generados.
 429  8C30              ;
 430  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 431  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 432  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 433  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 434  8C30
 435  8C30 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 436  8C31              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 437  8C31              ; Gestión de Disparos.
 438  8C31
 439  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 440  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 441  8C35
 442  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 443  8C36
 444  8C36              ;
 445  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 446  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 447  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 448  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 449  8C36
 450  8C36
 451  8C36
 452  8C36
 453  8C36
 454  8C36
 455  8C36
 456  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 459  8C38
 460  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 461  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 466  8C40
 467  8C40              ;---------------------------------------------------------------------------------------------------------------
 468  8C40
 469  8C40              ; Relojes y temporizaciones.
 470  8C40
 471  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 472  8C41 05           Clock_explosion_Amadeus db 5
 473  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 474  8C43
 475  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 476  8C45
 477  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 478  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 479  8C48              ;														; Repite la oleada de entidades.
 480  8C48
 481  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 482  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 483  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 484  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 485  8C48
 486  8C48              ;---------------------------------------------------------------------------------------------------------------
 487  8C48
 488  8C48              ; Gestión de NIVELES.
 489  8C48
 490  8C48 00           Nivel db 0												; Nivel actual del juego.
 491  8C49 00 00        Puntero_indice_NIVELES defw 0
 492  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C4D              ; 														; _ que definen el NIVEL.
 494  8C4D
 495  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 496  8C4D
 497  8C4D              ; Temporizaciones Shield.
 498  8C4D
 499  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C55 00           Shield_3 db 0
 504  8C56
 505  8C56 06           Lives db 6
 506  8C57
 507  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C57              ;
 509  8C57              ;	5/1/24
 510  8C57
 511  8C57              START
 512  8C57
 513  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C60 F3           	DI
 518  8C61
 519  8C61              ; Limpiamos pantalla.
 520  8C61
 521  8C61 3E 07        	ld a,%00000111
 522  8C63              ;	call Cls
 523  8C63 CD CE 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C66
 525  8C66              ; INICIALIZACIÓN.
 526  8C66
 527  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C68 CD 1B 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C6B CD 62 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C6E
 531  8C6E 6F           	ld l,a
 532  8C6F 26 00        	ld h,0
 533  8C71 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C74
 535  8C74              ;	Inicializa 1er Nivel.
 536  8C74
 537  8C74 21 97 8B     	ld hl,Indice_de_niveles
 538  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C7A CD 4B 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C7D
 544  8C7D              ;	Inicia los álbumes de líneas.
 545  8C7D
 546  8C7D CD 17 90     	call Inicia_albumes_de_lineas
 547  8C80              ;
 548  8C80 CD 27 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C83 CD 34 90     	call Inicia_albumes_de_disparos
 550  8C86
 551  8C86
 552  8C86 CD 90 92     4 call Inicia_Entidades
 553  8C89 CD F3 92     	call Inicia_Amadeus
 554  8C8C
 555  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 556  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 557  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 558  8C8C
 559  8C8C 11 70 89     	ld de,Amadeus_BOX
 560  8C8F CD 46 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 561  8C92 CD 36 93     	call Limpiamos_bandeja_DRAW
 562  8C95
 563  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 564  8C95
 565  8C95 06 3C        	ld b,60
 566  8C97 CD 18 9D     2 call Amadeus_a_izquierda
 567  8C9A 10 FB        	djnz 2B
 568  8C9C
 569  8C9C CD F5 8F     	call Genera_datos_de_impresion_Amadeus
 570  8C9F
 571  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 572  8C9F
 573  8C9F CD 47 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 574  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 575  8CA2
 576  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 577  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 578  8CA2
 579  8CA2              ;	ld a,(Ctrl_1)
 580  8CA2              ;	bit 3,a
 581  8CA2              ;	jr nz,5F											 ; Loop
 582  8CA2
 583  8CA2              ;	ld de,Amadeus_db
 584  8CA2              ;	call Store_Amadeus
 585  8CA2
 586  8CA2              ; 	INICIA DISPAROS !!!!!
 587  8CA2
 588  8CA2 CD 5D 90     	call Inicia_Puntero_Disparo_Entidades
 589  8CA5 CD 64 90     	call Inicia_Puntero_Disparo_Amadeus
 590  8CA8
 591  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA8
 593  8CA8              ;5 call Inicia_punteros_de_cajas
 594  8CA8              ;	call Restore_entidad
 595  8CA8
 596  8CA8              ;	ld a,(Ctrl_1)
 597  8CA8              ;	bit 3,a
 598  8CA8              ;	jr z,6F
 599  8CA8
 600  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA8
 602  8CA8              ;	ld hl,Ctrl_1
 603  8CA8              ;	res 3,(hl)
 604  8CA8              ;	jr Main
 605  8CA8
 606  8CA8              ; Damos por concluida la construcción del FRAME.
 607  8CA8              ;
 608  8CA8
 609  8CA8 CD D9 90     	call Inicia_Shield
 610  8CAB
 611  8CAB
 612  8CAB 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 613  8CAE 22 21 8C     	ld (Techo_Scanlines_album),hl
 614  8CB1
 615  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 616  8CB4 22 28 8C     	ld (Scanlines_album_SP),hl
 617  8CB7
 618  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 619  8CBA 22 2A 8C     	ld (India_SP),hl
 620  8CBD
 621  8CBD 21 2E 8C     	ld hl,Ctrl_3
 622  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CC2 CB D6        	set 2,(hl)
 624  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC6
 626  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC7
 628  8CC7 76           	halt
 629  8CC8
 630  8CC8              ; ------------------------------------
 631  8CC8
 632  8CC8              Main
 633  8CC8              ;
 634  8CC8              ; 22/08/24
 635  8CC8
 636  8CC8              ; Gestión de disparos.
 637  8CC8
 638  8CC8 CD FD 9E     	call Limpia_album_de_borrado_disparos
 639  8CCB CD 44 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CCE CD 40 9F     	call Motor_Disparos
 641  8CD1
 642  8CD1              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CD1              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CD1              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CD1
 646  8CD1 CD 50 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CD4
 648  8CD4 2A 45 8C     16 ld hl,(Clock_next_entity)
 649  8CD7 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CDB A7           	and a
 651  8CDC ED 42        	sbc hl,bc
 652  8CDE 20 16        	jr nz,13F
 653  8CE0
 654  8CE0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CE0              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CE0
 657  8CE0 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 658  8CE3 47           	ld b,a
 659  8CE4 3A 03 8C     	ld a,(Entidades_en_curso)
 660  8CE7 B8           	cp b
 661  8CE8 28 0C        	jr z,13F
 662  8CEA 30 0A        	jr nc,13F
 663  8CEC
 664  8CEC 3C           	inc a
 665  8CED 32 03 8C     	ld (Entidades_en_curso),a
 666  8CF0
 667  8CF0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CF0
 669  8CF0 CD 62 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CF3 CD 7E 8E     	call Define_Clock_next_entity
 671  8CF6
 672  8CF6              ; -------------------------------------------------------------------------------------------------------------
 673  8CF6
 674  8CF6              ; Habilita disparos.
 675  8CF6
 676  8CF6              13
 677  8CF6
 678  8CF6              ;	ld hl,Disparo_Amadeus
 679  8CF6              ;	ld de,CLOCK_repone_disparo_Amadeus
 680  8CF6              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 681  8CF6
 682  8CF6              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 683  8CF6              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 684  8CF6              ;	call Habilita_disparos
 685  8CF6
 686  8CF6              ; COLISIONES.
 687  8CF6
 688  8CF6              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 689  8CF6
 690  8CF6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 691  8CF6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 692  8CF6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 693  8CF6
 694  8CF6              ;	xor a
 695  8CF6              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 696  8CF6
 697  8CF6              ;	call Inicia_punteros_de_cajas
 698  8CF6              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 699  8CF6              ; 														; _ en DRAW.
 700  8CF6
 701  8CF6              ;	ld a,(Filas)
 702  8CF6              ;	and a
 703  8CF6              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 704  8CF6              ;	call Incrementa_punteros_de_cajas
 705  8CF6              ;	jr 12B
 706  8CF6
 707  8CF6              ; ---------------------------------------------------------------------------------------
 708  8CF6
 709  8CF6              ;10 ld a,(Numero_parcial_de_entidades)
 710  8CF6              ;    ld b,a
 711  8CF6              ;	and a
 712  8CF6              ;	jr nz,11F
 713  8CF6
 714  8CF6              ;	ld hl,Ctrl_1;
 715  8CF6              ;	bit 4,(hl)
 716  8CF6              ;	jp nz,16F
 717  8CF6
 718  8CF6              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 719  8CF6
 720  8CF6              ;	ld hl,Ctrl_1
 721  8CF6              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 722  8CF6
 723  8CF6              ;	ld a,(Contador_de_frames)
 724  8CF6              ;	inc a
 725  8CF6              ;	ld (Activa_recarga_cajas),a
 726  8CF6
 727  8CF6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 728  8CF6
 729  8CF6 3A 03 8C     11 ld a,(Entidades_en_curso)
 730  8CF9 A7           	and a
 731  8CFA CA 6C 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 732  8CFD 47           	ld b,a												; No hay entidades que gestionar.
 733  8CFE
 734  8CFE              ; ( Código que ejecutamos con cada entidad: ).
 735  8CFE
 736  8CFE              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 737  8CFE              ;
 738  8CFE              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 739  8CFE
 740  8CFE 21 00 89     	ld hl,Tabla_de_pintado
 741  8D01 22 2A 8C     	ld (India_SP),hl
 742  8D04
 743  8D04 21 2E 8C     	ld hl,Ctrl_3
 744  8D07 CB D6        	set 2,(hl)
 745  8D09 CD 19 8E     	call Change
 746  8D0C
 747  8D0C C5           15 push bc 												; Nº de entidades en curso.
 748  8D0D
 749  8D0D CD A6 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 750  8D10 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 751  8D14
 752  8D14              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 753  8D14
 754  8D14              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 755  8D14              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 756  8D14
 757  8D14 3A 35 8C     	ld a,(Impacto2)
 758  8D17 CB 5F        	bit 3,a
 759  8D19 C4 C5 9E     	call nz,Compara_con_coordenadas_de_disparo
 760  8D1C
 761  8D1C              ; En 2º lugar, ... existe Colisión de esta entidad con Amadeus ???
 762  8D1C
 763  8D1C 3A BF 8B     	ld a,(Impacto)
 764  8D1F CB 4F        	bit 1,a
 765  8D21 F3           	di
 766  8D22 20 FE        	jr nz,$
 767  8D24 FB           	ei
 768  8D25
 769  8D25 3A BF 8B     	ld a,(Impacto)
 770  8D28 A7           	and a
 771  8D29 28 0C        	jr z,8F
 772  8D2B
 773  8D2B              ; 5/7/24
 774  8D2B              ; Nota importante:
 775  8D2B              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 776  8D2B              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 777  8D2B              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 778  8D2B
 779  8D2B 3A 74 89     	ld a,(Impacto_Amadeus)
 780  8D2E A7           	and a
 781  8D2F C4 B6 91     	call nz,Genera_explosion
 782  8D32 20 1B        	jr nz,Gestiona_siguiente_entidad
 783  8D34
 784  8D34              ; Falsa colisión !!!
 785  8D34
 786  8D34 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 787  8D37
 788  8D37              ; -------------------------------------------
 789  8D37
 790  8D37 CD C2 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 791  8D3A CD F9 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 792  8D3D CD AE 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 793  8D40 CD B6 94     	call Genera_datos_de_impresion
 794  8D43 CD 59 93     	call Decrementa_Contador_de_mov_masticados
 795  8D46
 796  8D46              ; -------------------------------------------
 797  8D46
 798  8D46              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 799  8D46
 800  8D46 2A C0 8B     	ld hl,(Puntero_de_impresion)
 801  8D49 CD 8A 94     	call Genera_coordenadas
 802  8D4C
 803  8D4C CD CE A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 804  8D4F
 805  8D4F              Gestiona_siguiente_entidad
 806  8D4F
 807  8D4F CD 2B 93      	call Store_Restore_cajas
 808  8D52 C1           	pop bc
 809  8D53 10 B7        	djnz 15B
 810  8D55
 811  8D55              ; Hemos gestionado todas las entidades.
 812  8D55
 813  8D55              ;	Restaura pepinasso de Amadeus a BIXO !!!!!!!
 814  8D55
 815  8D55              ;	ld hl,Impacto2
 816  8D55              ;	res 3,(hl)																; Deshabilitamos el FLAG de "Impacto" en disparos de Amadeus.
 817  8D55              ;																			; Vuelta a empezar.
 818  8D55              ;	ld hl,Coordenadas_disparo_certero
 819  8D55              ;	xor a
 820  8D55              ;	ld (hl),a
 821  8D55              ;	inc hl
 822  8D55              ;	ld (hl),a
 823  8D55
 824  8D55              ; ----- ----- -----
 825  8D55
 826  8D55 CD D2 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 827  8D58 CD E9 8E     	call Ordena_tabla_de_impresion
 828  8D5B CD 47 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 829  8D5E
 830  8D5E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 831  8D5E              ; Hemos gestionado todas las unidades.
 832  8D5E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 833  8D5E
 834  8D5E              ;	ld hl,Ctrl_1
 835  8D5E              ;	res 2,(hl)
 836  8D5E
 837  8D5E CD 93 8E     	call Borra_diferencia
 838  8D61
 839  8D61 3A 2E 8C     	ld a,(Ctrl_3)
 840  8D64 CB 5F        	bit 3,a
 841  8D66 20 04        	jr nz,Gestion_de_Amadeus
 842  8D68
 843  8D68 EB           	ex de,hl
 844  8D69 71           	ld (hl),c
 845  8D6A 2C           	inc l
 846  8D6B 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 847  8D6C
 848  8D6C
 849  8D6C              ;! GESTIONA AMADEUS !!!!!!!!!!
 850  8D6C
 851  8D6C              Gestion_de_Amadeus
 852  8D6C
 853  8D6C 21 2E 8C     	ld hl,Ctrl_3
 854  8D6F CB 76        	bit 6,(hl)
 855  8D71 28 13        	jr z,Amadeus_vivo
 856  8D73
 857  8D73              ; Amadeus ha sido destruido.
 858  8D73              ; Decrementa (Temp_new_live).
 859  8D73
 860  8D73 21 42 8C     	ld hl,Temp_new_live
 861  8D76 35           	dec (hl)
 862  8D77 20 26        	jr nz,End_frame
 863  8D79
 864  8D79              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 865  8D79
 866  8D79 21 56 8C     	ld hl,Lives
 867  8D7C 35           	dec (hl)
 868  8D7D
 869  8D7D              ;! Fin del juego
 870  8D7D
 871  8D7D F3           	di
 872  8D7E 28 FE        	jr z,$
 873  8D80 FB           	ei
 874  8D81
 875  8D81              ; Nueva nave.
 876  8D81
 877  8D81 CD BF 8D     	call Reinicia_Amadeus
 878  8D84 18 19        	jr End_frame
 879  8D86
 880  8D86              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 881  8D86
 882  8D86              Amadeus_vivo
 883  8D86
 884  8D86 3A 74 89     	ld a,(Impacto_Amadeus)
 885  8D89 A7           	and a
 886  8D8A C4 E6 91     	call nz, Genera_explosion_Amadeus
 887  8D8D 20 10        	jr nz, End_frame
 888  8D8F
 889  8D8F CD 93 91     	call Teclado
 890  8D92
 891  8D92 21 2E 8C     	ld hl,Ctrl_3
 892  8D95 CB 6E        	bit 5,(hl)
 893  8D97 28 06        	jr z,End_frame
 894  8D99
 895  8D99              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 896  8D99
 897  8D99 CD 34 8E     	call Change_Amadeus
 898  8D9C CD F5 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 899  8D9F
 900  8D9F              End_frame
 901  8D9F
 902  8D9F              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 903  8D9F              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 904  8D9F
 905  8D9F CD 0C A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 906  8DA2 CD 19 9F     	call Calcula_bytes_pintado_disparos
 907  8DA5 CD 26 9F     	call Limpia_album_de_pintado_disparos
 908  8DA8
 909  8DA8              ; ------------ ------------- --------------
 910  8DA8
 911  8DA8 2A 0E 8C     	ld hl,(Album_de_borrado)
 912  8DAB 22 28 8C     	ld (Scanlines_album_SP),hl
 913  8DAE
 914  8DAE 21 2E 8C     	ld hl,Ctrl_3
 915  8DB1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 916  8DB3 CB 9E        	res 3,(hl)
 917  8DB5 CB A6        	res 4,(hl)
 918  8DB7
 919  8DB7 AF           	xor a
 920  8DB8 D3 FE        	out ($fe),a
 921  8DBA
 922  8DBA 76           	halt
 923  8DBB
 924  8DBB              ; ----------------------------------------
 925  8DBB
 926  8DBB              ;	ld a,(Ctrl_1) 										; Existe Loop?
 927  8DBB              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 928  8DBB CA C8 8C     	jp z,Main
 929  8DBE
 930  8DBE              ; RECARGA DE NUEVA OLEADA.
 931  8DBE
 932  8DBE              ;	ld a,(Contador_de_frames)
 933  8DBE              ;	ld b,a
 934  8DBE              ;	ld a,(Activa_recarga_cajas)
 935  8DBE              ;	cp b
 936  8DBE              ;	jr z,20F
 937  8DBE
 938  8DBE              ;	ld hl,Ctrl_1
 939  8DBE              ;	set 4,(hl)
 940  8DBE              ;	jp Main
 941  8DBE
 942  8DBE              ;20 ld hl,Ctrl_1
 943  8DBE              ;	res 4,(hl)
 944  8DBE
 945  8DBE              ;	ld a,(Contador_de_frames)
 946  8DBE
 947  8DBE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 948  8DBE              ;! _ IMPREDECIBLE !!!!
 949  8DBE
 950  8DBE              ;	add 10
 951  8DBE              ;	ld (Clock_next_entity),a
 952  8DBE
 953  8DBE              ;	jp 4B
 954  8DBE
 955  8DBE C9           	ret
 956  8DBF
 957  8DBF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 958  8DBF              ;
 959  8DBF              ;	16/11/23
 960  8DBF
 961  8DBF              ;;Gestiona_Amadeus
 962  8DBF
 963  8DBF              ;! Activa/desactiva impacto con Amadeus.
 964  8DBF
 965  8DBF              ;	ld a,(Impacto)
 966  8DBF              ;	and a
 967  8DBF              ;	jr nz,2F
 968  8DBF
 969  8DBF              ;;	call Mov_Amadeus
 970  8DBF
 971  8DBF              ;;2 ld a,(Ctrl_0)
 972  8DBF              ;;	bit 4,a
 973  8DBF              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 974  8DBF
 975  8DBF              ;;	call Guarda_foto_entidad_a_pintar
 976  8DBF              ;;	call Guarda_datos_de_borrado_Amadeus
 977  8DBF
 978  8DBF              ;;1 ld hl,Ctrl_0
 979  8DBF              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 980  8DBF
 981  8DBF              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 982  8DBF
 983  8DBF              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 984  8DBF
 985  8DBF              ;	call Calcula_numero_de_disparotes
 986  8DBF
 987  8DBF              ;;	ret
 988  8DBF
 989  8DBF              ; -----------------------------
 990  8DBF              ;
 991  8DBF              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 992  8DBF              ;
 993  8DBF              ;	INPUTS: B a de estar a "0".
 994  8DBF
 995  8DBF              ;Prepara_Borra_sprites
 996  8DBF
 997  8DBF              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 998  8DBF              ;	ld a,l
 999  8DBF              ;	ret z
1000  8DBF
1001  8DBF              ;	srl a
1002  8DBF
1003  8DBF              ;2 sub 16
1004  8DBF              ;	jr z,1F
1005  8DBF              ;	inc b
1006  8DBF              ;	jr 2B
1007  8DBF
1008  8DBF              ;1 inc b
1009  8DBF
1010  8DBF              ;	exx
1011  8DBF              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1012  8DBF              ;	exx
1013  8DBF
1014  8DBF              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1015  8DBF              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1016  8DBF
1017  8DBF              ;	ret
1018  8DBF
1019  8DBF              ; --------------------------------------------------------------------------------------------------------------
1020  8DBF              ;
1021  8DBF              ;	15/12/23
1022  8DBF
1023  8DBF              ;Mov_obj
1024  8DBF
1025  8DBF              ;	ld a,(Ctrl_2)
1026  8DBF              ;	bit 1,a
1027  8DBF              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1028  8DBF
1029  8DBF              ; Explosión:
1030  8DBF
1031  8DBF              ;	ld a,(Frames_explosion)
1032  8DBF              ;	and a
1033  8DBF              ;	jr nz,4F
1034  8DBF
1035  8DBF              ;!  Una alimaña menos!!!!!!!!!1
1036  8DBF
1037  8DBF              ; Se trataba de una Entidad_guía ???
1038  8DBF
1039  8DBF              ;	ld a,(Ctrl_2)
1040  8DBF              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1041  8DBF              ;	jr z,5F
1042  8DBF
1043  8DBF              ;	ld hl,Ctrl_3
1044  8DBF              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1045  8DBF
1046  8DBF              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1047  8DBF              ;!! _generado puede ser distinto, (aletoriedad).
1048  8DBF
1049  8DBF              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1050  8DBF              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1051  8DBF              ;	dec (hl)
1052  8DBF              ;	ld hl,Entidades_en_curso
1053  8DBF              ;	dec (hl)
1054  8DBF              ;	ld hl,Numero_de_entidades
1055  8DBF              ;	dec (hl)
1056  8DBF              ;	jr 3F
1057  8DBF
1058  8DBF              ; -----
1059  8DBF
1060  8DBF              ;	`Movemos´ la explosión.
1061  8DBF
1062  8DBF              ;4 ld hl,(Puntero_DESPLZ_der)
1063  8DBF              ;	inc hl
1064  8DBF              ;	inc hl
1065  8DBF              ;	call Extrae_address
1066  8DBF              ;;	ld (Puntero_objeto),hl
1067  8DBF
1068  8DBF              ;;	ld hl,Frames_explosion
1069  8DBF              ;;	dec (hl)
1070  8DBF
1071  8DBF              ;;	ld hl,Ctrl_0
1072  8DBF              ;;	set 4,(hl);;
1073  8DBF
1074  8DBF              ;;	jr 3F
1075  8DBF
1076  8DBF              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1077  8DBF
1078  8DBF              ;2 xor a
1079  8DBF              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1080  8DBF
1081  8DBF              ; Movemos Entidades malignas.
1082  8DBF              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1083  8DBF
1084  8DBF              ;	ld a,(Ctrl_2)
1085  8DBF              ;	bit 5,a
1086  8DBF              ;	jr nz,8F
1087  8DBF
1088  8DBF              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1089  8DBF              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1090  8DBF              ;	jr 7F
1091  8DBF
1092  8DBF              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1093  8DBF
1094  8DBF              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1095  8DBF              ;	bit 4,a
1096  8DBF              ;	ret z
1097  8DBF
1098  8DBF              ; Ha habido desplazamiento de la entidad maligna.
1099  8DBF              ; Ha llegado a zona de AMADEUS ???
1100  8DBF
1101  8DBF              ;7 ld a,(Coordenada_y)
1102  8DBF              ;	cp $14
1103  8DBF              ;	jr c,1F
1104  8DBF
1105  8DBF              ; ---------
1106  8DBF
1107  8DBF              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1108  8DBF              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1109  8DBF
1110  8DBF              ;	di
1111  8DBF              ;	call Genera_coordenadas_X
1112  8DBF              ;	call Compara_coordenadas_X
1113  8DBF              ;	ei
1114  8DBF
1115  8DBF              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1116  8DBF
1117  8DBF              ; ---------
1118  8DBF
1119  8DBF              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1120  8DBF              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1121  8DBF              ;	call Limpia_Variables_de_borrado
1122  8DBF
1123  8DBF              ;3 ret
1124  8DBF
1125  8DBF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1126  8DBF              ;
1127  8DBF              ;	24/07/24
1128  8DBF
1129  8DBF              Reinicia_Amadeus
1130  8DBF
1131  8DBF              ;	Reinicia posición y estado.
1132  8DBF
1133  8DBF 21 CF 50     	ld hl,$50cf
1134  8DC2 22 75 89     	ld (p.imp.amadeus),hl
1135  8DC5 21 F0 E0     	ld hl,$e0f0
1136  8DC8 22 77 89     	ld (Pamm_Amadeus),hl
1137  8DCB 21 3D 00     	ld hl,$003d
1138  8DCE 22 79 89     	ld (Comm_Amadeus),hl
1139  8DD1
1140  8DD1              ;	limpiamos el álbum de borrado.
1141  8DD1
1142  8DD1 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1143  8DD4
1144  8DD4 AF           	xor a
1145  8DD5 77           	ld (hl),a
1146  8DD6
1147  8DD6 E5           	push hl
1148  8DD7 D1           	pop de
1149  8DD8 13           	inc de
1150  8DD9
1151  8DD9 01 23 00     	ld bc,35
1152  8DDC ED B0        	ldir
1153  8DDE
1154  8DDE CD F5 8F     	call Genera_datos_de_impresion_Amadeus
1155  8DE1
1156  8DE1              ;	Reinicia temporizaciones.
1157  8DE1
1158  8DE1 CD D9 90     	call Inicia_Shield
1159  8DE4
1160  8DE4 3E 5A        	ld a,90
1161  8DE6 32 53 8C     	ld (Shield),a
1162  8DE9
1163  8DE9 3E 64        	ld a,100
1164  8DEB 32 42 8C     	ld (Temp_new_live),a
1165  8DEE
1166  8DEE              ; 	Restauramos el FLAG: Amadeus vivo.
1167  8DEE
1168  8DEE 21 2E 8C     	ld hl,Ctrl_3
1169  8DF1 CB B6        	res 6,(hl)
1170  8DF3
1171  8DF3              ;	Fuerza la impresión de la nave en el siguiente frame.
1172  8DF3
1173  8DF3 21 2E 8C      	ld hl,Ctrl_3
1174  8DF6 CB EE        	set 5,(hl)
1175  8DF8
1176  8DF8 C9           	ret
1177  8DF9
1178  8DF9              ; --------------------------------------------------------------------------------------------------------------
1179  8DF9              ;
1180  8DF9              ;	12/05/24
1181  8DF9
1182  8DF9 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1183  8DFC CB 27        	sla a
1184  8DFE 32 C6 8B     	ld (Velocidad),a
1185  8E01 E6 10        	and $10
1186  8E03 C8           	ret z
1187  8E04
1188  8E04              ; Restaura (Velocidad) a razón del nº de vueltas.
1189  8E04
1190  8E04 3A BE 8B     	ld a,(Contador_de_vueltas)
1191  8E07 CB 2F        	sra a
1192  8E09 CB 2F        	sra a
1193  8E0B 32 C6 8B     	ld (Velocidad),a
1194  8E0E
1195  8E0E 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1196  8E11 23           	inc hl
1197  8E12 23           	inc hl
1198  8E13 23           	inc hl
1199  8E14 23           	inc hl
1200  8E15 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1201  8E18
1202  8E18 C9           	ret
1203  8E19
1204  8E19              ; --------------------------------------------------------------------------------------------------------------
1205  8E19              ;
1206  8E19              ;	25/08/24
1207  8E19
1208  8E19              Change
1209  8E19
1210  8E19 3A 25 8C     	ld a,(Switch)
1211  8E1C EE 01        	xor 1
1212  8E1E 32 25 8C     	ld (Switch),a
1213  8E21 2A 0C 8C     	ld hl,(Album_de_pintado)
1214  8E24 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1215  8E28 EB           	ex de,hl
1216  8E29 22 0C 8C     	ld (Album_de_pintado),hl
1217  8E2C 22 28 8C     	ld (Scanlines_album_SP),hl
1218  8E2F ED 53 0E 8C  	ld (Album_de_borrado),de
1219  8E33 C9           	ret
1220  8E34
1221  8E34              Change_Amadeus
1222  8E34
1223  8E34 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1224  8E37 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1225  8E3B EB           	ex de,hl
1226  8E3C 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1227  8E3F ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1228  8E43 C9           	ret
1229  8E44
1230  8E44              Change_Disparos
1231  8E44
1232  8E44              ;	Exclusiones:
1233  8E44
1234  8E44 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1235  8E47 A7           	and a
1236  8E48 C8           	ret z
1237  8E49
1238  8E49              ; -----
1239  8E49
1240  8E49 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1241  8E4C ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1242  8E50 EB           	ex de,hl
1243  8E51 22 14 8C     	ld (Album_de_pintado_disparos),hl
1244  8E54 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1245  8E58 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1246  8E5B
1247  8E5B 3A 1A 8C     	ld a,(Num_de_bytes_album_de_disparos)
1248  8E5E 32 1B 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1249  8E61
1250  8E61 C9           	ret
1251  8E62
1252  8E62              ; ------------------------------------
1253  8E62              ;
1254  8E62              ; 1/05/24
1255  8E62
1256  8E62              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1257  8E62              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1258  8E62
1259  8E62              ;	DESTRUYE: HL,DE,A
1260  8E62              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1261  8E62
1262  8E62              ;	Variables implicadas: (RND_SP).
1263  8E62
1264  8E62              Extrae_numero_aleatorio_y_avanza
1265  8E62
1266  8E62 21 00 89     	ld hl,Tabla_de_pintado
1267  8E65 EB           	ex de,hl
1268  8E66 2A 43 8C     	ld hl,(RND_SP)
1269  8E69 EB           	ex de,hl
1270  8E6A A7           	and a
1271  8E6B ED 52        	sbc hl,de
1272  8E6D
1273  8E6D 2A 43 8C     	ld hl,(RND_SP)
1274  8E70 20 06        	jr nz,1F
1275  8E72
1276  8E72              ; Sitúa HL al principio de la tabla de nº aleatorios.
1277  8E72
1278  8E72 21 F6 88     	ld hl,Numeros_aleatorios
1279  8E75 22 43 8C     	ld (RND_SP),HL
1280  8E78
1281  8E78              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1282  8E78
1283  8E78 7E           1 ld a,(hl)
1284  8E79 23           	inc hl
1285  8E7A 22 43 8C     	ld (RND_SP),hl
1286  8E7D C9           	ret
1287  8E7E
1288  8E7E              ; ------------------------------------
1289  8E7E              ;
1290  8E7E              ; 1/05/24
1291  8E7E
1292  8E7E              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1293  8E7E              ; (1 a 4 segundos).
1294  8E7E              ; Actualizamos (Clock_next_entity) con A.
1295  8E7E
1296  8E7E              ;	DESTRUYE: A y B.
1297  8E7E              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1298  8E7E              ;			 Actualiza (Clock_next_entity) con A.
1299  8E7E
1300  8E7E              ;	Variables implicadas: (Clock_next_entity).
1301  8E7E
1302  8E7E              ; Notas:
1303  8E7E
1304  8E7E              ; 	$32 1 seg.
1305  8E7E              ; 	$64 2 seg.
1306  8E7E              ; 	$96 3 seg.
1307  8E7E              ; 	$c8 4 seg.
1308  8E7E              ; 	$fa 5 seg.
1309  8E7E
1310  8E7E              ; $ffff 1310,7 seg, 22 minutos.
1311  8E7E
1312  8E7E              ;	$0100  5 seg. aproximadamente.
1313  8E7E              ;	$0200 10 seg. aproximadamente.
1314  8E7E              ;	$0300 15 seg. aproximadamente.
1315  8E7E              ;	$0400 20 seg. aproximadamente.
1316  8E7E              ;	$0500 25 seg. aproximadamente.
1317  8E7E              ;	$0600 30 seg. aproximadamente.
1318  8E7E
1319  8E7E              Define_Clock_next_entity
1320  8E7E
1321  8E7E FE 34        	cp $34
1322  8E80 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1323  8E82
1324  8E82              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1325  8E82
1326  8E82 4F           3 ld c,a
1327  8E83 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1328  8E85 2A 78 5C     	ld hl,(FRAMES)
1329  8E88 A7           	and a
1330  8E89 ED 4A        	adc hl,bc
1331  8E8B 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1332  8E8E C9           	ret
1333  8E8F
1334  8E8F 3E 34        1 ld a,$34
1335  8E91 18 EF        	jr 3B
1336  8E93
1337  8E93              ; ------------------------------------
1338  8E93              ;
1339  8E93              ; 18/03/24
1340  8E93
1341  8E93              Borra_diferencia
1342  8E93
1343  8E93 ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1344  8E97
1345  8E97 3A 25 8C     	ld a,(Switch)
1346  8E9A A7           	and a
1347  8E9B 28 08        	jr z,2F
1348  8E9D
1349  8E9D 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1350  8EA0 11 23 8C     	ld de,Techo_Scanlines_album_2
1351  8EA3 18 06        	jr 3F
1352  8EA5
1353  8EA5 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1354  8EA8 11 21 8C     	ld de,Techo_Scanlines_album
1355  8EAB
1356  8EAB              ; Diferencia.
1357  8EAB
1358  8EAB ED 42        3 sbc hl,bc
1359  8EAD
1360  8EAD C8           	ret z
1361  8EAE D8           	ret c
1362  8EAF
1363  8EAF              ; Nuevo techo, (más bajo que el anterior).
1364  8EAF              ; Fijamos nuevo techo y borramos bytes sobrantes.
1365  8EAF
1366  8EAF EB           	ex de,hl
1367  8EB0
1368  8EB0 71           	ld (hl),c
1369  8EB1 2C           	inc l
1370  8EB2 70           	ld (hl),b
1371  8EB3
1372  8EB3 AF           	xor a
1373  8EB4 43           	ld b,e
1374  8EB5
1375  8EB5 2A 28 8C     	ld hl,(Scanlines_album_SP)
1376  8EB8
1377  8EB8 77           1 ld (hl),a
1378  8EB9 23           	inc hl
1379  8EBA 10 FC        	djnz 1B
1380  8EBC
1381  8EBC              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1382  8EBC
1383  8EBC 21 2E 8C     	ld hl,Ctrl_3
1384  8EBF CB DE        	set 3,(hl)
1385  8EC1
1386  8EC1 C9           	ret
1387  8EC2
1388  8EC2              ; --------------------------------------------------------------------------------------------------------------
1389  8EC2              ;
1390  8EC2              ;	26/3/24
1391  8EC2
1392  8EC2              Recauda_informacion_de_entidad_en_curso
1393  8EC2
1394  8EC2              ; Almacena la Coordenada Y de la entidad en curso.
1395  8EC2
1396  8EC2              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1397  8EC2
1398  8EC2 3A BD 8B     	ld a,(Coordenada_y)
1399  8EC5 2A 2A 8C     	ld hl,(India_SP)
1400  8EC8 77           	ld (hl),a
1401  8EC9 2C           	inc l
1402  8ECA
1403  8ECA              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1404  8ECA
1405  8ECA              ;	ld de,(Scanlines_album_SP)
1406  8ECA
1407  8ECA 73           	ld (hl),e
1408  8ECB 2C           	inc l
1409  8ECC 72           	ld (hl),d
1410  8ECD 2C           	inc l
1411  8ECE
1412  8ECE 22 2A 8C     	ld (India_SP),hl
1413  8ED1
1414  8ED1 C9           	ret
1415  8ED2
1416  8ED2              ; --------------------------------------------------------------------------------------------------------------
1417  8ED2              ;
1418  8ED2              ;	27/03/24
1419  8ED2              ;
1420  8ED2
1421  8ED2              Inicializa_India_y_limpia_Tabla_de_impresion
1422  8ED2
1423  8ED2 2A 2A 8C     	ld hl,(India_SP)
1424  8ED5 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1425  8ED8
1426  8ED8 79           	ld a,c
1427  8ED9 95           	sub l
1428  8EDA 28 06        	jr z,2F
1429  8EDC 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1430  8EDD              ;														; _ y pasamos a inicializar (India_SP).
1431  8EDD AF           	xor a
1432  8EDE
1433  8EDE 77           1 ld (hl),a
1434  8EDF 2C           	inc l
1435  8EE0 10 FC        	djnz 1B												; Limpia Tabla.
1436  8EE2
1437  8EE2 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1438  8EE5 22 2A 8C     	ld (India_SP),hl
1439  8EE8
1440  8EE8 C9           	ret
1441  8EE9
1442  8EE9              ; --------------------------------------------------------------------------------------------------------------
1443  8EE9              ;
1444  8EE9              ;	31/3/24
1445  8EE9
1446  8EE9              Ordena_tabla_de_impresion
1447  8EE9
1448  8EE9              ; 5794 T/states.
1449  8EE9              ; 6278 T/states.
1450  8EE9              ; 5310 T/states.
1451  8EE9
1452  8EE9              ; Inicializamos punteros (India_SP) e (India_2_SP).
1453  8EE9              ; Inicializamos contador de comparaciones, [C].
1454  8EE9              ; Cargamos los registros A y B para efectuar comparación.
1455  8EE9
1456  8EE9 FD 2E 00     	ld iyl,0
1457  8EEC
1458  8EEC 3A 03 8C     	ld a,(Entidades_en_curso)
1459  8EEF FE 04        	cp 4 	;	4
1460  8EF1 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1461  8EF2
1462  8EF2 3D           	dec a
1463  8EF3 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1464  8EF4 51           	ld d,c 										; Copia de respaldo.
1465  8EF5
1466  8EF5 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1467  8EF6
1468  8EF6 21 03 89     	ld hl,Tabla_de_pintado+3
1469  8EF9 46           	ld b,(hl)
1470  8EFA 22 2C 8C     	ld (India_2_SP),hl
1471  8EFD
1472  8EFD B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1473  8EFE DC 26 8F     	call c, Avanza_India_2_SP
1474  8F01 CC 26 8F     	call z, Avanza_India_2_SP
1475  8F04
1476  8F04 FD 2D        	dec iyl
1477  8F06 28 18        	jr z,2F
1478  8F08
1479  8F08
1480  8F08              ; --------------------------------------------------------------------------------------------------------------
1481  8F08              ;
1482  8F08              ;	7/4/24
1483  8F08
1484  8F08              Trueque
1485  8F08
1486  8F08              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1487  8F08              ;  			A contiene en nº de fila de (India_SP).
1488  8F08              ;			HL contiene (India_2_SP).
1489  8F08
1490  8F08 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1491  8F09 E5           	push hl										; Preservo (India_2_SP).
1492  8F0A
1493  8F0A ED 5B 2A 8C  	ld de,(India_SP)
1494  8F0E EB           	ex de,hl
1495  8F0F 70           	ld (hl),b
1496  8F10 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1497  8F11
1498  8F11 CD 52 8F     	call Intercambia_1_byte
1499  8F14 CD 52 8F     	call Intercambia_1_byte
1500  8F17
1501  8F17
1502  8F17              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1503  8F17              ; Recuperamos (India_2_SP) en HL.
1504  8F17
1505  8F17 2A 2A 8C     	ld hl,(India_SP)
1506  8F1A 7E           	ld a,(hl)
1507  8F1B
1508  8F1B E1           	pop hl
1509  8F1C D1           	pop de
1510  8F1D
1511  8F1D              ; --------------------------------------------------------------------------------------------------------------
1512  8F1D
1513  8F1D CD 26 8F     	call Avanza_India_2_SP
1514  8F20
1515  8F20 14           2 inc d
1516  8F21 15           	dec d
1517  8F22 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1518  8F23 18 D8        	jr 1B
1519  8F25
1520  8F25 C9           	ret
1521  8F26
1522  8F26              ; ----- ----- ----- ----- -----
1523  8F26
1524  8F26              Avanza_India_2_SP
1525  8F26
1526  8F26 0D           	dec c
1527  8F27 28 0A        	jr z,Avanza_punteros_indios
1528  8F29
1529  8F29 FD 2C        	inc iyl
1530  8F2B
1531  8F2B 2C           	inc l
1532  8F2C 2C           	inc l
1533  8F2D 2C           	inc l
1534  8F2E
1535  8F2E 46           	ld b,(hl)
1536  8F2F 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1537  8F32
1538  8F32 C9           	ret
1539  8F33
1540  8F33              ; ----- ----- ----- ----- -----
1541  8F33
1542  8F33              Avanza_punteros_indios
1543  8F33
1544  8F33 15           	dec d
1545  8F34 28 15        	jr z,Prepara_salida
1546  8F36
1547  8F36 4A           	ld c,d
1548  8F37
1549  8F37 2A 2A 8C     	ld hl,(India_SP)
1550  8F3A 2C           	inc l
1551  8F3B 2C           	inc l
1552  8F3C 2C           	inc l
1553  8F3D 7E           	ld a,(hl)
1554  8F3E 22 2A 8C     	ld (India_SP),hl
1555  8F41
1556  8F41 2C           	inc l
1557  8F42 2C           	inc l
1558  8F43 2C           	inc l
1559  8F44 46           	ld b,(hl)
1560  8F45 22 2C 8C     	ld (India_2_SP),hl
1561  8F48
1562  8F48 FD 2C        	inc iyl
1563  8F4A
1564  8F4A C9           	ret
1565  8F4B
1566  8F4B              Prepara_salida
1567  8F4B
1568  8F4B 21 00 89     	ld hl,Tabla_de_pintado
1569  8F4E 22 2A 8C     	ld (India_SP),hl
1570  8F51 C9           	ret
1571  8F52
1572  8F52
1573  8F52 2C           Intercambia_1_byte inc l
1574  8F53 1C           	inc e
1575  8F54 46           	ld b,(hl)
1576  8F55 1A           	ld a,(de)
1577  8F56 EB           	ex de,hl
1578  8F57 70           	ld (hl),b
1579  8F58 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1580  8F59 C9           	ret
1581  8F5A
1582  8F5A              ; -----------------------------------------------------------------------------------
1583  8F5A              ;
1584  8F5A              ;	20/01/24
1585  8F5A              ;
1586  8F5A              ;
1587  8F5A
1588  8F5A              Construye_movimientos_masticados_entidad
1589  8F5A
1590  8F5A 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1591  8F5D E5           	push hl
1592  8F5E CD A1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1593  8F61              ;															; _ el (Contador_de_mov_masticados).
1594  8F61 CD 71 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1595  8F64              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1596  8F64 CD 9E 99     	call Recompone_posicion_inicio
1597  8F67
1598  8F67 CD CE 96     1 call Draw
1599  8F6A CD 86 8F     	call Guarda_movimiento_masticado
1600  8F6D
1601  8F6D CD 4B 9D     	call Movimiento
1602  8F70
1603  8F70 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1604  8F73 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1605  8F75 28 F0        	jr z,1B
1606  8F77
1607  8F77              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1608  8F77              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1609  8F77
1610  8F77 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1611  8F78 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1612  8F7B
1613  8F7B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1614  8F7B
1615  8F7B CD AF 9E     	call Situa_en_contador_general_de_mov_masticados
1616  8F7E
1617  8F7E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1618  8F7E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1619  8F7E
1620  8F7E ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1621  8F82
1622  8F82 71           	ld (hl),c
1623  8F83 23           	inc hl
1624  8F84 70           	ld (hl),b
1625  8F85
1626  8F85 C9           	ret
1627  8F86
1628  8F86              ; -----------------------------------------------------------------------------------
1629  8F86              ;
1630  8F86              ;	28/12/23
1631  8F86              ;
1632  8F86              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1633  8F86              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1634  8F86
1635  8F86              Guarda_movimiento_masticado
1636  8F86
1637  8F86 ED 73 08 8C  	ld (Stack),sp
1638  8F8A ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1639  8F8E
1640  8F8E DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1641  8F90 FD E5            push iy 												; Pushea Puntero_objeto.
1642  8F92
1643  8F92 ED 7B 08 8C      ld sp,(Stack)
1644  8F96
1645  8F96 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1646  8F99 23           	inc hl
1647  8F9A 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1648  8F9D
1649  8F9D CD A1 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1650  8FA0              ;															; _ el (Contador_de_mov_masticados).
1651  8FA0 C9               ret
1652  8FA1
1653  8FA1              ; --------------------------------------------------------------------------------------------------------------
1654  8FA1              ;
1655  8FA1              ;	12/1/24
1656  8FA1              ;
1657  8FA1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1658  8FA1
1659  8FA1              Actualiza_Puntero_de_almacen_de_mov_masticados
1660  8FA1
1661  8FA1 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1662  8FA4 01 04 00     	ld bc,4
1663  8FA7 A7           	and a
1664  8FA8 ED 4A        	adc hl,bc
1665  8FAA 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1666  8FAD C9           	ret
1667  8FAE
1668  8FAE              ; --------------------------------------------------------------------------------------------------------------
1669  8FAE              ;
1670  8FAE              ;	24/03/24
1671  8FAE              ;
1672  8FAE              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1673  8FAE              ;
1674  8FAE              ;	IX contiene el puntero de impresión.
1675  8FAE              ;	DE contiene (Puntero_objeto).
1676  8FAE
1677  8FAE
1678  8FAE              Cargamos_registros_con_mov_masticado
1679  8FAE
1680  8FAE ED 73 08 8C  	ld (Stack),sp
1681  8FB2 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1682  8FB6
1683  8FB6 D1           	pop de 															; DE contiene Puntero_objeto
1684  8FB7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1685  8FB9
1686  8FB9 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1687  8FBD ED 7B 08 8C  	ld sp,(Stack)
1688  8FC1
1689  8FC1 7B           	ld a,e
1690  8FC2 82           	add d															; Comprueba si ya no hay datos en el almacén.
1691  8FC3
1692  8FC3 CC 61 93     	call z,Reinicia_entidad_maliciosa
1693  8FC6
1694  8FC6 C9           	ret
1695  8FC7
1696  8FC7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1697  8FC7              ;
1698  8FC7              ;	22/7/24
1699  8FC7
1700  8FC7              Cargamos_registros_con_explosion
1701  8FC7
1702  8FC7
1703  8FC7 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1704  8FCA CD 6B 90     	call Extrae_address
1705  8FCD
1706  8FCD 5D           	ld e,l
1707  8FCE 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1708  8FCF
1709  8FCF DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1710  8FD3
1711  8FD3 C9           	ret
1712  8FD4
1713  8FD4
1714  8FD4              Cargamos_registros_con_explosion_Amadeus
1715  8FD4
1716  8FD4 2A 77 89     	ld hl,(Pamm_Amadeus)
1717  8FD7 CD 6B 90     	call Extrae_address
1718  8FDA
1719  8FDA 5D           	ld e,l
1720  8FDB 54           	ld d,h
1721  8FDC
1722  8FDC DD 2A 75 89  	ld ix,(p.imp.amadeus)
1723  8FE0
1724  8FE0 C9           	ret
1725  8FE1
1726  8FE1              ; --------------------------------------------------------------------------------------------------------------
1727  8FE1              ;
1728  8FE1              ;	17/06/24
1729  8FE1              ;
1730  8FE1              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1731  8FE1              ;
1732  8FE1              ;	IX contiene el puntero de impresión.
1733  8FE1              ;	DE contiene (Puntero_objeto).
1734  8FE1
1735  8FE1
1736  8FE1              Cargamos_registros_con_mov_masticado_Amadeus
1737  8FE1
1738  8FE1 ED 73 08 8C  	ld (Stack),sp
1739  8FE5 ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1740  8FE9 D1           	pop de 															; DE contiene Puntero_objeto
1741  8FEA DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1742  8FEC DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1743  8FF0 ED 7B 08 8C  	ld sp,(Stack)
1744  8FF4 C9           	ret
1745  8FF5
1746  8FF5              ; ---------------------------------------------------------------------------------------------------------------------
1747  8FF5              ;
1748  8FF5              ;	18/6/24
1749  8FF5              ;
1750  8FF5              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1751  8FF5
1752  8FF5              Genera_datos_de_impresion_Amadeus
1753  8FF5
1754  8FF5 3A 74 89     	ld a,(Impacto_Amadeus)
1755  8FF8 A7           	and a
1756  8FF9 20 03        	jr nz,1F
1757  8FFB
1758  8FFB              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1759  8FFB              ; _apuntando a la correspondiente explosión.
1760  8FFB
1761  8FFB CD E1 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1762  8FFE
1763  8FFE DD 7D        1 ld a,ixl
1764  9000 E6 1F        	and $1f
1765  9002 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1766  9005
1767  9005 2A 28 8C     	ld hl,(Scanlines_album_SP)
1768  9008 E5           	push hl
1769  9009
1770  9009 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1771  900C 22 28 8C     	ld (Scanlines_album_SP),hl
1772  900F
1773  900F CD B6 94     	call Genera_datos_de_impresion
1774  9012
1775  9012 E1           	pop hl
1776  9013 22 28 8C     	ld (Scanlines_album_SP),hl
1777  9016
1778  9016 C9           	ret
1779  9017
1780  9017              ; ---------------------------------------------------------------------------------------------------------------------
1781  9017              ;
1782  9017              ;	13/03/24
1783  9017              ;
1784  9017              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1785  9017
1786  9017              Inicia_albumes_de_lineas
1787  9017
1788  9017 21 00 80     	ld hl,Scanlines_album
1789  901A 22 0C 8C     	ld (Album_de_pintado),hl
1790  901D 22 28 8C     	ld (Scanlines_album_SP),hl
1791  9020
1792  9020 21 1A 81     	ld hl,Scanlines_album_2
1793  9023 22 0E 8C     	ld (Album_de_borrado),hl
1794  9026
1795  9026 C9           	ret
1796  9027
1797  9027              Inicia_albumes_de_lineas_Amadeus
1798  9027
1799  9027 21 34 82     	ld hl,Amadeus_scanlines_album
1800  902A 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1801  902D 21 58 82     	ld hl,Amadeus_scanlines_album_2
1802  9030 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1803  9033
1804  9033 C9           	ret
1805  9034
1806  9034              Inicia_albumes_de_disparos
1807  9034
1808  9034 21 7C 82     	ld hl,Disparos_scanlines_album
1809  9037 22 14 8C     	ld (Album_de_pintado_disparos),hl
1810  903A 21 8E 82     	ld hl,Disparos_scanlines_album_2
1811  903D 22 16 8C     	ld (Album_de_borrado_disparos),hl
1812  9040
1813  9040 21 7C 82     	ld hl,Disparos_scanlines_album
1814  9043 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1815  9046
1816  9046 C9           	ret
1817  9047
1818  9047              ; ---------------------------------------------------------------------------------------------------------------------
1819  9047              ;
1820  9047              ; 8/1/23
1821  9047              ;
1822  9047              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1823  9047              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1824  9047              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1825  9047
1826  9047              ; Destruye HL y DE !!!!!
1827  9047
1828  9047              Inicia_punteros_de_cajas
1829  9047
1830  9047 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1831  904A CD 6B 90         call Extrae_address
1832  904D 22 FB 8B         ld (Puntero_store_caja),hl
1833  9050 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1834  9053 22 FF 8B     	ld (Indice_restore_caja),hl
1835  9056 CD 6B 90     	call Extrae_address
1836  9059 22 FD 8B     	ld (Puntero_restore_caja),hl
1837  905C C9               ret
1838  905D
1839  905D              ; *************************************************************************************************************************************************************
1840  905D              ;
1841  905D              ; 8/1/23
1842  905D              ;
1843  905D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1844  905D
1845  905D 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1846  9060 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1847  9063 C9           	ret
1848  9064 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1849  9067 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1850  906A C9           	ret
1851  906B
1852  906B              ; *************************************************************************************************************************************************************
1853  906B              ;
1854  906B              ; 20/10/22
1855  906B              ;
1856  906B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1857  906B              ;
1858  906B              ; Destruye el puntero y DE !!!!!
1859  906B
1860  906B 5E           Extrae_address ld e,(hl)
1861  906C 23           	inc hl
1862  906D 56           	ld d,(hl)
1863  906E 2B           	dec hl
1864  906F EB           	ex de,hl
1865  9070 C9           	ret
1866  9071
1867  9071              ; *************************************************************************************************************************************************************
1868  9071              ;
1869  9071              ;	20/1/24
1870  9071              ;
1871  9071              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1872  9071              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1873  9071              ;
1874  9071              ;   Destruye HL y BC !!!!!,
1875  9071              ;
1876  9071              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1877  9071              ;					"0" ..... Izquierda.
1878  9071
1879  9071              Inicia_Puntero_objeto
1880  9071
1881  9071 3A DA 8B     	ld a,(Cuad_objeto)
1882  9074 E6 01        	and 1
1883  9076 F5           	push af
1884  9077 CC 93 90     	call z,Inicia_puntero_objeto_izq
1885  907A F1           	pop af
1886  907B C8           	ret z
1887  907C CD 80 90     	call Inicia_puntero_objeto_der
1888  907F C9           	ret
1889  9080
1890  9080              ; Arrancamos desde la parte izquierda de la pantalla.
1891  9080              ; Iniciamos (Indice_Sprite_der).
1892  9080
1893  9080 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1894  9083 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1895  9086 CD 6B 90     	call Extrae_address
1896  9089 22 CD 8B     	ld (Puntero_objeto),hl
1897  908C
1898  908C 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1899  908F 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1900  9092 C9           	ret
1901  9093
1902  9093              ; Arrancamos desde la parte derecha de la pantalla.
1903  9093              ; Iniciamos (Indice_Sprite_izq).
1904  9093
1905  9093 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1906  9096 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1907  9099 CD 6B 90     	call Extrae_address
1908  909C 22 CD 8B     	ld (Puntero_objeto),hl
1909  909F
1910  909F 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1911  90A2 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1912  90A5 C9           	ret
1913  90A6
1914  90A6              ; **************************************************************************************************
1915  90A6              ;
1916  90A6              ;	06/07/24
1917  90A6              ;
1918  90A6              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1919  90A6
1920  90A6              Restore_entidad
1921  90A6
1922  90A6 2A FB 8B     	ld hl,(Puntero_store_caja)
1923  90A9 7E           	ld a,(hl)
1924  90AA A7           	and a
1925  90AB CC B9 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1926  90AE 28 F6        	jr z,Restore_entidad
1927  90B0
1928  90B0 11 BB 8B     	ld de,Bandeja_DRAW
1929  90B3 01 0C 00     	ld bc,12
1930  90B6 ED B0        	ldir
1931  90B8 C9           	ret
1932  90B9
1933  90B9              ; **************************************************************************************************
1934  90B9              ;
1935  90B9              ;	08/05/23
1936  90B9              ;
1937  90B9              ;	Incrementamos los dos punteros de entidades. (+1).
1938  90B9
1939  90B9              Incrementa_punteros_de_cajas
1940  90B9
1941  90B9 2A FD 8B     	ld hl,(Puntero_restore_caja)
1942  90BC 22 FB 8B     	ld (Puntero_store_caja),hl
1943  90BF 2A FF 8B     	ld hl,(Indice_restore_caja)
1944  90C2 23           	inc hl
1945  90C3 23           	inc hl
1946  90C4 22 FF 8B     	ld (Indice_restore_caja),hl
1947  90C7 CD 6B 90         call Extrae_address
1948  90CA 22 FD 8B         ld (Puntero_restore_caja),hl
1949  90CD C9               ret
1950  90CE
1951  90CE              ; -----------------------------------------------------------
1952  90CE
1953  90CE              ; Teclado.
1954  90CE
1955  90CE 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1956  90D0 DB FE        	in a,($fe)
1957  90D2 E6 01        	and $01
1958  90D4 28 02        	jr z,1f
1959  90D6 18 F6        	jr Pulsa_ENTER
1960  90D8 C9           1 ret
1961  90D9
1962  90D9              ; **************************************************************************************************
1963  90D9              ;
1964  90D9              ; Temporización.
1965  90D9
1966  90D9              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1967  90D9              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1968  90D9              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1969  90D9              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1970  90D9
1971  90D9              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1972  90D9              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1973  90D9              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1974  90D9
1975  90D9              ; A partir de $4f61 no hace falta DELAY.
1976  90D9
1977  90D9              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1978  90D9
1979  90D9              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1980  90D9              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1981  90D9              ;	LD A,B
1982  90D9              ;	AND A
1983  90D9              ;	JR NZ,wait
1984  90D9              ;	RET
1985  90D9
1986  90D9              ; ---------------------------------------------------------------------------------------------------------------
1987  90D9              ;
1988  90D9              ;	13/07/24
1989  90D9              ;
1990  90D9
1991  90D9              Inicia_Shield
1992  90D9
1993  90D9 21 4D 8C     	ld hl,Datos_Shield
1994  90DC 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1995  90DF
1996  90DF 7E           	ld a,(hl)
1997  90E0 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1998  90E3
1999  90E3 3E 01        	ld a,1
2000  90E5 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2001  90E8
2002  90E8 C9           	ret
2003  90E9
2004  90E9              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2005  90E9              ;
2006  90E9              ;	4/6/24
2007  90E9              ;
2008  90E9              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2009  90E9              ;
2010  90E9              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2011  90E9              ;
2012  90E9
2013  90E9              Actualiza_pantalla
2014  90E9
2015  90E9 3E 02        	ld a,2
2016  90EB D3 FE        	out ($fe),a
2017  90ED
2018  90ED 3A 2E 8C     	ld a,(Ctrl_3)
2019  90F0 CB 57        	bit 2,a
2020  90F2 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2021  90F4
2022  90F4              Borrando_entidades
2023  90F4
2024  90F4 2A 28 8C     	ld hl,(Scanlines_album_SP)
2025  90F7 CD 6B 90     	call Extrae_address
2026  90FA 24           	inc h
2027  90FB 25           	dec h
2028  90FC 28 05        	jr z,Pintando_entidades
2029  90FE CD AB 95     	call Pinta_Sprites
2030  9101 18 F1        	jr Borrando_entidades
2031  9103
2032  9103              Pintando_entidades
2033  9103
2034  9103 2A 2A 8C     	ld hl,(India_SP)
2035  9106 2C           	inc l
2036  9107 CD 6B 90     	call Extrae_address
2037  910A 24           	inc h
2038  910B 25           	dec h
2039  910C 28 0E        	jr z,Ejecuta_escudo
2040  910E 1C           	inc e
2041  910F 1C           	inc e
2042  9110 ED 53 2A 8C  	ld (India_SP),de
2043  9114 CD 6B 90     	call Extrae_address
2044  9117 CD AB 95     	call Pinta_Sprites
2045  911A 18 E7        	jr Pintando_entidades
2046  911C
2047  911C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2048  911C
2049  911C              Ejecuta_escudo
2050  911C
2051  911C 3A 53 8C     	ld a,(Shield)
2052  911F A7           	and a
2053  9120 20 2F        	jr nz,Aplica_Shield
2054  9122
2055  9122              Borrando_Amadeus
2056  9122
2057  9122 21 2E 8C     	ld hl,Ctrl_3
2058  9125 CB 6E        	bit 5,(hl)
2059  9127 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2060  9129
2061  9129 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2062  912C CD 6B 90     	call Extrae_address
2063  912F 24           	inc h
2064  9130 25           	dec h
2065  9131 28 03        	jr z,Pintando_Amadeus
2066  9133 CD AB 95     	call Pinta_Sprites
2067  9136
2068  9136              Pintando_Amadeus
2069  9136
2070  9136 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2071  9139 CD 6B 90     	call Extrae_address
2072  913C 24           	inc h
2073  913D 25           	dec h
2074  913E 28 03        	jr z,1F
2075  9140 CD AB 95     	call Pinta_Sprites
2076  9143
2077  9143              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2078  9143
2079  9143 21 2E 8C     1 ld hl,Ctrl_3
2080  9146 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2081  9148 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2082  914A CB AE        	res 5,(hl)
2083  914C
2084  914C 3E 01        	ld a,1												; Borde azul.
2085  914E D3 FE        	out ($fe),a
2086  9150
2087  9150 C9           	ret
2088  9151
2089  9151              Aplica_Shield
2090  9151
2091  9151              ;	Bit 1 "1" (Shield_3) Sólo borra.
2092  9151              ;		  "0"     ""     Borra/Pinta.
2093  9151              ;	Bit 2    ""  RET.	 No borra, no pinta.
2094  9151
2095  9151 21 55 8C     	ld hl,Shield_3
2096  9154
2097  9154 CB 5E        	bit 3,(hl)
2098  9156 20 DE        	jr nz,Pintando_Amadeus
2099  9158
2100  9158 CB 56        	bit 2,(hl)
2101  915A 20 E7        	jr nz,1B
2102  915C
2103  915C CB 4E        	bit 1,(hl)
2104  915E C4 65 91     	call nz,Borra_Amadeus_shield
2105  9161
2106  9161 28 BF        	jr z,Borrando_Amadeus
2107  9163 18 DE        	jr 1B
2108  9165
2109  9165              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2110  9165
2111  9165              Borra_Amadeus_shield
2112  9165
2113  9165 3A 2E 8C     	ld a,(Ctrl_3)
2114  9168 CB 6F        	bit 5,a
2115  916A 28 08        	jr z,1F
2116  916C
2117  916C 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2118  916F CD 6B 90     	call Extrae_address
2119  9172 18 06        	jr 2F
2120  9174
2121  9174 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2122  9177 CD 6B 90     	call Extrae_address
2123  917A
2124  917A CD AB 95     2 call Pinta_Sprites
2125  917D
2126  917D AF           	xor a
2127  917E 3C           	inc a											; Asegura NZ en la salida de la rutina.
2128  917F
2129  917F C9           	ret
2130  9180
2131  9180              Pinta_Amadeus_shield
2132  9180
2133  9180 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2134  9183 CD 6B 90     	call Extrae_address
2135  9186 CD AB 95     	call Pinta_Sprites
2136  9189
2137  9189 AF           	xor a
2138  918A 3C           	inc a											; Asegura NZ en la salida de la rutina.
2139  918B
2140  918B C9           	ret
2141  918C
2142  918C              Borra_Pinta_Amadeus_shield
2143  918C
2144  918C CD 65 91     	call Borra_Amadeus_shield
2145  918F CD 80 91     	call Pinta_Amadeus_shield
2146  9192 C9           	ret
2147  9193
2148  9193              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2149  9193              ;
2150  9193              ;	19/6/24
2151  9193              ;
2152  9193
2153  9193              Teclado
2154  9193
2155  9193              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2156  9193
2157  9193 3E F7        	ld a,$f7												; "5" para disparar.
2158  9195 DB FE        	in a,($fe)
2159  9197 E6 10        	and $10
2160  9199
2161  9199 CC 4B A0     	call z,Genera_disparo_Amadeus
2162  919C
2163  919C 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2164  919E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2165  91A0 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2166  91A2 CC 18 9D         call z,Amadeus_a_izquierda
2167  91A5
2168  91A5 3E F7        	ld a,$f7
2169  91A7 DB FE        	in a,($fe)
2170  91A9 E6 01        	and $01
2171  91AB C8           	ret z
2172  91AC
2173  91AC 3E F7        	ld a,$f7
2174  91AE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2175  91B0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2176  91B2 CC 30 9D     	call z,Amadeus_a_derecha
2177  91B5
2178  91B5 C9           	ret
2179  91B6
2180  91B6              ; ------------------------------------------------------------------------------------------------------------------------
2181  91B6              ;
2182  91B6              ;	06/07/24
2183  91B6              ;
2184  91B6
2185  91B6              Genera_explosion
2186  91B6
2187  91B6 21 40 8C     	ld hl,Clock_explosion
2188  91B9 35           	dec (hl)
2189  91BA 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2190  91BC
2191  91BC              Borra_entidad_colisionada
2192  91BC
2193  91BC CD C2 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2194  91BF CD C7 8F     	call Cargamos_registros_con_explosion
2195  91C2 CD B6 94     	call Genera_datos_de_impresion
2196  91C5
2197  91C5 AF           	xor a
2198  91C6 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2199  91C7
2200  91C7 C9           	ret
2201  91C8
2202  91C8              Siguiente_frame_explosion
2203  91C8
2204  91C8 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2205  91CA
2206  91CA              ; Avanza Frame de explosión.
2207  91CA
2208  91CA 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2209  91CD 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2210  91D0
2211  91D0 79           	ld a,c
2212  91D1 95           	sub l
2213  91D2 20 0B        	jr nz,1F
2214  91D4
2215  91D4              ; Fín de la entidad !!!!!!!!!!!!!
2216  91D4
2217  91D4 21 02 8C     	ld hl,Numero_parcial_de_entidades
2218  91D7 35           	dec (hl)
2219  91D8 23           	inc hl
2220  91D9 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2221  91DA
2222  91DA CD 36 93     	call Limpiamos_bandeja_DRAW
2223  91DD 18 DD        	jr Borra_entidad_colisionada
2224  91DF
2225  91DF 23           1 inc hl
2226  91E0 23           	inc hl
2227  91E1 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2228  91E4 18 D6        	jr Borra_entidad_colisionada
2229  91E6
2230  91E6              ; ----- ----- ----- ----- -----
2231  91E6
2232  91E6              Genera_explosion_Amadeus
2233  91E6
2234  91E6 21 41 8C     	ld hl,Clock_explosion_Amadeus
2235  91E9 35           	dec (hl)
2236  91EA 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2237  91EC
2238  91EC              Borra_Amadeus_impactado
2239  91EC
2240  91EC CD 34 8E     	call Change_Amadeus
2241  91EF CD D4 8F     	call Cargamos_registros_con_explosion_Amadeus
2242  91F2 CD F5 8F     	call Genera_datos_de_impresion_Amadeus
2243  91F5
2244  91F5 21 2E 8C     	ld hl,Ctrl_3
2245  91F8 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2246  91FA
2247  91FA AF           	xor a
2248  91FB 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2249  91FC
2250  91FC C9           	ret
2251  91FD
2252  91FD              Siguiente_frame_explosion_Amadeus
2253  91FD
2254  91FD 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2255  91FF
2256  91FF              ; Avanza Frame de explosión.
2257  91FF
2258  91FF 2A 77 89     	ld hl,(Pamm_Amadeus)
2259  9202 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2260  9205
2261  9205 79           	ld a,c
2262  9206 95           	sub l
2263  9207 20 0B        	jr nz,1F
2264  9209
2265  9209              ; Fín de Amadeus !!!!!!!!!!!!!
2266  9209              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2267  9209
2268  9209 AF           	xor a
2269  920A 32 74 89     	ld (Impacto_Amadeus),a
2270  920D 21 2E 8C     	ld hl,Ctrl_3
2271  9210 CB F6        	set 6,(hl)
2272  9212
2273  9212 18 D8        	jr Borra_Amadeus_impactado
2274  9214
2275  9214 23           1 inc hl
2276  9215 23           	inc hl
2277  9216 22 77 89     	ld (Pamm_Amadeus),hl
2278  9219 18 D1        	jr Borra_Amadeus_impactado
2279  921B
2280  921B              ; ---------------------------------------------------------------
2281  921B
2282  921B              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 921B              ; ******************************************************************************************************************************************************************************************
   2+ 921B              ;
   3+ 921B              ;   21/04/24
   4+ 921B              ;
   5+ 921B              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 921B              ;   (XOR) bit a bit.
   7+ 921B              ;
   8+ 921B              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 921B
  10+ 921B              Derivando_RND
  11+ 921B
  12+ 921B 21 F6 88         ld hl,Numeros_aleatorios
  13+ 921E
  14+ 921E ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9220 C5               push bc
  16+ 9221              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9221 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9224              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9224
  20+ 9224 A7           6 and a                                 ; Carry a "0".
  21+ 9225 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9227 30 02            jr nc,1F
  23+ 9229
  24+ 9229 CB C1            set 0,c
  25+ 922B
  26+ 922B 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 922C E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 922E 5F               ld e,a
  29+ 922F
  30+ 922F 7A               ld a,d
  31+ 9230 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9232 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9234
  34+ 9234 CB 3F            srl a
  35+ 9236
  36+ 9236 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9237
  38+ 9237 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9238 28 04            jr z,4F
  40+ 923A
  41+ 923A CB FF            set 7,a
  42+ 923C 18 02            jr 5F
  43+ 923E
  44+ 923E CB BF        4 res 7,a
  45+ 9240
  46+ 9240 CB 21        5 sla c
  47+ 9242 10 E0            djnz 6B
  48+ 9244
  49+ 9244 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9245
  51+ 9245 77               ld (hl),a
  52+ 9246 23               inc hl
  53+ 9247 C1               pop bc
  54+ 9248 10 D4            djnz 3B
  55+ 924A
  56+ 924A C9               ret
  57+ 924B
  58+ 924B
  59+ 924B
# file closed: RND_Derivando.asm
2283  924B              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 924B              ;---------------------------------------------------------------------------------------------------------------
   2+ 924B              ;
   3+ 924B              ;   8/3/24
   4+ 924B              ;
   5+ 924B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 924B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 924B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 924B              ;	_ de la 1ª entidad del Nivel.
   9+ 924B              ;
  10+ 924B              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 924B
  12+ 924B              ;	MODIFICA: HL,DE y A.
  13+ 924B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 924B
  15+ 924B              Inicializa_Nivel
  16+ 924B
  17+ 924B 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 924E CD 6B 90     	call Extrae_address
  19+ 9251 7E           	ld a,(hl)
  20+ 9252 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9255 23           	inc hl
  22+ 9256 CD 63 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9259 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 925C CD 6C 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 925F
  26+ 925F CD 7D 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9262 C9           	ret
  28+ 9263
  29+ 9263              ; ----------------------
  30+ 9263
  31+ 9263 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9266 01 04 00     	ld bc,4
  33+ 9269 ED B0        	ldir
  34+ 926B C9           	ret
  35+ 926C
  36+ 926C 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 926D CD 07 94         call Calcula_salto_en_BC
  38+ 9270 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9273 A7               and a
  40+ 9274 ED 4A            adc hl,bc
  41+ 9276 CD 6B 90         call Extrae_address
  42+ 9279 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 927C C9               ret
  44+ 927D
  45+ 927D 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9280 CD 07 94     	call Calcula_salto_en_BC
  47+ 9283 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9286 A7               and a
  49+ 9287 ED 4A            adc hl,bc
  50+ 9289 CD 6B 90         call Extrae_address
  51+ 928C 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 928F C9           	ret
  53+ 9290
  54+ 9290              ;---------------------------------------------------------------------------------------------------------------
  55+ 9290              ;
  56+ 9290              ;   5/1/24
  57+ 9290              ;
  58+ 9290              ;	Destruye A,BC,HL,DE
  59+ 9290
  60+ 9290              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9290              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9290
  63+ 9290              Inicia_Entidades
  64+ 9290
  65+ 9290              ; Preparamos los punteros de las cajas de entidades:
  66+ 9290
  67+ 9290 CD 47 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9293              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9293 CD 4F 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9296
  71+ 9296 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9299
  73+ 9299 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 929C
  75+ 929C CD B5 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 929F
  77+ 929F 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 92A2
  79+ 92A2              ; En este punto:
  80+ 92A2              ;
  81+ 92A2              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92A2              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92A2
  84+ 92A2 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92A3
  86+ 92A3 7E           	ld a,(hl)
  87+ 92A4 CD 21 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92A7
  89+ 92A7 CD 19 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92AA
  91+ 92AA              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92AA
  93+ 92AA CD D7 93     	call Busca_mov_masticados_segun_tipo
  94+ 92AD
  95+ 92AD A7           	and a
  96+ 92AE 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92B0
  98+ 92B0              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92B0
 100+ 92B0              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92B0              ;	_ de este tipo de entidad.
 102+ 92B0
 103+ 92B0 CD AF 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92B3 CD BC 9E     	call Transfiere_datos_de_contadores
 105+ 92B6
 106+ 92B6 18 06        	jr 4F
 107+ 92B8
 108+ 92B8 CD 5A 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92BB
 110+ 92BB              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92BB              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92BB              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92BB              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92BB              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92BB
 116+ 92BB CD 95 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92BE              ;																; _ Mov_masticados ya generados.
 118+ 92BE
 119+ 92BE CD AE 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92C1
 121+ 92C1 DD E5        	push ix
 122+ 92C3 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92C4
 124+ 92C4 D5           	push de
 125+ 92C5 CD 8A 94     	call Genera_coordenadas
 126+ 92C8
 127+ 92C8 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92CC CD C2 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92CF D1           	pop de
 130+ 92D0
 131+ 92D0 CD B6 94     	call Genera_datos_de_impresion
 132+ 92D3              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92D3              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92D3              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92D3              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92D3
 137+ 92D3 CD 59 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92D6
 139+ 92D6              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92D6
 141+ 92D6 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92DA CD 46 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92DD
 144+ 92DD CD 36 93     	call Limpiamos_bandeja_DRAW
 145+ 92E0 CD B9 90     	call Incrementa_punteros_de_cajas
 146+ 92E3
 147+ 92E3              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92E3              ; _ entidad del Nivel.
 149+ 92E3
 150+ 92E3 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92E6 E6 F0        	and $f0
 152+ 92E8 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92EB
 154+ 92EB              ; Siguiente entidad del Nivel.
 155+ 92EB
 156+ 92EB 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92EE 23           	inc hl 														; _ entidad del Nivel.
 158+ 92EF
 159+ 92EF C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92F0
 161+ 92F0 10 A7        	djnz 2B
 162+ 92F2
 163+ 92F2 C9           	ret
 164+ 92F3
 165+ 92F3              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92F3              ;
 167+ 92F3              ;	27/5/24
 168+ 92F3              ;
 169+ 92F3              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92F3              ;
 171+ 92F3
 172+ 92F3              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92F3              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92F3
 175+ 92F3 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92F6 CD 19 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92F9
 178+ 92F9
 179+ 92F9              Construye_movimientos_masticados_Amadeus
 180+ 92F9
 181+ 92F9 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92FC CD A1 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92FF              ;															; _ el (Contador_de_mov_masticados).
 184+ 92FF CD 71 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9302              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9302
 187+ 9302              ; Generamos movimientos masticados de Amadeus.
 188+ 9302
 189+ 9302 06 79        	ld b,121												; $0079, 121d.
 190+ 9304
 191+ 9304 C5           1 push bc
 192+ 9305 CD CE 96     	call Draw
 193+ 9308 CD 86 8F     	call Guarda_movimiento_masticado
 194+ 930B
 195+ 930B CD 42 9A     	call Mov_right
 196+ 930E CD 42 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9311
 198+ 9311 C1           	pop bc
 199+ 9312 10 F0        	djnz 1B
 200+ 9314
 201+ 9314              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9314
 203+ 9314              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9314              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9314
 206+ 9314 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9317 01 08 00     	ld bc,8
 208+ 931A A7           	and a
 209+ 931B ED 42        	sbc hl,bc
 210+ 931D 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9320
 212+ 9320 C9           	ret
 213+ 9321
 214+ 9321              ; ---------------------------------------------------------------------
 215+ 9321              ;
 216+ 9321              ;	10/02/24
 217+ 9321              ;
 218+ 9321              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9321              ;
 220+ 9321              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9321
 222+ 9321              Definicion_segun_tipo
 223+ 9321
 224+ 9321 CD 07 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9324 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9327 CD 0F 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 932A C9           	ret
 228+ 932B
 229+ 932B              ; ---------------------------------------------------------------------
 230+ 932B              ;
 231+ 932B              ;	6/7/24
 232+ 932B
 233+ 932B
 234+ 932B              Store_Restore_cajas
 235+ 932B
 236+ 932B ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 932F CD 46 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9332 CD B9 90     	call Incrementa_punteros_de_cajas
 239+ 9335 C9           	ret
 240+ 9336
 241+ 9336              ; ---------------------------------------------------------------------
 242+ 9336              ;
 243+ 9336              ;	23/6/24
 244+ 9336              ;
 245+ 9336              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9336              ;
 247+ 9336              ;	MODIFY: HL
 248+ 9336
 249+ 9336              Limpiamos_bandeja_DRAW
 250+ 9336
 251+ 9336 ED 73 08 8C  	ld (Stack),sp
 252+ 933A 31 E0 8B     	ld sp,Vel_left
 253+ 933D
 254+ 933D AF           	xor a
 255+ 933E 67           	ld h,a
 256+ 933F 6F           	ld l,a
 257+ 9340
 258+ 9340 E5           	push hl
 259+ 9341 E5           	push hl
 260+ 9342 E5           	push hl
 261+ 9343 E5           	push hl
 262+ 9344 E5           	push hl
 263+ 9345 E5           	push hl
 264+ 9346 E5           	push hl
 265+ 9347 E5           	push hl
 266+ 9348 E5           	push hl
 267+ 9349 E5           	push hl
 268+ 934A E5           	push hl
 269+ 934B E5           	push hl
 270+ 934C E5           	push hl
 271+ 934D E5           	push hl
 272+ 934E E5           	push hl
 273+ 934F E5           	push hl
 274+ 9350 E5           	push hl
 275+ 9351 E5           	push hl
 276+ 9352
 277+ 9352 33           	inc sp
 278+ 9353
 279+ 9353 E5           	push hl
 280+ 9354 ED 7B 08 8C  	ld sp,(Stack)
 281+ 9358
 282+ 9358 C9           	ret
 283+ 9359
 284+ 9359              ; ---------------------------------------------------------------------
 285+ 9359              ;
 286+ 9359              ;	24/03/24
 287+ 9359
 288+ 9359 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 935C 2B           	dec hl
 290+ 935D 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9360 C9           	ret
 292+ 9361
 293+ 9361              ; ---------------------------------------------------------------------
 294+ 9361              ;
 295+ 9361              ;	8/5/24
 296+ 9361
 297+ 9361              Reinicia_entidad_maliciosa
 298+ 9361
 299+ 9361              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9361
 301+ 9361 CD AF 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9364 CD BC 9E     	call Transfiere_datos_de_contadores
 303+ 9367
 304+ 9367              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9367
 306+ 9367 3A BB 8B     	ld a,(Tipo)
 307+ 936A CD 21 93     	call Definicion_segun_tipo
 308+ 936D
 309+ 936D E5           	push hl
 310+ 936E DD E1        	pop ix
 311+ 9370
 312+ 9370 DD 6E 0B     	ld l,(ix+11)
 313+ 9373 DD 66 0C     	ld h,(ix+12)
 314+ 9376
 315+ 9376 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9379
 317+ 9379 CD AE 8F     	call Cargamos_registros_con_mov_masticado
 318+ 937C
 319+ 937C              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 937C              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 937C              ; Ejemplos.
 322+ 937C
 323+ 937C              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 937C              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 937C              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 937C              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 937C              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 937C
 329+ 937C 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 937F CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9381
 332+ 9381 7E           	ld a,(hl)
 333+ 9382 CB 2F        	sra a
 334+ 9384 CB 2F        	sra a
 335+ 9386
 336+ 9386 32 C6 8B     	ld (Velocidad),a
 337+ 9389
 338+ 9389 3E 40        	ld a,$40
 339+ 938B BE           	cp (hl)
 340+ 938C C0           	ret nz
 341+ 938D
 342+ 938D              ; Límitador.
 343+ 938D
 344+ 938D              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 938D
 346+ 938D CB 2E        	sra (hl)
 347+ 938F 21 C6 8B     	ld hl,Velocidad
 348+ 9392 CB 2E        	sra (hl)
 349+ 9394
 350+ 9394 C9           	ret
 351+ 9395
 352+ 9395              ; ---------------------------------------------------------------------
 353+ 9395              ;
 354+ 9395              ;	22/01/24
 355+ 9395
 356+ 9395 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 9398 CB 46        	bit 0,(hl)
 358+ 939A 20 0D        	jr nz,1F
 359+ 939C CB 4E        	bit 1,(hl)
 360+ 939E 20 0C        	jr nz,2F
 361+ 93A0 CB 56        	bit 2,(hl)
 362+ 93A2 20 0B        	jr nz,3F
 363+ 93A4 CB 5E        	bit 3,(hl)
 364+ 93A6 20 0A        	jr nz,4F
 365+ 93A8 C9           	ret
 366+ 93A9
 367+ 93A9 CB E6        1 set 4,(hl)
 368+ 93AB C9           	ret
 369+ 93AC CB EE        2 set 5,(hl)
 370+ 93AE C9           	ret
 371+ 93AF CB F6        3 set 6,(hl)
 372+ 93B1 C9           	ret
 373+ 93B2 CB FE        4 set 7,(hl)
 374+ 93B4 C9           	ret
 375+ 93B5
 376+ 93B5              ; ---------------------------------------------------------------------
 377+ 93B5              ;
 378+ 93B5              ;	23/01/24
 379+ 93B5              ;
 380+ 93B5              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93B5              ;
 382+ 93B5              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93B5              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93B5              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93B5              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93B5
 387+ 93B5              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93B5
 389+ 93B5 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93B6 3D           	dec a
 391+ 93B7 20 06        	jr nz,1F
 392+ 93B9
 393+ 93B9              ; --- Tipo_1
 394+ 93B9
 395+ 93B9 21 2F 8C     	ld hl,Ctrl_4
 396+ 93BC CB C6        	set 0,(hl)
 397+ 93BE C9           	ret
 398+ 93BF
 399+ 93BF 3D           1 dec a
 400+ 93C0 20 06        	jr nz,2F
 401+ 93C2
 402+ 93C2              ; --- Tipo_2
 403+ 93C2
 404+ 93C2 21 2F 8C     	ld hl,Ctrl_4
 405+ 93C5 CB CE        	set 1,(hl)
 406+ 93C7 C9           	ret
 407+ 93C8
 408+ 93C8 3D           2 dec a
 409+ 93C9 20 06        	jr nz,3F
 410+ 93CB
 411+ 93CB              ; --- Tipo_3
 412+ 93CB
 413+ 93CB 21 2F 8C     	ld hl,Ctrl_4
 414+ 93CE CB D6        	set 2,(hl)
 415+ 93D0 C9           	ret
 416+ 93D1
 417+ 93D1              ; --- Tipo_3
 418+ 93D1
 419+ 93D1 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93D4 CB D6        	set 2,(hl)
 421+ 93D6 C9           	ret
 422+ 93D7
 423+ 93D7              ; ---------------------------------------------------------------------
 424+ 93D7              ;
 425+ 93D7              ;	22/01/24
 426+ 93D7
 427+ 93D7 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93DA CB 46        	bit 0,(hl)
 429+ 93DC 20 0E        	jr nz,1F
 430+ 93DE
 431+ 93DE CB 4E        	bit 1,(hl)
 432+ 93E0 20 10        	jr nz,2F
 433+ 93E2
 434+ 93E2 CB 56        	bit 2,(hl)
 435+ 93E4 20 12        	jr nz,3F
 436+ 93E6
 437+ 93E6 CB 5E        	bit 3,(hl)
 438+ 93E8 20 14        	jr nz,4F
 439+ 93EA 18 19        	jr 6F
 440+ 93EC
 441+ 93EC              ; Entidad_de_Tipo_1.
 442+ 93EC
 443+ 93EC CB 66        1 bit 4,(hl)
 444+ 93EE 28 15        	jr z,6F
 445+ 93F0 18 10        	jr 5F
 446+ 93F2
 447+ 93F2              ; Entidad_de_Tipo_2.
 448+ 93F2
 449+ 93F2 CB 6E        2 bit 5,(hl)
 450+ 93F4 28 0F        	jr z,6F
 451+ 93F6 18 0A        	jr 5F
 452+ 93F8
 453+ 93F8              ; Entidad_de_Tipo_3.
 454+ 93F8
 455+ 93F8 CB 76        3 bit 6,(hl)
 456+ 93FA 28 09        	jr z,6F
 457+ 93FC 18 04        	jr 5F
 458+ 93FE
 459+ 93FE              ; Entidad_de_Tipo_4.
 460+ 93FE
 461+ 93FE CB 7E        4 bit 7,(hl)
 462+ 9400 28 03        	jr z,6F
 463+ 9402
 464+ 9402              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9402
 466+ 9402 AF           5 xor a
 467+ 9403 3C           	inc a
 468+ 9404 C9           	ret
 469+ 9405
 470+ 9405              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9405
 472+ 9405 AF           6 xor a
 473+ 9406 C9           	ret
 474+ 9407
 475+ 9407              ;	------------------------------------------------------------------------------------
 476+ 9407              ;
 477+ 9407              ;	12/01/24
 478+ 9407              ;
 479+ 9407              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9407              ;
 481+ 9407              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9407              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9407
 484+ 9407 CB 27        Calcula_salto_en_BC sla a
 485+ 9409 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 940B 4F           	ld c,a
 487+ 940C 06 00        	ld b,0
 488+ 940E C9           	ret
 489+ 940F
 490+ 940F              ; ------------------------------------------------------------------
 491+ 940F              ;
 492+ 940F              ;	19/1/24
 493+ 940F              ;
 494+ 940F              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 940F              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 940F
 497+ 940F A7           Situa_en_datos_de_definicion and a
 498+ 9410 ED 4A        	adc hl,bc
 499+ 9412 CD 6B 90     	call Extrae_address
 500+ 9415 22 06 8C         ld (Datos_de_entidad),hl
 501+ 9418 C9           	ret
 502+ 9419
 503+ 9419              ; ------------------------------------------------------------------
 504+ 9419
 505+ 9419              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9419              ; 	inc de
 507+ 9419              ; 	inc de
 508+ 9419              ; 	ex de,hl
 509+ 9419              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9419              ; 	ret
 511+ 9419
 512+ 9419              ; ----------------------------------------------------------------------------------------------------------
 513+ 9419              ;
 514+ 9419              ;	24/6/24
 515+ 9419              ;
 516+ 9419              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9419              ;	_ de entidad.
 518+ 9419              ;
 519+ 9419              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9419              ;
 521+ 9419              ;
 522+ 9419              ;	MODIFICA: HL,DE y BC
 523+ 9419
 524+ 9419
 525+ 9419              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9419
 527+ 9419 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 941C 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 941D 12           	ld (de),a
 530+ 941E 23           	inc hl
 531+ 941F              ;
 532+ 941F 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9422 01 02 00     	ld bc,2
 534+ 9425 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9427              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9427 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 942A 7E           	ld a,(hl)
 538+ 942B 12           	ld (de),a
 539+ 942C 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 942D
 541+ 942D 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 9430 01 04 00     	ld bc,4
 543+ 9433 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9435
 545+ 9435 11 D8 8B     	ld de,Posicion_inicio
 546+ 9438 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 943B ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 943D
 549+ 943D 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9440 01 02 00     	ld bc,2
 551+ 9443 ED B0        	ldir
 552+ 9445
 553+ 9445 C9           	ret
 554+ 9446
 555+ 9446              ; ----------------------------------------------------------------------------------------------------------
 556+ 9446              ;
 557+ 9446              ;	1/8/24
 558+ 9446              ;
 559+ 9446
 560+ 9446              Parametros_de_bandeja_DRAW_a_caja
 561+ 9446
 562+ 9446 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9449 01 0C 00     	ld bc,12
 564+ 944C ED B0        	ldir
 565+ 944E C9           	ret
 566+ 944F
 567+ 944F              ;---------------------------------------------------------------------------------------------------------------
 568+ 944F              ;
 569+ 944F              ;	5/1/24
 570+ 944F              ;
 571+ 944F              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 944F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 944F              ;
 574+ 944F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 944F              ;
 576+ 944F              ;	(Numero_parcial_de_entidades)="7".
 577+ 944F              ;
 578+ 944F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 944F              ;
 580+ 944F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 944F              ;
 582+ 944F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 944F              ;	MODIFICA: A y B.
 584+ 944F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 944F
 586+ 944F              Inicializa_Numero_parcial_de_entidades
 587+ 944F
 588+ 944F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 944F
 590+ 944F 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9452 A7           	and a
 592+ 9453
 593+ 9453              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9453              ;	jr z,$
 595+ 9453              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9453
 597+ 9453 20 03        	jr nz,3F
 598+ 9455
 599+ 9455              ; ---------- ---------- ----------
 600+ 9455
 601+ 9455              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9455              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9455
 604+ 9455 CD 4B 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9458
 606+ 9458              ; ---------- ---------- ----------
 607+ 9458
 608+ 9458 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 945B FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 945D 38 08        	jr c,1F
 611+ 945F
 612+ 945F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 945F              ; Actualizamos variables.
 614+ 945F
 615+ 945F 3E 07        	ld a,7
 616+ 9461 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9464 47           	ld b,a
 618+ 9465 18 04        	jr 2F
 619+ 9467
 620+ 9467              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9467              ; (Numero_de_entidades)="0".
 622+ 9467
 623+ 9467 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 946A 47           	ld b,a
 625+ 946B C9           2 ret
 626+ 946C
# file closed: Rutinas_de_inicio_y_niveles.asm
2284  946C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 946C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 946C              ;
   3+ 946C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 946C              ;
   5+ 946C              ; *****************************************************************************************************************************************************************************************
   6+ 946C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 946C
   8+ 946C 7C           calcula_tercio ld a,h
   9+ 946D E6 18        	and $18
  10+ 946F CB 2F        	sra a
  11+ 9471 CB 2F        	sra a
  12+ 9473 CB 2F        	sra a
  13+ 9475 C9           	ret
  14+ 9476
# file closed: calcula_tercio.asm
2285  9476              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9476              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9476              ;
   3+ 9476              ;
   4+ 9476              ;	CLS.
   5+ 9476              ;
   6+ 9476              ;	Limpia la pantalla y define sus atributos.
   7+ 9476              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9476              ;
   9+ 9476              ;	COLORES: 0 ..... NEGRO
  10+ 9476              ;    		 1 ..... AZUL
  11+ 9476              ; 			 2 ..... ROJO
  12+ 9476              ;			 3 ..... MAGENTA
  13+ 9476              ; 			 4 ..... VERDE
  14+ 9476              ; 			 5 ..... CIAN
  15+ 9476              ;			 6 ..... AMARILLO
  16+ 9476              ; 			 7 ..... BLANCO
  17+ 9476              ;
  18+ 9476              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9476              ;
  20+ 9476              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9476
  22+ 9476
  23+ 9476 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9479 11 01 40     	LD DE,$4001
  25+ 947C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 947F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9481 ED B0        	LDIR
  28+ 9483 01 FF 02     	LD BC,767
  29+ 9486 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9487 ED B0        	LDIR
  31+ 9489 C9           	ret
  32+ 948A
# file closed: Cls.asm
2286  948A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 948A              ; ------------------------------------------------------------------------
   2+ 948A              ;
   3+ 948A              ;	30/1/24
   4+ 948A              ;
   5+ 948A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 948A              ;	Fila superior "0", Columna izquierda "0".
   7+ 948A              ;
   8+ 948A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 948A              ;
  10+ 948A              ;	Modifica: A,BC y DE.
  11+ 948A
  12+ 948A 7D           Genera_coordenadas ld a,l
  13+ 948B E6 1F        	and $1f
  14+ 948D 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9490
  16+ 9490 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9491 FE 40        	cp $40
  18+ 9493 38 1C        	jr c,4F
  19+ 9495
  20+ 9495 CD 6C 94     	call calcula_tercio
  21+ 9498 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9499
  23+ 9499 1E 00        	ld e,0
  24+ 949B 7D           	ld a,l
  25+ 949C E6 E0        	and $e0
  26+ 949E 28 01        	jr z,1F
  27+ 94A0 04           	inc b
  28+ 94A1
  29+ 94A1 04           1 inc b
  30+ 94A2 05           	dec b
  31+ 94A3 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94A5              ;														; _ , salimos.
  33+ 94A5 1C           3 inc e
  34+ 94A6 D6 20        	sub 32
  35+ 94A8 20 FB        	jr nz,3B
  36+ 94AA 10 F5        	djnz 1B
  37+ 94AC
  38+ 94AC 7B           2 ld a,e
  39+ 94AD 32 BD 8B     	ld (Coordenada_y),a
  40+ 94B0 C9           	ret
  41+ 94B1
  42+ 94B1 AF           4 xor a
  43+ 94B2 32 BD 8B     	ld (Coordenada_y),a
  44+ 94B5 C9           	ret
  45+ 94B6
# file closed: Genera_coordenadas.asm
2287  94B6              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94B6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94B6              ;
   3+ 94B6              ;	11/03/24
   4+ 94B6              ;
   5+ 94B6              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94B6              ;   DE contiene Puntero_objeto.
   7+ 94B6              ;   IX contiene el Puntero de impresión.
   8+ 94B6
   9+ 94B6              Genera_datos_de_impresion
  10+ 94B6
  11+ 94B6 ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94BA
  13+ 94BA 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94BD DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94BF
  16+ 94BF 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94C2
  18+ 94C2 3E 05            ld a,5
  19+ 94C4 85               add l
  20+ 94C5 6F               ld l,a
  21+ 94C6
  22+ 94C6 F9               ld sp,hl
  23+ 94C7 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94CA
  25+ 94CA 21 00 00         ld hl,0
  26+ 94CD
  27+ 94CD DD E5            push ix
  28+ 94CF 3B               dec sp
  29+ 94D0 ED 7A            adc hl,sp
  30+ 94D2 D5               push de
  31+ 94D3
  32+ 94D3              ; Recuperamos SP.
  33+ 94D3
  34+ 94D3 ED 7B 08 8C      ld sp,(Stack)
  35+ 94D7
  36+ 94D7 E5               push hl
  37+ 94D8 F1               pop af
  38+ 94D9 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94DA
  40+ 94DA              ; Tenemos el encabezado listo.
  41+ 94DA              ; Preparamos registros para generar los scanlines.
  42+ 94DA
  43+ 94DA DD E5            push ix
  44+ 94DC E1               pop hl                                          ; 1er scanline en HL.
  45+ 94DD
  46+ 94DD ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94E1
  48+ 94E1              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94E1              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94E1
  51+ 94E1 7C               ld a,h
  52+ 94E2 FE 50            cp $50
  53+ 94E4 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94E6
  55+ 94E6 20 05            jr nz,2F
  56+ 94E8
  57+ 94E8 7D               ld a,l
  58+ 94E9 FE E0            cp $e0
  59+ 94EB 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94ED
  61+ 94ED 7D           2 ld a,l
  62+ 94EE FE C0            cp $c0
  63+ 94F0 D2 82 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94F3
  65+ 94F3              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94F3
  67+ 94F3 CD 80 99         call NextScan
  68+ 94F6 EB               ex de,hl
  69+ 94F7
  70+ 94F7 73               ld (hl),e
  71+ 94F8 23               inc hl
  72+ 94F9 72               ld (hl),d
  73+ 94FA 23               inc hl
  74+ 94FB
  75+ 94FB EB               ex de,hl
  76+ 94FC
  77+ 94FC CD 80 99         call NextScan
  78+ 94FF EB               ex de,hl
  79+ 9500
  80+ 9500 73               ld (hl),e
  81+ 9501 23               inc hl
  82+ 9502 72               ld (hl),d
  83+ 9503 23               inc hl
  84+ 9504
  85+ 9504 EB               ex de,hl
  86+ 9505
  87+ 9505 CD 80 99         call NextScan
  88+ 9508 EB               ex de,hl
  89+ 9509
  90+ 9509 73               ld (hl),e
  91+ 950A 23               inc hl
  92+ 950B 72               ld (hl),d
  93+ 950C 23               inc hl
  94+ 950D
  95+ 950D EB               ex de,hl
  96+ 950E
  97+ 950E CD 80 99         call NextScan
  98+ 9511 EB               ex de,hl
  99+ 9512
 100+ 9512 73               ld (hl),e
 101+ 9513 23               inc hl
 102+ 9514 72               ld (hl),d
 103+ 9515 23               inc hl
 104+ 9516
 105+ 9516 EB               ex de,hl
 106+ 9517
 107+ 9517 CD 80 99         call NextScan
 108+ 951A EB               ex de,hl
 109+ 951B
 110+ 951B 73               ld (hl),e
 111+ 951C 23               inc hl
 112+ 951D 72               ld (hl),d
 113+ 951E 23               inc hl
 114+ 951F
 115+ 951F EB               ex de,hl
 116+ 9520
 117+ 9520 CD 80 99         call NextScan
 118+ 9523 EB               ex de,hl
 119+ 9524
 120+ 9524 73               ld (hl),e
 121+ 9525 23               inc hl
 122+ 9526 72               ld (hl),d
 123+ 9527 23               inc hl
 124+ 9528
 125+ 9528 EB               ex de,hl
 126+ 9529
 127+ 9529 CD 80 99         call NextScan
 128+ 952C EB               ex de,hl
 129+ 952D
 130+ 952D 73               ld (hl),e
 131+ 952E 23               inc hl
 132+ 952F 72               ld (hl),d
 133+ 9530 23               inc hl
 134+ 9531
 135+ 9531 EB               ex de,hl
 136+ 9532
 137+ 9532 CD 80 99         call NextScan
 138+ 9535 EB               ex de,hl
 139+ 9536
 140+ 9536 73               ld (hl),e
 141+ 9537 23               inc hl
 142+ 9538 72               ld (hl),d
 143+ 9539 23               inc hl
 144+ 953A
 145+ 953A EB               ex de,hl
 146+ 953B
 147+ 953B CD 80 99         call NextScan
 148+ 953E EB               ex de,hl
 149+ 953F
 150+ 953F 73               ld (hl),e
 151+ 9540 23               inc hl
 152+ 9541 72               ld (hl),d
 153+ 9542 23               inc hl
 154+ 9543
 155+ 9543 EB               ex de,hl
 156+ 9544
 157+ 9544 CD 80 99         call NextScan
 158+ 9547 EB               ex de,hl
 159+ 9548
 160+ 9548 73               ld (hl),e
 161+ 9549 23               inc hl
 162+ 954A 72               ld (hl),d
 163+ 954B 23               inc hl
 164+ 954C
 165+ 954C EB               ex de,hl
 166+ 954D
 167+ 954D CD 80 99         call NextScan
 168+ 9550 EB               ex de,hl
 169+ 9551
 170+ 9551 73               ld (hl),e
 171+ 9552 23               inc hl
 172+ 9553 72               ld (hl),d
 173+ 9554 23               inc hl
 174+ 9555
 175+ 9555 EB               ex de,hl
 176+ 9556
 177+ 9556 CD 80 99         call NextScan
 178+ 9559 EB               ex de,hl
 179+ 955A
 180+ 955A 73               ld (hl),e
 181+ 955B 23               inc hl
 182+ 955C 72               ld (hl),d
 183+ 955D 23               inc hl
 184+ 955E
 185+ 955E EB               ex de,hl
 186+ 955F
 187+ 955F CD 80 99         call NextScan
 188+ 9562 EB               ex de,hl
 189+ 9563
 190+ 9563 73               ld (hl),e
 191+ 9564 23               inc hl
 192+ 9565 72               ld (hl),d
 193+ 9566 23               inc hl
 194+ 9567
 195+ 9567 EB               ex de,hl
 196+ 9568
 197+ 9568 CD 80 99         call NextScan
 198+ 956B EB               ex de,hl
 199+ 956C
 200+ 956C 73               ld (hl),e
 201+ 956D 23               inc hl
 202+ 956E 72               ld (hl),d
 203+ 956F 23               inc hl
 204+ 9570
 205+ 9570 EB               ex de,hl
 206+ 9571
 207+ 9571 CD 80 99         call NextScan
 208+ 9574 EB               ex de,hl
 209+ 9575
 210+ 9575 73               ld (hl),e
 211+ 9576 23               inc hl
 212+ 9577 72               ld (hl),d
 213+ 9578 23               inc hl
 214+ 9579
 215+ 9579              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9579
 217+ 9579 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 957C
 219+ 957C              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 957C
 221+ 957C 08               ex af,af
 222+ 957D
 223+ 957D F5               push af
 224+ 957E E1               pop hl
 225+ 957F
 226+ 957F 36 10            ld (hl),16
 227+ 9581
 228+ 9581 C9               ret
 229+ 9582
 230+ 9582              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9582
 232+ 9582              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9582
 234+ 9582 3E 57            ld a,$57
 235+ 9584 94               sub h
 236+ 9585 47               ld b,a
 237+ 9586
 238+ 9586 3E DF            ld a,$df
 239+ 9588 BD               cp l
 240+ 9589 38 04            jr c,1F
 241+ 958B
 242+ 958B 3E 08            ld a,8
 243+ 958D 80               add b
 244+ 958E 47               ld b,a
 245+ 958F
 246+ 958F              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 958F              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 958F
 249+ 958F 48           1 ld c,b
 250+ 9590 0C               inc c
 251+ 9591
 252+ 9591 04               inc b
 253+ 9592 05               dec b
 254+ 9593 20 02            jr nz,3F
 255+ 9595
 256+ 9595 18 0B            jr 6F
 257+ 9597
 258+ 9597 CD 80 99     3 call NextScan
 259+ 959A EB               ex de,hl
 260+ 959B
 261+ 959B 73               ld (hl),e
 262+ 959C 23               inc hl
 263+ 959D 72               ld (hl),d
 264+ 959E 23               inc hl
 265+ 959F
 266+ 959F EB               ex de,hl
 267+ 95A0 10 F5            djnz 3B
 268+ 95A2
 269+ 95A2 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 95A6
 271+ 95A6 08           5 ex af,af
 272+ 95A7 F5               push af
 273+ 95A8 E1               pop hl
 274+ 95A9
 275+ 95A9 71               ld (hl),c
 276+ 95AA
 277+ 95AA C9               ret
 278+ 95AB
# file closed: Genera_datos_de_impresion.asm
2288  95AB              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95AB              ; -----------------------------------------------------------------------------
   2+ 95AB              ;
   3+ 95AB              ;   11/03/24
   4+ 95AB              ;
   5+ 95AB
   6+ 95AB              Pinta_Sprites
   7+ 95AB
   8+ 95AB              ;    ld hl,(Scanlines_album_SP)
   9+ 95AB              ;    call Extrae_address
  10+ 95AB
  11+ 95AB              ;    inc h
  12+ 95AB              ;    dec h
  13+ 95AB              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95AB
  15+ 95AB ED 73 08 8C      ld (Stack),sp
  16+ 95AF
  17+ 95AF EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95B0              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95B0 2C               inc l
  20+ 95B1 2C               inc l
  21+ 95B2
  22+ 95B2 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95B3
  24+ 95B3 2C               inc l
  25+ 95B4 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95B5
  27+ 95B5              ;   Seleccionamos rutina de impresión:
  28+ 95B5
  29+ 95B5 3E 10            ld a,16
  30+ 95B7 B8               cp b
  31+ 95B8 C2 B4 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95BB
  33+ 95BB              ;   Rutinas:
  34+ 95BB
  35+ 95BB              Pinta_rapido    ;   1520 t/states.
  36+ 95BB
  37+ 95BB E1               pop hl
  38+ 95BC
  39+ 95BC 1A               ld a,(de)
  40+ 95BD AE               xor (hl)
  41+ 95BE 77               ld (hl),a
  42+ 95BF 2C               inc l
  43+ 95C0 1C               inc e
  44+ 95C1 1A               ld a,(de)
  45+ 95C2 AE               xor (hl)
  46+ 95C3 77               ld (hl),a
  47+ 95C4 2C               inc l
  48+ 95C5 1C               inc e
  49+ 95C6 1A               ld a,(de)
  50+ 95C7 AE               xor (hl)
  51+ 95C8 77               ld (hl),a
  52+ 95C9 13               inc de
  53+ 95CA
  54+ 95CA E1               pop hl
  55+ 95CB
  56+ 95CB 1A               ld a,(de)
  57+ 95CC AE               xor (hl)
  58+ 95CD 77               ld (hl),a
  59+ 95CE 2C               inc l
  60+ 95CF 1C               inc e
  61+ 95D0 1A               ld a,(de)
  62+ 95D1 AE               xor (hl)
  63+ 95D2 77               ld (hl),a
  64+ 95D3 2C               inc l
  65+ 95D4 1C               inc e
  66+ 95D5 1A               ld a,(de)
  67+ 95D6 AE               xor (hl)
  68+ 95D7 77               ld (hl),a
  69+ 95D8 13               inc de
  70+ 95D9
  71+ 95D9 E1               pop hl
  72+ 95DA
  73+ 95DA 1A               ld a,(de)
  74+ 95DB AE               xor (hl)
  75+ 95DC 77               ld (hl),a
  76+ 95DD 2C               inc l
  77+ 95DE 1C               inc e
  78+ 95DF 1A               ld a,(de)
  79+ 95E0 AE               xor (hl)
  80+ 95E1 77               ld (hl),a
  81+ 95E2 2C               inc l
  82+ 95E3 1C               inc e
  83+ 95E4 1A               ld a,(de)
  84+ 95E5 AE               xor (hl)
  85+ 95E6 77               ld (hl),a
  86+ 95E7 13               inc de
  87+ 95E8
  88+ 95E8 E1               pop hl
  89+ 95E9
  90+ 95E9 1A               ld a,(de)
  91+ 95EA AE               xor (hl)
  92+ 95EB 77               ld (hl),a
  93+ 95EC 2C               inc l
  94+ 95ED 1C               inc e
  95+ 95EE 1A               ld a,(de)
  96+ 95EF AE               xor (hl)
  97+ 95F0 77               ld (hl),a
  98+ 95F1 2C               inc l
  99+ 95F2 1C               inc e
 100+ 95F3 1A               ld a,(de)
 101+ 95F4 AE               xor (hl)
 102+ 95F5 77               ld (hl),a
 103+ 95F6 13               inc de
 104+ 95F7
 105+ 95F7 E1               pop hl
 106+ 95F8
 107+ 95F8 1A               ld a,(de)
 108+ 95F9 AE               xor (hl)
 109+ 95FA 77               ld (hl),a
 110+ 95FB 2C               inc l
 111+ 95FC 1C               inc e
 112+ 95FD 1A               ld a,(de)
 113+ 95FE AE               xor (hl)
 114+ 95FF 77               ld (hl),a
 115+ 9600 2C               inc l
 116+ 9601 1C               inc e
 117+ 9602 1A               ld a,(de)
 118+ 9603 AE               xor (hl)
 119+ 9604 77               ld (hl),a
 120+ 9605 13               inc de
 121+ 9606
 122+ 9606 E1               pop hl
 123+ 9607
 124+ 9607 1A               ld a,(de)
 125+ 9608 AE               xor (hl)
 126+ 9609 77               ld (hl),a
 127+ 960A 2C               inc l
 128+ 960B 1C               inc e
 129+ 960C 1A               ld a,(de)
 130+ 960D AE               xor (hl)
 131+ 960E 77               ld (hl),a
 132+ 960F 2C               inc l
 133+ 9610 1C               inc e
 134+ 9611 1A               ld a,(de)
 135+ 9612 AE               xor (hl)
 136+ 9613 77               ld (hl),a
 137+ 9614 13               inc de
 138+ 9615
 139+ 9615 E1               pop hl
 140+ 9616
 141+ 9616 1A               ld a,(de)
 142+ 9617 AE               xor (hl)
 143+ 9618 77               ld (hl),a
 144+ 9619 2C               inc l
 145+ 961A 1C               inc e
 146+ 961B 1A               ld a,(de)
 147+ 961C AE               xor (hl)
 148+ 961D 77               ld (hl),a
 149+ 961E 2C               inc l
 150+ 961F 1C               inc e
 151+ 9620 1A               ld a,(de)
 152+ 9621 AE               xor (hl)
 153+ 9622 77               ld (hl),a
 154+ 9623 13               inc de
 155+ 9624
 156+ 9624 E1               pop hl
 157+ 9625
 158+ 9625 1A               ld a,(de)
 159+ 9626 AE               xor (hl)
 160+ 9627 77               ld (hl),a
 161+ 9628 2C               inc l
 162+ 9629 1C               inc e
 163+ 962A 1A               ld a,(de)
 164+ 962B AE               xor (hl)
 165+ 962C 77               ld (hl),a
 166+ 962D 2C               inc l
 167+ 962E 1C               inc e
 168+ 962F 1A               ld a,(de)
 169+ 9630 AE               xor (hl)
 170+ 9631 77               ld (hl),a
 171+ 9632 13               inc de
 172+ 9633
 173+ 9633 E1               pop hl
 174+ 9634
 175+ 9634 1A               ld a,(de)
 176+ 9635 AE               xor (hl)
 177+ 9636 77               ld (hl),a
 178+ 9637 2C               inc l
 179+ 9638 1C               inc e
 180+ 9639 1A               ld a,(de)
 181+ 963A AE               xor (hl)
 182+ 963B 77               ld (hl),a
 183+ 963C 2C               inc l
 184+ 963D 1C               inc e
 185+ 963E 1A               ld a,(de)
 186+ 963F AE               xor (hl)
 187+ 9640 77               ld (hl),a
 188+ 9641 13               inc de
 189+ 9642
 190+ 9642 E1               pop hl
 191+ 9643
 192+ 9643 1A               ld a,(de)
 193+ 9644 AE               xor (hl)
 194+ 9645 77               ld (hl),a
 195+ 9646 2C               inc l
 196+ 9647 1C               inc e
 197+ 9648 1A               ld a,(de)
 198+ 9649 AE               xor (hl)
 199+ 964A 77               ld (hl),a
 200+ 964B 2C               inc l
 201+ 964C 1C               inc e
 202+ 964D 1A               ld a,(de)
 203+ 964E AE               xor (hl)
 204+ 964F 77               ld (hl),a
 205+ 9650 13               inc de
 206+ 9651
 207+ 9651 E1               pop hl
 208+ 9652
 209+ 9652 1A               ld a,(de)
 210+ 9653 AE               xor (hl)
 211+ 9654 77               ld (hl),a
 212+ 9655 2C               inc l
 213+ 9656 1C               inc e
 214+ 9657 1A               ld a,(de)
 215+ 9658 AE               xor (hl)
 216+ 9659 77               ld (hl),a
 217+ 965A 2C               inc l
 218+ 965B 1C               inc e
 219+ 965C 1A               ld a,(de)
 220+ 965D AE               xor (hl)
 221+ 965E 77               ld (hl),a
 222+ 965F 13               inc de
 223+ 9660
 224+ 9660 E1               pop hl
 225+ 9661
 226+ 9661 1A               ld a,(de)
 227+ 9662 AE               xor (hl)
 228+ 9663 77               ld (hl),a
 229+ 9664 2C               inc l
 230+ 9665 1C               inc e
 231+ 9666 1A               ld a,(de)
 232+ 9667 AE               xor (hl)
 233+ 9668 77               ld (hl),a
 234+ 9669 2C               inc l
 235+ 966A 1C               inc e
 236+ 966B 1A               ld a,(de)
 237+ 966C AE               xor (hl)
 238+ 966D 77               ld (hl),a
 239+ 966E 13               inc de
 240+ 966F
 241+ 966F E1               pop hl
 242+ 9670
 243+ 9670 1A               ld a,(de)
 244+ 9671 AE               xor (hl)
 245+ 9672 77               ld (hl),a
 246+ 9673 2C               inc l
 247+ 9674 1C               inc e
 248+ 9675 1A               ld a,(de)
 249+ 9676 AE               xor (hl)
 250+ 9677 77               ld (hl),a
 251+ 9678 2C               inc l
 252+ 9679 1C               inc e
 253+ 967A 1A               ld a,(de)
 254+ 967B AE               xor (hl)
 255+ 967C 77               ld (hl),a
 256+ 967D 13               inc de
 257+ 967E
 258+ 967E E1               pop hl
 259+ 967F
 260+ 967F 1A               ld a,(de)
 261+ 9680 AE               xor (hl)
 262+ 9681 77               ld (hl),a
 263+ 9682 2C               inc l
 264+ 9683 1C               inc e
 265+ 9684 1A               ld a,(de)
 266+ 9685 AE               xor (hl)
 267+ 9686 77               ld (hl),a
 268+ 9687 2C               inc l
 269+ 9688 1C               inc e
 270+ 9689 1A               ld a,(de)
 271+ 968A AE               xor (hl)
 272+ 968B 77               ld (hl),a
 273+ 968C 13               inc de
 274+ 968D
 275+ 968D E1               pop hl
 276+ 968E
 277+ 968E 1A               ld a,(de)
 278+ 968F AE               xor (hl)
 279+ 9690 77               ld (hl),a
 280+ 9691 2C               inc l
 281+ 9692 1C               inc e
 282+ 9693 1A               ld a,(de)
 283+ 9694 AE               xor (hl)
 284+ 9695 77               ld (hl),a
 285+ 9696 2C               inc l
 286+ 9697 1C               inc e
 287+ 9698 1A               ld a,(de)
 288+ 9699 AE               xor (hl)
 289+ 969A 77               ld (hl),a
 290+ 969B 13               inc de
 291+ 969C
 292+ 969C E1               pop hl
 293+ 969D
 294+ 969D 1A               ld a,(de)
 295+ 969E AE               xor (hl)
 296+ 969F 77               ld (hl),a
 297+ 96A0 2C               inc l
 298+ 96A1 1C               inc e
 299+ 96A2 1A               ld a,(de)
 300+ 96A3 AE               xor (hl)
 301+ 96A4 77               ld (hl),a
 302+ 96A5 2C               inc l
 303+ 96A6 1C               inc e
 304+ 96A7 1A               ld a,(de)
 305+ 96A8 AE               xor (hl)
 306+ 96A9 77               ld (hl),a
 307+ 96AA 13               inc de
 308+ 96AB
 309+ 96AB ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 96AF ED 7B 08 8C      ld sp,(Stack)
 311+ 96B3 C9               ret
 312+ 96B4
 313+ 96B4              Pinta_lento
 314+ 96B4
 315+ 96B4 E1           1 pop hl
 316+ 96B5
 317+ 96B5 1A               ld a,(de)
 318+ 96B6 AE               xor (hl)
 319+ 96B7 77               ld (hl),a
 320+ 96B8 2C               inc l
 321+ 96B9 1C               inc e
 322+ 96BA 1A               ld a,(de)
 323+ 96BB AE               xor (hl)
 324+ 96BC 77               ld (hl),a
 325+ 96BD 2C               inc l
 326+ 96BE 1C               inc e
 327+ 96BF 1A               ld a,(de)
 328+ 96C0 AE               xor (hl)
 329+ 96C1 77               ld (hl),a
 330+ 96C2 13               inc de
 331+ 96C3
 332+ 96C3 10 EF            djnz 1B
 333+ 96C5
 334+ 96C5 ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96C9 ED 7B 08 8C      ld sp,(Stack)
 336+ 96CD C9               ret
# file closed: Pinta_Sprites.asm
2289  96CE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96CE              ; ******************************************************************************************************************************************************************************************
   2+ 96CE              ;
   3+ 96CE              ; 26/06/23
   4+ 96CE              ;
   5+ 96CE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96CE
   7+ 96CE              Draw
   8+ 96CE
   9+ 96CE CD 74 99     	call Prepara_draw
  10+ 96D1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96D2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96D3 28 05        	jr z,2F
  13+ 96D5
  14+ 96D5 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96D8 18 0C        	jr 1F
  16+ 96DA
  17+ 96DA 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96DD 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96E0 CD 6C 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96E3              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96E3
  22+ 96E3 CD 13 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96E6
  24+ 96E6 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96E9 CB 6F        	bit 5,a
  26+ 96EB 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96ED
  28+ 96ED CD 02 97     	call Comprueba_limite_horizontal
  29+ 96F0 CD 92 97     	call Comprueba_limite_vertical
  30+ 96F3
  31+ 96F3              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96F3              ; -----------------------
  33+ 96F3              ; -----------------------
  34+ 96F3              ; -----------------------
  35+ 96F3
  36+ 96F3 CD E8 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96F6 CD 1F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96F9
  39+ 96F9 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96FC CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96FE 32 C8 8B     	ld (Ctrl_0),a
  42+ 9701
  43+ 9701 C9           	ret
  44+ 9702
  45+ 9702              ; *******************************************************************************************************************************************************************************************
  46+ 9702              ;	21/01/23
  47+ 9702              ;
  48+ 9702              ; 	Comprueba_limite_horizontal.
  49+ 9702              ;
  50+ 9702              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9702              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9702              ;
  53+ 9702              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9702              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9702              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9702              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9702
  58+ 9702
  59+ 9702
  60+ 9702 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9705 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9707 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9709 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 970B 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 970E 18 09            jr 6F
  66+ 9710 CB 5F        1 bit 3,a
  67+ 9712 28 0A            jr z,2F
  68+ 9714 E6 F7            and $f7
  69+ 9716 32 C8 8B         ld (Ctrl_0),a
  70+ 9719 CD 6C 98     6 call Inicializacion
  71+ 971C 18 5B            jr 5F
  72+ 971E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 971F
  74+ 971F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 971F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 971F
  77+ 971F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9720 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9723 CD 6C 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9726 67           	ld h,a
  81+ 9727 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9728 CD 6C 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 972B 67           	ld h,a
  84+ 972C A7           	and a
  85+ 972D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 972F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9730 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9733 FE 02        	cp 2
  89+ 9735 38 1E        	jr c,3F
  90+ 9737 28 1C        	jr z,3F
  91+ 9739 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 973A 28 23            jr z,7F
  93+ 973C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 973E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9740 E1           	pop hl
  96+ 9741
  97+ 9741              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9741              ; _para indicar con E="2" en caso necesario.
  99+ 9741
 100+ 9741 E5               push hl
 101+ 9742 C5               push bc
 102+ 9743 CD 6C 94     	call calcula_tercio
 103+ 9746 FE 01        	cp 1
 104+ 9748 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 974A CD 7A 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 974D 28 26            jr z,9F
 107+ 974F 38 24            jr c,9F
 108+ 9751 1E 00        11 ld e,0
 109+ 9753 18 22            jr 8F
 110+ 9755 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9756 28 07        	jr z, 7F
 112+ 9758 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 975A 1E 00         	ld e,0
 114+ 975C E1           	pop hl
 115+ 975D 18 04        	jr 4F
 116+ 975F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9761 18 15            jr 10F
 118+ 9763
 119+ 9763              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9763              ; _para indicar con E="2" en caso necesario.
 121+ 9763
 122+ 9763 E5           4 push hl
 123+ 9764 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9765 CD 6C 94     	call calcula_tercio
 125+ 9768 FE 01        	cp 1
 126+ 976A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 976C CD 7A 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 976F 28 04            jr z,9F
 129+ 9771 30 02            jr nc,9F
 130+ 9773 18 02        	jr 8F
 131+ 9775 1E 02        9 ld e,2
 132+ 9777 C1           8 pop bc
 133+ 9778 E1           10 pop hl
 134+ 9779 C9           5 ret
 135+ 977A
 136+ 977A              ; --------------------
 137+ 977A              ;
 138+ 977A              ; 25/08/22
 139+ 977A
 140+ 977A CD 6C 94     Comprueba_centro call calcula_tercio
 141+ 977D 67               ld h,a
 142+ 977E 08           	ex af,af
 143+ 977F FE 02        	cp 2
 144+ 9781 38 07        	jr c,1F
 145+ 9783 28 05        	jr z,1F
 146+ 9785 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9788 18 03        	jr 2F
 148+ 978A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 978D 08           2 ex af,af
 150+ 978E A7               and a
 151+ 978F ED 42            sbc hl,bc
 152+ 9791 C9               ret
 153+ 9792
 154+ 9792              ; *********************************************************************************************************************************************************************************************
 155+ 9792              ;
 156+ 9792              ;   16/8/22
 157+ 9792              ;
 158+ 9792              ;	Comprueba_limite_vertical
 159+ 9792              ;
 160+ 9792              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9792              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9792              ;
 163+ 9792
 164+ 9792 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9795 7D           	ld a,l
 166+ 9796 E6 1F        	and $1F
 167+ 9798 57           	ld d,a
 168+ 9799 3A DE 8B     	ld a,(Limite_vertical)
 169+ 979C BA           	cp d 											; Límite - Posición.
 170+ 979D 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 979E 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97A1 CB 47        	bit 0,a
 173+ 97A3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97A5
 175+ 97A5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97A5
 177+ 97A5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97A6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97A8
 180+ 97A8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97A8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97A8
 183+ 97A8 3A BC 8B         ld a,(Coordenada_X)
 184+ 97AB 16 0F            ld d,Centro_izquierda
 185+ 97AD A7               and a
 186+ 97AE 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97AF 28 1E            jr z,3F
 188+ 97B1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97B3              ;                                                    ; _salimos sin modificar nada.
 190+ 97B3 18 0E            jr 2F
 191+ 97B5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97B6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97B8
 194+ 97B8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97B8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97B8
 197+ 97B8 3A BC 8B         ld a,(Coordenada_X)
 198+ 97BB 16 10            ld d,Centro_derecha
 199+ 97BD A7               and a
 200+ 97BE 92               sub d
 201+ 97BF 28 0E            jr z,3F
 202+ 97C1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97C3              ;                                                    ; _salimos sin modificar nada.
 204+ 97C3 CB 43        2 bit 0,e
 205+ 97C5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97C7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97C8 CD 5C 98         call Modificaccionne
 208+ 97CB C1           	pop bc
 209+ 97CC CD 6C 98         call Inicializacion
 210+ 97CF C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97D0
 212+ 97D0              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97D0
 214+ 97D0 C5           4 push bc
 215+ 97D1 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97D4 0A           	ld a,(bc)
 217+ 97D5 3D           	dec a
 218+ 97D6 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97D7 7D           	ld a,l
 220+ 97D8 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97D9 CB 47        	bit 0,a
 222+ 97DB 28 03        	jr z,5F
 223+ 97DD 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97DE 18 2E        	jr 7F
 225+ 97E0
 226+ 97E0              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97E0
 228+ 97E0 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97E1 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97E2 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97E5 CB 4F        	bit 1,a
 232+ 97E7 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97E9 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97EA
 235+ 97EA              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97EA
 237+ 97EA 1C               inc e
 238+ 97EB 1D               dec e
 239+ 97EC 20 07            jr nz,12F
 240+ 97EE 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97EF 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97F0 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97F3 18 44        13 jr 9F
 244+ 97F5 CB 43        12 bit 0,e
 245+ 97F7 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97F9              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97F9 C1           	pop bc
 248+ 97FA 18 D3        	jr 3B
 249+ 97FC 80           14 add b
 250+ 97FD 6F               ld l,a
 251+ 97FE 22 CB 8B     	ld (Posicion_actual),hl
 252+ 9801 CD 5C 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9804 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9806 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9808 32 C8 8B         ld (Ctrl_0),a
 256+ 980B F1           	pop af
 257+ 980C 18 2B        	jr 9F
 258+ 980E
 259+ 980E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 980E
 261+ 980E F5           7 push af
 262+ 980F 3A C8 8B     	ld a,(Ctrl_0)
 263+ 9812 CB 47        	bit 0,a
 264+ 9814 20 1D        	jr nz,8F
 265+ 9816 F1           	pop af
 266+ 9817
 267+ 9817              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9817
 269+ 9817 1C           	inc e
 270+ 9818 1D               dec e
 271+ 9819 20 07            jr nz,10F
 272+ 981B 90           	sub b
 273+ 981C 6F               ld l,a
 274+ 981D 22 CB 8B     	ld (Posicion_actual),hl
 275+ 9820 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9822              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9822 CB 43        10 bit 0,e
 278+ 9824 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9826              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9826 C1           	pop bc
 281+ 9827 18 A6        	jr 3B
 282+ 9829 90           16 sub b
 283+ 982A 6F               ld l,a
 284+ 982B 22 CB 8B     	ld (Posicion_actual),hl
 285+ 982E CD 5C 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9831 18 06            jr 9F
 287+ 9833 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9835 32 C8 8B         ld (Ctrl_0),a
 289+ 9838 F1           	pop af
 290+ 9839 C1           9 pop bc
 291+ 983A 1E 00        	ld e,0
 292+ 983C CD 6C 98         call Inicializacion
 293+ 983F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9840 08           	ex af,af
 295+ 9841 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9842 18 8B            jr 3B
 297+ 9844
 298+ 9844              ; --------------------
 299+ 9844
 300+ 9844 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9846 CD 8F 99     1 call PreviousScan
 302+ 9849 10 FB            djnz 1B
 303+ 984B 22 CB 8B     	ld (Posicion_actual),hl
 304+ 984E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 984F C9           	ret
 306+ 9850
 307+ 9850              ; --------------------
 308+ 9850
 309+ 9850 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9852 CD 80 99     1 call NextScan
 311+ 9855 10 FB            djnz 1B
 312+ 9857 22 CB 8B     	ld (Posicion_actual),hl
 313+ 985A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 985B C9           	ret
 315+ 985C
 316+ 985C              ; --------------------
 317+ 985C              ;
 318+ 985C              ;	22/01/23
 319+ 985C              ;
 320+ 985C              ;	E="1". Hemos cambiado de cuadrante.
 321+ 985C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 985C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 985C
 324+ 985C
 325+ 985C              Modificaccionne
 326+ 985C
 327+ 985C 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 985F FE 02        	cp 2
 329+ 9861 CC 44 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9864 DC 44 98         call c,Modifica_Pos_actual
 331+ 9867 C8           	ret z
 332+ 9868 CD 50 98         call Modifica_Pos_actual2
 333+ 986B C9               ret
 334+ 986C
 335+ 986C              ; *************************************************************************************************************************************************************************************************
 336+ 986C              ;
 337+ 986C              ;	13/8/22
 338+ 986C              ;
 339+ 986C              ;	Inicializacion
 340+ 986C              ;
 341+ 986C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 986C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 986C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 986C              ;
 345+ 986C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 986C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 986C              ;	_ desaparece/aparece.
 348+ 986C
 349+ 986C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 986C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 986C              ;
 352+ 986C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 986C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 986C              ; 		   [E] ="0"
 355+ 986C
 356+ 986C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 986C
 358+ 986C CD 6C 94     Inicializacion call calcula_tercio
 359+ 986F 28 36        	jr z,primit
 360+ 9871 E6 02        	and 2
 361+ 9873 20 07        	jr nz,segmit
 362+ 9875 7D           	ld a,l
 363+ 9876 FE 7F        	cp $7f
 364+ 9878 38 2D        	jr c,primit
 365+ 987A 28 2B        	jr z,primit
 366+ 987C CD E2 98     segmit call column
 367+ 987F 38 13        	jr c,tercuad
 368+ 9881 3E 04        cuarcuad ld a,4
 369+ 9883 32 DA 8B     	ld (Cuad_objeto),a
 370+ 9886 21 20 48     	ld hl,$4820
 371+ 9889 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 988C 21 DE 8B     	ld hl,Limite_vertical
 373+ 988F 36 0D        	ld (hl),$0d
 374+ 9891 08           	ex af,af
 375+ 9892 18 3C        	jr 1F
 376+ 9894              tercuad
 377+ 9894 3E 03        	ld a,3
 378+ 9896 32 DA 8B     	ld (Cuad_objeto),a
 379+ 9899 21 20 48     	ld hl,$4820
 380+ 989C 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 989F 21 DE 8B     	ld hl,Limite_vertical
 382+ 98A2 36 12        	ld (hl),$12
 383+ 98A4 08           	ex af,af
 384+ 98A5 18 29        	jr 1F
 385+ 98A7 CD E2 98     primit call column
 386+ 98AA 38 13        	jr c, primcuad
 387+ 98AC              segcuad
 388+ 98AC 3E 02        	ld a,2
 389+ 98AE 32 DA 8B     	ld (Cuad_objeto),a
 390+ 98B1 21 C0 4F     	ld hl,$4fc0
 391+ 98B4 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98B7 21 DE 8B     	ld hl,Limite_vertical
 393+ 98BA 36 0D        	ld (hl),$0d
 394+ 98BC 08           	ex af,af
 395+ 98BD 18 11        	jr 1F
 396+ 98BF              primcuad
 397+ 98BF 3E 01        	ld a,1
 398+ 98C1 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98C4 21 C0 4F     	ld hl,$4fc0
 400+ 98C7 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98CA 21 DE 8B     	ld hl,Limite_vertical
 402+ 98CD 36 12        	ld (hl),$12
 403+ 98CF 08           	ex af,af
 404+ 98D0
 405+ 98D0 C5           1 push bc
 406+ 98D1 E5           	push hl
 407+ 98D2 D5           	push de
 408+ 98D3
 409+ 98D3 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98D6 CD 8A 94     	call Genera_coordenadas
 411+ 98D9
 412+ 98D9 D1           	pop de
 413+ 98DA E1           	pop hl
 414+ 98DB C1           	pop bc
 415+ 98DC
 416+ 98DC 21 C8 8B     	ld hl,Ctrl_0
 417+ 98DF CB EE        	set 5,(hl)
 418+ 98E1 C9           	ret
 419+ 98E2
 420+ 98E2              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98E2
 422+ 98E2              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98E2              ;
 424+ 98E2              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98E2
 426+ 98E2 7D           column ld a,l
 427+ 98E3 E6 1F        	and $1f
 428+ 98E5 FE 10         	cp $10
 429+ 98E7 C9            	ret
 430+ 98E8
 431+ 98E8              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98E8              ;
 433+ 98E8              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98E8              ;
 435+ 98E8              ; 14/12/22
 436+ 98E8              ;
 437+ 98E8              ;	Modifica: A y BC.
 438+ 98E8
 439+ 98E8 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98EB E6 01        	and 1
 441+ 98ED 28 17        	jr z,1F
 442+ 98EF
 443+ 98EF              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98EF
 445+ 98EF 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98F2 47           	ld b,a
 447+ 98F3 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98F4 79           	ld a,c
 449+ 98F5 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98F6 38 08        	jr c,2F
 451+ 98F8 47           	ld b,a
 452+ 98F9 79           	ld a,c
 453+ 98FA 90           	sub b
 454+ 98FB 32 DB 8B     	ld (Columnas),a
 455+ 98FE 18 1B        	jr 4F
 456+ 9900 79           2 ld a,c
 457+ 9901 32 DB 8B     	ld (Columnas),a
 458+ 9904 18 15        	jr 4F
 459+ 9906
 460+ 9906              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9906
 462+ 9906 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 9909 81           	add c
 464+ 990A 3D           	dec a
 465+ 990B D6 1F        	sub $1f
 466+ 990D 38 08        	jr c,3F
 467+ 990F 47           	ld b,a
 468+ 9910 79           	ld a,c
 469+ 9911 90           	sub b
 470+ 9912 32 DB 8B     	ld (Columnas),a
 471+ 9915 18 04        	jr 4F
 472+ 9917 79           3 ld a,c
 473+ 9918 32 DB 8B     	ld (Columnas),a
 474+ 991B D9           4 exx
 475+ 991C 4F           	ld c,a
 476+ 991D D9           	exx
 477+ 991E C9            ret
 478+ 991F
 479+ 991F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 991F              ;
 481+ 991F              ;   19/7/23
 482+ 991F              ;
 483+ 991F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 991F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 991F              ;
 486+ 991F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 991F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 991F              ;
 489+ 991F              ;	DESTRUYE: HL,B Y A.
 490+ 991F
 491+ 991F 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9922 FE 02        	cp 2
 493+ 9924 38 18        	jr c,1F
 494+ 9926 28 16        	jr z,1F
 495+ 9928 E6 01        	and 1
 496+ 992A 28 0D        	jr z,3F
 497+ 992C
 498+ 992C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 992C
 500+ 992C CD 68 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 992F
 502+ 992F 7D           9 ld a,l
 503+ 9930 E6 1F        	and $1f
 504+ 9932 28 2A        	jr z,7F
 505+ 9934 2B           	dec hl
 506+ 9935 10 F8        	djnz 9B
 507+ 9937 18 25        	jr 7F
 508+ 9939
 509+ 9939              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9939
 511+ 9939 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 993C 18 20        	jr 7F
 513+ 993E
 514+ 993E 28 14        1 jr z,2F
 515+ 9940
 516+ 9940              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9940
 518+ 9940 CD 68 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9943
 520+ 9943 7D           4 ld a,l
 521+ 9944 E6 1F        	and $1f
 522+ 9946 28 03        	jr z,6F
 523+ 9948 2B           	dec hl
 524+ 9949 10 F8        	djnz 4B
 525+ 994B 06 0F        6 ld b,15
 526+ 994D CD 8F 99     5 call PreviousScan
 527+ 9950 10 FB        	djnz 5B
 528+ 9952 18 0A        	jr 7F
 529+ 9954
 530+ 9954              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9954
 532+ 9954 CD 68 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9957 06 0F        	ld b,15
 534+ 9959 CD 8F 99     8 call PreviousScan
 535+ 995C 10 FB        	djnz 8B
 536+ 995E
 537+ 995E E5           7 push hl
 538+ 995F DD E1        	pop ix
 539+ 9961
 540+ 9961 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 9964 E5           	push hl
 542+ 9965 FD E1        	pop iy
 543+ 9967
 544+ 9967 C9           	ret
 545+ 9968
 546+ 9968              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9968              ;
 548+ 9968              ;	2/1/23
 549+ 9968              ;
 550+ 9968              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9968              ;
 552+ 9968              ;	Tras esta rutina tenemos:
 553+ 9968              ;
 554+ 9968              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9968              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9968              ;
 557+ 9968              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9968
 559+ 9968 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 996B 3A DB 8B     	ld a,(Columnas)
 561+ 996E 3D           	dec a
 562+ 996F 20 01        	jr nz,1F
 563+ 9971 3C           	inc a
 564+ 9972 47           1 ld b,a
 565+ 9973 C9           	ret
 566+ 9974
 567+ 9974              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9974              ;
 569+ 9974              ;	Prepara_draw
 570+ 9974              ;
 571+ 9974              ;	Es una rutina de carga.
 572+ 9974              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9974              ;
 574+ 9974              ;	FUNCIONAMIENTO:
 575+ 9974              ;
 576+ 9974              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9974              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9974              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9974              ;
 580+ 9974              ;	DESTRUYE:
 581+ 9974              ;
 582+ 9974              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9974
 584+ 9974 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9977 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9978 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9979 4E           	ld c,(hl)
 588+ 997A 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 997D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 997F C9           	ret
 591+ 9980
 592+ 9980              ;----------------------------------------------------------------------------------------------------------------
 593+ 9980              ;
 594+ 9980              ;	5/08/22
 595+ 9980              ;
 596+ 9980              ;   NextScan.
 597+ 9980              ;
 598+ 9980              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9980              ;
 600+ 9980              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9980              ;
 602+ 9980              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9980              ;
 604+ 9980              ;       DESTRUIDOS: AF y HL !!!
 605+ 9980              ;
 606+ 9980              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9980              ;
 608+ 9980
 609+ 9980 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9981 7C               ld a,h
 611+ 9982 E6 07            and 7
 612+ 9984 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9985
 614+ 9985 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9986 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9988 6F               ld l,a
 617+ 9989 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 998A
 619+ 998A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 998B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 998D 67               ld h,a
 622+ 998E C9               ret
 623+ 998F
 624+ 998F              ;----------------------------------------------------------------------------------------------------------------
 625+ 998F              ;
 626+ 998F              ;	5/08/22
 627+ 998F              ;
 628+ 998F              ;   PreviousScan.
 629+ 998F              ;
 630+ 998F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 998F              ;
 632+ 998F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 998F              ;
 634+ 998F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 998F              ;
 636+ 998F              ;       DESTRUIDOS: AF y HL !!!
 637+ 998F              ;
 638+ 998F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 998F              ;
 640+ 998F
 641+ 998F 7C           PreviousScan ld a,h
 642+ 9990 25               dec h               ; Dec H.
 643+ 9991 E6 07            and 7
 644+ 9993 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9994
 646+ 9994 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9995 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9997 6F               ld l,a
 649+ 9998 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9999
 651+ 9999 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 999A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 999C 67               ld h,a
 654+ 999D C9               ret
 655+ 999E
 656+ 999E
 657+ 999E
 658+ 999E
 659+ 999E
 660+ 999E
 661+ 999E
 662+ 999E
 663+ 999E
 664+ 999E
 665+ 999E
 666+ 999E
# file closed: Draw_XOR.asm
2290  999E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 999E
   2+ 999E              ; ******************************************************************************************************************************************************************************************
   3+ 999E              ;
   4+ 999E              ;   20/05/23
   5+ 999E              ;
   6+ 999E              ;	Recompone_posicion_inicio
   7+ 999E              ;
   8+ 999E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 999E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 999E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 999E              ;	_ a una u otra rutina.
  12+ 999E
  13+ 999E              Recompone_posicion_inicio
  14+ 999E
  15+ 999E 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 99A1 7D           	ld a,l
  17+ 99A2 E6 1F        	and $1f
  18+ 99A4 28 16        	jr z,1F
  19+ 99A6
  20+ 99A6 FE 1F        	cp $1f
  21+ 99A8 28 0D        	jr z,3F
  22+ 99AA
  23+ 99AA 21 C7 8B     	ld hl,Ctrl_2
  24+ 99AD CB C6        	set 0,(hl)
  25+ 99AF 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 99B2 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99B5 18 08        	jr 2F
  28+ 99B7
  29+ 99B7 CD 65 9B     3 call Mov_left
  30+ 99BA 18 03        	jr 2F
  31+ 99BC
  32+ 99BC CD 42 9A     1 call Mov_right
  33+ 99BF 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99C2 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99C5 C9           	ret
  36+ 99C6
  37+ 99C6              ; ******************************************************************************************************************************************************************************************
  38+ 99C6              ;
  39+ 99C6              ;   27/05/23
  40+ 99C6              ;
  41+ 99C6              ;	Mov_down
  42+ 99C6              ;
  43+ 99C6              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99C6              ;
  45+ 99C6              ;
  46+ 99C6              Mov_down
  47+ 99C6
  48+ 99C6 CD 30 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99C9              ;																	; _ repone (Puntero_objeto).
  50+ 99C9 21 C8 8B     	ld hl,Ctrl_0
  51+ 99CC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99CE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99CE              ; 																	; _ en el caso de que no lo haya.
  54+ 99CE 3A E3 8B     	ld a,(Vel_down)
  55+ 99D1 47           	ld b,a
  56+ 99D2 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99D5 CD 6C 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99D8 E6 02        	and 2
  59+ 99DA 28 17        	jr z,1F
  60+ 99DC
  61+ 99DC              ; Nos encontramos en el último tercio de pantalla.
  62+ 99DC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99DC
  64+ 99DC 7C           	ld a,h
  65+ 99DD FE 57        	cp $57
  66+ 99DF 20 12        	jr nz,1F
  67+ 99E1
  68+ 99E1 7D           	ld a,l
  69+ 99E2 C6 20        	add $20
  70+ 99E4 30 0D        	jr nc,1F
  71+ 99E6
  72+ 99E6              ; ------------------------------
  73+ 99E6              ;
  74+ 99E6              ;	12/01/24
  75+ 99E6
  76+ 99E6              ;	call Reaparece_arriba
  77+ 99E6 CD F2 9C     	call Reinicio
  78+ 99E9
  79+ 99E9              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99E9
  81+ 99E9 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99EC CB CF        	set 1,a
  83+ 99EE 32 2E 8C     	ld (Ctrl_3),a
  84+ 99F1
  85+ 99F1 18 08        	jr 3F
  86+ 99F3              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99F3              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99F3              ; ------------------------------
  89+ 99F3
  90+ 99F3 CD 80 99     1 call NextScan
  91+ 99F6 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99F9 10 DA            djnz 2B
  93+ 99FB CD 8A 94     3 call Genera_coordenadas
  94+ 99FE C9           	ret
  95+ 99FF
  96+ 99FF              ; ******************************************************************************************************************************************************************************************
  97+ 99FF              ;
  98+ 99FF              ;   27/05/23
  99+ 99FF              ;
 100+ 99FF              ;	Mov_up
 101+ 99FF              ;
 102+ 99FF              ; 	Mueve el Sprite hacia arriba.
 103+ 99FF              ;
 104+ 99FF              ;
 105+ 99FF              Mov_up
 106+ 99FF
 107+ 99FF CD 30 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A02              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A02 21 C8 8B     	ld hl,Ctrl_0
 110+ 9A05 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A07              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A07              ; 																		; _ en el caso de que no lo haya.
 113+ 9A07 3A E2 8B     	ld a,(Vel_up)
 114+ 9A0A 47           	ld b,a
 115+ 9A0B 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 9A0E CD 6C 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A11 A7           	and a
 118+ 9A12 20 10        	jr nz,1F
 119+ 9A14
 120+ 9A14              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A14              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A14
 123+ 9A14 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A15 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A17 20 0B            jr nz,1F
 126+ 9A19 7D               ld a,l
 127+ 9A1A D6 20            sub $20
 128+ 9A1C 30 06            jr nc,1F
 129+ 9A1E 25               dec h
 130+ 9A1F
 131+ 9A1F              ; -----------------------------
 132+ 9A1F CD D3 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A22              ;	call Reinicio
 134+ 9A22              ; -----------------------------
 135+ 9A22
 136+ 9A22 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A24 CD 8F 99     1 call PreviousScan
 138+ 9A27 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A2A 10 E2            djnz 3B
 140+ 9A2C CD 8A 94     2 call Genera_coordenadas
 141+ 9A2F C9           	ret
 142+ 9A30
 143+ 9A30              ; -----------------------------
 144+ 9A30              ;
 145+ 9A30              ;	27/5/23
 146+ 9A30              ;
 147+ 9A30              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A30              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A30              ;
 150+ 9A30              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A30              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A30              ;
 153+ 9A30              ;	Modifica: A y (Puntero_objeto).
 154+ 9A30
 155+ 9A30 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A33 CB 47        	bit 0,a
 157+ 9A35 C8           	ret z
 158+ 9A36 CB 87        	res 0,a
 159+ 9A38 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A3B 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A3E 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A41 C9           	ret
 163+ 9A42
 164+ 9A42              ; ******************************************************************************************************************************************************************************************
 165+ 9A42              ;
 166+ 9A42              ;	19/10/22
 167+ 9A42              ;
 168+ 9A42              ;	Mov_right.
 169+ 9A42              ;
 170+ 9A42              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A42              ;
 172+ 9A42
 173+ 9A42 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A45 CB 77        	bit 6,a
 175+ 9A47 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A49
 177+ 9A49 CD 81 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A4C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A4D
 180+ 9A4D 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A50 CB E6        	set 4,(hl)
 182+ 9A52 18 52        	jr 8F
 183+ 9A54
 184+ 9A54 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A57 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A59              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A59              ; 																	; _ en el caso de que no lo haya.
 188+ 9A59 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A5C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A5E 20 46        	jr nz,8F
 191+ 9A60
 192+ 9A60 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A63 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A64 28 40        	jr z,8F
 195+ 9A66
 196+ 9A66              ; ---------- ---------- ----------
 197+ 9A66              ;
 198+ 9A66              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A66
 200+ 9A66 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A69 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A6B 28 11        	jr z,1F
 203+ 9A6D 38 06        	jr c,6F
 204+ 9A6F FE 04        	cp 4
 205+ 9A71 28 14        	jr z,7F
 206+ 9A73 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A75
 208+ 9A75              ; ---------- ---------- ----------
 209+ 9A75              ;
 210+ 9A75              ; Perfiles de velocidad
 211+ 9A75              ;
 212+ 9A75
 213+ 9A75 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A78 FE FE        	cp $fe
 215+ 9A7A 20 2A        	jr nz,8F
 216+ 9A7C 18 10        	jr 3F
 217+ 9A7E 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A81 FE FD        	cp $fd
 219+ 9A83 20 21        	jr nz,8F
 220+ 9A85 18 07        	jr 3F
 221+ 9A87 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A8A FE FB        	cp $fb
 223+ 9A8C 20 18        	jr nz,8F
 224+ 9A8E
 225+ 9A8E              ; ---------- ---------- ----------
 226+ 9A8E
 227+ 9A8E              3
 228+ 9A8E CD C1 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A91              ;	call Reinicio
 230+ 9A91
 231+ 9A91              ; ---------- ---------- ----------
 232+ 9A91              ;
 233+ 9A91              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A91
 235+ 9A91 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A93 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A94 CD AD 9A     	call DESPLZ_DER
 238+ 9A97 C1           	pop bc
 239+ 9A98 10 F9        	djnz 5B
 240+ 9A9A 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A9D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A9E 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9AA1 CD 8A 94     	call Genera_coordenadas
 244+ 9AA4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AA6
 246+ 9AA6              ; ---------- ---------- ----------
 247+ 9AA6
 248+ 9AA6 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9AA9 CD AD 9A     	call DESPLZ_DER
 250+ 9AAC C9           2 ret
 251+ 9AAD
 252+ 9AAD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AAD              ;
 254+ 9AAD              ;	22/9/22
 255+ 9AAD              ;
 256+ 9AAD
 257+ 9AAD CD BC 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AB0 CD 08 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AB3 CD 31 9B         call Ciclo_completo
 260+ 9AB6 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AB9 CB FE        	set 7,(hl)
 262+ 9ABB C9           	ret
 263+ 9ABC
 264+ 9ABC              ; ******************************************************************************************************************************************************************************************
 265+ 9ABC              ;	15/02/23
 266+ 9ABC              ;
 267+ 9ABC
 268+ 9ABC 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9ABF 47           	ld b,a
 270+ 9AC0 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AC3 23           1 inc hl
 272+ 9AC4 23           	inc hl
 273+ 9AC5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AC7 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9ACA CD 6B 90     	call Extrae_address
 276+ 9ACD 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9AD0
 278+ 9AD0              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AD0
 280+ 9AD0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AD0              ; Cuántos movimientos hemos hecho ??
 282+ 9AD0              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AD0
 284+ 9AD0 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AD3 EB           	ex de,hl
 286+ 9AD4 A7           	and a
 287+ 9AD5 ED 52        	sbc hl,de
 288+ 9AD7 CB 3D        	srl l
 289+ 9AD9 3E 08        6 ld a,8
 290+ 9ADB 95           	sub l
 291+ 9ADC 30 1E        	jr nc,3F
 292+ 9ADE
 293+ 9ADE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9ADE              ; B="0".
 295+ 9ADE
 296+ 9ADE 04           4 inc b
 297+ 9ADF 3C           	inc a
 298+ 9AE0 20 FC        	jr nz,4B
 299+ 9AE2 78           	ld a,b
 300+ 9AE3 08           	ex af,af
 301+ 9AE4 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AE7 23           5 inc hl
 303+ 9AE8 23           	inc hl
 304+ 9AE9 10 FC        	djnz 5B
 305+ 9AEB 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AEE CD 6B 90     	call Extrae_address
 307+ 9AF1 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AF4
 309+ 9AF4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AF4              ; _(Posicion_actual).
 311+ 9AF4
 312+ 9AF4 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AF7 34           	inc (hl)
 314+ 9AF8 08               ex af,af
 315+ 9AF9 6F           	ld l,a
 316+ 9AFA 18 DD        	jr 6B
 317+ 9AFC
 318+ 9AFC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AFC
 320+ 9AFC 47           3 ld b,a
 321+ 9AFD 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B00 23           2 inc hl
 323+ 9B01 23           	inc hl
 324+ 9B02 10 FC        	djnz 2B
 325+ 9B04 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B07 C9           8 ret
 327+ 9B08
 328+ 9B08              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B08              ;
 330+ 9B08              ;	24/7/22
 331+ 9B08              ;
 332+ 9B08              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B08              ;
 334+ 9B08              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B08              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B08              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B08
 338+ 9B08 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B0B A7           	and a
 340+ 9B0C 20 1F        	jr nz,1F
 341+ 9B0E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B10 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B13
 344+ 9B13 21 CA 8B     	ld hl,Columns
 345+ 9B16 34           	inc (hl)
 346+ 9B17 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B1A E6 01        	and 1
 348+ 9B1C 28 0F        	jr z,1F
 349+ 9B1E 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B21 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B22 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B25 CD 8A 94     	call Genera_coordenadas
 353+ 9B28 CD 8D 9C     	call Inc_CTRL_DESPLZ
 354+ 9B2B 18 03        	jr 2F
 355+ 9B2D CD 8D 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B30 C9           2 ret
 357+ 9B31
 358+ 9B31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B31              ;
 360+ 9B31              ;	24/7/22
 361+ 9B31              ;
 362+ 9B31              ;	Ciclo_completo.
 363+ 9B31              ;
 364+ 9B31              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B31              ;
 366+ 9B31              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B31              ; 	Decrementamos (Columns).
 368+ 9B31              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B31              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B31
 371+ 9B31
 372+ 9B31 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B34 FE FF        	cp $ff
 374+ 9B36 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B38 E6 F0        	and $f0
 376+ 9B3A 20 28        	jr nz,3F
 377+ 9B3C
 378+ 9B3C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B3C
 380+ 9B3C 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B3F 47           	ld b,a
 382+ 9B40 3E F8        	ld a,$f8
 383+ 9B42 80           	add b
 384+ 9B43 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B46 18 1C        	jr 3F
 386+ 9B48 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B4B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B4C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B4D 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B50 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B53 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B55 20 0A        	jr nz,2F
 393+ 9B57 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B5A 23           	inc hl
 395+ 9B5B 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B5E CD 8A 94     	call Genera_coordenadas
 397+ 9B61
 398+ 9B61              ; Inicia el puntero de Sprite.
 399+ 9B61
 400+ 9B61 CD 80 90     2 call Inicia_puntero_objeto_der
 401+ 9B64 C9           3 ret
 402+ 9B65
 403+ 9B65              ; ******************************************************************************************************************************************************************************************
 404+ 9B65              ;
 405+ 9B65              ;	15/02/23
 406+ 9B65              ;
 407+ 9B65              ;	Mov_left.
 408+ 9B65              ;
 409+ 9B65              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B65              ;
 411+ 9B65              Mov_left
 412+ 9B65
 413+ 9B65 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B68 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B6A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B6A              ; 																	; _ en el caso de que no lo haya.
 417+ 9B6A 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B6D CB 77        	bit 6,a
 419+ 9B6F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B71
 421+ 9B71 CD 87 9C     	call Stop_Amadeus_left
 422+ 9B74 C8           	ret z
 423+ 9B75 20 4A        	jr nz,8F
 424+ 9B77
 425+ 9B77 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B7A A7           	and a
 427+ 9B7B 20 44        	jr nz,8F
 428+ 9B7D
 429+ 9B7D 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B80 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B81 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B83
 433+ 9B83              ; ---------- ---------- ----------
 434+ 9B83
 435+ 9B83 3A E0 8B     	ld a,(Vel_left)
 436+ 9B86 FE 02        	cp 2
 437+ 9B88 28 0F        	jr z,1F
 438+ 9B8A 38 04        	jr c,6F
 439+ 9B8C FE 04        	cp 4
 440+ 9B8E 28 12        	jr z,7F
 441+ 9B90
 442+ 9B90              ; ---------- ---------- ----------
 443+ 9B90
 444+ 9B90 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B93 FE F8        	cp $f8
 446+ 9B95 20 2A        	jr nz,8F
 447+ 9B97 18 10        	jr 4F
 448+ 9B99 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B9C FE F9        	cp $f9
 450+ 9B9E 20 21        	jr nz,8F
 451+ 9BA0 18 07        	jr 4F
 452+ 9BA2 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BA5 FE FB        	cp $fb
 454+ 9BA7 20 18        	jr nz,8F
 455+ 9BA9
 456+ 9BA9              ; ---------- ---------- ----------
 457+ 9BA9
 458+ 9BA9              4
 459+ 9BA9 CD AF 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BAC              ;	call Reinicio
 461+ 9BAC
 462+ 9BAC              ; ---------- ---------- ----------
 463+ 9BAC
 464+ 9BAC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BAE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BAF
 467+ 9BAF              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BAF              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BAF
 470+ 9BAF CD C8 9B     	call DESPLZ_IZQ
 471+ 9BB2 C1           	pop bc
 472+ 9BB3 10 F9        	djnz 5B
 473+ 9BB5 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BB8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BB9 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BBC CD 8A 94     	call Genera_coordenadas
 477+ 9BBF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BC1
 479+ 9BC1              ; ---------- ---------- ----------
 480+ 9BC1
 481+ 9BC1              ; Movemos, no hay recolocación.
 482+ 9BC1
 483+ 9BC1 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BC4 CD C8 9B     	call DESPLZ_IZQ
 485+ 9BC7 C9           2 ret
 486+ 9BC8
 487+ 9BC8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BC8              ;
 489+ 9BC8              ;	22/9/22
 490+ 9BC8
 491+ 9BC8              DESPLZ_IZQ
 492+ 9BC8
 493+ 9BC8 CD D7 9B     	call Desplaza_izquierda
 494+ 9BCB CD 23 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BCE CD 4B 9C     	call Ciclo_completo_2
 496+ 9BD1 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BD4 CB BE        	res 7,(hl)
 498+ 9BD6 C9           	ret
 499+ 9BD7
 500+ 9BD7              Desplaza_izquierda
 501+ 9BD7
 502+ 9BD7 3A E0 8B     	ld a,(Vel_left)
 503+ 9BDA 47           	ld b,a
 504+ 9BDB 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BDE 23           1 inc hl
 506+ 9BDF 23           	inc hl
 507+ 9BE0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BE2 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BE5 CD 6B 90     	call Extrae_address
 510+ 9BE8 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BEB
 512+ 9BEB              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BEB
 514+ 9BEB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BEB              ; Cuántos movimientos hemos hecho ??
 516+ 9BEB              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BEB
 518+ 9BEB 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BEE EB           	ex de,hl
 520+ 9BEF A7           	and a
 521+ 9BF0 ED 52        	sbc hl,de
 522+ 9BF2 CB 3D        	srl l
 523+ 9BF4 3E 08        6 ld a,8
 524+ 9BF6 95           	sub l
 525+ 9BF7 30 1E        	jr nc,3F
 526+ 9BF9
 527+ 9BF9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BF9              ; B="0".
 529+ 9BF9
 530+ 9BF9 04           4 inc b
 531+ 9BFA 3C           	inc a
 532+ 9BFB 20 FC        	jr nz,4B
 533+ 9BFD 78           	ld a,b
 534+ 9BFE 08           	ex af,af
 535+ 9BFF 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C02 23           5 inc hl
 537+ 9C03 23           	inc hl
 538+ 9C04 10 FC        	djnz 5B
 539+ 9C06 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C09 CD 6B 90     	call Extrae_address
 541+ 9C0C 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9C0F
 543+ 9C0F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C0F              ; _(Posicion_actual).
 545+ 9C0F
 546+ 9C0F 21 CB 8B     	ld hl,Posicion_actual
 547+ 9C12 35           	dec (hl)
 548+ 9C13 08           	ex af,af
 549+ 9C14 6F           	ld l,a
 550+ 9C15 18 DD        	jr 6B
 551+ 9C17
 552+ 9C17              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C17
 554+ 9C17 47           3 ld b,a
 555+ 9C18 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C1B 23           2 inc hl
 557+ 9C1C 23           	inc hl
 558+ 9C1D 10 FC        	djnz 2B
 559+ 9C1F 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C22 C9           8 ret
 561+ 9C23
 562+ 9C23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C23              ;
 564+ 9C23              ;	modifica_parametros_1er_DESPLZ
 565+ 9C23              ;
 566+ 9C23              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C23              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C23              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C23
 570+ 9C23 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C26 A7           	and a
 572+ 9C27 20 1E        	jr nz,1F
 573+ 9C29 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C2A 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C2D 21 CA 8B     	ld hl,Columns
 576+ 9C30 34           	inc (hl)
 577+ 9C31 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C34 E6 01        	and 1
 579+ 9C36 20 0F        	jr nz,1F
 580+ 9C38 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C3B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C3C 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C3F CD 8A 94     	call Genera_coordenadas
 584+ 9C42 CD 9E 9C     	call Dec_CTRL_DESPLZ
 585+ 9C45 18 03        	jr 2F
 586+ 9C47 CD 9E 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C4A C9           2 ret
 588+ 9C4B
 589+ 9C4B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C4B
 591+ 9C4B 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C4E FE F7        	cp $f7
 593+ 9C50 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C52 30 2C        	jr nc,3F
 595+ 9C54
 596+ 9C54              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C54
 598+ 9C54 06 00        	ld b,0
 599+ 9C56 04           4 inc b
 600+ 9C57 3C           	inc a
 601+ 9C58 FE F7        	cp $f7
 602+ 9C5A 20 FA        	jr nz,4B
 603+ 9C5C 3E FF        	ld a,$ff
 604+ 9C5E 90           	sub b
 605+ 9C5F 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C62 18 1C        	jr 3F
 607+ 9C64
 608+ 9C64              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C64
 610+ 9C64 21 CA 8B     1 ld hl,Columns
 611+ 9C67 35           	dec (hl)
 612+ 9C68 AF           	xor a
 613+ 9C69 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C6C 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C6F E6 01        	and 1
 616+ 9C71 28 0A        	jr z,2F
 617+ 9C73 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C76 2B           	dec hl
 619+ 9C77 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C7A CD 8A 94     	call Genera_coordenadas
 621+ 9C7D
 622+ 9C7D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C7D
 624+ 9C7D CD 93 90     2 call Inicia_puntero_objeto_izq
 625+ 9C80 C9           3 ret
 626+ 9C81
 627+ 9C81              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C81              ;
 629+ 9C81              ;	19/10/22
 630+ 9C81              ;
 631+ 9C81              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C81              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C81
 634+ 9C81 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C84 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C86 C9           	ret
 637+ 9C87
 638+ 9C87              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C87              ;
 640+ 9C87              ;	19/10/22
 641+ 9C87              ;
 642+ 9C87              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C87              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C87
 645+ 9C87 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C8A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C8C C9           	ret
 648+ 9C8D
 649+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C8D              ;
 651+ 9C8D              ;	24/7/22
 652+ 9C8D              ;
 653+ 9C8D              ;	Inc_CTRL_DESPLZ
 654+ 9C8D              ;
 655+ 9C8D              ;
 656+ 9C8D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C8D
 658+ 9C8D 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C90 3A E1 8B     	ld a,(Vel_right)
 660+ 9C93 A7           	and a
 661+ 9C94 28 06        	jr z,1F
 662+ 9C96 47           	ld b,a
 663+ 9C97 34           3 inc (hl)
 664+ 9C98 10 FD        	djnz 3B
 665+ 9C9A 18 01        	jr 2F
 666+ 9C9C 34           1 inc (hl)
 667+ 9C9D C9           2 ret
 668+ 9C9E
 669+ 9C9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C9E              ;
 671+ 9C9E              ;	5/2/23
 672+ 9C9E              ;
 673+ 9C9E              ;	Dec_CTRL_DESPLZ
 674+ 9C9E              ;
 675+ 9C9E              ;
 676+ 9C9E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C9E
 678+ 9C9E 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CA1 3A E0 8B     	ld a,(Vel_left)
 680+ 9CA4 A7           	and a
 681+ 9CA5 28 06        	jr z,1F
 682+ 9CA7 47           	ld b,a
 683+ 9CA8 35           3 dec (hl)
 684+ 9CA9 10 FD        	djnz 3B
 685+ 9CAB 18 01        	jr 2F
 686+ 9CAD 35           1 dec (hl)
 687+ 9CAE C9           2 ret
 688+ 9CAF
 689+ 9CAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CAF
 691+ 9CAF 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CB2 01 1F 00     	ld bc,31
 693+ 9CB5 A7           	and a
 694+ 9CB6 ED 4A        	adc hl,bc
 695+ 9CB8 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CBB 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CBE CB C6        	set 0,(hl)
 698+ 9CC0 C9           	ret
 699+ 9CC1
 700+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CC1
 702+ 9CC1 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CC4 01 1F 00     	ld bc,31
 704+ 9CC7 A7           	and a
 705+ 9CC8 ED 42        	sbc hl,bc
 706+ 9CCA 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CCD 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CD0 CB CE        	set 1,(hl)
 709+ 9CD2 C9           	ret
 710+ 9CD3
 711+ 9CD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CD3
 713+ 9CD3 24           Reaparece_abajo inc h
 714+ 9CD4 01 E0 17     	ld bc,$17e0
 715+ 9CD7 A7           	and a
 716+ 9CD8 ED 4A        	adc hl,bc
 717+ 9CDA 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CDD 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CE0 CB D6        	set 2,(hl)
 720+ 9CE2 C9           	ret
 721+ 9CE3
 722+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CE3
 724+ 9CE3 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CE6 A7           	and a
 726+ 9CE7 ED 42        	sbc hl,bc
 727+ 9CE9 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CEC 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CEF CB DE        	set 3,(hl)
 730+ 9CF1 C9           	ret
 731+ 9CF2
 732+ 9CF2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CF2              ;
 734+ 9CF2              ;	15/07/23
 735+ 9CF2
 736+ 9CF2              Reinicio
 737+ 9CF2
 738+ 9CF2              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CF2
 740+ 9CF2 AF           	xor a
 741+ 9CF3 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CF6 CD 14 9D     	call Limpia_contenido_hl
 743+ 9CF9
 744+ 9CF9 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CFC CD 14 9D     	call Limpia_contenido_hl
 746+ 9CFF
 747+ 9CFF CD 6C 92     	call Inicializa_Puntero_indice_mov
 748+ 9D02 CD 13 9E     	call Inicia_Puntero_mov
 749+ 9D05
 750+ 9D05 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9D08 06 05        	ld b,5
 752+ 9D0A 77           1 ld (hl),a
 753+ 9D0B 23           	inc hl
 754+ 9D0C 10 FC        	djnz 1B
 755+ 9D0E
 756+ 9D0E 21 C7 8B     	ld hl,Ctrl_2
 757+ 9D11 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D13
 759+ 9D13 C9           	ret
 760+ 9D14
 761+ 9D14 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D15 23           	inc hl
 763+ 9D16 77           	ld (hl),a
 764+ 9D17 C9           	ret
 765+ 9D18
 766+ 9D18              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D18              ;
 768+ 9D18              ;	18/6/24
 769+ 9D18              ;
 770+ 9D18
 771+ 9D18              Amadeus_a_izquierda
 772+ 9D18
 773+ 9D18              ;	Actualiza contador de movimientos.
 774+ 9D18
 775+ 9D18 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D1B 35           	dec (hl)
 777+ 9D1C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D1E
 779+ 9D1E 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D21 2B           	dec hl
 781+ 9D22 2B           	dec hl
 782+ 9D23 2B           	dec hl
 783+ 9D24 2B           	dec hl
 784+ 9D25 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D28
 786+ 9D28 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D2B CB EE        	set 5,(hl)
 788+ 9D2D
 789+ 9D2D C9           	ret
 790+ 9D2E
 791+ 9D2E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D2F C9           	ret
 793+ 9D30
 794+ 9D30
 795+ 9D30              Amadeus_a_derecha
 796+ 9D30
 797+ 9D30              ;	Actualiza contador de movimientos.
 798+ 9D30
 799+ 9D30 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D33 34           	inc (hl)
 801+ 9D34 3E 7A        	ld a,$7a
 802+ 9D36 BE           	cp (hl)
 803+ 9D37 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D39
 805+ 9D39 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D3C 23           	inc hl
 807+ 9D3D 23           	inc hl
 808+ 9D3E 23           	inc hl
 809+ 9D3F 23           	inc hl
 810+ 9D40 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D43
 812+ 9D43 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D46 CB EE        	set 5,(hl)
 814+ 9D48 C9           	ret
 815+ 9D49
 816+ 9D49 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D4A C9           	ret
# file closed: Direcciones.asm
2291  9D4B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D4B              ; ----- ----- ----- ----- -----
   2+ 9D4B              ;
   3+ 9D4B              ;   28/12/23
   4+ 9D4B
   5+ 9D4B              Movimiento
   6+ 9D4B
   7+ 9D4B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D4B
   9+ 9D4B 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D4E CB 57            bit 2,a
  11+ 9D50 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D52
  13+ 9D52 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D55 7E               ld a,(hl)
  15+ 9D56
  16+ 9D56              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D56
  18+ 9D56              Inicia_desplazamiento.
  19+ 9D56
  20+ 9D56              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D56
  22+ 9D56 CD 49 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D59
  24+ 9D59              ; Iniciamos (Repetimos_mov).
  25+ 9D59
  26+ 9D59 7E               ld a,(hl)
  27+ 9D5A E6 0F            and $0f
  28+ 9D5C 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D5F 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D62
  31+ 9D62              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D62
  33+ 9D62 23               inc hl
  34+ 9D63 7E               ld a,(hl)
  35+ 9D64 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D67 2B               dec hl
  37+ 9D68
  38+ 9D68 21 C7 8B         ld hl,Ctrl_2
  39+ 9D6B CB D6            set 2,(hl)
  40+ 9D6D
  41+ 9D6D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D6D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D6D
  44+ 9D6D              Desplazamiento_iniciado
  45+ 9D6D
  46+ 9D6D CD 1D 9E         call Aplica_desplazamiento
  47+ 9D70
  48+ 9D70              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D70
  50+ 9D70 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D73 CB 4F            bit 1,a
  52+ 9D75 C0               ret nz
  53+ 9D76
  54+ 9D76 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D79 35               dec (hl)
  56+ 9D7A C0               ret nz
  57+ 9D7B
  58+ 9D7B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D7B              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D7B              ; Analiza (Cola_de_desplazamiento).
  61+ 9D7B
  62+ 9D7B 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D7E A7               and a
  64+ 9D7F CC 72 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D82 28 30            jr z,Reinicia_el_movimiento
  66+ 9D84
  67+ 9D84 FE FF            cp $ff
  68+ 9D86 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D88
  70+ 9D88 FE FE            cp $fe
  71+ 9D8A CC F7 9D         call z,Fijamos_bucle
  72+ 9D8D 28 25            jr z,Reinicia_el_movimiento
  73+ 9D8F
  74+ 9D8F FE FD            cp $fd
  75+ 9D91 20 11            jr nz,1F
  76+ 9D93
  77+ 9D93              ; ---
  78+ 9D93              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D93
  80+ 9D93 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D96 CB 5F            bit 3,a
  82+ 9D98 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D9A
  84+ 9D9A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D9A
  86+ 9D9A 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D9D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D9F
  89+ 9D9F CD 08 9E         call Inicia_Repetimos_movimiento
  90+ 9DA2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DA4              ; ---
  92+ 9DA4
  93+ 9DA4 FE 01        1 cp 1
  94+ 9DA6 CA E1 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DA9
  96+ 9DA9 3D               dec a
  97+ 9DAA 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9DAD
  99+ 9DAD 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DB0 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DB3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DB3 C9               ret
 103+ 9DB4
 104+ 9DB4              Reinicia_el_movimiento
 105+ 9DB4
 106+ 9DB4 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DB7 CB 5F            bit 3,a
 108+ 9DB9 28 1B            jr z,2F
 109+ 9DBB
 110+ 9DBB              ; (Cola_de_desplazamiento)="254".
 111+ 9DBB
 112+ 9DBB 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DBE 35               dec (hl)
 114+ 9DBF 20 15            jr nz,2F
 115+ 9DC1
 116+ 9DC1              ; Fin de las repeticiones del último movimiento.
 117+ 9DC1
 118+ 9DC1 21 C7 8B         ld hl,Ctrl_2
 119+ 9DC4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DC6
 121+ 9DC6 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DC9 23               inc hl
 123+ 9DCA 23               inc hl
 124+ 9DCB 23               inc hl
 125+ 9DCC 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DCF              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DCF 7E               ld a,(hl)
 128+ 9DD0 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DD3
 130+ 9DD3 C3 7B 9D         jp Cola
 131+ 9DD6
 132+ 9DD6 CD 13 9E     2 call Inicia_Puntero_mov
 133+ 9DD9
 134+ 9DD9 21 C7 8B         ld hl,Ctrl_2
 135+ 9DDC CB 96            res 2,(hl)
 136+ 9DDE
 137+ 9DDE C3 4B 9D         jp Movimiento
 138+ 9DE1
 139+ 9DE1              Siguiente_desplazamiento
 140+ 9DE1
 141+ 9DE1              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DE1              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DE1
 144+ 9DE1 21 C7 8B         ld hl,Ctrl_2
 145+ 9DE4 CB 96            res 2,(hl)
 146+ 9DE6
 147+ 9DE6 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DE9 23               inc hl
 149+ 9DEA 23               inc hl
 150+ 9DEB 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DEE
 152+ 9DEE 7E               ld a,(hl)
 153+ 9DEF A7               and a
 154+ 9DF0 CC 72 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DF3 CA B4 9D         jp z,Reinicia_el_movimiento
 156+ 9DF6
 157+ 9DF6 C9               ret
 158+ 9DF7
 159+ 9DF7              ; Subrutinas -----------------------------------------
 160+ 9DF7              ; ---------- --------- --------- ---------- ----------
 161+ 9DF7              ;
 162+ 9DF7              ;   24/07/23
 163+ 9DF7              ;
 164+ 9DF7              ;   Fijamos_bucle
 165+ 9DF7              ;
 166+ 9DF7              ;
 167+ 9DF7
 168+ 9DF7              Fijamos_bucle
 169+ 9DF7
 170+ 9DF7 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DFA 3C               inc a
 172+ 9DFB 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DFE
 174+ 9DFE CD 72 9E         call Incrementa_Puntero_indice_mov
 175+ 9E01 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9E04 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E07 C9               ret
 178+ 9E08
 179+ 9E08              ; ---------- --------- --------- ---------- ----------
 180+ 9E08              ;
 181+ 9E08              ;   07/7/23
 182+ 9E08              ;
 183+ 9E08              ;   Inicia_Repetimos_movimiento
 184+ 9E08              ;
 185+ 9E08              ;
 186+ 9E08
 187+ 9E08              Inicia_Repetimos_movimiento
 188+ 9E08
 189+ 9E08              ; Iniciamos (Repetimos_movimiento).
 190+ 9E08
 191+ 9E08 DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9E0C DD 7E 02         ld a,(ix+2)
 193+ 9E0F 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9E12
 195+ 9E12 C9               ret
 196+ 9E13
 197+ 9E13              ; ---------- --------- --------- ---------- ----------
 198+ 9E13              ;
 199+ 9E13              ;   26/6/23
 200+ 9E13              ;
 201+ 9E13              ;   Inicia_Puntero_mov
 202+ 9E13              ;
 203+ 9E13              ;
 204+ 9E13
 205+ 9E13 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E16 CD 6B 90         call Extrae_address
 207+ 9E19 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E1C C9               ret
 209+ 9E1D
 210+ 9E1D              ; ---------- --------- --------- ---------- ----------
 211+ 9E1D              ;
 212+ 9E1D              ;   27/06/23
 213+ 9E1D              ;
 214+ 9E1D              ;   Aplica_movimiento.
 215+ 9E1D
 216+ 9E1D              Aplica_desplazamiento
 217+ 9E1D
 218+ 9E1D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E1D
 220+ 9E1D 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E20
 222+ 9E20 7E               ld a,(hl)
 223+ 9E21 E6 F0            and $f0
 224+ 9E23 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E24
 226+ 9E24 CB 7E            bit 7,(hl)
 227+ 9E26 28 03            jr z,1F
 228+ 9E28 CD FF 99         call Mov_up
 229+ 9E2B 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E2E CB 76            bit 6,(hl)
 231+ 9E30 28 03            jr z,2F
 232+ 9E32 CD C6 99         call Mov_down
 233+ 9E35
 234+ 9E35              ; Se ha aplicado reinicio ???
 235+ 9E35              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E35
 237+ 9E35              ;    ld a,(Ctrl_3)
 238+ 9E35              ;    bit 1,a
 239+ 9E35              ;    ret nz
 240+ 9E35
 241+ 9E35 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E38 CB 6E            bit 5,(hl)
 243+ 9E3A 28 03            jr z,3F
 244+ 9E3C CD 65 9B         call Mov_left
 245+ 9E3F 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E42 CB 66            bit 4,(hl)
 247+ 9E44 C8               ret z
 248+ 9E45 CD 42 9A         call Mov_right
 249+ 9E48 C9               ret
 250+ 9E49
 251+ 9E49              ; ---------- --------- --------- ---------- ----------
 252+ 9E49              ;
 253+ 9E49              ;   26/06/23
 254+ 9E49              ;
 255+ 9E49              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E49
 257+ 9E49              Ajusta_velocidad_desplazamiento
 258+ 9E49
 259+ 9E49              ; 1er byte de la cadena de movimiento.
 260+ 9E49              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E49
 262+ 9E49 CD 67 9E         call Extrae_nibble_alto
 263+ 9E4C
 264+ 9E4C 32 E2 8B         ld (Vel_up),a
 265+ 9E4F 79               ld a,c
 266+ 9E50 E6 0F            and $0f
 267+ 9E52 32 E3 8B         ld (Vel_down),a
 268+ 9E55
 269+ 9E55              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E55              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E55
 272+ 9E55 23               inc hl
 273+ 9E56 CD 67 9E         call Extrae_nibble_alto
 274+ 9E59
 275+ 9E59 32 E0 8B         ld (Vel_left),a
 276+ 9E5C 79               ld a,c
 277+ 9E5D E6 0F            and $0f
 278+ 9E5F 32 E1 8B         ld (Vel_right),a
 279+ 9E62
 280+ 9E62              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E62
 282+ 9E62 23               inc hl
 283+ 9E63 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E66 C9               ret
 285+ 9E67
 286+ 9E67 06 04        Extrae_nibble_alto ld b,4
 287+ 9E69 7E               ld a,(hl)
 288+ 9E6A 4F               ld c,a
 289+ 9E6B E6 F0            and $f0
 290+ 9E6D CB 3F        1 srl a
 291+ 9E6F 10 FC            djnz 1B
 292+ 9E71 C9               ret
 293+ 9E72
 294+ 9E72              ; ---------- --------- --------- ---------- ----------
 295+ 9E72              ;
 296+ 9E72              ;   5/7/23
 297+ 9E72              ;
 298+ 9E72              ;   Incrementa_Puntero_indice_mov
 299+ 9E72
 300+ 9E72              Incrementa_Puntero_indice_mov
 301+ 9E72
 302+ 9E72 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E75 34               inc (hl)
 304+ 9E76
 305+ 9E76 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E79 01 02 00         ld bc,2
 307+ 9E7C A7               and a
 308+ 9E7D 09               add hl,bc
 309+ 9E7E 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E81
 311+ 9E81 7E               ld a,(hl)
 312+ 9E82 A7               and a
 313+ 9E83
 314+ 9E83              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E83
 316+ 9E83              ;    jr z,$
 317+ 9E83
 318+ 9E83              ;! Reinicia el Patrón de movimiento.
 319+ 9E83
 320+ 9E83 CC 88 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E86
 322+ 9E86 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E87
 324+ 9E87 C9               ret
 325+ 9E88
 326+ 9E88              ; ---------- --------- --------- ---------- ----------
 327+ 9E88              ;
 328+ 9E88              ;   15/01/24
 329+ 9E88              ;
 330+ 9E88              ;   Inicializa_Puntero_indice_mov
 331+ 9E88
 332+ 9E88              Inicializa_Puntero_indice_mov_2
 333+ 9E88
 334+ 9E88              ; Existe etiqueta de bucle principal???
 335+ 9E88
 336+ 9E88 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E8B 24               inc h
 338+ 9E8C 25               dec h
 339+ 9E8D 28 05            jr z,2F
 340+ 9E8F
 341+ 9E8F 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E92 18 14            jr 3F
 343+ 9E94
 344+ 9E94              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E94
 346+ 9E94 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E97 47               ld b,a
 348+ 9E98
 349+ 9E98 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E9B 2B           1 dec hl
 351+ 9E9C 2B               dec hl
 352+ 9E9D 10 FC            djnz 1B
 353+ 9E9F 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9EA2
 355+ 9EA2 AF               xor a
 356+ 9EA3 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9EA6 18 06            jr 4F
 358+ 9EA8
 359+ 9EA8 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EAB 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9EAE C9           4 ret
 362+ 9EAF
 363+ 9EAF              ; ----------------------------------------------------------------------
 364+ 9EAF              ;
 365+ 9EAF              ;   30/01/24
 366+ 9EAF              ;
 367+ 9EAF              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EAF
 369+ 9EAF 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EB2 CD 07 94         call Calcula_salto_en_BC
 371+ 9EB5 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EB8 A7               and a
 373+ 9EB9 ED 4A            adc hl,bc
 374+ 9EBB C9               ret
 375+ 9EBC
 376+ 9EBC              ; ----------------------------------------------------------------------
 377+ 9EBC              ;
 378+ 9EBC              ;   30/01/24
 379+ 9EBC              ;
 380+ 9EBC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EBC              ;
 382+ 9EBC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EBC
 384+ 9EBC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EBD 23               inc hl
 386+ 9EBE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EBF 69               ld l,c
 388+ 9EC0 60               ld h,b
 389+ 9EC1 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EC4 C9               ret
 391+ 9EC5
# file closed: Movimiento.asm
2292  9EC5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EC5              ; --------------------------------------------------------------------------------------
   2+ 9EC5              ;
   3+ 9EC5              ;   31/08/24
   4+ 9EC5              ;
   5+ 9EC5
   6+ 9EC5              Compara_con_coordenadas_de_disparo
   7+ 9EC5
   8+ 9EC5 3A BD 8B         ld a,(Coordenada_y)
   9+ 9EC8 47               ld b,a
  10+ 9EC9 3A 38 8C         ld a,(Coordenadas_disparo_certero)
  11+ 9ECC 90               sub b
  12+ 9ECD
  13+ 9ECD              ; A = "0" ok
  14+ 9ECD              ; A = "1" ok
  15+ 9ECD
  16+ 9ECD 28 08            jr z,Comprueba_coordenada_X
  17+ 9ECF 3D               dec a
  18+ 9ED0 28 05            jr z,Comprueba_coordenada_X
  19+ 9ED2
  20+ 9ED2              ; A = "$ff" ok
  21+ 9ED2
  22+ 9ED2 FE FE            cp $fe
  23+ 9ED4 28 01            jr z,Comprueba_coordenada_X
  24+ 9ED6
  25+ 9ED6 C9               ret
  26+ 9ED7
  27+ 9ED7              Comprueba_coordenada_X
  28+ 9ED7
  29+ 9ED7 3A BC 8B         ld a,(Coordenada_X)
  30+ 9EDA 47               ld b,a
  31+ 9EDB 21 39 8C         ld hl,Coordenadas_disparo_certero+1
  32+ 9EDE 7E               ld a,(hl)
  33+ 9EDF 90               sub b
  34+ 9EE0
  35+ 9EE0              ; A = "0" ok
  36+ 9EE0              ; A = "1" ok
  37+ 9EE0
  38+ 9EE0 28 09            jr z,Activa_Impacto_en_entidad
  39+ 9EE2 3D               dec a
  40+ 9EE3 28 06            jr z,Activa_Impacto_en_entidad
  41+ 9EE5
  42+ 9EE5              ; A = "2" ok
  43+ 9EE5
  44+ 9EE5 3D               dec a
  45+ 9EE6 28 03            jr z,Activa_Impacto_en_entidad
  46+ 9EE8
  47+ 9EE8              ; A = "$ff"
  48+ 9EE8
  49+ 9EE8 FE FD            cp $fd
  50+ 9EEA C0               ret nz
  51+ 9EEB
  52+ 9EEB              Activa_Impacto_en_entidad
  53+ 9EEB
  54+ 9EEB 3E 02            ld a,2
  55+ 9EED 32 BF 8B         ld (Impacto),a
  56+ 9EF0
  57+ 9EF0 21 35 8C         ld hl,Impacto2
  58+ 9EF3 CB 9E            res 3,(hl)
  59+ 9EF5
  60+ 9EF5 21 38 8C     	ld hl,Coordenadas_disparo_certero
  61+ 9EF8 AF           	xor a
  62+ 9EF9 77           	ld (hl),a
  63+ 9EFA 23           	inc hl
  64+ 9EFB 77           	ld (hl),a
  65+ 9EFC
  66+ 9EFC C9               ret
  67+ 9EFD
  68+ 9EFD              ; --------------------------------------------------------------------------------------
  69+ 9EFD              ;
  70+ 9EFD              ;   26/08/24
  71+ 9EFD              ;
  72+ 9EFD
  73+ 9EFD              Limpia_album_de_borrado_disparos
  74+ 9EFD
  75+ 9EFD 21 30 8C         ld hl,Ctrl_5
  76+ 9F00 CB 46            bit 0,(hl)
  77+ 9F02 C8               ret z
  78+ 9F03 CB 86            res 0,(hl)
  79+ 9F05
  80+ 9F05 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  81+ 9F08 3D               dec a
  82+ 9F09 3D               dec a
  83+ 9F0A C0               ret nz
  84+ 9F0B
  85+ 9F0B              Limpiando
  86+ 9F0B
  87+ 9F0B AF               xor a
  88+ 9F0C 2A 16 8C         ld hl,(Album_de_borrado_disparos)
  89+ 9F0F 77               ld (hl),a
  90+ 9F10 5D               ld e,l
  91+ 9F11 54               ld d,h
  92+ 9F12 1C               inc e                                           ; DE = HL+1
  93+ 9F13 01 3A 00         ld bc,$003a
  94+ 9F16 ED B0            ldir
  95+ 9F18
  96+ 9F18 C9               ret
  97+ 9F19
  98+ 9F19
  99+ 9F19              ; --------------------------------------------------------------------------------------
 100+ 9F19              ;
 101+ 9F19              ;   26/08/24
 102+ 9F19              ;
 103+ 9F19
 104+ 9F19              Calcula_bytes_pintado_disparos
 105+ 9F19
 106+ 9F19 2A 14 8C         ld hl,(Album_de_pintado_disparos)
 107+ 9F1C 45               ld b,l
 108+ 9F1D 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 109+ 9F20 7D               ld a,l
 110+ 9F21
 111+ 9F21 90               sub b
 112+ 9F22 32 1A 8C         ld (Num_de_bytes_album_de_disparos),a
 113+ 9F25
 114+ 9F25 C9               ret
 115+ 9F26
 116+ 9F26              ; --------------------------------------------------------------------------------------
 117+ 9F26              ;
 118+ 9F26              ;   23/08/24
 119+ 9F26              ;
 120+ 9F26              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 121+ 9F26              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 122+ 9F26              ;   _disparos que el álbum del FRAME actual).
 123+ 9F26
 124+ 9F26              Limpia_album_de_pintado_disparos
 125+ 9F26
 126+ 9F26              ;   Exclusiones.
 127+ 9F26
 128+ 9F26 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 129+ 9F29 A7               and a
 130+ 9F2A C8               ret z
 131+ 9F2B
 132+ 9F2B              ; -----
 133+ 9F2B
 134+ 9F2B A7               and a
 135+ 9F2C
 136+ 9F2C 3A 1A 8C         ld a,(Num_de_bytes_album_de_disparos)
 137+ 9F2F 47               ld b,a
 138+ 9F30 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 139+ 9F33
 140+ 9F33 90               sub b
 141+ 9F34
 142+ 9F34 C8               ret z
 143+ 9F35 D8               ret c
 144+ 9F36
 145+ 9F36 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 146+ 9F39 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 147+ 9F3A AF               xor a                                                               ; "0".
 148+ 9F3B
 149+ 9F3B 77           1 ld (hl),a
 150+ 9F3C 2C               inc l
 151+ 9F3D 10 FC            djnz 1B
 152+ 9F3F
 153+ 9F3F C9               ret
 154+ 9F40
 155+ 9F40              ; --------------------------------------------------------------------------------------
 156+ 9F40              ;
 157+ 9F40              ;   27/08/24
 158+ 9F40              ;
 159+ 9F40
 160+ 9F40              Motor_Disparos
 161+ 9F40
 162+ 9F40              ;    Exclusiones:
 163+ 9F40
 164+ 9F40 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 165+ 9F43 3D               dec a
 166+ 9F44 3D               dec a
 167+ 9F45 28 1A            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
 168+ 9F47
 169+ 9F47              ; .........................
 170+ 9F47
 171+ 9F47              ; Nos situamos en el (puntero_de_impresión) de la 1ª caja.
 172+ 9F47
 173+ 9F47 21 26 89         ld hl,Disparo_1A+3
 174+ 9F4A
 175+ 9F4A 34               inc (hl)
 176+ 9F4B 35               dec (hl)
 177+ 9F4C
 178+ 9F4C 28 06            jr z,1F
 179+ 9F4E
 180+ 9F4E              ; Esta caja contiene un disparo.
 181+ 9F4E
 182+ 9F4E CD 7D 9F         call Elimina_disparo_si_procede
 183+ 9F51 CC 8A 9F         call z,Mueve_disparo_Amadeus
 184+ 9F54
 185+ 9F54 21 2B 89     1 ld hl,Disparo_2A+3
 186+ 9F57
 187+ 9F57 34               inc (hl)
 188+ 9F58 35               dec (hl)
 189+ 9F59 28 06            jr z,2F
 190+ 9F5B
 191+ 9F5B              ; Esta caja contiene un disparo.
 192+ 9F5B
 193+ 9F5B CD 7D 9F         call Elimina_disparo_si_procede
 194+ 9F5E CC 8A 9F         call z,Mueve_disparo_Amadeus
 195+ 9F61
 196+ 9F61              ; Disparos de entidades.
 197+ 9F61
 198+ 9F61 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
 199+ 9F64 A7               and a
 200+ 9F65 C8               ret z
 201+ 9F66
 202+ 9F66 06 07            ld b,7                                                               ; Contador de disparos.
 203+ 9F68 21 2D 89         ld hl,Indice_de_disparos_entidades
 204+ 9F6B
 205+ 9F6B CD 6B 90     4 call Extrae_address
 206+ 9F6E 13               inc de
 207+ 9F6F 13               inc de
 208+ 9F70 ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
 209+ 9F74
 210+ 9F74 23               inc hl
 211+ 9F75
 212+ 9F75 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
 213+ 9F76 35               dec (hl)
 214+ 9F77 28 00            jr z,3F
 215+ 9F79
 216+ 9F79 EB           3 ex de,hl
 217+ 9F7A 10 EF            djnz 4B
 218+ 9F7C
 219+ 9F7C C9               ret
 220+ 9F7D
 221+ 9F7D              ; --------------------------------------------------------
 222+ 9F7D              ;
 223+ 9F7D              ;   28/8/24
 224+ 9F7D              ;
 225+ 9F7D              ;   Averigua si existe impacto en este disparo. Lo elimina si es así.
 226+ 9F7D              ;   Mueve el disparo si este no está impactado.
 227+ 9F7D
 228+ 9F7D
 229+ 9F7D              Elimina_disparo_si_procede
 230+ 9F7D
 231+ 9F7D CD 84 9F         call  Consulta_Impacto
 232+ 9F80 C4 BD 9F         call nz, Elimina_disparo                    ; HL apunta al .db (Puntero_de-impresion) del disparo.
 233+ 9F83
 234+ 9F83 C9               ret
 235+ 9F84
 236+ 9F84              ; ----------------------
 237+ 9F84              ;
 238+ 9F84              ;
 239+ 9F84              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 240+ 9F84              ;
 241+ 9F84              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 242+ 9F84
 243+ 9F84
 244+ 9F84              Consulta_Impacto
 245+ 9F84
 246+ 9F84 23               inc hl
 247+ 9F85
 248+ 9F85 34               inc (hl)
 249+ 9F86 35               dec (hl)
 250+ 9F87
 251+ 9F87 2B               dec hl
 252+ 9F88 2B               dec hl
 253+ 9F89
 254+ 9F89 C9               ret
 255+ 9F8A
 256+ 9F8A              ; ----------------------
 257+ 9F8A              ;
 258+ 9F8A              ;
 259+ 9F8A              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 260+ 9F8A
 261+ 9F8A              Mueve_disparo_Amadeus
 262+ 9F8A
 263+ 9F8A CD 6B 90         call Extrae_address
 264+ 9F8D
 265+ 9F8D CD 8F 99         call PreviousScan
 266+ 9F90 CD 8F 99         call PreviousScan
 267+ 9F93 CD 8F 99         call PreviousScan
 268+ 9F96 CD 8F 99         call PreviousScan
 269+ 9F99
 270+ 9F99              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 271+ 9F99
 272+ 9F99 7C               ld a,h
 273+ 9F9A D6 40            sub $40
 274+ 9F9C EB               ex de,hl
 275+ 9F9D 38 1E            jr c,Elimina_disparo
 276+ 9F9F
 277+ 9F9F               ; Introduce nuevo puntero_de_impresión en la caja.
 278+ 9F9F
 279+ 9F9F 73               ld (hl),e
 280+ 9FA0 23               inc hl
 281+ 9FA1 72               ld (hl),d
 282+ 9FA2
 283+ 9FA2              ; Hemos movido el disparo.
 284+ 9FA2              ; Cada vez que movemos un disparo debemos comprobar si existe Impacto en la nueva posición.
 285+ 9FA2
 286+ 9FA2 E5               push hl
 287+ 9FA3
 288+ 9FA3 2B               dec hl
 289+ 9FA4 2B               dec hl
 290+ 9FA5 2B               dec hl
 291+ 9FA6
 292+ 9FA6 CD BD A0         call Detecta_impacto_en_disparo_de_Amadeus
 293+ 9FA9
 294+ 9FA9              ; El FLAG Z indica si existe (Impacto) tras el desplazamiento.
 295+ 9FA9              ; (NZ) indica (Impacto).
 296+ 9FA9
 297+ 9FA9 E1               pop hl
 298+ 9FAA 23               inc hl                                      ; .db (Impacto) del disparo
 299+ 9FAB
 300+ 9FAB C8               ret z
 301+ 9FAC
 302+ 9FAC              ; (Impacto) a "1".
 303+ 9FAC
 304+ 9FAC 3E 01            ld a,1
 305+ 9FAE 77               ld (hl),a
 306+ 9FAF
 307+ 9FAF              ; Existe (Impacto).
 308+ 9FAF              ; Activamos el FLAG correspondiente y generamos las coordenadas del disparo.
 309+ 9FAF
 310+ 9FAF 3A 35 8C         ld a,(Impacto2)
 311+ 9FB2 CB DF            set 3,a
 312+ 9FB4 32 35 8C         ld (Impacto2),a
 313+ 9FB7
 314+ 9FB7              ; (Puntero_de_impresion) en HL.
 315+ 9FB7
 316+ 9FB7 2B               dec hl
 317+ 9FB8 2B               dec hl
 318+ 9FB9
 319+ 9FB9 CD AC A0         call Genera_coordenadas_de_disparo_Amadeus
 320+ 9FBC
 321+ 9FBC C9               ret
 322+ 9FBD
 323+ 9FBD              ; ----------------------
 324+ 9FBD              ;
 325+ 9FBD              ;   23/08/24
 326+ 9FBD
 327+ 9FBD              Elimina_disparo
 328+ 9FBD
 329+ 9FBD              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 330+ 9FBD              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 331+ 9FBD
 332+ 9FBD              ;   Disparo_1A defw 0									; Puntero objeto.
 333+ 9FBD              ;   	defw 0											; Puntero de impresión.
 334+ 9FBD              ;   	db 0											; Impacto.
 335+ 9FBD
 336+ 9FBD 2B               dec hl
 337+ 9FBE 2B               dec hl
 338+ 9FBF
 339+ 9FBF AF               xor a
 340+ 9FC0 77               ld (hl),a
 341+ 9FC1 23               inc hl
 342+ 9FC2 77               ld (hl),a                                           ; Puntero_objeto borrado.
 343+ 9FC3 23               inc hl
 344+ 9FC4 77               ld (hl),a
 345+ 9FC5 23               inc hl
 346+ 9FC6 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 347+ 9FC7 23               inc hl
 348+ 9FC8 77               ld (hl),a                                           ; Impacto borrado.
 349+ 9FC9
 350+ 9FC9 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 351+ 9FCC 34               inc (hl)
 352+ 9FCD
 353+ 9FCD 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 354+ 9FD0 F6 01            or 1
 355+ 9FD2 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 356+ 9FD5
 357+ 9FD5 21 30 8C         ld hl,Ctrl_5                                        ; Indica que ha desaparecido un disparo.
 358+ 9FD8 CB C6            set 0,(hl)
 359+ 9FDA
 360+ 9FDA C9               ret
 361+ 9FDB
 362+ 9FDB              ; --------------------------------------------------------------------------------------
 363+ 9FDB              ;
 364+ 9FDB              ;   21/8/24
 365+ 9FDB              ;
 366+ 9FDB
 367+ 9FDB              Pinta_disparos
 368+ 9FDB
 369+ 9FDB ED 73 08 8C      ld (Stack),sp
 370+ 9FDF 06 02            ld b,2
 371+ 9FE1
 372+ 9FE1 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 373+ 9FE5
 374+ 9FE5 D1           2 pop de
 375+ 9FE6
 376+ 9FE6 14               inc d
 377+ 9FE7 15               dec d
 378+ 9FE8
 379+ 9FE8 28 1B            jr z,1F
 380+ 9FEA
 381+ 9FEA              Imprime_scanlines_de_disparo
 382+ 9FEA
 383+ 9FEA E1               pop hl
 384+ 9FEB
 385+ 9FEB              ; Puntero objeto en DE.
 386+ 9FEB              ; Puntero_de_impresión en HL.
 387+ 9FEB
 388+ 9FEB              ; 1er scanline.
 389+ 9FEB
 390+ 9FEB 1A               ld a,(de)
 391+ 9FEC AE               xor (hl)
 392+ 9FED 77               ld (hl),a
 393+ 9FEE
 394+ 9FEE 13               inc de
 395+ 9FEF 2C               inc l
 396+ 9FF0
 397+ 9FF0 1A               ld a,(de)
 398+ 9FF1 AE               xor (hl)
 399+ 9FF2 77               ld (hl),a
 400+ 9FF3
 401+ 9FF3              ; 2º scanline.
 402+ 9FF3
 403+ 9FF3 E1               pop hl
 404+ 9FF4 1B               dec de
 405+ 9FF5
 406+ 9FF5 1A               ld a,(de)
 407+ 9FF6 AE               xor (hl)
 408+ 9FF7 77               ld (hl),a
 409+ 9FF8
 410+ 9FF8 13               inc de
 411+ 9FF9 2C               inc l
 412+ 9FFA
 413+ 9FFA 1A               ld a,(de)
 414+ 9FFB AE               xor (hl)
 415+ 9FFC 77               ld (hl),a
 416+ 9FFD
 417+ 9FFD              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 418+ 9FFD
 419+ 9FFD 18 E6            jr 2B
 420+ 9FFF
 421+ 9FFF ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 422+ A003 18 E0            jr 2B
 423+ A005
 424+ A005 10 F8        1 djnz 3B
 425+ A007 ED 7B 08 8C      ld sp,(Stack)
 426+ A00B C9               ret
 427+ A00C
 428+ A00C              ; --------------------------------------------------------------------------------------
 429+ A00C              ;
 430+ A00C              ;   28/8/24
 431+ A00C              ;
 432+ A00C              ;   Modifica: HL y DE.
 433+ A00C
 434+ A00C
 435+ A00C              Genera_datos_de_impresion_disparos_Amadeus
 436+ A00C
 437+ A00C              ;   Exclusiones:
 438+ A00C
 439+ A00C 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 440+ A00F 3D               dec a
 441+ A010 3D               dec a
 442+ A011 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 443+ A012
 444+ A012              ; -----
 445+ A012
 446+ A012 ED 73 08 8C      ld (Stack),sp
 447+ A016 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 448+ A019
 449+ A019 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 450+ A01C ED 72            sbc hl,sp                                                 ; Última caja ???
 451+ A01E 28 26            jr z,Salida
 452+ A020
 453+ A020 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 454+ A021
 455+ A021 14               inc d
 456+ A022 15               dec d
 457+ A023
 458+ A023 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 459+ A025
 460+ A025              Siguiente_disparo_Amadeus
 461+ A025
 462+ A025 D1               pop de
 463+ A026 33               inc sp
 464+ A027 18 F0            jr 1B
 465+ A029
 466+ A029              Genera_scanlines_de_disparo_Amadeus
 467+ A029
 468+ A029 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 469+ A02A              ;                                                             ; Puntero_de_impresión del disparo en HL.
 470+ A02A
 471+ A02A 33               inc sp
 472+ A02B ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 473+ A02F
 474+ A02F ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 475+ A033
 476+ A033 C1               pop bc
 477+ A034 C1               pop bc
 478+ A035 C1               pop bc
 479+ A036
 480+ A036 ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 481+ A03A
 482+ A03A E5               push hl                                                   ; Sube 2º scanline al álbum.
 483+ A03B CD 8F 99         call PreviousScan
 484+ A03E E5               push hl                                                   ; Sube 1er scanline al álbum.
 485+ A03F D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 486+ A040
 487+ A040 ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 488+ A044 18 D3            jr 1B
 489+ A046
 490+ A046
 491+ A046              Salida
 492+ A046
 493+ A046 ED 7B 08 8C      ld sp,(Stack)
 494+ A04A C9               ret
 495+ A04B
 496+ A04B              ; --------------------------------------------------------------------------------------
 497+ A04B              ;
 498+ A04B              ;   17/08/24
 499+ A04B              ;
 500+ A04B
 501+ A04B              Genera_disparo_Amadeus
 502+ A04B
 503+ A04B              ;   Exclusiones.
 504+ A04B
 505+ A04B 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 506+ A04E A7               and a
 507+ A04F C8               ret z                                                    ; Salimos si no hay permiso de disparo.
 508+ A050 3D               dec a
 509+ A051 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 510+ A054
 511+ A054 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 512+ A057 A7               and a
 513+ A058 C8               ret z                                                    ; Hay 2 disparos en pantalla, no hay cajas libres.
 514+ A059
 515+ A059              ; ---------------------------------------------------------------------------------------------------------------
 516+ A059
 517+ A059              ;   Dec nº de disparos de Amadeus.
 518+ A059
 519+ A059 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 520+ A05C 35               dec (hl)
 521+ A05D
 522+ A05D              ;   Nos situamos en la 1ª caja que encontramos vacía.
 523+ A05D
 524+ A05D 21 24 89         ld hl,Disparo_1A+1
 525+ A060
 526+ A060 34               inc (hl)
 527+ A061 35               dec (hl)
 528+ A062 2B               dec hl
 529+ A063
 530+ A063 28 03            jr z,7F
 531+ A065
 532+ A065 21 28 89         ld hl,Disparo_2A
 533+ A068
 534+ A068 22 33 8C     7 ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 535+ A06B
 536+ A06B              ; ---------------------------------------------------------------------------------------------------------------
 537+ A06B
 538+ A06B              Define_puntero_objeto_disparo
 539+ A06B
 540+ A06B              ;   Inicializamos contador.
 541+ A06B
 542+ A06B 06 00            ld b,0
 543+ A06D
 544+ A06D 2A 75 89         ld hl,(p.imp.amadeus)
 545+ A070 2C               inc l
 546+ A071
 547+ A071 3E 80            ld a,$80
 548+ A073 BE               cp (hl)
 549+ A074 28 0D            jr z,1F
 550+ A076
 551+ A076 04               inc b
 552+ A077
 553+ A077 3E 60            ld a,$60
 554+ A079 BE               cp (hl)
 555+ A07A 28 07            jr z,1F
 556+ A07C
 557+ A07C
 558+ A07C 04               inc b
 559+ A07D
 560+ A07D 3E 18            ld a,$18
 561+ A07F BE               cp (hl)
 562+ A080 28 01            jr z,1F
 563+ A082
 564+ A082 04               inc b
 565+ A083
 566+ A083              ;   Calcula el Puntero_de_impresión del disparo.
 567+ A083
 568+ A083              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 569+ A083
 570+ A083 CD 8F 99     1 call PreviousScan
 571+ A086
 572+ A086 78               ld a,b
 573+ A087 CB 3F            srl a
 574+ A089 28 03            jr z,4F
 575+ A08B
 576+ A08B              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 577+ A08B E5               push hl
 578+ A08C 18 02            jr 5F
 579+ A08E 2D           4 dec l
 580+ A08F E5               push hl
 581+ A090              ; ---
 582+ A090
 583+ A090              ;   Calcula el Puntero_objeto del disparo.
 584+ A090
 585+ A090 21 70 83     5 ld hl,Indice_disparo
 586+ A093 04               inc b
 587+ A094 05               dec b
 588+ A095 28 04            jr z,2F
 589+ A097
 590+ A097              ;   Nos desplazamos por el índice de disparos.
 591+ A097
 592+ A097 2C           3 inc l
 593+ A098 2C               inc l
 594+ A099 10 FC            djnz 3B
 595+ A09B
 596+ A09B              ; --- Guarda el Puntero_objeto del disparo en la pila.
 597+ A09B CD 6B 90     2 call Extrae_address
 598+ A09E E5               push hl
 599+ A09F              ; ---
 600+ A09F
 601+ A09F              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 602+ A09F              ; HL en el 1er .db de la caja.
 603+ A09F
 604+ A09F 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 605+ A0A2
 606+ A0A2 06 02            ld b,2
 607+ A0A4
 608+ A0A4 D1           6 pop de
 609+ A0A5 73               ld (hl),e
 610+ A0A6 23               inc hl
 611+ A0A7 72               ld (hl),d
 612+ A0A8 23               inc hl
 613+ A0A9
 614+ A0A9 10 F9            djnz 6B
 615+ A0AB
 616+ A0AB C9               ret
 617+ A0AC
 618+ A0AC              Genera_coordenadas_de_disparo_Amadeus
 619+ A0AC
 620+ A0AC              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 621+ A0AC              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 622+ A0AC              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 623+ A0AC
 624+ A0AC CD 6B 90         call Extrae_address
 625+ A0AF CD 8A 94         call Genera_coordenadas
 626+ A0B2
 627+ A0B2 3D               dec a
 628+ A0B3
 629+ A0B3 21 38 8C         ld hl,Coordenadas_disparo_certero
 630+ A0B6 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 631+ A0B7 23               inc hl
 632+ A0B8 3A BC 8B         ld a,(Coordenada_X)
 633+ A0BB 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 634+ A0BC
 635+ A0BC C9               ret
 636+ A0BD
 637+ A0BD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 638+ A0BD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 639+ A0BD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 640+ A0BD
 641+ A0BD              ; ----------------------------------------------
 642+ A0BD              ;
 643+ A0BD              ;   27/08/24
 644+ A0BD              ;
 645+ A0BD              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 646+ A0BD              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 647+ A0BD
 648+ A0BD              Detecta_impacto_en_disparo_de_Amadeus
 649+ A0BD
 650+ A0BD              Extraccion_de_datos
 651+ A0BD
 652+ A0BD 5E               ld e,(hl)
 653+ A0BE 23               inc hl
 654+ A0BF 56               ld d,(hl)
 655+ A0C0 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 656+ A0C1
 657+ A0C1 4E               ld c,(hl)
 658+ A0C2 23               inc hl
 659+ A0C3 46               ld b,(hl)
 660+ A0C4
 661+ A0C4 C5               push bc
 662+ A0C5 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 663+ A0C6
 664+ A0C6              Detecta_impacto_
 665+ A0C6
 666+ A0C6 1A               ld a,(de)
 667+ A0C7 A6               and (hl)
 668+ A0C8 C0               ret nz
 669+ A0C9
 670+ A0C9 13               inc de
 671+ A0CA 23               inc hl
 672+ A0CB
 673+ A0CB 1A               ld a,(de)
 674+ A0CC A6               and (hl)
 675+ A0CD C9               ret
 676+ A0CE
 677+ A0CE              ; -------------------------------------------------------------------------------------------------------------
 678+ A0CE              ;
 679+ A0CE              ;   8/8/24
 680+ A0CE              ;
 681+ A0CE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 682+ A0CE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 683+ A0CE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 684+ A0CE              ;
 685+ A0CE              ;   MODIFICA: HL,DE,BC y A.
 686+ A0CE              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 687+ A0CE              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 688+ A0CE
 689+ A0CE              Colision_Entidad_Amadeus
 690+ A0CE
 691+ A0CE              ; Posible contacto de entidad con Amadeus. ?????
 692+ A0CE
 693+ A0CE              ; Exclusiones:
 694+ A0CE
 695+ A0CE 3A 53 8C         ld a,(Shield)
 696+ A0D1 A7               and a
 697+ A0D2 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 698+ A0D3
 699+ A0D3 21 2E 8C         ld hl,Ctrl_3
 700+ A0D6 CB 76            bit 6,(hl)
 701+ A0D8 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 702+ A0D9
 703+ A0D9 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 704+ A0DC CB 56            bit 2,(hl)
 705+ A0DE C0               ret nz
 706+ A0DF
 707+ A0DF 3A BD 8B     	ld a,(Coordenada_y)
 708+ A0E2 FE 14        	cp $14
 709+ A0E4 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 710+ A0E5
 711+ A0E5 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 712+ A0E8 A7               and a
 713+ A0E9 C0               ret nz
 714+ A0EA
 715+ A0EA              Genera_coordenadas_X
 716+ A0EA
 717+ A0EA              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 718+ A0EA              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 719+ A0EA
 720+ A0EA              ;   Limpiamos almacenes.
 721+ A0EA
 722+ A0EA              ;    call Limpia_Coordenadas_X
 723+ A0EA
 724+ A0EA              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 725+ A0EA
 726+ A0EA 21 3A 8C         ld hl,Coordenadas_X_Entidad
 727+ A0ED 3A BC 8B         ld a,(Coordenada_X)
 728+ A0F0 CD 12 A1         call Guarda_coordenadas_X
 729+ A0F3
 730+ A0F3              ;   Almacenamos las coordenadas X de Amadeus.
 731+ A0F3
 732+ A0F3 3A 71 89         ld a,(CX_Amadeus)
 733+ A0F6 CD 12 A1         call Guarda_coordenadas_X
 734+ A0F9 CD 26 A1         call Compara_coordenadas_X
 735+ A0FC C0               ret nz
 736+ A0FD
 737+ A0FD 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 738+ A0FF 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 739+ A102
 740+ A102 2A FB 8B         ld hl,(Puntero_store_caja)
 741+ A105 2C               inc l
 742+ A106 2C               inc l
 743+ A107 2C               inc l
 744+ A108 2C               inc l
 745+ A109 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 746+ A10C
 747+ A10C 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 748+ A10F CB D6            set 2,(hl)
 749+ A111
 750+ A111 C9               ret
 751+ A112
 752+ A112               ; ----- ----- ----- ----- -----
 753+ A112
 754+ A112 77           Guarda_coordenadas_X ld (hl),a
 755+ A113 3C               inc a
 756+ A114 2C               inc l
 757+ A115 77               ld (hl),a
 758+ A116 3C               inc a
 759+ A117 2C               inc l
 760+ A118 77               ld (hl),a
 761+ A119 2C               inc l
 762+ A11A C9               ret
 763+ A11B
 764+ A11B AF           Limpia_Coordenadas_X xor a
 765+ A11C 06 06            ld b,6
 766+ A11E 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 767+ A121 77           1 ld (hl),a
 768+ A122 23               inc hl
 769+ A123 10 FC            djnz 1B
 770+ A125 C9               ret
 771+ A126
 772+ A126              ; ----- ----- ----- ----- -----
 773+ A126
 774+ A126              Compara_coordenadas_X
 775+ A126
 776+ A126 DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 777+ A12A DD 7E 00         ld a,(ix+0)
 778+ A12D CD 3B A1         call Comparando
 779+ A130 C8               ret z
 780+ A131
 781+ A131 3C               inc a
 782+ A132 CD 4A A1         call Comparando_1
 783+ A135 C8               ret z
 784+ A136
 785+ A136 3C               inc a
 786+ A137 CD 4A A1         call Comparando_1
 787+ A13A C9               ret
 788+ A13B
 789+ A13B              ; ----- ----- ----- ----- -----
 790+ A13B              ;
 791+ A13B              ;   4/12/23
 792+ A13B              ;
 793+ A13B              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 794+ A13B
 795+ A13B              Comparando
 796+ A13B
 797+ A13B DD 2C            inc ixl
 798+ A13D DD 2C            inc ixl
 799+ A13F DD 2C            inc ixl
 800+ A141
 801+ A141 DD 46 00         ld b,(ix+0)
 802+ A144 DD 4E 01         ld c,(ix+1)
 803+ A147 DD 56 02         ld d,(ix+2)
 804+ A14A
 805+ A14A B8           Comparando_1 cp b
 806+ A14B C8               ret z
 807+ A14C B9               cp c
 808+ A14D C8               ret z
 809+ A14E BA               cp d
 810+ A14F C9               ret
 811+ A150
 812+ A150              ; -----------------------------------------------------------------------
 813+ A150              ;
 814+ A150              ;   04/7/24
 815+ A150              ;
 816+ A150
 817+ A150              Detecta_colision_nave_entidad
 818+ A150
 819+ A150              ; Exclusiones:
 820+ A150
 821+ A150              ; Salimos de la rutina si no hay advertencia de posible colisión.
 822+ A150
 823+ A150 21 35 8C     	ld hl,Impacto2
 824+ A153 CB 56        	bit 2,(hl)
 825+ A155 C8           	ret z
 826+ A156
 827+ A156              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 828+ A156
 829+ A156 2A 77 89         ld hl,(Pamm_Amadeus)
 830+ A159 CD 6B 90         call Extrae_address
 831+ A15C 54               ld d,h
 832+ A15D 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 833+ A15E
 834+ A15E 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 835+ A161 06 10            ld b,16                                        ; Contador de scanlines en B.
 836+ A163 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 837+ A166
 838+ A166 C5           1 push bc
 839+ A167 06 03            ld b,3
 840+ A169 E5               push hl
 841+ A16A
 842+ A16A              ; .db
 843+ A16A
 844+ A16A 1A           3 ld a,(de)
 845+ A16B A7               and a
 846+ A16C 20 03            jr nz,4F
 847+ A16E
 848+ A16E 2C               inc l
 849+ A16F 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 850+ A171
 851+ A171 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 852+ A173 28 04            jr z,2F
 853+ A175
 854+ A175              ; Impacto.
 855+ A175 FD 2D            dec iyl
 856+ A177 28 22            jr z,5F
 857+ A179
 858+ A179 1C           2 inc e
 859+ A17A 10 EE            djnz 3B
 860+ A17C
 861+ A17C E1               pop hl
 862+ A17D
 863+ A17D              ; Hay salto de línea en el puntero de impresión ???
 864+ A17D
 865+ A17D 7C               ld a,h
 866+ A17E D6 57            sub $57
 867+ A180 20 0A            jr nz,6F
 868+ A182
 869+ A182              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 870+ A182
 871+ A182 2A 75 89         ld hl,(p.imp.amadeus)
 872+ A185 3E 20            ld a,$20
 873+ A187 A7               and a
 874+ A188 85               add l
 875+ A189 6F               ld l,a
 876+ A18A 18 01            jr 7F
 877+ A18C
 878+ A18C 24           6 inc h
 879+ A18D
 880+ A18D C1           7 pop bc
 881+ A18E 10 D6            djnz 1B
 882+ A190
 883+ A190              ;   Fin de la comparativa.
 884+ A190
 885+ A190              ;   NO HAY COLISIÓN !!!!!.
 886+ A190              ;
 887+ A190              ;   .db (Impacto) de Amadeus a "0".
 888+ A190              ;   RES el bit2 de (Impacto2).
 889+ A190              ;
 890+ A190              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 891+ A190              ;   Lo colocamos a "0".
 892+ A190
 893+ A190 21 35 8C         ld hl,Impacto2
 894+ A193 CB 96            res 2,(hl)
 895+ A195 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 896+ A198 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 897+ A19A C9               ret
 898+ A19B
 899+ A19B              ;   COLISIÓN !!!!!.
 900+ A19B              ;
 901+ A19B              ;   .db (Impacto) de Amadeus a "1".
 902+ A19B              ;   SET el bit3 de (Impacto2).
 903+ A19B              ;
 904+ A19B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 905+ A19B
 906+ A19B E1           5 pop hl
 907+ A19C C1               pop bc
 908+ A19D
 909+ A19D 21 74 89         ld hl,Impacto_Amadeus
 910+ A1A0 36 01            ld (hl),1
 911+ A1A2 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 912+ A1A5 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 913+ A1A7
 914+ A1A7 11 C0 87         ld de,Indice_Explosion_entidades
 915+ A1AA 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 916+ A1AD
 917+ A1AD 23               inc hl
 918+ A1AE 23               inc hl
 919+ A1AF 23               inc hl
 920+ A1B0
 921+ A1B0 73               ld (hl),e
 922+ A1B1 23               inc hl
 923+ A1B2 72               ld (hl),d
 924+ A1B3
 925+ A1B3              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 926+ A1B3
 927+ A1B3 11 60 88         ld de,Indice_Explosion_Amadeus
 928+ A1B6 21 77 89         ld hl,Pamm_Amadeus
 929+ A1B9
 930+ A1B9 73               ld (hl),e
 931+ A1BA 23               inc hl
 932+ A1BB 72               ld (hl),d
 933+ A1BC
 934+ A1BC C9               ret
 935+ A1BD
 936+ A1BD
 937+ A1BD
# file closed: Disparo.asm
2293  A1BD
2294  A1BD              	SAVESNA "Pruebas.sna", START
2295  A1BD
2296  A1BD
2297  A1BD
2298  A1BD
# file closed: Banco_de_pruebas.asm
