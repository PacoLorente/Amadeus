# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2B 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD AE A0     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 1A 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 2A 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 143  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A7 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA5 01 01
  18+ 8BA7
  19+ 8BA7 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA8 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB0 01 02
  22+ 8BB2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB6 01 02
  23+ 8BB8
# file closed: Niveles.asm
 144  8BB8
 145  8BB8              ; --------------------------------------------------------------------------------
 146  8BB8              ;
 147  8BB8              ; 12/05/24
 148  8BB8              ;
 149  8BB8              ; Parámetros DRAW.
 150  8BB8              ;
 151  8BB8
 152  8BB8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB8
 154  8BB8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BB9              ;															- Patrón de movimiento.
 156  8BB9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBB
 159  8BBB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBC
 162  8BBC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBC              ; Ejemplos.
 165  8BBC
 166  8BBC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBC
 172  8BBC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BBD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BBD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BBD
 176  8BBD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BBF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BBF
 179  8BBF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC1
 181  8BC1              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC1
 183  8BC1 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BC3              ;														; _palabras que componen el "movimiento_masticado".
 185  8BC3
 186  8BC3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BC3
 188  8BC3 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BC4              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BC4              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BC4              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BC4              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BC4
 194  8BC4 00           Ctrl_2 db 0
 195  8BC5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC5              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC5              ;
 203  8BC5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC5              ;														BIT 4, ???
 209  8BC5              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC5
 211  8BC5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC6              ;
 217  8BC6              ; 														DESCRIPCIÖN:
 218  8BC6              ;
 219  8BC6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC6              ;
 233  8BC6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC6
 237  8BC6              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC6
 239  8BC6 00           Filas db 0												; Filas. [DRAW]
 240  8BC7 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BCA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BCC
 244  8BCC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BCC
 246  8BCC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BCD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BCD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BCD
 250  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BCD
 252  8BCD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BCD              ;
 254  8BCD              ;	COLORES: 0 ..... NEGRO
 255  8BCD              ;    		 1 ..... AZUL
 256  8BCD              ; 			 2 ..... ROJO
 257  8BCD              ;			 3 ..... MAGENTA
 258  8BCD              ; 			 4 ..... VERDE
 259  8BCD              ; 			 5 ..... CIAN
 260  8BCD              ;			 6 ..... AMARILLO
 261  8BCD              ; 			 7 ..... BLANCO
 262  8BCD
 263  8BCD 00 00        Indice_Sprite_der defw 0
 264  8BCF 00 00        Indice_Sprite_izq defw 0
 265  8BD1 00 00        Puntero_DESPLZ_der defw 0
 266  8BD3 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD5
 268  8BD5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD8 00           Columnas db 0
 271  8BD9 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BDB              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BDB 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDC
 275  8BDC              ; variables de control general.
 276  8BDC
 277  8BDC 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BDD
 279  8BDD              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BDD
 281  8BDD              Perfiles_de_velocidad
 282  8BDD
 283  8BDD 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BDE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BDF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BE0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BE1
 288  8BE1              ; Contadores de 16 bits.
 289  8BE1
 290  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BE9
 295  8BE9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BE9
 297  8BE9 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BEB 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BED 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BEF              ;
 301  8BEF              ;
 302  8BEF 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BF0              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BF0              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BF0 00           Incrementa_puntero_backup db 0
 306  8BF1 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BF2              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BF2 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BF3 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BF4 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF5              ;
 312  8BF5              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF5              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF5              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF5              ;
 316  8BF5              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF5              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF5              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF5              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF5              ;
 321  8BF5              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF5              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF5              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF5
 325  8BF5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF6
 327  8BF6              ;														DESCRIPCIÓN:
 328  8BF6              ;
 329  8BF6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF6              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF6              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF6
 336  8BF6              ;														BIT 3, Recarga de nueva oleada.
 337  8BF6              ;														BIT 4, Recarga de nueva oleada.
 338  8BF6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF6              ;														BIT 6, **** Frame completo.
 340  8BF6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF6
 342  8BF6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF8
 347  8BF8              ; Gestión de ENTIDADES y CAJAS.
 348  8BF8
 349  8BF8 00 00        Puntero_store_caja defw 0
 350  8BFA 00 00        Puntero_restore_caja defw 0
 351  8BFC 00 00        Indice_restore_caja defw 0
 352  8BFE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BFF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8C00 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8C01
 356  8C01 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C03 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C05              ;														; _ puntero (Indice_entidades).
 359  8C05
 360  8C05              ;---------------------------------------------------------------------------------------------------------------
 361  8C05              ;
 362  8C05              ;	11/09/24
 363  8C05              ;
 364  8C05              ;	Álbumes.
 365  8C05
 366  8C05 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C07              ;														; _variable para almacenar lo posición del puntero_
 368  8C07              ; 														; _de pila, SP.
 369  8C07 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C09              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C09
 372  8C09              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C09
 374  8C09 00 00        Album_de_pintado defw 0
 375  8C0B 00 00        Album_de_borrado defw 0
 376  8C0D 00 00        Album_de_pintado_Amadeus defw 0
 377  8C0F 00 00        Album_de_borrado_Amadeus defw 0
 378  8C11 00 00        Album_de_pintado_disparos defw 0
 379  8C13 00 00        Album_de_borrado_disparos defw 0
 380  8C15
 381  8C15 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C17 00           Num_de_bytes_album_de_disparos db 0
 383  8C18 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C19
 385  8C19 07           Numero_de_disparos_de_entidades db 7
 386  8C1A
 387  8C1A 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C1B 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C1C
 390  8C1C 00 00        Puntero_rancio_disparos_album defw 0
 391  8C1E
 392  8C1E 00 00        Techo_Scanlines_album defw 0
 393  8C20 00 00        Techo_Scanlines_album_2 defw 0
 394  8C22 00           Switch db 0
 395  8C23 00 00        Techo defw 0
 396  8C25 00 00        Scanlines_album_SP defw 0
 397  8C27 00 89        India_SP defw Tabla_de_pintado
 398  8C29 03 89        India_2_SP defw Tabla_de_pintado+3
 399  8C2B
 400  8C2B 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  8C2C              ;
 402  8C2C              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  8C2C              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  8C2C              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  8C2C              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  8C2C              ;																Habilita el borrado/pintado de sprites.
 407  8C2C              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  8C2C              ;																_ a la baja.
 409  8C2C              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  8C2C              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 411  8C2C              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 412  8C2C              ; 																_ el último frame de la explosión de nuestra nave.
 413  8C2C              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 414  8C2C              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 415  8C2C
 416  8C2C 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  8C2D              ;
 418  8C2D              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  8C2D              ;
 420  8C2D              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  8C2D              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  8C2D              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  8C2D              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  8C2D              ;
 425  8C2D              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  8C2D              ;															_ masticados ya generados.
 427  8C2D              ;
 428  8C2D              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  8C2D              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  8C2D              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  8C2D              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  8C2D
 433  8C2D 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 434  8C2E              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 435  8C2E              ;                                                           BIT 2, "1" DEBUG !! Indica que se ha generado un disparo de entidad.
 436  8C2E
 437  8C2E
 438  8C2E
 439  8C2E
 440  8C2E
 441  8C2E              ; Gestión de Disparos.
 442  8C2E
 443  8C2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 444  8C30
 445  8C30 00           Impacto2 db 0											; Byte de control de impactos.
 446  8C31
 447  8C31              ;
 448  8C31              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 449  8C31              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 450  8C31              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 451  8C31              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 452  8C31
 453  8C31
 454  8C31
 455  8C31
 456  8C31
 457  8C31
 458  8C31
 459  8C31 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 460  8C33              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 461  8C33              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 462  8C33
 463  8C33 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 464  8C35              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 465  8C35 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C38              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 467  8C38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 468  8C3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 469  8C3B
 470  8C3B              ;---------------------------------------------------------------------------------------------------------------
 471  8C3B
 472  8C3B              ; Relojes y temporizaciones.
 473  8C3B
 474  8C3B 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 475  8C3C 05           Clock_explosion_Amadeus db 5
 476  8C3D 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 477  8C3E
 478  8C3E F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 479  8C40 F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 480  8C42 00           DB_RND_disparos db 0
 481  8C43
 482  8C43 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 483  8C45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 484  8C46              ;														; Repite la oleada de entidades.
 485  8C46 90           CLOCK_disparo_entidad_MASTER db $90						; Reloj, decreciente.
 486  8C47 90           CLOCK_disparo_entidad db $90
 487  8C48
 488  8C48              ;---------------------------------------------------------------------------------------------------------------
 489  8C48
 490  8C48              ; Gestión de NIVELES.
 491  8C48
 492  8C48 00           Nivel db 0												; Nivel actual del juego.
 493  8C49 00 00        Puntero_indice_NIVELES defw 0
 494  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 495  8C4D              ; 														; _ que definen el NIVEL.
 496  8C4D
 497  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 498  8C4D
 499  8C4D              ; Temporizaciones Shield.
 500  8C4D
 501  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 502  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 503  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 504  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 505  8C55 00           Shield_3 db 0
 506  8C56
 507  8C56 06           Lives db 6
 508  8C57
 509  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 510  8C57              ;
 511  8C57              ;	5/1/24
 512  8C57
 513  8C57              START
 514  8C57
 515  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 516  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 517  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 518  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 519  8C60 F3           	DI
 520  8C61
 521  8C61              ; Limpiamos pantalla.
 522  8C61
 523  8C61 3E 07        	ld a,%00000111
 524  8C63 CD B7 94     	call Cls
 525  8C66 CD 0F 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 526  8C69
 527  8C69              ; INICIALIZACIÓN.
 528  8C69
 529  8C69 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 530  8C6B CD 5C 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 531  8C6E CD A6 8E     	call Extrae_numero_aleatorio_y_avanza
 532  8C71
 533  8C71 6F           	ld l,a
 534  8C72 26 00        	ld h,0
 535  8C74 22 43 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 536  8C77
 537  8C77              ;	Inicializa 1er Nivel.
 538  8C77
 539  8C77 21 94 8B     	ld hl,Indice_de_niveles
 540  8C7A 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 541  8C7D CD 8C 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 542  8C80              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 543  8C80              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 544  8C80              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 545  8C80
 546  8C80              ;	Inicia los álbumes de líneas.
 547  8C80
 548  8C80 CD 5F 90     	call Inicia_albumes_de_lineas
 549  8C83              ;
 550  8C83 CD 6F 90     	call Inicia_albumes_de_lineas_Amadeus
 551  8C86 CD 7C 90     	call Inicia_albumes_de_disparos
 552  8C89
 553  8C89 CD A5 90     	call Inicia_Puntero_Disparo_Entidades
 554  8C8C
 555  8C8C CD D1 92     4 call Inicia_Entidades
 556  8C8F CD 34 93     	call Inicia_Amadeus
 557  8C92
 558  8C92              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 559  8C92              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 560  8C92              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 561  8C92
 562  8C92 11 6D 89     	ld de,Amadeus_BOX
 563  8C95 CD 87 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 564  8C98 CD 77 93     	call Limpiamos_bandeja_DRAW
 565  8C9B
 566  8C9B              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 567  8C9B
 568  8C9B 06 3C        	ld b,60
 569  8C9D CD 59 9D     2 call Amadeus_a_izquierda
 570  8CA0 10 FB        	djnz 2B
 571  8CA2
 572  8CA2 CD 3D 90     	call Genera_datos_de_impresion_Amadeus
 573  8CA5
 574  8CA5              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 575  8CA5
 576  8CA5 CD 8F 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 577  8CA8              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 578  8CA8
 579  8CA8              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 580  8CA8              ; (Esto se dá cuando se inicia una nueva oleada).
 581  8CA8
 582  8CA8              ;	ld a,(Ctrl_1)
 583  8CA8              ;	bit 3,a
 584  8CA8              ;	jr nz,5F											 ; Loop
 585  8CA8
 586  8CA8              ;	ld de,Amadeus_db
 587  8CA8              ;	call Store_Amadeus
 588  8CA8
 589  8CA8              ; 	INICIA DISPAROS !!!!!
 590  8CA8
 591  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA8
 593  8CA8              ;5 call Inicia_punteros_de_cajas
 594  8CA8              ;	call Restore_entidad
 595  8CA8
 596  8CA8              ;	ld a,(Ctrl_1)
 597  8CA8              ;	bit 3,a
 598  8CA8              ;	jr z,6F
 599  8CA8
 600  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA8
 602  8CA8              ;	ld hl,Ctrl_1
 603  8CA8              ;	res 3,(hl)
 604  8CA8              ;	jr Main
 605  8CA8
 606  8CA8              ; Damos por concluida la construcción del FRAME.
 607  8CA8              ;
 608  8CA8
 609  8CA8 CD 1A 91     	call Inicia_Shield
 610  8CAB
 611  8CAB
 612  8CAB 2A 25 8C     6 ld hl,(Scanlines_album_SP)
 613  8CAE 22 1E 8C     	ld (Techo_Scanlines_album),hl
 614  8CB1
 615  8CB1 2A 0B 8C     	ld hl,(Album_de_borrado)
 616  8CB4 22 25 8C     	ld (Scanlines_album_SP),hl
 617  8CB7
 618  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 619  8CBA 22 27 8C     	ld (India_SP),hl
 620  8CBD
 621  8CBD 21 2B 8C     	ld hl,Ctrl_3
 622  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CC2 CB D6        	set 2,(hl)
 624  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC6
 626  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC7
 628  8CC7 76           	halt
 629  8CC8
 630  8CC8              ; ------------------------------------
 631  8CC8
 632  8CC8              Main
 633  8CC8              ;
 634  8CC8              ; 22/08/24
 635  8CC8
 636  8CC8              ; Gestión de disparos.
 637  8CC8
 638  8CC8 CD 1C A0     	call Limpia_album_de_borrado_disparos
 639  8CCB CD 8D 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CCE CD 58 A0     	call Motor_Disparos_Amadeus
 641  8CD1 CD 06 9F     	call Motor_de_disparos_entidades
 642  8CD4
 643  8CD4              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 644  8CD4              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 645  8CD4              ; Este hecho lo indica el bit2 de (Impacto2).
 646  8CD4
 647  8CD4 CD FA A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 648  8CD7
 649  8CD7              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 650  8CD7
 651  8CD7              ;	ld hl,CLOCK_disparo_entidad
 652  8CD7              ;	dec (hl)
 653  8CD7              ;	call z,Autoriza_disparo_de_entidades
 654  8CD7
 655  8CD7 2A 43 8C     	ld hl,(Clock_next_entity)
 656  8CDA ED 4B 78 5C  	ld bc,(FRAMES)
 657  8CDE A7           	and a
 658  8CDF ED 42        	sbc hl,bc
 659  8CE1 20 16        	jr nz,1F
 660  8CE3
 661  8CE3              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 662  8CE3              ; _ (Clock_next_entity) para la siguiente entidad.
 663  8CE3
 664  8CE3 3A FF 8B     	ld a,(Numero_parcial_de_entidades)
 665  8CE6 47           	ld b,a
 666  8CE7 3A 00 8C     	ld a,(Entidades_en_curso)
 667  8CEA B8           	cp b
 668  8CEB 28 0C        	jr z,1F
 669  8CED 30 0A        	jr nc,1F
 670  8CEF
 671  8CEF 3C           	inc a
 672  8CF0 32 00 8C     	ld (Entidades_en_curso),a
 673  8CF3
 674  8CF3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 675  8CF3
 676  8CF3 CD A6 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 677  8CF6 CD C2 8E     	call Define_Clock_next_entity
 678  8CF9
 679  8CF9 3A 00 8C     1 ld a,(Entidades_en_curso)
 680  8CFC A7           	and a
 681  8CFD CA 77 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 682  8D00 47           	ld b,a												; No hay entidades que gestionar.
 683  8D01
 684  8D01              ; ( Código que ejecutamos con cada entidad: ).
 685  8D01
 686  8D01              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 687  8D01              ;
 688  8D01              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 689  8D01
 690  8D01 21 00 89     	ld hl,Tabla_de_pintado
 691  8D04 22 27 8C     	ld (India_SP),hl
 692  8D07
 693  8D07 21 2B 8C     	ld hl,Ctrl_3
 694  8D0A CB D6        	set 2,(hl)
 695  8D0C CD 62 8E     	call Change
 696  8D0F
 697  8D0F C5           2 push bc 												; Nº de entidades en curso.
 698  8D10
 699  8D10 CD E7 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 700  8D13 ED 5B 25 8C  	ld de,(Scanlines_album_SP)
 701  8D17
 702  8D17              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 703  8D17
 704  8D17              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 705  8D17              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 706  8D17
 707  8D17 3A 30 8C     	ld a,(Impacto2)
 708  8D1A CB 5F        	bit 3,a
 709  8D1C C4 E2 9F     	call nz,Compara_con_coordenadas_de_disparo
 710  8D1F
 711  8D1F 3A BC 8B     	ld a,(Impacto)
 712  8D22 CB 4F        	bit 1,a
 713  8D24 C4 F7 91     	call nz,Genera_explosion
 714  8D27 20 31        	jr nz,Gestiona_siguiente_entidad
 715  8D29
 716  8D29 3A BC 8B     	ld a,(Impacto)
 717  8D2C A7           	and a
 718  8D2D 28 0C        	jr z,3F
 719  8D2F
 720  8D2F              ; IMPACTO en entidad por colisión con Amadeus.
 721  8D2F
 722  8D2F              ; 5/7/24
 723  8D2F              ; Nota importante:
 724  8D2F              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 725  8D2F              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 726  8D2F              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 727  8D2F
 728  8D2F 3A 71 89     	ld a,(Impacto_Amadeus)
 729  8D32 A7           	and a
 730  8D33 C4 F7 91     	call nz,Genera_explosion
 731  8D36 20 22        	jr nz,Gestiona_siguiente_entidad
 732  8D38
 733  8D38              ; Falsa colisión !!!
 734  8D38
 735  8D38 32 BC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 736  8D3B
 737  8D3B              ; -------------------------------------------
 738  8D3B
 739  8D3B CD 06 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 740  8D3E CD 42 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 741  8D41 CD F6 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 742  8D44 CD F7 94     	call Genera_datos_de_impresion
 743  8D47 CD 9A 93     	call Decrementa_Contador_de_mov_masticados
 744  8D4A
 745  8D4A              ; -------------------------------------------
 746  8D4A
 747  8D4A              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 748  8D4A
 749  8D4A 2A BD 8B     	ld hl,(Puntero_de_impresion)
 750  8D4D CD CB 94     	call Genera_coordenadas
 751  8D50
 752  8D50              ; TODO: Generamos disparo ???
 753  8D50
 754  8D50 3A 1B 8C     	ld a,(Permiso_de_disparo_Entidades)
 755  8D53 A7           	and a
 756  8D54 C4 F2 8D     	call nz,Entidad_genera_disparo_si_procede
 757  8D57
 758  8D57 CD 78 A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 759  8D5A
 760  8D5A              Gestiona_siguiente_entidad
 761  8D5A
 762  8D5A CD 6C 93      	call Store_Restore_cajas
 763  8D5D C1           	pop bc
 764  8D5E 10 AF        	djnz 2B
 765  8D60
 766  8D60              ; Hemos gestionado todas las entidades.
 767  8D60              ; ----- ----- -----
 768  8D60
 769  8D60 CD 1A 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 770  8D63 CD 31 8F     	call Ordena_tabla_de_impresion
 771  8D66 CD 8F 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 772  8D69
 773  8D69              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 774  8D69              ; Hemos gestionado todas las unidades.
 775  8D69              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 776  8D69
 777  8D69              ;	ld hl,Ctrl_1
 778  8D69              ;	res 2,(hl)
 779  8D69
 780  8D69 CD D7 8E     	call Borra_diferencia
 781  8D6C
 782  8D6C 3A 2B 8C     	ld a,(Ctrl_3)
 783  8D6F CB 5F        	bit 3,a
 784  8D71 20 04        	jr nz,Gestion_de_Amadeus
 785  8D73
 786  8D73 EB           	ex de,hl
 787  8D74 71           	ld (hl),c
 788  8D75 2C           	inc l
 789  8D76 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 790  8D77
 791  8D77              ;! GESTIONA AMADEUS !!!!!!!!!!
 792  8D77
 793  8D77              Gestion_de_Amadeus
 794  8D77
 795  8D77 AF           	xor a
 796  8D78 32 1B 8C     	ld (Permiso_de_disparo_Entidades),a							; Volvemos a deshabilitar el permiso de disparo para las entidades hasta que (CLOCK_disparo_entidad) llegue a "0".
 797  8D7B CD 41 9F     	call Genera_datos_de_impresion_disparos_Entidades
 798  8D7E
 799  8D7E 21 2B 8C     	ld hl,Ctrl_3
 800  8D81 CB 76        	bit 6,(hl)
 801  8D83 28 13        	jr z,Amadeus_vivo
 802  8D85
 803  8D85              ; Amadeus ha sido destruido.
 804  8D85              ; Decrementa (Temp_new_live).
 805  8D85
 806  8D85 21 3D 8C     	ld hl,Temp_new_live
 807  8D88 35           	dec (hl)
 808  8D89 20 26        	jr nz,End_frame
 809  8D8B
 810  8D8B              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 811  8D8B
 812  8D8B 21 56 8C     	ld hl,Lives
 813  8D8E 35           	dec (hl)
 814  8D8F
 815  8D8F              ;! Fin del juego
 816  8D8F
 817  8D8F F3           	di
 818  8D90 28 FE        	jr z,$
 819  8D92 FB           	ei
 820  8D93
 821  8D93              ; Nueva nave.
 822  8D93
 823  8D93 CD 08 8E     	call Reinicia_Amadeus
 824  8D96 18 19        	jr End_frame
 825  8D98
 826  8D98              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 827  8D98
 828  8D98              Amadeus_vivo
 829  8D98
 830  8D98 3A 71 89     	ld a,(Impacto_Amadeus)
 831  8D9B A7           	and a
 832  8D9C C4 27 92     	call nz, Genera_explosion_Amadeus
 833  8D9F 20 10        	jr nz, End_frame
 834  8DA1
 835  8DA1 CD D4 91     	call Teclado
 836  8DA4
 837  8DA4 21 2B 8C     	ld hl,Ctrl_3
 838  8DA7 CB 6E        	bit 5,(hl)
 839  8DA9 28 06        	jr z,End_frame
 840  8DAB
 841  8DAB              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 842  8DAB
 843  8DAB CD 7D 8E     	call Change_Amadeus
 844  8DAE CD 3D 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 845  8DB1
 846  8DB1              End_frame
 847  8DB1
 848  8DB1              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 849  8DB1              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 850  8DB1
 851  8DB1 CD DF A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 852  8DB4 CD 32 A0     	call Calcula_bytes_pintado_disparos
 853  8DB7 CD 3F A0     	call Limpia_album_de_pintado_disparos
 854  8DBA
 855  8DBA              ; ------------ ------------- --------------
 856  8DBA
 857  8DBA 2A 0B 8C     	ld hl,(Album_de_borrado)
 858  8DBD 22 25 8C     	ld (Scanlines_album_SP),hl
 859  8DC0
 860  8DC0 21 2B 8C     	ld hl,Ctrl_3
 861  8DC3 CB C6        	set 0,(hl) 											; Indica Frame completo.
 862  8DC5 CB 9E        	res 3,(hl)
 863  8DC7 CB A6        	res 4,(hl)
 864  8DC9
 865  8DC9 AF           	xor a
 866  8DCA D3 FE        	out ($fe),a
 867  8DCC
 868  8DCC 76           	halt
 869  8DCD
 870  8DCD              ; ----------------------------------------
 871  8DCD
 872  8DCD              ;	ld a,(Ctrl_1) 										; Existe Loop?
 873  8DCD              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 874  8DCD CA C8 8C     	jp z,Main
 875  8DD0
 876  8DD0              ;------------------------------------------
 877  8DD0              ;
 878  8DD0              ;	14/09/24
 879  8DD0
 880  8DD0              Autoriza_disparo_de_entidades
 881  8DD0
 882  8DD0 3E 01        	ld a,1
 883  8DD2 32 1B 8C     	ld (Permiso_de_disparo_Entidades),a
 884  8DD5
 885  8DD5 3A 46 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 886  8DD8 32 47 8C     	ld (CLOCK_disparo_entidad),a
 887  8DDB
 888  8DDB 2A 40 8C     	ld hl,(RND_SP_Disparos)
 889  8DDE
 890  8DDE 7E           2 ld a,(hl)
 891  8DDF A7           	and a
 892  8DE0 28 08        	jr z,1F
 893  8DE2
 894  8DE2 32 42 8C     	ld (DB_RND_disparos),a
 895  8DE5 23           	inc hl
 896  8DE6 22 40 8C     	ld (RND_SP_Disparos),hl
 897  8DE9
 898  8DE9 C9           	ret
 899  8DEA
 900  8DEA 21 F6 88     1	ld hl,Numeros_aleatorios
 901  8DED 22 40 8C     	ld (RND_SP_Disparos),hl
 902  8DF0 18 EC        	jr 2B
 903  8DF2
 904  8DF2              ;------------------------------------------
 905  8DF2              ;
 906  8DF2              ;	14/09/24
 907  8DF2              ;
 908  8DF2              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 909  8DF2
 910  8DF2              Entidad_genera_disparo_si_procede
 911  8DF2
 912  8DF2 3A 00 8C     	ld a,(Entidades_en_curso)
 913  8DF5 A7           	and a
 914  8DF6 C8           	ret z
 915  8DF7
 916  8DF7 3A 42 8C     	ld a,(DB_RND_disparos)
 917  8DFA CB 4F        	bit 1,a
 918  8DFC F5           	push af											; Guardamos FLAGS.
 919  8DFD
 920  8DFD 17           	rla
 921  8DFE 17           	rla
 922  8DFF
 923  8DFF 32 42 8C     	ld (DB_RND_disparos),a
 924  8E02
 925  8E02 F1           	pop af
 926  8E03 C4 7D 9F     	call nz,Genera_disparo_de_entidad_maldosa
 927  8E06
 928  8E06 C9           	ret
 929  8E07
 930  8E07
 931  8E07              ; RECARGA DE NUEVA OLEADA.
 932  8E07
 933  8E07              ;	ld a,(Contador_de_frames)
 934  8E07              ;	ld b,a
 935  8E07              ;	ld a,(Activa_recarga_cajas)
 936  8E07              ;	cp b
 937  8E07              ;	jr z,20F
 938  8E07
 939  8E07              ;	ld hl,Ctrl_1
 940  8E07              ;	set 4,(hl)
 941  8E07              ;	jp Main
 942  8E07
 943  8E07              ;20 ld hl,Ctrl_1
 944  8E07              ;	res 4,(hl)
 945  8E07
 946  8E07              ;	ld a,(Contador_de_frames)
 947  8E07
 948  8E07              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 949  8E07              ;! _ IMPREDECIBLE !!!!
 950  8E07
 951  8E07              ;	add 10
 952  8E07              ;	ld (Clock_next_entity),a
 953  8E07
 954  8E07              ;	jp 4B
 955  8E07
 956  8E07 C9           	ret
 957  8E08
 958  8E08              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 959  8E08              ;
 960  8E08              ;	16/11/23
 961  8E08
 962  8E08              ;;Gestiona_Amadeus
 963  8E08
 964  8E08              ;! Activa/desactiva impacto con Amadeus.
 965  8E08
 966  8E08              ;	ld a,(Impacto)
 967  8E08              ;	and a
 968  8E08              ;	jr nz,2F
 969  8E08
 970  8E08              ;;	call Mov_Amadeus
 971  8E08
 972  8E08              ;;2 ld a,(Ctrl_0)
 973  8E08              ;;	bit 4,a
 974  8E08              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 975  8E08
 976  8E08              ;;	call Guarda_foto_entidad_a_pintar
 977  8E08              ;;	call Guarda_datos_de_borrado_Amadeus
 978  8E08
 979  8E08              ;;1 ld hl,Ctrl_0
 980  8E08              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 981  8E08
 982  8E08              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 983  8E08
 984  8E08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 985  8E08
 986  8E08              ;	call Calcula_numero_de_disparotes
 987  8E08
 988  8E08              ;;	ret
 989  8E08
 990  8E08              ; -----------------------------
 991  8E08              ;
 992  8E08              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 993  8E08              ;
 994  8E08              ;	INPUTS: B a de estar a "0".
 995  8E08
 996  8E08              ;Prepara_Borra_sprites
 997  8E08
 998  8E08              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 999  8E08              ;	ld a,l
1000  8E08              ;	ret z
1001  8E08
1002  8E08              ;	srl a
1003  8E08
1004  8E08              ;2 sub 16
1005  8E08              ;	jr z,1F
1006  8E08              ;	inc b
1007  8E08              ;	jr 2B
1008  8E08
1009  8E08              ;1 inc b
1010  8E08
1011  8E08              ;	exx
1012  8E08              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1013  8E08              ;	exx
1014  8E08
1015  8E08              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1016  8E08              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1017  8E08
1018  8E08              ;	ret
1019  8E08
1020  8E08              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1021  8E08              ;
1022  8E08              ;	24/07/24
1023  8E08
1024  8E08              Reinicia_Amadeus
1025  8E08
1026  8E08              ;	Reinicia posición y estado.
1027  8E08
1028  8E08 21 CF 50     	ld hl,$50cf
1029  8E0B 22 72 89     	ld (p.imp.amadeus),hl
1030  8E0E 21 F0 E0     	ld hl,$e0f0
1031  8E11 22 74 89     	ld (Pamm_Amadeus),hl
1032  8E14 21 3D 00     	ld hl,$003d
1033  8E17 22 76 89     	ld (Comm_Amadeus),hl
1034  8E1A
1035  8E1A              ;	limpiamos el álbum de borrado.
1036  8E1A
1037  8E1A 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1038  8E1D
1039  8E1D AF           	xor a
1040  8E1E 77           	ld (hl),a
1041  8E1F
1042  8E1F E5           	push hl
1043  8E20 D1           	pop de
1044  8E21 13           	inc de
1045  8E22
1046  8E22 01 23 00     	ld bc,35
1047  8E25 ED B0        	ldir
1048  8E27
1049  8E27 CD 3D 90     	call Genera_datos_de_impresion_Amadeus
1050  8E2A
1051  8E2A              ;	Reinicia temporizaciones.
1052  8E2A
1053  8E2A CD 1A 91     	call Inicia_Shield
1054  8E2D
1055  8E2D 3E 5A        	ld a,90
1056  8E2F 32 53 8C     	ld (Shield),a
1057  8E32
1058  8E32 3E 64        	ld a,100
1059  8E34 32 3D 8C     	ld (Temp_new_live),a
1060  8E37
1061  8E37              ; 	Restauramos el FLAG: Amadeus vivo.
1062  8E37
1063  8E37 21 2B 8C     	ld hl,Ctrl_3
1064  8E3A CB B6        	res 6,(hl)
1065  8E3C
1066  8E3C              ;	Fuerza la impresión de la nave en el siguiente frame.
1067  8E3C
1068  8E3C 21 2B 8C      	ld hl,Ctrl_3
1069  8E3F CB EE        	set 5,(hl)
1070  8E41
1071  8E41 C9           	ret
1072  8E42
1073  8E42              ; --------------------------------------------------------------------------------------------------------------
1074  8E42              ;
1075  8E42              ;	12/05/24
1076  8E42
1077  8E42 3A C3 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1078  8E45 CB 27        	sla a
1079  8E47 32 C3 8B     	ld (Velocidad),a
1080  8E4A E6 10        	and $10
1081  8E4C C8           	ret z
1082  8E4D
1083  8E4D              ; Restaura (Velocidad) a razón del nº de vueltas.
1084  8E4D
1085  8E4D 3A BB 8B     	ld a,(Contador_de_vueltas)
1086  8E50 CB 2F        	sra a
1087  8E52 CB 2F        	sra a
1088  8E54 32 C3 8B     	ld (Velocidad),a
1089  8E57
1090  8E57 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1091  8E5A 23           	inc hl
1092  8E5B 23           	inc hl
1093  8E5C 23           	inc hl
1094  8E5D 23           	inc hl
1095  8E5E 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1096  8E61
1097  8E61 C9           	ret
1098  8E62
1099  8E62              ; --------------------------------------------------------------------------------------------------------------
1100  8E62              ;
1101  8E62              ;	25/08/24
1102  8E62
1103  8E62              Change
1104  8E62
1105  8E62 3A 22 8C     	ld a,(Switch)
1106  8E65 EE 01        	xor 1
1107  8E67 32 22 8C     	ld (Switch),a
1108  8E6A 2A 09 8C     	ld hl,(Album_de_pintado)
1109  8E6D ED 5B 0B 8C  	ld de,(Album_de_borrado)
1110  8E71 EB           	ex de,hl
1111  8E72 22 09 8C     	ld (Album_de_pintado),hl
1112  8E75 22 25 8C     	ld (Scanlines_album_SP),hl
1113  8E78 ED 53 0B 8C  	ld (Album_de_borrado),de
1114  8E7C C9           	ret
1115  8E7D
1116  8E7D              Change_Amadeus
1117  8E7D
1118  8E7D 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1119  8E80 ED 5B 0F 8C  	ld de,(Album_de_borrado_Amadeus)
1120  8E84 EB           	ex de,hl
1121  8E85 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
1122  8E88 ED 53 0F 8C  	ld (Album_de_borrado_Amadeus),de
1123  8E8C C9           	ret
1124  8E8D
1125  8E8D              Change_Disparos
1126  8E8D
1127  8E8D 2A 11 8C     	ld hl,(Album_de_pintado_disparos)
1128  8E90 ED 5B 13 8C  	ld de,(Album_de_borrado_disparos)
1129  8E94 EB           	ex de,hl
1130  8E95 22 11 8C     	ld (Album_de_pintado_disparos),hl
1131  8E98 ED 53 13 8C  	ld (Album_de_borrado_disparos),de
1132  8E9C 22 15 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1133  8E9F
1134  8E9F 3A 17 8C     	ld a,(Num_de_bytes_album_de_disparos)
1135  8EA2 32 18 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1136  8EA5
1137  8EA5 C9           	ret
1138  8EA6
1139  8EA6              ; ------------------------------------
1140  8EA6              ;
1141  8EA6              ; 1/05/24
1142  8EA6
1143  8EA6              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1144  8EA6              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1145  8EA6
1146  8EA6              ;	DESTRUYE: HL,DE,A
1147  8EA6              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1148  8EA6
1149  8EA6              ;	Variables implicadas: (RND_SP).
1150  8EA6
1151  8EA6              Extrae_numero_aleatorio_y_avanza
1152  8EA6
1153  8EA6 21 00 89     	ld hl,Tabla_de_pintado
1154  8EA9 EB           	ex de,hl
1155  8EAA 2A 3E 8C     	ld hl,(RND_SP)
1156  8EAD EB           	ex de,hl
1157  8EAE A7           	and a
1158  8EAF ED 52        	sbc hl,de
1159  8EB1
1160  8EB1 2A 3E 8C     	ld hl,(RND_SP)
1161  8EB4 20 06        	jr nz,1F
1162  8EB6
1163  8EB6              ; Sitúa HL al principio de la tabla de nº aleatorios.
1164  8EB6
1165  8EB6 21 F6 88     	ld hl,Numeros_aleatorios
1166  8EB9 22 3E 8C     	ld (RND_SP),HL
1167  8EBC
1168  8EBC              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1169  8EBC
1170  8EBC 7E           1 ld a,(hl)
1171  8EBD 23           	inc hl
1172  8EBE 22 3E 8C     	ld (RND_SP),hl
1173  8EC1 C9           	ret
1174  8EC2
1175  8EC2              ; ------------------------------------
1176  8EC2              ;
1177  8EC2              ; 1/05/24
1178  8EC2
1179  8EC2              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1180  8EC2              ; (1 a 4 segundos).
1181  8EC2              ; Actualizamos (Clock_next_entity) con A.
1182  8EC2
1183  8EC2              ;	DESTRUYE: A y B.
1184  8EC2              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1185  8EC2              ;			 Actualiza (Clock_next_entity) con A.
1186  8EC2
1187  8EC2              ;	Variables implicadas: (Clock_next_entity).
1188  8EC2
1189  8EC2              ; Notas:
1190  8EC2
1191  8EC2              ; 	$32 1 seg.
1192  8EC2              ; 	$64 2 seg.
1193  8EC2              ; 	$96 3 seg.
1194  8EC2              ; 	$c8 4 seg.
1195  8EC2              ; 	$fa 5 seg.
1196  8EC2
1197  8EC2              ; $ffff 1310,7 seg, 22 minutos.
1198  8EC2
1199  8EC2              ;	$0100  5 seg. aproximadamente.
1200  8EC2              ;	$0200 10 seg. aproximadamente.
1201  8EC2              ;	$0300 15 seg. aproximadamente.
1202  8EC2              ;	$0400 20 seg. aproximadamente.
1203  8EC2              ;	$0500 25 seg. aproximadamente.
1204  8EC2              ;	$0600 30 seg. aproximadamente.
1205  8EC2
1206  8EC2              Define_Clock_next_entity
1207  8EC2
1208  8EC2 FE 34        	cp $34
1209  8EC4 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1210  8EC6
1211  8EC6              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1212  8EC6
1213  8EC6 4F           3 ld c,a
1214  8EC7 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1215  8EC9 2A 78 5C     	ld hl,(FRAMES)
1216  8ECC A7           	and a
1217  8ECD ED 4A        	adc hl,bc
1218  8ECF 22 43 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1219  8ED2 C9           	ret
1220  8ED3
1221  8ED3 3E 34        1 ld a,$34
1222  8ED5 18 EF        	jr 3B
1223  8ED7
1224  8ED7              ; ------------------------------------
1225  8ED7              ;
1226  8ED7              ; 18/03/24
1227  8ED7
1228  8ED7              Borra_diferencia
1229  8ED7
1230  8ED7 ED 4B 25 8C  	ld bc,(Scanlines_album_SP)
1231  8EDB
1232  8EDB 3A 22 8C     	ld a,(Switch)
1233  8EDE A7           	and a
1234  8EDF 28 08        	jr z,2F
1235  8EE1
1236  8EE1 2A 20 8C     	ld hl,(Techo_Scanlines_album_2)
1237  8EE4 11 20 8C     	ld de,Techo_Scanlines_album_2
1238  8EE7 18 06        	jr 3F
1239  8EE9
1240  8EE9 2A 1E 8C     2 ld hl,(Techo_Scanlines_album)
1241  8EEC 11 1E 8C     	ld de,Techo_Scanlines_album
1242  8EEF
1243  8EEF              ; Diferencia.
1244  8EEF
1245  8EEF ED 42        3 sbc hl,bc
1246  8EF1
1247  8EF1 C8           	ret z
1248  8EF2 D8           	ret c
1249  8EF3
1250  8EF3              ; Nuevo techo, (más bajo que el anterior).
1251  8EF3              ; Fijamos nuevo techo y borramos bytes sobrantes.
1252  8EF3
1253  8EF3 EB           	ex de,hl
1254  8EF4
1255  8EF4 71           	ld (hl),c
1256  8EF5 2C           	inc l
1257  8EF6 70           	ld (hl),b
1258  8EF7
1259  8EF7 AF           	xor a
1260  8EF8 43           	ld b,e
1261  8EF9
1262  8EF9 2A 25 8C     	ld hl,(Scanlines_album_SP)
1263  8EFC
1264  8EFC 77           1 ld (hl),a
1265  8EFD 23           	inc hl
1266  8EFE 10 FC        	djnz 1B
1267  8F00
1268  8F00              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1269  8F00
1270  8F00 21 2B 8C     	ld hl,Ctrl_3
1271  8F03 CB DE        	set 3,(hl)
1272  8F05
1273  8F05 C9           	ret
1274  8F06
1275  8F06              ; --------------------------------------------------------------------------------------------------------------
1276  8F06              ;
1277  8F06              ;	26/3/24
1278  8F06
1279  8F06              Recauda_informacion_de_entidad_en_curso
1280  8F06
1281  8F06              ; Almacena la Coordenada Y de la entidad en curso.
1282  8F06
1283  8F06              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1284  8F06
1285  8F06 3A BA 8B     	ld a,(Coordenada_y)
1286  8F09 2A 27 8C     	ld hl,(India_SP)
1287  8F0C 77           	ld (hl),a
1288  8F0D 2C           	inc l
1289  8F0E
1290  8F0E              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1291  8F0E
1292  8F0E ED 5B 25 8C  	ld de,(Scanlines_album_SP)
1293  8F12
1294  8F12 73           	ld (hl),e
1295  8F13 2C           	inc l
1296  8F14 72           	ld (hl),d
1297  8F15 2C           	inc l
1298  8F16
1299  8F16 22 27 8C     	ld (India_SP),hl
1300  8F19
1301  8F19 C9           	ret
1302  8F1A
1303  8F1A              ; --------------------------------------------------------------------------------------------------------------
1304  8F1A              ;
1305  8F1A              ;	27/03/24
1306  8F1A              ;
1307  8F1A
1308  8F1A              Inicializa_India_y_limpia_Tabla_de_impresion
1309  8F1A
1310  8F1A 2A 27 8C     	ld hl,(India_SP)
1311  8F1D 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1312  8F20
1313  8F20 79           	ld a,c
1314  8F21 95           	sub l
1315  8F22 28 06        	jr z,2F
1316  8F24 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1317  8F25              ;														; _ y pasamos a inicializar (India_SP).
1318  8F25 AF           	xor a
1319  8F26
1320  8F26 77           1 ld (hl),a
1321  8F27 2C           	inc l
1322  8F28 10 FC        	djnz 1B												; Limpia Tabla.
1323  8F2A
1324  8F2A 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1325  8F2D 22 27 8C     	ld (India_SP),hl
1326  8F30
1327  8F30 C9           	ret
1328  8F31
1329  8F31              ; --------------------------------------------------------------------------------------------------------------
1330  8F31              ;
1331  8F31              ;	31/3/24
1332  8F31
1333  8F31              Ordena_tabla_de_impresion
1334  8F31
1335  8F31              ; 5794 T/states.
1336  8F31              ; 6278 T/states.
1337  8F31              ; 5310 T/states.
1338  8F31
1339  8F31              ; Inicializamos punteros (India_SP) e (India_2_SP).
1340  8F31              ; Inicializamos contador de comparaciones, [C].
1341  8F31              ; Cargamos los registros A y B para efectuar comparación.
1342  8F31
1343  8F31 FD 2E 00     	ld iyl,0
1344  8F34
1345  8F34 3A 00 8C     	ld a,(Entidades_en_curso)
1346  8F37 FE 04        	cp 4 	;	4
1347  8F39 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1348  8F3A
1349  8F3A 3D           	dec a
1350  8F3B 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1351  8F3C 51           	ld d,c 										; Copia de respaldo.
1352  8F3D
1353  8F3D 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1354  8F3E
1355  8F3E 21 03 89     	ld hl,Tabla_de_pintado+3
1356  8F41 46           	ld b,(hl)
1357  8F42 22 29 8C     	ld (India_2_SP),hl
1358  8F45
1359  8F45 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1360  8F46 DC 6E 8F     	call c, Avanza_India_2_SP
1361  8F49 CC 6E 8F     	call z, Avanza_India_2_SP
1362  8F4C
1363  8F4C FD 2D        	dec iyl
1364  8F4E 28 18        	jr z,2F
1365  8F50
1366  8F50
1367  8F50              ; --------------------------------------------------------------------------------------------------------------
1368  8F50              ;
1369  8F50              ;	7/4/24
1370  8F50
1371  8F50              Trueque
1372  8F50
1373  8F50              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1374  8F50              ;  			A contiene en nº de fila de (India_SP).
1375  8F50              ;			HL contiene (India_2_SP).
1376  8F50
1377  8F50 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1378  8F51 E5           	push hl										; Preservo (India_2_SP).
1379  8F52
1380  8F52 ED 5B 27 8C  	ld de,(India_SP)
1381  8F56 EB           	ex de,hl
1382  8F57 70           	ld (hl),b
1383  8F58 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1384  8F59
1385  8F59 CD 9A 8F     	call Intercambia_1_byte
1386  8F5C CD 9A 8F     	call Intercambia_1_byte
1387  8F5F
1388  8F5F
1389  8F5F              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1390  8F5F              ; Recuperamos (India_2_SP) en HL.
1391  8F5F
1392  8F5F 2A 27 8C     	ld hl,(India_SP)
1393  8F62 7E           	ld a,(hl)
1394  8F63
1395  8F63 E1           	pop hl
1396  8F64 D1           	pop de
1397  8F65
1398  8F65              ; --------------------------------------------------------------------------------------------------------------
1399  8F65
1400  8F65 CD 6E 8F     	call Avanza_India_2_SP
1401  8F68
1402  8F68 14           2 inc d
1403  8F69 15           	dec d
1404  8F6A C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1405  8F6B 18 D8        	jr 1B
1406  8F6D
1407  8F6D C9           	ret
1408  8F6E
1409  8F6E              ; ----- ----- ----- ----- -----
1410  8F6E
1411  8F6E              Avanza_India_2_SP
1412  8F6E
1413  8F6E 0D           	dec c
1414  8F6F 28 0A        	jr z,Avanza_punteros_indios
1415  8F71
1416  8F71 FD 2C        	inc iyl
1417  8F73
1418  8F73 2C           	inc l
1419  8F74 2C           	inc l
1420  8F75 2C           	inc l
1421  8F76
1422  8F76 46           	ld b,(hl)
1423  8F77 22 29 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1424  8F7A
1425  8F7A C9           	ret
1426  8F7B
1427  8F7B              ; ----- ----- ----- ----- -----
1428  8F7B
1429  8F7B              Avanza_punteros_indios
1430  8F7B
1431  8F7B 15           	dec d
1432  8F7C 28 15        	jr z,Prepara_salida
1433  8F7E
1434  8F7E 4A           	ld c,d
1435  8F7F
1436  8F7F 2A 27 8C     	ld hl,(India_SP)
1437  8F82 2C           	inc l
1438  8F83 2C           	inc l
1439  8F84 2C           	inc l
1440  8F85 7E           	ld a,(hl)
1441  8F86 22 27 8C     	ld (India_SP),hl
1442  8F89
1443  8F89 2C           	inc l
1444  8F8A 2C           	inc l
1445  8F8B 2C           	inc l
1446  8F8C 46           	ld b,(hl)
1447  8F8D 22 29 8C     	ld (India_2_SP),hl
1448  8F90
1449  8F90 FD 2C        	inc iyl
1450  8F92
1451  8F92 C9           	ret
1452  8F93
1453  8F93              Prepara_salida
1454  8F93
1455  8F93 21 00 89     	ld hl,Tabla_de_pintado
1456  8F96 22 27 8C     	ld (India_SP),hl
1457  8F99 C9           	ret
1458  8F9A
1459  8F9A
1460  8F9A 2C           Intercambia_1_byte inc l
1461  8F9B 1C           	inc e
1462  8F9C 46           	ld b,(hl)
1463  8F9D 1A           	ld a,(de)
1464  8F9E EB           	ex de,hl
1465  8F9F 70           	ld (hl),b
1466  8FA0 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1467  8FA1 C9           	ret
1468  8FA2
1469  8FA2              ; -----------------------------------------------------------------------------------
1470  8FA2              ;
1471  8FA2              ;	20/01/24
1472  8FA2              ;
1473  8FA2              ;
1474  8FA2
1475  8FA2              Construye_movimientos_masticados_entidad
1476  8FA2
1477  8FA2 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1478  8FA5 E5           	push hl
1479  8FA6 CD E9 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1480  8FA9              ;															; _ el (Contador_de_mov_masticados).
1481  8FA9 CD B2 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1482  8FAC              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1483  8FAC CD DF 99     	call Recompone_posicion_inicio
1484  8FAF
1485  8FAF CD 0F 97     1 call Draw
1486  8FB2 CD CE 8F     	call Guarda_movimiento_masticado
1487  8FB5
1488  8FB5 CD 8C 9D     	call Movimiento
1489  8FB8
1490  8FB8 3A 2B 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1491  8FBB CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1492  8FBD 28 F0        	jr z,1B
1493  8FBF
1494  8FBF              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1495  8FBF              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1496  8FBF
1497  8FBF E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1498  8FC0 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1499  8FC3
1500  8FC3              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1501  8FC3
1502  8FC3 CD F0 9E     	call Situa_en_contador_general_de_mov_masticados
1503  8FC6
1504  8FC6              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1505  8FC6              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1506  8FC6
1507  8FC6 ED 4B C1 8B  	ld bc,(Contador_de_mov_masticados)
1508  8FCA
1509  8FCA 71           	ld (hl),c
1510  8FCB 23           	inc hl
1511  8FCC 70           	ld (hl),b
1512  8FCD
1513  8FCD C9           	ret
1514  8FCE
1515  8FCE              ; -----------------------------------------------------------------------------------
1516  8FCE              ;
1517  8FCE              ;	28/12/23
1518  8FCE              ;
1519  8FCE              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1520  8FCE              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1521  8FCE
1522  8FCE              Guarda_movimiento_masticado
1523  8FCE
1524  8FCE ED 73 05 8C  	ld (Stack),sp
1525  8FD2 ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1526  8FD6
1527  8FD6 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1528  8FD8 FD E5            push iy 												; Pushea Puntero_objeto.
1529  8FDA
1530  8FDA ED 7B 05 8C      ld sp,(Stack)
1531  8FDE
1532  8FDE 2A C1 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1533  8FE1 23           	inc hl
1534  8FE2 22 C1 8B     	ld (Contador_de_mov_masticados),hl
1535  8FE5
1536  8FE5 CD E9 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1537  8FE8              ;															; _ el (Contador_de_mov_masticados).
1538  8FE8 C9               ret
1539  8FE9
1540  8FE9              ; --------------------------------------------------------------------------------------------------------------
1541  8FE9              ;
1542  8FE9              ;	12/1/24
1543  8FE9              ;
1544  8FE9              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1545  8FE9
1546  8FE9              Actualiza_Puntero_de_almacen_de_mov_masticados
1547  8FE9
1548  8FE9 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1549  8FEC 01 04 00     	ld bc,4
1550  8FEF A7           	and a
1551  8FF0 ED 4A        	adc hl,bc
1552  8FF2 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1553  8FF5 C9           	ret
1554  8FF6
1555  8FF6              ; --------------------------------------------------------------------------------------------------------------
1556  8FF6              ;
1557  8FF6              ;	24/03/24
1558  8FF6              ;
1559  8FF6              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1560  8FF6              ;
1561  8FF6              ;	IX contiene el puntero de impresión.
1562  8FF6              ;	DE contiene (Puntero_objeto).
1563  8FF6
1564  8FF6
1565  8FF6              Cargamos_registros_con_mov_masticado
1566  8FF6
1567  8FF6 ED 73 05 8C  	ld (Stack),sp
1568  8FFA ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1569  8FFE
1570  8FFE D1           	pop de 															; DE contiene Puntero_objeto
1571  8FFF DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1572  9001
1573  9001 ED 73 BF 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1574  9005 ED 7B 05 8C  	ld sp,(Stack)
1575  9009
1576  9009 7B           	ld a,e
1577  900A 82           	add d															; Comprueba si ya no hay datos en el almacén.
1578  900B
1579  900B CC A2 93     	call z,Reinicia_entidad_maliciosa
1580  900E
1581  900E C9           	ret
1582  900F
1583  900F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1584  900F              ;
1585  900F              ;	22/7/24
1586  900F
1587  900F              Cargamos_registros_con_explosion
1588  900F
1589  900F
1590  900F 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1591  9012 CD AC 90     	call Extrae_address
1592  9015
1593  9015 5D           	ld e,l
1594  9016 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1595  9017
1596  9017 DD 2A BD 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1597  901B
1598  901B C9           	ret
1599  901C
1600  901C
1601  901C              Cargamos_registros_con_explosion_Amadeus
1602  901C
1603  901C 2A 74 89     	ld hl,(Pamm_Amadeus)
1604  901F CD AC 90     	call Extrae_address
1605  9022
1606  9022 5D           	ld e,l
1607  9023 54           	ld d,h
1608  9024
1609  9024 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1610  9028
1611  9028 C9           	ret
1612  9029
1613  9029              ; --------------------------------------------------------------------------------------------------------------
1614  9029              ;
1615  9029              ;	17/06/24
1616  9029              ;
1617  9029              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1618  9029              ;
1619  9029              ;	IX contiene el puntero de impresión.
1620  9029              ;	DE contiene (Puntero_objeto).
1621  9029
1622  9029
1623  9029              Cargamos_registros_con_mov_masticado_Amadeus
1624  9029
1625  9029 ED 73 05 8C  	ld (Stack),sp
1626  902D ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1627  9031 D1           	pop de 															; DE contiene Puntero_objeto
1628  9032 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1629  9034 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1630  9038 ED 7B 05 8C  	ld sp,(Stack)
1631  903C C9           	ret
1632  903D
1633  903D              ; ---------------------------------------------------------------------------------------------------------------------
1634  903D              ;
1635  903D              ;	18/6/24
1636  903D              ;
1637  903D              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1638  903D
1639  903D              Genera_datos_de_impresion_Amadeus
1640  903D
1641  903D 3A 71 89     	ld a,(Impacto_Amadeus)
1642  9040 A7           	and a
1643  9041 20 03        	jr nz,1F
1644  9043
1645  9043              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1646  9043              ; _apuntando a la correspondiente explosión.
1647  9043
1648  9043 CD 29 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1649  9046
1650  9046 DD 7D        1 ld a,ixl
1651  9048 E6 1F        	and $1f
1652  904A 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1653  904D
1654  904D 2A 25 8C     	ld hl,(Scanlines_album_SP)
1655  9050 E5           	push hl
1656  9051
1657  9051 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1658  9054 22 25 8C     	ld (Scanlines_album_SP),hl
1659  9057
1660  9057 CD F7 94     	call Genera_datos_de_impresion
1661  905A
1662  905A E1           	pop hl
1663  905B 22 25 8C     	ld (Scanlines_album_SP),hl
1664  905E
1665  905E C9           	ret
1666  905F
1667  905F              ; ---------------------------------------------------------------------------------------------------------------------
1668  905F              ;
1669  905F              ;	13/03/24
1670  905F              ;
1671  905F              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1672  905F
1673  905F              Inicia_albumes_de_lineas
1674  905F
1675  905F 21 00 80     	ld hl,Scanlines_album
1676  9062 22 09 8C     	ld (Album_de_pintado),hl
1677  9065 22 25 8C     	ld (Scanlines_album_SP),hl
1678  9068
1679  9068 21 1A 81     	ld hl,Scanlines_album_2
1680  906B 22 0B 8C     	ld (Album_de_borrado),hl
1681  906E
1682  906E C9           	ret
1683  906F
1684  906F              Inicia_albumes_de_lineas_Amadeus
1685  906F
1686  906F 21 34 82     	ld hl,Amadeus_scanlines_album
1687  9072 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
1688  9075 21 58 82     	ld hl,Amadeus_scanlines_album_2
1689  9078 22 0F 8C     	ld (Album_de_borrado_Amadeus),hl
1690  907B
1691  907B C9           	ret
1692  907C
1693  907C              Inicia_albumes_de_disparos
1694  907C
1695  907C 21 7C 82     	ld hl,Disparos_scanlines_album
1696  907F 22 11 8C     	ld (Album_de_pintado_disparos),hl
1697  9082 21 B8 82     	ld hl,Disparos_scanlines_album_2
1698  9085 22 13 8C     	ld (Album_de_borrado_disparos),hl
1699  9088
1700  9088 21 7C 82     	ld hl,Disparos_scanlines_album
1701  908B 22 15 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1702  908E
1703  908E C9           	ret
1704  908F
1705  908F              ; ---------------------------------------------------------------------------------------------------------------------
1706  908F              ;
1707  908F              ; 8/1/23
1708  908F              ;
1709  908F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1710  908F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1711  908F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1712  908F
1713  908F              ; Destruye HL y DE !!!!!
1714  908F
1715  908F              Inicia_punteros_de_cajas
1716  908F
1717  908F 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1718  9092 CD AC 90         call Extrae_address
1719  9095 22 F8 8B         ld (Puntero_store_caja),hl
1720  9098 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1721  909B 22 FC 8B     	ld (Indice_restore_caja),hl
1722  909E CD AC 90     	call Extrae_address
1723  90A1 22 FA 8B     	ld (Puntero_restore_caja),hl
1724  90A4 C9               ret
1725  90A5
1726  90A5              ; *************************************************************************************************************************************************************
1727  90A5              ;
1728  90A5              ; 8/1/23
1729  90A5              ;
1730  90A5              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1731  90A5
1732  90A5 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1733  90A8 22 2E 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1734  90AB C9           	ret
1735  90AC
1736  90AC              ; *************************************************************************************************************************************************************
1737  90AC              ;
1738  90AC              ; 20/10/22
1739  90AC              ;
1740  90AC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1741  90AC              ;
1742  90AC              ; Destruye el puntero y DE !!!!!
1743  90AC
1744  90AC 5E           Extrae_address ld e,(hl)
1745  90AD 23           	inc hl
1746  90AE 56           	ld d,(hl)
1747  90AF 2B           	dec hl
1748  90B0 EB           	ex de,hl
1749  90B1 C9           	ret
1750  90B2
1751  90B2              ; *************************************************************************************************************************************************************
1752  90B2              ;
1753  90B2              ;	20/1/24
1754  90B2              ;
1755  90B2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1756  90B2              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1757  90B2              ;
1758  90B2              ;   Destruye HL y BC !!!!!,
1759  90B2              ;
1760  90B2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1761  90B2              ;					"0" ..... Izquierda.
1762  90B2
1763  90B2              Inicia_Puntero_objeto
1764  90B2
1765  90B2 3A D7 8B     	ld a,(Cuad_objeto)
1766  90B5 E6 01        	and 1
1767  90B7 F5           	push af
1768  90B8 CC D4 90     	call z,Inicia_puntero_objeto_izq
1769  90BB F1           	pop af
1770  90BC C8           	ret z
1771  90BD CD C1 90     	call Inicia_puntero_objeto_der
1772  90C0 C9           	ret
1773  90C1
1774  90C1              ; Arrancamos desde la parte izquierda de la pantalla.
1775  90C1              ; Iniciamos (Indice_Sprite_der).
1776  90C1
1777  90C1 2A CD 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1778  90C4 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
1779  90C7 CD AC 90     	call Extrae_address
1780  90CA 22 CA 8B     	ld (Puntero_objeto),hl
1781  90CD
1782  90CD 2A CF 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1783  90D0 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1784  90D3 C9           	ret
1785  90D4
1786  90D4              ; Arrancamos desde la parte derecha de la pantalla.
1787  90D4              ; Iniciamos (Indice_Sprite_izq).
1788  90D4
1789  90D4 2A CF 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1790  90D7 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1791  90DA CD AC 90     	call Extrae_address
1792  90DD 22 CA 8B     	ld (Puntero_objeto),hl
1793  90E0
1794  90E0 2A CD 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1795  90E3 22 D1 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1796  90E6 C9           	ret
1797  90E7
1798  90E7              ; **************************************************************************************************
1799  90E7              ;
1800  90E7              ;	06/07/24
1801  90E7              ;
1802  90E7              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1803  90E7
1804  90E7              Restore_entidad
1805  90E7
1806  90E7 2A F8 8B     	ld hl,(Puntero_store_caja)
1807  90EA 7E           	ld a,(hl)
1808  90EB A7           	and a
1809  90EC CC FA 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1810  90EF 28 F6        	jr z,Restore_entidad
1811  90F1
1812  90F1 11 B8 8B     	ld de,Bandeja_DRAW
1813  90F4 01 0C 00     	ld bc,12
1814  90F7 ED B0        	ldir
1815  90F9 C9           	ret
1816  90FA
1817  90FA              ; **************************************************************************************************
1818  90FA              ;
1819  90FA              ;	08/05/23
1820  90FA              ;
1821  90FA              ;	Incrementamos los dos punteros de entidades. (+1).
1822  90FA
1823  90FA              Incrementa_punteros_de_cajas
1824  90FA
1825  90FA 2A FA 8B     	ld hl,(Puntero_restore_caja)
1826  90FD 22 F8 8B     	ld (Puntero_store_caja),hl
1827  9100 2A FC 8B     	ld hl,(Indice_restore_caja)
1828  9103 23           	inc hl
1829  9104 23           	inc hl
1830  9105 22 FC 8B     	ld (Indice_restore_caja),hl
1831  9108 CD AC 90         call Extrae_address
1832  910B 22 FA 8B         ld (Puntero_restore_caja),hl
1833  910E C9               ret
1834  910F
1835  910F              ; -----------------------------------------------------------
1836  910F
1837  910F              ; Teclado.
1838  910F
1839  910F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1840  9111 DB FE        	in a,($fe)
1841  9113 E6 01        	and $01
1842  9115 28 02        	jr z,1f
1843  9117 18 F6        	jr Pulsa_ENTER
1844  9119 C9           1 ret
1845  911A
1846  911A              ; **************************************************************************************************
1847  911A              ;
1848  911A              ; Temporización.
1849  911A
1850  911A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1851  911A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1852  911A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1853  911A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1854  911A
1855  911A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1856  911A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1857  911A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1858  911A
1859  911A              ; A partir de $4f61 no hace falta DELAY.
1860  911A
1861  911A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1862  911A
1863  911A              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1864  911A              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1865  911A              ;	LD A,B
1866  911A              ;	AND A
1867  911A              ;	JR NZ,wait
1868  911A              ;	RET
1869  911A
1870  911A              ; ---------------------------------------------------------------------------------------------------------------
1871  911A              ;
1872  911A              ;	13/07/24
1873  911A              ;
1874  911A
1875  911A              Inicia_Shield
1876  911A
1877  911A 21 4D 8C     	ld hl,Datos_Shield
1878  911D 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1879  9120
1880  9120 7E           	ld a,(hl)
1881  9121 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1882  9124
1883  9124 3E 01        	ld a,1
1884  9126 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1885  9129
1886  9129 C9           	ret
1887  912A
1888  912A              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1889  912A              ;
1890  912A              ;	4/6/24
1891  912A              ;
1892  912A              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1893  912A              ;
1894  912A              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1895  912A              ;
1896  912A
1897  912A              Actualiza_pantalla
1898  912A
1899  912A 3E 02        	ld a,2
1900  912C D3 FE        	out ($fe),a
1901  912E
1902  912E 3A 2B 8C     	ld a,(Ctrl_3)
1903  9131 CB 57        	bit 2,a
1904  9133 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1905  9135
1906  9135              Borrando_entidades
1907  9135
1908  9135 2A 25 8C     	ld hl,(Scanlines_album_SP)
1909  9138 CD AC 90     	call Extrae_address
1910  913B 24           	inc h
1911  913C 25           	dec h
1912  913D 28 05        	jr z,Pintando_entidades
1913  913F CD EC 95     	call Pinta_Sprites
1914  9142 18 F1        	jr Borrando_entidades
1915  9144
1916  9144              Pintando_entidades
1917  9144
1918  9144 2A 27 8C     	ld hl,(India_SP)
1919  9147 2C           	inc l
1920  9148 CD AC 90     	call Extrae_address
1921  914B 24           	inc h
1922  914C 25           	dec h
1923  914D 28 0E        	jr z,Ejecuta_escudo
1924  914F 1C           	inc e
1925  9150 1C           	inc e
1926  9151 ED 53 27 8C  	ld (India_SP),de
1927  9155 CD AC 90     	call Extrae_address
1928  9158 CD EC 95     	call Pinta_Sprites
1929  915B 18 E7        	jr Pintando_entidades
1930  915D
1931  915D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1932  915D
1933  915D              Ejecuta_escudo
1934  915D
1935  915D 3A 53 8C     	ld a,(Shield)
1936  9160 A7           	and a
1937  9161 20 2F        	jr nz,Aplica_Shield
1938  9163
1939  9163              Borrando_Amadeus
1940  9163
1941  9163 21 2B 8C     	ld hl,Ctrl_3
1942  9166 CB 6E        	bit 5,(hl)
1943  9168 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1944  916A
1945  916A 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1946  916D CD AC 90     	call Extrae_address
1947  9170 24           	inc h
1948  9171 25           	dec h
1949  9172 28 03        	jr z,Pintando_Amadeus
1950  9174 CD EC 95     	call Pinta_Sprites
1951  9177
1952  9177              Pintando_Amadeus
1953  9177
1954  9177 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1955  917A CD AC 90     	call Extrae_address
1956  917D 24           	inc h
1957  917E 25           	dec h
1958  917F 28 03        	jr z,1F
1959  9181 CD EC 95     	call Pinta_Sprites
1960  9184
1961  9184              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1962  9184
1963  9184 21 2B 8C     1 ld hl,Ctrl_3
1964  9187 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1965  9189 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1966  918B CB AE        	res 5,(hl)
1967  918D
1968  918D 3E 01        	ld a,1												; Borde azul.
1969  918F D3 FE        	out ($fe),a
1970  9191
1971  9191 C9           	ret
1972  9192
1973  9192              Aplica_Shield
1974  9192
1975  9192              ;	Bit 1 "1" (Shield_3) Sólo borra.
1976  9192              ;		  "0"     ""     Borra/Pinta.
1977  9192              ;	Bit 2    ""  RET.	 No borra, no pinta.
1978  9192
1979  9192 21 55 8C     	ld hl,Shield_3
1980  9195
1981  9195 CB 5E        	bit 3,(hl)
1982  9197 20 DE        	jr nz,Pintando_Amadeus
1983  9199
1984  9199 CB 56        	bit 2,(hl)
1985  919B 20 E7        	jr nz,1B
1986  919D
1987  919D CB 4E        	bit 1,(hl)
1988  919F C4 A6 91     	call nz,Borra_Amadeus_shield
1989  91A2
1990  91A2 28 BF        	jr z,Borrando_Amadeus
1991  91A4 18 DE        	jr 1B
1992  91A6
1993  91A6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1994  91A6
1995  91A6              Borra_Amadeus_shield
1996  91A6
1997  91A6 3A 2B 8C     	ld a,(Ctrl_3)
1998  91A9 CB 6F        	bit 5,a
1999  91AB 28 08        	jr z,1F
2000  91AD
2001  91AD 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
2002  91B0 CD AC 90     	call Extrae_address
2003  91B3 18 06        	jr 2F
2004  91B5
2005  91B5 2A 0D 8C     1 ld hl,(Album_de_pintado_Amadeus)
2006  91B8 CD AC 90     	call Extrae_address
2007  91BB
2008  91BB CD EC 95     2 call Pinta_Sprites
2009  91BE
2010  91BE AF           	xor a
2011  91BF 3C           	inc a											; Asegura NZ en la salida de la rutina.
2012  91C0
2013  91C0 C9           	ret
2014  91C1
2015  91C1              Pinta_Amadeus_shield
2016  91C1
2017  91C1 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
2018  91C4 CD AC 90     	call Extrae_address
2019  91C7 CD EC 95     	call Pinta_Sprites
2020  91CA
2021  91CA AF           	xor a
2022  91CB 3C           	inc a											; Asegura NZ en la salida de la rutina.
2023  91CC
2024  91CC C9           	ret
2025  91CD
2026  91CD              Borra_Pinta_Amadeus_shield
2027  91CD
2028  91CD CD A6 91     	call Borra_Amadeus_shield
2029  91D0 CD C1 91     	call Pinta_Amadeus_shield
2030  91D3 C9           	ret
2031  91D4
2032  91D4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2033  91D4              ;
2034  91D4              ;	19/6/24
2035  91D4              ;
2036  91D4
2037  91D4              Teclado
2038  91D4
2039  91D4              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2040  91D4
2041  91D4 3E F7        	ld a,$f7												; "5" para disparar.
2042  91D6 DB FE        	in a,($fe)
2043  91D8 E6 10        	and $10
2044  91DA
2045  91DA CC 02 A1     	call z,Genera_disparo_Amadeus
2046  91DD
2047  91DD 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2048  91DF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2049  91E1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2050  91E3 CC 59 9D         call z,Amadeus_a_izquierda
2051  91E6
2052  91E6 3E F7        	ld a,$f7
2053  91E8 DB FE        	in a,($fe)
2054  91EA E6 01        	and $01
2055  91EC C8           	ret z
2056  91ED
2057  91ED 3E F7        	ld a,$f7
2058  91EF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2059  91F1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2060  91F3 CC 71 9D     	call z,Amadeus_a_derecha
2061  91F6
2062  91F6 C9           	ret
2063  91F7
2064  91F7              ; ------------------------------------------------------------------------------------------------------------------------
2065  91F7              ;
2066  91F7              ;	06/07/24
2067  91F7              ;
2068  91F7
2069  91F7              Genera_explosion
2070  91F7
2071  91F7 21 3B 8C     	ld hl,Clock_explosion
2072  91FA 35           	dec (hl)
2073  91FB 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2074  91FD
2075  91FD              Borra_entidad_colisionada
2076  91FD
2077  91FD CD 06 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2078  9200 CD 0F 90     	call Cargamos_registros_con_explosion
2079  9203 CD F7 94     	call Genera_datos_de_impresion
2080  9206
2081  9206 AF           	xor a
2082  9207 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2083  9208
2084  9208 C9           	ret
2085  9209
2086  9209              Siguiente_frame_explosion
2087  9209
2088  9209 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2089  920B
2090  920B              ; Avanza Frame de explosión.
2091  920B
2092  920B 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2093  920E 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2094  9211
2095  9211 79           	ld a,c
2096  9212 95           	sub l
2097  9213 20 0B        	jr nz,1F
2098  9215
2099  9215              ; Fín de la entidad !!!!!!!!!!!!!
2100  9215
2101  9215 21 FF 8B     	ld hl,Numero_parcial_de_entidades
2102  9218 35           	dec (hl)
2103  9219 23           	inc hl
2104  921A 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2105  921B
2106  921B CD 77 93     	call Limpiamos_bandeja_DRAW
2107  921E 18 DD        	jr Borra_entidad_colisionada
2108  9220
2109  9220 23           1 inc hl
2110  9221 23           	inc hl
2111  9222 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2112  9225 18 D6        	jr Borra_entidad_colisionada
2113  9227
2114  9227              ; ----- ----- ----- ----- -----
2115  9227
2116  9227              Genera_explosion_Amadeus
2117  9227
2118  9227 21 3C 8C     	ld hl,Clock_explosion_Amadeus
2119  922A 35           	dec (hl)
2120  922B 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2121  922D
2122  922D              Borra_Amadeus_impactado
2123  922D
2124  922D CD 7D 8E     	call Change_Amadeus
2125  9230 CD 1C 90     	call Cargamos_registros_con_explosion_Amadeus
2126  9233 CD 3D 90     	call Genera_datos_de_impresion_Amadeus
2127  9236
2128  9236 21 2B 8C     	ld hl,Ctrl_3
2129  9239 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2130  923B
2131  923B AF           	xor a
2132  923C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2133  923D
2134  923D C9           	ret
2135  923E
2136  923E              Siguiente_frame_explosion_Amadeus
2137  923E
2138  923E 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2139  9240
2140  9240              ; Avanza Frame de explosión.
2141  9240
2142  9240 2A 74 89     	ld hl,(Pamm_Amadeus)
2143  9243 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2144  9246
2145  9246 79           	ld a,c
2146  9247 95           	sub l
2147  9248 20 0B        	jr nz,1F
2148  924A
2149  924A              ; Fín de Amadeus !!!!!!!!!!!!!
2150  924A              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2151  924A
2152  924A AF           	xor a
2153  924B 32 71 89     	ld (Impacto_Amadeus),a
2154  924E 21 2B 8C     	ld hl,Ctrl_3
2155  9251 CB F6        	set 6,(hl)
2156  9253
2157  9253 18 D8        	jr Borra_Amadeus_impactado
2158  9255
2159  9255 23           1 inc hl
2160  9256 23           	inc hl
2161  9257 22 74 89     	ld (Pamm_Amadeus),hl
2162  925A 18 D1        	jr Borra_Amadeus_impactado
2163  925C
2164  925C              ; ---------------------------------------------------------------
2165  925C
2166  925C              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 925C              ; ******************************************************************************************************************************************************************************************
   2+ 925C              ;
   3+ 925C              ;   21/04/24
   4+ 925C              ;
   5+ 925C              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 925C              ;   (XOR) bit a bit.
   7+ 925C              ;
   8+ 925C              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 925C
  10+ 925C              Derivando_RND
  11+ 925C
  12+ 925C 21 F6 88         ld hl,Numeros_aleatorios
  13+ 925F
  14+ 925F ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9261 C5               push bc
  16+ 9262              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9262 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9265              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9265
  20+ 9265 A7           6 and a                                 ; Carry a "0".
  21+ 9266 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9268 30 02            jr nc,1F
  23+ 926A
  24+ 926A CB C1            set 0,c
  25+ 926C
  26+ 926C 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 926D E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 926F 5F               ld e,a
  29+ 9270
  30+ 9270 7A               ld a,d
  31+ 9271 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9273 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9275
  34+ 9275 CB 3F            srl a
  35+ 9277
  36+ 9277 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9278
  38+ 9278 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9279 28 04            jr z,4F
  40+ 927B
  41+ 927B CB FF            set 7,a
  42+ 927D 18 02            jr 5F
  43+ 927F
  44+ 927F CB BF        4 res 7,a
  45+ 9281
  46+ 9281 CB 21        5 sla c
  47+ 9283 10 E0            djnz 6B
  48+ 9285
  49+ 9285 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9286
  51+ 9286 77               ld (hl),a
  52+ 9287 23               inc hl
  53+ 9288 C1               pop bc
  54+ 9289 10 D4            djnz 3B
  55+ 928B
  56+ 928B C9               ret
  57+ 928C
  58+ 928C
  59+ 928C
# file closed: RND_Derivando.asm
2167  928C              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 928C              ;---------------------------------------------------------------------------------------------------------------
   2+ 928C              ;
   3+ 928C              ;   8/3/24
   4+ 928C              ;
   5+ 928C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 928C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 928C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 928C              ;	_ de la 1ª entidad del Nivel.
   9+ 928C              ;
  10+ 928C              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 928C
  12+ 928C              ;	MODIFICA: HL,DE y A.
  13+ 928C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 928C
  15+ 928C              Inicializa_Nivel
  16+ 928C
  17+ 928C 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 928F CD AC 90     	call Extrae_address
  19+ 9292 7E           	ld a,(hl)
  20+ 9293 32 FE 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9296 23           	inc hl
  22+ 9297 CD A4 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 929A 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 929D CD AD 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92A0
  26+ 92A0 CD BE 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92A3 C9           	ret
  28+ 92A4
  29+ 92A4              ; ----------------------
  30+ 92A4
  31+ 92A4 11 DD 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A7 01 04 00     	ld bc,4
  33+ 92AA ED B0        	ldir
  34+ 92AC C9           	ret
  35+ 92AD
  36+ 92AD 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92AE CD 48 94         call Calcula_salto_en_BC
  38+ 92B1 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B4 A7               and a
  40+ 92B5 ED 4A            adc hl,bc
  41+ 92B7 CD AC 90         call Extrae_address
  42+ 92BA 22 E9 8B         ld (Puntero_indice_mov),hl
  43+ 92BD C9               ret
  44+ 92BE
  45+ 92BE 3A B8 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92C1 CD 48 94     	call Calcula_salto_en_BC
  47+ 92C4 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C7 A7               and a
  49+ 92C8 ED 4A            adc hl,bc
  50+ 92CA CD AC 90         call Extrae_address
  51+ 92CD 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92D0 C9           	ret
  53+ 92D1
  54+ 92D1              ;---------------------------------------------------------------------------------------------------------------
  55+ 92D1              ;
  56+ 92D1              ;   5/1/24
  57+ 92D1              ;
  58+ 92D1              ;	Destruye A,BC,HL,DE
  59+ 92D1
  60+ 92D1              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92D1              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92D1
  63+ 92D1              Inicia_Entidades
  64+ 92D1
  65+ 92D1              ; Preparamos los punteros de las cajas de entidades:
  66+ 92D1
  67+ 92D1 CD 8F 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D4              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D4 CD 90 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D7
  71+ 92D7 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92DA
  73+ 92DA 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92DD
  75+ 92DD CD F6 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92E0
  77+ 92E0 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 92E3
  79+ 92E3              ; En este punto:
  80+ 92E3              ;
  81+ 92E3              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92E3              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92E3
  84+ 92E3 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E4
  86+ 92E4 7E           	ld a,(hl)
  87+ 92E5 CD 62 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92E8
  89+ 92E8 CD 5A 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92EB
  91+ 92EB              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92EB
  93+ 92EB CD 18 94     	call Busca_mov_masticados_segun_tipo
  94+ 92EE
  95+ 92EE A7           	and a
  96+ 92EF 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92F1
  98+ 92F1              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92F1
 100+ 92F1              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92F1              ;	_ de este tipo de entidad.
 102+ 92F1
 103+ 92F1 CD F0 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F4 CD FD 9E     	call Transfiere_datos_de_contadores
 105+ 92F7
 106+ 92F7 18 06        	jr 4F
 107+ 92F9
 108+ 92F9 CD A2 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92FC
 110+ 92FC              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92FC              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92FC              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92FC              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92FC              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92FC
 116+ 92FC CD D6 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92FF              ;																; _ Mov_masticados ya generados.
 118+ 92FF
 119+ 92FF CD F6 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9302
 121+ 9302 DD E5        	push ix
 122+ 9304 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9305
 124+ 9305 D5           	push de
 125+ 9306 CD CB 94     	call Genera_coordenadas
 126+ 9309
 127+ 9309 ED 5B 25 8C  	ld de,(Scanlines_album_SP)
 128+ 930D CD 06 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9310 D1           	pop de
 130+ 9311
 131+ 9311 CD F7 94     	call Genera_datos_de_impresion
 132+ 9314              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9314              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9314              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9314              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9314
 137+ 9314 CD 9A 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9317
 139+ 9317              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9317
 141+ 9317 ED 5B F8 8B  	ld de,(Puntero_store_caja)
 142+ 931B CD 87 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 931E
 144+ 931E CD 77 93     	call Limpiamos_bandeja_DRAW
 145+ 9321 CD FA 90     	call Incrementa_punteros_de_cajas
 146+ 9324
 147+ 9324              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9324              ; _ entidad del Nivel.
 149+ 9324
 150+ 9324 3A 2C 8C     	ld a,(Ctrl_4)
 151+ 9327 E6 F0        	and $f0
 152+ 9329 32 2C 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 932C
 154+ 932C              ; Siguiente entidad del Nivel.
 155+ 932C
 156+ 932C 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 932F 23           	inc hl 														; _ entidad del Nivel.
 158+ 9330
 159+ 9330 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9331
 161+ 9331 10 A7        	djnz 2B
 162+ 9333
 163+ 9333 C9           	ret
 164+ 9334
 165+ 9334              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9334              ;
 167+ 9334              ;	27/5/24
 168+ 9334              ;
 169+ 9334              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9334              ;
 171+ 9334
 172+ 9334              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9334              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9334
 175+ 9334 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9337 CD 5A 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 933A
 178+ 933A
 179+ 933A              Construye_movimientos_masticados_Amadeus
 180+ 933A
 181+ 933A 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 933D CD E9 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9340              ;															; _ el (Contador_de_mov_masticados).
 184+ 9340 CD B2 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9343              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9343
 187+ 9343              ; Generamos movimientos masticados de Amadeus.
 188+ 9343
 189+ 9343 06 79        	ld b,121												; $0079, 121d.
 190+ 9345
 191+ 9345 C5           1 push bc
 192+ 9346 CD 0F 97     	call Draw
 193+ 9349 CD CE 8F     	call Guarda_movimiento_masticado
 194+ 934C
 195+ 934C CD 83 9A     	call Mov_right
 196+ 934F CD 83 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9352
 198+ 9352 C1           	pop bc
 199+ 9353 10 F0        	djnz 1B
 200+ 9355
 201+ 9355              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9355
 203+ 9355              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9355              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9355
 206+ 9355 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9358 01 08 00     	ld bc,8
 208+ 935B A7           	and a
 209+ 935C ED 42        	sbc hl,bc
 210+ 935E 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9361
 212+ 9361 C9           	ret
 213+ 9362
 214+ 9362              ; ---------------------------------------------------------------------
 215+ 9362              ;
 216+ 9362              ;	10/02/24
 217+ 9362              ;
 218+ 9362              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9362              ;
 220+ 9362              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9362
 222+ 9362              Definicion_segun_tipo
 223+ 9362
 224+ 9362 CD 48 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9365 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9368 CD 50 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 936B C9           	ret
 228+ 936C
 229+ 936C              ; ---------------------------------------------------------------------
 230+ 936C              ;
 231+ 936C              ;	6/7/24
 232+ 936C
 233+ 936C
 234+ 936C              Store_Restore_cajas
 235+ 936C
 236+ 936C ED 5B F8 8B  	ld de,(Puntero_store_caja)
 237+ 9370 CD 87 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9373 CD FA 90     	call Incrementa_punteros_de_cajas
 239+ 9376 C9           	ret
 240+ 9377
 241+ 9377              ; ---------------------------------------------------------------------
 242+ 9377              ;
 243+ 9377              ;	23/6/24
 244+ 9377              ;
 245+ 9377              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9377              ;
 247+ 9377              ;	MODIFY: HL
 248+ 9377
 249+ 9377              Limpiamos_bandeja_DRAW
 250+ 9377
 251+ 9377 ED 73 05 8C  	ld (Stack),sp
 252+ 937B 31 DD 8B     	ld sp,Vel_left
 253+ 937E
 254+ 937E AF           	xor a
 255+ 937F 67           	ld h,a
 256+ 9380 6F           	ld l,a
 257+ 9381
 258+ 9381 E5           	push hl
 259+ 9382 E5           	push hl
 260+ 9383 E5           	push hl
 261+ 9384 E5           	push hl
 262+ 9385 E5           	push hl
 263+ 9386 E5           	push hl
 264+ 9387 E5           	push hl
 265+ 9388 E5           	push hl
 266+ 9389 E5           	push hl
 267+ 938A E5           	push hl
 268+ 938B E5           	push hl
 269+ 938C E5           	push hl
 270+ 938D E5           	push hl
 271+ 938E E5           	push hl
 272+ 938F E5           	push hl
 273+ 9390 E5           	push hl
 274+ 9391 E5           	push hl
 275+ 9392 E5           	push hl
 276+ 9393
 277+ 9393 33           	inc sp
 278+ 9394
 279+ 9394 E5           	push hl
 280+ 9395 ED 7B 05 8C  	ld sp,(Stack)
 281+ 9399
 282+ 9399 C9           	ret
 283+ 939A
 284+ 939A              ; ---------------------------------------------------------------------
 285+ 939A              ;
 286+ 939A              ;	24/03/24
 287+ 939A
 288+ 939A 2A C1 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 939D 2B           	dec hl
 290+ 939E 22 C1 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93A1 C9           	ret
 292+ 93A2
 293+ 93A2              ; ---------------------------------------------------------------------
 294+ 93A2              ;
 295+ 93A2              ;	8/5/24
 296+ 93A2
 297+ 93A2              Reinicia_entidad_maliciosa
 298+ 93A2
 299+ 93A2              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93A2
 301+ 93A2 CD F0 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A5 CD FD 9E     	call Transfiere_datos_de_contadores
 303+ 93A8
 304+ 93A8              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93A8
 306+ 93A8 3A B8 8B     	ld a,(Tipo)
 307+ 93AB CD 62 93     	call Definicion_segun_tipo
 308+ 93AE
 309+ 93AE E5           	push hl
 310+ 93AF DD E1        	pop ix
 311+ 93B1
 312+ 93B1 DD 6E 0B     	ld l,(ix+11)
 313+ 93B4 DD 66 0C     	ld h,(ix+12)
 314+ 93B7
 315+ 93B7 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93BA
 317+ 93BA CD F6 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93BD
 319+ 93BD              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93BD              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93BD              ; Ejemplos.
 322+ 93BD
 323+ 93BD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93BD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93BD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93BD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93BD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93BD
 329+ 93BD 21 BB 8B     	ld hl,Contador_de_vueltas
 330+ 93C0 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93C2
 332+ 93C2 7E           	ld a,(hl)
 333+ 93C3 CB 2F        	sra a
 334+ 93C5 CB 2F        	sra a
 335+ 93C7
 336+ 93C7 32 C3 8B     	ld (Velocidad),a
 337+ 93CA
 338+ 93CA 3E 40        	ld a,$40
 339+ 93CC BE           	cp (hl)
 340+ 93CD C0           	ret nz
 341+ 93CE
 342+ 93CE              ; Límitador.
 343+ 93CE
 344+ 93CE              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93CE
 346+ 93CE CB 2E        	sra (hl)
 347+ 93D0 21 C3 8B     	ld hl,Velocidad
 348+ 93D3 CB 2E        	sra (hl)
 349+ 93D5
 350+ 93D5 C9           	ret
 351+ 93D6
 352+ 93D6              ; ---------------------------------------------------------------------
 353+ 93D6              ;
 354+ 93D6              ;	22/01/24
 355+ 93D6
 356+ 93D6 21 2C 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93D9 CB 46        	bit 0,(hl)
 358+ 93DB 20 0D        	jr nz,1F
 359+ 93DD CB 4E        	bit 1,(hl)
 360+ 93DF 20 0C        	jr nz,2F
 361+ 93E1 CB 56        	bit 2,(hl)
 362+ 93E3 20 0B        	jr nz,3F
 363+ 93E5 CB 5E        	bit 3,(hl)
 364+ 93E7 20 0A        	jr nz,4F
 365+ 93E9 C9           	ret
 366+ 93EA
 367+ 93EA CB E6        1 set 4,(hl)
 368+ 93EC C9           	ret
 369+ 93ED CB EE        2 set 5,(hl)
 370+ 93EF C9           	ret
 371+ 93F0 CB F6        3 set 6,(hl)
 372+ 93F2 C9           	ret
 373+ 93F3 CB FE        4 set 7,(hl)
 374+ 93F5 C9           	ret
 375+ 93F6
 376+ 93F6              ; ---------------------------------------------------------------------
 377+ 93F6              ;
 378+ 93F6              ;	23/01/24
 379+ 93F6              ;
 380+ 93F6              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F6              ;
 382+ 93F6              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F6              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F6              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F6              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F6
 387+ 93F6              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F6
 389+ 93F6 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F7 3D           	dec a
 391+ 93F8 20 06        	jr nz,1F
 392+ 93FA
 393+ 93FA              ; --- Tipo_1
 394+ 93FA
 395+ 93FA 21 2C 8C     	ld hl,Ctrl_4
 396+ 93FD CB C6        	set 0,(hl)
 397+ 93FF C9           	ret
 398+ 9400
 399+ 9400 3D           1 dec a
 400+ 9401 20 06        	jr nz,2F
 401+ 9403
 402+ 9403              ; --- Tipo_2
 403+ 9403
 404+ 9403 21 2C 8C     	ld hl,Ctrl_4
 405+ 9406 CB CE        	set 1,(hl)
 406+ 9408 C9           	ret
 407+ 9409
 408+ 9409 3D           2 dec a
 409+ 940A 20 06        	jr nz,3F
 410+ 940C
 411+ 940C              ; --- Tipo_3
 412+ 940C
 413+ 940C 21 2C 8C     	ld hl,Ctrl_4
 414+ 940F CB D6        	set 2,(hl)
 415+ 9411 C9           	ret
 416+ 9412
 417+ 9412              ; --- Tipo_3
 418+ 9412
 419+ 9412 21 2C 8C     3 ld hl,Ctrl_4
 420+ 9415 CB D6        	set 2,(hl)
 421+ 9417 C9           	ret
 422+ 9418
 423+ 9418              ; ---------------------------------------------------------------------
 424+ 9418              ;
 425+ 9418              ;	22/01/24
 426+ 9418
 427+ 9418 21 2C 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 941B CB 46        	bit 0,(hl)
 429+ 941D 20 0E        	jr nz,1F
 430+ 941F
 431+ 941F CB 4E        	bit 1,(hl)
 432+ 9421 20 10        	jr nz,2F
 433+ 9423
 434+ 9423 CB 56        	bit 2,(hl)
 435+ 9425 20 12        	jr nz,3F
 436+ 9427
 437+ 9427 CB 5E        	bit 3,(hl)
 438+ 9429 20 14        	jr nz,4F
 439+ 942B 18 19        	jr 6F
 440+ 942D
 441+ 942D              ; Entidad_de_Tipo_1.
 442+ 942D
 443+ 942D CB 66        1 bit 4,(hl)
 444+ 942F 28 15        	jr z,6F
 445+ 9431 18 10        	jr 5F
 446+ 9433
 447+ 9433              ; Entidad_de_Tipo_2.
 448+ 9433
 449+ 9433 CB 6E        2 bit 5,(hl)
 450+ 9435 28 0F        	jr z,6F
 451+ 9437 18 0A        	jr 5F
 452+ 9439
 453+ 9439              ; Entidad_de_Tipo_3.
 454+ 9439
 455+ 9439 CB 76        3 bit 6,(hl)
 456+ 943B 28 09        	jr z,6F
 457+ 943D 18 04        	jr 5F
 458+ 943F
 459+ 943F              ; Entidad_de_Tipo_4.
 460+ 943F
 461+ 943F CB 7E        4 bit 7,(hl)
 462+ 9441 28 03        	jr z,6F
 463+ 9443
 464+ 9443              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9443
 466+ 9443 AF           5 xor a
 467+ 9444 3C           	inc a
 468+ 9445 C9           	ret
 469+ 9446
 470+ 9446              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9446
 472+ 9446 AF           6 xor a
 473+ 9447 C9           	ret
 474+ 9448
 475+ 9448              ;	------------------------------------------------------------------------------------
 476+ 9448              ;
 477+ 9448              ;	12/01/24
 478+ 9448              ;
 479+ 9448              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9448              ;
 481+ 9448              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9448              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9448
 484+ 9448 CB 27        Calcula_salto_en_BC sla a
 485+ 944A D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 944C 4F           	ld c,a
 487+ 944D 06 00        	ld b,0
 488+ 944F C9           	ret
 489+ 9450
 490+ 9450              ; ------------------------------------------------------------------
 491+ 9450              ;
 492+ 9450              ;	19/1/24
 493+ 9450              ;
 494+ 9450              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9450              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9450
 497+ 9450 A7           Situa_en_datos_de_definicion and a
 498+ 9451 ED 4A        	adc hl,bc
 499+ 9453 CD AC 90     	call Extrae_address
 500+ 9456 22 03 8C         ld (Datos_de_entidad),hl
 501+ 9459 C9           	ret
 502+ 945A
 503+ 945A              ; ------------------------------------------------------------------
 504+ 945A
 505+ 945A              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 945A              ; 	inc de
 507+ 945A              ; 	inc de
 508+ 945A              ; 	ex de,hl
 509+ 945A              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 945A              ; 	ret
 511+ 945A
 512+ 945A              ; ----------------------------------------------------------------------------------------------------------
 513+ 945A              ;
 514+ 945A              ;	24/6/24
 515+ 945A              ;
 516+ 945A              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 945A              ;	_ de entidad.
 518+ 945A              ;
 519+ 945A              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 945A              ;
 521+ 945A              ;
 522+ 945A              ;	MODIFICA: HL,DE y BC
 523+ 945A
 524+ 945A
 525+ 945A              Definicion_de_entidad_a_bandeja_DRAW
 526+ 945A
 527+ 945A 11 B8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 945D 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 945E 12           	ld (de),a
 530+ 945F 23           	inc hl
 531+ 9460              ;
 532+ 9460 11 C6 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9463 01 02 00     	ld bc,2
 534+ 9466 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9468              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9468 11 BB 8B     	ld de,Contador_de_vueltas
 537+ 946B 7E           	ld a,(hl)
 538+ 946C 12           	ld (de),a
 539+ 946D 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 946E
 541+ 946E 11 CD 8B     	ld de,Indice_Sprite_der
 542+ 9471 01 04 00     	ld bc,4
 543+ 9474 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9476
 545+ 9476 11 D5 8B     	ld de,Posicion_inicio
 546+ 9479 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 947C ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 947E
 549+ 947E 11 BF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9481 01 02 00     	ld bc,2
 551+ 9484 ED B0        	ldir
 552+ 9486
 553+ 9486 C9           	ret
 554+ 9487
 555+ 9487              ; ----------------------------------------------------------------------------------------------------------
 556+ 9487              ;
 557+ 9487              ;	1/8/24
 558+ 9487              ;
 559+ 9487
 560+ 9487              Parametros_de_bandeja_DRAW_a_caja
 561+ 9487
 562+ 9487 21 B8 8B     	ld hl,Bandeja_DRAW
 563+ 948A 01 0C 00     	ld bc,12
 564+ 948D ED B0        	ldir
 565+ 948F C9           	ret
 566+ 9490
 567+ 9490              ;---------------------------------------------------------------------------------------------------------------
 568+ 9490              ;
 569+ 9490              ;	5/1/24
 570+ 9490              ;
 571+ 9490              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9490              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9490              ;
 574+ 9490              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9490              ;
 576+ 9490              ;	(Numero_parcial_de_entidades)="7".
 577+ 9490              ;
 578+ 9490              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9490              ;
 580+ 9490              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9490              ;
 582+ 9490              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9490              ;	MODIFICA: A y B.
 584+ 9490              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9490
 586+ 9490              Inicializa_Numero_parcial_de_entidades
 587+ 9490
 588+ 9490              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9490
 590+ 9490 3A FE 8B     	ld a,(Numero_de_entidades)
 591+ 9493 A7           	and a
 592+ 9494
 593+ 9494              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9494              ;	jr z,$
 595+ 9494              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9494
 597+ 9494 20 03        	jr nz,3F
 598+ 9496
 599+ 9496              ; ---------- ---------- ----------
 600+ 9496
 601+ 9496              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9496              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9496
 604+ 9496 CD 8C 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9499
 606+ 9499              ; ---------- ---------- ----------
 607+ 9499
 608+ 9499 3A FE 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 949C FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 949E 38 08        	jr c,1F
 611+ 94A0
 612+ 94A0              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94A0              ; Actualizamos variables.
 614+ 94A0
 615+ 94A0 3E 07        	ld a,7
 616+ 94A2 32 FF 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94A5 47           	ld b,a
 618+ 94A6 18 04        	jr 2F
 619+ 94A8
 620+ 94A8              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94A8              ; (Numero_de_entidades)="0".
 622+ 94A8
 623+ 94A8 32 FF 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94AB 47           	ld b,a
 625+ 94AC C9           2 ret
 626+ 94AD
# file closed: Rutinas_de_inicio_y_niveles.asm
2168  94AD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94AD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94AD              ;
   3+ 94AD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94AD              ;
   5+ 94AD              ; *****************************************************************************************************************************************************************************************
   6+ 94AD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94AD
   8+ 94AD 7C           calcula_tercio ld a,h
   9+ 94AE E6 18        	and $18
  10+ 94B0 CB 2F        	sra a
  11+ 94B2 CB 2F        	sra a
  12+ 94B4 CB 2F        	sra a
  13+ 94B6 C9           	ret
  14+ 94B7
# file closed: calcula_tercio.asm
2169  94B7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B7              ;
   3+ 94B7              ;
   4+ 94B7              ;	CLS.
   5+ 94B7              ;
   6+ 94B7              ;	Limpia la pantalla y define sus atributos.
   7+ 94B7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B7              ;
   9+ 94B7              ;	COLORES: 0 ..... NEGRO
  10+ 94B7              ;    		 1 ..... AZUL
  11+ 94B7              ; 			 2 ..... ROJO
  12+ 94B7              ;			 3 ..... MAGENTA
  13+ 94B7              ; 			 4 ..... VERDE
  14+ 94B7              ; 			 5 ..... CIAN
  15+ 94B7              ;			 6 ..... AMARILLO
  16+ 94B7              ; 			 7 ..... BLANCO
  17+ 94B7              ;
  18+ 94B7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B7              ;
  20+ 94B7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B7
  22+ 94B7
  23+ 94B7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94BA 11 01 40     	LD DE,$4001
  25+ 94BD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94C2 ED B0        	LDIR
  28+ 94C4 01 FF 02     	LD BC,767
  29+ 94C7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94C8 ED B0        	LDIR
  31+ 94CA C9           	ret
  32+ 94CB
# file closed: Cls.asm
2170  94CB              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94CB              ; ------------------------------------------------------------------------
   2+ 94CB              ;
   3+ 94CB              ;	30/1/24
   4+ 94CB              ;
   5+ 94CB              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94CB              ;	Fila superior "0", Columna izquierda "0".
   7+ 94CB              ;
   8+ 94CB              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94CB              ;
  10+ 94CB              ;	Modifica: A,BC y DE.
  11+ 94CB
  12+ 94CB 7D           Genera_coordenadas ld a,l
  13+ 94CC E6 1F        	and $1f
  14+ 94CE 32 B9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94D1
  16+ 94D1 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94D2 FE 40        	cp $40
  18+ 94D4 38 1C        	jr c,4F
  19+ 94D6
  20+ 94D6 CD AD 94     	call calcula_tercio
  21+ 94D9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94DA
  23+ 94DA 1E 00        	ld e,0
  24+ 94DC 7D           	ld a,l
  25+ 94DD E6 E0        	and $e0
  26+ 94DF 28 01        	jr z,1F
  27+ 94E1 04           	inc b
  28+ 94E2
  29+ 94E2 04           1 inc b
  30+ 94E3 05           	dec b
  31+ 94E4 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E6              ;														; _ , salimos.
  33+ 94E6 1C           3 inc e
  34+ 94E7 D6 20        	sub 32
  35+ 94E9 20 FB        	jr nz,3B
  36+ 94EB 10 F5        	djnz 1B
  37+ 94ED
  38+ 94ED 7B           2 ld a,e
  39+ 94EE 32 BA 8B     	ld (Coordenada_y),a
  40+ 94F1 C9           	ret
  41+ 94F2
  42+ 94F2 AF           4 xor a
  43+ 94F3 32 BA 8B     	ld (Coordenada_y),a
  44+ 94F6 C9           	ret
  45+ 94F7
# file closed: Genera_coordenadas.asm
2171  94F7              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F7              ;
   3+ 94F7              ;	11/03/24
   4+ 94F7              ;
   5+ 94F7              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F7              ;   DE contiene Puntero_objeto.
   7+ 94F7              ;   IX contiene el Puntero de impresión.
   8+ 94F7
   9+ 94F7              Genera_datos_de_impresion
  10+ 94F7
  11+ 94F7 ED 73 05 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94FB
  13+ 94FB 31 BF 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94FE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9500
  16+ 9500 2A 25 8C         ld hl,(Scanlines_album_SP)
  17+ 9503
  18+ 9503 3E 05            ld a,5
  19+ 9505 85               add l
  20+ 9506 6F               ld l,a
  21+ 9507
  22+ 9507 F9               ld sp,hl
  23+ 9508 22 25 8C         ld (Scanlines_album_SP),hl
  24+ 950B
  25+ 950B 21 00 00         ld hl,0
  26+ 950E
  27+ 950E DD E5            push ix
  28+ 9510 3B               dec sp
  29+ 9511 ED 7A            adc hl,sp
  30+ 9513 D5               push de
  31+ 9514
  32+ 9514              ; Recuperamos SP.
  33+ 9514
  34+ 9514 ED 7B 05 8C      ld sp,(Stack)
  35+ 9518
  36+ 9518 E5               push hl
  37+ 9519 F1               pop af
  38+ 951A 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 951B
  40+ 951B              ; Tenemos el encabezado listo.
  41+ 951B              ; Preparamos registros para generar los scanlines.
  42+ 951B
  43+ 951B DD E5            push ix
  44+ 951D E1               pop hl                                          ; 1er scanline en HL.
  45+ 951E
  46+ 951E ED 5B 25 8C      ld de,(Scanlines_album_SP)
  47+ 9522
  48+ 9522              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9522              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9522
  51+ 9522 7C               ld a,h
  52+ 9523 FE 50            cp $50
  53+ 9525 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9527
  55+ 9527 20 05            jr nz,2F
  56+ 9529
  57+ 9529 7D               ld a,l
  58+ 952A FE E0            cp $e0
  59+ 952C 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 952E
  61+ 952E 7D           2 ld a,l
  62+ 952F FE C0            cp $c0
  63+ 9531 D2 C3 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9534
  65+ 9534              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9534
  67+ 9534 CD C1 99         call NextScan
  68+ 9537 EB               ex de,hl
  69+ 9538
  70+ 9538 73               ld (hl),e
  71+ 9539 23               inc hl
  72+ 953A 72               ld (hl),d
  73+ 953B 23               inc hl
  74+ 953C
  75+ 953C EB               ex de,hl
  76+ 953D
  77+ 953D CD C1 99         call NextScan
  78+ 9540 EB               ex de,hl
  79+ 9541
  80+ 9541 73               ld (hl),e
  81+ 9542 23               inc hl
  82+ 9543 72               ld (hl),d
  83+ 9544 23               inc hl
  84+ 9545
  85+ 9545 EB               ex de,hl
  86+ 9546
  87+ 9546 CD C1 99         call NextScan
  88+ 9549 EB               ex de,hl
  89+ 954A
  90+ 954A 73               ld (hl),e
  91+ 954B 23               inc hl
  92+ 954C 72               ld (hl),d
  93+ 954D 23               inc hl
  94+ 954E
  95+ 954E EB               ex de,hl
  96+ 954F
  97+ 954F CD C1 99         call NextScan
  98+ 9552 EB               ex de,hl
  99+ 9553
 100+ 9553 73               ld (hl),e
 101+ 9554 23               inc hl
 102+ 9555 72               ld (hl),d
 103+ 9556 23               inc hl
 104+ 9557
 105+ 9557 EB               ex de,hl
 106+ 9558
 107+ 9558 CD C1 99         call NextScan
 108+ 955B EB               ex de,hl
 109+ 955C
 110+ 955C 73               ld (hl),e
 111+ 955D 23               inc hl
 112+ 955E 72               ld (hl),d
 113+ 955F 23               inc hl
 114+ 9560
 115+ 9560 EB               ex de,hl
 116+ 9561
 117+ 9561 CD C1 99         call NextScan
 118+ 9564 EB               ex de,hl
 119+ 9565
 120+ 9565 73               ld (hl),e
 121+ 9566 23               inc hl
 122+ 9567 72               ld (hl),d
 123+ 9568 23               inc hl
 124+ 9569
 125+ 9569 EB               ex de,hl
 126+ 956A
 127+ 956A CD C1 99         call NextScan
 128+ 956D EB               ex de,hl
 129+ 956E
 130+ 956E 73               ld (hl),e
 131+ 956F 23               inc hl
 132+ 9570 72               ld (hl),d
 133+ 9571 23               inc hl
 134+ 9572
 135+ 9572 EB               ex de,hl
 136+ 9573
 137+ 9573 CD C1 99         call NextScan
 138+ 9576 EB               ex de,hl
 139+ 9577
 140+ 9577 73               ld (hl),e
 141+ 9578 23               inc hl
 142+ 9579 72               ld (hl),d
 143+ 957A 23               inc hl
 144+ 957B
 145+ 957B EB               ex de,hl
 146+ 957C
 147+ 957C CD C1 99         call NextScan
 148+ 957F EB               ex de,hl
 149+ 9580
 150+ 9580 73               ld (hl),e
 151+ 9581 23               inc hl
 152+ 9582 72               ld (hl),d
 153+ 9583 23               inc hl
 154+ 9584
 155+ 9584 EB               ex de,hl
 156+ 9585
 157+ 9585 CD C1 99         call NextScan
 158+ 9588 EB               ex de,hl
 159+ 9589
 160+ 9589 73               ld (hl),e
 161+ 958A 23               inc hl
 162+ 958B 72               ld (hl),d
 163+ 958C 23               inc hl
 164+ 958D
 165+ 958D EB               ex de,hl
 166+ 958E
 167+ 958E CD C1 99         call NextScan
 168+ 9591 EB               ex de,hl
 169+ 9592
 170+ 9592 73               ld (hl),e
 171+ 9593 23               inc hl
 172+ 9594 72               ld (hl),d
 173+ 9595 23               inc hl
 174+ 9596
 175+ 9596 EB               ex de,hl
 176+ 9597
 177+ 9597 CD C1 99         call NextScan
 178+ 959A EB               ex de,hl
 179+ 959B
 180+ 959B 73               ld (hl),e
 181+ 959C 23               inc hl
 182+ 959D 72               ld (hl),d
 183+ 959E 23               inc hl
 184+ 959F
 185+ 959F EB               ex de,hl
 186+ 95A0
 187+ 95A0 CD C1 99         call NextScan
 188+ 95A3 EB               ex de,hl
 189+ 95A4
 190+ 95A4 73               ld (hl),e
 191+ 95A5 23               inc hl
 192+ 95A6 72               ld (hl),d
 193+ 95A7 23               inc hl
 194+ 95A8
 195+ 95A8 EB               ex de,hl
 196+ 95A9
 197+ 95A9 CD C1 99         call NextScan
 198+ 95AC EB               ex de,hl
 199+ 95AD
 200+ 95AD 73               ld (hl),e
 201+ 95AE 23               inc hl
 202+ 95AF 72               ld (hl),d
 203+ 95B0 23               inc hl
 204+ 95B1
 205+ 95B1 EB               ex de,hl
 206+ 95B2
 207+ 95B2 CD C1 99         call NextScan
 208+ 95B5 EB               ex de,hl
 209+ 95B6
 210+ 95B6 73               ld (hl),e
 211+ 95B7 23               inc hl
 212+ 95B8 72               ld (hl),d
 213+ 95B9 23               inc hl
 214+ 95BA
 215+ 95BA              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 95BA
 217+ 95BA 22 25 8C         ld (Scanlines_album_SP),hl
 218+ 95BD
 219+ 95BD              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 95BD
 221+ 95BD 08               ex af,af
 222+ 95BE
 223+ 95BE F5               push af
 224+ 95BF E1               pop hl
 225+ 95C0
 226+ 95C0 36 10            ld (hl),16
 227+ 95C2
 228+ 95C2 C9               ret
 229+ 95C3
 230+ 95C3              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95C3
 232+ 95C3              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95C3
 234+ 95C3 3E 57            ld a,$57
 235+ 95C5 94               sub h
 236+ 95C6 47               ld b,a
 237+ 95C7
 238+ 95C7 3E DF            ld a,$df
 239+ 95C9 BD               cp l
 240+ 95CA 38 04            jr c,1F
 241+ 95CC
 242+ 95CC 3E 08            ld a,8
 243+ 95CE 80               add b
 244+ 95CF 47               ld b,a
 245+ 95D0
 246+ 95D0              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95D0              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95D0
 249+ 95D0 48           1 ld c,b
 250+ 95D1 0C               inc c
 251+ 95D2
 252+ 95D2 04               inc b
 253+ 95D3 05               dec b
 254+ 95D4 20 02            jr nz,3F
 255+ 95D6
 256+ 95D6 18 0B            jr 6F
 257+ 95D8
 258+ 95D8 CD C1 99     3 call NextScan
 259+ 95DB EB               ex de,hl
 260+ 95DC
 261+ 95DC 73               ld (hl),e
 262+ 95DD 23               inc hl
 263+ 95DE 72               ld (hl),d
 264+ 95DF 23               inc hl
 265+ 95E0
 266+ 95E0 EB               ex de,hl
 267+ 95E1 10 F5            djnz 3B
 268+ 95E3
 269+ 95E3 ED 53 25 8C  6 ld (Scanlines_album_SP),de
 270+ 95E7
 271+ 95E7 08           5 ex af,af
 272+ 95E8 F5               push af
 273+ 95E9 E1               pop hl
 274+ 95EA
 275+ 95EA 71               ld (hl),c
 276+ 95EB
 277+ 95EB C9               ret
 278+ 95EC
# file closed: Genera_datos_de_impresion.asm
2172  95EC              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95EC              ; -----------------------------------------------------------------------------
   2+ 95EC              ;
   3+ 95EC              ;   11/03/24
   4+ 95EC              ;
   5+ 95EC
   6+ 95EC              Pinta_Sprites
   7+ 95EC
   8+ 95EC              ;    ld hl,(Scanlines_album_SP)
   9+ 95EC              ;    call Extrae_address
  10+ 95EC
  11+ 95EC              ;    inc h
  12+ 95EC              ;    dec h
  13+ 95EC              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95EC
  15+ 95EC ED 73 05 8C      ld (Stack),sp
  16+ 95F0
  17+ 95F0 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F1              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F1 2C               inc l
  20+ 95F2 2C               inc l
  21+ 95F3
  22+ 95F3 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F4
  24+ 95F4 2C               inc l
  25+ 95F5 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95F6
  27+ 95F6              ;   Seleccionamos rutina de impresión:
  28+ 95F6
  29+ 95F6 3E 10            ld a,16
  30+ 95F8 B8               cp b
  31+ 95F9 C2 F5 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95FC
  33+ 95FC              ;   Rutinas:
  34+ 95FC
  35+ 95FC              Pinta_rapido    ;   1520 t/states.
  36+ 95FC
  37+ 95FC E1               pop hl
  38+ 95FD
  39+ 95FD 1A               ld a,(de)
  40+ 95FE AE               xor (hl)
  41+ 95FF 77               ld (hl),a
  42+ 9600 2C               inc l
  43+ 9601 1C               inc e
  44+ 9602 1A               ld a,(de)
  45+ 9603 AE               xor (hl)
  46+ 9604 77               ld (hl),a
  47+ 9605 2C               inc l
  48+ 9606 1C               inc e
  49+ 9607 1A               ld a,(de)
  50+ 9608 AE               xor (hl)
  51+ 9609 77               ld (hl),a
  52+ 960A 13               inc de
  53+ 960B
  54+ 960B E1               pop hl
  55+ 960C
  56+ 960C 1A               ld a,(de)
  57+ 960D AE               xor (hl)
  58+ 960E 77               ld (hl),a
  59+ 960F 2C               inc l
  60+ 9610 1C               inc e
  61+ 9611 1A               ld a,(de)
  62+ 9612 AE               xor (hl)
  63+ 9613 77               ld (hl),a
  64+ 9614 2C               inc l
  65+ 9615 1C               inc e
  66+ 9616 1A               ld a,(de)
  67+ 9617 AE               xor (hl)
  68+ 9618 77               ld (hl),a
  69+ 9619 13               inc de
  70+ 961A
  71+ 961A E1               pop hl
  72+ 961B
  73+ 961B 1A               ld a,(de)
  74+ 961C AE               xor (hl)
  75+ 961D 77               ld (hl),a
  76+ 961E 2C               inc l
  77+ 961F 1C               inc e
  78+ 9620 1A               ld a,(de)
  79+ 9621 AE               xor (hl)
  80+ 9622 77               ld (hl),a
  81+ 9623 2C               inc l
  82+ 9624 1C               inc e
  83+ 9625 1A               ld a,(de)
  84+ 9626 AE               xor (hl)
  85+ 9627 77               ld (hl),a
  86+ 9628 13               inc de
  87+ 9629
  88+ 9629 E1               pop hl
  89+ 962A
  90+ 962A 1A               ld a,(de)
  91+ 962B AE               xor (hl)
  92+ 962C 77               ld (hl),a
  93+ 962D 2C               inc l
  94+ 962E 1C               inc e
  95+ 962F 1A               ld a,(de)
  96+ 9630 AE               xor (hl)
  97+ 9631 77               ld (hl),a
  98+ 9632 2C               inc l
  99+ 9633 1C               inc e
 100+ 9634 1A               ld a,(de)
 101+ 9635 AE               xor (hl)
 102+ 9636 77               ld (hl),a
 103+ 9637 13               inc de
 104+ 9638
 105+ 9638 E1               pop hl
 106+ 9639
 107+ 9639 1A               ld a,(de)
 108+ 963A AE               xor (hl)
 109+ 963B 77               ld (hl),a
 110+ 963C 2C               inc l
 111+ 963D 1C               inc e
 112+ 963E 1A               ld a,(de)
 113+ 963F AE               xor (hl)
 114+ 9640 77               ld (hl),a
 115+ 9641 2C               inc l
 116+ 9642 1C               inc e
 117+ 9643 1A               ld a,(de)
 118+ 9644 AE               xor (hl)
 119+ 9645 77               ld (hl),a
 120+ 9646 13               inc de
 121+ 9647
 122+ 9647 E1               pop hl
 123+ 9648
 124+ 9648 1A               ld a,(de)
 125+ 9649 AE               xor (hl)
 126+ 964A 77               ld (hl),a
 127+ 964B 2C               inc l
 128+ 964C 1C               inc e
 129+ 964D 1A               ld a,(de)
 130+ 964E AE               xor (hl)
 131+ 964F 77               ld (hl),a
 132+ 9650 2C               inc l
 133+ 9651 1C               inc e
 134+ 9652 1A               ld a,(de)
 135+ 9653 AE               xor (hl)
 136+ 9654 77               ld (hl),a
 137+ 9655 13               inc de
 138+ 9656
 139+ 9656 E1               pop hl
 140+ 9657
 141+ 9657 1A               ld a,(de)
 142+ 9658 AE               xor (hl)
 143+ 9659 77               ld (hl),a
 144+ 965A 2C               inc l
 145+ 965B 1C               inc e
 146+ 965C 1A               ld a,(de)
 147+ 965D AE               xor (hl)
 148+ 965E 77               ld (hl),a
 149+ 965F 2C               inc l
 150+ 9660 1C               inc e
 151+ 9661 1A               ld a,(de)
 152+ 9662 AE               xor (hl)
 153+ 9663 77               ld (hl),a
 154+ 9664 13               inc de
 155+ 9665
 156+ 9665 E1               pop hl
 157+ 9666
 158+ 9666 1A               ld a,(de)
 159+ 9667 AE               xor (hl)
 160+ 9668 77               ld (hl),a
 161+ 9669 2C               inc l
 162+ 966A 1C               inc e
 163+ 966B 1A               ld a,(de)
 164+ 966C AE               xor (hl)
 165+ 966D 77               ld (hl),a
 166+ 966E 2C               inc l
 167+ 966F 1C               inc e
 168+ 9670 1A               ld a,(de)
 169+ 9671 AE               xor (hl)
 170+ 9672 77               ld (hl),a
 171+ 9673 13               inc de
 172+ 9674
 173+ 9674 E1               pop hl
 174+ 9675
 175+ 9675 1A               ld a,(de)
 176+ 9676 AE               xor (hl)
 177+ 9677 77               ld (hl),a
 178+ 9678 2C               inc l
 179+ 9679 1C               inc e
 180+ 967A 1A               ld a,(de)
 181+ 967B AE               xor (hl)
 182+ 967C 77               ld (hl),a
 183+ 967D 2C               inc l
 184+ 967E 1C               inc e
 185+ 967F 1A               ld a,(de)
 186+ 9680 AE               xor (hl)
 187+ 9681 77               ld (hl),a
 188+ 9682 13               inc de
 189+ 9683
 190+ 9683 E1               pop hl
 191+ 9684
 192+ 9684 1A               ld a,(de)
 193+ 9685 AE               xor (hl)
 194+ 9686 77               ld (hl),a
 195+ 9687 2C               inc l
 196+ 9688 1C               inc e
 197+ 9689 1A               ld a,(de)
 198+ 968A AE               xor (hl)
 199+ 968B 77               ld (hl),a
 200+ 968C 2C               inc l
 201+ 968D 1C               inc e
 202+ 968E 1A               ld a,(de)
 203+ 968F AE               xor (hl)
 204+ 9690 77               ld (hl),a
 205+ 9691 13               inc de
 206+ 9692
 207+ 9692 E1               pop hl
 208+ 9693
 209+ 9693 1A               ld a,(de)
 210+ 9694 AE               xor (hl)
 211+ 9695 77               ld (hl),a
 212+ 9696 2C               inc l
 213+ 9697 1C               inc e
 214+ 9698 1A               ld a,(de)
 215+ 9699 AE               xor (hl)
 216+ 969A 77               ld (hl),a
 217+ 969B 2C               inc l
 218+ 969C 1C               inc e
 219+ 969D 1A               ld a,(de)
 220+ 969E AE               xor (hl)
 221+ 969F 77               ld (hl),a
 222+ 96A0 13               inc de
 223+ 96A1
 224+ 96A1 E1               pop hl
 225+ 96A2
 226+ 96A2 1A               ld a,(de)
 227+ 96A3 AE               xor (hl)
 228+ 96A4 77               ld (hl),a
 229+ 96A5 2C               inc l
 230+ 96A6 1C               inc e
 231+ 96A7 1A               ld a,(de)
 232+ 96A8 AE               xor (hl)
 233+ 96A9 77               ld (hl),a
 234+ 96AA 2C               inc l
 235+ 96AB 1C               inc e
 236+ 96AC 1A               ld a,(de)
 237+ 96AD AE               xor (hl)
 238+ 96AE 77               ld (hl),a
 239+ 96AF 13               inc de
 240+ 96B0
 241+ 96B0 E1               pop hl
 242+ 96B1
 243+ 96B1 1A               ld a,(de)
 244+ 96B2 AE               xor (hl)
 245+ 96B3 77               ld (hl),a
 246+ 96B4 2C               inc l
 247+ 96B5 1C               inc e
 248+ 96B6 1A               ld a,(de)
 249+ 96B7 AE               xor (hl)
 250+ 96B8 77               ld (hl),a
 251+ 96B9 2C               inc l
 252+ 96BA 1C               inc e
 253+ 96BB 1A               ld a,(de)
 254+ 96BC AE               xor (hl)
 255+ 96BD 77               ld (hl),a
 256+ 96BE 13               inc de
 257+ 96BF
 258+ 96BF E1               pop hl
 259+ 96C0
 260+ 96C0 1A               ld a,(de)
 261+ 96C1 AE               xor (hl)
 262+ 96C2 77               ld (hl),a
 263+ 96C3 2C               inc l
 264+ 96C4 1C               inc e
 265+ 96C5 1A               ld a,(de)
 266+ 96C6 AE               xor (hl)
 267+ 96C7 77               ld (hl),a
 268+ 96C8 2C               inc l
 269+ 96C9 1C               inc e
 270+ 96CA 1A               ld a,(de)
 271+ 96CB AE               xor (hl)
 272+ 96CC 77               ld (hl),a
 273+ 96CD 13               inc de
 274+ 96CE
 275+ 96CE E1               pop hl
 276+ 96CF
 277+ 96CF 1A               ld a,(de)
 278+ 96D0 AE               xor (hl)
 279+ 96D1 77               ld (hl),a
 280+ 96D2 2C               inc l
 281+ 96D3 1C               inc e
 282+ 96D4 1A               ld a,(de)
 283+ 96D5 AE               xor (hl)
 284+ 96D6 77               ld (hl),a
 285+ 96D7 2C               inc l
 286+ 96D8 1C               inc e
 287+ 96D9 1A               ld a,(de)
 288+ 96DA AE               xor (hl)
 289+ 96DB 77               ld (hl),a
 290+ 96DC 13               inc de
 291+ 96DD
 292+ 96DD E1               pop hl
 293+ 96DE
 294+ 96DE 1A               ld a,(de)
 295+ 96DF AE               xor (hl)
 296+ 96E0 77               ld (hl),a
 297+ 96E1 2C               inc l
 298+ 96E2 1C               inc e
 299+ 96E3 1A               ld a,(de)
 300+ 96E4 AE               xor (hl)
 301+ 96E5 77               ld (hl),a
 302+ 96E6 2C               inc l
 303+ 96E7 1C               inc e
 304+ 96E8 1A               ld a,(de)
 305+ 96E9 AE               xor (hl)
 306+ 96EA 77               ld (hl),a
 307+ 96EB 13               inc de
 308+ 96EC
 309+ 96EC ED 73 25 8C      ld (Scanlines_album_SP),sp
 310+ 96F0 ED 7B 05 8C      ld sp,(Stack)
 311+ 96F4 C9               ret
 312+ 96F5
 313+ 96F5              Pinta_lento
 314+ 96F5
 315+ 96F5 E1           1 pop hl
 316+ 96F6
 317+ 96F6 1A               ld a,(de)
 318+ 96F7 AE               xor (hl)
 319+ 96F8 77               ld (hl),a
 320+ 96F9 2C               inc l
 321+ 96FA 1C               inc e
 322+ 96FB 1A               ld a,(de)
 323+ 96FC AE               xor (hl)
 324+ 96FD 77               ld (hl),a
 325+ 96FE 2C               inc l
 326+ 96FF 1C               inc e
 327+ 9700 1A               ld a,(de)
 328+ 9701 AE               xor (hl)
 329+ 9702 77               ld (hl),a
 330+ 9703 13               inc de
 331+ 9704
 332+ 9704 10 EF            djnz 1B
 333+ 9706
 334+ 9706 ED 73 25 8C      ld (Scanlines_album_SP),sp
 335+ 970A ED 7B 05 8C      ld sp,(Stack)
 336+ 970E C9               ret
# file closed: Pinta_Sprites.asm
2173  970F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 970F              ; ******************************************************************************************************************************************************************************************
   2+ 970F              ;
   3+ 970F              ; 26/06/23
   4+ 970F              ;
   5+ 970F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 970F
   7+ 970F              Draw
   8+ 970F
   9+ 970F CD B5 99     	call Prepara_draw
  10+ 9712 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9713 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9714 28 05        	jr z,2F
  13+ 9716
  14+ 9716 3A D7 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9719 18 0C        	jr 1F
  16+ 971B
  17+ 971B 2A D5 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 971E 22 C8 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9721 CD AD 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9724              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9724
  22+ 9724 CD 54 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9727
  24+ 9727 3A C5 8B     1 ld a,(Ctrl_0)
  25+ 972A CB 6F        	bit 5,a
  26+ 972C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 972E
  28+ 972E CD 43 97     	call Comprueba_limite_horizontal
  29+ 9731 CD D3 97     	call Comprueba_limite_vertical
  30+ 9734
  31+ 9734              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9734              ; -----------------------
  33+ 9734              ; -----------------------
  34+ 9734              ; -----------------------
  35+ 9734
  36+ 9734 CD 29 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9737 CD 60 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 973A
  39+ 973A 3A C5 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 973D CB AF        	res 5,a											; _a ser de utilidad.
  41+ 973F 32 C5 8B     	ld (Ctrl_0),a
  42+ 9742
  43+ 9742 C9           	ret
  44+ 9743
  45+ 9743              ; *******************************************************************************************************************************************************************************************
  46+ 9743              ;	21/01/23
  47+ 9743              ;
  48+ 9743              ; 	Comprueba_limite_horizontal.
  49+ 9743              ;
  50+ 9743              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9743              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9743              ;
  53+ 9743              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9743              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9743              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9743              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9743
  58+ 9743
  59+ 9743
  60+ 9743 3A C5 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9746 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9748 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 974A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 974C 32 C5 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 974F 18 09            jr 6F
  66+ 9751 CB 5F        1 bit 3,a
  67+ 9753 28 0A            jr z,2F
  68+ 9755 E6 F7            and $f7
  69+ 9757 32 C5 8B         ld (Ctrl_0),a
  70+ 975A CD AD 98     6 call Inicializacion
  71+ 975D 18 5B            jr 5F
  72+ 975F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9760
  74+ 9760              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9760              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9760
  77+ 9760 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9761 2A D9 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9764 CD AD 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9767 67           	ld h,a
  81+ 9768 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9769 CD AD 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 976C 67           	ld h,a
  84+ 976D A7           	and a
  85+ 976E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9770 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9771 3A D7 8B     	ld a,(Cuad_objeto)
  88+ 9774 FE 02        	cp 2
  89+ 9776 38 1E        	jr c,3F
  90+ 9778 28 1C        	jr z,3F
  91+ 977A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 977B 28 23            jr z,7F
  93+ 977D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 977F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9781 E1           	pop hl
  96+ 9782
  97+ 9782              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9782              ; _para indicar con E="2" en caso necesario.
  99+ 9782
 100+ 9782 E5               push hl
 101+ 9783 C5               push bc
 102+ 9784 CD AD 94     	call calcula_tercio
 103+ 9787 FE 01        	cp 1
 104+ 9789 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 978B CD BB 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 978E 28 26            jr z,9F
 107+ 9790 38 24            jr c,9F
 108+ 9792 1E 00        11 ld e,0
 109+ 9794 18 22            jr 8F
 110+ 9796 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9797 28 07        	jr z, 7F
 112+ 9799 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 979B 1E 00         	ld e,0
 114+ 979D E1           	pop hl
 115+ 979E 18 04        	jr 4F
 116+ 97A0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97A2 18 15            jr 10F
 118+ 97A4
 119+ 97A4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A4              ; _para indicar con E="2" en caso necesario.
 121+ 97A4
 122+ 97A4 E5           4 push hl
 123+ 97A5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97A6 CD AD 94     	call calcula_tercio
 125+ 97A9 FE 01        	cp 1
 126+ 97AB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97AD CD BB 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97B0 28 04            jr z,9F
 129+ 97B2 30 02            jr nc,9F
 130+ 97B4 18 02        	jr 8F
 131+ 97B6 1E 02        9 ld e,2
 132+ 97B8 C1           8 pop bc
 133+ 97B9 E1           10 pop hl
 134+ 97BA C9           5 ret
 135+ 97BB
 136+ 97BB              ; --------------------
 137+ 97BB              ;
 138+ 97BB              ; 25/08/22
 139+ 97BB
 140+ 97BB CD AD 94     Comprueba_centro call calcula_tercio
 141+ 97BE 67               ld h,a
 142+ 97BF 08           	ex af,af
 143+ 97C0 FE 02        	cp 2
 144+ 97C2 38 07        	jr c,1F
 145+ 97C4 28 05        	jr z,1F
 146+ 97C6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97C9 18 03        	jr 2F
 148+ 97CB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97CE 08           2 ex af,af
 150+ 97CF A7               and a
 151+ 97D0 ED 42            sbc hl,bc
 152+ 97D2 C9               ret
 153+ 97D3
 154+ 97D3              ; *********************************************************************************************************************************************************************************************
 155+ 97D3              ;
 156+ 97D3              ;   16/8/22
 157+ 97D3              ;
 158+ 97D3              ;	Comprueba_limite_vertical
 159+ 97D3              ;
 160+ 97D3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97D3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97D3              ;
 163+ 97D3
 164+ 97D3 2A C8 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97D6 7D           	ld a,l
 166+ 97D7 E6 1F        	and $1F
 167+ 97D9 57           	ld d,a
 168+ 97DA 3A DB 8B     	ld a,(Limite_vertical)
 169+ 97DD BA           	cp d 											; Límite - Posición.
 170+ 97DE 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97DF 3A D7 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97E2 CB 47        	bit 0,a
 173+ 97E4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97E6
 175+ 97E6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97E6
 177+ 97E6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97E9
 180+ 97E9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97E9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97E9
 183+ 97E9 3A B9 8B         ld a,(Coordenada_X)
 184+ 97EC 16 0F            ld d,Centro_izquierda
 185+ 97EE A7               and a
 186+ 97EF 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97F0 28 1E            jr z,3F
 188+ 97F2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F4              ;                                                    ; _salimos sin modificar nada.
 190+ 97F4 18 0E            jr 2F
 191+ 97F6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97F9
 194+ 97F9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97F9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97F9
 197+ 97F9 3A B9 8B         ld a,(Coordenada_X)
 198+ 97FC 16 10            ld d,Centro_derecha
 199+ 97FE A7               and a
 200+ 97FF 92               sub d
 201+ 9800 28 0E            jr z,3F
 202+ 9802 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9804              ;                                                    ; _salimos sin modificar nada.
 204+ 9804 CB 43        2 bit 0,e
 205+ 9806 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9808 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9809 CD 9D 98         call Modificaccionne
 208+ 980C C1           	pop bc
 209+ 980D CD AD 98         call Inicializacion
 210+ 9810 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9811
 212+ 9811              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9811
 214+ 9811 C5           4 push bc
 215+ 9812 01 C7 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9815 0A           	ld a,(bc)
 217+ 9816 3D           	dec a
 218+ 9817 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9818 7D           	ld a,l
 220+ 9819 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 981A CB 47        	bit 0,a
 222+ 981C 28 03        	jr z,5F
 223+ 981E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 981F 18 2E        	jr 7F
 225+ 9821
 226+ 9821              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9821
 228+ 9821 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9822 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9823 3A C5 8B     	ld a,(Ctrl_0)
 231+ 9826 CB 4F        	bit 1,a
 232+ 9828 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 982A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 982B
 235+ 982B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 982B
 237+ 982B 1C               inc e
 238+ 982C 1D               dec e
 239+ 982D 20 07            jr nz,12F
 240+ 982F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9830 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9831 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9834 18 44        13 jr 9F
 244+ 9836 CB 43        12 bit 0,e
 245+ 9838 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 983A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 983A C1           	pop bc
 248+ 983B 18 D3        	jr 3B
 249+ 983D 80           14 add b
 250+ 983E 6F               ld l,a
 251+ 983F 22 C8 8B     	ld (Posicion_actual),hl
 252+ 9842 CD 9D 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9845 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9847 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9849 32 C5 8B         ld (Ctrl_0),a
 256+ 984C F1           	pop af
 257+ 984D 18 2B        	jr 9F
 258+ 984F
 259+ 984F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 984F
 261+ 984F F5           7 push af
 262+ 9850 3A C5 8B     	ld a,(Ctrl_0)
 263+ 9853 CB 47        	bit 0,a
 264+ 9855 20 1D        	jr nz,8F
 265+ 9857 F1           	pop af
 266+ 9858
 267+ 9858              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9858
 269+ 9858 1C           	inc e
 270+ 9859 1D               dec e
 271+ 985A 20 07            jr nz,10F
 272+ 985C 90           	sub b
 273+ 985D 6F               ld l,a
 274+ 985E 22 C8 8B     	ld (Posicion_actual),hl
 275+ 9861 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9863              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9863 CB 43        10 bit 0,e
 278+ 9865 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9867              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9867 C1           	pop bc
 281+ 9868 18 A6        	jr 3B
 282+ 986A 90           16 sub b
 283+ 986B 6F               ld l,a
 284+ 986C 22 C8 8B     	ld (Posicion_actual),hl
 285+ 986F CD 9D 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9872 18 06            jr 9F
 287+ 9874 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9876 32 C5 8B         ld (Ctrl_0),a
 289+ 9879 F1           	pop af
 290+ 987A C1           9 pop bc
 291+ 987B 1E 00        	ld e,0
 292+ 987D CD AD 98         call Inicializacion
 293+ 9880 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9881 08           	ex af,af
 295+ 9882 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9883 18 8B            jr 3B
 297+ 9885
 298+ 9885              ; --------------------
 299+ 9885
 300+ 9885 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9887 CD D0 99     1 call PreviousScan
 302+ 988A 10 FB            djnz 1B
 303+ 988C 22 C8 8B     	ld (Posicion_actual),hl
 304+ 988F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9890 C9           	ret
 306+ 9891
 307+ 9891              ; --------------------
 308+ 9891
 309+ 9891 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9893 CD C1 99     1 call NextScan
 311+ 9896 10 FB            djnz 1B
 312+ 9898 22 C8 8B     	ld (Posicion_actual),hl
 313+ 989B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 989C C9           	ret
 315+ 989D
 316+ 989D              ; --------------------
 317+ 989D              ;
 318+ 989D              ;	22/01/23
 319+ 989D              ;
 320+ 989D              ;	E="1". Hemos cambiado de cuadrante.
 321+ 989D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 989D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 989D
 324+ 989D
 325+ 989D              Modificaccionne
 326+ 989D
 327+ 989D 3A D7 8B     	ld a,(Cuad_objeto)
 328+ 98A0 FE 02        	cp 2
 329+ 98A2 CC 85 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98A5 DC 85 98         call c,Modifica_Pos_actual
 331+ 98A8 C8           	ret z
 332+ 98A9 CD 91 98         call Modifica_Pos_actual2
 333+ 98AC C9               ret
 334+ 98AD
 335+ 98AD              ; *************************************************************************************************************************************************************************************************
 336+ 98AD              ;
 337+ 98AD              ;	13/8/22
 338+ 98AD              ;
 339+ 98AD              ;	Inicializacion
 340+ 98AD              ;
 341+ 98AD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98AD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98AD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98AD              ;
 345+ 98AD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98AD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98AD              ;	_ desaparece/aparece.
 348+ 98AD
 349+ 98AD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98AD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98AD              ;
 352+ 98AD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98AD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98AD              ; 		   [E] ="0"
 355+ 98AD
 356+ 98AD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98AD
 358+ 98AD CD AD 94     Inicializacion call calcula_tercio
 359+ 98B0 28 36        	jr z,primit
 360+ 98B2 E6 02        	and 2
 361+ 98B4 20 07        	jr nz,segmit
 362+ 98B6 7D           	ld a,l
 363+ 98B7 FE 7F        	cp $7f
 364+ 98B9 38 2D        	jr c,primit
 365+ 98BB 28 2B        	jr z,primit
 366+ 98BD CD 23 99     segmit call column
 367+ 98C0 38 13        	jr c,tercuad
 368+ 98C2 3E 04        cuarcuad ld a,4
 369+ 98C4 32 D7 8B     	ld (Cuad_objeto),a
 370+ 98C7 21 20 48     	ld hl,$4820
 371+ 98CA 22 D9 8B     	ld (Limite_horizontal),hl
 372+ 98CD 21 DB 8B     	ld hl,Limite_vertical
 373+ 98D0 36 0D        	ld (hl),$0d
 374+ 98D2 08           	ex af,af
 375+ 98D3 18 3C        	jr 1F
 376+ 98D5              tercuad
 377+ 98D5 3E 03        	ld a,3
 378+ 98D7 32 D7 8B     	ld (Cuad_objeto),a
 379+ 98DA 21 20 48     	ld hl,$4820
 380+ 98DD 22 D9 8B     	ld (Limite_horizontal),hl
 381+ 98E0 21 DB 8B     	ld hl,Limite_vertical
 382+ 98E3 36 12        	ld (hl),$12
 383+ 98E5 08           	ex af,af
 384+ 98E6 18 29        	jr 1F
 385+ 98E8 CD 23 99     primit call column
 386+ 98EB 38 13        	jr c, primcuad
 387+ 98ED              segcuad
 388+ 98ED 3E 02        	ld a,2
 389+ 98EF 32 D7 8B     	ld (Cuad_objeto),a
 390+ 98F2 21 C0 4F     	ld hl,$4fc0
 391+ 98F5 22 D9 8B     	ld (Limite_horizontal),hl
 392+ 98F8 21 DB 8B     	ld hl,Limite_vertical
 393+ 98FB 36 0D        	ld (hl),$0d
 394+ 98FD 08           	ex af,af
 395+ 98FE 18 11        	jr 1F
 396+ 9900              primcuad
 397+ 9900 3E 01        	ld a,1
 398+ 9902 32 D7 8B     	ld (Cuad_objeto),a
 399+ 9905 21 C0 4F     	ld hl,$4fc0
 400+ 9908 22 D9 8B     	ld (Limite_horizontal),hl
 401+ 990B 21 DB 8B     	ld hl,Limite_vertical
 402+ 990E 36 12        	ld (hl),$12
 403+ 9910 08           	ex af,af
 404+ 9911
 405+ 9911 C5           1 push bc
 406+ 9912 E5           	push hl
 407+ 9913 D5           	push de
 408+ 9914
 409+ 9914 2A C8 8B     	ld hl,(Posicion_actual)
 410+ 9917 CD CB 94     	call Genera_coordenadas
 411+ 991A
 412+ 991A D1           	pop de
 413+ 991B E1           	pop hl
 414+ 991C C1           	pop bc
 415+ 991D
 416+ 991D 21 C5 8B     	ld hl,Ctrl_0
 417+ 9920 CB EE        	set 5,(hl)
 418+ 9922 C9           	ret
 419+ 9923
 420+ 9923              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9923
 422+ 9923              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9923              ;
 424+ 9923              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9923
 426+ 9923 7D           column ld a,l
 427+ 9924 E6 1F        	and $1f
 428+ 9926 FE 10         	cp $10
 429+ 9928 C9            	ret
 430+ 9929
 431+ 9929              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9929              ;
 433+ 9929              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9929              ;
 435+ 9929              ; 14/12/22
 436+ 9929              ;
 437+ 9929              ;	Modifica: A y BC.
 438+ 9929
 439+ 9929 3A D7 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 992C E6 01        	and 1
 441+ 992E 28 17        	jr z,1F
 442+ 9930
 443+ 9930              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9930
 445+ 9930 3A B9 8B     	ld a,(Coordenada_X)
 446+ 9933 47           	ld b,a
 447+ 9934 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9935 79           	ld a,c
 449+ 9936 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9937 38 08        	jr c,2F
 451+ 9939 47           	ld b,a
 452+ 993A 79           	ld a,c
 453+ 993B 90           	sub b
 454+ 993C 32 D8 8B     	ld (Columnas),a
 455+ 993F 18 1B        	jr 4F
 456+ 9941 79           2 ld a,c
 457+ 9942 32 D8 8B     	ld (Columnas),a
 458+ 9945 18 15        	jr 4F
 459+ 9947
 460+ 9947              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9947
 462+ 9947 3A B9 8B     1 ld a,(Coordenada_X)
 463+ 994A 81           	add c
 464+ 994B 3D           	dec a
 465+ 994C D6 1F        	sub $1f
 466+ 994E 38 08        	jr c,3F
 467+ 9950 47           	ld b,a
 468+ 9951 79           	ld a,c
 469+ 9952 90           	sub b
 470+ 9953 32 D8 8B     	ld (Columnas),a
 471+ 9956 18 04        	jr 4F
 472+ 9958 79           3 ld a,c
 473+ 9959 32 D8 8B     	ld (Columnas),a
 474+ 995C D9           4 exx
 475+ 995D 4F           	ld c,a
 476+ 995E D9           	exx
 477+ 995F C9            ret
 478+ 9960
 479+ 9960              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9960              ;
 481+ 9960              ;   19/7/23
 482+ 9960              ;
 483+ 9960              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9960              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9960              ;
 486+ 9960              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9960              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9960              ;
 489+ 9960              ;	DESTRUYE: HL,B Y A.
 490+ 9960
 491+ 9960 3A D7 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9963 FE 02        	cp 2
 493+ 9965 38 18        	jr c,1F
 494+ 9967 28 16        	jr z,1F
 495+ 9969 E6 01        	and 1
 496+ 996B 28 0D        	jr z,3F
 497+ 996D
 498+ 996D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 996D
 500+ 996D CD A9 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9970
 502+ 9970 7D           9 ld a,l
 503+ 9971 E6 1F        	and $1f
 504+ 9973 28 2A        	jr z,7F
 505+ 9975 2B           	dec hl
 506+ 9976 10 F8        	djnz 9B
 507+ 9978 18 25        	jr 7F
 508+ 997A
 509+ 997A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 997A
 511+ 997A 2A C8 8B     3 ld hl,(Posicion_actual)
 512+ 997D 18 20        	jr 7F
 513+ 997F
 514+ 997F 28 14        1 jr z,2F
 515+ 9981
 516+ 9981              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9981
 518+ 9981 CD A9 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9984
 520+ 9984 7D           4 ld a,l
 521+ 9985 E6 1F        	and $1f
 522+ 9987 28 03        	jr z,6F
 523+ 9989 2B           	dec hl
 524+ 998A 10 F8        	djnz 4B
 525+ 998C 06 0F        6 ld b,15
 526+ 998E CD D0 99     5 call PreviousScan
 527+ 9991 10 FB        	djnz 5B
 528+ 9993 18 0A        	jr 7F
 529+ 9995
 530+ 9995              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9995
 532+ 9995 CD A9 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9998 06 0F        	ld b,15
 534+ 999A CD D0 99     8 call PreviousScan
 535+ 999D 10 FB        	djnz 8B
 536+ 999F
 537+ 999F E5           7 push hl
 538+ 99A0 DD E1        	pop ix
 539+ 99A2
 540+ 99A2 2A CA 8B     	ld hl,(Puntero_objeto)
 541+ 99A5 E5           	push hl
 542+ 99A6 FD E1        	pop iy
 543+ 99A8
 544+ 99A8 C9           	ret
 545+ 99A9
 546+ 99A9              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99A9              ;
 548+ 99A9              ;	2/1/23
 549+ 99A9              ;
 550+ 99A9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99A9              ;
 552+ 99A9              ;	Tras esta rutina tenemos:
 553+ 99A9              ;
 554+ 99A9              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99A9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99A9              ;
 557+ 99A9              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99A9
 559+ 99A9 2A C8 8B     Operandos ld hl,(Posicion_actual)
 560+ 99AC 3A D8 8B     	ld a,(Columnas)
 561+ 99AF 3D           	dec a
 562+ 99B0 20 01        	jr nz,1F
 563+ 99B2 3C           	inc a
 564+ 99B3 47           1 ld b,a
 565+ 99B4 C9           	ret
 566+ 99B5
 567+ 99B5              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99B5              ;
 569+ 99B5              ;	Prepara_draw
 570+ 99B5              ;
 571+ 99B5              ;	Es una rutina de carga.
 572+ 99B5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99B5              ;
 574+ 99B5              ;	FUNCIONAMIENTO:
 575+ 99B5              ;
 576+ 99B5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99B5              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99B5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99B5              ;
 580+ 99B5              ;	DESTRUYE:
 581+ 99B5              ;
 582+ 99B5              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99B5
 584+ 99B5 21 C6 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99B8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99B9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99BA 4E           	ld c,(hl)
 588+ 99BB 2A C8 8B     	ld hl,(Posicion_actual)
 589+ 99BE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99C0 C9           	ret
 591+ 99C1
 592+ 99C1              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C1              ;
 594+ 99C1              ;	5/08/22
 595+ 99C1              ;
 596+ 99C1              ;   NextScan.
 597+ 99C1              ;
 598+ 99C1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C1              ;
 600+ 99C1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C1              ;
 602+ 99C1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C1              ;
 604+ 99C1              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C1              ;
 606+ 99C1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C1              ;
 608+ 99C1
 609+ 99C1 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99C2 7C               ld a,h
 611+ 99C3 E6 07            and 7
 612+ 99C5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99C6
 614+ 99C6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C7 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99C9 6F               ld l,a
 617+ 99CA D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99CB
 619+ 99CB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99CC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99CE 67               ld h,a
 622+ 99CF C9               ret
 623+ 99D0
 624+ 99D0              ;----------------------------------------------------------------------------------------------------------------
 625+ 99D0              ;
 626+ 99D0              ;	5/08/22
 627+ 99D0              ;
 628+ 99D0              ;   PreviousScan.
 629+ 99D0              ;
 630+ 99D0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99D0              ;
 632+ 99D0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99D0              ;
 634+ 99D0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99D0              ;
 636+ 99D0              ;       DESTRUIDOS: AF y HL !!!
 637+ 99D0              ;
 638+ 99D0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99D0              ;
 640+ 99D0
 641+ 99D0 7C           PreviousScan ld a,h
 642+ 99D1 25               dec h               ; Dec H.
 643+ 99D2 E6 07            and 7
 644+ 99D4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99D5
 646+ 99D5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99D6 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99D8 6F               ld l,a
 649+ 99D9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99DA
 651+ 99DA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99DB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99DD 67               ld h,a
 654+ 99DE C9               ret
 655+ 99DF
 656+ 99DF
 657+ 99DF
 658+ 99DF
 659+ 99DF
 660+ 99DF
 661+ 99DF
 662+ 99DF
 663+ 99DF
 664+ 99DF
 665+ 99DF
 666+ 99DF
# file closed: Draw_XOR.asm
2174  99DF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99DF
   2+ 99DF              ; ******************************************************************************************************************************************************************************************
   3+ 99DF              ;
   4+ 99DF              ;   20/05/23
   5+ 99DF              ;
   6+ 99DF              ;	Recompone_posicion_inicio
   7+ 99DF              ;
   8+ 99DF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99DF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99DF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99DF              ;	_ a una u otra rutina.
  12+ 99DF
  13+ 99DF              Recompone_posicion_inicio
  14+ 99DF
  15+ 99DF 2A D5 8B     	ld hl,(Posicion_inicio)
  16+ 99E2 7D           	ld a,l
  17+ 99E3 E6 1F        	and $1f
  18+ 99E5 28 16        	jr z,1F
  19+ 99E7
  20+ 99E7 FE 1F        	cp $1f
  21+ 99E9 28 0D        	jr z,3F
  22+ 99EB
  23+ 99EB 21 C4 8B     	ld hl,Ctrl_2
  24+ 99EE CB C6        	set 0,(hl)
  25+ 99F0 2A CA 8B     	ld hl,(Puntero_objeto)
  26+ 99F3 22 F6 8B     	ld (Repone_puntero_objeto),hl
  27+ 99F6 18 08        	jr 2F
  28+ 99F8
  29+ 99F8 CD A6 9B     3 call Mov_left
  30+ 99FB 18 03        	jr 2F
  31+ 99FD
  32+ 99FD CD 83 9A     1 call Mov_right
  33+ 9A00 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A03 22 CA 8B     	ld (Puntero_objeto),hl
  35+ 9A06 C9           	ret
  36+ 9A07
  37+ 9A07              ; ******************************************************************************************************************************************************************************************
  38+ 9A07              ;
  39+ 9A07              ;   27/05/23
  40+ 9A07              ;
  41+ 9A07              ;	Mov_down
  42+ 9A07              ;
  43+ 9A07              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A07              ;
  45+ 9A07              ;
  46+ 9A07              Mov_down
  47+ 9A07
  48+ 9A07 CD 71 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A0A              ;																	; _ repone (Puntero_objeto).
  50+ 9A0A 21 C5 8B     	ld hl,Ctrl_0
  51+ 9A0D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A0F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A0F              ; 																	; _ en el caso de que no lo haya.
  54+ 9A0F 3A E0 8B     	ld a,(Vel_down)
  55+ 9A12 47           	ld b,a
  56+ 9A13 2A C8 8B         ld hl,(Posicion_actual)
  57+ 9A16 CD AD 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A19 E6 02        	and 2
  59+ 9A1B 28 17        	jr z,1F
  60+ 9A1D
  61+ 9A1D              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A1D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A1D
  64+ 9A1D 7C           	ld a,h
  65+ 9A1E FE 57        	cp $57
  66+ 9A20 20 12        	jr nz,1F
  67+ 9A22
  68+ 9A22 7D           	ld a,l
  69+ 9A23 C6 20        	add $20
  70+ 9A25 30 0D        	jr nc,1F
  71+ 9A27
  72+ 9A27              ; ------------------------------
  73+ 9A27              ;
  74+ 9A27              ;	12/01/24
  75+ 9A27
  76+ 9A27              ;	call Reaparece_arriba
  77+ 9A27 CD 33 9D     	call Reinicio
  78+ 9A2A
  79+ 9A2A              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A2A
  81+ 9A2A 3A 2B 8C     	ld a,(Ctrl_3)
  82+ 9A2D CB CF        	set 1,a
  83+ 9A2F 32 2B 8C     	ld (Ctrl_3),a
  84+ 9A32
  85+ 9A32 18 08        	jr 3F
  86+ 9A34              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A34              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A34              ; ------------------------------
  89+ 9A34
  90+ 9A34 CD C1 99     1 call NextScan
  91+ 9A37 22 C8 8B     	ld (Posicion_actual),hl
  92+ 9A3A 10 DA            djnz 2B
  93+ 9A3C CD CB 94     3 call Genera_coordenadas
  94+ 9A3F C9           	ret
  95+ 9A40
  96+ 9A40              ; ******************************************************************************************************************************************************************************************
  97+ 9A40              ;
  98+ 9A40              ;   27/05/23
  99+ 9A40              ;
 100+ 9A40              ;	Mov_up
 101+ 9A40              ;
 102+ 9A40              ; 	Mueve el Sprite hacia arriba.
 103+ 9A40              ;
 104+ 9A40              ;
 105+ 9A40              Mov_up
 106+ 9A40
 107+ 9A40 CD 71 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A43              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A43 21 C5 8B     	ld hl,Ctrl_0
 110+ 9A46 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A48              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A48              ; 																		; _ en el caso de que no lo haya.
 113+ 9A48 3A DF 8B     	ld a,(Vel_up)
 114+ 9A4B 47           	ld b,a
 115+ 9A4C 2A C8 8B     	ld hl,(Posicion_actual)
 116+ 9A4F CD AD 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A52 A7           	and a
 118+ 9A53 20 10        	jr nz,1F
 119+ 9A55
 120+ 9A55              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A55              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A55
 123+ 9A55 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A56 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A58 20 0B            jr nz,1F
 126+ 9A5A 7D               ld a,l
 127+ 9A5B D6 20            sub $20
 128+ 9A5D 30 06            jr nc,1F
 129+ 9A5F 25               dec h
 130+ 9A60
 131+ 9A60              ; -----------------------------
 132+ 9A60 CD 14 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A63              ;	call Reinicio
 134+ 9A63              ; -----------------------------
 135+ 9A63
 136+ 9A63 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A65 CD D0 99     1 call PreviousScan
 138+ 9A68 22 C8 8B     	ld (Posicion_actual),hl
 139+ 9A6B 10 E2            djnz 3B
 140+ 9A6D CD CB 94     2 call Genera_coordenadas
 141+ 9A70 C9           	ret
 142+ 9A71
 143+ 9A71              ; -----------------------------
 144+ 9A71              ;
 145+ 9A71              ;	27/5/23
 146+ 9A71              ;
 147+ 9A71              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A71              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A71              ;
 150+ 9A71              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A71              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A71              ;
 153+ 9A71              ;	Modifica: A y (Puntero_objeto).
 154+ 9A71
 155+ 9A71 3A C4 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A74 CB 47        	bit 0,a
 157+ 9A76 C8           	ret z
 158+ 9A77 CB 87        	res 0,a
 159+ 9A79 32 C4 8B     	ld (Ctrl_2),a
 160+ 9A7C 2A F6 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A7F 22 CA 8B     	ld (Puntero_objeto),hl
 162+ 9A82 C9           	ret
 163+ 9A83
 164+ 9A83              ; ******************************************************************************************************************************************************************************************
 165+ 9A83              ;
 166+ 9A83              ;	19/10/22
 167+ 9A83              ;
 168+ 9A83              ;	Mov_right.
 169+ 9A83              ;
 170+ 9A83              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A83              ;
 172+ 9A83
 173+ 9A83 3A C5 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A86 CB 77        	bit 6,a
 175+ 9A88 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A8A
 177+ 9A8A CD C2 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A8D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A8E
 180+ 9A8E 21 C5 8B     	ld hl,Ctrl_0
 181+ 9A91 CB E6        	set 4,(hl)
 182+ 9A93 18 52        	jr 8F
 183+ 9A95
 184+ 9A95 21 C5 8B     10 ld hl,Ctrl_0
 185+ 9A98 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A9A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A9A              ; 																	; _ en el caso de que no lo haya.
 188+ 9A9A 3A B9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A9D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A9F 20 46        	jr nz,8F
 191+ 9AA1
 192+ 9AA1 3A CC 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AA5 28 40        	jr z,8F
 195+ 9AA7
 196+ 9AA7              ; ---------- ---------- ----------
 197+ 9AA7              ;
 198+ 9AA7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA7
 200+ 9AA7 3A DE 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AAA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AAC 28 11        	jr z,1F
 203+ 9AAE 38 06        	jr c,6F
 204+ 9AB0 FE 04        	cp 4
 205+ 9AB2 28 14        	jr z,7F
 206+ 9AB4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AB6
 208+ 9AB6              ; ---------- ---------- ----------
 209+ 9AB6              ;
 210+ 9AB6              ; Perfiles de velocidad
 211+ 9AB6              ;
 212+ 9AB6
 213+ 9AB6 3A CC 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AB9 FE FE        	cp $fe
 215+ 9ABB 20 2A        	jr nz,8F
 216+ 9ABD 18 10        	jr 3F
 217+ 9ABF 3A CC 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AC2 FE FD        	cp $fd
 219+ 9AC4 20 21        	jr nz,8F
 220+ 9AC6 18 07        	jr 3F
 221+ 9AC8 3A CC 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ACB FE FB        	cp $fb
 223+ 9ACD 20 18        	jr nz,8F
 224+ 9ACF
 225+ 9ACF              ; ---------- ---------- ----------
 226+ 9ACF
 227+ 9ACF              3
 228+ 9ACF CD 02 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AD2              ;	call Reinicio
 230+ 9AD2
 231+ 9AD2              ; ---------- ---------- ----------
 232+ 9AD2              ;
 233+ 9AD2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AD2
 235+ 9AD2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AD5 CD EE 9A     	call DESPLZ_DER
 238+ 9AD8 C1           	pop bc
 239+ 9AD9 10 F9        	djnz 5B
 240+ 9ADB 2A C8 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ADE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ADF 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9AE2 CD CB 94     	call Genera_coordenadas
 244+ 9AE5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE7
 246+ 9AE7              ; ---------- ---------- ----------
 247+ 9AE7
 248+ 9AE7 2A C8 8B     8 ld hl,(Posicion_actual)
 249+ 9AEA CD EE 9A     	call DESPLZ_DER
 250+ 9AED C9           2 ret
 251+ 9AEE
 252+ 9AEE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AEE              ;
 254+ 9AEE              ;	22/9/22
 255+ 9AEE              ;
 256+ 9AEE
 257+ 9AEE CD FD 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AF1 CD 49 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF4 CD 72 9B         call Ciclo_completo
 260+ 9AF7 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AFA CB FE        	set 7,(hl)
 262+ 9AFC C9           	ret
 263+ 9AFD
 264+ 9AFD              ; ******************************************************************************************************************************************************************************************
 265+ 9AFD              ;	15/02/23
 266+ 9AFD              ;
 267+ 9AFD
 268+ 9AFD 3A DE 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B00 47           	ld b,a
 270+ 9B01 2A D1 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B04 23           1 inc hl
 272+ 9B05 23           	inc hl
 273+ 9B06 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B08 22 D1 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B0B CD AC 90     	call Extrae_address
 276+ 9B0E 22 CA 8B     	ld (Puntero_objeto),hl
 277+ 9B11
 278+ 9B11              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B11
 280+ 9B11              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B11              ; Cuántos movimientos hemos hecho ??
 282+ 9B11              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B11
 284+ 9B11 2A CD 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B14 EB           	ex de,hl
 286+ 9B15 A7           	and a
 287+ 9B16 ED 52        	sbc hl,de
 288+ 9B18 CB 3D        	srl l
 289+ 9B1A 3E 08        6 ld a,8
 290+ 9B1C 95           	sub l
 291+ 9B1D 30 1E        	jr nc,3F
 292+ 9B1F
 293+ 9B1F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B1F              ; B="0".
 295+ 9B1F
 296+ 9B1F 04           4 inc b
 297+ 9B20 3C           	inc a
 298+ 9B21 20 FC        	jr nz,4B
 299+ 9B23 78           	ld a,b
 300+ 9B24 08           	ex af,af
 301+ 9B25 2A CD 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B28 23           5 inc hl
 303+ 9B29 23           	inc hl
 304+ 9B2A 10 FC        	djnz 5B
 305+ 9B2C 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B2F CD AC 90     	call Extrae_address
 307+ 9B32 22 CA 8B     	ld (Puntero_objeto),hl
 308+ 9B35
 309+ 9B35              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B35              ; _(Posicion_actual).
 311+ 9B35
 312+ 9B35 21 C8 8B     	ld hl,Posicion_actual
 313+ 9B38 34           	inc (hl)
 314+ 9B39 08               ex af,af
 315+ 9B3A 6F           	ld l,a
 316+ 9B3B 18 DD        	jr 6B
 317+ 9B3D
 318+ 9B3D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B3D
 320+ 9B3D 47           3 ld b,a
 321+ 9B3E 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B41 23           2 inc hl
 323+ 9B42 23           	inc hl
 324+ 9B43 10 FC        	djnz 2B
 325+ 9B45 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B48 C9           8 ret
 327+ 9B49
 328+ 9B49              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B49              ;
 330+ 9B49              ;	24/7/22
 331+ 9B49              ;
 332+ 9B49              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B49              ;
 334+ 9B49              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B49              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B49              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B49
 338+ 9B49 3A CC 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B4C A7           	and a
 340+ 9B4D 20 1F        	jr nz,1F
 341+ 9B4F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B51 32 CC 8B         ld (CTRL_DESPLZ),a
 343+ 9B54
 344+ 9B54 21 C7 8B     	ld hl,Columns
 345+ 9B57 34           	inc (hl)
 346+ 9B58 3A D7 8B     	ld a,(Cuad_objeto)
 347+ 9B5B E6 01        	and 1
 348+ 9B5D 28 0F        	jr z,1F
 349+ 9B5F 2A C8 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B62 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B63 22 C8 8B     	ld (Posicion_actual),hl
 352+ 9B66 CD CB 94     	call Genera_coordenadas
 353+ 9B69 CD CE 9C     	call Inc_CTRL_DESPLZ
 354+ 9B6C 18 03        	jr 2F
 355+ 9B6E CD CE 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B71 C9           2 ret
 357+ 9B72
 358+ 9B72              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B72              ;
 360+ 9B72              ;	24/7/22
 361+ 9B72              ;
 362+ 9B72              ;	Ciclo_completo.
 363+ 9B72              ;
 364+ 9B72              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B72              ;
 366+ 9B72              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B72              ; 	Decrementamos (Columns).
 368+ 9B72              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B72              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B72
 371+ 9B72
 372+ 9B72 3A CC 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B75 FE FF        	cp $ff
 374+ 9B77 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B79 E6 F0        	and $f0
 376+ 9B7B 20 28        	jr nz,3F
 377+ 9B7D
 378+ 9B7D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B7D
 380+ 9B7D 3A CC 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B80 47           	ld b,a
 382+ 9B81 3E F8        	ld a,$f8
 383+ 9B83 80           	add b
 384+ 9B84 32 CC 8B     	ld (CTRL_DESPLZ),a
 385+ 9B87 18 1C        	jr 3F
 386+ 9B89 21 C7 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B8C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B8D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B8E 32 CC 8B     	ld (CTRL_DESPLZ),a
 390+ 9B91 3A D7 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B94 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B96 20 0A        	jr nz,2F
 393+ 9B98 2A C8 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B9B 23           	inc hl
 395+ 9B9C 22 C8 8B     	ld (Posicion_actual),hl
 396+ 9B9F CD CB 94     	call Genera_coordenadas
 397+ 9BA2
 398+ 9BA2              ; Inicia el puntero de Sprite.
 399+ 9BA2
 400+ 9BA2 CD C1 90     2 call Inicia_puntero_objeto_der
 401+ 9BA5 C9           3 ret
 402+ 9BA6
 403+ 9BA6              ; ******************************************************************************************************************************************************************************************
 404+ 9BA6              ;
 405+ 9BA6              ;	15/02/23
 406+ 9BA6              ;
 407+ 9BA6              ;	Mov_left.
 408+ 9BA6              ;
 409+ 9BA6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BA6              ;
 411+ 9BA6              Mov_left
 412+ 9BA6
 413+ 9BA6 21 C5 8B     	ld hl,Ctrl_0
 414+ 9BA9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BAB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BAB              ; 																	; _ en el caso de que no lo haya.
 417+ 9BAB 3A C5 8B     	ld a,(Ctrl_0)
 418+ 9BAE CB 77        	bit 6,a
 419+ 9BB0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BB2
 421+ 9BB2 CD C8 9C     	call Stop_Amadeus_left
 422+ 9BB5 C8           	ret z
 423+ 9BB6 20 4A        	jr nz,8F
 424+ 9BB8
 425+ 9BB8 3A B9 8B     11 ld a,(Coordenada_X)
 426+ 9BBB A7           	and a
 427+ 9BBC 20 44        	jr nz,8F
 428+ 9BBE
 429+ 9BBE 3A CC 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BC2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC4
 433+ 9BC4              ; ---------- ---------- ----------
 434+ 9BC4
 435+ 9BC4 3A DD 8B     	ld a,(Vel_left)
 436+ 9BC7 FE 02        	cp 2
 437+ 9BC9 28 0F        	jr z,1F
 438+ 9BCB 38 04        	jr c,6F
 439+ 9BCD FE 04        	cp 4
 440+ 9BCF 28 12        	jr z,7F
 441+ 9BD1
 442+ 9BD1              ; ---------- ---------- ----------
 443+ 9BD1
 444+ 9BD1 3A CC 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BD4 FE F8        	cp $f8
 446+ 9BD6 20 2A        	jr nz,8F
 447+ 9BD8 18 10        	jr 4F
 448+ 9BDA 3A CC 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BDD FE F9        	cp $f9
 450+ 9BDF 20 21        	jr nz,8F
 451+ 9BE1 18 07        	jr 4F
 452+ 9BE3 3A CC 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BE6 FE FB        	cp $fb
 454+ 9BE8 20 18        	jr nz,8F
 455+ 9BEA
 456+ 9BEA              ; ---------- ---------- ----------
 457+ 9BEA
 458+ 9BEA              4
 459+ 9BEA CD F0 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BED              ;	call Reinicio
 461+ 9BED
 462+ 9BED              ; ---------- ---------- ----------
 463+ 9BED
 464+ 9BED 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BEF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BF0
 467+ 9BF0              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BF0              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BF0
 470+ 9BF0 CD 09 9C     	call DESPLZ_IZQ
 471+ 9BF3 C1           	pop bc
 472+ 9BF4 10 F9        	djnz 5B
 473+ 9BF6 2A C8 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BF9 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BFA 22 C8 8B     	ld (Posicion_actual),hl
 476+ 9BFD CD CB 94     	call Genera_coordenadas
 477+ 9C00 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C02
 479+ 9C02              ; ---------- ---------- ----------
 480+ 9C02
 481+ 9C02              ; Movemos, no hay recolocación.
 482+ 9C02
 483+ 9C02 2A C8 8B     8 ld hl,(Posicion_actual)
 484+ 9C05 CD 09 9C     	call DESPLZ_IZQ
 485+ 9C08 C9           2 ret
 486+ 9C09
 487+ 9C09              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C09              ;
 489+ 9C09              ;	22/9/22
 490+ 9C09
 491+ 9C09              DESPLZ_IZQ
 492+ 9C09
 493+ 9C09 CD 18 9C     	call Desplaza_izquierda
 494+ 9C0C CD 64 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C0F CD 8C 9C     	call Ciclo_completo_2
 496+ 9C12 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C15 CB BE        	res 7,(hl)
 498+ 9C17 C9           	ret
 499+ 9C18
 500+ 9C18              Desplaza_izquierda
 501+ 9C18
 502+ 9C18 3A DD 8B     	ld a,(Vel_left)
 503+ 9C1B 47           	ld b,a
 504+ 9C1C 2A D3 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C1F 23           1 inc hl
 506+ 9C20 23           	inc hl
 507+ 9C21 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C23 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C26 CD AC 90     	call Extrae_address
 510+ 9C29 22 CA 8B     	ld (Puntero_objeto),hl
 511+ 9C2C
 512+ 9C2C              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C2C
 514+ 9C2C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C2C              ; Cuántos movimientos hemos hecho ??
 516+ 9C2C              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C2C
 518+ 9C2C 2A CF 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C2F EB           	ex de,hl
 520+ 9C30 A7           	and a
 521+ 9C31 ED 52        	sbc hl,de
 522+ 9C33 CB 3D        	srl l
 523+ 9C35 3E 08        6 ld a,8
 524+ 9C37 95           	sub l
 525+ 9C38 30 1E        	jr nc,3F
 526+ 9C3A
 527+ 9C3A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C3A              ; B="0".
 529+ 9C3A
 530+ 9C3A 04           4 inc b
 531+ 9C3B 3C           	inc a
 532+ 9C3C 20 FC        	jr nz,4B
 533+ 9C3E 78           	ld a,b
 534+ 9C3F 08           	ex af,af
 535+ 9C40 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C43 23           5 inc hl
 537+ 9C44 23           	inc hl
 538+ 9C45 10 FC        	djnz 5B
 539+ 9C47 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C4A CD AC 90     	call Extrae_address
 541+ 9C4D 22 CA 8B     	ld (Puntero_objeto),hl
 542+ 9C50
 543+ 9C50              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C50              ; _(Posicion_actual).
 545+ 9C50
 546+ 9C50 21 C8 8B     	ld hl,Posicion_actual
 547+ 9C53 35           	dec (hl)
 548+ 9C54 08           	ex af,af
 549+ 9C55 6F           	ld l,a
 550+ 9C56 18 DD        	jr 6B
 551+ 9C58
 552+ 9C58              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C58
 554+ 9C58 47           3 ld b,a
 555+ 9C59 2A CD 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C5C 23           2 inc hl
 557+ 9C5D 23           	inc hl
 558+ 9C5E 10 FC        	djnz 2B
 559+ 9C60 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C63 C9           8 ret
 561+ 9C64
 562+ 9C64              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C64              ;
 564+ 9C64              ;	modifica_parametros_1er_DESPLZ
 565+ 9C64              ;
 566+ 9C64              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C64              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C64              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C64
 570+ 9C64 3A CC 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C67 A7           	and a
 572+ 9C68 20 1E        	jr nz,1F
 573+ 9C6A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C6B 32 CC 8B         ld (CTRL_DESPLZ),a
 575+ 9C6E 21 C7 8B     	ld hl,Columns
 576+ 9C71 34           	inc (hl)
 577+ 9C72 3A D7 8B     	ld a,(Cuad_objeto)
 578+ 9C75 E6 01        	and 1
 579+ 9C77 20 0F        	jr nz,1F
 580+ 9C79 2A C8 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C7C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C7D 22 C8 8B     	ld (Posicion_actual),hl
 583+ 9C80 CD CB 94     	call Genera_coordenadas
 584+ 9C83 CD DF 9C     	call Dec_CTRL_DESPLZ
 585+ 9C86 18 03        	jr 2F
 586+ 9C88 CD DF 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C8B C9           2 ret
 588+ 9C8C
 589+ 9C8C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C8C
 591+ 9C8C 3A CC 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C8F FE F7        	cp $f7
 593+ 9C91 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C93 30 2C        	jr nc,3F
 595+ 9C95
 596+ 9C95              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C95
 598+ 9C95 06 00        	ld b,0
 599+ 9C97 04           4 inc b
 600+ 9C98 3C           	inc a
 601+ 9C99 FE F7        	cp $f7
 602+ 9C9B 20 FA        	jr nz,4B
 603+ 9C9D 3E FF        	ld a,$ff
 604+ 9C9F 90           	sub b
 605+ 9CA0 32 CC 8B     	ld (CTRL_DESPLZ),a
 606+ 9CA3 18 1C        	jr 3F
 607+ 9CA5
 608+ 9CA5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CA5
 610+ 9CA5 21 C7 8B     1 ld hl,Columns
 611+ 9CA8 35           	dec (hl)
 612+ 9CA9 AF           	xor a
 613+ 9CAA 32 CC 8B     	ld (CTRL_DESPLZ),a
 614+ 9CAD 3A D7 8B     	ld a,(Cuad_objeto)
 615+ 9CB0 E6 01        	and 1
 616+ 9CB2 28 0A        	jr z,2F
 617+ 9CB4 2A C8 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB7 2B           	dec hl
 619+ 9CB8 22 C8 8B     	ld (Posicion_actual),hl
 620+ 9CBB CD CB 94     	call Genera_coordenadas
 621+ 9CBE
 622+ 9CBE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CBE
 624+ 9CBE CD D4 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC1 C9           3 ret
 626+ 9CC2
 627+ 9CC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CC2              ;
 629+ 9CC2              ;	19/10/22
 630+ 9CC2              ;
 631+ 9CC2              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CC2              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CC2
 634+ 9CC2 3A B9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CC5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC7 C9           	ret
 637+ 9CC8
 638+ 9CC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CC8              ;
 640+ 9CC8              ;	19/10/22
 641+ 9CC8              ;
 642+ 9CC8              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CC8              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CC8
 645+ 9CC8 3A B9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CCB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CCD C9           	ret
 648+ 9CCE
 649+ 9CCE              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CCE              ;
 651+ 9CCE              ;	24/7/22
 652+ 9CCE              ;
 653+ 9CCE              ;	Inc_CTRL_DESPLZ
 654+ 9CCE              ;
 655+ 9CCE              ;
 656+ 9CCE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CCE
 658+ 9CCE 21 CC 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD1 3A DE 8B     	ld a,(Vel_right)
 660+ 9CD4 A7           	and a
 661+ 9CD5 28 06        	jr z,1F
 662+ 9CD7 47           	ld b,a
 663+ 9CD8 34           3 inc (hl)
 664+ 9CD9 10 FD        	djnz 3B
 665+ 9CDB 18 01        	jr 2F
 666+ 9CDD 34           1 inc (hl)
 667+ 9CDE C9           2 ret
 668+ 9CDF
 669+ 9CDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CDF              ;
 671+ 9CDF              ;	5/2/23
 672+ 9CDF              ;
 673+ 9CDF              ;	Dec_CTRL_DESPLZ
 674+ 9CDF              ;
 675+ 9CDF              ;
 676+ 9CDF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CDF
 678+ 9CDF 21 CC 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CE2 3A DD 8B     	ld a,(Vel_left)
 680+ 9CE5 A7           	and a
 681+ 9CE6 28 06        	jr z,1F
 682+ 9CE8 47           	ld b,a
 683+ 9CE9 35           3 dec (hl)
 684+ 9CEA 10 FD        	djnz 3B
 685+ 9CEC 18 01        	jr 2F
 686+ 9CEE 35           1 dec (hl)
 687+ 9CEF C9           2 ret
 688+ 9CF0
 689+ 9CF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CF0
 691+ 9CF0 2A C8 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CF3 01 1F 00     	ld bc,31
 693+ 9CF6 A7           	and a
 694+ 9CF7 ED 4A        	adc hl,bc
 695+ 9CF9 22 C8 8B     	ld (Posicion_actual),hl
 696+ 9CFC 21 C5 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CFF CB C6        	set 0,(hl)
 698+ 9D01 C9           	ret
 699+ 9D02
 700+ 9D02              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D02
 702+ 9D02 2A C8 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D05 01 1F 00     	ld bc,31
 704+ 9D08 A7           	and a
 705+ 9D09 ED 42        	sbc hl,bc
 706+ 9D0B 22 C8 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D0E 21 C5 8B     	ld hl,Ctrl_0
 708+ 9D11 CB CE        	set 1,(hl)
 709+ 9D13 C9           	ret
 710+ 9D14
 711+ 9D14              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D14
 713+ 9D14 24           Reaparece_abajo inc h
 714+ 9D15 01 E0 17     	ld bc,$17e0
 715+ 9D18 A7           	and a
 716+ 9D19 ED 4A        	adc hl,bc
 717+ 9D1B 22 C8 8B     	ld (Posicion_actual),hl
 718+ 9D1E 21 C5 8B     	ld hl,Ctrl_0
 719+ 9D21 CB D6        	set 2,(hl)
 720+ 9D23 C9           	ret
 721+ 9D24
 722+ 9D24              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D24
 724+ 9D24 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D27 A7           	and a
 726+ 9D28 ED 42        	sbc hl,bc
 727+ 9D2A 22 C8 8B     	ld (Posicion_actual),hl
 728+ 9D2D 21 C5 8B     	ld hl,Ctrl_0
 729+ 9D30 CB DE        	set 3,(hl)
 730+ 9D32 C9           	ret
 731+ 9D33
 732+ 9D33              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D33              ;
 734+ 9D33              ;	15/07/23
 735+ 9D33
 736+ 9D33              Reinicio
 737+ 9D33
 738+ 9D33              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D33
 740+ 9D33 AF           	xor a
 741+ 9D34 21 ED 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D37 CD 55 9D     	call Limpia_contenido_hl
 743+ 9D3A
 744+ 9D3A 21 C8 8B     	ld hl,Posicion_actual
 745+ 9D3D CD 55 9D     	call Limpia_contenido_hl
 746+ 9D40
 747+ 9D40 CD AD 92     	call Inicializa_Puntero_indice_mov
 748+ 9D43 CD 54 9E     	call Inicia_Puntero_mov
 749+ 9D46
 750+ 9D46 21 EF 8B     	ld hl,Incrementa_puntero
 751+ 9D49 06 05        	ld b,5
 752+ 9D4B 77           1 ld (hl),a
 753+ 9D4C 23           	inc hl
 754+ 9D4D 10 FC        	djnz 1B
 755+ 9D4F
 756+ 9D4F 21 C4 8B     	ld hl,Ctrl_2
 757+ 9D52 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D54
 759+ 9D54 C9           	ret
 760+ 9D55
 761+ 9D55 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D56 23           	inc hl
 763+ 9D57 77           	ld (hl),a
 764+ 9D58 C9           	ret
 765+ 9D59
 766+ 9D59              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D59              ;
 768+ 9D59              ;	18/6/24
 769+ 9D59              ;
 770+ 9D59
 771+ 9D59              Amadeus_a_izquierda
 772+ 9D59
 773+ 9D59              ;	Actualiza contador de movimientos.
 774+ 9D59
 775+ 9D59 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D5C 35           	dec (hl)
 777+ 9D5D 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D5F
 779+ 9D5F 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D62 2B           	dec hl
 781+ 9D63 2B           	dec hl
 782+ 9D64 2B           	dec hl
 783+ 9D65 2B           	dec hl
 784+ 9D66 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D69
 786+ 9D69 21 2B 8C     	ld hl,Ctrl_3
 787+ 9D6C CB EE        	set 5,(hl)
 788+ 9D6E
 789+ 9D6E C9           	ret
 790+ 9D6F
 791+ 9D6F 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D70 C9           	ret
 793+ 9D71
 794+ 9D71
 795+ 9D71              Amadeus_a_derecha
 796+ 9D71
 797+ 9D71              ;	Actualiza contador de movimientos.
 798+ 9D71
 799+ 9D71 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D74 34           	inc (hl)
 801+ 9D75 3E 7A        	ld a,$7a
 802+ 9D77 BE           	cp (hl)
 803+ 9D78 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D7A
 805+ 9D7A 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D7D 23           	inc hl
 807+ 9D7E 23           	inc hl
 808+ 9D7F 23           	inc hl
 809+ 9D80 23           	inc hl
 810+ 9D81 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D84
 812+ 9D84 21 2B 8C     	ld hl,Ctrl_3
 813+ 9D87 CB EE        	set 5,(hl)
 814+ 9D89 C9           	ret
 815+ 9D8A
 816+ 9D8A 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D8B C9           	ret
# file closed: Direcciones.asm
2175  9D8C              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D8C              ; ----- ----- ----- ----- -----
   2+ 9D8C              ;
   3+ 9D8C              ;   28/12/23
   4+ 9D8C
   5+ 9D8C              Movimiento
   6+ 9D8C
   7+ 9D8C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D8C
   9+ 9D8C 3A C4 8B         ld a,(Ctrl_2)
  10+ 9D8F CB 57            bit 2,a
  11+ 9D91 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D93
  13+ 9D93 2A EB 8B         ld hl,(Puntero_mov)
  14+ 9D96 7E               ld a,(hl)
  15+ 9D97
  16+ 9D97              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D97
  18+ 9D97              Inicia_desplazamiento.
  19+ 9D97
  20+ 9D97              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D97
  22+ 9D97 CD 8A 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D9A
  24+ 9D9A              ; Iniciamos (Repetimos_mov).
  25+ 9D9A
  26+ 9D9A 7E               ld a,(hl)
  27+ 9D9B E6 0F            and $0f
  28+ 9D9D 32 F1 8B         ld (Repetimos_desplazamiento),a
  29+ 9DA0 32 F2 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DA3
  31+ 9DA3              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DA3
  33+ 9DA3 23               inc hl
  34+ 9DA4 7E               ld a,(hl)
  35+ 9DA5 32 F4 8B         ld (Cola_de_desplazamiento),a
  36+ 9DA8 2B               dec hl
  37+ 9DA9
  38+ 9DA9 21 C4 8B         ld hl,Ctrl_2
  39+ 9DAC CB D6            set 2,(hl)
  40+ 9DAE
  41+ 9DAE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DAE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DAE
  44+ 9DAE              Desplazamiento_iniciado
  45+ 9DAE
  46+ 9DAE CD 5E 9E         call Aplica_desplazamiento
  47+ 9DB1
  48+ 9DB1              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB1
  50+ 9DB1 3A 2B 8C         ld a,(Ctrl_3)
  51+ 9DB4 CB 4F            bit 1,a
  52+ 9DB6 C0               ret nz
  53+ 9DB7
  54+ 9DB7 21 F1 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DBA 35               dec (hl)
  56+ 9DBB C0               ret nz
  57+ 9DBC
  58+ 9DBC              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DBC              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DBC              ; Analiza (Cola_de_desplazamiento).
  61+ 9DBC
  62+ 9DBC 3A F4 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DBF A7               and a
  64+ 9DC0 CC B3 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DC3 28 30            jr z,Reinicia_el_movimiento
  66+ 9DC5
  67+ 9DC5 FE FF            cp $ff
  68+ 9DC7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DC9
  70+ 9DC9 FE FE            cp $fe
  71+ 9DCB CC 38 9E         call z,Fijamos_bucle
  72+ 9DCE 28 25            jr z,Reinicia_el_movimiento
  73+ 9DD0
  74+ 9DD0 FE FD            cp $fd
  75+ 9DD2 20 11            jr nz,1F
  76+ 9DD4
  77+ 9DD4              ; ---
  78+ 9DD4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD4
  80+ 9DD4 3A C4 8B         ld a,(Ctrl_2)
  81+ 9DD7 CB 5F            bit 3,a
  82+ 9DD9 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DDB
  84+ 9DDB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DDB
  86+ 9DDB 21 C4 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DDE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DE0
  89+ 9DE0 CD 49 9E         call Inicia_Repetimos_movimiento
  90+ 9DE3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DE5              ; ---
  92+ 9DE5
  93+ 9DE5 FE 01        1 cp 1
  94+ 9DE7 CA 22 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DEA
  96+ 9DEA 3D               dec a
  97+ 9DEB 32 F4 8B         ld (Cola_de_desplazamiento),a
  98+ 9DEE
  99+ 9DEE 3A F2 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF1 32 F1 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF4              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF4 C9               ret
 103+ 9DF5
 104+ 9DF5              Reinicia_el_movimiento
 105+ 9DF5
 106+ 9DF5 3A C4 8B         ld a,(Ctrl_2)
 107+ 9DF8 CB 5F            bit 3,a
 108+ 9DFA 28 1B            jr z,2F
 109+ 9DFC
 110+ 9DFC              ; (Cola_de_desplazamiento)="254".
 111+ 9DFC
 112+ 9DFC 21 F3 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DFF 35               dec (hl)
 114+ 9E00 20 15            jr nz,2F
 115+ 9E02
 116+ 9E02              ; Fin de las repeticiones del último movimiento.
 117+ 9E02
 118+ 9E02 21 C4 8B         ld hl,Ctrl_2
 119+ 9E05 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E07
 121+ 9E07 2A EB 8B         ld hl,(Puntero_mov)
 122+ 9E0A 23               inc hl
 123+ 9E0B 23               inc hl
 124+ 9E0C 23               inc hl
 125+ 9E0D 22 EB 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E10              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E10 7E               ld a,(hl)
 128+ 9E11 32 F4 8B         ld (Cola_de_desplazamiento),a
 129+ 9E14
 130+ 9E14 C3 BC 9D         jp Cola
 131+ 9E17
 132+ 9E17 CD 54 9E     2 call Inicia_Puntero_mov
 133+ 9E1A
 134+ 9E1A 21 C4 8B         ld hl,Ctrl_2
 135+ 9E1D CB 96            res 2,(hl)
 136+ 9E1F
 137+ 9E1F C3 8C 9D         jp Movimiento
 138+ 9E22
 139+ 9E22              Siguiente_desplazamiento
 140+ 9E22
 141+ 9E22              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E22              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E22
 144+ 9E22 21 C4 8B         ld hl,Ctrl_2
 145+ 9E25 CB 96            res 2,(hl)
 146+ 9E27
 147+ 9E27 2A EB 8B         ld hl,(Puntero_mov)
 148+ 9E2A 23               inc hl
 149+ 9E2B 23               inc hl
 150+ 9E2C 22 EB 8B         ld (Puntero_mov),hl
 151+ 9E2F
 152+ 9E2F 7E               ld a,(hl)
 153+ 9E30 A7               and a
 154+ 9E31 CC B3 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E34 CA F5 9D         jp z,Reinicia_el_movimiento
 156+ 9E37
 157+ 9E37 C9               ret
 158+ 9E38
 159+ 9E38              ; Subrutinas -----------------------------------------
 160+ 9E38              ; ---------- --------- --------- ---------- ----------
 161+ 9E38              ;
 162+ 9E38              ;   24/07/23
 163+ 9E38              ;
 164+ 9E38              ;   Fijamos_bucle
 165+ 9E38              ;
 166+ 9E38              ;
 167+ 9E38
 168+ 9E38              Fijamos_bucle
 169+ 9E38
 170+ 9E38 3A EF 8B         ld a,(Incrementa_puntero)
 171+ 9E3B 3C               inc a
 172+ 9E3C 32 F0 8B         ld (Incrementa_puntero_backup),a
 173+ 9E3F
 174+ 9E3F CD B3 9E         call Incrementa_Puntero_indice_mov
 175+ 9E42 2A E9 8B         ld hl,(Puntero_indice_mov)
 176+ 9E45 22 ED 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E48 C9               ret
 178+ 9E49
 179+ 9E49              ; ---------- --------- --------- ---------- ----------
 180+ 9E49              ;
 181+ 9E49              ;   07/7/23
 182+ 9E49              ;
 183+ 9E49              ;   Inicia_Repetimos_movimiento
 184+ 9E49              ;
 185+ 9E49              ;
 186+ 9E49
 187+ 9E49              Inicia_Repetimos_movimiento
 188+ 9E49
 189+ 9E49              ; Iniciamos (Repetimos_movimiento).
 190+ 9E49
 191+ 9E49 DD 2A EB 8B      ld ix,(Puntero_mov)
 192+ 9E4D DD 7E 02         ld a,(ix+2)
 193+ 9E50 32 F3 8B         ld (Repetimos_movimiento),a
 194+ 9E53
 195+ 9E53 C9               ret
 196+ 9E54
 197+ 9E54              ; ---------- --------- --------- ---------- ----------
 198+ 9E54              ;
 199+ 9E54              ;   26/6/23
 200+ 9E54              ;
 201+ 9E54              ;   Inicia_Puntero_mov
 202+ 9E54              ;
 203+ 9E54              ;
 204+ 9E54
 205+ 9E54 2A E9 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E57 CD AC 90         call Extrae_address
 207+ 9E5A 22 EB 8B         ld (Puntero_mov),hl
 208+ 9E5D C9               ret
 209+ 9E5E
 210+ 9E5E              ; ---------- --------- --------- ---------- ----------
 211+ 9E5E              ;
 212+ 9E5E              ;   27/06/23
 213+ 9E5E              ;
 214+ 9E5E              ;   Aplica_movimiento.
 215+ 9E5E
 216+ 9E5E              Aplica_desplazamiento
 217+ 9E5E
 218+ 9E5E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E5E
 220+ 9E5E 2A EB 8B         ld hl, (Puntero_mov)
 221+ 9E61
 222+ 9E61 7E               ld a,(hl)
 223+ 9E62 E6 F0            and $f0
 224+ 9E64 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E65
 226+ 9E65 CB 7E            bit 7,(hl)
 227+ 9E67 28 03            jr z,1F
 228+ 9E69 CD 40 9A         call Mov_up
 229+ 9E6C 2A EB 8B     1 ld hl, (Puntero_mov)
 230+ 9E6F CB 76            bit 6,(hl)
 231+ 9E71 28 03            jr z,2F
 232+ 9E73 CD 07 9A         call Mov_down
 233+ 9E76
 234+ 9E76              ; Se ha aplicado reinicio ???
 235+ 9E76              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E76
 237+ 9E76              ;    ld a,(Ctrl_3)
 238+ 9E76              ;    bit 1,a
 239+ 9E76              ;    ret nz
 240+ 9E76
 241+ 9E76 2A EB 8B     2 ld hl, (Puntero_mov)
 242+ 9E79 CB 6E            bit 5,(hl)
 243+ 9E7B 28 03            jr z,3F
 244+ 9E7D CD A6 9B         call Mov_left
 245+ 9E80 2A EB 8B     3 ld hl, (Puntero_mov)
 246+ 9E83 CB 66            bit 4,(hl)
 247+ 9E85 C8               ret z
 248+ 9E86 CD 83 9A         call Mov_right
 249+ 9E89 C9               ret
 250+ 9E8A
 251+ 9E8A              ; ---------- --------- --------- ---------- ----------
 252+ 9E8A              ;
 253+ 9E8A              ;   26/06/23
 254+ 9E8A              ;
 255+ 9E8A              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E8A
 257+ 9E8A              Ajusta_velocidad_desplazamiento
 258+ 9E8A
 259+ 9E8A              ; 1er byte de la cadena de movimiento.
 260+ 9E8A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E8A
 262+ 9E8A CD A8 9E         call Extrae_nibble_alto
 263+ 9E8D
 264+ 9E8D 32 DF 8B         ld (Vel_up),a
 265+ 9E90 79               ld a,c
 266+ 9E91 E6 0F            and $0f
 267+ 9E93 32 E0 8B         ld (Vel_down),a
 268+ 9E96
 269+ 9E96              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E96              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E96
 272+ 9E96 23               inc hl
 273+ 9E97 CD A8 9E         call Extrae_nibble_alto
 274+ 9E9A
 275+ 9E9A 32 DD 8B         ld (Vel_left),a
 276+ 9E9D 79               ld a,c
 277+ 9E9E E6 0F            and $0f
 278+ 9EA0 32 DE 8B         ld (Vel_right),a
 279+ 9EA3
 280+ 9EA3              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EA3
 282+ 9EA3 23               inc hl
 283+ 9EA4 22 EB 8B         ld (Puntero_mov),hl
 284+ 9EA7 C9               ret
 285+ 9EA8
 286+ 9EA8 06 04        Extrae_nibble_alto ld b,4
 287+ 9EAA 7E               ld a,(hl)
 288+ 9EAB 4F               ld c,a
 289+ 9EAC E6 F0            and $f0
 290+ 9EAE CB 3F        1 srl a
 291+ 9EB0 10 FC            djnz 1B
 292+ 9EB2 C9               ret
 293+ 9EB3
 294+ 9EB3              ; ---------- --------- --------- ---------- ----------
 295+ 9EB3              ;
 296+ 9EB3              ;   5/7/23
 297+ 9EB3              ;
 298+ 9EB3              ;   Incrementa_Puntero_indice_mov
 299+ 9EB3
 300+ 9EB3              Incrementa_Puntero_indice_mov
 301+ 9EB3
 302+ 9EB3 21 EF 8B         ld hl,Incrementa_puntero
 303+ 9EB6 34               inc (hl)
 304+ 9EB7
 305+ 9EB7 2A E9 8B         ld hl,(Puntero_indice_mov)
 306+ 9EBA 01 02 00         ld bc,2
 307+ 9EBD A7               and a
 308+ 9EBE 09               add hl,bc
 309+ 9EBF 22 E9 8B         ld (Puntero_indice_mov),hl
 310+ 9EC2
 311+ 9EC2 7E               ld a,(hl)
 312+ 9EC3 A7               and a
 313+ 9EC4
 314+ 9EC4              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC4
 316+ 9EC4              ;    jr z,$
 317+ 9EC4
 318+ 9EC4              ;! Reinicia el Patrón de movimiento.
 319+ 9EC4
 320+ 9EC4 CC C9 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC7
 322+ 9EC7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EC8
 324+ 9EC8 C9               ret
 325+ 9EC9
 326+ 9EC9              ; ---------- --------- --------- ---------- ----------
 327+ 9EC9              ;
 328+ 9EC9              ;   15/01/24
 329+ 9EC9              ;
 330+ 9EC9              ;   Inicializa_Puntero_indice_mov
 331+ 9EC9
 332+ 9EC9              Inicializa_Puntero_indice_mov_2
 333+ 9EC9
 334+ 9EC9              ; Existe etiqueta de bucle principal???
 335+ 9EC9
 336+ 9EC9 2A ED 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ECC 24               inc h
 338+ 9ECD 25               dec h
 339+ 9ECE 28 05            jr z,2F
 340+ 9ED0
 341+ 9ED0 22 E9 8B         ld (Puntero_indice_mov),hl
 342+ 9ED3 18 14            jr 3F
 343+ 9ED5
 344+ 9ED5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ED5
 346+ 9ED5 3A EF 8B     2 ld a,(Incrementa_puntero)
 347+ 9ED8 47               ld b,a
 348+ 9ED9
 349+ 9ED9 2A E9 8B         ld hl,(Puntero_indice_mov)
 350+ 9EDC 2B           1 dec hl
 351+ 9EDD 2B               dec hl
 352+ 9EDE 10 FC            djnz 1B
 353+ 9EE0 22 E9 8B         ld (Puntero_indice_mov),hl
 354+ 9EE3
 355+ 9EE3 AF               xor a
 356+ 9EE4 32 EF 8B         ld (Incrementa_puntero),a
 357+ 9EE7 18 06            jr 4F
 358+ 9EE9
 359+ 9EE9 3A F0 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EEC 32 EF 8B         ld (Incrementa_puntero),a
 361+ 9EEF C9           4 ret
 362+ 9EF0
 363+ 9EF0              ; ----------------------------------------------------------------------
 364+ 9EF0              ;
 365+ 9EF0              ;   30/01/24
 366+ 9EF0              ;
 367+ 9EF0              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EF0
 369+ 9EF0 3A B8 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EF3 CD 48 94         call Calcula_salto_en_BC
 371+ 9EF6 21 E1 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EF9 A7               and a
 373+ 9EFA ED 4A            adc hl,bc
 374+ 9EFC C9               ret
 375+ 9EFD
 376+ 9EFD              ; ----------------------------------------------------------------------
 377+ 9EFD              ;
 378+ 9EFD              ;   30/01/24
 379+ 9EFD              ;
 380+ 9EFD              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EFD              ;
 382+ 9EFD              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EFD
 384+ 9EFD 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EFE 23               inc hl
 386+ 9EFF 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F00 69               ld l,c
 388+ 9F01 60               ld h,b
 389+ 9F02 22 C1 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F05 C9               ret
 391+ 9F06
# file closed: Movimiento.asm
2176  9F06              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F06              Motor_de_disparos_entidades
   2+ 9F06
   3+ 9F06 3A 19 8C      ld a,(Numero_de_disparos_de_entidades)
   4+ 9F09 FE 07            cp 7
   5+ 9F0B C8               ret z
   6+ 9F0C
   7+ 9F0C 06 07            ld b,7                                                               ; Contador de disparos.
   8+ 9F0E 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F11
  10+ 9F11 CD AC 90     1 call Extrae_address
  11+ 9F14 13               inc de
  12+ 9F15 13               inc de
  13+ 9F16 ED 53 1C 8C      ld (Puntero_rancio_disparos_album),de
  14+ 9F1A
  15+ 9F1A 23               inc hl
  16+ 9F1B
  17+ 9F1B 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F1C 35               dec (hl)
  19+ 9F1D 28 1E            jr z,3F
  20+ 9F1F
  21+ 9F1F 23               inc hl
  22+ 9F20
  23+ 9F20              ;;;Mueve_disparo_Entidad
  24+ 9F20
  25+ 9F20              ;    ld a,(Ctrl_5)
  26+ 9F20              ;    bit 2,a
  27+ 9F20              ;    di
  28+ 9F20              ;    jr nz,$
  29+ 9F20              ;    ei
  30+ 9F20
  31+ 9F20 CD AC 90         call Extrae_address
  32+ 9F23 CD C1 99         call NextScan
  33+ 9F26 CD C1 99         call NextScan
  34+ 9F29              ;    call NextScan
  35+ 9F29              ;    call NextScan
  36+ 9F29
  37+ 9F29              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  38+ 9F29
  39+ 9F29 D5               push de
  40+ 9F2A
  41+ 9F2A E5               push hl
  42+ 9F2B D1               pop de
  43+ 9F2C
  44+ 9F2C A7               and a
  45+ 9F2D 21 FF 57         ld hl,$57ff
  46+ 9F30 ED 52            sbc hl,de
  47+ 9F32
  48+ 9F32 F3               di
  49+ 9F33 38 FE            jr c,$
  50+ 9F35 FB               ei
  51+ 9F36
  52+ 9F36 EB               ex de,hl
  53+ 9F37 D1               pop de
  54+ 9F38
  55+ 9F38              ;    jr c,Elimina_disparo
  56+ 9F38
  57+ 9F38 EB               ex de,hl
  58+ 9F39
  59+ 9F39 73               ld (hl),e
  60+ 9F3A 23               inc hl
  61+ 9F3B 72               ld (hl),d
  62+ 9F3C
  63+ 9F3C C9               ret
  64+ 9F3D
  65+ 9F3D
  66+ 9F3D EB           3 ex de,hl
  67+ 9F3E 10 D1            djnz 1B
  68+ 9F40
  69+ 9F40 C9               ret
  70+ 9F41
  71+ 9F41
  72+ 9F41              ; --------------------------------------------------------------------------------------
  73+ 9F41              ;
  74+ 9F41              ;   19/09/24
  75+ 9F41              ;
  76+ 9F41
  77+ 9F41              Genera_datos_de_impresion_disparos_Entidades
  78+ 9F41
  79+ 9F41              ;*  Exclusiones.
  80+ 9F41
  81+ 9F41 3A 19 8C         ld a,(Numero_de_disparos_de_entidades)
  82+ 9F44 FE 07            cp 7
  83+ 9F46 C8               ret z                                                     ;? Salimos si no hay generado ningún disparo de entidad.
  84+ 9F47
  85+ 9F47              ; ---------------
  86+ 9F47
  87+ 9F47              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
  88+ 9F47
  89+ 9F47 3E 07            ld a,7
  90+ 9F49 08               ex af,af                                                  ;? 7 Cajas como 7 soles. Contador de cajas alojado en A´.
  91+ 9F4A
  92+ 9F4A 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  93+ 9F4D CD AC 90     1 call Extrae_address
  94+ 9F50
  95+ 9F50 23               inc hl
  96+ 9F51 7E               ld a,(hl)
  97+ 9F52 A7               and a
  98+ 9F53
  99+ 9F53 28 19            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 100+ 9F55
 101+ 9F55 2B               dec hl
 102+ 9F56
 103+ 9F56 ED 73 05 8C      ld (Stack),sp
 104+ 9F5A F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 105+ 9F5B
 106+ 9F5B              Genera_scanlines_de_los_disparos_de_entidades.
 107+ 9F5B
 108+ 9F5B C1               pop bc
 109+ 9F5C E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 110+ 9F5D              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 111+ 9F5D ED 7B 15 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 112+ 9F61
 113+ 9F61 F1               pop af
 114+ 9F62 F1               pop af
 115+ 9F63 F1               pop af
 116+ 9F64
 117+ 9F64 ED 73 15 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 118+ 9F68
 119+ 9F68 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 120+ 9F69 CD C1 99         call NextScan
 121+ 9F6C E5               push hl                                                   ;? Sube 1er scanline al álbum.
 122+ 9F6D C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 123+ 9F6E
 124+ 9F6E              Situa_en_siguiente_caja
 125+ 9F6E
 126+ 9F6E 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 127+ 9F6F 3D               dec a
 128+ 9F70 28 06            jr z,2F
 129+ 9F72 08               ex af,af
 130+ 9F73
 131+ 9F73 13               inc de
 132+ 9F74 13               inc de
 133+ 9F75
 134+ 9F75 EB               ex de,hl
 135+ 9F76 18 D5            jr 1B
 136+ 9F78
 137+ 9F78 ED 7B 05 8C  2 ld sp,(Stack)
 138+ 9F7C
 139+ 9F7C C9               ret
 140+ 9F7D
 141+ 9F7D              ; --------------------------------------------------------------------------------------
 142+ 9F7D              ;
 143+ 9F7D              ;   18/09/24
 144+ 9F7D              ;
 145+ 9F7D
 146+ 9F7D              Genera_disparo_de_entidad_maldosa
 147+ 9F7D
 148+ 9F7D              ;   Estructura de un disparo de entidades.
 149+ 9F7D
 150+ 9F7D              ;   Disparo_1 defw 0								; Puntero objeto.
 151+ 9F7D              ; 	defw 0											; Puntero de impresión.
 152+ 9F7D              ;	defw 0											; Control.
 153+ 9F7D
 154+ 9F7D              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 155+ 9F7D              ;   _de la entidad en el momento de disparar.
 156+ 9F7D
 157+ 9F7D              ;   El byte alto muestra la siguiente información:
 158+ 9F7D              ;
 159+ 9F7D              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 160+ 9F7D              ;                        _antes de desplazarse a derecha/izquierda.
 161+ 9F7D              ;
 162+ 9F7D              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 163+ 9F7D              ;
 164+ 9F7D              ;                        10xx ..... Izquierda.
 165+ 9F7D              ;                        01xx ..... Derecha.
 166+ 9F7D              ;                        00xx ..... Recto.
 167+ 9F7D
 168+ 9F7D              ;*  Exclusiones.
 169+ 9F7D
 170+ 9F7D              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 171+ 9F7D              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 172+ 9F7D
 173+ 9F7D 3A 19 8C         ld a,(Numero_de_disparos_de_entidades)
 174+ 9F80 A7               and a
 175+ 9F81 C8               ret z
 176+ 9F82
 177+ 9F82 3A BA 8B         ld a,(Coordenada_y)
 178+ 9F85 A7               and a
 179+ 9F86 C8               ret z
 180+ 9F87
 181+ 9F87 3D               dec a
 182+ 9F88 C8               ret z
 183+ 9F89
 184+ 9F89 FE 0E            cp 14
 185+ 9F8B D0               ret nc
 186+ 9F8C
 187+ 9F8C              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 188+ 9F8C              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 189+ 9F8C              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 190+ 9F8C              ;
 191+ 9F8C FD 21 70 83      ld iy,Disparo_entidad
 192+ 9F90
 193+ 9F90 06 11            ld b,17
 194+ 9F92 CD C1 99     3 call NextScan
 195+ 9F95 10 FB            djnz 3B
 196+ 9F97
 197+ 9F97 4D               ld c,l
 198+ 9F98 44               ld b,h
 199+ 9F99
 200+ 9F99              ;   Decrementa el numero de disparos de entidades.
 201+ 9F99
 202+ 9F99 21 2D 8C         ld hl,Ctrl_5
 203+ 9F9C CB D6            set 2,(hl)
 204+ 9F9E
 205+ 9F9E 21 19 8C         ld hl,Numero_de_disparos_de_entidades
 206+ 9FA1 35               dec (hl)
 207+ 9FA2
 208+ 9FA2              ;   Puntero de impresión del disparo en BC , (1 scanline libre entre la entidad y el disparo).
 209+ 9FA2
 210+ 9FA2 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 211+ 9FA5 CD AC 90     1 call Extrae_address
 212+ 9FA8
 213+ 9FA8              ;   Comprobamos si la caja está vacía.
 214+ 9FA8
 215+ 9FA8 23               inc hl
 216+ 9FA9 7E               ld a,(hl)
 217+ 9FAA A7               and a
 218+ 9FAB
 219+ 9FAB 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 220+ 9FAD
 221+ 9FAD              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 222+ 9FAD
 223+ 9FAD 2B               dec hl
 224+ 9FAE
 225+ 9FAE FD 7D            ld a,iyl
 226+ 9FB0 77               ld (hl),a
 227+ 9FB1 23               inc hl
 228+ 9FB2 FD 7C            ld a,iyh
 229+ 9FB4 77               ld (hl),a
 230+ 9FB5 23               inc hl                                              ; Guarda el puntero objeto del disparo en la caja.
 231+ 9FB6
 232+ 9FB6 71               ld (hl),c
 233+ 9FB7 23               inc hl
 234+ 9FB8 70               ld (hl),b
 235+ 9FB9 23               inc hl                                              ; Guarda el puntero de impresión.
 236+ 9FBA
 237+ 9FBA 3A C3 8B         ld a,(Velocidad)                                    ; Byte bajo de Control guarda la velocidad de la entidad/disparo.
 238+ 9FBD 77               ld (hl),a
 239+ 9FBE
 240+ 9FBE 23               inc hl
 241+ 9FBF
 242+ 9FBF              ;! Ajusta el grado de inclinación del disparo.
 243+ 9FBF
 244+ 9FBF 36 07            ld (hl),7
 245+ 9FC1
 246+ 9FC1              ; Determina tendencia del disparo.
 247+ 9FC1
 248+ 9FC1 3A 6E 89         ld a,(CX_Amadeus)
 249+ 9FC4 47               ld b,a
 250+ 9FC5 3A B9 8B         ld a,(Coordenada_X)
 251+ 9FC8 90               sub b
 252+ 9FC9 38 07            jr c,Disparo_a_derecha
 253+ 9FCB
 254+ 9FCB FE 04        Disparo_a_izquierda cp 4
 255+ 9FCD
 256+ 9FCD D8               ret c
 257+ 9FCE C8               ret z
 258+ 9FCF
 259+ 9FCF CB FE            set 7,(hl)
 260+ 9FD1 C9               ret
 261+ 9FD2
 262+ 9FD2 47           Disparo_a_derecha ld b,a
 263+ 9FD3 3E FF            ld a,$ff
 264+ 9FD5 90               sub b
 265+ 9FD6
 266+ 9FD6 FE 04            cp 4
 267+ 9FD8
 268+ 9FD8 D8               ret c
 269+ 9FD9 C8               ret z
 270+ 9FDA
 271+ 9FDA CB F6            set 6,(hl)
 272+ 9FDC C9               ret
 273+ 9FDD
 274+ 9FDD              ;   --- --- ---
 275+ 9FDD
 276+ 9FDD              Situa_en_siguiente_disparo
 277+ 9FDD
 278+ 9FDD 13               inc de
 279+ 9FDE 13               inc de
 280+ 9FDF
 281+ 9FDF EB               ex de,hl
 282+ 9FE0 18 C3            jr 1B
 283+ 9FE2
 284+ 9FE2              ; --------------------------------------------------------------------------------------
 285+ 9FE2              ;
 286+ 9FE2              ;   31/08/24
 287+ 9FE2              ;
 288+ 9FE2
 289+ 9FE2              Compara_con_coordenadas_de_disparo
 290+ 9FE2
 291+ 9FE2 3A BA 8B         ld a,(Coordenada_y)
 292+ 9FE5 47               ld b,a
 293+ 9FE6 3A 33 8C         ld a,(Coordenadas_disparo_certero)
 294+ 9FE9 90               sub b
 295+ 9FEA
 296+ 9FEA              ; A = "0" ok
 297+ 9FEA              ; A = "1" ok
 298+ 9FEA
 299+ 9FEA 28 08            jr z,Comprueba_coordenada_X
 300+ 9FEC 3D               dec a
 301+ 9FED 28 05            jr z,Comprueba_coordenada_X
 302+ 9FEF
 303+ 9FEF              ; A = "$ff" ok
 304+ 9FEF
 305+ 9FEF FE FE            cp $fe
 306+ 9FF1 28 01            jr z,Comprueba_coordenada_X
 307+ 9FF3
 308+ 9FF3 C9               ret
 309+ 9FF4
 310+ 9FF4              Comprueba_coordenada_X
 311+ 9FF4
 312+ 9FF4 3A B9 8B         ld a,(Coordenada_X)
 313+ 9FF7 47               ld b,a
 314+ 9FF8 21 34 8C         ld hl,Coordenadas_disparo_certero+1
 315+ 9FFB 7E               ld a,(hl)
 316+ 9FFC 90               sub b
 317+ 9FFD
 318+ 9FFD              ; A = "0" ok
 319+ 9FFD              ; A = "1" ok
 320+ 9FFD
 321+ 9FFD 28 09            jr z,Activa_Impacto_en_entidad
 322+ 9FFF 3D               dec a
 323+ A000 28 06            jr z,Activa_Impacto_en_entidad
 324+ A002
 325+ A002              ; A = "2" ok
 326+ A002
 327+ A002 3D               dec a
 328+ A003 28 03            jr z,Activa_Impacto_en_entidad
 329+ A005
 330+ A005              ; A = "$ff"
 331+ A005
 332+ A005 FE FD            cp $fd
 333+ A007 C0               ret nz
 334+ A008
 335+ A008              Activa_Impacto_en_entidad
 336+ A008
 337+ A008              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 338+ A008
 339+ A008 3E 02            ld a,2
 340+ A00A 32 BC 8B         ld (Impacto),a
 341+ A00D
 342+ A00D              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 343+ A00D
 344+ A00D 11 C0 87         ld de,Indice_Explosion_entidades
 345+ A010 21 BF 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 346+ A013
 347+ A013 73               ld (hl),e
 348+ A014 23               inc hl
 349+ A015 72               ld (hl),d
 350+ A016
 351+ A016              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 352+ A016
 353+ A016 21 30 8C         ld hl,Impacto2
 354+ A019 CB 9E            res 3,(hl)
 355+ A01B
 356+ A01B C9               ret
 357+ A01C
 358+ A01C              ; --------------------------------------------------------------------------------------
 359+ A01C              ;
 360+ A01C              ;   11/09/24
 361+ A01C              ;
 362+ A01C
 363+ A01C              Limpia_album_de_borrado_disparos
 364+ A01C
 365+ A01C 21 2D 8C         ld hl,Ctrl_5
 366+ A01F CB 46            bit 0,(hl)
 367+ A021 C8               ret z
 368+ A022 CB 86            res 0,(hl)
 369+ A024
 370+ A024              Limpiando
 371+ A024
 372+ A024 AF               xor a
 373+ A025 2A 13 8C         ld hl,(Album_de_borrado_disparos)
 374+ A028 77               ld (hl),a
 375+ A029 5D               ld e,l
 376+ A02A 54               ld d,h
 377+ A02B 1C               inc e                                           ; DE = HL+1
 378+ A02C 01 3A 00         ld bc,$003a
 379+ A02F ED B0            ldir
 380+ A031
 381+ A031 C9               ret
 382+ A032
 383+ A032
 384+ A032              ; --------------------------------------------------------------------------------------
 385+ A032              ;
 386+ A032              ;   26/08/24
 387+ A032              ;
 388+ A032
 389+ A032              Calcula_bytes_pintado_disparos
 390+ A032
 391+ A032 2A 11 8C         ld hl,(Album_de_pintado_disparos)
 392+ A035 45               ld b,l
 393+ A036 2A 15 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 394+ A039 7D               ld a,l
 395+ A03A
 396+ A03A 90               sub b
 397+ A03B 32 17 8C         ld (Num_de_bytes_album_de_disparos),a
 398+ A03E
 399+ A03E C9               ret
 400+ A03F
 401+ A03F              ; --------------------------------------------------------------------------------------
 402+ A03F              ;
 403+ A03F              ;   11/09/24
 404+ A03F              ;
 405+ A03F              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 406+ A03F              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 407+ A03F              ;   _disparos que el álbum del FRAME actual).
 408+ A03F
 409+ A03F              Limpia_album_de_pintado_disparos
 410+ A03F
 411+ A03F              ;*   Exclusiones.
 412+ A03F
 413+ A03F 3A 18 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 414+ A042 A7               and a
 415+ A043 C8               ret z
 416+ A044
 417+ A044              ; -----
 418+ A044
 419+ A044 3A 17 8C         ld a,(Num_de_bytes_album_de_disparos)
 420+ A047 47               ld b,a
 421+ A048 3A 18 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 422+ A04B
 423+ A04B 90               sub b
 424+ A04C
 425+ A04C C8               ret z
 426+ A04D D8               ret c
 427+ A04E
 428+ A04E 2A 15 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 429+ A051 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 430+ A052 AF               xor a                                                               ; "0".
 431+ A053
 432+ A053 77           1 ld (hl),a
 433+ A054 2C               inc l
 434+ A055 10 FC            djnz 1B
 435+ A057
 436+ A057 C9               ret
 437+ A058
 438+ A058              ; --------------------------------------------------------------------------------------
 439+ A058              ;
 440+ A058              ;   27/08/24
 441+ A058              ;
 442+ A058
 443+ A058              Motor_Disparos_Amadeus
 444+ A058
 445+ A058              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 446+ A058
 447+ A058 21 20 89         ld hl,Disparo_Amad+1
 448+ A05B
 449+ A05B 34               inc (hl)
 450+ A05C 35               dec (hl)
 451+ A05D
 452+ A05D C8               ret z
 453+ A05E
 454+ A05E              ;   Esta caja contiene un disparo.
 455+ A05E
 456+ A05E CD 65 A0         call Consulta_Impacto
 457+ A061 CC 7E A0         call z,Mueve_disparo_Amadeus
 458+ A064
 459+ A064 C9               ret
 460+ A065
 461+ A065              ; ----------------------
 462+ A065              ;
 463+ A065              ;
 464+ A065              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 465+ A065              ;
 466+ A065              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 467+ A065
 468+ A065
 469+ A065              Consulta_Impacto
 470+ A065
 471+ A065              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 472+ A065              ;   _sea lo más coherente posible.
 473+ A065
 474+ A065 E5               push hl
 475+ A066 2B               dec hl
 476+ A067 CD 5F A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 477+ A06A E1               pop hl
 478+ A06B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 479+ A06C
 480+ A06C C8               ret z
 481+ A06D
 482+ A06D 3A 30 8C         ld a,(Impacto2)
 483+ A070 CB DF            set 3,a
 484+ A072 32 30 8C         ld (Impacto2),a
 485+ A075
 486+ A075 E5               push hl
 487+ A076 CD 4C A1         call Genera_coordenadas_de_disparo_Amadeus
 488+ A079 E1               pop hl
 489+ A07A CD 97 A0         call Elimina_disparo
 490+ A07D
 491+ A07D C9               ret
 492+ A07E
 493+ A07E              ; ----------------------
 494+ A07E              ;
 495+ A07E              ;
 496+ A07E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 497+ A07E
 498+ A07E              Mueve_disparo_Amadeus
 499+ A07E
 500+ A07E CD AC 90         call Extrae_address
 501+ A081
 502+ A081 CD D0 99         call PreviousScan
 503+ A084 CD D0 99         call PreviousScan
 504+ A087 CD D0 99         call PreviousScan
 505+ A08A CD D0 99         call PreviousScan
 506+ A08D
 507+ A08D              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 508+ A08D
 509+ A08D 7C               ld a,h
 510+ A08E D6 40            sub $40
 511+ A090 EB               ex de,hl
 512+ A091 38 04            jr c,Elimina_disparo
 513+ A093
 514+ A093               ; Introduce nuevo puntero_de_impresión en la caja.
 515+ A093
 516+ A093 73               ld (hl),e
 517+ A094 23               inc hl
 518+ A095 72               ld (hl),d
 519+ A096
 520+ A096 C9               ret
 521+ A097
 522+ A097              ; ----------------------
 523+ A097              ;
 524+ A097              ;   11/9/24
 525+ A097
 526+ A097              Elimina_disparo
 527+ A097
 528+ A097              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 529+ A097              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 530+ A097
 531+ A097              ;   Disparo_1A defw 0									; Puntero objeto.
 532+ A097              ;   	defw 0											; Puntero de impresión.
 533+ A097
 534+ A097 2B               dec hl
 535+ A098 2B               dec hl
 536+ A099
 537+ A099 AF               xor a
 538+ A09A 77               ld (hl),a
 539+ A09B 23               inc hl
 540+ A09C 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 541+ A09D
 542+ A09D 23               inc hl
 543+ A09E 77               ld (hl),a
 544+ A09F 23               inc hl
 545+ A0A0 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 546+ A0A1
 547+ A0A1 3E 01            ld a,1
 548+ A0A3 32 1A 8C         ld (Permiso_de_disparo_Amadeus),a
 549+ A0A6
 550+ A0A6 21 2D 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 551+ A0A9 CB C6            set 0,(hl)
 552+ A0AB
 553+ A0AB AF               xor a
 554+ A0AC 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 555+ A0AD
 556+ A0AD C9               ret
 557+ A0AE
 558+ A0AE              ; --------------------------------------------------------------------------------------
 559+ A0AE              ;
 560+ A0AE              ;   21/8/24
 561+ A0AE              ;
 562+ A0AE
 563+ A0AE              Pinta_disparos
 564+ A0AE
 565+ A0AE ED 73 05 8C      ld (Stack),sp
 566+ A0B2 06 02            ld b,2
 567+ A0B4
 568+ A0B4 ED 7B 13 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 569+ A0B8
 570+ A0B8 D1           2 pop de
 571+ A0B9
 572+ A0B9 14               inc d
 573+ A0BA 15               dec d
 574+ A0BB
 575+ A0BB 28 1B            jr z,1F
 576+ A0BD
 577+ A0BD              Imprime_scanlines_de_disparo
 578+ A0BD
 579+ A0BD E1               pop hl
 580+ A0BE
 581+ A0BE              ; Puntero objeto en DE.
 582+ A0BE              ; Puntero_de_impresión en HL.
 583+ A0BE
 584+ A0BE              ; 1er scanline.
 585+ A0BE
 586+ A0BE 1A               ld a,(de)
 587+ A0BF AE               xor (hl)
 588+ A0C0 77               ld (hl),a
 589+ A0C1
 590+ A0C1 13               inc de
 591+ A0C2 2C               inc l
 592+ A0C3
 593+ A0C3 1A               ld a,(de)
 594+ A0C4 AE               xor (hl)
 595+ A0C5 77               ld (hl),a
 596+ A0C6
 597+ A0C6              ; 2º scanline.
 598+ A0C6
 599+ A0C6 E1               pop hl
 600+ A0C7 1B               dec de
 601+ A0C8
 602+ A0C8 1A               ld a,(de)
 603+ A0C9 AE               xor (hl)
 604+ A0CA 77               ld (hl),a
 605+ A0CB
 606+ A0CB 13               inc de
 607+ A0CC 2C               inc l
 608+ A0CD
 609+ A0CD 1A               ld a,(de)
 610+ A0CE AE               xor (hl)
 611+ A0CF 77               ld (hl),a
 612+ A0D0
 613+ A0D0              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 614+ A0D0
 615+ A0D0 18 E6            jr 2B
 616+ A0D2
 617+ A0D2 ED 7B 11 8C  3 ld sp,(Album_de_pintado_disparos)
 618+ A0D6 18 E0            jr 2B
 619+ A0D8
 620+ A0D8 10 F8        1 djnz 3B
 621+ A0DA ED 7B 05 8C      ld sp,(Stack)
 622+ A0DE C9               ret
 623+ A0DF
 624+ A0DF              ; --------------------------------------------------------------------------------------
 625+ A0DF              ;
 626+ A0DF              ;   14/09/24
 627+ A0DF              ;
 628+ A0DF              ;   Modifica: HL y DE.
 629+ A0DF
 630+ A0DF
 631+ A0DF              Genera_datos_de_impresion_disparos_Amadeus
 632+ A0DF
 633+ A0DF ED 73 05 8C      ld (Stack),sp
 634+ A0E3 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 635+ A0E6 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 636+ A0E7
 637+ A0E7 14               inc d                                                     ;? Salimos si no hay disparo.
 638+ A0E8 15               dec d
 639+ A0E9
 640+ A0E9 28 12            jr z,Salida
 641+ A0EB
 642+ A0EB              Genera_scanlines_de_disparo_Amadeus
 643+ A0EB
 644+ A0EB E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 645+ A0EC              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 646+ A0EC ED 7B 15 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 647+ A0F0
 648+ A0F0 C1               pop bc
 649+ A0F1 C1               pop bc
 650+ A0F2 C1               pop bc
 651+ A0F3
 652+ A0F3 ED 73 15 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 653+ A0F7
 654+ A0F7 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 655+ A0F8 CD D0 99         call PreviousScan
 656+ A0FB E5               push hl                                                   ;? Sube 1er scanline al álbum.
 657+ A0FC D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 658+ A0FD
 659+ A0FD              Salida
 660+ A0FD
 661+ A0FD ED 7B 05 8C      ld sp,(Stack)
 662+ A101 C9               ret
 663+ A102
 664+ A102              ; --------------------------------------------------------------------------------------
 665+ A102              ;
 666+ A102              ;   12/09/24
 667+ A102              ;
 668+ A102
 669+ A102              Genera_disparo_Amadeus
 670+ A102
 671+ A102              ;*  Exclusiones.
 672+ A102
 673+ A102 3A 1A 8C         ld a,(Permiso_de_disparo_Amadeus)
 674+ A105 A7               and a
 675+ A106 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 676+ A107
 677+ A107 3D               dec a
 678+ A108 32 1A 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 679+ A10B
 680+ A10B              Define_puntero_objeto_disparo
 681+ A10B
 682+ A10B              ;   Inicializamos contador.
 683+ A10B
 684+ A10B 06 00            ld b,0
 685+ A10D
 686+ A10D 2A 72 89         ld hl,(p.imp.amadeus)
 687+ A110 2C               inc l
 688+ A111
 689+ A111 3E 80            ld a,$80
 690+ A113 BE               cp (hl)
 691+ A114 28 0D            jr z,1F
 692+ A116
 693+ A116 04               inc b
 694+ A117
 695+ A117 3E 60            ld a,$60
 696+ A119 BE               cp (hl)
 697+ A11A 28 07            jr z,1F
 698+ A11C
 699+ A11C
 700+ A11C 04               inc b
 701+ A11D
 702+ A11D 3E 18            ld a,$18
 703+ A11F BE               cp (hl)
 704+ A120 28 01            jr z,1F
 705+ A122
 706+ A122 04               inc b
 707+ A123
 708+ A123              ;   Calcula el Puntero_de_impresión del disparo.
 709+ A123
 710+ A123              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 711+ A123
 712+ A123 CD D0 99     1 call PreviousScan
 713+ A126
 714+ A126 78               ld a,b
 715+ A127 CB 3F            srl a
 716+ A129 28 03            jr z,4F
 717+ A12B
 718+ A12B              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 719+ A12B E5               push hl
 720+ A12C 18 02            jr 5F
 721+ A12E 2D           4 dec l
 722+ A12F E5               push hl
 723+ A130              ; ---
 724+ A130
 725+ A130              ;   Calcula el Puntero_objeto del disparo.
 726+ A130
 727+ A130 21 72 83     5 ld hl,Indice_disparo_Amadeus
 728+ A133 04               inc b
 729+ A134 05               dec b
 730+ A135 28 04            jr z,2F
 731+ A137
 732+ A137              ;   Nos desplazamos por el índice de disparos.
 733+ A137
 734+ A137 2C           3 inc l
 735+ A138 2C               inc l
 736+ A139 10 FC            djnz 3B
 737+ A13B
 738+ A13B              ; --- Guarda el Puntero_objeto del disparo en la pila.
 739+ A13B CD AC 90     2 call Extrae_address
 740+ A13E E5               push hl
 741+ A13F              ; ---
 742+ A13F
 743+ A13F              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 744+ A13F              ; HL en el 1er .db de la caja.
 745+ A13F
 746+ A13F 21 1F 89         ld hl,Disparo_Amad
 747+ A142
 748+ A142 06 02            ld b,2
 749+ A144
 750+ A144 D1           6 pop de
 751+ A145 73               ld (hl),e
 752+ A146 23               inc hl
 753+ A147 72               ld (hl),d
 754+ A148 23               inc hl
 755+ A149
 756+ A149 10 F9            djnz 6B
 757+ A14B
 758+ A14B C9               ret
 759+ A14C
 760+ A14C              Genera_coordenadas_de_disparo_Amadeus
 761+ A14C
 762+ A14C              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 763+ A14C              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 764+ A14C              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 765+ A14C
 766+ A14C CD AC 90         call Extrae_address
 767+ A14F CD CB 94         call Genera_coordenadas
 768+ A152
 769+ A152 3D               dec a
 770+ A153
 771+ A153 21 33 8C         ld hl,Coordenadas_disparo_certero
 772+ A156 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 773+ A157 23               inc hl
 774+ A158 3A B9 8B         ld a,(Coordenada_X)
 775+ A15B 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 776+ A15C
 777+ A15C AF               xor a
 778+ A15D 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 779+ A15E
 780+ A15E C9               ret
 781+ A15F
 782+ A15F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 783+ A15F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 784+ A15F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 785+ A15F
 786+ A15F              ; ----------------------------------------------
 787+ A15F              ;
 788+ A15F              ;   27/08/24
 789+ A15F              ;
 790+ A15F              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 791+ A15F              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 792+ A15F
 793+ A15F              Detecta_impacto_en_disparo_de_Amadeus
 794+ A15F
 795+ A15F              Extraccion_de_datos
 796+ A15F
 797+ A15F 13               inc de
 798+ A160 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 799+ A161
 800+ A161 5E               ld e,(hl)
 801+ A162 23               inc hl
 802+ A163 56               ld d,(hl)
 803+ A164
 804+ A164 23               inc hl
 805+ A165
 806+ A165 4E               ld c,(hl)
 807+ A166 23               inc hl
 808+ A167 46               ld b,(hl)
 809+ A168
 810+ A168 C5               push bc
 811+ A169 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 812+ A16A
 813+ A16A              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 814+ A16A
 815+ A16A CD D0 99         call PreviousScan
 816+ A16D CD D0 99         call PreviousScan
 817+ A170
 818+ A170              Detecta_impacto_
 819+ A170
 820+ A170 1A               ld a,(de)
 821+ A171 A6               and (hl)
 822+ A172 C0               ret nz
 823+ A173
 824+ A173 13               inc de
 825+ A174 23               inc hl
 826+ A175
 827+ A175 1A               ld a,(de)
 828+ A176 A6               and (hl)
 829+ A177 C9               ret
 830+ A178
 831+ A178              ; -------------------------------------------------------------------------------------------------------------
 832+ A178              ;
 833+ A178              ;   8/8/24
 834+ A178              ;
 835+ A178              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 836+ A178              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 837+ A178              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 838+ A178              ;
 839+ A178              ;   MODIFICA: HL,DE,BC y A.
 840+ A178              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 841+ A178              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 842+ A178
 843+ A178              Colision_Entidad_Amadeus
 844+ A178
 845+ A178              ; Posible contacto de entidad con Amadeus. ?????
 846+ A178
 847+ A178              ; Exclusiones:
 848+ A178
 849+ A178 3A 53 8C         ld a,(Shield)
 850+ A17B A7               and a
 851+ A17C C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 852+ A17D
 853+ A17D 21 2B 8C         ld hl,Ctrl_3
 854+ A180 CB 76            bit 6,(hl)
 855+ A182 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 856+ A183
 857+ A183 21 30 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 858+ A186 CB 56            bit 2,(hl)
 859+ A188 C0               ret nz
 860+ A189
 861+ A189 3A BA 8B     	ld a,(Coordenada_y)
 862+ A18C FE 14        	cp $14
 863+ A18E D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 864+ A18F
 865+ A18F 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 866+ A192 A7               and a
 867+ A193 C0               ret nz
 868+ A194
 869+ A194              Genera_coordenadas_X
 870+ A194
 871+ A194              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 872+ A194              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 873+ A194
 874+ A194              ;   Limpiamos almacenes.
 875+ A194
 876+ A194              ;    call Limpia_Coordenadas_X
 877+ A194
 878+ A194              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 879+ A194
 880+ A194 21 35 8C         ld hl,Coordenadas_X_Entidad
 881+ A197 3A B9 8B         ld a,(Coordenada_X)
 882+ A19A CD BC A1         call Guarda_coordenadas_X
 883+ A19D
 884+ A19D              ;   Almacenamos las coordenadas X de Amadeus.
 885+ A19D
 886+ A19D 3A 6E 89         ld a,(CX_Amadeus)
 887+ A1A0 CD BC A1         call Guarda_coordenadas_X
 888+ A1A3 CD D0 A1         call Compara_coordenadas_X
 889+ A1A6 C0               ret nz
 890+ A1A7
 891+ A1A7 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 892+ A1A9 32 BC 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 893+ A1AC
 894+ A1AC 2A F8 8B         ld hl,(Puntero_store_caja)
 895+ A1AF 2C               inc l
 896+ A1B0 2C               inc l
 897+ A1B1 2C               inc l
 898+ A1B2 2C               inc l
 899+ A1B3 22 31 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 900+ A1B6
 901+ A1B6 21 30 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 902+ A1B9 CB D6            set 2,(hl)
 903+ A1BB
 904+ A1BB C9               ret
 905+ A1BC
 906+ A1BC               ; ----- ----- ----- ----- -----
 907+ A1BC
 908+ A1BC 77           Guarda_coordenadas_X ld (hl),a
 909+ A1BD 3C               inc a
 910+ A1BE 2C               inc l
 911+ A1BF 77               ld (hl),a
 912+ A1C0 3C               inc a
 913+ A1C1 2C               inc l
 914+ A1C2 77               ld (hl),a
 915+ A1C3 2C               inc l
 916+ A1C4 C9               ret
 917+ A1C5
 918+ A1C5 AF           Limpia_Coordenadas_X xor a
 919+ A1C6 06 06            ld b,6
 920+ A1C8 21 38 8C         ld hl,Coordenadas_X_Amadeus
 921+ A1CB 77           1 ld (hl),a
 922+ A1CC 23               inc hl
 923+ A1CD 10 FC            djnz 1B
 924+ A1CF C9               ret
 925+ A1D0
 926+ A1D0              ; ----- ----- ----- ----- -----
 927+ A1D0
 928+ A1D0              Compara_coordenadas_X
 929+ A1D0
 930+ A1D0 DD 21 35 8C      ld ix,Coordenadas_X_Entidad
 931+ A1D4 DD 7E 00         ld a,(ix+0)
 932+ A1D7 CD E5 A1         call Comparando
 933+ A1DA C8               ret z
 934+ A1DB
 935+ A1DB 3C               inc a
 936+ A1DC CD F4 A1         call Comparando_1
 937+ A1DF C8               ret z
 938+ A1E0
 939+ A1E0 3C               inc a
 940+ A1E1 CD F4 A1         call Comparando_1
 941+ A1E4 C9               ret
 942+ A1E5
 943+ A1E5              ; ----- ----- ----- ----- -----
 944+ A1E5              ;
 945+ A1E5              ;   4/12/23
 946+ A1E5              ;
 947+ A1E5              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 948+ A1E5
 949+ A1E5              Comparando
 950+ A1E5
 951+ A1E5 DD 2C            inc ixl
 952+ A1E7 DD 2C            inc ixl
 953+ A1E9 DD 2C            inc ixl
 954+ A1EB
 955+ A1EB DD 46 00         ld b,(ix+0)
 956+ A1EE DD 4E 01         ld c,(ix+1)
 957+ A1F1 DD 56 02         ld d,(ix+2)
 958+ A1F4
 959+ A1F4 B8           Comparando_1 cp b
 960+ A1F5 C8               ret z
 961+ A1F6 B9               cp c
 962+ A1F7 C8               ret z
 963+ A1F8 BA               cp d
 964+ A1F9 C9               ret
 965+ A1FA
 966+ A1FA              ; -----------------------------------------------------------------------
 967+ A1FA              ;
 968+ A1FA              ;   04/7/24
 969+ A1FA              ;
 970+ A1FA
 971+ A1FA              Detecta_colision_nave_entidad
 972+ A1FA
 973+ A1FA              ; Exclusiones:
 974+ A1FA
 975+ A1FA              ; Salimos de la rutina si no hay advertencia de posible colisión.
 976+ A1FA
 977+ A1FA 21 30 8C     	ld hl,Impacto2
 978+ A1FD CB 56        	bit 2,(hl)
 979+ A1FF C8           	ret z
 980+ A200
 981+ A200              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 982+ A200
 983+ A200 2A 74 89         ld hl,(Pamm_Amadeus)
 984+ A203 CD AC 90         call Extrae_address
 985+ A206 54               ld d,h
 986+ A207 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 987+ A208
 988+ A208 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 989+ A20B 06 10            ld b,16                                        ; Contador de scanlines en B.
 990+ A20D FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 991+ A210
 992+ A210 C5           1 push bc
 993+ A211 06 03            ld b,3
 994+ A213 E5               push hl
 995+ A214
 996+ A214              ; .db
 997+ A214
 998+ A214 1A           3 ld a,(de)
 999+ A215 A7               and a
1000+ A216 20 03            jr nz,4F
1001+ A218
1002+ A218 2C               inc l
1003+ A219 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1004+ A21B
1005+ A21B ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1006+ A21D 28 04            jr z,2F
1007+ A21F
1008+ A21F              ; Impacto.
1009+ A21F FD 2D            dec iyl
1010+ A221 28 22            jr z,5F
1011+ A223
1012+ A223 1C           2 inc e
1013+ A224 10 EE            djnz 3B
1014+ A226
1015+ A226 E1               pop hl
1016+ A227
1017+ A227              ; Hay salto de línea en el puntero de impresión ???
1018+ A227
1019+ A227 7C               ld a,h
1020+ A228 D6 57            sub $57
1021+ A22A 20 0A            jr nz,6F
1022+ A22C
1023+ A22C              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1024+ A22C
1025+ A22C 2A 72 89         ld hl,(p.imp.amadeus)
1026+ A22F 3E 20            ld a,$20
1027+ A231 A7               and a
1028+ A232 85               add l
1029+ A233 6F               ld l,a
1030+ A234 18 01            jr 7F
1031+ A236
1032+ A236 24           6 inc h
1033+ A237
1034+ A237 C1           7 pop bc
1035+ A238 10 D6            djnz 1B
1036+ A23A
1037+ A23A              ;   Fin de la comparativa.
1038+ A23A
1039+ A23A              ;   NO HAY COLISIÓN !!!!!.
1040+ A23A              ;
1041+ A23A              ;   .db (Impacto) de Amadeus a "0".
1042+ A23A              ;   RES el bit2 de (Impacto2).
1043+ A23A              ;
1044+ A23A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1045+ A23A              ;   Lo colocamos a "0".
1046+ A23A
1047+ A23A 21 30 8C         ld hl,Impacto2
1048+ A23D CB 96            res 2,(hl)
1049+ A23F 2A 31 8C         ld hl,(Entidad_sospechosa_de_colision)
1050+ A242 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1051+ A244 C9               ret
1052+ A245
1053+ A245              ;   COLISIÓN !!!!!.
1054+ A245              ;
1055+ A245              ;   .db (Impacto) de Amadeus a "1".
1056+ A245              ;   SET el bit3 de (Impacto2).
1057+ A245              ;
1058+ A245              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1059+ A245
1060+ A245 E1           5 pop hl
1061+ A246 C1               pop bc
1062+ A247
1063+ A247 21 71 89         ld hl,Impacto_Amadeus
1064+ A24A 36 01            ld (hl),1
1065+ A24C 21 30 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1066+ A24F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1067+ A251
1068+ A251 11 C0 87         ld de,Indice_Explosion_entidades
1069+ A254 2A 31 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1070+ A257
1071+ A257 23               inc hl
1072+ A258 23               inc hl
1073+ A259 23               inc hl
1074+ A25A
1075+ A25A 73               ld (hl),e
1076+ A25B 23               inc hl
1077+ A25C 72               ld (hl),d
1078+ A25D
1079+ A25D              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1080+ A25D
1081+ A25D 11 60 88         ld de,Indice_Explosion_Amadeus
1082+ A260 21 74 89         ld hl,Pamm_Amadeus
1083+ A263
1084+ A263 73               ld (hl),e
1085+ A264 23               inc hl
1086+ A265 72               ld (hl),d
1087+ A266
1088+ A266 C9               ret
1089+ A267
1090+ A267
1091+ A267
# file closed: Disparo.asm
2177  A267
2178  A267              	SAVESNA "Pruebas.sna", START
2179  A267
2180  A267
2181  A267
2182  A267
# file closed: Banco_de_pruebas.asm
