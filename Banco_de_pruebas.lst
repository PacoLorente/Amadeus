# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 53 88     	call Frame
  15  A104
  16  A104 3A 86 87     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 8484
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 848F
 128+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8490
 130+ 8490 00 00        	db 0,0											; Variables_de_borrado
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00        	defw 0											;	" " " " " " "
 133+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 849A
 135+ 849A 00 00        	db 0,0											; Variables_de_pintado
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00        	defw 0											;	" " " " " " "
 138+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 139+ 84A4
 140+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 141+ 84A7
 142+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 143+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 144+ 84AE
 145+ 84AE 00           	db 0 											; (Columnas).
 146+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 147+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 148+ 84B3
 149+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 150+ 84B3
 151+ 84B3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 152+ 84B5 00 00        	defw 0											; (Posicion_actual).
 153+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 154+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 155+ 84BC
 156+ 84BC 00           	db %00000000 									; (Attr).
 157+ 84BD
 158+ 84BD 00 00        	defw 0											; (Indice_Sprite_der).
 159+ 84BF 00 00        	defw 0											; (Indice_Sprite_izq).
 160+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 161+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 162+ 84C5
 163+ 84C5 00 00        	defw 0											; (Posicion_inicio).
 164+ 84C7 00           	db 0											; (Cuad_objeto).
 165+ 84C8
 166+ 84C8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 167+ 84CC
 168+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 169+ 84CD
 170+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 171+ 84CF 00 00        	defw 0											;	" " " " " " "
 172+ 84D1 00 00        	defw 0											;	" " " " " " "
 173+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 174+ 84D7
 175+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 176+ 84D9 00 00        	defw 0											;	" " " " " " "
 177+ 84DB 00 00        	defw 0											;	" " " " " " "
 178+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 84E1
 180+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 181+ 84E4
 182+ 84E4 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 183+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 184+ 84EB
 185+ 84EB 00           	db 0 											; (Columnas).
 186+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 187+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 188+ 84F0
 189+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 190+ 84F0
 191+ 84F0 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 84F2 00 00        	defw 0											; (Posicion_actual).
 193+ 84F4 00 00        	defw 0 											; (Puntero_objeto).
 194+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 84F9
 196+ 84F9 00           	db %00000000 									; (Attr).
 197+ 84FA
 198+ 84FA 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 84FC 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 8502
 203+ 8502 00 00        	defw 0											; (Posicion_inicio).
 204+ 8504 00           	db 0											; (Cuad_objeto).
 205+ 8505
 206+ 8505 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8509
 208+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 850A
 210+ 850A 00 00        	db 0,0										    ; Variables_de_borrado
 211+ 850C 00 00        	defw 0											;	" " " " " " "
 212+ 850E 00 00        	defw 0											;	" " " " " " "
 213+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 214+ 8514
 215+ 8514 00 00        	db 0,0											; Variables_de_pintado
 216+ 8516 00 00        	defw 0											;	" " " " " " "
 217+ 8518 00 00        	defw 0											;	" " " " " " "
 218+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 219+ 851E
 220+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 221+ 8521
 222+ 8521 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 223+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8528
 225+ 8528 00           	db 0 											; (Columnas).
 226+ 8529 00 00        	defw 0											; (Limite_horizontal).
 227+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 228+ 852D
 229+ 852D              ; ---------- ---------- ---------- ---------- ----------
 230+ 852D
 231+ 852D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 232+ 852F 00 00        	defw 0											; (Posicion_actual).
 233+ 8531 00 00        	defw 0 											; (Puntero_objeto).
 234+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 8536
 236+ 8536 00           	db %00000000 									; (Attr).
 237+ 8537
 238+ 8537 00 00        	defw 0											; (Indice_Sprite_der).
 239+ 8539 00 00        	defw 0											; (Indice_Sprite_izq).
 240+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 241+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 242+ 853F
 243+ 853F 00 00        	defw 0											; (Posicion_inicio).
 244+ 8541 00           	db 0											; (Cuad_objeto).
 245+ 8542
 246+ 8542 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 247+ 8546
 248+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 249+ 8547
 250+ 8547 00 00        	db 0,0										    ; Variables_de_borrado
 251+ 8549 00 00        	defw 0											;	" " " " " " "
 252+ 854B 00 00        	defw 0											;	" " " " " " "
 253+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 254+ 8551
 255+ 8551 00 00        	db 0,0											; Variables_de_pintado
 256+ 8553 00 00        	defw 0											;	" " " " " " "
 257+ 8555 00 00        	defw 0											;	" " " " " " "
 258+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 855B
 260+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 261+ 855E
 262+ 855E 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 263+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 264+ 8565
 265+ 8565 00           	db 0 											; (Columnas).
 266+ 8566 00 00        	defw 0											; (Limite_horizontal).
 267+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 268+ 856A
 269+ 856A              ; ---------- ---------- ---------- ---------- ----------
 270+ 856A
 271+ 856A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 272+ 856C 00 00        	defw 0											; (Posicion_actual).
 273+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 274+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 275+ 8573
 276+ 8573 00           	db %00000000 									; (Attr).
 277+ 8574
 278+ 8574 00 00        	defw 0											; (Indice_Sprite_der).
 279+ 8576 00 00        	defw 0											; (Indice_Sprite_izq).
 280+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 281+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 282+ 857C
 283+ 857C 00 00        	defw 0											; (Posicion_inicio).
 284+ 857E 00           	db 0											; (Cuad_objeto).
 285+ 857F
 286+ 857F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 287+ 8583
 288+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 289+ 8584
 290+ 8584 00 00        	db 0,0										    ; Variables_de_borrado
 291+ 8586 00 00        	defw 0											;	" " " " " " "
 292+ 8588 00 00        	defw 0											;	" " " " " " "
 293+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 294+ 858E
 295+ 858E 00 00        	db 0,0											; Variables_de_pintado
 296+ 8590 00 00        	defw 0											;	" " " " " " "
 297+ 8592 00 00        	defw 0											;	" " " " " " "
 298+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 299+ 8598
 300+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 301+ 859B
 302+ 859B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 303+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 304+ 85A2
 305+ 85A2 00           	db 0 											; (Columnas).
 306+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 307+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 308+ 85A7
 309+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 310+ 85A7
 311+ 85A7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 312+ 85A9 00 00        	defw 0											; (Posicion_actual).
 313+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 314+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 315+ 85B0
 316+ 85B0 00           	db %00000000 									; (Attr).
 317+ 85B1
 318+ 85B1 00 00        	defw 0											; (Indice_Sprite_der).
 319+ 85B3 00 00        	defw 0											; (Indice_Sprite_izq).
 320+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 321+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 322+ 85B9
 323+ 85B9 00 00        	defw 0											; (Posicion_inicio).
 324+ 85BB 00           	db 0											; (Cuad_objeto).
 325+ 85BC
 326+ 85BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 327+ 85C0
 328+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 329+ 85C1
 330+ 85C1 00 00        	db 0,0										    ; Variables_de_borrado
 331+ 85C3 00 00        	defw 0											;	" " " " " " "
 332+ 85C5 00 00        	defw 0											;	" " " " " " "
 333+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 334+ 85CB
 335+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 336+ 85CD 00 00        	defw 0											;	" " " " " " "
 337+ 85CF 00 00        	defw 0											;	" " " " " " "
 338+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85D5
 340+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 341+ 85D8
 342+ 85D8 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 343+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 344+ 85DF
 345+ 85DF 00           	db 0 											; (Columnas).
 346+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 347+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 348+ 85E4
 349+ 85E4              	; -------------------------------------------------------------------------------------
 350+ 85E4              ;
 351+ 85E4              ;	20/05/23
 352+ 85E4              ;
 353+ 85E4              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 354+ 85E4              ;
 355+ 85E4              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 356+ 85E4              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 357+ 85E4              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 358+ 85E4              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 359+ 85E4
 360+ 85E4              Indice_de_entidades
 361+ 85E4
 362+ 85E4 EE 85        	defw Entidad_1
 363+ 85E6 FE 85        	defw Entidad_2
 364+ 85E8 0E 86        	defw Entidad_3
 365+ 85EA 1E 86        	defw Entidad_4
 366+ 85EC 2E 86        	defw Entidad_5
 367+ 85EE
 368+ 85EE              ;	BADSAT, (Satélite malvado).
 369+ 85EE
 370+ 85EE 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 371+ 85F0 04           	db %00000100									; (Attr).
 372+ 85F1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 373+ 85F3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 374+ 85F5 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 375+ 85F7 01           	db 1											; (Cuad_objeto).
 376+ 85F8 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 377+ 85FC 76 99        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 378+ 85FE
 379+ 85FE 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 380+ 8600 02           	db %00000010									; (Attr).
 381+ 8601 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 382+ 8603 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 383+ 8605 5F 48        	defw $485f                                      ; (Posicion_inicio).
 384+ 8607 01           	db 1											; (Cuad_objeto).
 385+ 8608 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 386+ 860C 76 99        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 387+ 860E
 388+ 860E 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 389+ 8610 04           	db %00000100									; (Attr).
 390+ 8611 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 391+ 8613 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 392+ 8615 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 393+ 8617 01           	db 1											; (Cuad_objeto).
 394+ 8618 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 395+ 861C 6A 99        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 396+ 861E
 397+ 861E 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 398+ 8620 01           	db %00000001									; (Attr).
 399+ 8621 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 400+ 8623 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 401+ 8625 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 402+ 8627 01           	db 1											; (Cuad_objeto).
 403+ 8628 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 404+ 862C 76 99        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 405+ 862E
 406+ 862E 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 407+ 8630 01           	db %00000001									; (Attr).
 408+ 8631 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 409+ 8633 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 410+ 8635 0A 40        	defw $400a                                      ; (Posicion_inicio).
 411+ 8637 01           	db 1											; (Cuad_objeto).
 412+ 8638 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 413+ 863C 6C 99        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  863E              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 863E              ; 13/05/23
   2+ 863E
   3+ 863E              Indice_de_niveles
   4+ 863E
   5+ 863E 4C 86        	defw Nivel_1
   6+ 8640 56 86        	defw Nivel_2
   7+ 8642 63 86        	defw Nivel_3
   8+ 8644 73 86        	defw Nivel_4
   9+ 8646 85 86        	defw Nivel_5
  10+ 8648
  11+ 8648              ;	...
  12+ 8648              ;	...
  13+ 8648              ;	+ Niveles ...
  14+ 8648
  15+ 8648 00 00        	defw 0
  16+ 864A 00 00        	defw 0
  17+ 864C
  18+ 864C 09           Nivel_1 db 9                                    ; Nº de entidades.
  19+ 864D 01 02 03 04  	db 1,2,3,4,5,1,2,3,4 						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 8651 05 01 02 03
  19+ 8655 04
  20+ 8656 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 8657 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 865B 01 02
  22+ 865D 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8661 01 02
  23+ 8663 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 8664 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 8668 01
  25+ 8669 03 01 01 01  	db 3,1,1,1,1
  25+ 866D 01
  26+ 866E 03 01 01 01  	db 3,1,1,1,1
  26+ 8672 01
  27+ 8673 11           Nivel_4 db 17									; Nº de entidades.
  28+ 8674 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 8678 01
  29+ 8679 04 01 01 01  	db 4,1,1,1,1
  29+ 867D 01
  30+ 867E 04 01 01 01  	db 4,1,1,1,1
  30+ 8682 01
  31+ 8683 02 03        	db 2,3
  32+ 8685 14           Nivel_5 db 20									; Nº de entidades.
  33+ 8686 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 868A 01
  34+ 868B 05 01 01 01  	db 5,1,1,1,1
  34+ 868F 01
  35+ 8690 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8694 01
  36+ 8695 05 01 01 01  	db 5,1,1,1,1
  36+ 8699 01
  37+ 869A
  38+ 869A              ;---------------------------------------------------------------------------------------------------------------
  39+ 869A              ;
  40+ 869A              ;   21/5/23
  41+ 869A              ;
  42+ 869A              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 869A              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 869A              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 869A              ;	_en la caja DRAW correspondiente.
  46+ 869A              ;
  47+ 869A              ;	MODIFICA: HL,DE y A.
  48+ 869A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 869A
  50+ 869A              Inicializa_Punteros_de_nivel
  51+ 869A
  52+ 869A 21 3E 86     	ld hl,Indice_de_niveles
  53+ 869D 22 BA 87     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 86A0 CD 45 8A     	call Extrae_address
  55+ 86A3 7E           	ld a,(hl)
  56+ 86A4 32 8D 87     	ld (Numero_de_entidades),a
  57+ 86A7 23           	inc hl
  58+ 86A8 22 BC 87     	ld (Datos_de_nivel),hl
  59+ 86AB C9           	ret
  60+ 86AC
  61+ 86AC              ;---------------------------------------------------------------------------------------------------------------
  62+ 86AC              ;
  63+ 86AC              ;   13/5/23
  64+ 86AC              ;
  65+ 86AC              ;	Destruye A,BC,HL,DE
  66+ 86AC
  67+ 86AC              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 86AC              ;	_del juego.
  69+ 86AC
  70+ 86AC              Prepara_cajas
  71+ 86AC
  72+ 86AC              ; Preparamos los punteros de las cajas.
  73+ 86AC
  74+ 86AC 21 68 84     	ld hl,Indice_de_cajas
  75+ 86AF CD 45 8A     	call Extrae_address
  76+ 86B2 CD EF 86     	call Avanza_caja
  77+ 86B5
  78+ 86B5 CD 2A 87     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 86B8
  80+ 86B8 2A BC 87     	ld hl,(Datos_de_nivel)
  81+ 86BB
  82+ 86BB              ; HL está en los datos del nivel correspondiente.
  83+ 86BB              ; B actuará como contador de cajas.
  84+ 86BB
  85+ 86BB C5           1 push bc
  86+ 86BC
  87+ 86BC 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 86BD CD E0 86     	call PreparaBC
  89+ 86C0
  90+ 86C0 21 E4 85     	ld hl,Indice_de_entidades
  91+ 86C3 CD E8 86     	call SBC_HL_con_BC_y_Extrae
  92+ 86C6 22 93 87         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 86C9
  94+ 86C9 CD F9 86     	call Datos_de_entidad_a_caja
  95+ 86CC
  96+ 86CC 2A 8B 87     	ld hl,(Indice_restore_caja)
  97+ 86CF CD 45 8A     	call Extrae_address
  98+ 86D2 CD EF 86     	call Avanza_caja
  99+ 86D5
 100+ 86D5 2A BC 87     	ld hl,(Datos_de_nivel)
 101+ 86D8 23           	inc hl
 102+ 86D9 22 BC 87     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 86DC
 104+ 86DC C1           	pop bc
 105+ 86DD 10 DC        	djnz 1B
 106+ 86DF C9           	ret
 107+ 86E0
 108+ 86E0 CB 27        PreparaBC sla a
 109+ 86E2 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 86E4 4F           	ld c,a
 111+ 86E5 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 86E7 C9           	ret
 113+ 86E8
 114+ 86E8 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 86E9 ED 4A        	adc hl,bc
 116+ 86EB CD 45 8A     	call Extrae_address
 117+ 86EE C9           	ret
 118+ 86EF
 119+ 86EF 22 87 87     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 86F2 13           	inc de
 121+ 86F3 13           	inc de
 122+ 86F4 EB           	ex de,hl
 123+ 86F5 22 8B 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 86F8 C9           	ret
 125+ 86F9
 126+ 86F9              Datos_de_entidad_a_caja
 127+ 86F9
 128+ 86F9              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 86F9
 130+ 86F9 ED 5B 87 87  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 86FD
 132+ 86FD 01 02 00     	ld bc,2
 133+ 8700 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8702
 135+ 8702 01 07 00     	ld bc,7
 136+ 8705 CD 24 87     	call Situa_DE
 137+ 8708
 138+ 8708 01 05 00     	ld bc,5
 139+ 870B ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 870D
 141+ 870D 01 04 00     	ld bc,4
 142+ 8710 CD 24 87     	call Situa_DE
 143+ 8713
 144+ 8713 01 07 00     	ld bc,7
 145+ 8716 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8718
 147+ 8718 01 18 00     	ld bc,24
 148+ 871B CD 24 87     	call Situa_DE
 149+ 871E
 150+ 871E 01 02 00     	ld bc,2
 151+ 8721 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8723
 153+ 8723 C9           	ret
 154+ 8724
 155+ 8724 EB           Situa_DE ex de,hl
 156+ 8725 A7           	and a
 157+ 8726 ED 4A        	adc hl,bc
 158+ 8728 EB           	ex de,hl
 159+ 8729 C9           	ret
 160+ 872A
 161+ 872A              ;---------------------------------------------------------------------------------------------------------------
 162+ 872A              ;
 163+ 872A              ;	21/5/23
 164+ 872A              ;
 165+ 872A              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 166+ 872A              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 167+ 872A              ;
 168+ 872A              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 169+ 872A              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 170+ 872A              ;	_ total de entidades que contiene (Numero_de_entidades).
 171+ 872A              ;
 172+ 872A              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 173+ 872A              ;	MODIFICA: A y B.
 174+ 872A              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 175+ 872A
 176+ 872A              Admin_num_entidades
 177+ 872A
 178+ 872A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 179+ 872A
 180+ 872A 3A 8D 87     	ld a,(Numero_de_entidades)
 181+ 872D A7           	and a
 182+ 872E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 183+ 872E 28 FE        	jr z,$
 184+ 8730              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 185+ 8730 FE 05        	cp 5
 186+ 8732 38 0C        	jr c,1F
 187+ 8734
 188+ 8734              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 189+ 8734              ; Actualizamos variables.
 190+ 8734
 191+ 8734 06 05        	ld b,5
 192+ 8736 90           	sub b
 193+ 8737 32 8D 87     	ld (Numero_de_entidades),a
 194+ 873A 78           	ld a,b
 195+ 873B 32 8E 87     	ld (Numero_parcial_de_entidades),a
 196+ 873E 18 08        	jr 2F
 197+ 8740
 198+ 8740              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 199+ 8740              ; (Numero_de_entidades)="0".
 200+ 8740
 201+ 8740 47           1 ld b,a
 202+ 8741 32 8E 87     	ld (Numero_parcial_de_entidades),a
 203+ 8744 AF           	xor a
 204+ 8745 32 8D 87     	ld (Numero_de_entidades),a
 205+ 8748 C9           2 ret
# file closed: Niveles.asm
  25  8749
  26  8749              ; ******************************************************************************************************************************************************************************************
  27  8749              ; Constantes.
  28  8749              ; ******************************************************************************************************************************************************************************************
  29  8749              ;
  30  8749              ; 8/11/22
  31  8749              ;
  32  8749              ; Constantes generales.
  33  8749              ;
  34  8749
  35  8749              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  8749              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  8749              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  8749              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  8749
  40  8749              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  8749              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  8749              ;                               				        ; De momento situamos este almacén en $7000.
  43  8749              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  8749              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  8749              ;                               				        ; De momento situamos este almacén en $7060.
  46  8749
  47  8749              ; ******************************************************************************************************************************************************************************************
  48  8749              ; Variables.
  49  8749              ; ******************************************************************************************************************************************************************************************
  50  8749              ;
  51  8749              ; 10/11/22
  52  8749              ;
  53  8749              ; Variables de DRAW. (Motor principal).
  54  8749              ;
  55  8749              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  56  8749
  57  8749 00           Filas db 0												; Filas. [DRAW]
  58  874A 00           Columns db 0  											; Nº de columnas. [DRAW]
  59  874B 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  874D 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  874F 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  8750 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  8751
  64  8751              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  8751
  66  8751 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  8752              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  8752              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  8752 00           Attr db 0												; Atributos de la entidad:
  70  8753
  71  8753              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  8753              ;
  73  8753              ;	COLORES: 0 ..... NEGRO
  74  8753              ;    		 1 ..... AZUL
  75  8753              ; 			 2 ..... ROJO
  76  8753              ;			 3 ..... MAGENTA
  77  8753              ; 			 4 ..... VERDE
  78  8753              ; 			 5 ..... CIAN
  79  8753              ;			 6 ..... AMARILLO
  80  8753              ; 			 7 ..... BLANCO
  81  8753
  82  8753 00 00        Indice_Sprite_der defw 0
  83  8755 00 00        Indice_Sprite_izq defw 0
  84  8757 00 00        Puntero_DESPLZ_der defw 0
  85  8759 00 00        Puntero_DESPLZ_izq defw 0
  86  875B
  87  875B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  875D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  875E
  90  875E              ; Variables de objeto. (Características).
  91  875E
  92  875E 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  93  875F 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  94  8760 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  95  8761 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  96  8762
  97  8762 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  98  8763              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  99  8763              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 100  8763 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  8765 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 102  8767 00 00        	defw 0
 103  8769 00 00 00 00  	db 0,0,0,0
 104  876D
 105  876D 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 106  876F 00 00        	defw 0
 107  8771 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  8773 00 00 00 00  	db 0,0,0,0
 109  8777
 110  8777              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 111  8777
 112  8777 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 113  8778              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 114  8778              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 115  8778              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 116  8778              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 117  8778              ;
 118  8778              ; 														DESCRIPCIÖN:
 119  8778              ;
 120  8778              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 121  8778              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 122  8778              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 123  8778              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 124  8778              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 125  8778              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 126  8778              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 127  8778              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 128  8778              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 129  8778              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 130  8778              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 131  8778              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 132  8778              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 133  8778              ;
 134  8778              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 135  8778              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 136  8778              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 137  8778
 138  8778 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 139  8779
 140  8779              ; Movimiento.
 141  8779
 142  8779 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 143  877A 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 144  877C 00 00        Puntero_mov defw 0
 145  877E 00           Contador_db_mov db 0
 146  877F 00           Incrementa_puntero db 0
 147  8780 00           Repetimos_db db 0
 148  8781
 149  8781              ; Variables de funcionamiento. [DRAW].
 150  8781
 151  8781 00           Columnas db 0
 152  8782 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 153  8784              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 154  8784 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  8785
 156  8785              ; variables de control general.
 157  8785
 158  8785 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 159  8786
 160  8786              ; 61 Bytes por entidad.
 161  8786              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 162  8786              ;					         		---------;      ;---------
 163  8786
 164  8786
 165  8786              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 166  8786
 167  8786 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 168  8787
 169  8787              ;														DESCRIPCIÓN:
 170  8787              ;
 171  8787              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 172  8787              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 173  8787              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 174  8787              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 175  8787              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 176  8787              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 177  8787              ;														BIT 3, .............
 178  8787              ;														BIT 4, .............
 179  8787
 180  8787              ; Gestión de ENTIDADES y CAJAS.
 181  8787
 182  8787              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  8787 00 00        Puntero_store_caja defw 0
 184  8789 00 00        Puntero_restore_caja defw 0
 185  878B 00 00        Indice_restore_caja defw 0
 186  878D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 187  878E 00           Numero_parcial_de_entidades db 0
 188  878F 00           Entidades_en_curso db 0									; ..... ..... .....
 189  8790 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 190  8791              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 191  8791              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 192  8791              ;														; _ (Numero_de_malotes)="0".
 193  8791 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 194  8793 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 195  8795              ;														; _ puntero (Indice_entidades).
 196  8795
 197  8795
 198  8795              ;---------------------------------------------------------------------------------------------------------------
 199  8795              ;
 200  8795              ; Sirven para PINTAR.
 201  8795
 202  8795 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 203  8797              ;														; _variable para almacenar lo posición del puntero_
 204  8797              ; 														; _de pila, SP.
 205  8797 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 206  8799              ;														; La utiliza la rutina [Extrae_foto_registros].
 207  8799 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 208  879B              ;														; _el snapshot de los registros de la siguiente entidad.
 209  879B              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 210  879B 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 211  879D              ;														; _el snapshot de los registros del siguiente disparo.
 212  879D              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 213  879D
 214  879D              ;---------------------------------------------------------------------------------------------------------------
 215  879D
 216  879D              ; Gestión de Disparos.
 217  879D
 218  879D 00           Numero_de_disparotes db 0
 219  879E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 220  87A0 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 221  87A2 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 222  87A3              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 223  87A3              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 224  87A3 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 225  87A5              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 226  87A5              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 227  87A5              ;														; _produzca colisión.
 228  87A5 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 229  87A7              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 230  87A7 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 231  87AA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 232  87AA 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 233  87AD              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 234  87AD
 235  87AD              ;---------------------------------------------------------------------------------------------------------------
 236  87AD
 237  87AD              ; Relojes y temporizaciones.
 238  87AD
 239  87AD 00           Contador_de_frames db 0
 240  87AE 00           Secundero db 0
 241  87AF 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 242  87B0              ;														; Repite la oleada de entidades.
 243  87B0 01           Habilita_disparo_Amadeus db 1
 244  87B1 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 245  87B2 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 246  87B3
 247  87B3 01           Habilita_disparo_entidad db 1
 248  87B4 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 249  87B5 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 250  87B6
 251  87B6              ;---------------------------------------------------------------------------------------------------------------
 252  87B6
 253  87B6              ; Gestión de FRAMES.
 254  87B6
 255  87B6 00           Switch db 0
 256  87B7
 257  87B7              ; Variables de Raster y localización en pantalla.
 258  87B7
 259  87B7 00 FF        Temp_Raster defw $ff00
 260  87B9
 261  87B9              ;---------------------------------------------------------------------------------------------------------------
 262  87B9
 263  87B9              ; Gestión de NIVELES.
 264  87B9
 265  87B9 00           Nivel db 0												 ; Nivel actual del juego.
 266  87BA 00 00        Puntero_indice_NIVELES defw 0
 267  87BC 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 268  87BE              ; 														 ; _ que definen el NIVEL.
 269  87BE
 270  87BE
 271  87BE              ; Y todo comienza aquí .....
 272  87BE              ;
 273  87BE              ; Rutina principal *************************************************************************************************************************************************************************
 274  87BE              ;
 275  87BE              ;	14/11/22
 276  87BE
 277  87BE              START
 278  87BE
 279  87BE 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 280  87C1 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 281  87C3 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 282  87C5 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 283  87C7 F3           	DI
 284  87C8
 285  87C8 3E 07        	ld a,%00000111
 286  87CA CD 78 95     	call Cls
 287  87CD
 288  87CD              ;	call Pinta_FILAS
 289  87CD
 290  87CD CD 9A 86     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 291  87D0 CD 1E 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 292  87D3
 293  87D3 CD AC 86     4 call Prepara_cajas
 294  87D6 CD F1 89     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 295  87D9              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 296  87D9 CD CE 8A     	call Restore_entidad
 297  87DC
 298  87DC 21 8E 87     	ld hl,Numero_parcial_de_entidades
 299  87DF 46           	ld b,(hl)
 300  87E0 04           	inc b
 301  87E1 05           	dec b
 302  87E2 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 303  87E4
 304  87E4              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 305  87E4              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 306  87E4              ;	Pintamos el resto de entidades:
 307  87E4
 308  87E4              ;	INICIA ENTIDADES !!!!!
 309  87E4 C5           1 push bc  												; Guardo el contador de entidades.
 310  87E5 CD 4B 8A      	call Inicia_Puntero_objeto
 311  87E8 CD 8C 95     	call Recompone_posicion_inicio
 312  87EB CD C8 8F     	call Draw
 313  87EE CD A0 7F     	call Guarda_foto_registros
 314  87F1 CD 93 8A     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 315  87F4 C1           	pop bc
 316  87F5 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 317  87F7
 318  87F7              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 319  87F7
 320  87F7 3A 86 87     	ld a,(Ctrl_1)
 321  87FA CB 5F        	bit 3,a
 322  87FC 20 18        	jr nz,5F											; Loop
 323  87FE
 324  87FE              ; 	INICIA AMADEUS !!!!!
 325  87FE
 326  87FE CD F5 8A     3 call Restore_Amadeus
 327  8801 CD 4B 8A     	call Inicia_Puntero_objeto
 328  8804 CD C8 8F     	call Draw
 329  8807 CD A0 7F     	call Guarda_foto_registros
 330  880A 11 76 84     	ld de,Amadeus_db
 331  880D CD 07 8B     	call Store_Amadeus
 332  8810
 333  8810              ; 	INICIA DISPAROS !!!!!
 334  8810
 335  8810 CD 07 8A     	call Inicia_Puntero_Disparo_Entidades
 336  8813 CD 0E 8A     	call Inicia_Puntero_Disparo_Amadeus
 337  8816
 338  8816              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 339  8816
 340  8816 CD F1 89     5 call Inicia_punteros_de_cajas
 341  8819 CD CE 8A     	call Restore_entidad
 342  881C
 343  881C 3A 86 87     	ld a,(Ctrl_1)
 344  881F CB 5F        	bit 3,a
 345  8821 28 0A        	jr z,6F
 346  8823
 347  8823              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 348  8823
 349  8823 21 86 87     	ld hl,Ctrl_1
 350  8826 CB 9E        	res 3,(hl)
 351  8828 CD 15 8A     	call Calcula_numero_de_malotes
 352  882B 18 07        	jr 7F
 353  882D
 354  882D              ; ----------
 355  882D
 356  882D 3A 8E 87     6 ld a,(Numero_parcial_de_entidades)
 357  8830 3C           	inc a
 358  8831 32 90 87     	ld (Numero_de_malotes),a
 359  8834
 360  8834 AF           7 xor a
 361  8835 FB           2 ei
 362  8836 28 FD        	jr z,2B
 363  8838
 364  8838 3A AE 87     	ld a,(Secundero)
 365  883B 47           	ld b,a
 366  883C 3A AF 87     	ld a,(Activa_recarga_cajas)
 367  883F B8           	cp b
 368  8840 28 08        	jr z,8F
 369  8842
 370  8842 21 86 87     	ld hl,Ctrl_1
 371  8845 CB E6        	set 4,(hl)
 372  8847 AF           	xor a
 373  8848 18 EB        	jr 2B
 374  884A
 375  884A 21 86 87     8 ld hl,Ctrl_1
 376  884D CB A6        	res 4,(hl)
 377  884F F3           	di
 378  8850
 379  8850 C3 D3 87     	jp 4B
 380  8853
 381  8853              ; -----------------------------------------------------------------------------------
 382  8853
 383  8853              Frame
 384  8853
 385  8853              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 386  8853              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 387  8853
 388  8853              ; PINTAMOS.
 389  8853
 390  8853 3E 02            ld a,2
 391  8855 D3 FE            out ($fe),a
 392  8857 CD CC 92     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 393  885A CD 05 93     	call Extrae_foto_disparos
 394  885D 3E 01            ld a,1
 395  885F D3 FE            out ($fe),a
 396  8861
 397  8861              ; ----------------------------------------------------------------------
 398  8861
 399  8861              ; RELOJES.
 400  8861
 401  8861 21 AD 87     	ld hl,Contador_de_frames
 402  8864 34           	inc (hl)											; 0 - 255
 403  8865
 404  8865 3E 3C        	ld a,60
 405  8867 BE           	cp (hl)
 406  8868 20 0E        	jr nz,13F
 407  886A
 408  886A 21 AE 87     	ld hl,Secundero
 409  886D 34           	inc (hl)
 410  886E
 411  886E 21 AE 87     	ld hl,Secundero
 412  8871 3E 3C        	ld a,60
 413  8873 BE           	cp (hl)
 414  8874 20 02        	jr nz,13F
 415  8876
 416  8876 36 00        	ld (hl),0
 417  8878
 418  8878 21 B0 87     13 ld hl,Habilita_disparo_Amadeus
 419  887B 11 B2 87     	ld de,Temporiza_disparo_Amadeus
 420  887E CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 421  8881
 422  8881 21 B3 87     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 423  8884 11 B5 87     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 424  8887 CD D5 7F     	call Habilita_disparos
 425  888A
 426  888A              ; COLISIONES.
 427  888A
 428  888A CD 62 8F     	call Selector_de_impactos
 429  888D
 430  888D              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 431  888D              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 432  888D              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 433  888D
 434  888D AF           	xor a
 435  888E 32 A2 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 436  8891
 437  8891 CD F1 89     	call Inicia_punteros_de_cajas
 438  8894 CD CE 8A     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 439  8897              ; 														; _ en DRAW.
 440  8897 3A 49 87     	ld a,(Filas)
 441  889A A7           	and a
 442  889B 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 443  889D CD E0 8A     	call Incrementa_punteros_de_cajas
 444  88A0 18 F2        	jr 12B
 445  88A2
 446  88A2              ; ---------------------------------------------------------------------------------------
 447  88A2
 448  88A2 CD E0 8D     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 449  88A5 21 00 70     	ld hl,Album_de_fotos
 450  88A8 22 99 87         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 451  88AB              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 452  88AB 3A 8E 87     	ld a,(Numero_parcial_de_entidades)
 453  88AE 47               ld b,a
 454  88AF A7           	and a
 455  88B0 20 16        	jr nz,2F
 456  88B2
 457  88B2 21 86 87     	ld hl,Ctrl_1
 458  88B5 CB 66        	bit 4,(hl)
 459  88B7 20 6D        	jr nz,4F
 460  88B9
 461  88B9 21 86 87     	ld hl,Ctrl_1
 462  88BC CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 463  88BE 3A AE 87     	ld a,(Secundero)
 464  88C1 3C           	inc a
 465  88C2 3C           	inc a
 466  88C3 32 AF 87     	ld (Activa_recarga_cajas),a							; A los 2 seg. se repite la oleada de entidades.
 467  88C6
 468  88C6 18 5E        	jr 4F
 469  88C8
 470  88C8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 471  88C8
 472  88C8              ; Código que ejecutamos con cada entidad:
 473  88C8
 474  88C8              ; Impacto ???
 475  88C8
 476  88C8 3A 8F 87     2 ld a,(Entidades_en_curso)
 477  88CB A7           	and a
 478  88CC 28 58        	jr z,4F
 479  88CE 47           	ld b,a
 480  88CF
 481  88CF C5           15 push bc 												; Nº de entidades en curso.
 482  88D0
 483  88D0 3A 62 87     	ld a,(Impacto)
 484  88D3 A7           	and a
 485  88D4 28 0A        	jr z,8F
 486  88D6
 487  88D6              ; Hay Impacto en esta entidad.
 488  88D6
 489  88D6 CD A8 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 490  88D9 CD 10 8B     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 491  88DC 21 8E 87     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 492  88DF 35           	dec (hl)
 493  88E0
 494  88E0              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 495  88E0              ; _con las coordenadas de la entidad almacenada en DRAW.
 496  88E0
 497  88E0 3A 86 87     8 ld a,(Ctrl_1)
 498  88E3 CB 57        	bit 2,a
 499  88E5 28 20        	jr z,7F
 500  88E7
 501  88E7 2A A5 87     	ld hl,(Coordenadas_disparo_certero)
 502  88EA EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 503  88EB              ;														; E contiene la coordenada_X del disparo.
 504  88EB 2A 4F 87     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 505  88EE              ;														; H Coordenado_y de la entidad.
 506  88EE A7           	and a
 507  88EF ED 52        	sbc hl,de
 508  88F1
 509  88F1 CD 99 8F     	call Determina_resultado_comparativa
 510  88F4 04           	inc b
 511  88F5 05           	dec b
 512  88F6
 513  88F6              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 514  88F6              ;	jr z,$
 515  88F6              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 516  88F6
 517  88F6 28 0F        	jr z,7F
 518  88F8
 519  88F8              ; ----- ----- -----
 520  88F8
 521  88F8 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 522  88FA 32 62 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 523  88FD 21 86 87     	ld hl,Ctrl_1
 524  8900 CB 96        	res 2,(hl)
 525  8902 21 A5 87     	ld hl,Coordenadas_disparo_certero
 526  8905 36 00        	ld (hl),0
 527  8907
 528  8907
 529  8907 CD 59 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 530  890A
 531  890A 3A 77 87     	ld a,(Ctrl_0)
 532  890D CB 67        	bit 4,a
 533  890F 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 534  8911
 535  8911              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 536  8911              ; [[[
 537  8911 CD 69 8B     	call Detecta_disparo_entidad
 538  8914              ; ]]]
 539  8914 CD B8 89     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 540  8917
 541  8917 21 77 87     	ld hl,Ctrl_0
 542  891A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 543  891C AF           	xor a
 544  891D 32 78 87     	ld (Obj_dibujado),a
 545  8920
 546  8920 CD 93 8A     6 call Store_Restore_cajas
 547  8923
 548  8923 C1           	pop bc
 549  8924 10 A9        	djnz 15B
 550  8926
 551  8926              ; Tras la gestión de las entidades, ... AMADEUS.
 552  8926
 553  8926 CD F5 8A     4 call Restore_Amadeus
 554  8929
 555  8929 3A 62 87     	ld a,(Impacto)
 556  892C A7           	and a
 557  892D 20 FE        	jr nz,$
 558  892F
 559  892F              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 560  892F
 561  892F CD 89 89     	call Mov_Amadeus
 562  8932
 563  8932 3A 77 87     	ld a,(Ctrl_0)
 564  8935 CB 67        	bit 4,a
 565  8937 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 566  8939
 567  8939 CD B8 89     	call Guarda_foto_entidad_a_pintar
 568  893C
 569  893C 21 77 87     3 ld hl,Ctrl_0
 570  893F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 571  8941 AF           	xor a
 572  8942 32 78 87     	ld (Obj_dibujado),a
 573  8945
 574  8945 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 575  8948 CD 07 8B     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 576  894B
 577  894B CD FE 8D     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 578  894E
 579  894E              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 580  894E
 581  894E CD 2D 8A     	call Calcula_numero_de_disparotes
 582  8951 CD 15 8A     9 call Calcula_numero_de_malotes
 583  8954
 584  8954 3E 04        	ld a,4
 585  8956 D3 FE        	out ($fe),a
 586  8958
 587  8958 C9           	ret
 588  8959
 589  8959              ; --------------------------------------------------------------------------------------------------------------
 590  8959              ;
 591  8959              ;	27/03/23
 592  8959
 593  8959              Mov_obj
 594  8959
 595  8959              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 596  8959
 597  8959 AF           	xor a
 598  895A 32 78 87     	ld (Obj_dibujado),a
 599  895D 32 77 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 600  8960              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 601  8960              ; 														; _de la entidad.
 602  8960 CD C2 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 603  8963              ;														; Obj_dibujado="0".
 604  8963              ; Movemos Entidades malignas.
 605  8963
 606  8963 21 7A 87     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 607  8966 34           	inc (hl)
 608  8967 35           	dec (hl)                                            ; Salimos de la rutina.
 609  8968 C8           	ret z
 610  8969
 611  8969 CD 7A 99     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 612  896C
 613  896C 3A 77 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 614  896F CB 67        	bit 4,a
 615  8971 C8           	ret z
 616  8972
 617  8972              ; Ha habido desplazamiento de la entidad maligna.
 618  8972              ; Ha llegado a zona de AMADEUS ???
 619  8972
 620  8972 3A 50 87     	ld a,(Coordenada_y)
 621  8975 FE 14        	cp $14
 622  8977 D4 2F 8D     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 623  897A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 624  897A              ; ---------
 625  897A
 626  897A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 627  897C 32 78 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 628  897F CD C2 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 629  8982 CD D9 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 630  8985 CD A8 89     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 631  8988 C9           	ret													; _de la misma.
 632  8989
 633  8989              ; --------------------------------------------------------------------------------------------------------------
 634  8989              ;
 635  8989              ;	29/1/23
 636  8989
 637  8989              Mov_Amadeus
 638  8989
 639  8989 AF           	xor a
 640  898A 32 78 87     	ld (Obj_dibujado),a
 641  898D CD C2 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 642  8990              ;														; Obj_dibujado="0".
 643  8990              ; Movemos Amadeus.
 644  8990
 645  8990 CD 32 8B     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 646  8993 3A 77 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 647  8996 CB 67        	bit 4,a
 648  8998 C8           	ret z
 649  8999
 650  8999              ; ---------
 651  8999
 652  8999 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 653  899B 32 78 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 654  899E CD C2 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 655  89A1 CD D9 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 656  89A4 CD A8 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 657  89A7 C9           	ret													; _de la nave.
 658  89A8
 659  89A8              ; --------------------------------------------------------------------------------------------------------------
 660  89A8              ;
 661  89A8              ;	31/01/23
 662  89A8              ;
 663  89A8              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 664  89A8
 665  89A8              Guarda_foto_entidad_a_borrar
 666  89A8
 667  89A8 CD A2 92     	call Prepara_draw
 668  89AB CD DC 91     	call calcula_CColumnass
 669  89AE CD 13 92     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 670  89B1 CD 68 92     	call Define_rutina_de_impresion
 671  89B4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 672  89B7 C9           	ret
 673  89B8
 674  89B8              ; --------------------------------------------------------------------------------------------------------------
 675  89B8              ;
 676  89B8              ;	31/01/23
 677  89B8              ;
 678  89B8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 679  89B8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 680  89B8
 681  89B8              Guarda_foto_entidad_a_pintar
 682  89B8
 683  89B8 CD E5 89     	call Repone_pintar
 684  89BB CD C8 8F     	call Draw
 685  89BE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 686  89C1 C9           	ret
 687  89C2
 688  89C2              ; --------------------------------------------------------------------------------------------------------------
 689  89C2              ;
 690  89C2              ;
 691  89C2
 692  89C2 21 49 87     Prepara_var_pintado_borrado	ld hl,Filas
 693  89C5 3A 78 87     	ld a,(Obj_dibujado)
 694  89C8 A7           	and a
 695  89C9 28 05        	jr z,1F
 696  89CB 11 6D 87     	ld de,Variables_de_pintado
 697  89CE 18 03        	jr 2F
 698  89D0 11 63 87     1 ld de,Variables_de_borrado
 699  89D3 01 08 00     2 ld bc,8
 700  89D6 ED B0        	ldir
 701  89D8 C9           	ret
 702  89D9
 703  89D9              ; --------------------------------------------------------------------------------------------------------------
 704  89D9
 705  89D9 21 63 87     Repone_borrar ld hl,Variables_de_borrado
 706  89DC 11 49 87     	ld de,Filas
 707  89DF 01 08 00     	ld bc,8
 708  89E2 ED B0        	ldir
 709  89E4 C9           	ret
 710  89E5
 711  89E5 21 6D 87     Repone_pintar ld hl,Variables_de_pintado
 712  89E8 11 49 87     	ld de,Filas
 713  89EB 01 08 00     	ld bc,8
 714  89EE ED B0        	ldir
 715  89F0 C9           	ret
 716  89F1
 717  89F1              ; *************************************************************************************************************************************************************
 718  89F1              ;
 719  89F1              ; 8/1/23
 720  89F1              ;
 721  89F1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 722  89F1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 723  89F1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 724  89F1
 725  89F1              ; Destruye HL y DE !!!!!
 726  89F1
 727  89F1              Inicia_punteros_de_cajas
 728  89F1
 729  89F1 21 68 84     	ld hl,Indice_de_cajas
 730  89F4 CD 45 8A         call Extrae_address
 731  89F7 22 87 87         ld (Puntero_store_caja),hl
 732  89FA 21 6A 84     	ld hl,Indice_de_cajas+2
 733  89FD 22 8B 87     	ld (Indice_restore_caja),hl
 734  8A00 CD 45 8A     	call Extrae_address
 735  8A03 22 89 87     	ld (Puntero_restore_caja),hl
 736  8A06 C9               ret
 737  8A07
 738  8A07              ; *************************************************************************************************************************************************************
 739  8A07              ;
 740  8A07              ; 8/1/23
 741  8A07              ;
 742  8A07              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 743  8A07
 744  8A07 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 745  8A0A 22 9E 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 746  8A0D C9           	ret
 747  8A0E 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 748  8A11 22 A0 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 749  8A14 C9           	ret
 750  8A15
 751  8A15              ; -------------------------------------------------------------------------------------------------------------
 752  8A15              ;
 753  8A15              ; 28/2/23
 754  8A15              ;
 755  8A15
 756  8A15              Calcula_numero_de_malotes
 757  8A15
 758  8A15 21 00 70     	ld hl,Album_de_fotos
 759  8A18 EB           	ex de,hl
 760  8A19 2A 99 87     	ld hl,(Stack_snapshot)
 761  8A1C
 762  8A1C 06 00        	ld b,0
 763  8A1E 7D           	ld a,l
 764  8A1F 93           	sub e
 765  8A20 28 07        	jr z,1F
 766  8A22
 767  8A22              ; Nº de malotes no es "0".
 768  8A22
 769  8A22 D6 06        2 sub 6
 770  8A24 04           	inc b
 771  8A25 A7           	and a
 772  8A26 20 FA        	jr nz,2B
 773  8A28 78           	ld a,b
 774  8A29
 775  8A29 32 90 87     1 ld (Numero_de_malotes),a
 776  8A2C C9           	ret
 777  8A2D
 778  8A2D              ; -------------------------------------------------------------------------------------------------------------
 779  8A2D              ;
 780  8A2D              ; 28/2/23
 781  8A2D              ;
 782  8A2D
 783  8A2D              Calcula_numero_de_disparotes
 784  8A2D
 785  8A2D 21 60 70     	ld hl,Album_de_fotos_disparos
 786  8A30 EB           	ex de,hl
 787  8A31 2A 9B 87     	ld hl,(Stack_snapshot_disparos)
 788  8A34
 789  8A34 06 00        	ld b,0
 790  8A36 7D           	ld a,l
 791  8A37 93           	sub e
 792  8A38 28 07        	jr z,1F
 793  8A3A
 794  8A3A              ; Nº de malotes no es "0".
 795  8A3A
 796  8A3A D6 06        2 sub 6
 797  8A3C 04           	inc b
 798  8A3D A7           	and a
 799  8A3E 20 FA        	jr nz,2B
 800  8A40 78           	ld a,b
 801  8A41
 802  8A41 32 9D 87     1 ld (Numero_de_disparotes),a
 803  8A44 C9           	ret
 804  8A45              ; *************************************************************************************************************************************************************
 805  8A45              ;
 806  8A45              ; 20/10/22
 807  8A45              ;
 808  8A45              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 809  8A45              ;
 810  8A45              ; Destruye el puntero y DE !!!!!
 811  8A45
 812  8A45 5E           Extrae_address ld e,(hl)
 813  8A46 23           	inc hl
 814  8A47 56           	ld d,(hl)
 815  8A48 2B           	dec hl
 816  8A49 EB           	ex de,hl
 817  8A4A C9           	ret
 818  8A4B
 819  8A4B              ; *************************************************************************************************************************************************************
 820  8A4B              ;
 821  8A4B              ;	7/2/23
 822  8A4B              ;
 823  8A4B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 824  8A4B              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 825  8A4B              ;
 826  8A4B              ;   Destruye HL y BC !!!!!,
 827  8A4B              ;
 828  8A4B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 829  8A4B              ;					"0" ..... Izquierda.
 830  8A4B
 831  8A4B              Inicia_Puntero_objeto
 832  8A4B
 833  8A4B 3A 5D 87     	ld a,(Cuad_objeto)
 834  8A4E E6 01        	and 1
 835  8A50 F5           	push af
 836  8A51 CC 6F 8A     	call z,Inicia_puntero_objeto_izq
 837  8A54 F1           	pop af
 838  8A55 28 2B        	jr z,1F
 839  8A57 CD 5C 8A     	call Inicia_puntero_objeto_der
 840  8A5A 18 26        	jr 1F
 841  8A5C
 842  8A5C              ; Arrancamos desde la parte izquierda de la pantalla.
 843  8A5C              ; Iniciamos (Indice_Sprite_der).
 844  8A5C
 845  8A5C 2A 53 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 846  8A5F 22 57 87     	ld (Puntero_DESPLZ_der),hl
 847  8A62 CD 45 8A     	call Extrae_address
 848  8A65 22 4D 87     	ld (Puntero_objeto),hl
 849  8A68
 850  8A68 2A 55 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 851  8A6B 22 59 87     	ld (Puntero_DESPLZ_izq),hl
 852  8A6E C9           	ret
 853  8A6F
 854  8A6F              ; Arrancamos desde la parte derecha de la pantalla.
 855  8A6F              ; Iniciamos (Indice_Sprite_izq).
 856  8A6F
 857  8A6F 2A 55 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 858  8A72 22 59 87     	ld (Puntero_DESPLZ_izq),hl
 859  8A75 CD 45 8A     	call Extrae_address
 860  8A78 22 4D 87     	ld (Puntero_objeto),hl
 861  8A7B
 862  8A7B 2A 53 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 863  8A7E 22 57 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 864  8A81 C9           	ret
 865  8A82
 866  8A82              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 867  8A82
 868  8A82 21 38 83     1 ld hl,Amadeus
 869  8A85 ED 4B 4D 87  	ld bc,(Puntero_objeto)
 870  8A89 B7 ED 42     	sub hl,bc
 871  8A8C C0           	ret nz
 872  8A8D 21 77 87     	ld hl,Ctrl_0
 873  8A90 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 874  8A92 C9           	ret 												; _de nuestra nave en los extremos.
 875  8A93
 876  8A93              ; *************************************************************************************************************************************************************
 877  8A93              ;
 878  8A93              ;	14/5/23
 879  8A93              ;
 880  8A93              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 881  8A93              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 882  8A93
 883  8A93              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 884  8A93              ;	_de la 2ª y 3ª entidad respectivamente.
 885  8A93
 886  8A93              Store_Restore_cajas
 887  8A93
 888  8A93 E5           	push hl
 889  8A94 D5           	push de
 890  8A95 C5            	push bc
 891  8A96
 892  8A96              ;	STORE !!!!!
 893  8A96              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 894  8A96
 895  8A96 21 49 87     	ld hl,Filas
 896  8A99 ED 5B 87 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 897  8A9D 01 3D 00     	ld bc,61
 898  8AA0 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 899  8AA2
 900  8AA2              ; 	Entidad_sospechosa. 20/4/23
 901  8AA2
 902  8AA2 3A 62 87     	ld a,(Impacto)
 903  8AA5 A7           	and a
 904  8AA6 28 0C        	jr z,1F
 905  8AA8
 906  8AA8 2A 87 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 907  8AAB 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 908  8AAE A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 909  8AAF ED 4A        	adc hl,bc 											; _ "0" más adelante.
 910  8AB1 22 A3 87     	ld (Entidad_sospechosa_de_colision),hl
 911  8AB4
 912  8AB4              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 913  8AB4
 914  8AB4 2A 89 87     1 ld hl,(Puntero_restore_caja)
 915  8AB7 7E           	ld a,(hl)
 916  8AB8 A7           	and a
 917  8AB9 F5           	push af
 918  8ABA 28 08        	jr z,2F
 919  8ABC
 920  8ABC 11 49 87     	ld de,Filas
 921  8ABF 01 3D 00     	ld bc,61
 922  8AC2 ED B0        	ldir
 923  8AC4
 924  8AC4 CD E0 8A     2 call Incrementa_punteros_de_cajas
 925  8AC7 F1           	pop af
 926  8AC8 28 EA        	jr z,1B
 927  8ACA
 928  8ACA C1           	pop bc
 929  8ACB D1           	pop de
 930  8ACC E1           	pop hl
 931  8ACD
 932  8ACD C9           	ret
 933  8ACE
 934  8ACE              ; **************************************************************************************************
 935  8ACE              ;
 936  8ACE              ;	12/05/23
 937  8ACE              ;
 938  8ACE              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 939  8ACE
 940  8ACE E5           Restore_entidad push hl
 941  8ACF D5           	push de
 942  8AD0 C5            	push bc
 943  8AD1
 944  8AD1 2A 87 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 945  8AD4 11 49 87     	ld de,Filas
 946  8AD7 01 3D 00     	ld bc,61
 947  8ADA ED B0        	ldir
 948  8ADC
 949  8ADC C1           	pop bc
 950  8ADD D1           	pop de
 951  8ADE E1           	pop hl
 952  8ADF C9           	ret
 953  8AE0
 954  8AE0
 955  8AE0              ; **************************************************************************************************
 956  8AE0              ;
 957  8AE0              ;	08/05/23
 958  8AE0              ;
 959  8AE0              ;	Incrementamos los dos punteros de entidades. (+1).
 960  8AE0
 961  8AE0 2A 89 87     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 962  8AE3 22 87 87     	ld (Puntero_store_caja),hl
 963  8AE6 2A 8B 87     	ld hl,(Indice_restore_caja)
 964  8AE9 23           	inc hl
 965  8AEA 23           	inc hl
 966  8AEB 22 8B 87     	ld (Indice_restore_caja),hl
 967  8AEE CD 45 8A         call Extrae_address
 968  8AF1 22 89 87         ld (Puntero_restore_caja),hl
 969  8AF4 C9               ret
 970  8AF5
 971  8AF5              ; **************************************************************************************************
 972  8AF5              ;
 973  8AF5              ;	25/01/23
 974  8AF5              ;
 975  8AF5              ;	Restore_Amadeus
 976  8AF5              ;
 977  8AF5              ;	Cargamos en DRAW los parámetros de Amadeus.
 978  8AF5              ;
 979  8AF5
 980  8AF5 E5           Restore_Amadeus	push hl
 981  8AF6 D5           	push de
 982  8AF7 C5            	push bc
 983  8AF8 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 984  8AFB 11 49 87     	ld de,Filas
 985  8AFE 01 3D 00     	ld bc,61
 986  8B01 ED B0        	ldir
 987  8B03 C1           	pop bc
 988  8B04 D1           	pop de
 989  8B05 E1           	pop hl
 990  8B06 C9           	ret
 991  8B07
 992  8B07              ; *************************************************************************************************************************************************************
 993  8B07              ;
 994  8B07              ;	29/04/23
 995  8B07              ;
 996  8B07              ;	Store_Amadeus
 997  8B07              ;
 998  8B07              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 999  8B07              ;
1000  8B07              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1001  8B07              ;
1002  8B07              ;	DESTRUYE: HL y BC y DE.
1003  8B07
1004  8B07 21 49 87     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1005  8B0A 01 3D 00     	ld bc,61
1006  8B0D ED B0        	ldir
1007  8B0F C9           	ret
1008  8B10
1009  8B10              ; -----------------------------------------------------------
1010  8B10              ;
1011  8B10              ;	27/04/23
1012  8B10              ;
1013  8B10              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1014  8B10              ;
1015  8B10              ;	Destruye: HL,BC,DE,A
1016  8B10
1017  8B10 21 49 87     Borra_datos_entidad ld hl,Filas
1018  8B13 01 3C 00     	ld bc,60
1019  8B16 AF           	xor a
1020  8B17 77           	ld (hl),a
1021  8B18 11 4A 87     	ld de,Filas+1
1022  8B1B ED B0        	ldir
1023  8B1D C9           	ret
1024  8B1E
1025  8B1E              ; -----------------------------------------------------------
1026  8B1E
1027  8B1E              ; Teclado.
1028  8B1E
1029  8B1E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1030  8B20 DB FE        	in a,($fe)
1031  8B22 E6 01        	and $01
1032  8B24 28 02        	jr z,1f
1033  8B26 18 F6        	jr Pulsa_ENTER
1034  8B28 C9           1 ret
1035  8B29
1036  8B29              ; **************************************************************************************************
1037  8B29              ;
1038  8B29              ; Temporización.
1039  8B29
1040  8B29              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1041  8B29              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1042  8B29              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1043  8B29              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1044  8B29
1045  8B29              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1046  8B29              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1047  8B29              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1048  8B29
1049  8B29              ; A partir de $4f61 no hace falta DELAY.
1050  8B29
1051  8B29              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1052  8B29
1053  8B29 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1054  8B2C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1055  8B2D 78           	LD A,B
1056  8B2E A7           	AND A
1057  8B2F 20 FB        	JR NZ,wait
1058  8B31 C9           	RET
1059  8B32
1060  8B32              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1061  8B32              ;
1062  8B32              ;	5/3/23
1063  8B32              ;
1064  8B32              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1065  8B32
1066  8B32              Movimiento_Amadeus
1067  8B32
1068  8B32              ; Disparo.
1069  8B32
1070  8B32 3A B0 87     	ld a,(Habilita_disparo_Amadeus)
1071  8B35 A7           	and a
1072  8B36 20 02        	jr nz,1F
1073  8B38 18 15        	jr 2F
1074  8B3A
1075  8B3A 3E F7        1 ld a,$f7													; "5" para disparar.
1076  8B3C DB FE        	in a,($fe)
1077  8B3E E6 10        	and $10
1078  8B40
1079  8B40 F5           	push af
1080  8B41 CC AB 8B     	call z,Genera_disparo
1081  8B44 F1           	pop af
1082  8B45 20 08        	jr nz,2F
1083  8B47
1084  8B47 3A B0 87     	ld a,(Habilita_disparo_Amadeus)
1085  8B4A EE 01        	xor 1
1086  8B4C 32 B0 87     	ld (Habilita_disparo_Amadeus),a
1087  8B4F
1088  8B4F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1089  8B51 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1090  8B53 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1091  8B55 CC 1A 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1092  8B58 3E F7        	ld a,$f7
1093  8B5A DB FE        	in a,($fe)
1094  8B5C E6 01        	and $01
1095  8B5E C8           	ret z
1096  8B5F
1097  8B5F 3E F7        	ld a,$f7
1098  8B61 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1099  8B63 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1100  8B65 CC FC 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1101  8B68 C9           	ret
1102  8B69
1103  8B69              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1104  8B69              ;
1105  8B69              ;	Rutina provisional para que los malotes cagen balas.
1106  8B69
1107  8B69              Detecta_disparo_entidad
1108  8B69
1109  8B69 3A B3 87     	ld a,(Habilita_disparo_entidad)
1110  8B6C A7           	and a
1111  8B6D C8           	ret z
1112  8B6E 3E 7F        	ld a,$7f
1113  8B70 DB FE        	in a,($fe)
1114  8B72 E6 01        	and 1
1115  8B74 C0           	ret nz
1116  8B75 CD AB 8B     	call Genera_disparo
1117  8B78 C9           	ret
1118  8B79
1119  8B79              ; Pinta indicadores de FILAS. ------------------------------------------------------
1120  8B79
1121  8B79 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1122  8B7C
1123  8B7C              ; ----------
1124  8B7C 06 20        	ld b,32
1125  8B7E E5           2 push hl
1126  8B7F C5           	push bc
1127  8B80              ; ----------
1128  8B80
1129  8B80 06 BF        	ld b,$bf
1130  8B82 36 80        1 ld (hl),%10000000
1131  8B84 CD AE 92     	call NextScan
1132  8B87 10 F9        	djnz 1B
1133  8B89
1134  8B89              ; ----------
1135  8B89 C1           	pop bc
1136  8B8A E1           	pop hl
1137  8B8B 2C           	inc l
1138  8B8C 10 F0        	djnz 2B
1139  8B8E              ; ----------
1140  8B8E
1141  8B8E 06 03        	ld b,3
1142  8B90 21 00 47         ld hl,$4700
1143  8B93 CD 99 8B     3 call Bucle_1
1144  8B96 10 FB            djnz 3B
1145  8B98 C9               ret
1146  8B99
1147  8B99 C5           Bucle_1 push bc
1148  8B9A E5                   push hl
1149  8B9B D1                   pop de
1150  8B9C 13                   inc de
1151  8B9D 01 FF 00             ld bc,255
1152  8BA0 36 FF                ld (hl),255
1153  8BA2 ED B0                ldir
1154  8BA4 23                   inc hl
1155  8BA5 3E 07                ld a,7
1156  8BA7 84                   add a,h
1157  8BA8 67                   ld h,a
1158  8BA9 C1                   pop bc
1159  8BAA C9                   ret
1160  8BAB
1161  8BAB              ; ---------------------------------------------------------------
1162  8BAB
1163  8BAB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8BAB              ; ******************************************************************************************************************************************************************************************
   2+ 8BAB              ;
   3+ 8BAB              ;   17/04/23
   4+ 8BAB              ;
   5+ 8BAB              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8BAB              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8BAB              ;
   8+ 8BAB              ;
   9+ 8BAB              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8BAB              ;
  11+ 8BAB              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8BAB              ;               _ hacen las entidades hacia abajo.
  13+ 8BAB              ;
  14+ 8BAB              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8BAB              ;
  16+ 8BAB              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8BAB              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8BAB              ;
  19+ 8BAB              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8BAB              ;           _ la bala.
  21+ 8BAB              ;
  22+ 8BAB              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8BAB              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8BAB              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8BAB              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8BAB              ;           _ en el momento de generarse la bala)).
  27+ 8BAB
  28+ 8BAB              Genera_disparo
  29+ 8BAB
  30+ 8BAB              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8BAB              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8BAB              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8BAB              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8BAB              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8BAB              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8BAB              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8BAB
  38+ 8BAB              ; Exclusiones:
  39+ 8BAB
  40+ 8BAB 3A 81 87         ld a,(Columnas)
  41+ 8BAE 47               ld b,a
  42+ 8BAF 3A 4A 87         ld a,(Columns)
  43+ 8BB2 B8               cp b
  44+ 8BB3 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8BB4
  46+ 8BB4              ; ----- ----- -----
  47+ 8BB4
  48+ 8BB4 3A 77 87         ld a,(Ctrl_0)
  49+ 8BB7 CB 77            bit 6,a
  50+ 8BB9 20 06            jr nz,14F
  51+ 8BBB
  52+ 8BBB 3A 50 87         ld a,(Coordenada_y)
  53+ 8BBE FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8BC0 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8BC1
  56+ 8BC1 21 00 80     14 ld hl,Indice_disparo
  57+ 8BC4 3A 51 87         ld a,(CTRL_DESPLZ)
  58+ 8BC7 4F               ld c,a
  59+ 8BC8 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8BCA              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8BCA              ;                                            ""        ""       "f9", B="1"
  62+ 8BCA              ;                                            ""        ""       "fb", B="2"
  63+ 8BCA              ;                                            ""        ""       "fb", B="3"
  64+ 8BCA A7               and a
  65+ 8BCB 28 10            jr z,1F
  66+ 8BCD E6 01            and 1
  67+ 8BCF C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8BD0
  69+ 8BD0 79               ld a,c
  70+ 8BD1 16 F9            ld d,$f9
  71+ 8BD3 23           2 inc hl
  72+ 8BD4 23               inc hl
  73+ 8BD5 04               inc b
  74+ 8BD6 BA               cp d
  75+ 8BD7 28 04            jr z,1F
  76+ 8BD9 14               inc d
  77+ 8BDA 14               inc d
  78+ 8BDB 18 F6            jr 2B
  79+ 8BDD
  80+ 8BDD CD 45 8A     1 call Extrae_address
  81+ 8BE0 E5               push hl
  82+ 8BE1 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8BE3 DD 21 41 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8BE7
  85+ 8BE7              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8BE7              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8BE7
  88+ 8BE7 3A 77 87         ld a,(Ctrl_0)
  89+ 8BEA CB 77            bit 6,a
  90+ 8BEC 20 04            jr nz,19F
  91+ 8BEE
  92+ 8BEE AF               xor a
  93+ 8BEF 32 B3 87         ld (Habilita_disparo_entidad),a
  94+ 8BF2
  95+ 8BF2 3A 5D 87     19 ld a,(Cuad_objeto)
  96+ 8BF5 FE 02            cp 2
  97+ 8BF7 38 66            jr c,3F
  98+ 8BF9 28 64            jr z,3F
  99+ 8BFB
 100+ 8BFB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8BFB
 102+ 8BFB E6 01            and 1
 103+ 8BFD 28 30            jr z,4F
 104+ 8BFF
 105+ 8BFF              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8BFF              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8BFF              ;
 108+ 8BFF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8BFF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8BFF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8BFF
 112+ 8BFF 2A 4B 87     	ld hl,(Posicion_actual)
 113+ 8C02
 114+ 8C02              ;   Amadeus o entidad ???.
 115+ 8C02
 116+ 8C02 3A 77 87         ld a,(Ctrl_0)
 117+ 8C05 CB 77            bit 6,a
 118+ 8C07 28 0A            jr z,8F
 119+ 8C09
 120+ 8C09              ; 	Dispara Amadeus.
 121+ 8C09
 122+ 8C09 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8C0B CD BD 92         call PreviousScan
 124+ 8C0E CD BD 92         call PreviousScan
 125+ 8C11
 126+ 8C11              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8C11              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8C11              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8C11              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8C11
 131+ 8C11 18 11            jr 10F
 132+ 8C13
 133+ 8C13              ; 	Dispara Entidad.
 134+ 8C13
 135+ 8C13 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8C16              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8C16
 138+ 8C16              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8C16              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8C16
 141+ 8C16 C5               push bc
 142+ 8C17 06 10            ld b,16
 143+ 8C19 CD AE 92     9 call NextScan
 144+ 8C1C 10 FB            djnz 9B
 145+ 8C1E C1               pop bc
 146+ 8C1F CD 89 8C         call Ajusta_disparo_parte_izquierda
 147+ 8C22 18 06            jr 17F
 148+ 8C24
 149+ 8C24              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8C24              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8C24              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8C24              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8C24
 154+ 8C24 CD 89 8C     10 call Ajusta_disparo_parte_izquierda
 155+ 8C27 CD FE 8C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8C2A              ;                                                      ; _al generar el disparo.
 157+ 8C2A
 158+ 8C2A              ; 	LLegados a este punto tendremos:
 159+ 8C2A              ;
 160+ 8C2A              ;       Puntero_objeto_disparo en IY.
 161+ 8C2A              ;       Rutinas_de_impresion en IX.
 162+ 8C2A              ;       Puntero_de_impresion en HL.
 163+ 8C2A              ;       Impacto/Dirección en BC.
 164+ 8C2A
 165+ 8C2A CD 91 8C     17 call Almacena_disparo
 166+ 8C2D 18 52            jr 6F                                             ; RET.
 167+ 8C2F
 168+ 8C2F              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8C2F              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8C2F              ;
 171+ 8C2F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8C2F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8C2F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8C2F
 175+ 8C2F 2A 4B 87     4 ld hl,(Posicion_actual)
 176+ 8C32
 177+ 8C32              ;   Amadeus o entidad ???.
 178+ 8C32
 179+ 8C32 3A 77 87         ld a,(Ctrl_0)
 180+ 8C35 CB 77            bit 6,a
 181+ 8C37 28 0A            jr z,11F
 182+ 8C39
 183+ 8C39              ; 	Dispara Amadeus.
 184+ 8C39
 185+ 8C39 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8C3B CD BD 92         call PreviousScan
 187+ 8C3E CD BD 92         call PreviousScan
 188+ 8C41
 189+ 8C41              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8C41              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8C41              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8C41              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8C41
 194+ 8C41 18 11            jr 13F
 195+ 8C43
 196+ 8C43              ; 	Dispara Entidad.
 197+ 8C43
 198+ 8C43 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8C46              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8C46
 201+ 8C46              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8C46              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8C46
 204+ 8C46 C5               push bc
 205+ 8C47 06 10            ld b,16
 206+ 8C49 CD AE 92     12 call NextScan
 207+ 8C4C 10 FB            djnz 12B
 208+ 8C4E C1               pop bc
 209+ 8C4F
 210+ 8C4F CD 82 8C         call Ajusta_disparo_parte_derecha
 211+ 8C52 18 06            jr 18F
 212+ 8C54
 213+ 8C54              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8C54              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8C54              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8C54              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8C54
 218+ 8C54 CD 82 8C     13 call Ajusta_disparo_parte_derecha
 219+ 8C57 CD FE 8C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8C5A              ;                                                       ; _al generar el disparo.
 221+ 8C5A
 222+ 8C5A              ; LLegados a este punto tendremos:
 223+ 8C5A              ;
 224+ 8C5A              ;       Puntero_objeto_disparo en IY.
 225+ 8C5A              ;       Rutinas_de_impresion en IX.
 226+ 8C5A              ;       Puntero_de_impresion en HL.
 227+ 8C5A              ;       Impacto/Dirección en BC.
 228+ 8C5A
 229+ 8C5A CD 91 8C     18 call Almacena_disparo
 230+ 8C5D 18 22            jr 6F                                               ; RET.
 231+ 8C5F
 232+ 8C5F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8C5F
 234+ 8C5F 28 11        3 jr z,5F
 235+ 8C61
 236+ 8C61              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8C61              ;
 238+ 8C61              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8C61              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8C61              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8C61              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8C61
 243+ 8C61              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8C61              ;	   ""        ""       "f9", B="1"
 245+ 8C61              ;	   ""        ""       "fb", B="2"
 246+ 8C61              ; 	   ""        ""       "fb", B="3"
 247+ 8C61
 248+ 8C61 2A 4B 87     	ld hl,(Posicion_actual)
 249+ 8C64 CD AE 92     	call NextScan
 250+ 8C67
 251+ 8C67              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8C67              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8C67              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8C67              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8C67
 256+ 8C67 CD 89 8C         call Ajusta_disparo_parte_izquierda
 257+ 8C6A
 258+ 8C6A              ; 	No se produce impacto. B="$80"
 259+ 8C6A              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8C6A
 261+ 8C6A 01 80 80         ld bc,$8080
 262+ 8C6D
 263+ 8C6D              ; 	LLegados a este punto tendremos:
 264+ 8C6D              ;
 265+ 8C6D              ;       Puntero_objeto_disparo en IY.
 266+ 8C6D              ;       Rutinas_de_impresion en IX.
 267+ 8C6D              ;       Puntero_de_impresion en HL.
 268+ 8C6D              ;       Impacto/Dirección en BC.
 269+ 8C6D
 270+ 8C6D CD 91 8C         call Almacena_disparo
 271+ 8C70 18 0F            jr 6F                                           ; RET.
 272+ 8C72
 273+ 8C72              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8C72              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8C72              ;
 276+ 8C72              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8C72              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8C72              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8C72              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8C72
 281+ 8C72 2A 4B 87     5 ld hl,(Posicion_actual)
 282+ 8C75 CD AE 92     	call NextScan
 283+ 8C78
 284+ 8C78              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8C78              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8C78              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8C78              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8C78
 289+ 8C78 CD 82 8C         call Ajusta_disparo_parte_derecha
 290+ 8C7B
 291+ 8C7B              ; 	No se produce impacto. B="$80"
 292+ 8C7B              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8C7B
 294+ 8C7B 01 80 80     15 ld bc,$8080
 295+ 8C7E
 296+ 8C7E              ; 	LLegados a este punto tendremos:
 297+ 8C7E              ;
 298+ 8C7E              ;       Puntero_objeto_disparo en IY.
 299+ 8C7E              ;       Rutinas_de_impresion en IX.
 300+ 8C7E              ;       Puntero_de_impresion en HL.
 301+ 8C7E              ;       Impacto/Dirección en BC.
 302+ 8C7E
 303+ 8C7E CD 91 8C         call Almacena_disparo
 304+ 8C81
 305+ 8C81 C9           6 ret
 306+ 8C82
 307+ 8C82              ; ----------------------------------------------------------------
 308+ 8C82              ;
 309+ 8C82              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8C82              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8C82              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8C82
 313+ 8C82 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8C83 FE 02            cp 2
 315+ 8C85 38 01            jr c,1F
 316+ 8C87 23               inc hl
 317+ 8C88 C9           1 ret
 318+ 8C89
 319+ 8C89 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8C8A FE 01        	cp 1
 321+ 8C8C 20 01        	jr nz,1F
 322+ 8C8E 2B           	dec hl
 323+ 8C8F 2B           1 dec hl
 324+ 8C90 C9               ret
 325+ 8C91
 326+ 8C91              ; ----------------------------------------------------------------
 327+ 8C91              ;
 328+ 8C91              ;   25/02/23
 329+ 8C91              ;
 330+ 8C91              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8C91              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8C91              ;
 333+ 8C91              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8C91              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8C91
 336+ 8C91              Almacena_disparo
 337+ 8C91
 338+ 8C91 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8C92 F1               pop af
 340+ 8C93 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8C94
 342+ 8C94 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8C95 E6 01            and 1
 344+ 8C97 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8C99              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8C99              ; 	Dispara AMADEUS.
 347+ 8C99
 348+ 8C99              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8C99              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8C99              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8C99              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8C99
 353+ 8C99 C5               push bc
 354+ 8C9A 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8C9D 2A A0 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8CA0 A7               and a
 357+ 8CA1 ED 42            sbc hl,bc
 358+ 8CA3 CC 0E 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8CA6 C1               pop bc
 360+ 8CA7 28 54            jr z,4F
 361+ 8CA9
 362+ 8CA9 2A A0 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8CAC 23               inc hl
 364+ 8CAD 23               inc hl
 365+ 8CAE 22 A0 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8CB1              ;                                                   ; _ Disparo_(+1).
 367+ 8CB1 18 18            jr 2F
 368+ 8CB3
 369+ 8CB3              ; Dispara una entidad.
 370+ 8CB3
 371+ 8CB3 C5           1 push bc
 372+ 8CB4 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8CB7 2A 9E 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8CBA A7               and a
 375+ 8CBB ED 42            sbc hl,bc
 376+ 8CBD CC 07 8A         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8CC0 C1               pop bc
 378+ 8CC1 28 3A            jr z,4F
 379+ 8CC3
 380+ 8CC3 2A 9E 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8CC6 23               inc hl
 382+ 8CC7 23               inc hl
 383+ 8CC8 22 9E 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8CCB              ;                                                   ; _ Disparo_(+1).
 385+ 8CCB CD 45 8A     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8CCE              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8CCE              ;
 388+ 8CCE              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8CCE              ;                                                     Rutinas_de_impresion en IX.
 390+ 8CCE              ;                                                     Puntero_de_impresion en HL.
 391+ 8CCE              ;                                                     Impacto/Dirección en BC.
 392+ 8CCE
 393+ 8CCE 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8CCF 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8CD0 23               inc hl                                          ; _ al siguiente.
 396+ 8CD1 A7               and a
 397+ 8CD2 20 C0            jr nz,3B
 398+ 8CD4
 399+ 8CD4 08               ex af,af
 400+ 8CD5 ED 73 95 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8CD9 F9               ld sp,hl
 402+ 8CDA
 403+ 8CDA DD E5            push ix                                         ; Rutina de impresión.
 404+ 8CDC F5               push af                                         ; Puntero de impresión.
 405+ 8CDD FD E5            push iy                                         ; Puntero objeto.
 406+ 8CDF C5               push bc                                         ; Control.
 407+ 8CE0
 408+ 8CE0 ED 7B 95 87      ld sp,(Stack)
 409+ 8CE4
 410+ 8CE4              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8CE4
 412+ 8CE4 21 86 87     	ld hl,Ctrl_1
 413+ 8CE7 CB C6        	set 0,(hl)
 414+ 8CE9
 415+ 8CE9 DD E5        	push ix
 416+ 8CEB E1               pop hl
 417+ 8CEC F5               push af
 418+ 8CED DD E1            pop ix
 419+ 8CEF
 420+ 8CEF CD A0 7F     	call Guarda_foto_registros
 421+ 8CF2
 422+ 8CF2 21 86 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8CF5 CB 86        	res 0,(hl)
 424+ 8CF7
 425+ 8CF7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8CF7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8CF7
 428+ 8CF7 CD 0E 8A         call Inicia_Puntero_Disparo_Amadeus
 429+ 8CFA CD 07 8A         call Inicia_Puntero_Disparo_Entidades
 430+ 8CFD
 431+ 8CFD C9           4 ret
 432+ 8CFE
 433+ 8CFE              ; ----------------------------------------------------------------
 434+ 8CFE              ;
 435+ 8CFE              ;   4/3/23
 436+ 8CFE              ;
 437+ 8CFE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8CFE              ;   _ al generarse el disparo.
 439+ 8CFE              ;
 440+ 8CFE              ;       "$80" ..... No se produce colisión.
 441+ 8CFE              ;       "$81" ..... Se produce colisión.
 442+ 8CFE
 443+ 8CFE              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8CFE              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8CFE
 446+ 8CFE
 447+ 8CFE FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8D00 E5               push hl                                        ; Puntero de impresión.
 449+ 8D01
 450+ 8D01 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8D03 CD 1F 8D         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8D06
 453+ 8D06 7B               ld a,e
 454+ 8D07 E6 01            and 1
 455+ 8D09 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8D0B
 457+ 8D0B E1               pop hl
 458+ 8D0C E5               push hl
 459+ 8D0D CD AE 92         call NextScan
 460+ 8D10
 461+ 8D10 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8D11 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8D13 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8D15              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8D15 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8D17 CD 1F 8D         call Bucle_2
 467+ 8D1A
 468+ 8D1A 43           2 ld b,e
 469+ 8D1B E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8D1C FD E1            pop iy
 471+ 8D1E C9               ret
 472+ 8D1F
 473+ 8D1F               ; ---------- ----------
 474+ 8D1F
 475+ 8D1F 06 02        Bucle_2 ld b,2
 476+ 8D21 FD 7E 00     2 ld a,(iy)
 477+ 8D24 A6               and (hl)
 478+ 8D25 28 02            jr z,1F
 479+ 8D27 1E 81            ld e,$81
 480+ 8D29 23           1 inc hl
 481+ 8D2A FD 23            inc iy
 482+ 8D2C 10 F3            djnz 2B
 483+ 8D2E C9               ret
 484+ 8D2F
 485+ 8D2F              ; -------------------------------------------------------------------------------------------------------------
 486+ 8D2F              ;
 487+ 8D2F              ;   11/04/23
 488+ 8D2F              ;
 489+ 8D2F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8D2F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8D2F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8D2F              ;
 493+ 8D2F              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8D2F
 495+ 8D2F              Compara_coordenadas_X
 496+ 8D2F
 497+ 8D2F              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8D2F              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8D2F
 500+ 8D2F              ; Preparamos registros:
 501+ 8D2F
 502+ 8D2F 21 4F 87         ld hl,Filas+6
 503+ 8D32 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8D33 23               inc hl
 505+ 8D34 23               inc hl
 506+ 8D35 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8D36 43               ld b,e
 508+ 8D37 21 5D 87         ld hl,Filas+20
 509+ 8D3A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8D3B 21 AA 87         ld hl,Coordenadas_X_Entidad
 511+ 8D3E CD 4F 8F         call Guarda_coordenadas_X
 512+ 8D41
 513+ 8D41              ; Preparamos registros:
 514+ 8D41
 515+ 8D41 21 7C 84         ld hl,Amadeus_db+6
 516+ 8D44 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8D45 23               inc hl
 518+ 8D46 23               inc hl
 519+ 8D47 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8D48 7B               ld a,e
 521+ 8D49 08               ex af,af'
 522+ 8D4A 21 8A 84         ld hl,Amadeus_db+20
 523+ 8D4D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8D4E 21 A7 87         ld hl,Coordenadas_X_Amadeus
 525+ 8D51 CD 4F 8F         call Guarda_coordenadas_X
 526+ 8D54
 527+ 8D54              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8D54              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8D54
 530+ 8D54 04               inc b
 531+ 8D55 05               dec b
 532+ 8D56 28 04            jr z,1F
 533+ 8D58 06 03            ld b,3
 534+ 8D5A 18 02            jr 2F
 535+ 8D5C 06 02        1 ld b,2
 536+ 8D5E 08           2 ex af,af'
 537+ 8D5F 3C               inc a
 538+ 8D60 3D               dec a
 539+ 8D61 28 04            jr z,5F
 540+ 8D63 0E 03            ld c,3
 541+ 8D65 18 02            jr 6F
 542+ 8D67 0E 02        5 ld c,2
 543+ 8D69 79           6 ld a,c
 544+ 8D6A 08               ex af,af'
 545+ 8D6B 11 AA 87         ld de,Coordenadas_X_Entidad
 546+ 8D6E 1A           4 ld a,(de)
 547+ 8D6F 21 A7 87         ld hl,Coordenadas_X_Amadeus
 548+ 8D72 BE           3 cp (hl)
 549+ 8D73 28 0E            jr z,7F
 550+ 8D75 23               inc hl
 551+ 8D76 0D               dec c
 552+ 8D77 20 F9            jr nz,3B
 553+ 8D79 13               inc de
 554+ 8D7A 08               ex af,af'
 555+ 8D7B 4F               ld c,a
 556+ 8D7C 08               ex af,af'
 557+ 8D7D 10 EF            djnz 4B
 558+ 8D7F
 559+ 8D7F              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8D7F
 561+ 8D7F CD 8E 8F     8 call Limpia_Coordenadas_X
 562+ 8D82 C9               ret
 563+ 8D83
 564+ 8D83              7
 565+ 8D83 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8D85 32 62 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8D88 21 A2 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8D8B CB D6            set 2,(hl)
 569+ 8D8D 18 F0            jr 8B
 570+ 8D8F
 571+ 8D8F              ; -----------------------------------------------------------------------
 572+ 8D8F              ;
 573+ 8D8F              ;   17/04/23
 574+ 8D8F              ;
 575+ 8D8F
 576+ 8D8F              Detecta_colision_nave_entidad
 577+ 8D8F
 578+ 8D8F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8D8F
 580+ 8D8F 2A 4B 87         ld hl,(Posicion_actual)
 581+ 8D92 CD 13 92         call Calcula_puntero_de_impresion
 582+ 8D95
 583+ 8D95              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8D95              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8D95
 586+ 8D95 DD E5            push ix
 587+ 8D97 E1               pop hl
 588+ 8D98 E5               push hl
 589+ 8D99
 590+ 8D99              ; ----- ----- -----
 591+ 8D99 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8D9B 06 0A            ld b,10
 593+ 8D9D CD CD 8D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8DA0 7B               ld a,e
 595+ 8DA1 FE 05            cp 5
 596+ 8DA3 38 0E            jr c,3F
 597+ 8DA5
 598+ 8DA5              ; LLegados a este punto:
 599+ 8DA5              ;
 600+ 8DA5              ;   HAY COLISIÓN !!!!!.
 601+ 8DA5              ;
 602+ 8DA5              ;   .db (Impacto) de Amadeus a "1".
 603+ 8DA5              ;   SET el bit3 de (Impacto2).
 604+ 8DA5              ;
 605+ 8DA5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8DA5
 607+ 8DA5 21 8F 84         ld hl,Amadeus_db+25
 608+ 8DA8 36 01            ld (hl),1
 609+ 8DAA 21 A2 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8DAD CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8DAF CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8DB1 18 18            jr 1F
 613+ 8DB3
 614+ 8DB3              ; -----
 615+ 8DB3
 616+ 8DB3 E1           3 pop hl
 617+ 8DB4 CD AE 92         call NextScan
 618+ 8DB7 E5               push hl
 619+ 8DB8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8DB9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8DBB 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8DBD 30 0C            jr nc,1F
 623+ 8DBF              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8DBF 10 DC            djnz 2B
 625+ 8DC1
 626+ 8DC1              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8DC1
 628+ 8DC1              ; LLegados a este punto:
 629+ 8DC1              ;
 630+ 8DC1              ;   NO HAY COLISIÓN !!!!!.
 631+ 8DC1              ;
 632+ 8DC1              ;   .db (Impacto) de Amadeus a "0".
 633+ 8DC1              ;   RES el bit2 de (Impacto2).
 634+ 8DC1              ;
 635+ 8DC1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8DC1              ;   Lo colocamos a "0".
 637+ 8DC1
 638+ 8DC1 21 A2 87         ld hl,Impacto2
 639+ 8DC4 CB 96            res 2,(hl)
 640+ 8DC6 2A A3 87         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8DC9 36 00            ld (hl),0
 642+ 8DCB
 643+ 8DCB E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8DCC C9               ret
 645+ 8DCD
 646+ 8DCD               ; ---------- ----------
 647+ 8DCD
 648+ 8DCD C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8DCE 3A 4A 87         ld a,(Columns)
 650+ 8DD1 47               ld b,a
 651+ 8DD2 FD 7E 00     2 ld a,(iy)
 652+ 8DD5 BE               cp (hl)
 653+ 8DD6 28 01            jr z,1F
 654+ 8DD8
 655+ 8DD8 1C               inc e
 656+ 8DD9
 657+ 8DD9 23           1 inc hl
 658+ 8DDA FD 23            inc iy
 659+ 8DDC 10 F4            djnz 2B
 660+ 8DDE C1               pop bc
 661+ 8DDF C9               ret
 662+ 8DE0
 663+ 8DE0              ; -------------------------------------------------------------------------------------------------------------
 664+ 8DE0              ;
 665+ 8DE0              ;   13/03/23
 666+ 8DE0              ;
 667+ 8DE0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8DE0              ;
 669+ 8DE0              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8DE0
 671+ 8DE0 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8DE3 7E               ld a,(hl)
 673+ 8DE4 A7               and a
 674+ 8DE5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8DE6
 676+ 8DE6 44               ld b,h
 677+ 8DE7 4D               ld c,l
 678+ 8DE8 2A 9B 87         ld hl,(Stack_snapshot_disparos)
 679+ 8DEB E5               push hl
 680+ 8DEC A7               and a
 681+ 8DED ED 42            sbc hl,bc
 682+ 8DEF E5               push hl
 683+ 8DF0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8DF1
 685+ 8DF1 E1               pop hl
 686+ 8DF2 54               ld d,h
 687+ 8DF3 5D               ld e,l
 688+ 8DF4 1B               dec de
 689+ 8DF5 ED B8            lddr                                                ; Limpiamos.
 690+ 8DF7
 691+ 8DF7 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8DFA 22 9B 87         ld (Stack_snapshot_disparos),hl
 693+ 8DFD
 694+ 8DFD C9               ret
 695+ 8DFE
 696+ 8DFE              ; -------------------------------------------------------------------------------------------------------------
 697+ 8DFE              ;
 698+ 8DFE              ;   28/03/23
 699+ 8DFE              ;
 700+ 8DFE
 701+ 8DFE 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8E01 2A A0 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8E04
 704+ 8E04 CD 45 8A     2 call Extrae_address
 705+ 8E07 7E               ld a,(hl)
 706+ 8E08 A7               and a
 707+ 8E09 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8E0B
 709+ 8E0B              ; ----- ----- ----- ----- ----- -----
 710+ 8E0B
 711+ 8E0B C5               push bc
 712+ 8E0C CD C8 8E         call foto_disparo_a_borrar
 713+ 8E0F
 714+ 8E0F              ; Existe colisión con este disparo???
 715+ 8E0F
 716+ 8E0F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8E10 7E               ld a,(hl)
 718+ 8E11 2B               dec hl
 719+ 8E12 E6 01            and 1
 720+ 8E14 28 1D            jr z,9F
 721+ 8E16
 722+ 8E16              ;   En este punto:
 723+ 8E16              ;
 724+ 8E16              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8E16              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8E16              ;   _con la entidad).
 727+ 8E16              ;
 728+ 8E16              ;   Disparo_2A defw 0                                ; Control.
 729+ 8E16              ;    defw 0                                          ; Puntero objeto.
 730+ 8E16              ;    defw 0                                          ; Puntero de impresión.
 731+ 8E16              ;    defw 0                                          ; Rutina de impresión.
 732+ 8E16
 733+ 8E16 E5               push hl
 734+ 8E17
 735+ 8E17 06 04            ld b,4
 736+ 8E19 23           19 inc hl
 737+ 8E1A 10 FD            djnz 19B
 738+ 8E1C
 739+ 8E1C CD 45 8A         call Extrae_address
 740+ 8E1F CD D9 98         call Genera_coordenadas_disparo
 741+ 8E22
 742+ 8E22              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8E22
 744+ 8E22 21 A5 87         ld hl,Coordenadas_disparo_certero
 745+ 8E25 72               ld (hl),d
 746+ 8E26 23               inc hl
 747+ 8E27 73               ld (hl),e
 748+ 8E28
 749+ 8E28              ; Elimino el disparo de la base de datos.
 750+ 8E28
 751+ 8E28 E1               pop hl
 752+ 8E29 CD 44 8F         call Elimina_disparo_de_base_de_datos
 753+ 8E2C 21 A2 87         ld hl,Impacto2
 754+ 8E2F CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8E31
 756+ 8E31 18 06            jr 11F
 757+ 8E33
 758+ 8E33 CD F1 8E     9 call Mueve_disparo
 759+ 8E36 CD C8 8E         call foto_disparo_a_borrar
 760+ 8E39
 761+ 8E39 C1           11 pop bc
 762+ 8E3A 18 04            jr 7F
 763+ 8E3C
 764+ 8E3C              ; ----- ----- ----- ----- ----- -----
 765+ 8E3C
 766+ 8E3C ED 42        1 sbc hl,bc
 767+ 8E3E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8E40 2A A0 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8E43 23               inc hl
 770+ 8E44 23               inc hl
 771+ 8E45 22 A0 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8E48 18 BA            jr 2B
 773+ 8E4A CD 0E 8A     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8E4D
 775+ 8E4D 01 66 84         ld bc,Disparo_11
 776+ 8E50 2A 9E 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8E53
 778+ 8E53 CD 45 8A     5 call Extrae_address
 779+ 8E56 7E               ld a,(hl)
 780+ 8E57 A7               and a
 781+ 8E58 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8E5A
 783+ 8E5A              ; ----- ----- ----- ----- ----- -----
 784+ 8E5A
 785+ 8E5A C5               push bc
 786+ 8E5B CD C8 8E         call foto_disparo_a_borrar
 787+ 8E5E
 788+ 8E5E              ; Existe colisión con este disparo???
 789+ 8E5E
 790+ 8E5E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8E5F 7E               ld a,(hl)
 792+ 8E60 2B               dec hl
 793+ 8E61 E6 01            and 1
 794+ 8E63 28 48            jr z,10F
 795+ 8E65
 796+ 8E65              ; La colisión se produce con Amadeus???
 797+ 8E65              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8E65
 799+ 8E65 E5               push hl
 800+ 8E66
 801+ 8E66 06 04            ld b,4
 802+ 8E68 23           16 inc hl
 803+ 8E69 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8E6B CD 45 8A         call Extrae_address
 805+ 8E6E CD D9 98         call Genera_coordenadas_disparo
 806+ 8E71
 807+ 8E71 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8E72 FE 16            cp $16
 809+ 8E74 38 22            jr c,15F
 810+ 8E76
 811+ 8E76              ; (Colisiones en filas 16 y 17).
 812+ 8E76
 813+ 8E76 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8E77
 815+ 8E77              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8E77
 817+ 8E77 21 7C 84         ld hl,Amadeus_db+6
 818+ 8E7A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8E7B 23               inc hl
 820+ 8E7C 23               inc hl
 821+ 8E7D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8E7E 21 8A 84         ld hl,Amadeus_db+20
 823+ 8E81 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8E82 21 A7 87         ld hl,Coordenadas_X_Amadeus
 825+ 8E85 CD 4F 8F         call Guarda_coordenadas_X
 826+ 8E88
 827+ 8E88 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8E89
 829+ 8E89              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8E89
 831+ 8E89 06 03            ld b,3
 832+ 8E8B 21 A7 87         ld hl,Coordenadas_X_Amadeus
 833+ 8E8E 7E           18 ld a,(hl)
 834+ 8E8F BA               cp d
 835+ 8E90 20 03            jr nz,17F
 836+ 8E92
 837+ 8E92              ; Colisión Amadeus !!!!!!!!!!
 838+ 8E92
 839+ 8E92 E1               pop hl
 840+ 8E93 18 09            jr 14F
 841+ 8E95
 842+ 8E95 23           17 inc hl
 843+ 8E96 10 F6            djnz 18B
 844+ 8E98
 845+ 8E98              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8E98              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8E98
 848+ 8E98 E1           15 pop hl
 849+ 8E99 23               inc hl
 850+ 8E9A 35               dec (hl)
 851+ 8E9B 2B               dec hl
 852+ 8E9C 18 0F            jr 10F
 853+ 8E9E
 854+ 8E9E              ; -----------------------debug
 855+ 8E9E
 856+ 8E9E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8E9E              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8E9E
 859+ 8E9E E5           14 push hl
 860+ 8E9F CD 44 8F         call Elimina_disparo_de_base_de_datos
 861+ 8EA2 21 A2 87         ld hl,Impacto2
 862+ 8EA5 CB CE            set 1,(hl)
 863+ 8EA7 CD 8E 8F         call Limpia_Coordenadas_X
 864+ 8EAA
 865+ 8EAA E1               pop hl
 866+ 8EAB 18 06            jr 12F
 867+ 8EAD
 868+ 8EAD CD F1 8E     10 call Mueve_disparo
 869+ 8EB0 CD C8 8E         call foto_disparo_a_borrar
 870+ 8EB3 C1           12 pop bc
 871+ 8EB4
 872+ 8EB4 18 04            jr 8F
 873+ 8EB6
 874+ 8EB6              ; ----- ----- ----- ----- ----- -----
 875+ 8EB6
 876+ 8EB6 ED 42        4 sbc hl,bc
 877+ 8EB8 28 0A            jr z,6F
 878+ 8EBA
 879+ 8EBA 2A 9E 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8EBD 23               inc hl
 881+ 8EBE 23               inc hl
 882+ 8EBF 22 9E 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8EC2 18 8F            jr 5B
 884+ 8EC4
 885+ 8EC4 CD 07 8A     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8EC7 C9               ret
 887+ 8EC8
 888+ 8EC8              ; ------------------------------------------------------------------
 889+ 8EC8
 890+ 8EC8              foto_disparo_a_borrar
 891+ 8EC8
 892+ 8EC8 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8EC9 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8ECA C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8ECB
 896+ 8ECB E5               push hl
 897+ 8ECC 23               inc hl
 898+ 8ECD 23               inc hl
 899+ 8ECE ED 73 95 87      ld (Stack),sp
 900+ 8ED2 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8ED3 FD E1            pop iy
 902+ 8ED5 DD E1            pop ix
 903+ 8ED7 E1               pop hl
 904+ 8ED8 ED 7B 95 87      ld sp,(Stack)
 905+ 8EDC 3A 86 87         ld a,(Ctrl_1)
 906+ 8EDF CB C7            set 0,a
 907+ 8EE1 32 86 87         ld (Ctrl_1),a
 908+ 8EE4 CD A0 7F         call Guarda_foto_registros
 909+ 8EE7 3A 86 87         ld a,(Ctrl_1)
 910+ 8EEA CB 87            res 0,a
 911+ 8EEC 32 86 87         ld (Ctrl_1),a
 912+ 8EEF E1               pop hl
 913+ 8EF0 C9               ret
 914+ 8EF1
 915+ 8EF1 E5           Mueve_disparo push hl
 916+ 8EF2 7E               ld a,(hl)
 917+ 8EF3 06 04            ld b,4
 918+ 8EF5 23           1 inc hl
 919+ 8EF6 10 FD            djnz 1B
 920+ 8EF8
 921+ 8EF8              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8EF8
 923+ 8EF8 CD 45 8A         call Extrae_address
 924+ 8EFB
 925+ 8EFB E6 01            and 1
 926+ 8EFD 28 2B            jr z,2F
 927+ 8EFF
 928+ 8EFF              ; Disparo hacia arriba, (Amadeus).
 929+ 8EFF
 930+ 8EFF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8EFF              ; _ de la dificultad.
 932+ 8EFF
 933+ 8EFF CD BD 92         call PreviousScan
 934+ 8F02 CD BD 92         call PreviousScan
 935+ 8F05 CD BD 92         call PreviousScan
 936+ 8F08
 937+ 8F08              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8F08
 939+ 8F08 7C               ld a,h
 940+ 8F09 FE 40            cp $40
 941+ 8F0B 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8F0D
 943+ 8F0D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8F0D
 945+ 8F0D EB               ex de,hl
 946+ 8F0E 06 04            ld b,4
 947+ 8F10 2B           6 dec hl
 948+ 8F11 10 FD            djnz 6B
 949+ 8F13
 950+ 8F13 CD 44 8F         call Elimina_disparo_de_base_de_datos
 951+ 8F16 E1               pop hl
 952+ 8F17 18 10            jr 7F
 953+ 8F19
 954+ 8F19              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8F19
 956+ 8F19 D5           3 push de
 957+ 8F1A C5               push bc
 958+ 8F1B
 959+ 8F1B CD FE 8C         call Comprueba_Colision
 960+ 8F1E
 961+ 8F1E              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8F1E
 963+ 8F1E 78               ld a,b
 964+ 8F1F
 965+ 8F1F C1               pop bc
 966+ 8F20 D1               pop de
 967+ 8F21
 968+ 8F21 EB               ex de,hl
 969+ 8F22
 970+ 8F22 73               ld (hl),e
 971+ 8F23 23               inc hl
 972+ 8F24 72               ld (hl),d
 973+ 8F25
 974+ 8F25 E1           4 pop hl
 975+ 8F26 23               inc hl
 976+ 8F27 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8F28 2B               dec hl
 978+ 8F29 C9           7 ret
 979+ 8F2A
 980+ 8F2A              ; Disparo hacia abajo, (Entidad).
 981+ 8F2A
 982+ 8F2A              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8F2A              ; _ de la dificultad.
 984+ 8F2A
 985+ 8F2A CD AE 92     2 call NextScan
 986+ 8F2D CD AE 92         call NextScan
 987+ 8F30 CD AE 92         call NextScan
 988+ 8F33
 989+ 8F33              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8F33
 991+ 8F33 7C               ld a,h
 992+ 8F34 FE 58            cp $58
 993+ 8F36 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8F38
 995+ 8F38 EB               ex de,hl
 996+ 8F39 06 04            ld b,4
 997+ 8F3B 2B           5 dec hl
 998+ 8F3C 10 FD            djnz 5B
 999+ 8F3E
1000+ 8F3E CD 44 8F         call Elimina_disparo_de_base_de_datos
1001+ 8F41 E1               pop hl
1002+ 8F42 18 E5            jr 7B
1003+ 8F44
1004+ 8F44              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8F44
1006+ 8F44 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8F47 AF               xor a
1008+ 8F48 77               ld (hl),a
1009+ 8F49 54               ld d,h
1010+ 8F4A 5D               ld e,l
1011+ 8F4B 13               inc de
1012+ 8F4C ED B0            ldir
1013+ 8F4E C9               ret
1014+ 8F4F
1015+ 8F4F              ; -----------------------------------------------------------------
1016+ 8F4F              ;
1017+ 8F4F              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8F4F              ;
1019+ 8F4F              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8F4F              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8F4F              ;
1022+ 8F4F              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8F4F              ;
1024+ 8F4F              ;   INPUTS:
1025+ 8F4F              ;
1026+ 8F4F              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8F4F              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8F4F              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8F4F
1030+ 8F4F              ;   MODIFICA: A, HL, DE y C
1031+ 8F4F
1032+ 8F4F 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8F50 79               ld a,c
1034+ 8F51 E6 01            and 1
1035+ 8F53 20 03            jr nz,1F
1036+ 8F55 14               inc d
1037+ 8F56 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8F58
1039+ 8F58              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8F58              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8F58
1042+ 8F58 15           1 dec d
1043+ 8F59 23           2 inc hl
1044+ 8F5A 72               ld (hl),d
1045+ 8F5B
1046+ 8F5B 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8F5C A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8F5D C8               ret z
1049+ 8F5E
1050+ 8F5E AF               xor a
1051+ 8F5F 5F               ld e,a
1052+ 8F60 18 ED            jr Guarda_coordenadas_X
1053+ 8F62
1054+ 8F62              ; -----------------------------------------------------------------
1055+ 8F62              ;
1056+ 8F62              ;   12/04/23
1057+ 8F62              ;
1058+ 8F62
1059+ 8F62 3A A2 87     Selector_de_impactos ld a,(Impacto2)
1060+ 8F65 A7               and a
1061+ 8F66 C8               ret z
1062+ 8F67
1063+ 8F67 FE 04            cp 4
1064+ 8F69 20 09            jr nz,1F
1065+ 8F6B
1066+ 8F6B
1067+ 8F6B              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8F6B
1069+ 8F6B CD 8F 8D         call Detecta_colision_nave_entidad
1070+ 8F6E
1071+ 8F6E 21 A2 87         ld hl,Impacto2
1072+ 8F71 CB 5E            bit 3,(hl)
1073+ 8F73 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8F74
1075+ 8F74              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8F74              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8F74
1078+ 8F74 21 A2 87     1 ld hl,Impacto2
1079+ 8F77 CB 4E            bit 1,(hl)
1080+ 8F79 28 07            jr z,2F
1081+ 8F7B
1082+ 8F7B 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8F7E 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8F80 18 0B            jr 3F
1085+ 8F82
1086+ 8F82 21 A2 87     2 ld hl,Impacto2
1087+ 8F85 CB 46            bit 0,(hl)
1088+ 8F87 C8               ret z
1089+ 8F88
1090+ 8F88              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8F88
1092+ 8F88 21 86 87         ld hl,Ctrl_1
1093+ 8F8B CB D6            set 2,(hl)
1094+ 8F8D
1095+ 8F8D C9           3 ret
1096+ 8F8E
1097+ 8F8E              ; -----------------------------------------------------------------
1098+ 8F8E              ;
1099+ 8F8E              ;   16/04/23
1100+ 8F8E              ;
1101+ 8F8E
1102+ 8F8E AF           Limpia_Coordenadas_X xor a
1103+ 8F8F 06 06            ld b,6
1104+ 8F91 21 A7 87         ld hl,Coordenadas_X_Amadeus
1105+ 8F94 77           1 ld (hl),a
1106+ 8F95 23               inc hl
1107+ 8F96 10 FC            djnz 1B
1108+ 8F98 C9               ret
1109+ 8F99
1110+ 8F99              ; -----------------------------------------------------------------
1111+ 8F99              ;
1112+ 8F99              ;   25/04/23
1113+ 8F99              ;
1114+ 8F99
1115+ 8F99              Determina_resultado_comparativa
1116+ 8F99
1117+ 8F99              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8F99              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8F99              ;
1120+ 8F99              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8F99              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8F99              ;
1123+ 8F99              ;   SBC HL,DE
1124+ 8F99
1125+ 8F99 7C               ld a,h
1126+ 8F9A 06 00            ld b,0
1127+ 8F9C
1128+ 8F9C CD AC 8F         call Compara_cositas
1129+ 8F9F
1130+ 8F9F 04               inc b
1131+ 8FA0 05               dec b
1132+ 8FA1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8FA2
1134+ 8FA2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8FA3 06 00            ld b,0
1136+ 8FA5
1137+ 8FA5 CD AC 8F         call Compara_cositas
1138+ 8FA8 18 01            jr 2F
1139+ 8FAA
1140+ 8FAA 04           1 inc b
1141+ 8FAB C9           2 ret
1142+ 8FAC
1143+ 8FAC A7           Compara_cositas and a
1144+ 8FAD 28 17            jr z,1F
1145+ 8FAF
1146+ 8FAF FE FD            cp $fd
1147+ 8FB1 28 13            jr z,1F
1148+ 8FB3 FE FE            cp $fe
1149+ 8FB5 28 0F            jr z,1F
1150+ 8FB7 FE FF            cp $ff
1151+ 8FB9 28 0B            jr z,1F
1152+ 8FBB FE 01            cp $01
1153+ 8FBD 28 07            jr z,1F
1154+ 8FBF FE 02            cp $02
1155+ 8FC1 28 03            jr z,1F
1156+ 8FC3 FE 03            cp $03
1157+ 8FC5 C0               ret nz
1158+ 8FC6
1159+ 8FC6 04           1 inc b
1160+ 8FC7 C9               ret
1161+ 8FC8
# file closed: Disparo.asm
1164  8FC8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FC8              ; ******************************************************************************************************************************************************************************************
   2+ 8FC8              ;
   3+ 8FC8              ; 01/23
   4+ 8FC8              ;
   5+ 8FC8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FC8
   7+ 8FC8 CD A2 92     Draw call Prepara_draw
   8+ 8FCB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8FCC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8FCD 28 05        	jr z,2F
  11+ 8FCF
  12+ 8FCF 3A 5D 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8FD2 18 0C        	jr 1F
  14+ 8FD4 2A 5B 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8FD7 22 4B 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8FDA CD 69 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8FDD              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8FDD CD FC 99     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8FE0 3A 77 87     1 ld a,(Ctrl_0)
  20+ 8FE3 CB 6F        	bit 5,a
  21+ 8FE5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8FE7
  23+ 8FE7 CD FF 8F     	call Comprueba_limite_horizontal
  24+ 8FEA CD 8F 90     	call Comprueba_limite_vertical
  25+ 8FED
  26+ 8FED              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8FED
  28+ 8FED CD DC 91     3 call calcula_CColumnass
  29+ 8FF0 CD 13 92     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8FF3 CD 68 92     	call Define_rutina_de_impresion
  31+ 8FF6
  32+ 8FF6 3A 77 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8FF9 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8FFB 32 77 87     	ld (Ctrl_0),a
  35+ 8FFE
  36+ 8FFE C9           	ret
  37+ 8FFF
  38+ 8FFF              ; *******************************************************************************************************************************************************************************************
  39+ 8FFF              ;	21/01/23
  40+ 8FFF              ;
  41+ 8FFF              ; 	Comprueba_limite_horizontal.
  42+ 8FFF              ;
  43+ 8FFF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8FFF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8FFF              ;
  46+ 8FFF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8FFF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8FFF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8FFF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8FFF
  51+ 8FFF
  52+ 8FFF
  53+ 8FFF 3A 77 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9002 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9004 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9006 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9008 32 77 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 900B 18 09            jr 6F
  59+ 900D CB 5F        1 bit 3,a
  60+ 900F 28 0A            jr z,2F
  61+ 9011 E6 F7            and $f7
  62+ 9013 32 77 87         ld (Ctrl_0),a
  63+ 9016 CD 69 91     6 call Inicializacion
  64+ 9019 18 5B            jr 5F
  65+ 901B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 901C
  67+ 901C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 901C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 901C
  70+ 901C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 901D 2A 82 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9020 CD 6E 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9023 67           	ld h,a
  74+ 9024 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9025 CD 6E 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9028 67           	ld h,a
  77+ 9029 A7           	and a
  78+ 902A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 902C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 902D 3A 5D 87     	ld a,(Cuad_objeto)
  81+ 9030 FE 02        	cp 2
  82+ 9032 38 1E        	jr c,3F
  83+ 9034 28 1C        	jr z,3F
  84+ 9036 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9037 28 23            jr z,7F
  86+ 9039 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 903B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 903D E1           	pop hl
  89+ 903E
  90+ 903E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 903E              ; _para indicar con E="2" en caso necesario.
  92+ 903E
  93+ 903E E5               push hl
  94+ 903F C5               push bc
  95+ 9040 CD 6E 95     	call calcula_tercio
  96+ 9043 FE 01        	cp 1
  97+ 9045 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9047 CD 77 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 904A 28 26            jr z,9F
 100+ 904C 38 24            jr c,9F
 101+ 904E 1E 00        11 ld e,0
 102+ 9050 18 22            jr 8F
 103+ 9052 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9053 28 07        	jr z, 7F
 105+ 9055 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9057 1E 00         	ld e,0
 107+ 9059 E1           	pop hl
 108+ 905A 18 04        	jr 4F
 109+ 905C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 905E 18 15            jr 10F
 111+ 9060
 112+ 9060              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9060              ; _para indicar con E="2" en caso necesario.
 114+ 9060
 115+ 9060 E5           4 push hl
 116+ 9061 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9062 CD 6E 95     	call calcula_tercio
 118+ 9065 FE 01        	cp 1
 119+ 9067 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9069 CD 77 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 906C 28 04            jr z,9F
 122+ 906E 30 02            jr nc,9F
 123+ 9070 18 02        	jr 8F
 124+ 9072 1E 02        9 ld e,2
 125+ 9074 C1           8 pop bc
 126+ 9075 E1           10 pop hl
 127+ 9076 C9           5 ret
 128+ 9077
 129+ 9077              ; --------------------
 130+ 9077              ;
 131+ 9077              ; 25/08/22
 132+ 9077
 133+ 9077 CD 6E 95     Comprueba_centro call calcula_tercio
 134+ 907A 67               ld h,a
 135+ 907B 08           	ex af,af
 136+ 907C FE 02        	cp 2
 137+ 907E 38 07        	jr c,1F
 138+ 9080 28 05        	jr z,1F
 139+ 9082 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9085 18 03        	jr 2F
 141+ 9087 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 908A 08           2 ex af,af
 143+ 908B A7               and a
 144+ 908C ED 42            sbc hl,bc
 145+ 908E C9               ret
 146+ 908F
 147+ 908F              ; *********************************************************************************************************************************************************************************************
 148+ 908F              ;
 149+ 908F              ;   16/8/22
 150+ 908F              ;
 151+ 908F              ;	Comprueba_limite_vertical
 152+ 908F              ;
 153+ 908F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 908F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 908F              ;
 156+ 908F
 157+ 908F 2A 4B 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9092 7D           	ld a,l
 159+ 9093 E6 1F        	and $1F
 160+ 9095 57           	ld d,a
 161+ 9096 3A 84 87     	ld a,(Limite_vertical)
 162+ 9099 BA           	cp d 											; Límite - Posición.
 163+ 909A 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 909B 3A 5D 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 909E CB 47        	bit 0,a
 166+ 90A0 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 90A2
 168+ 90A2              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 90A2
 170+ 90A2 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 90A3 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 90A5
 173+ 90A5              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 90A5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 90A5
 176+ 90A5 3A 4F 87         ld a,(Coordenada_X)
 177+ 90A8 16 0F            ld d,Centro_izquierda
 178+ 90AA A7               and a
 179+ 90AB 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 90AC 28 1E            jr z,3F
 181+ 90AE 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 90B0              ;                                                    ; _salimos sin modificar nada.
 183+ 90B0 18 0E            jr 2F
 184+ 90B2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 90B3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 90B5
 187+ 90B5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 90B5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 90B5
 190+ 90B5 3A 4F 87         ld a,(Coordenada_X)
 191+ 90B8 16 10            ld d,Centro_derecha
 192+ 90BA A7               and a
 193+ 90BB 92               sub d
 194+ 90BC 28 0E            jr z,3F
 195+ 90BE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 90C0              ;                                                    ; _salimos sin modificar nada.
 197+ 90C0 CB 43        2 bit 0,e
 198+ 90C2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 90C4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 90C5 CD 59 91         call Modificaccionne
 201+ 90C8 C1           	pop bc
 202+ 90C9 CD 69 91         call Inicializacion
 203+ 90CC C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 90CD
 205+ 90CD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 90CD
 207+ 90CD C5           4 push bc
 208+ 90CE 01 4A 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 90D1 0A           	ld a,(bc)
 210+ 90D2 3D           	dec a
 211+ 90D3 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 90D4 7D           	ld a,l
 213+ 90D5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 90D6 CB 47        	bit 0,a
 215+ 90D8 28 03        	jr z,5F
 216+ 90DA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 90DB 18 2E        	jr 7F
 218+ 90DD
 219+ 90DD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 90DD
 221+ 90DD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 90DE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 90DF 3A 77 87     	ld a,(Ctrl_0)
 224+ 90E2 CB 4F        	bit 1,a
 225+ 90E4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 90E6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 90E7
 228+ 90E7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 90E7
 230+ 90E7 1C               inc e
 231+ 90E8 1D               dec e
 232+ 90E9 20 07            jr nz,12F
 233+ 90EB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 90EC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 90ED 22 4B 87     	ld (Posicion_actual),hl
 236+ 90F0 18 44        13 jr 9F
 237+ 90F2 CB 43        12 bit 0,e
 238+ 90F4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 90F6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 90F6 C1           	pop bc
 241+ 90F7 18 D3        	jr 3B
 242+ 90F9 80           14 add b
 243+ 90FA 6F               ld l,a
 244+ 90FB 22 4B 87     	ld (Posicion_actual),hl
 245+ 90FE CD 59 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9101 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9103 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9105 32 77 87         ld (Ctrl_0),a
 249+ 9108 F1           	pop af
 250+ 9109 18 2B        	jr 9F
 251+ 910B
 252+ 910B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 910B
 254+ 910B F5           7 push af
 255+ 910C 3A 77 87     	ld a,(Ctrl_0)
 256+ 910F CB 47        	bit 0,a
 257+ 9111 20 1D        	jr nz,8F
 258+ 9113 F1           	pop af
 259+ 9114
 260+ 9114              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9114
 262+ 9114 1C           	inc e
 263+ 9115 1D               dec e
 264+ 9116 20 07            jr nz,10F
 265+ 9118 90           	sub b
 266+ 9119 6F               ld l,a
 267+ 911A 22 4B 87     	ld (Posicion_actual),hl
 268+ 911D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 911F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 911F CB 43        10 bit 0,e
 271+ 9121 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9123              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9123 C1           	pop bc
 274+ 9124 18 A6        	jr 3B
 275+ 9126 90           16 sub b
 276+ 9127 6F               ld l,a
 277+ 9128 22 4B 87     	ld (Posicion_actual),hl
 278+ 912B CD 59 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 912E 18 06            jr 9F
 280+ 9130 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9132 32 77 87         ld (Ctrl_0),a
 282+ 9135 F1           	pop af
 283+ 9136 C1           9 pop bc
 284+ 9137 1E 00        	ld e,0
 285+ 9139 CD 69 91         call Inicializacion
 286+ 913C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 913D 08           	ex af,af
 288+ 913E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 913F 18 8B            jr 3B
 290+ 9141
 291+ 9141              ; --------------------
 292+ 9141
 293+ 9141 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9143 CD BD 92     1 call PreviousScan
 295+ 9146 10 FB            djnz 1B
 296+ 9148 22 4B 87     	ld (Posicion_actual),hl
 297+ 914B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 914C C9           	ret
 299+ 914D
 300+ 914D              ; --------------------
 301+ 914D
 302+ 914D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 914F CD AE 92     1 call NextScan
 304+ 9152 10 FB            djnz 1B
 305+ 9154 22 4B 87     	ld (Posicion_actual),hl
 306+ 9157 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9158 C9           	ret
 308+ 9159
 309+ 9159              ; --------------------
 310+ 9159              ;
 311+ 9159              ;	22/01/23
 312+ 9159              ;
 313+ 9159              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9159              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9159              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9159
 317+ 9159
 318+ 9159              Modificaccionne
 319+ 9159
 320+ 9159 3A 5D 87     	ld a,(Cuad_objeto)
 321+ 915C FE 02        	cp 2
 322+ 915E CC 41 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9161 DC 41 91         call c,Modifica_Pos_actual
 324+ 9164 C8           	ret z
 325+ 9165 CD 4D 91         call Modifica_Pos_actual2
 326+ 9168 C9               ret
 327+ 9169
 328+ 9169              ; *************************************************************************************************************************************************************************************************
 329+ 9169              ;
 330+ 9169              ;	13/8/22
 331+ 9169              ;
 332+ 9169              ;	Inicializacion
 333+ 9169              ;
 334+ 9169              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9169              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9169              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9169              ;
 338+ 9169              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9169              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9169              ;	_ desaparece/aparece.
 341+ 9169
 342+ 9169              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9169              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9169              ;
 345+ 9169              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9169              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9169              ; 		   [E] ="0"
 348+ 9169
 349+ 9169              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9169
 351+ 9169 CD 6E 95     Inicializacion call calcula_tercio
 352+ 916C 28 36        	jr z,primit
 353+ 916E E6 02        	and 2
 354+ 9170 20 07        	jr nz,segmit
 355+ 9172 7D           	ld a,l
 356+ 9173 FE 7F        	cp $7f
 357+ 9175 38 2D        	jr c,primit
 358+ 9177 28 2B        	jr z,primit
 359+ 9179 CD D6 91     segmit call column
 360+ 917C 38 13        	jr c,tercuad
 361+ 917E 3E 04        cuarcuad ld a,4
 362+ 9180 32 5D 87     	ld (Cuad_objeto),a
 363+ 9183 21 20 48     	ld hl,$4820
 364+ 9186 22 82 87     	ld (Limite_horizontal),hl
 365+ 9189 21 84 87     	ld hl,Limite_vertical
 366+ 918C 36 0D        	ld (hl),$0d
 367+ 918E 08           	ex af,af
 368+ 918F 18 3C        	jr 1F
 369+ 9191              tercuad
 370+ 9191 3E 03        	ld a,3
 371+ 9193 32 5D 87     	ld (Cuad_objeto),a
 372+ 9196 21 20 48     	ld hl,$4820
 373+ 9199 22 82 87     	ld (Limite_horizontal),hl
 374+ 919C 21 84 87     	ld hl,Limite_vertical
 375+ 919F 36 12        	ld (hl),$12
 376+ 91A1 08           	ex af,af
 377+ 91A2 18 29        	jr 1F
 378+ 91A4 CD D6 91     primit call column
 379+ 91A7 38 13        	jr c, primcuad
 380+ 91A9              segcuad
 381+ 91A9 3E 02        	ld a,2
 382+ 91AB 32 5D 87     	ld (Cuad_objeto),a
 383+ 91AE 21 C0 4F     	ld hl,$4fc0
 384+ 91B1 22 82 87     	ld (Limite_horizontal),hl
 385+ 91B4 21 84 87     	ld hl,Limite_vertical
 386+ 91B7 36 0D        	ld (hl),$0d
 387+ 91B9 08           	ex af,af
 388+ 91BA 18 11        	jr 1F
 389+ 91BC              primcuad
 390+ 91BC 3E 01        	ld a,1
 391+ 91BE 32 5D 87     	ld (Cuad_objeto),a
 392+ 91C1 21 C0 4F     	ld hl,$4fc0
 393+ 91C4 22 82 87     	ld (Limite_horizontal),hl
 394+ 91C7 21 84 87     	ld hl,Limite_vertical
 395+ 91CA 36 12        	ld (hl),$12
 396+ 91CC 08           	ex af,af
 397+ 91CD CD AE 98     1 call Genera_coordenadas
 398+ 91D0 21 77 87     	ld hl,Ctrl_0
 399+ 91D3 CB EE        	set 5,(hl)
 400+ 91D5 C9           	ret
 401+ 91D6
 402+ 91D6              ; ------------------------------------------------------------------------------------------------------------------
 403+ 91D6
 404+ 91D6              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 91D6              ;
 406+ 91D6              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 91D6
 408+ 91D6 7D           column ld a,l
 409+ 91D7 E6 1F        	and $1f
 410+ 91D9 FE 10         	cp $10
 411+ 91DB C9            	ret
 412+ 91DC
 413+ 91DC              ; --------------------------------------------------------------------------------------------------------------------
 414+ 91DC              ;
 415+ 91DC              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 91DC              ;
 417+ 91DC              ; 14/12/22
 418+ 91DC              ;
 419+ 91DC              ;	Modifica: A y BC.
 420+ 91DC
 421+ 91DC 3A 5D 87     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 91DF E6 01        	and 1
 423+ 91E1 28 17        	jr z,1F
 424+ 91E3
 425+ 91E3              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 91E3
 427+ 91E3 3A 4F 87     	ld a,(Coordenada_X)
 428+ 91E6 47           	ld b,a
 429+ 91E7 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 91E8 79           	ld a,c
 431+ 91E9 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 91EA 38 08        	jr c,2F
 433+ 91EC 47           	ld b,a
 434+ 91ED 79           	ld a,c
 435+ 91EE 90           	sub b
 436+ 91EF 32 81 87     	ld (Columnas),a
 437+ 91F2 18 1B        	jr 4F
 438+ 91F4 79           2 ld a,c
 439+ 91F5 32 81 87     	ld (Columnas),a
 440+ 91F8 18 15        	jr 4F
 441+ 91FA
 442+ 91FA              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 91FA
 444+ 91FA 3A 4F 87     1 ld a,(Coordenada_X)
 445+ 91FD 81           	add c
 446+ 91FE 3D           	dec a
 447+ 91FF D6 1F        	sub $1f
 448+ 9201 38 08        	jr c,3F
 449+ 9203 47           	ld b,a
 450+ 9204 79           	ld a,c
 451+ 9205 90           	sub b
 452+ 9206 32 81 87     	ld (Columnas),a
 453+ 9209 18 04        	jr 4F
 454+ 920B 79           3 ld a,c
 455+ 920C 32 81 87     	ld (Columnas),a
 456+ 920F D9           4 exx
 457+ 9210 4F           	ld c,a
 458+ 9211 D9           	exx
 459+ 9212 C9            ret
 460+ 9213
 461+ 9213              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9213              ;
 463+ 9213              ; 7/1/23
 464+ 9213              ;
 465+ 9213              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9213              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9213              ;
 468+ 9213              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9213              ;	DESTRUYE: HL,B Y A.
 470+ 9213
 471+ 9213 3A 5D 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9216 FE 02        	cp 2
 473+ 9218 38 18        	jr c,1F
 474+ 921A 28 16        	jr z,1F
 475+ 921C E6 01        	and 1
 476+ 921E 28 0D        	jr z,3F
 477+ 9220
 478+ 9220              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9220
 480+ 9220 CD 5C 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9223
 482+ 9223 7D           9 ld a,l
 483+ 9224 E6 1F        	and $1f
 484+ 9226 28 2A        	jr z,7F
 485+ 9228 2B           	dec hl
 486+ 9229 10 F8        	djnz 9B
 487+ 922B 18 25        	jr 7F
 488+ 922D
 489+ 922D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 922D
 491+ 922D 2A 4B 87     3 ld hl,(Posicion_actual)
 492+ 9230 18 20        	jr 7F
 493+ 9232
 494+ 9232 28 14        1 jr z,2F
 495+ 9234
 496+ 9234              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9234
 498+ 9234 CD 5C 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9237 7D           4 ld a,l
 500+ 9238 E6 1F        	and $1f
 501+ 923A 28 03        	jr z,6F
 502+ 923C 2B           	dec hl
 503+ 923D 10 F8        	djnz 4B
 504+ 923F 06 0F        6 ld b,15
 505+ 9241 CD BD 92     5 call PreviousScan
 506+ 9244 10 FB        	djnz 5B
 507+ 9246 18 0A        	jr 7F
 508+ 9248
 509+ 9248              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9248
 511+ 9248 CD 5C 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 924B 06 0F        	ld b,15
 513+ 924D CD BD 92     8 call PreviousScan
 514+ 9250 10 FB        	djnz 8B
 515+ 9252
 516+ 9252 E5           7 push hl
 517+ 9253 DD E1        	pop ix
 518+ 9255
 519+ 9255 2A 4D 87     	ld hl,(Puntero_objeto)
 520+ 9258 E5           	push hl
 521+ 9259 FD E1        	pop iy
 522+ 925B
 523+ 925B C9           	ret
 524+ 925C
 525+ 925C              ; --------------------------------------------------------------------------------------------------------------------
 526+ 925C              ;
 527+ 925C              ;	2/1/23
 528+ 925C              ;
 529+ 925C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 925C              ;
 531+ 925C              ;	Tras esta rutina tenemos:
 532+ 925C              ;
 533+ 925C              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 925C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 925C              ;
 536+ 925C              ;	DESTRUYE!!!!! HL,B y A.
 537+ 925C
 538+ 925C 2A 4B 87     Operandos ld hl,(Posicion_actual)
 539+ 925F 3A 81 87     	ld a,(Columnas)
 540+ 9262 3D           	dec a
 541+ 9263 20 01        	jr nz,1F
 542+ 9265 3C           	inc a
 543+ 9266 47           1 ld b,a
 544+ 9267 C9           	ret
 545+ 9268
 546+ 9268              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9268              ;
 548+ 9268              ;	3/1/23
 549+ 9268              ;
 550+ 9268              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9268              ;
 552+ 9268              ;	Destruye: A,B,HL y DE.
 553+ 9268
 554+ 9268              Define_rutina_de_impresion
 555+ 9268
 556+ 9268 3A 4A 87     	ld a,(Columns)
 557+ 926B 47           	ld b,a
 558+ 926C 3A 81 87     	ld a,(Columnas)
 559+ 926F B8           	cp b
 560+ 9270 20 0D        	jr nz,2f
 561+ 9272
 562+ 9272              ;	La entidad se imprime entera.
 563+ 9272
 564+ 9272 21 3E 93     	ld hl, Indice_entidades_completas
 565+ 9275 E6 01        	and 1
 566+ 9277 28 02        	jr z,1F
 567+ 9279
 568+ 9279 23           	inc hl
 569+ 927A 23           	inc hl
 570+ 927B
 571+ 927B CD 45 8A     1 call Extrae_address
 572+ 927E C9           	ret		;	ret
 573+ 927F
 574+ 927F              ;	La entidad no se imprime entera en pantalla.
 575+ 927F
 576+ 927F 3A 5D 87     2 ld a,(Cuad_objeto)
 577+ 9282 E6 01        	and 1
 578+ 9284 28 17        	jr z,3F
 579+ 9286
 580+ 9286              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9286
 582+ 9286 21 42 93     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9289 3A 4A 87     4 ld a,(Columns)
 584+ 928C E6 01        	and 1
 585+ 928E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9290
 587+ 9290 23           	inc hl
 588+ 9291 23           	inc hl
 589+ 9292
 590+ 9292 3A 81 87     	ld a,(Columnas)
 591+ 9295 E6 01        	and 1
 592+ 9297 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 9299
 594+ 9299 23           	inc hl
 595+ 929A 23           	inc hl
 596+ 929B
 597+ 929B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 929D
 599+ 929D 21 48 93     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 92A0 18 E7        	jr 4B
 601+ 92A2
 602+ 92A2              ; --------------------------------------------------------------------------------------------------------------------
 603+ 92A2              ;
 604+ 92A2              ;	Prepara_draw
 605+ 92A2              ;
 606+ 92A2              ;	Es una rutina de carga.
 607+ 92A2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 92A2              ;
 609+ 92A2              ;	FUNCIONAMIENTO:
 610+ 92A2              ;
 611+ 92A2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 92A2              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 92A2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 92A2              ;
 615+ 92A2              ;	DESTRUYE:
 616+ 92A2              ;
 617+ 92A2              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 92A2
 619+ 92A2 21 49 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 92A5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 92A6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 92A7 4E           	ld c,(hl)
 623+ 92A8 2A 4B 87     	ld hl,(Posicion_actual)
 624+ 92AB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 92AD C9           	ret
 626+ 92AE
 627+ 92AE              ;----------------------------------------------------------------------------------------------------------------
 628+ 92AE              ;
 629+ 92AE              ;	5/08/22
 630+ 92AE              ;
 631+ 92AE              ;   NextScan.
 632+ 92AE              ;
 633+ 92AE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 92AE              ;
 635+ 92AE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 92AE              ;
 637+ 92AE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 92AE              ;
 639+ 92AE              ;       DESTRUIDOS: AF y HL !!!
 640+ 92AE              ;
 641+ 92AE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 92AE              ;
 643+ 92AE
 644+ 92AE 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 92AF 7C               ld a,h
 646+ 92B0 E6 07            and 7
 647+ 92B2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 92B3
 649+ 92B3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 92B4 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 92B6 6F               ld l,a
 652+ 92B7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 92B8
 654+ 92B8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 92B9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 92BB 67               ld h,a
 657+ 92BC C9               ret
 658+ 92BD
 659+ 92BD              ;----------------------------------------------------------------------------------------------------------------
 660+ 92BD              ;
 661+ 92BD              ;	5/08/22
 662+ 92BD              ;
 663+ 92BD              ;   PreviousScan.
 664+ 92BD              ;
 665+ 92BD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 92BD              ;
 667+ 92BD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 92BD              ;
 669+ 92BD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 92BD              ;
 671+ 92BD              ;       DESTRUIDOS: AF y HL !!!
 672+ 92BD              ;
 673+ 92BD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 92BD              ;
 675+ 92BD
 676+ 92BD 7C           PreviousScan ld a,h
 677+ 92BE 25               dec h               ; Dec H.
 678+ 92BF E6 07            and 7
 679+ 92C1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 92C2
 681+ 92C2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 92C3 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 92C5 6F               ld l,a
 684+ 92C6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 92C7
 686+ 92C7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 92C8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 92CA 67               ld h,a
 689+ 92CB C9               ret
 690+ 92CC
 691+ 92CC              ; -----------------------------------------------------------------------------------
 692+ 92CC              ;
 693+ 92CC              ;	28/2/23
 694+ 92CC              ;
 695+ 92CC              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 92CC              ;	Extrae fotos de Album_de_fotos.
 697+ 92CC
 698+ 92CC              Extrae_foto_entidades
 699+ 92CC
 700+ 92CC 3A 90 87     	ld a,(Numero_de_malotes)
 701+ 92CF A7           	and a
 702+ 92D0 C8           	ret z
 703+ 92D1 ED 73 95 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 92D5 31 00 70     	ld sp,Album_de_fotos
 705+ 92D8
 706+ 92D8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 92DA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 92DB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 92DC
 710+ 92DC ED 73 97 87  	ld (Stack_2),sp
 711+ 92E0 ED 7B 95 87  	ld sp,(Stack)
 712+ 92E4
 713+ 92E4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 92E4
 715+ 92E4 3E CD        	ld a,$cd
 716+ 92E6 32 EE 92     	ld (Imprime),a
 717+ 92E9 EB           	ex de,hl
 718+ 92EA 22 EF 92     	ld (Imprime+1),hl
 719+ 92ED EB           	ex de,hl
 720+ 92EE
 721+ 92EE              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 92EE
 723+ 92EE 00 00 00     Imprime db 0,0,0
 724+ 92F1
 725+ 92F1 3A 90 87     	ld a,(Numero_de_malotes)
 726+ 92F4 3D           	dec a
 727+ 92F5 28 09        	jr z,1F
 728+ 92F7 32 90 87      	ld (Numero_de_malotes),a
 729+ 92FA
 730+ 92FA ED 7B 97 87   	ld sp,(Stack_2)
 731+ 92FE 18 D8        	jr 2B
 732+ 9300
 733+ 9300 AF           1 xor a
 734+ 9301 32 97 87     	ld (Stack_2),a
 735+ 9304 C9           	ret
 736+ 9305
 737+ 9305              ; -----------------------------------------------------------------------------------
 738+ 9305              ;
 739+ 9305              ;	28/2/23
 740+ 9305              ;
 741+ 9305              ;	Pinta los disparos generados.
 742+ 9305
 743+ 9305              Extrae_foto_disparos
 744+ 9305
 745+ 9305 3A 9D 87     	ld a,(Numero_de_disparotes)
 746+ 9308 A7           	and a
 747+ 9309 C8           	ret z
 748+ 930A ED 73 95 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 930E 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 9311
 751+ 9311 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9313 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9314 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9315
 755+ 9315 ED 73 97 87  	ld (Stack_2),sp
 756+ 9319 ED 7B 95 87  	ld sp,(Stack)
 757+ 931D
 758+ 931D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 931D
 760+ 931D 3E CD        	ld a,$cd
 761+ 931F 32 27 93     	ld (Imprime2),a
 762+ 9322 EB           	ex de,hl
 763+ 9323 22 28 93     	ld (Imprime2+1),hl
 764+ 9326 EB           	ex de,hl
 765+ 9327
 766+ 9327              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9327
 768+ 9327 00 00 00     Imprime2 db 0,0,0
 769+ 932A
 770+ 932A 3A 9D 87     	ld a,(Numero_de_disparotes)
 771+ 932D 3D           	dec a
 772+ 932E 28 09        	jr z,1F
 773+ 9330 32 9D 87      	ld (Numero_de_disparotes),a
 774+ 9333
 775+ 9333 ED 7B 97 87  	ld sp,(Stack_2)
 776+ 9337 18 D8        	jr 2B
 777+ 9339
 778+ 9339 AF           1 xor a
 779+ 933A 32 97 87     	ld (Stack_2),a
 780+ 933D C9           	ret
 781+ 933E
# file closed: Draw_XOR.asm
1165  933E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 933E              ;   índices de Rutinas de impresión.
   2+ 933E
   3+ 933E 4E 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9340 7B 93            defw Pinta_Amadeus_3x2
   5+ 9342
   6+ 9342 D1 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9344 71 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9346 25 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9348
  10+ 9348 FB 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 934A FF 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 934C B3 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 934E
  14+ 934E
  15+ 934E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 934E              ;
  17+ 934E              ;   12/12/22
  18+ 934E              ;
  19+ 934E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 934E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 934E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 934E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 934E              ;
  24+ 934E              ;   Modifica: DE y HL.
  25+ 934E
  26+ 934E ED 73 95 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9352 FD F9        	ld sp,iy
  28+ 9354 06 10            ld b,16
  29+ 9356 D1           1 pop de
  30+ 9357 7B               ld a,e
  31+ 9358 AE               xor (hl)
  32+ 9359 77           	ld (hl),a
  33+ 935A 23           	inc hl
  34+ 935B 7A               ld a,d
  35+ 935C AE               xor (hl)
  36+ 935D 77           	ld (hl),a
  37+ 935E 2B           	dec hl
  38+ 935F 24           	inc h
  39+ 9360 7C               ld a,h
  40+ 9361 E6 07            and 7
  41+ 9363 20 0A            jr nz,2F
  42+ 9365 7D               ld a,l
  43+ 9366 C6 20            add a,$20
  44+ 9368 6F               ld l,a
  45+ 9369 38 04            jr c,2F
  46+ 936B 7C               ld a,h
  47+ 936C D6 08            sub 8
  48+ 936E 67               ld h,a
  49+ 936F 7C           2 ld a,h
  50+ 9370 FE 58            cp $58
  51+ 9372 28 02            jr z,3F
  52+ 9374 10 E0            djnz 1B
  53+ 9376 ED 7B 95 87  3 ld sp,(Stack)
  54+ 937A C9           	ret
  55+ 937B
  56+ 937B ED 73 95 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 937F FD F9        	ld sp,iy
  58+ 9381 06 08            ld b,8
  59+ 9383 D1           1 pop de
  60+ 9384 7B               ld a,e
  61+ 9385 AE               xor (hl)
  62+ 9386 77           	ld (hl),a
  63+ 9387 23           	inc hl
  64+ 9388 7A               ld a,d
  65+ 9389 AE               xor (hl)
  66+ 938A 77           	ld (hl),a
  67+ 938B 23           	inc hl
  68+ 938C D1           	pop de
  69+ 938D 7B               ld a,e
  70+ 938E AE               xor (hl)
  71+ 938F 77           	ld (hl),a
  72+ 9390 2B           	dec hl
  73+ 9391 2B           	dec hl
  74+ 9392 24           	inc h
  75+ 9393 7C               ld a,h
  76+ 9394 E6 07            and 7
  77+ 9396 20 0A            jr nz,2F
  78+ 9398 7D               ld a,l
  79+ 9399 C6 20            add a,$20
  80+ 939B 6F               ld l,a
  81+ 939C 38 04            jr c,2F
  82+ 939E 7C               ld a,h
  83+ 939F D6 08            sub 8
  84+ 93A1 67               ld h,a
  85+ 93A2 7C           2 ld a,h
  86+ 93A3 FE 58            cp $58
  87+ 93A5 28 25            jr z,4F
  88+ 93A7 7A               ld a,d
  89+ 93A8 AE               xor (hl)
  90+ 93A9 77               ld (hl),a
  91+ 93AA D1           	pop de
  92+ 93AB 23           	inc hl
  93+ 93AC 7B               ld a,e
  94+ 93AD AE               xor (hl)
  95+ 93AE 77           	ld (hl),a
  96+ 93AF 23           	inc hl
  97+ 93B0 7A               ld a,d
  98+ 93B1 AE               xor (hl)
  99+ 93B2 77           	ld (hl),a
 100+ 93B3 2B           	dec hl
 101+ 93B4 2B           	dec hl
 102+ 93B5 24           	inc h
 103+ 93B6 7C               ld a,h
 104+ 93B7 E6 07            and 7
 105+ 93B9 20 0A            jr nz,3F
 106+ 93BB 7D               ld a,l
 107+ 93BC C6 20            add a,$20
 108+ 93BE 6F               ld l,a
 109+ 93BF 38 04            jr c,3F
 110+ 93C1 7C               ld a,h
 111+ 93C2 D6 08            sub 8
 112+ 93C4 67               ld h,a
 113+ 93C5 7C           3 ld a,h
 114+ 93C6 FE 58            cp $58
 115+ 93C8 28 02            jr z,4F
 116+ 93CA 10 B7            djnz 1B
 117+ 93CC ED 7B 95 87  4 ld sp,(Stack)
 118+ 93D0 C9           	ret
 119+ 93D1
 120+ 93D1              ; ---------------------------------------------------
 121+ 93D1
 122+ 93D1 ED 73 95 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 93D5 FD F9        	ld sp,iy
 124+ 93D7
 125+ 93D7              ; >>>
 126+ 93D7
 127+ 93D7 06 10            ld b,16
 128+ 93D9 D1           1 pop de
 129+ 93DA 7A           	ld a,d
 130+ 93DB AE           	xor (hl)
 131+ 93DC 77           	ld (hl),a
 132+ 93DD 24           	inc h
 133+ 93DE 7C               ld a,h
 134+ 93DF E6 07            and 7
 135+ 93E1 20 0C            jr nz,2F
 136+ 93E3 7D               ld a,l
 137+ 93E4 C6 20            add a,$20
 138+ 93E6 6F               ld l,a
 139+ 93E7 38 06            jr c,2F
 140+ 93E9 7C               ld a,h
 141+ 93EA D6 08            sub 8
 142+ 93EC 67               ld h,a
 143+ 93ED 18 00            jr 2F
 144+ 93EF 7C           2 ld a,h
 145+ 93F0 FE 58            cp $58
 146+ 93F2 28 02            jr z,3F
 147+ 93F4 10 E3            djnz 1B
 148+ 93F6 ED 7B 95 87  3 ld sp,(Stack)
 149+ 93FA C9           	ret
 150+ 93FB
 151+ 93FB ED 73 95 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93FF FD F9        	ld sp,iy
 153+ 9401
 154+ 9401              ; >>>
 155+ 9401
 156+ 9401 06 10            ld b,16
 157+ 9403 D1           1 pop de
 158+ 9404 7B           	ld a,e
 159+ 9405 AE           	xor (hl)
 160+ 9406 77           	ld (hl),a
 161+ 9407 24           	inc h
 162+ 9408 7C               ld a,h
 163+ 9409 E6 07            and 7
 164+ 940B 20 0C            jr nz,2F
 165+ 940D 7D               ld a,l
 166+ 940E C6 20            add a,$20
 167+ 9410 6F               ld l,a
 168+ 9411 38 06            jr c,2F
 169+ 9413 7C               ld a,h
 170+ 9414 D6 08            sub 8
 171+ 9416 67               ld h,a
 172+ 9417 18 00            jr 2F
 173+ 9419 7C           2 ld a,h
 174+ 941A FE 58            cp $58
 175+ 941C 28 02            jr z,3F
 176+ 941E 10 E3            djnz 1B
 177+ 9420 ED 7B 95 87  3 ld sp,(Stack)
 178+ 9424 C9           	ret
 179+ 9425
 180+ 9425              ; ---------------------------------------------------
 181+ 9425
 182+ 9425 ED 73 95 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9429 FD F9        	ld sp,iy
 184+ 942B 06 08            ld b,8
 185+ 942D D1           1 pop de
 186+ 942E 7A           	ld a,d
 187+ 942F AE           	xor (hl)
 188+ 9430 77           	ld (hl),a
 189+ 9431 23           	inc hl
 190+ 9432 D1           	pop de
 191+ 9433 7B           	ld a,e
 192+ 9434 AE           	xor (hl)
 193+ 9435 77           	ld (hl),a
 194+ 9436 2B           	dec hl
 195+ 9437 24            	inc h
 196+ 9438 7C               ld a,h
 197+ 9439 E6 07            and 7
 198+ 943B 20 0A            jr nz,2F
 199+ 943D 7D               ld a,l
 200+ 943E C6 20            add a,$20
 201+ 9440 6F               ld l,a
 202+ 9441 38 04            jr c,2F
 203+ 9443 7C               ld a,h
 204+ 9444 D6 08            sub 8
 205+ 9446 67               ld h,a
 206+ 9447 7C           2 ld a,h
 207+ 9448 FE 58            cp $58
 208+ 944A 28 20            jr z,4F
 209+ 944C D1               pop de
 210+ 944D 7B           	ld a,e
 211+ 944E AE           	xor (hl)
 212+ 944F 77           	ld (hl),a
 213+ 9450 23           	inc hl
 214+ 9451 7A           	ld a,d
 215+ 9452 AE           	xor (hl)
 216+ 9453 77           	ld (hl),a
 217+ 9454 2B           	dec hl
 218+ 9455 24           	inc h
 219+ 9456 7C               ld a,h
 220+ 9457 E6 07            and 7
 221+ 9459 20 0A            jr nz,3F
 222+ 945B 7D               ld a,l
 223+ 945C C6 20            add a,$20
 224+ 945E 6F               ld l,a
 225+ 945F 38 04            jr c,3F
 226+ 9461 7C               ld a,h
 227+ 9462 D6 08            sub 8
 228+ 9464 67               ld h,a
 229+ 9465 7C           3 ld a,h
 230+ 9466 FE 58            cp $58
 231+ 9468 28 02            jr z,4F
 232+ 946A 10 C1            djnz 1B
 233+ 946C ED 7B 95 87  4 ld sp,(Stack)
 234+ 9470 C9           	ret
 235+ 9471
 236+ 9471 ED 73 95 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9475 FD F9        	ld sp,iy
 238+ 9477 06 08            ld b,8
 239+ 9479 D1           1 pop de
 240+ 947A D1           	pop de
 241+ 947B 7B           	ld a,e
 242+ 947C AE           	xor (hl)
 243+ 947D 77           	ld (hl),a
 244+ 947E 24            	inc h
 245+ 947F 7C               ld a,h
 246+ 9480 E6 07            and 7
 247+ 9482 20 0A            jr nz,2F
 248+ 9484 7D               ld a,l
 249+ 9485 C6 20            add a,$20
 250+ 9487 6F               ld l,a
 251+ 9488 38 04            jr c,2F
 252+ 948A 7C               ld a,h
 253+ 948B D6 08            sub 8
 254+ 948D 67               ld h,a
 255+ 948E 7C           2 ld a,h
 256+ 948F FE 58            cp $58
 257+ 9491 28 1B            jr z,4F
 258+ 9493 D1               pop de
 259+ 9494 7A           	ld a,d
 260+ 9495 AE           	xor (hl)
 261+ 9496 77           	ld (hl),a
 262+ 9497 24           	inc h
 263+ 9498 7C               ld a,h
 264+ 9499 E6 07            and 7
 265+ 949B 20 0A            jr nz,3F
 266+ 949D 7D               ld a,l
 267+ 949E C6 20            add a,$20
 268+ 94A0 6F               ld l,a
 269+ 94A1 38 04            jr c,3F
 270+ 94A3 7C               ld a,h
 271+ 94A4 D6 08            sub 8
 272+ 94A6 67               ld h,a
 273+ 94A7 7C           3 ld a,h
 274+ 94A8 FE 58            cp $58
 275+ 94AA 28 02            jr z,4F
 276+ 94AC 10 CB            djnz 1B
 277+ 94AE ED 7B 95 87  4 ld sp,(Stack)
 278+ 94B2 C9           	ret
 279+ 94B3
 280+ 94B3 ED 73 95 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 94B7 FD F9        	ld sp,iy
 282+ 94B9 06 08            ld b,8
 283+ 94BB D1           1 pop de
 284+ 94BC 7B           	ld a,e
 285+ 94BD AE           	xor (hl)
 286+ 94BE 77           	ld (hl),a
 287+ 94BF 23           	inc hl
 288+ 94C0 7A           	ld a,d
 289+ 94C1 AE           	xor (hl)
 290+ 94C2 77           	ld (hl),a
 291+ 94C3 2B           	dec hl
 292+ 94C4 24             	inc h
 293+ 94C5 7C               ld a,h
 294+ 94C6 E6 07            and 7
 295+ 94C8 20 0A            jr nz,2F
 296+ 94CA 7D               ld a,l
 297+ 94CB C6 20            add a,$20
 298+ 94CD 6F               ld l,a
 299+ 94CE 38 04            jr c,2F
 300+ 94D0 7C               ld a,h
 301+ 94D1 D6 08            sub 8
 302+ 94D3 67               ld h,a
 303+ 94D4 7C           2 ld a,h
 304+ 94D5 FE 58            cp $58
 305+ 94D7 28 21            jr z,4F
 306+ 94D9 D1               pop de
 307+ 94DA 7A           	ld a,d
 308+ 94DB AE           	xor (hl)
 309+ 94DC 77           	ld (hl),a
 310+ 94DD 23           	inc hl
 311+ 94DE D1               pop de
 312+ 94DF 7B           	ld a,e
 313+ 94E0 AE           	xor (hl)
 314+ 94E1 77           	ld (hl),a
 315+ 94E2 2B           	dec hl
 316+ 94E3 24           	inc h
 317+ 94E4 7C               ld a,h
 318+ 94E5 E6 07            and 7
 319+ 94E7 20 0A            jr nz,3F
 320+ 94E9 7D               ld a,l
 321+ 94EA C6 20            add a,$20
 322+ 94EC 6F               ld l,a
 323+ 94ED 38 04            jr c,3F
 324+ 94EF 7C               ld a,h
 325+ 94F0 D6 08            sub 8
 326+ 94F2 67               ld h,a
 327+ 94F3 7C           3 ld a,h
 328+ 94F4 FE 58            cp $58
 329+ 94F6 28 02            jr z,4F
 330+ 94F8 10 C1            djnz 1B
 331+ 94FA ED 7B 95 87  4 ld sp,(Stack)
 332+ 94FE C9           	ret
 333+ 94FF
 334+ 94FF ED 73 95 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9503 FD F9        	ld sp,iy
 336+ 9505 06 08            ld b,8
 337+ 9507 D1           1 pop de
 338+ 9508 7B           	ld a,e
 339+ 9509 AE           	xor (hl)
 340+ 950A 77           	ld (hl),a
 341+ 950B 24            	inc h
 342+ 950C 7C               ld a,h
 343+ 950D E6 07            and 7
 344+ 950F 20 0A            jr nz,2F
 345+ 9511 7D               ld a,l
 346+ 9512 C6 20            add a,$20
 347+ 9514 6F               ld l,a
 348+ 9515 38 04            jr c,2F
 349+ 9517 7C               ld a,h
 350+ 9518 D6 08            sub 8
 351+ 951A 67               ld h,a
 352+ 951B 7C           2 ld a,h
 353+ 951C FE 58            cp $58
 354+ 951E 28 1C            jr z,4F
 355+ 9520 D1               pop de
 356+ 9521 7A           	ld a,d
 357+ 9522 AE           	xor (hl)
 358+ 9523 77           	ld (hl),a
 359+ 9524 24           	inc h
 360+ 9525 7C               ld a,h
 361+ 9526 E6 07            and 7
 362+ 9528 20 0A            jr nz,3F
 363+ 952A 7D               ld a,l
 364+ 952B C6 20            add a,$20
 365+ 952D 6F               ld l,a
 366+ 952E 38 04            jr c,3F
 367+ 9530 7C               ld a,h
 368+ 9531 D6 08            sub 8
 369+ 9533 67               ld h,a
 370+ 9534 7C           3 ld a,h
 371+ 9535 FE 58            cp $58
 372+ 9537 28 03            jr z,4F
 373+ 9539 D1               pop de
 374+ 953A 10 CB            djnz 1B
 375+ 953C ED 7B 95 87  4 ld sp,(Stack)
 376+ 9540 C9           	ret
 377+ 9541
 378+ 9541              ; ---------------------------------------------------
 379+ 9541              ;
 380+ 9541              ;   27/02/23
 381+ 9541              ;
 382+ 9541              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9541              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9541              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9541
 386+ 9541 ED 73 95 87  Pinta_Disparo ld (Stack),sp
 387+ 9545 FD F9            ld sp,iy
 388+ 9547 06 02            ld b,2
 389+ 9549 D1           1 pop de
 390+ 954A 7B               ld a,e
 391+ 954B AE               xor (hl)
 392+ 954C 77               ld (hl),a
 393+ 954D 23               inc hl
 394+ 954E 7A               ld a,d
 395+ 954F AE               xor (hl)
 396+ 9550 77               ld (hl),a
 397+ 9551 2B               dec hl
 398+ 9552
 399+ 9552 24               inc h
 400+ 9553 7C               ld a,h
 401+ 9554 E6 07            and 7
 402+ 9556 20 0A            jr nz,2F
 403+ 9558 7D               ld a,l
 404+ 9559 C6 20            add a,$20
 405+ 955B 6F               ld l,a
 406+ 955C 38 04            jr c,2F
 407+ 955E 7C               ld a,h
 408+ 955F D6 08            sub 8
 409+ 9561 67               ld h,a
 410+ 9562 7C           2 ld a,h
 411+ 9563 FE 58            cp $58
 412+ 9565 28 02            jr z,3F
 413+ 9567
 414+ 9567 10 E0            djnz 1B
 415+ 9569 ED 7B 95 87  3 ld sp,(Stack)
 416+ 956D C9               ret
 417+ 956E
# file closed: Rutinas_de_impresion_sprites.asm
1166  956E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 956E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 956E              ;
   3+ 956E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 956E              ;
   5+ 956E              ; *****************************************************************************************************************************************************************************************
   6+ 956E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 956E
   8+ 956E 7C           calcula_tercio ld a,h
   9+ 956F E6 18        	and $18
  10+ 9571 CB 2F        	sra a
  11+ 9573 CB 2F        	sra a
  12+ 9575 CB 2F        	sra a
  13+ 9577 C9           	ret
  14+ 9578
# file closed: calcula_tercio.asm
1167  9578              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9578              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9578              ;
   3+ 9578              ;
   4+ 9578              ;	CLS.
   5+ 9578              ;
   6+ 9578              ;	Limpia la pantalla y define sus atributos.
   7+ 9578              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9578              ;
   9+ 9578              ;	COLORES: 0 ..... NEGRO
  10+ 9578              ;    		 1 ..... AZUL
  11+ 9578              ; 			 2 ..... ROJO
  12+ 9578              ;			 3 ..... MAGENTA
  13+ 9578              ; 			 4 ..... VERDE
  14+ 9578              ; 			 5 ..... CIAN
  15+ 9578              ;			 6 ..... AMARILLO
  16+ 9578              ; 			 7 ..... BLANCO
  17+ 9578              ;
  18+ 9578              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9578              ;
  20+ 9578              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9578
  22+ 9578
  23+ 9578 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 957B 11 01 40     	LD DE,$4001
  25+ 957E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9581 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9583 ED B0        	LDIR
  28+ 9585 01 FF 02     	LD BC,767
  29+ 9588 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9589 ED B0        	LDIR
  31+ 958B C9           	ret
  32+ 958C
# file closed: Cls.asm
1168  958C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 958C              ; ******************************************************************************************************************************************************************************************
   2+ 958C              ;
   3+ 958C              ;   20/05/23
   4+ 958C              ;
   5+ 958C              ;	Recompone_posicion_inicio
   6+ 958C              ;
   7+ 958C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 958C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 958C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 958C              ;	_ a una u otra rutina.
  11+ 958C
  12+ 958C              Recompone_posicion_inicio
  13+ 958C
  14+ 958C 2A 5B 87     	ld hl,(Posicion_inicio)
  15+ 958F 7D           	ld a,l
  16+ 9590 E6 1F        	and $1f
  17+ 9592 28 08        	jr z,1F
  18+ 9594
  19+ 9594 FE 1F        	cp $1f
  20+ 9596 C0           	ret nz
  21+ 9597
  22+ 9597 CD 1A 97     	call Mov_left
  23+ 959A 18 03        	jr 2F
  24+ 959C
  25+ 959C CD FC 95     1 call Mov_right
  26+ 959F
  27+ 959F C9           2 ret
  28+ 95A0
  29+ 95A0
  30+ 95A0              ; ******************************************************************************************************************************************************************************************
  31+ 95A0              ;
  32+ 95A0              ;   22/01/23
  33+ 95A0              ;
  34+ 95A0              ;	Mov_down
  35+ 95A0              ;
  36+ 95A0              ; 	Mueve el Sprite X px hacia abajo.
  37+ 95A0              ;
  38+ 95A0              ;
  39+ 95A0 21 77 87     Mov_down ld hl,Ctrl_0
  40+ 95A3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  41+ 95A5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  42+ 95A5              ; 																	; _ en el caso de que no lo haya.
  43+ 95A5 3A 61 87     	ld a,(Vel_down)
  44+ 95A8 47           	ld b,a
  45+ 95A9 2A 4B 87         ld hl,(Posicion_actual)
  46+ 95AC CD 6E 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  47+ 95AF E6 02        	and 2
  48+ 95B1 28 0F        	jr z,1F
  49+ 95B3
  50+ 95B3              ; Nos encontramos en el último tercio de pantalla.
  51+ 95B3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  52+ 95B3
  53+ 95B3 7C           	ld a,h
  54+ 95B4 FE 57        	cp $57
  55+ 95B6 20 0A        	jr nz,1F
  56+ 95B8 7D           	ld a,l
  57+ 95B9 C6 20        	add $20
  58+ 95BB 30 05        	jr nc,1F
  59+ 95BD
  60+ 95BD              ; ------------------------------
  61+ 95BD CD 98 98     	call Reaparece_arriba
  62+ 95C0              ;	call Reinicio
  63+ 95C0              ; ------------------------------
  64+ 95C0
  65+ 95C0 18 08        	jr 3F
  66+ 95C2 CD AE 92     1 call NextScan
  67+ 95C5 22 4B 87     	ld (Posicion_actual),hl
  68+ 95C8 10 E2            djnz 2B
  69+ 95CA CD AE 98     3 call Genera_coordenadas
  70+ 95CD C9           	ret
  71+ 95CE
  72+ 95CE              ; ******************************************************************************************************************************************************************************************
  73+ 95CE              ;
  74+ 95CE              ;   22/01/23
  75+ 95CE              ;
  76+ 95CE              ;	Mov_up
  77+ 95CE              ;
  78+ 95CE              ; 	Mueve el Sprite hacia arriba.
  79+ 95CE              ;
  80+ 95CE              ;
  81+ 95CE 21 77 87     Mov_up ld hl,Ctrl_0
  82+ 95D1 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  83+ 95D3              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  84+ 95D3              ; 																		; _ en el caso de que no lo haya.
  85+ 95D3 3A 60 87     	ld a,(Vel_up)
  86+ 95D6 47           	ld b,a
  87+ 95D7 2A 4B 87     	ld hl,(Posicion_actual)
  88+ 95DA CD 6E 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  89+ 95DD A7           	and a
  90+ 95DE 20 10        	jr nz,1F
  91+ 95E0
  92+ 95E0              ; Nos encontramos en el 1er tercio de pantalla.
  93+ 95E0              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  94+ 95E0
  95+ 95E0 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  96+ 95E1 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  97+ 95E3 20 0B            jr nz,1F
  98+ 95E5 7D               ld a,l
  99+ 95E6 D6 20            sub $20
 100+ 95E8 30 06            jr nc,1F
 101+ 95EA 25               dec h
 102+ 95EB
 103+ 95EB              ; -----------------------------
 104+ 95EB CD 88 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 105+ 95EE              ;	call Reinicio
 106+ 95EE              ; -----------------------------
 107+ 95EE
 108+ 95EE 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 109+ 95F0 CD BD 92     1 call PreviousScan
 110+ 95F3 22 4B 87     	ld (Posicion_actual),hl
 111+ 95F6 10 E2            djnz 3B
 112+ 95F8 CD AE 98     2 call Genera_coordenadas
 113+ 95FB C9           	ret
 114+ 95FC
 115+ 95FC              ; ******************************************************************************************************************************************************************************************
 116+ 95FC              ;
 117+ 95FC              ;	19/10/22
 118+ 95FC              ;
 119+ 95FC              ;	Mov_right.
 120+ 95FC              ;
 121+ 95FC              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 122+ 95FC              ;
 123+ 95FC
 124+ 95FC 21 77 87     Mov_right ld hl,Ctrl_0
 125+ 95FF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 126+ 9601              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 127+ 9601              ; 																	; _ en el caso de que no lo haya.
 128+ 9601 3A 77 87     	ld a,(Ctrl_0)
 129+ 9604 CB 77        	bit 6,a
 130+ 9606 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 131+ 9608
 132+ 9608 CD 36 98     	call Stop_Amadeus_right
 133+ 960B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 134+ 960C 18 4D        	jr 8F
 135+ 960E
 136+ 960E 3A 4F 87     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 137+ 9611 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 138+ 9613 20 46        	jr nz,8F
 139+ 9615
 140+ 9615 3A 51 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 141+ 9618 A7           	and a 															; _[3] para continuar con el DESPLZ.
 142+ 9619 28 40        	jr z,8F
 143+ 961B
 144+ 961B              ; ---------- ---------- ----------
 145+ 961B              ;
 146+ 961B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 147+ 961B
 148+ 961B 3A 5F 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 149+ 961E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 150+ 9620 28 11        	jr z,1F
 151+ 9622 38 06        	jr c,6F
 152+ 9624 FE 04        	cp 4
 153+ 9626 28 14        	jr z,7F
 154+ 9628 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 155+ 962A
 156+ 962A              ; ---------- ---------- ----------
 157+ 962A              ;
 158+ 962A              ; Perfiles de velocidad
 159+ 962A              ;
 160+ 962A
 161+ 962A 3A 51 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 162+ 962D FE FE        	cp $fe
 163+ 962F 20 2A        	jr nz,8F
 164+ 9631 18 10        	jr 3F
 165+ 9633 3A 51 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 166+ 9636 FE FD        	cp $fd
 167+ 9638 20 21        	jr nz,8F
 168+ 963A 18 07        	jr 3F
 169+ 963C 3A 51 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 170+ 963F FE FB        	cp $fb
 171+ 9641 20 18        	jr nz,8F
 172+ 9643
 173+ 9643              ; ---------- ---------- ----------
 174+ 9643
 175+ 9643              3
 176+ 9643 CD 76 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 177+ 9646              ;	call Reinicio
 178+ 9646
 179+ 9646              ; ---------- ---------- ----------
 180+ 9646              ;
 181+ 9646              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 182+ 9646
 183+ 9646 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 184+ 9648 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 185+ 9649 CD 62 96     	call DESPLZ_DER
 186+ 964C C1           	pop bc
 187+ 964D 10 F9        	djnz 5B
 188+ 964F 2A 4B 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 189+ 9652 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 190+ 9653 22 4B 87     	ld (Posicion_actual),hl
 191+ 9656 CD AE 98     	call Genera_coordenadas
 192+ 9659 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 193+ 965B
 194+ 965B              ; ---------- ---------- ----------
 195+ 965B
 196+ 965B 2A 4B 87     8 ld hl,(Posicion_actual)
 197+ 965E CD 62 96     	call DESPLZ_DER
 198+ 9661 C9           2 ret
 199+ 9662
 200+ 9662              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 201+ 9662              ;
 202+ 9662              ;	22/9/22
 203+ 9662              ;
 204+ 9662
 205+ 9662 CD 71 96     DESPLZ_DER call Desplaza_derecha
 206+ 9665 CD BD 96         call modifica_parametros_1er_DESPLZ_2
 207+ 9668 CD E6 96         call Ciclo_completo
 208+ 966B 21 77 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 209+ 966E CB FE        	set 7,(hl)
 210+ 9670 C9           	ret
 211+ 9671
 212+ 9671              ; ******************************************************************************************************************************************************************************************
 213+ 9671              ;	15/02/23
 214+ 9671              ;
 215+ 9671
 216+ 9671 3A 5F 87     Desplaza_derecha ld a,(Vel_right)
 217+ 9674 47           	ld b,a
 218+ 9675 2A 57 87     	ld hl,(Puntero_DESPLZ_der)
 219+ 9678 23           1 inc hl
 220+ 9679 23           	inc hl
 221+ 967A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 222+ 967C 22 57 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 223+ 967F CD 45 8A     	call Extrae_address
 224+ 9682 22 4D 87     	ld (Puntero_objeto),hl
 225+ 9685
 226+ 9685              ; Modifica (Puntero_DESPLZ_izq).
 227+ 9685
 228+ 9685              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 229+ 9685              ; Cuántos movimientos hemos hecho ??
 230+ 9685              ; DE contiene (Puntero_DESPLZ_der).
 231+ 9685
 232+ 9685 2A 53 87     7 ld hl,(Indice_Sprite_der)
 233+ 9688 EB           	ex de,hl
 234+ 9689 A7           	and a
 235+ 968A ED 52        	sbc hl,de
 236+ 968C CB 3D        	srl l
 237+ 968E 3E 08        6 ld a,8
 238+ 9690 95           	sub l
 239+ 9691 30 1E        	jr nc,3F
 240+ 9693
 241+ 9693              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 242+ 9693              ; B="0".
 243+ 9693
 244+ 9693 04           4 inc b
 245+ 9694 3C           	inc a
 246+ 9695 20 FC        	jr nz,4B
 247+ 9697 78           	ld a,b
 248+ 9698 08           	ex af,af
 249+ 9699 2A 53 87     	ld hl,(Indice_Sprite_der)
 250+ 969C 23           5 inc hl
 251+ 969D 23           	inc hl
 252+ 969E 10 FC        	djnz 5B
 253+ 96A0 22 57 87     	ld (Puntero_DESPLZ_der),hl
 254+ 96A3 CD 45 8A     	call Extrae_address
 255+ 96A6 22 4D 87     	ld (Puntero_objeto),hl
 256+ 96A9
 257+ 96A9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 258+ 96A9              ; _(Posicion_actual).
 259+ 96A9
 260+ 96A9 21 4B 87     	ld hl,Posicion_actual
 261+ 96AC 34           	inc (hl)
 262+ 96AD 08               ex af,af
 263+ 96AE 6F           	ld l,a
 264+ 96AF 18 DD        	jr 6B
 265+ 96B1
 266+ 96B1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 267+ 96B1
 268+ 96B1 47           3 ld b,a
 269+ 96B2 2A 55 87     	ld hl,(Indice_Sprite_izq)
 270+ 96B5 23           2 inc hl
 271+ 96B6 23           	inc hl
 272+ 96B7 10 FC        	djnz 2B
 273+ 96B9 22 59 87     	ld (Puntero_DESPLZ_izq),hl
 274+ 96BC C9           8 ret
 275+ 96BD
 276+ 96BD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 277+ 96BD              ;
 278+ 96BD              ;	24/7/22
 279+ 96BD              ;
 280+ 96BD              ;	modifica_parametros_1er_DESPLZ_2
 281+ 96BD              ;
 282+ 96BD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 283+ 96BD              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 284+ 96BD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 285+ 96BD
 286+ 96BD 3A 51 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 287+ 96C0 A7           	and a
 288+ 96C1 20 1F        	jr nz,1F
 289+ 96C3 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 290+ 96C5 32 51 87         ld (CTRL_DESPLZ),a
 291+ 96C8
 292+ 96C8 21 4A 87     	ld hl,Columns
 293+ 96CB 34           	inc (hl)
 294+ 96CC 3A 5D 87     	ld a,(Cuad_objeto)
 295+ 96CF E6 01        	and 1
 296+ 96D1 28 0F        	jr z,1F
 297+ 96D3 2A 4B 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 298+ 96D6 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 299+ 96D7 22 4B 87     	ld (Posicion_actual),hl
 300+ 96DA CD AE 98     	call Genera_coordenadas
 301+ 96DD CD 42 98     	call Inc_CTRL_DESPLZ
 302+ 96E0 18 03        	jr 2F
 303+ 96E2 CD 42 98     1 call Inc_CTRL_DESPLZ
 304+ 96E5 C9           2 ret
 305+ 96E6
 306+ 96E6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 307+ 96E6              ;
 308+ 96E6              ;	24/7/22
 309+ 96E6              ;
 310+ 96E6              ;	Ciclo_completo.
 311+ 96E6              ;
 312+ 96E6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 313+ 96E6              ;
 314+ 96E6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 315+ 96E6              ; 	Decrementamos (Columns).
 316+ 96E6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 317+ 96E6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 318+ 96E6
 319+ 96E6
 320+ 96E6 3A 51 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 321+ 96E9 FE FF        	cp $ff
 322+ 96EB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 323+ 96ED E6 F0        	and $f0
 324+ 96EF 20 28        	jr nz,3F
 325+ 96F1
 326+ 96F1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 327+ 96F1
 328+ 96F1 3A 51 87     	ld a,(CTRL_DESPLZ)
 329+ 96F4 47           	ld b,a
 330+ 96F5 3E F8        	ld a,$f8
 331+ 96F7 80           	add b
 332+ 96F8 32 51 87     	ld (CTRL_DESPLZ),a
 333+ 96FB 18 1C        	jr 3F
 334+ 96FD 21 4A 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 335+ 9700 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 336+ 9701 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 337+ 9702 32 51 87     	ld (CTRL_DESPLZ),a
 338+ 9705 3A 5D 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 339+ 9708 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 340+ 970A 20 0A        	jr nz,2F
 341+ 970C 2A 4B 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 342+ 970F 23           	inc hl
 343+ 9710 22 4B 87     	ld (Posicion_actual),hl
 344+ 9713 CD AE 98     	call Genera_coordenadas
 345+ 9716
 346+ 9716              ; Inicia el puntero de Sprite.
 347+ 9716
 348+ 9716 CD 5C 8A     2 call Inicia_puntero_objeto_der
 349+ 9719 C9           3 ret
 350+ 971A
 351+ 971A              ; ******************************************************************************************************************************************************************************************
 352+ 971A              ;
 353+ 971A              ;	15/02/23
 354+ 971A              ;
 355+ 971A              ;	Mov_left.
 356+ 971A              ;
 357+ 971A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 358+ 971A              ;
 359+ 971A 21 77 87     Mov_left ld hl,Ctrl_0
 360+ 971D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 361+ 971F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 362+ 971F              ; 																	; _ en el caso de que no lo haya.
 363+ 971F 3A 77 87     	ld a,(Ctrl_0)
 364+ 9722 CB 77        	bit 6,a
 365+ 9724 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 366+ 9726
 367+ 9726 CD 3C 98     	call Stop_Amadeus_left
 368+ 9729 C8           	ret z
 369+ 972A 20 4A        	jr nz,8F
 370+ 972C
 371+ 972C 3A 4F 87     11 ld a,(Coordenada_X)
 372+ 972F A7           	and a
 373+ 9730 20 44        	jr nz,8F
 374+ 9732
 375+ 9732 3A 51 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 376+ 9735 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 377+ 9736 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 378+ 9738
 379+ 9738              ; ---------- ---------- ----------
 380+ 9738
 381+ 9738 3A 5E 87     	ld a,(Vel_left)
 382+ 973B FE 02        	cp 2
 383+ 973D 28 0F        	jr z,1F
 384+ 973F 38 04        	jr c,6F
 385+ 9741 FE 04        	cp 4
 386+ 9743 28 12        	jr z,7F
 387+ 9745
 388+ 9745              ; ---------- ---------- ----------
 389+ 9745
 390+ 9745 3A 51 87     6 ld a,(CTRL_DESPLZ)
 391+ 9748 FE F8        	cp $f8
 392+ 974A 20 2A        	jr nz,8F
 393+ 974C 18 10        	jr 4F
 394+ 974E 3A 51 87     1 ld a,(CTRL_DESPLZ)
 395+ 9751 FE F9        	cp $f9
 396+ 9753 20 21        	jr nz,8F
 397+ 9755 18 07        	jr 4F
 398+ 9757 3A 51 87     7 ld a,(CTRL_DESPLZ)
 399+ 975A FE FB        	cp $fb
 400+ 975C 20 18        	jr nz,8F
 401+ 975E
 402+ 975E              ; ---------- ---------- ----------
 403+ 975E
 404+ 975E              4
 405+ 975E CD 64 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 406+ 9761              ;	call Reinicio
 407+ 9761
 408+ 9761              ; ---------- ---------- ----------
 409+ 9761
 410+ 9761 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 411+ 9763 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 412+ 9764
 413+ 9764              ;	ld hl,(Indice_Sprite_izq)
 414+ 9764              ;	ld (Puntero_DESPLZ_izq),hl
 415+ 9764
 416+ 9764 CD 7D 97     	call DESPLZ_IZQ
 417+ 9767 C1           	pop bc
 418+ 9768 10 F9        	djnz 5B
 419+ 976A 2A 4B 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 420+ 976D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 421+ 976E 22 4B 87     	ld (Posicion_actual),hl
 422+ 9771 CD AE 98     	call Genera_coordenadas
 423+ 9774 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 424+ 9776
 425+ 9776              ; ---------- ---------- ----------
 426+ 9776
 427+ 9776              ; Movemos, no hay recolocación.
 428+ 9776
 429+ 9776 2A 4B 87     8 ld hl,(Posicion_actual)
 430+ 9779 CD 7D 97     	call DESPLZ_IZQ
 431+ 977C C9           2 ret
 432+ 977D
 433+ 977D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 434+ 977D              ;
 435+ 977D              ;	22/9/22
 436+ 977D
 437+ 977D              DESPLZ_IZQ
 438+ 977D
 439+ 977D CD 8C 97     	call Desplaza_izquierda
 440+ 9780 CD D8 97         call modifica_parametros_1er_DESPLZ
 441+ 9783 CD 00 98     	call Ciclo_completo_2
 442+ 9786 21 77 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 443+ 9789 CB BE        	res 7,(hl)
 444+ 978B C9           	ret
 445+ 978C
 446+ 978C              Desplaza_izquierda
 447+ 978C
 448+ 978C 3A 5E 87     	ld a,(Vel_left)
 449+ 978F 47           	ld b,a
 450+ 9790 2A 59 87     	ld hl,(Puntero_DESPLZ_izq)
 451+ 9793 23           1 inc hl
 452+ 9794 23           	inc hl
 453+ 9795 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 454+ 9797 22 59 87     	ld (Puntero_DESPLZ_izq),hl
 455+ 979A CD 45 8A     	call Extrae_address
 456+ 979D 22 4D 87     	ld (Puntero_objeto),hl
 457+ 97A0
 458+ 97A0              ; Modifica (Puntero_DESPLZ_der).
 459+ 97A0
 460+ 97A0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 461+ 97A0              ; Cuántos movimientos hemos hecho ??
 462+ 97A0              ; DE contiene (Puntero_DESPLZ_izq).
 463+ 97A0
 464+ 97A0 2A 55 87     7 ld hl,(Indice_Sprite_izq)
 465+ 97A3 EB           	ex de,hl
 466+ 97A4 A7           	and a
 467+ 97A5 ED 52        	sbc hl,de
 468+ 97A7 CB 3D        	srl l
 469+ 97A9 3E 08        6 ld a,8
 470+ 97AB 95           	sub l
 471+ 97AC 30 1E        	jr nc,3F
 472+ 97AE
 473+ 97AE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 474+ 97AE              ; B="0".
 475+ 97AE
 476+ 97AE 04           4 inc b
 477+ 97AF 3C           	inc a
 478+ 97B0 20 FC        	jr nz,4B
 479+ 97B2 78           	ld a,b
 480+ 97B3 08           	ex af,af
 481+ 97B4 2A 55 87     	ld hl,(Indice_Sprite_izq)
 482+ 97B7 23           5 inc hl
 483+ 97B8 23           	inc hl
 484+ 97B9 10 FC        	djnz 5B
 485+ 97BB 22 59 87     	ld (Puntero_DESPLZ_izq),hl
 486+ 97BE CD 45 8A     	call Extrae_address
 487+ 97C1 22 4D 87     	ld (Puntero_objeto),hl
 488+ 97C4
 489+ 97C4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 490+ 97C4              ; _(Posicion_actual).
 491+ 97C4
 492+ 97C4 21 4B 87     	ld hl,Posicion_actual
 493+ 97C7 35           	dec (hl)
 494+ 97C8 08           	ex af,af
 495+ 97C9 6F           	ld l,a
 496+ 97CA 18 DD        	jr 6B
 497+ 97CC
 498+ 97CC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 499+ 97CC
 500+ 97CC 47           3 ld b,a
 501+ 97CD 2A 53 87     	ld hl,(Indice_Sprite_der)
 502+ 97D0 23           2 inc hl
 503+ 97D1 23           	inc hl
 504+ 97D2 10 FC        	djnz 2B
 505+ 97D4 22 57 87     	ld (Puntero_DESPLZ_der),hl
 506+ 97D7 C9           8 ret
 507+ 97D8
 508+ 97D8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 97D8              ;
 510+ 97D8              ;	modifica_parametros_1er_DESPLZ
 511+ 97D8              ;
 512+ 97D8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 513+ 97D8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 514+ 97D8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 515+ 97D8
 516+ 97D8 3A 51 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 517+ 97DB A7           	and a
 518+ 97DC 20 1E        	jr nz,1F
 519+ 97DE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 520+ 97DF 32 51 87         ld (CTRL_DESPLZ),a
 521+ 97E2 21 4A 87     	ld hl,Columns
 522+ 97E5 34           	inc (hl)
 523+ 97E6 3A 5D 87     	ld a,(Cuad_objeto)
 524+ 97E9 E6 01        	and 1
 525+ 97EB 20 0F        	jr nz,1F
 526+ 97ED 2A 4B 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 527+ 97F0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 528+ 97F1 22 4B 87     	ld (Posicion_actual),hl
 529+ 97F4 CD AE 98     	call Genera_coordenadas
 530+ 97F7 CD 53 98     	call Dec_CTRL_DESPLZ
 531+ 97FA 18 03        	jr 2F
 532+ 97FC CD 53 98     1 call Dec_CTRL_DESPLZ
 533+ 97FF C9           2 ret
 534+ 9800
 535+ 9800              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 536+ 9800
 537+ 9800 3A 51 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 538+ 9803 FE F7        	cp $f7
 539+ 9805 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 540+ 9807 30 2C        	jr nc,3F
 541+ 9809
 542+ 9809              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 543+ 9809
 544+ 9809 06 00        	ld b,0
 545+ 980B 04           4 inc b
 546+ 980C 3C           	inc a
 547+ 980D FE F7        	cp $f7
 548+ 980F 20 FA        	jr nz,4B
 549+ 9811 3E FF        	ld a,$ff
 550+ 9813 90           	sub b
 551+ 9814 32 51 87     	ld (CTRL_DESPLZ),a
 552+ 9817 18 1C        	jr 3F
 553+ 9819
 554+ 9819              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 555+ 9819
 556+ 9819 21 4A 87     1 ld hl,Columns
 557+ 981C 35           	dec (hl)
 558+ 981D AF           	xor a
 559+ 981E 32 51 87     	ld (CTRL_DESPLZ),a
 560+ 9821 3A 5D 87     	ld a,(Cuad_objeto)
 561+ 9824 E6 01        	and 1
 562+ 9826 28 0A        	jr z,2F
 563+ 9828 2A 4B 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 564+ 982B 2B           	dec hl
 565+ 982C 22 4B 87     	ld (Posicion_actual),hl
 566+ 982F CD AE 98     	call Genera_coordenadas
 567+ 9832
 568+ 9832              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 569+ 9832
 570+ 9832 CD 6F 8A     2 call Inicia_puntero_objeto_izq
 571+ 9835 C9           3 ret
 572+ 9836
 573+ 9836              ; ---------- ---------- ---------- ---------- ---------- ----------
 574+ 9836              ;
 575+ 9836              ;	19/10/22
 576+ 9836              ;
 577+ 9836              ;	(cp 29) para un Amadeus de 3 Columns.
 578+ 9836              ;	(cp 30)   ""  ""    ""     2 Columns.
 579+ 9836
 580+ 9836 3A 4F 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 581+ 9839 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 582+ 983B C9           	ret
 583+ 983C
 584+ 983C              ; ---------- ---------- ---------- ---------- ---------- ----------
 585+ 983C              ;
 586+ 983C              ;	19/10/22
 587+ 983C              ;
 588+ 983C              ;	(cp 2) para un Amadeus de 3 Columns.
 589+ 983C              ;	(cp 1)   ""  ""    ""     2 Columns.
 590+ 983C
 591+ 983C 3A 4F 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 592+ 983F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 593+ 9841 C9           	ret
 594+ 9842
 595+ 9842              ; ---------- ---------- ---------- ---------- ---------- ----------
 596+ 9842              ;
 597+ 9842              ;	24/7/22
 598+ 9842              ;
 599+ 9842              ;	Inc_CTRL_DESPLZ
 600+ 9842              ;
 601+ 9842              ;
 602+ 9842              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 603+ 9842
 604+ 9842 21 51 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 605+ 9845 3A 5F 87     	ld a,(Vel_right)
 606+ 9848 A7           	and a
 607+ 9849 28 06        	jr z,1F
 608+ 984B 47           	ld b,a
 609+ 984C 34           3 inc (hl)
 610+ 984D 10 FD        	djnz 3B
 611+ 984F 18 01        	jr 2F
 612+ 9851 34           1 inc (hl)
 613+ 9852 C9           2 ret
 614+ 9853
 615+ 9853              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 9853              ;
 617+ 9853              ;	5/2/23
 618+ 9853              ;
 619+ 9853              ;	Dec_CTRL_DESPLZ
 620+ 9853              ;
 621+ 9853              ;
 622+ 9853              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 623+ 9853
 624+ 9853 21 51 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 625+ 9856 3A 5E 87     	ld a,(Vel_left)
 626+ 9859 A7           	and a
 627+ 985A 28 06        	jr z,1F
 628+ 985C 47           	ld b,a
 629+ 985D 35           3 dec (hl)
 630+ 985E 10 FD        	djnz 3B
 631+ 9860 18 01        	jr 2F
 632+ 9862 35           1 dec (hl)
 633+ 9863 C9           2 ret
 634+ 9864
 635+ 9864              ; ---------- ---------- ---------- ---------- ---------- ----------
 636+ 9864
 637+ 9864 2A 4B 87     Reaparece_derecha ld hl,(Posicion_actual)
 638+ 9867 01 1F 00     	ld bc,31
 639+ 986A A7           	and a
 640+ 986B ED 4A        	adc hl,bc
 641+ 986D 22 4B 87     	ld (Posicion_actual),hl
 642+ 9870 21 77 87     	ld hl,Ctrl_0														; $xxx1
 643+ 9873 CB C6        	set 0,(hl)
 644+ 9875 C9           	ret
 645+ 9876
 646+ 9876              ; ---------- ---------- ---------- ---------- ---------- ----------
 647+ 9876
 648+ 9876 2A 4B 87     Reaparece_izquierda ld hl,(Posicion_actual)
 649+ 9879 01 1F 00     	ld bc,31
 650+ 987C A7           	and a
 651+ 987D ED 42        	sbc hl,bc
 652+ 987F 22 4B 87     	ld (Posicion_actual),hl 											; $xx1x
 653+ 9882 21 77 87     	ld hl,Ctrl_0
 654+ 9885 CB CE        	set 1,(hl)
 655+ 9887 C9           	ret
 656+ 9888
 657+ 9888              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 9888
 659+ 9888 24           Reaparece_abajo inc h
 660+ 9889 01 E0 17     	ld bc,$17e0
 661+ 988C A7           	and a
 662+ 988D ED 4A        	adc hl,bc
 663+ 988F 22 4B 87     	ld (Posicion_actual),hl
 664+ 9892 21 77 87     	ld hl,Ctrl_0
 665+ 9895 CB D6        	set 2,(hl)
 666+ 9897 C9           	ret
 667+ 9898
 668+ 9898              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 9898
 670+ 9898 01 E0 17     Reaparece_arriba ld bc,$17e0
 671+ 989B A7           	and a
 672+ 989C ED 42        	sbc hl,bc
 673+ 989E 22 4B 87     	ld (Posicion_actual),hl
 674+ 98A1 21 77 87     	ld hl,Ctrl_0
 675+ 98A4 CB DE        	set 3,(hl)
 676+ 98A6 C9           	ret
 677+ 98A7
 678+ 98A7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 679+ 98A7
 680+ 98A7 2A 5B 87     Reinicio ld hl,(Posicion_inicio)
 681+ 98AA 22 4B 87     	ld (Posicion_actual),hl
 682+ 98AD C9           	ret
# file closed: Direcciones.asm
1169  98AE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 98AE              ; ------------------------------------------------------------------------
   2+ 98AE              ;
   3+ 98AE              ;	02/04/23
   4+ 98AE              ;
   5+ 98AE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 98AE              ;	Fila superior "0", Columna izquierda "0".
   7+ 98AE              ;
   8+ 98AE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 98AE              ;
  10+ 98AE              ;	Modifica: A,BC y DE.
  11+ 98AE
  12+ 98AE C5           Genera_coordenadas push bc
  13+ 98AF E5           	push hl
  14+ 98B0 D5           	push de
  15+ 98B1
  16+ 98B1 2A 4B 87     	ld hl,(Posicion_actual)
  17+ 98B4
  18+ 98B4 7D           	ld a,l
  19+ 98B5 E6 1F        	and $1f
  20+ 98B7 32 4F 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 98BA
  22+ 98BA CD 6E 95     	call calcula_tercio
  23+ 98BD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 98BE
  25+ 98BE 1E 00        	ld e,0
  26+ 98C0 7D           	ld a,l
  27+ 98C1 E6 E0        	and $e0
  28+ 98C3 28 01        	jr z,1F
  29+ 98C5 04           	inc b
  30+ 98C6
  31+ 98C6 04           1 inc b
  32+ 98C7 05           	dec b
  33+ 98C8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 98CA              ;														; _ , salimos.
  35+ 98CA 1C           3 inc e
  36+ 98CB D6 20        	sub 32
  37+ 98CD 20 FB        	jr nz,3B
  38+ 98CF 10 F5        	djnz 1B
  39+ 98D1
  40+ 98D1 7B           2 ld a,e
  41+ 98D2 32 50 87     	ld (Coordenada_y),a
  42+ 98D5
  43+ 98D5 D1           	pop de
  44+ 98D6 E1           	pop hl
  45+ 98D7 C1           	pop bc
  46+ 98D8
  47+ 98D8 C9           	ret
  48+ 98D9
  49+ 98D9              ; ------------------------------------------------------------------------
  50+ 98D9              ;	28/03/23
  51+ 98D9              ;
  52+ 98D9              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 98D9              ;	Fila superior "0", Columna izquierda "0".
  54+ 98D9              ;
  55+ 98D9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 98D9              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 98D9              ;
  58+ 98D9              ;		DE="$120d"
  59+ 98D9              ;
  60+ 98D9              ;		D, (Coordenada_X), Columnas, $12
  61+ 98D9              ;		E, (Coordenada_y), Filas, $0d
  62+ 98D9              ;
  63+ 98D9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 98D9
  65+ 98D9              ;	Modifica: A,BC y DE.
  66+ 98D9
  67+ 98D9
  68+ 98D9              Genera_coordenadas_disparo
  69+ 98D9
  70+ 98D9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 98D9
  72+ 98D9 7D           	ld a,l
  73+ 98DA E6 1F        	and $1f
  74+ 98DC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 98DD CD 6E 95     	call calcula_tercio
  76+ 98E0 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 98E1 1E 00        	ld e,0
  78+ 98E3 7D           	ld a,l
  79+ 98E4 E6 E0        	and $e0
  80+ 98E6 28 01        	jr z,1F
  81+ 98E8 04           	inc b
  82+ 98E9 1C           1 inc e
  83+ 98EA D6 20        	sub 32
  84+ 98EC 20 FB        	jr nz,1B
  85+ 98EE 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 98F0 C9           	ret
  87+ 98F1
# file closed: Genera_coordenadas.asm
1170  98F1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 98F1
   2+ 98F1
   3+ 98F1              ;   11/8/22
   4+ 98F1              ;
   5+ 98F1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 98F1              ;
   7+ 98F1              ;   Mov_obj.asm
   8+ 98F1              ;
   9+ 98F1              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 98F1              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 98F1              ;
  12+ 98F1              ;   Codificación:
  13+ 98F1              ;
  14+ 98F1              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 98F1
  16+ 98F1              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 98F1
  18+ 98F1 02 40 00     Arriba db 2,%01000000,0
  19+ 98F4 02 80 00     Abajo db 2,%10000000,0
  20+ 98F7 02 20 00     Derecha db 2,%00100000,0
  21+ 98FA 02 10 00     Izquierda db 2,%00010000,0
  22+ 98FD 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9901 60 42 60 40
  22+ 9905 63
  23+ 9906 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 990A 22 A3 80 A0
  24+ 990E 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9912 84 A0 83 A0
  25+ 9916 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 991A 80 A3 22 A0
  26+ 991E 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9922 40 60 42 60
  27+ 9926 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 992A
  29+ 992A 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 992E 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9932 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9936 84 00
  32+ 9938 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 993C 84 00
  33+ 993E 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9942 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9946 1F 1F 1F 1F
  35+ 994A 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 994E 1F 1F 1F 1F
  35+ 9952 1F
  36+ 9953 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9957 2F 2F 2F 2F
  36+ 995B 2F 2F
  37+ 995D 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9961 2F 2F 00
  38+ 9964
  39+ 9964              ; ----- ----- ----- ----- -----
  40+ 9964
  41+ 9964 42 99        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9966 3E 99        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9968 FA 98        Indice_mov_Izquierda defw Izquierda
  44+ 996A F7 98        Indice_mov_Derecha defw Derecha
  45+ 996C F4 98        Indice_mov_Abajo defw Abajo
  46+ 996E F1 98        Indice_mov_Arriba defw Arriba
  47+ 9970 2E 99        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9972 32 99        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9974 2A 99        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9976 38 99        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9978 FD 98        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 997A              ; ----- ----- ----- ----- -----
  53+ 997A
  54+ 997A 3A 7E 87     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 997D A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 997E 28 02            jr z,1F
  57+ 9980 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9982 3A 7F 87     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9985 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9987 32 7F 87         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 998A              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 998A 2A 7C 87         ld hl,(Puntero_mov)
  63+ 998D 7E               ld a,(hl)
  64+ 998E 32 7E 87         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9991 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9992 22 7C 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9995
  68+ 9995 3A 80 87     Decoder ld a,(Repetimos_db)
  69+ 9998 A7               and a
  70+ 9999 20 0C            jr nz,12F
  71+ 999B 2A 7C 87         ld hl,(Puntero_mov)
  72+ 999E 7E               ld a,(hl)
  73+ 999F A7               and a
  74+ 99A0 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 99A2 E6 0F            and $0f
  76+ 99A4 32 80 87         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 99A7              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 99A7 2A 7C 87     12 ld hl,(Puntero_mov)
  79+ 99AA CB 7E            bit 7,(hl)
  80+ 99AC 28 03            jr z,2F
  81+ 99AE CD A0 95         call Mov_down
  82+ 99B1 2A 7C 87     2 ld hl, (Puntero_mov)
  83+ 99B4 CB 76            bit 6,(hl)
  84+ 99B6 28 03            jr z,3F
  85+ 99B8 CD CE 95         call Mov_up
  86+ 99BB 2A 7C 87     3 ld hl, (Puntero_mov)
  87+ 99BE CB 6E            bit 5,(hl)
  88+ 99C0 28 03            jr z,4F
  89+ 99C2 CD FC 95         call Mov_right
  90+ 99C5 2A 7C 87     4 ld hl, (Puntero_mov)
  91+ 99C8 CB 66            bit 4,(hl)
  92+ 99CA 28 03            jr z,5F
  93+ 99CC CD 1A 97         call Mov_left
  94+ 99CF
  95+ 99CF              ; ---------- --------- --------- ---------- ----------
  96+ 99CF
  97+ 99CF 3A 80 87     5 ld a,(Repetimos_db)
  98+ 99D2 A7               and a
  99+ 99D3 28 07            jr z,6F
 100+ 99D5 3D               dec a
 101+ 99D6 32 80 87         ld (Repetimos_db),a
 102+ 99D9 28 01            jr z,6f
 103+ 99DB C9           11 ret
 104+ 99DC 21 7E 87     6 ld hl,Contador_db_mov
 105+ 99DF 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 99E0 2A 7C 87         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 99E3 23               inc hl
 108+ 99E4 22 7C 87         ld (Puntero_mov),hl
 109+ 99E7 18 F2            jr 11B
 110+ 99E9 2A 7A 87     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 99EC 3A 7F 87         ld a,(Incrementa_puntero)
 112+ 99EF 47               ld b,a
 113+ 99F0 23           8 inc hl
 114+ 99F1 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 99F3 5E               ld e,(hl)
 116+ 99F4 23               inc hl
 117+ 99F5 56               ld d,(hl)
 118+ 99F6 EB               ex de,hl
 119+ 99F7 22 7C 87         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 99FA 18 DF            jr 11B
 121+ 99FC
 122+ 99FC              ; ---------- --------- --------- ---------- ----------
 123+ 99FC              ;
 124+ 99FC              ;   11/8/22
 125+ 99FC              ;
 126+ 99FC              ;   Prepara_Puntero_mov
 127+ 99FC
 128+ 99FC E5           Prepara_Puntero_mov push hl
 129+ 99FD D5               push de
 130+ 99FE 2A 7A 87         ld hl,(Puntero_indice_mov)
 131+ 9A01 5E               ld e,(hl)
 132+ 9A02 23               inc hl
 133+ 9A03 56               ld d,(hl)
 134+ 9A04 EB               ex de,hl
 135+ 9A05 22 7C 87         ld (Puntero_mov),hl
 136+ 9A08 D1               pop de
 137+ 9A09 E1               pop hl
 138+ 9A0A C9               ret
 139+ 9A0B
 140+ 9A0B              ; ---------- --------- --------- ---------- ----------
 141+ 9A0B              ;
 142+ 9A0B              ;   11/8/22
 143+ 9A0B              ;
 144+ 9A0B              ;   Reinicia_el_movimiento
 145+ 9A0B
 146+ 9A0B CD FC 99     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9A0E AF               xor a
 148+ 9A0F 32 7E 87         ld (Contador_db_mov),a
 149+ 9A12 32 7F 87         ld (Incrementa_puntero),a
 150+ 9A15 C3 7A 99         jp Movimiento
 151+ 9A18 C9               ret
 152+ 9A19              ; ---------- --------- --------- ---------- ----------
 153+ 9A19
 154+ 9A19
 155+ 9A19
 156+ 9A19
 157+ 9A19
 158+ 9A19
 159+ 9A19
 160+ 9A19
 161+ 9A19
 162+ 9A19
 163+ 9A19
 164+ 9A19
 165+ 9A19
 166+ 9A19
 167+ 9A19
 168+ 9A19
 169+ 9A19
 170+ 9A19
# file closed: Patrones_de_mov.asm
1171  9A19              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9A19              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9A19              ;
   3+ 9A19              ;	3/1/23
   4+ 9A19              ;
   5+ 9A19              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9A19
   7+ 9A19              ;	ADC HL,SP	LD (addr),SP
   8+ 9A19              ;	ADD HL,SP	LD SP,(addr)
   9+ 9A19              ;	ADD IX,SP	LD SP,nn
  10+ 9A19              ; 	ADD IY,SP	LD SP,HL
  11+ 9A19              ;				LD SP,IX
  12+ 9A19              ;	DEC SP		LD SP,IY
  13+ 9A19
  14+ 9A19              ;	EX (SP),HL
  15+ 9A19              ;	EX (SP),IX
  16+ 9A19              ;	EX (SP),IY
  17+ 9A19
  18+ 9A19              ;	INC SP
  19+ 9A19
  20+ 9A19
  21+ 9A19                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 95 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 86 87         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 9B 87         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 99 87     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 9B 87         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 99 87     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 95 87  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1172  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1173  7FE6
1174  7FE6              	SAVESNA "Pruebas.sna", START
1175  7FE6
1176  7FE6
1177  7FE6
# file closed: Banco_de_pruebas.asm
