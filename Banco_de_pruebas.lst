# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 09 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD 7C 8D     	call Pinta_entidades
  44  AA1C CD 6E 8D     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD 9E 8D     	call Guarda_parametros_DRAW
  49  AA26 CD BE 8C     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 19 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD C1 8F     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD BA 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD D0 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD AA 8D     	call Recupera_parametros_DRAW
  66  AA3F CD 8C 8D     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 13 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 09 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BF 85        	defw Caja_1
 100+ 856E 00 86        	defw Caja_2
 101+ 8570 41 86        	defw Caja_3
 102+ 8572 82 86        	defw Caja_4
 103+ 8574 C3 86        	defw Caja_5
 104+ 8576 04 87        	defw Caja_6
 105+ 8578 45 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 116+ 8586
 117+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 118+ 8587
 119+ 8587 05           	db %00000101									; (Attr).
 120+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 121+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 122+ 858C
 123+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 124+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 125+ 8590
 126+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 127+ 8592 04           	db 4 											; (Cuad_objeto).
 128+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 129+ 8597
 130+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 131+ 8598
 132+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 133+ 859E
 134+ 859E 00 00        	db 0,0											; Variables_de_pintado
 135+ 85A0 00 00        	defw 0											;	" " " " " " "
 136+ 85A2 00 00        	defw 0											;	" " " " " " "
 137+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 85A8
 139+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 140+ 85AA
 141+ 85AA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 85AC
 143+ 85AC 00           	db 0											; (Autoriza_movimiento).
 144+ 85AD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 85B1 00 00
 145+ 85B3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 85B6
 147+ 85B6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 148+ 85B8 00           	db 0											; (Cola_de_desplazamiento).
 149+ 85B9
 150+ 85B9 00           	db 0 											; (Columnas).
 151+ 85BA 00 00        	defw 0											; (Limite_horizontal).
 152+ 85BC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 153+ 85BF
 154+ 85BF              ; ---------- ---------- ---------- ---------- ----------
 155+ 85BF
 156+ 85BF 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 157+ 85C1 00 00        	defw 0											; (Posicion_actual).
 158+ 85C3 00 00        	defw 0 											; (Puntero_objeto).
 159+ 85C5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 160+ 85C8
 161+ 85C8 00           	db %00000000 									; (Attr).
 162+ 85C9
 163+ 85C9 00 00        	defw 0											; (Indice_Sprite_der).
 164+ 85CB 00 00        	defw 0											; (Indice_Sprite_izq).
 165+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 166+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 167+ 85D1
 168+ 85D1 00 00        	defw 0											; (Posicion_inicio).
 169+ 85D3 00           	db 0											; (Cuad_objeto).
 170+ 85D4
 171+ 85D4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 172+ 85D8
 173+ 85D8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 174+ 85D9
 175+ 85D9 00 00 00...  	ds 6											; Variables_de_borrado
 176+ 85DF
 177+ 85DF 00 00        	db 0,0											; Variables_de_pintado
 178+ 85E1 00 00        	defw 0											;	" " " " " " "
 179+ 85E3 00 00        	defw 0											;	" " " " " " "
 180+ 85E5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85E9
 182+ 85E9 00 00        	defw 0 											; Puntero_de_impresion.
 183+ 85EB
 184+ 85EB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 185+ 85ED
 186+ 85ED 00           	db 0											; (Autoriza_movimiento).
 187+ 85EE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 187+ 85F2 00 00
 188+ 85F4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 189+ 85F7
 190+ 85F7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 191+ 85F9 00           	db 0											; (Cola_de_desplazamiento).
 192+ 85FA
 193+ 85FA 00           	db 0 											; (Columnas).
 194+ 85FB 00 00        	defw 0											; (Limite_horizontal).
 195+ 85FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 196+ 8600
 197+ 8600              ; ---------- ---------- ---------- ---------- ----------
 198+ 8600
 199+ 8600 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 200+ 8602 00 00        	defw 0											; (Posicion_actual).
 201+ 8604 00 00        	defw 0 											; (Puntero_objeto).
 202+ 8606 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 203+ 8609
 204+ 8609 00           	db %00000000 									; (Attr).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Indice_Sprite_der).
 207+ 860C 00 00        	defw 0											; (Indice_Sprite_izq).
 208+ 860E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 209+ 8610 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 210+ 8612
 211+ 8612 00 00        	defw 0											; (Posicion_inicio).
 212+ 8614 00           	db 0											; (Cuad_objeto).
 213+ 8615
 214+ 8615 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 215+ 8619
 216+ 8619 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 217+ 861A
 218+ 861A 00 00 00...  	ds 6											; Variables_de_borrado
 219+ 8620
 220+ 8620 00 00        	db 0,0											; Variables_de_pintado
 221+ 8622 00 00        	defw 0											;	" " " " " " "
 222+ 8624 00 00        	defw 0											;	" " " " " " "
 223+ 8626 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 224+ 862A
 225+ 862A 00 00        	defw 0 											; Puntero_de_impresion.
 226+ 862C
 227+ 862C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 228+ 862E
 229+ 862E 00           	db 0											; (Autoriza_movimiento).
 230+ 862F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 230+ 8633 00 00
 231+ 8635 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 232+ 8638
 233+ 8638 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 234+ 863A 00           	db 0											; (Cola_de_desplazamiento).
 235+ 863B
 236+ 863B 00           	db 0 											; (Columnas).
 237+ 863C 00 00        	defw 0											; (Limite_horizontal).
 238+ 863E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 239+ 8641
 240+ 8641              ; ---------- ---------- ---------- ---------- ----------
 241+ 8641
 242+ 8641 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 243+ 8643 00 00        	defw 0											; (Posicion_actual).
 244+ 8645 00 00        	defw 0 											; (Puntero_objeto).
 245+ 8647 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 246+ 864A
 247+ 864A 00           	db %00000000 									; (Attr).
 248+ 864B
 249+ 864B 00 00        	defw 0											; (Indice_Sprite_der).
 250+ 864D 00 00        	defw 0											; (Indice_Sprite_izq).
 251+ 864F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 252+ 8651 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 253+ 8653
 254+ 8653 00 00        	defw 0											; (Posicion_inicio).
 255+ 8655 00           	db 0											; (Cuad_objeto).
 256+ 8656
 257+ 8656 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 258+ 865A
 259+ 865A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 260+ 865B
 261+ 865B 00 00 00...  	ds 6											; Variables_de_borrado
 262+ 8661
 263+ 8661 00 00        	db 0,0											; Variables_de_pintado
 264+ 8663 00 00        	defw 0											;	" " " " " " "
 265+ 8665 00 00        	defw 0											;	" " " " " " "
 266+ 8667 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 267+ 866B
 268+ 866B 00 00        	defw 0 											; Puntero_de_impresion.
 269+ 866D
 270+ 866D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 866F
 272+ 866F 00           	db 0											; (Autoriza_movimiento).
 273+ 8670 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 8674 00 00
 274+ 8676 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 8679
 276+ 8679 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 867B 00           	db 0											; (Cola_de_desplazamiento).
 278+ 867C
 279+ 867C 00           	db 0 											; (Columnas).
 280+ 867D 00 00        	defw 0											; (Limite_horizontal).
 281+ 867F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 8682
 283+ 8682              ; ---------- ---------- ---------- ---------- ----------
 284+ 8682
 285+ 8682 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 8684 00 00        	defw 0											; (Posicion_actual).
 287+ 8686 00 00        	defw 0 											; (Puntero_objeto).
 288+ 8688 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 868B
 290+ 868B 00           	db %00000000 									; (Attr).
 291+ 868C
 292+ 868C 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 868E 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 8690 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 8694
 297+ 8694 00 00        	defw 0											; (Posicion_inicio).
 298+ 8696 00           	db 0											; (Cuad_objeto).
 299+ 8697
 300+ 8697 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 869B
 302+ 869B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 869C
 304+ 869C 00 00 00...  	ds 6											; Variables_de_borrado
 305+ 86A2
 306+ 86A2 00 00        	db 0,0											; Variables_de_pintado
 307+ 86A4 00 00        	defw 0											;	" " " " " " "
 308+ 86A6 00 00        	defw 0											;	" " " " " " "
 309+ 86A8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 310+ 86AC
 311+ 86AC 00 00        	defw 0 											; Puntero_de_impresion.
 312+ 86AE
 313+ 86AE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 314+ 86B0
 315+ 86B0 00           	db 0											; (Autoriza_movimiento).
 316+ 86B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 316+ 86B5 00 00
 317+ 86B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 318+ 86BA
 319+ 86BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 320+ 86BC 00           	db 0											; (Cola_de_desplazamiento).
 321+ 86BD
 322+ 86BD 00           	db 0 											; (Columnas).
 323+ 86BE 00 00        	defw 0											; (Limite_horizontal).
 324+ 86C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 325+ 86C3
 326+ 86C3              ; ---------- ---------- ---------- ---------- ----------
 327+ 86C3
 328+ 86C3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 329+ 86C5 00 00        	defw 0											; (Posicion_actual).
 330+ 86C7 00 00        	defw 0 											; (Puntero_objeto).
 331+ 86C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 332+ 86CC
 333+ 86CC 00           	db %00000000 									; (Attr).
 334+ 86CD
 335+ 86CD 00 00        	defw 0											; (Indice_Sprite_der).
 336+ 86CF 00 00        	defw 0											; (Indice_Sprite_izq).
 337+ 86D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 338+ 86D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 339+ 86D5
 340+ 86D5 00 00        	defw 0											; (Posicion_inicio).
 341+ 86D7 00           	db 0											; (Cuad_objeto).
 342+ 86D8
 343+ 86D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 344+ 86DC
 345+ 86DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 346+ 86DD
 347+ 86DD 00 00 00...  	ds 6											; Variables_de_borrado
 348+ 86E3
 349+ 86E3 00 00        	db 0,0											; Variables_de_pintado
 350+ 86E5 00 00        	defw 0											;	" " " " " " "
 351+ 86E7 00 00        	defw 0											;	" " " " " " "
 352+ 86E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 353+ 86ED
 354+ 86ED 00 00        	defw 0 											; Puntero_de_impresion.
 355+ 86EF
 356+ 86EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 357+ 86F1
 358+ 86F1 00           	db 0											; (Autoriza_movimiento).
 359+ 86F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 359+ 86F6 00 00
 360+ 86F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 361+ 86FB
 362+ 86FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 363+ 86FD 00           	db 0											; (Cola_de_desplazamiento).
 364+ 86FE
 365+ 86FE 00           	db 0 											; (Columnas).
 366+ 86FF 00 00        	defw 0											; (Limite_horizontal).
 367+ 8701 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 368+ 8704
 369+ 8704              ; ---------- ---------- ---------- ---------- ----------
 370+ 8704
 371+ 8704 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 372+ 8706 00 00        	defw 0											; (Posicion_actual).
 373+ 8708 00 00        	defw 0 											; (Puntero_objeto).
 374+ 870A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 375+ 870D
 376+ 870D 00           	db %00000000 									; (Attr).
 377+ 870E
 378+ 870E 00 00        	defw 0											; (Indice_Sprite_der).
 379+ 8710 00 00        	defw 0											; (Indice_Sprite_izq).
 380+ 8712 00 00        	defw 0											; (Puntero_DESPLZ_der).
 381+ 8714 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 382+ 8716
 383+ 8716 00 00        	defw 0											; (Posicion_inicio).
 384+ 8718 00           	db 0											; (Cuad_objeto).
 385+ 8719
 386+ 8719 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 387+ 871D
 388+ 871D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 389+ 871E
 390+ 871E 00 00 00...  	ds 6											; Variables_de_borrado
 391+ 8724
 392+ 8724 00 00        	db 0,0											; Variables_de_pintado
 393+ 8726 00 00        	defw 0											;	" " " " " " "
 394+ 8728 00 00        	defw 0											;	" " " " " " "
 395+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 872E
 397+ 872E 00 00        	defw 0 											; Puntero_de_impresion.
 398+ 8730
 399+ 8730 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 400+ 8732
 401+ 8732 00           	db 0											; (Autoriza_movimiento).
 402+ 8733 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 402+ 8737 00 00
 403+ 8739 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 404+ 873C
 405+ 873C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 406+ 873E 00           	db 0											; (Cola_de_desplazamiento).
 407+ 873F
 408+ 873F 00           	db 0 											; (Columnas).
 409+ 8740 00 00        	defw 0											; (Limite_horizontal).
 410+ 8742 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 411+ 8745
 412+ 8745              ; ---------- ---------- ---------- ---------- ----------
 413+ 8745
 414+ 8745 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 415+ 8747 00 00        	defw 0											; (Posicion_actual).
 416+ 8749 00 00        	defw 0 											; (Puntero_objeto).
 417+ 874B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 418+ 874E
 419+ 874E 00           	db %00000000 									; (Attr).
 420+ 874F
 421+ 874F 00 00        	defw 0											; (Indice_Sprite_der).
 422+ 8751 00 00        	defw 0											; (Indice_Sprite_izq).
 423+ 8753 00 00        	defw 0											; (Puntero_DESPLZ_der).
 424+ 8755 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 425+ 8757
 426+ 8757 00 00        	defw 0											; (Posicion_inicio).
 427+ 8759 00           	db 0											; (Cuad_objeto).
 428+ 875A
 429+ 875A 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 430+ 875E
 431+ 875E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 432+ 875F
 433+ 875F 00 00 00...  	ds 6											; Variables_de_borrado
 434+ 8765
 435+ 8765 00 00        	db 0,0											; Variables_de_pintado
 436+ 8767 00 00        	defw 0											;	" " " " " " "
 437+ 8769 00 00        	defw 0											;	" " " " " " "
 438+ 876B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 439+ 876F
 440+ 876F 00 00        	defw 0 											; Puntero_de_impresion.
 441+ 8771
 442+ 8771 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 443+ 8773
 444+ 8773 00           	db 0											; (Autoriza_movimiento).
 445+ 8774 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 445+ 8778 00 00
 446+ 877A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 447+ 877D
 448+ 877D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 449+ 877F 00           	db 0											; (Cola_de_desplazamiento).
 450+ 8780
 451+ 8780 00           	db 0 											; (Columnas).
 452+ 8781 00 00        	defw 0											; (Limite_horizontal).
 453+ 8783 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 454+ 8786
 455+ 8786              ; -------------------------------------------------------------------------------------
 456+ 8786              ;
 457+ 8786              ;	20/05/23
 458+ 8786              ;
 459+ 8786              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 460+ 8786              ;
 461+ 8786              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 462+ 8786              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 463+ 8786              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 464+ 8786              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 465+ 8786
 466+ 8786              Indice_de_entidades
 467+ 8786
 468+ 8786 8A 87        	defw Entidad_1
 469+ 8788 9A 87        	defw Entidad_2
 470+ 878A
 471+ 878A              ;	BADSAT, (Satélite malvado).
 472+ 878A
 473+ 878A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 474+ 878C 04           	db %00000100									; (Attr).
 475+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 476+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 477+ 8791 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 478+ 8793 01           	db 1											; (Cuad_objeto).
 479+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 480+ 8798 6A 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 481+ 879A
 482+ 879A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 483+ 879C 02           	db %00000010									; (Attr).
 484+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 485+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 486+ 87A1 40 50        	defw $5040                                      ; (Posicion_inicio).
 487+ 87A3 01           	db 1											; (Cuad_objeto).
 488+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 489+ 87A8 6A 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 490+ 87AA
# file closed: Cajas_y_disparos.asm
  97  87AA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87AA              ; 13/05/23
   2+ 87AA
   3+ 87AA              Indice_de_niveles
   4+ 87AA
   5+ 87AA B8 87        	defw Nivel_1
   6+ 87AC BB 87        	defw Nivel_2
   7+ 87AE C8 87        	defw Nivel_3
   8+ 87B0 D8 87        	defw Nivel_4
   9+ 87B2 EA 87        	defw Nivel_5
  10+ 87B4              ;	...
  11+ 87B4              ;	...
  12+ 87B4              ;	+ Niveles ...
  13+ 87B4
  14+ 87B4 00 00        	defw 0
  15+ 87B6 00 00        	defw 0
  16+ 87B8
  17+ 87B8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87B9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87BB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87C0 01 02
  21+ 87C2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87C6 01 02
  22+ 87C8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87CD 01
  24+ 87CE 03 01 01 01  	db 3,1,1,1,1
  24+ 87D2 01
  25+ 87D3 03 01 01 01  	db 3,1,1,1,1
  25+ 87D7 01
  26+ 87D8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87DD 01
  28+ 87DE 04 01 01 01  	db 4,1,1,1,1
  28+ 87E2 01
  29+ 87E3 04 01 01 01  	db 4,1,1,1,1
  29+ 87E7 01
  30+ 87E8 02 03        	db 2,3
  31+ 87EA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87EF 01
  33+ 87F0 05 01 01 01  	db 5,1,1,1,1
  33+ 87F4 01
  34+ 87F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87F9 01
  35+ 87FA 05 01 01 01  	db 5,1,1,1,1
  35+ 87FE 01
  36+ 87FF
  37+ 87FF              ;---------------------------------------------------------------------------------------------------------------
  38+ 87FF              ;
  39+ 87FF              ;   3/9/23
  40+ 87FF              ;
  41+ 87FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87FF              ;	_en la caja DRAW correspondiente.
  45+ 87FF              ;
  46+ 87FF              ;	MODIFICA: HL,DE y A.
  47+ 87FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87FF
  49+ 87FF              Inicializa_Punteros_de_nivel
  50+ 87FF
  51+ 87FF 21 AA 87     	ld hl,Indice_de_niveles
  52+ 8802 22 31 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8805 CD 0E 8C     	call Extrae_address
  54+ 8808 7E           	ld a,(hl)
  55+ 8809 32 FD 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 880C 23           	inc hl
  57+ 880D 22 33 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8810 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8811
  60+ 8811              ;---------------------------------------------------------------------------------------------------------------
  61+ 8811              ;
  62+ 8811              ;   13/5/23
  63+ 8811              ;
  64+ 8811              ;	Destruye A,BC,HL,DE
  65+ 8811
  66+ 8811              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8811              ;	_del juego.
  68+ 8811
  69+ 8811              Prepara_cajas
  70+ 8811
  71+ 8811              ; Preparamos los punteros de las cajas.
  72+ 8811
  73+ 8811 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8814 CD 0E 8C     	call Extrae_address
  75+ 8817 CD 54 88     	call Avanza_caja
  76+ 881A
  77+ 881A CD 98 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 881D
  79+ 881D 2A 33 89     	ld hl,(Datos_de_nivel)
  80+ 8820
  81+ 8820              ; HL está en los datos del nivel correspondiente.
  82+ 8820              ; B actuará como contador de cajas.
  83+ 8820
  84+ 8820 C5           1 push bc
  85+ 8821
  86+ 8821 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8822 CD 45 88     	call PreparaBC
  88+ 8825
  89+ 8825 21 86 87     	ld hl,Indice_de_entidades
  90+ 8828 CD 4D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 882B 22 03 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 882E
  93+ 882E CD 5E 88     	call Datos_de_entidad_a_caja
  94+ 8831
  95+ 8831 2A FB 88     	ld hl,(Indice_restore_caja)
  96+ 8834 CD 0E 8C     	call Extrae_address
  97+ 8837 CD 54 88     	call Avanza_caja
  98+ 883A
  99+ 883A 2A 33 89     	ld hl,(Datos_de_nivel)
 100+ 883D 23           	inc hl
 101+ 883E 22 33 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8841
 103+ 8841 C1           	pop bc
 104+ 8842 10 DC        	djnz 1B
 105+ 8844 C9           	ret
 106+ 8845
 107+ 8845 CB 27        PreparaBC sla a
 108+ 8847 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8849 4F           	ld c,a
 110+ 884A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 884C C9           	ret
 112+ 884D
 113+ 884D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 884E ED 4A        	adc hl,bc
 115+ 8850 CD 0E 8C     	call Extrae_address
 116+ 8853 C9           	ret
 117+ 8854
 118+ 8854 22 F7 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8857 13           	inc de
 120+ 8858 13           	inc de
 121+ 8859 EB           	ex de,hl
 122+ 885A 22 FB 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 885D C9           	ret
 124+ 885E
 125+ 885E              Datos_de_entidad_a_caja
 126+ 885E
 127+ 885E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 885E
 129+ 885E
 130+ 885E ED 5B F7 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8862
 132+ 8862 01 02 00     	ld bc,2
 133+ 8865 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8867
 135+ 8867 01 07 00     	ld bc,7
 136+ 886A CD 92 88     	call Situa_DE
 137+ 886D
 138+ 886D 01 05 00     	ld bc,5
 139+ 8870 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8872
 141+ 8872 01 04 00     	ld bc,4
 142+ 8875 CD 92 88     	call Situa_DE
 143+ 8878
 144+ 8878 01 07 00     	ld bc,7
 145+ 887B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 887D
 147+ 887D 01 14 00     	ld bc,20
 148+ 8880 CD 92 88     	call Situa_DE
 149+ 8883
 150+ 8883 01 02 00     	ld bc,2
 151+ 8886 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8888
 153+ 8888              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8888              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8888
 156+ 8888 01 0F 00     	ld bc,15									; *****
 157+ 888B CD 92 88     	call Situa_DE
 158+ 888E
 159+ 888E 3E 03        	ld a,3
 160+ 8890 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8891
 162+ 8891 C9           	ret
 163+ 8892
 164+ 8892 EB           Situa_DE ex de,hl
 165+ 8893 A7           	and a
 166+ 8894 ED 4A        	adc hl,bc
 167+ 8896 EB           	ex de,hl
 168+ 8897 C9           	ret
 169+ 8898
 170+ 8898              ;---------------------------------------------------------------------------------------------------------------
 171+ 8898              ;
 172+ 8898              ;	21/5/23
 173+ 8898              ;
 174+ 8898              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8898              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8898              ;
 177+ 8898              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8898              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8898              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8898              ;
 181+ 8898              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8898              ;	MODIFICA: A y B.
 183+ 8898              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8898
 185+ 8898              Admin_num_entidades
 186+ 8898
 187+ 8898              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8898
 189+ 8898 3A FD 88     	ld a,(Numero_de_entidades)
 190+ 889B A7           	and a
 191+ 889C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 889C              ;	jr z,$
 193+ 889C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 889C
 195+ 889C 20 03        	jr nz,3F
 196+ 889E
 197+ 889E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 889E
 199+ 889E CD FF 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88A1
 201+ 88A1 3A FD 88     3 ld a,(Numero_de_entidades)
 202+ 88A4 FE 07        	cp 7
 203+ 88A6 38 08        	jr c,1F
 204+ 88A8
 205+ 88A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88A8              ; Actualizamos variables.
 207+ 88A8
 208+ 88A8 3E 07        	ld a,7
 209+ 88AA 32 FE 88     	ld (Numero_parcial_de_entidades),a
 210+ 88AD 47           	ld b,a
 211+ 88AE 18 04        	jr 2F
 212+ 88B0
 213+ 88B0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88B0              ; (Numero_de_entidades)="0".
 215+ 88B0
 216+ 88B0 32 FE 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88B3 47           	ld b,a
 218+ 88B4 C9           2 ret
# file closed: Niveles.asm
  98  88B5
  99  88B5              ; ******************************************************************************************************************************************************************************************
 100  88B5              ; Constantes.
 101  88B5              ; ******************************************************************************************************************************************************************************************
 102  88B5              ;
 103  88B5              ; 10/11/23
 104  88B5
 105  88B5              ;
 106  88B5              ; Constantes generales.
 107  88B5              ;
 108  88B5
 109  88B5              Sprite_vacio equ $f000
 110  88B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88B5
 115  88B5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 116  88B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 117  88B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 118  88B5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 119  88B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 120  88B5
 121  88B5              ;														; 55 Bytes.
 122  88B5
 123  88B5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 124  88B5              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 125  88B5
 126  88B5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88B5
 128  88B5              ; ******************************************************************************************************************************************************************************************
 129  88B5              ; Variables.
 130  88B5              ; ******************************************************************************************************************************************************************************************
 131  88B5              ;
 132  88B5              ; 10/11//23
 133  88B5              ;
 134  88B5              ; Variables de DRAW. (Motor principal).
 135  88B5              ;
 136  88B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88B5
 138  88B5 00           Filas db 0												; Filas. [DRAW]
 139  88B6 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88BD
 145  88BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88BD
 147  88BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88BE 00           Attr db 0												; Atributos de la entidad:
 151  88BF
 152  88BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88BF              ;
 154  88BF              ;	COLORES: 0 ..... NEGRO
 155  88BF              ;    		 1 ..... AZUL
 156  88BF              ; 			 2 ..... ROJO
 157  88BF              ;			 3 ..... MAGENTA
 158  88BF              ; 			 4 ..... VERDE
 159  88BF              ; 			 5 ..... CIAN
 160  88BF              ;			 6 ..... AMARILLO
 161  88BF              ; 			 7 ..... BLANCO
 162  88BF
 163  88BF 00 00        Indice_Sprite_der defw 0
 164  88C1 00 00        Indice_Sprite_izq defw 0
 165  88C3 00 00        Puntero_DESPLZ_der defw 0
 166  88C5 00 00        Puntero_DESPLZ_izq defw 0
 167  88C7
 168  88C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88CA
 171  88CA              ; Variables de objeto. (Características).
 172  88CA
 173  88CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88CE
 178  88CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88CF 00 00 00...  Variables_de_borrado ds 6
 182  88D5
 183  88D5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88D7 00 00        	defw 0
 185  88D9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88DB 00 00 00 00  	db 0,0,0,0
 187  88DF
 188  88DF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 189  88E1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 190  88E1
 191  88E1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  88E1
 193  88E1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 194  88E2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 195  88E2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 196  88E2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 197  88E2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 198  88E2              ;
 199  88E2              ; 														DESCRIPCIÖN:
 200  88E2              ;
 201  88E2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 202  88E2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 203  88E2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 204  88E2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 205  88E2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 206  88E2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 207  88E2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 208  88E2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 209  88E2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 210  88E2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 211  88E2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 212  88E2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 213  88E2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 214  88E2              ;
 215  88E2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 216  88E2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 217  88E2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 218  88E2
 219  88E2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 220  88E2
 221  88E2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 222  88E4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 223  88E6 00 00        Puntero_indice_mov_bucle defw 0							;
 224  88E8              ;
 225  88E8              ;
 226  88E8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 227  88E9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 228  88E9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 229  88E9 00           Incrementa_puntero_backup db 0
 230  88EA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 231  88EB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 232  88EB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 233  88EC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 234  88ED 00           Cola_de_desplazamiento db 0								; Este byte indica:
 235  88EE              ;
 236  88EE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 237  88EE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 238  88EE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 239  88EE              ;
 240  88EE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 241  88EE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 242  88EE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 243  88EE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 244  88EE              ;
 245  88EE              ;														;	"$ff" ..... Bucle infinito de repetición.
 246  88EE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 247  88EE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 248  88EE
 249  88EE
 250  88EE              ; Variables de funcionamiento. [DRAW].
 251  88EE
 252  88EE 00           Columnas db 0
 253  88EF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 254  88F1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 255  88F1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 256  88F2
 257  88F2              ; variables de control general.
 258  88F2
 259  88F2 00           Ctrl_2 db 0
 260  88F3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 261  88F3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 262  88F3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 263  88F3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 264  88F3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 265  88F3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 266  88F3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 267  88F3              ;
 268  88F3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 269  88F3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 270  88F3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 271  88F3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 272  88F3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 273  88F3
 274  88F3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 275  88F4
 276  88F4              ;! 63; Bytes por entidad.
 277  88F4
 278  88F4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 279  88F4              ;					         		---------;      ;---------
 280  88F4
 281  88F4
 282  88F4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 283  88F4
 284  88F4 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 285  88F5
 286  88F5              ;														DESCRIPCIÓN:
 287  88F5              ;
 288  88F5              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 289  88F5              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 290  88F5              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 291  88F5              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 292  88F5              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 293  88F5              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 294  88F5
 295  88F5              ;														BIT 3, Recarga de nueva oleada.
 296  88F5              ;														BIT 4, Recarga de nueva oleada.
 297  88F5              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 298  88F5              ;														BIT 6, **** Frame completo.
 299  88F5              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 300  88F5
 301  88F5 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 302  88F7              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 303  88F7              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 304  88F7              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 305  88F7
 306  88F7              ; Gestión de ENTIDADES y CAJAS.
 307  88F7
 308  88F7 00 00        Puntero_store_caja defw 0
 309  88F9 00 00        Puntero_restore_caja defw 0
 310  88FB 00 00        Indice_restore_caja defw 0
 311  88FD 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 312  88FE 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 313  88FF 00           Entidades_en_curso db 0									; ..... ..... .....
 314  8900 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 315  8901              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 316  8901              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 317  8901              ;														; _ (Numero_de_malotes)="0".
 318  8901 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 319  8903 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 320  8905              ;														; _ puntero (Indice_entidades).
 321  8905
 322  8905
 323  8905              ;---------------------------------------------------------------------------------------------------------------
 324  8905              ;
 325  8905              ;	18/11/23
 326  8905              ;
 327  8905              ;	Álbumes.
 328  8905
 329  8905 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 330  8907              ;														; _variable para almacenar lo posición del puntero_
 331  8907              ; 														; _de pila, SP.
 332  8907 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 333  8909              ;														; La utiliza la rutina [Extrae_foto_registros].
 334  8909 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 335  890B 00 70        Stack_snapshot defw Album_de_fotos
 336  890D 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 337  890F
 338  890F              ;End_Snapshot defw Album_de_fotos
 339  890F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 340  890F 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 341  8911              ;														; _el snapshot de los registros del siguiente disparo.
 342  8911              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 343  8911 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 344  8913
 345  8913 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 346  8914              ;
 347  8914              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 348  8914              ; Gestión de Disparos.
 349  8914
 350  8914 00           Numero_de_disparotes db 0
 351  8915 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 352  8917 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 353  8919 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 354  891A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 355  891A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 356  891A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 357  891C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 358  891C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 359  891C              ;														; _produzca colisión.
 360  891C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 361  891E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 362  891E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 363  8921              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 364  8921 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 365  8924              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 366  8924 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 367  8925
 368  8925              ;---------------------------------------------------------------------------------------------------------------
 369  8925
 370  8925              ; Relojes y temporizaciones.
 371  8925
 372  8925 00           Contador_de_frames db 0
 373  8926 00           Contador_de_frames_2 db 0
 374  8927
 375  8927 04           Clock_explosion db 4
 376  8928 1E           Clock_Entidades_en_curso db 30
 377  8929 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 378  892A              ;														; Repite la oleada de entidades.
 379  892A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 380  892B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 381  892C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 382  892D
 383  892D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 384  892E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 385  892F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 386  8930
 387  8930              ;---------------------------------------------------------------------------------------------------------------
 388  8930
 389  8930              ; Gestión de NIVELES.
 390  8930
 391  8930 00           Nivel db 0												; Nivel actual del juego.
 392  8931 00 00        Puntero_indice_NIVELES defw 0
 393  8933 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 394  8935              ; 														; _ que definen el NIVEL.
 395  8935              ; Y todo comienza aquí .....
 396  8935              ;
 397  8935              ; Rutina principal *************************************************************************************************************************************************************************
 398  8935              ;
 399  8935              ;	16/11/22
 400  8935
 401  8935              START
 402  8935
 403  8935 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 404  8938 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 405  893A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 406  893C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 407  893E F3           	DI
 408  893F
 409  893F 3E 07        	ld a,%00000111
 410  8941 CD 97 98     	call Cls
 411  8944
 412  8944 CD E7 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 413  8947
 414  8947              ; INICIALIZACIÓN.
 415  8947
 416  8947 CD FF 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 417  894A CD 11 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 418  894D CD 76 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 419  8950              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 420  8950 CD 97 8C     	call Restore_entidad
 421  8953
 422  8953 21 FE 88     	ld hl,Numero_parcial_de_entidades
 423  8956 46           	ld b,(hl)
 424  8957 04           	inc b
 425  8958 05           	dec b
 426  8959 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 427  895B
 428  895B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 429  895B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 430  895B              ;	Pintamos el resto de entidades:
 431  895B
 432  895B              ;	INICIA ENTIDADES !!!!!
 433  895B
 434  895B C5           1 push bc  												; Guardo el contador de entidades.
 435  895C CD 46 8B     	call Inicia_entidad
 436  895F C1           	pop bc
 437  8960 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 438  8962
 439  8962              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 440  8962              ; (Esto se dá cuando se inicia una nueva oleada).
 441  8962
 442  8962 3A F4 88     	ld a,(Ctrl_1)
 443  8965 CB 5F        	bit 3,a
 444  8967 20 1B        	jr nz,5F											; Loop
 445  8969
 446  8969              ; 	INICIA AMADEUS !!!!!
 447  8969
 448  8969 CD BE 8C     3 call Restore_Amadeus
 449  896C CD 14 8C     	call Inicia_Puntero_objeto
 450  896F CD 8A 92     	call Draw
 451  8972 CD A0 7F     	call Guarda_foto_registros
 452  8975 CD 3B 8D     	call Guarda_datos_de_borrado_Amadeus
 453  8978
 454  8978 11 7E 85     	ld de,Amadeus_db
 455  897B CD D0 8C     	call Store_Amadeus
 456  897E
 457  897E              ; 	INICIA DISPAROS !!!!!
 458  897E
 459  897E CD 8C 8B     	call Inicia_Puntero_Disparo_Entidades
 460  8981 CD 93 8B     	call Inicia_Puntero_Disparo_Amadeus
 461  8984
 462  8984              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 463  8984
 464  8984 CD 76 8B     5 call Inicia_punteros_de_cajas
 465  8987 CD 97 8C     	call Restore_entidad
 466  898A
 467  898A 3A F4 88     	ld a,(Ctrl_1)
 468  898D CB 5F        	bit 3,a
 469  898F 28 07        	jr z,6F
 470  8991
 471  8991              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 472  8991
 473  8991 21 F4 88     	ld hl,Ctrl_1
 474  8994 CB 9E        	res 3,(hl)
 475  8996 18 07        	jr Main
 476  8998
 477  8998              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 478  8998
 479  8998 21 13 89     6 ld hl,Ctrl_3
 480  899B CB C6        	set 0,(hl)											; Frame completo.
 481  899D FB           	ei
 482  899E 76           	halt
 483  899F
 484  899F              ; ------------------------------------
 485  899F
 486  899F              Main
 487  899F              ;
 488  899F              ;	12/11/23
 489  899F
 490  899F              ; Aparece nueva entidad ???
 491  899F
 492  899F              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 493  899F              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 494  899F              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 495  899F              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 496  899F              ;														; _un 2º bloque.
 497  899F
 498  899F 3A 28 89     	ld a,(Clock_Entidades_en_curso)
 499  89A2 47           	ld b,a
 500  89A3 3A 25 89     	ld a,(Contador_de_frames)
 501  89A6 B8           	cp b
 502  89A7 20 18        	jr nz,13F
 503  89A9
 504  89A9              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 505  89A9              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 506  89A9              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 507  89A9              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 508  89A9
 509  89A9              ;	inc a
 510  89A9              ;	cp b
 511  89A9              ;	jr nz,13F
 512  89A9
 513  89A9
 514  89A9              ;23 ld (Contador_de_frames),a
 515  89A9
 516  89A9              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 517  89A9              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 518  89A9
 519  89A9 3A FE 88     21 ld a,(Numero_parcial_de_entidades)
 520  89AC 47           	ld b,a
 521  89AD 3A FF 88     	ld a,(Entidades_en_curso)
 522  89B0 B8           	cp b
 523  89B1 28 0E        	jr z,13F
 524  89B3 30 0C        	jr nc,13F
 525  89B5
 526  89B5              ; --- --- --- --- ---
 527  89B5
 528  89B5 3C           	inc a
 529  89B6 32 FF 88     	ld (Entidades_en_curso),a
 530  89B9
 531  89B9              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 532  89B9
 533  89B9 3A 28 89     	ld a,(Clock_Entidades_en_curso)
 534  89BC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 535  89BC              ;! _ IMPREDECIBLE !!!!
 536  89BC C6 32        	add 50
 537  89BE 32 28 89     	ld (Clock_Entidades_en_curso),a
 538  89C1
 539  89C1              ; -------------------------------------------------------------------------------------------------------------
 540  89C1
 541  89C1              ; Habilita disparos.
 542  89C1
 543  89C1 21 2A 89     13 ld hl,Disparo_Amadeus
 544  89C4 11 2C 89     	ld de,CLOCK_repone_disparo_Amadeus
 545  89C7 CD 5B 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 546  89CA
 547  89CA 21 2D 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 548  89CD 11 2F 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 549  89D0 CD 5B 9C     	call Habilita_disparos
 550  89D3
 551  89D3              ; COLISIONES.
 552  89D3
 553  89D3 CD 8A 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 554  89D6
 555  89D6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 556  89D6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 557  89D6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 558  89D6
 559  89D6 AF           	xor a
 560  89D7 32 19 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 561  89DA
 562  89DA CD 76 8B     	call Inicia_punteros_de_cajas
 563  89DD CD 97 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 564  89E0              ; 														; _ en DRAW.
 565  89E0 3A B5 88     	ld a,(Filas)
 566  89E3 A7           	and a
 567  89E4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 568  89E6 CD A9 8C     	call Incrementa_punteros_de_cajas
 569  89E9 18 F2        	jr 12B
 570  89EB
 571  89EB              ; ---------------------------------------------------------------------------------------
 572  89EB
 573  89EB 3A FE 88     10 ld a,(Numero_parcial_de_entidades)
 574  89EE 47               ld b,a
 575  89EF A7           	and a
 576  89F0 20 14        	jr nz,11F
 577  89F2
 578  89F2 21 F4 88     	ld hl,Ctrl_1
 579  89F5 CB 66        	bit 4,(hl)
 580  89F7 C2 85 8A     	jp nz,16F
 581  89FA
 582  89FA              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 583  89FA
 584  89FA 21 F4 88     	ld hl,Ctrl_1
 585  89FD CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 586  89FF
 587  89FF 3A 25 89     	ld a,(Contador_de_frames)
 588  8A02 3C           	inc a
 589  8A03 32 29 89     	ld (Activa_recarga_cajas),a
 590  8A06
 591  8A06              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 592  8A06
 593  8A06 3A FF 88     11 ld a,(Entidades_en_curso)
 594  8A09 A7           	and a
 595  8A0A CA 85 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 596  8A0D 47           	ld b,a												; No hay entidades que gestionar.
 597  8A0E
 598  8A0E              ; Código que ejecutamos con cada entidad:
 599  8A0E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 600  8A0E
 601  8A0E C5           15 push bc 												; Nº de entidades en curso.
 602  8A0F
 603  8A0F              ; Impacto ???
 604  8A0F
 605  8A0F 3A CE 88     22 ld a,(Impacto)
 606  8A12 A7           	and a
 607  8A13 28 31        	jr z,8F
 608  8A15
 609  8A15              ; Hay Impacto en esta entidad.
 610  8A15
 611  8A15 21 27 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 612  8A18 35           	dec (hl)
 613  8A19 C2 7A 8A     	jp nz,17F
 614  8A1C
 615  8A1C              ;! Velocidad de la animación de la explosión.
 616  8A1C
 617  8A1C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 618  8A1E              ;														; _,(velocidad de la explosión).
 619  8A1E
 620  8A1E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 621  8A1E
 622  8A1E CD 5B 8D     	call Repone_datos_de_borrado
 623  8A21 CD B4 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 624  8A24
 625  8A24              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 626  8A24
 627  8A24 3A F2 88     	ld a,(Ctrl_2)
 628  8A27 CB 4F        	bit 1,a
 629  8A29 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 630  8A2B
 631  8A2B              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 632  8A2B
 633  8A2B 3A BD 88     	ld a,(CTRL_DESPLZ)
 634  8A2E A7           	and a
 635  8A2F 20 08        	jr nz,18F
 636  8A31
 637  8A31 21 84 84     	ld hl,Indice_Explosion_2x2-2
 638  8A34 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 639  8A37 18 06        	jr 19F
 640  8A39
 641  8A39 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 642  8A3C 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 643  8A3F
 644  8A3F 21 F2 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 645  8A42 CB CE        	set 1,(hl)
 646  8A44 18 22        	jr 7F
 647  8A46
 648  8A46              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 649  8A46              ; _con las coordenadas de la entidad almacenada en DRAW.
 650  8A46
 651  8A46 3A F4 88     8 ld a,(Ctrl_1)
 652  8A49 CB 57        	bit 2,a
 653  8A4B 28 1B        	jr z,7F
 654  8A4D
 655  8A4D 2A 1C 89     	ld hl,(Coordenadas_disparo_certero)
 656  8A50 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 657  8A51              ;														; E contiene la coordenada_X del disparo.
 658  8A51 2A BB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 659  8A54              ;														; H FILA, (Coordenada_y de la entidad).
 660  8A54 A7           	and a
 661  8A55 ED 52        	sbc hl,de
 662  8A57
 663  8A57 CD A3 91     	call Determina_resultado_comparativa
 664  8A5A
 665  8A5A 78           	ld a,b
 666  8A5B A7           	and a
 667  8A5C 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 668  8A5E
 669  8A5E              ; ----- ----- -----
 670  8A5E
 671  8A5E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 672  8A60 32 CE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 673  8A63
 674  8A63 21 F4 88     	ld hl,Ctrl_1
 675  8A66 CB 96        	res 2,(hl)
 676  8A68
 677  8A68 CD D6 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 678  8A6B
 679  8A6B 3A E1 88     	ld a,(Ctrl_0)
 680  8A6E CB 67        	bit 4,a
 681  8A70 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 682  8A72
 683  8A72              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 684  8A72              ; [[[
 685  8A72              ;	call Detecta_disparo_entidad
 686  8A72              ; ]]]
 687  8A72 CD 57 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 688  8A75
 689  8A75 21 E1 88     	ld hl,Ctrl_0
 690  8A78 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 691  8A7A
 692  8A7A CD 5C 8C     17 call Store_Restore_cajas
 693  8A7D
 694  8A7D C1           	pop bc
 695  8A7E 10 8E        	djnz 15B
 696  8A80
 697  8A80              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 698  8A80              ; Hemos gestionado todas las unidades.
 699  8A80              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 700  8A80
 701  8A80 21 F4 88     	ld hl,Ctrl_1
 702  8A83 CB 96        	res 2,(hl)
 703  8A85
 704  8A85 21 13 89     16 ld hl,Ctrl_3
 705  8A88 CB C6        	set 0,(hl)											; Frame completo.
 706  8A8A AF           	xor a
 707  8A8B D3 FE        	out ($fe),a
 708  8A8D FB           	ei
 709  8A8E 76           	halt
 710  8A8F
 711  8A8F              ; ----------------------------------------
 712  8A8F
 713  8A8F 3A F4 88     	ld a,(Ctrl_1) 										; Existe Loop?
 714  8A92 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 715  8A94 CA 9F 89     	jp z,Main
 716  8A97
 717  8A97              ; RECARGA DE NUEVA OLEADA.
 718  8A97
 719  8A97 3A 25 89     	ld a,(Contador_de_frames)
 720  8A9A 47           	ld b,a
 721  8A9B 3A 29 89     	ld a,(Activa_recarga_cajas)
 722  8A9E B8           	cp b
 723  8A9F 28 08        	jr z,20F
 724  8AA1
 725  8AA1 21 F4 88     	ld hl,Ctrl_1
 726  8AA4 CB E6        	set 4,(hl)
 727  8AA6 C3 9F 89     	jp Main
 728  8AA9
 729  8AA9 21 F4 88     20 ld hl,Ctrl_1
 730  8AAC CB A6        	res 4,(hl)
 731  8AAE
 732  8AAE 3A 25 89     	ld a,(Contador_de_frames)
 733  8AB1
 734  8AB1              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 735  8AB1              ;! _ IMPREDECIBLE !!!!
 736  8AB1
 737  8AB1 C6 0A        	add 10
 738  8AB3 32 28 89     	ld (Clock_Entidades_en_curso),a
 739  8AB6
 740  8AB6 C3 4A 89     	jp 4B
 741  8AB9
 742  8AB9 C9           	ret
 743  8ABA
 744  8ABA              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 745  8ABA              ;
 746  8ABA              ;	16/11/23
 747  8ABA
 748  8ABA              Gestiona_Amadeus
 749  8ABA
 750  8ABA              ;! Activa/desactiva impacto con Amadeus.
 751  8ABA
 752  8ABA              ;	ld a,(Impacto)
 753  8ABA              ;	and a
 754  8ABA              ;	jr nz,2F
 755  8ABA
 756  8ABA CD 33 8B     	call Mov_Amadeus
 757  8ABD
 758  8ABD 3A E1 88     2 ld a,(Ctrl_0)
 759  8AC0 CB 67        	bit 4,a
 760  8AC2 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 761  8AC4
 762  8AC4 CD 57 8B     	call Guarda_foto_entidad_a_pintar
 763  8AC7 CD 3B 8D     	call Guarda_datos_de_borrado_Amadeus
 764  8ACA
 765  8ACA 21 E1 88     1 ld hl,Ctrl_0
 766  8ACD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 767  8ACF
 768  8ACF CD 2E 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 769  8AD2
 770  8AD2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 771  8AD2
 772  8AD2 CD F6 8B     	call Calcula_numero_de_disparotes
 773  8AD5
 774  8AD5 C9           	ret
 775  8AD6
 776  8AD6              ; --------------------------------------------------------------------------------------------------------------
 777  8AD6              ;
 778  8AD6              ;	27/05/23
 779  8AD6
 780  8AD6              Mov_obj
 781  8AD6
 782  8AD6 3A F2 88     	ld a,(Ctrl_2)
 783  8AD9 CB 4F        	bit 1,a
 784  8ADB 28 30        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 785  8ADD
 786  8ADD              ; Explosión:
 787  8ADD
 788  8ADD 3A F3 88     	ld a,(Frames_explosion)
 789  8AE0 A7           	and a
 790  8AE1 20 11        	jr nz,4F
 791  8AE3
 792  8AE3              ; Una alimaña menos!!!!!!!!!1
 793  8AE3
 794  8AE3 CD D9 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 795  8AE6 21 FE 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 796  8AE9 35           	dec (hl)
 797  8AEA 21 FF 88     	ld hl,Entidades_en_curso
 798  8AED 35           	dec (hl)
 799  8AEE 21 FD 88     	ld hl,Numero_de_entidades
 800  8AF1 35           	dec (hl)
 801  8AF2 18 3E        	jr 3F
 802  8AF4
 803  8AF4              ; -----
 804  8AF4
 805  8AF4              ;	`Movemos´ la explosión.
 806  8AF4
 807  8AF4 2A C3 88     4 ld hl,(Puntero_DESPLZ_der)
 808  8AF7 23           	inc hl
 809  8AF8 23           	inc hl
 810  8AF9 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 811  8AFC CD 0E 8C     	call Extrae_address
 812  8AFF 22 B9 88     	ld (Puntero_objeto),hl
 813  8B02
 814  8B02 21 F3 88     	ld hl,Frames_explosion
 815  8B05 35           	dec (hl)
 816  8B06
 817  8B06 21 E1 88     	ld hl,Ctrl_0
 818  8B09 CB E6        	set 4,(hl)
 819  8B0B
 820  8B0B 18 25        	jr 3F
 821  8B0D
 822  8B0D AF           2 xor a
 823  8B0E 32 E1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 824  8B11
 825  8B11              ; Movemos Entidades malignas.
 826  8B11
 827  8B11 CD 06 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 828  8B14
 829  8B14 3A E1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 830  8B17 CB 67        	bit 4,a
 831  8B19 C8           	ret z
 832  8B1A
 833  8B1A              ; Ha habido desplazamiento de la entidad maligna.
 834  8B1A              ; Ha llegado a zona de AMADEUS ???
 835  8B1A
 836  8B1A 3A BC 88     	ld a,(Coordenada_y)
 837  8B1D FE 14        	cp $14
 838  8B1F 38 08        	jr c,1F
 839  8B21
 840  8B21              ; ---------
 841  8B21
 842  8B21              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 843  8B21              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 844  8B21
 845  8B21 F3           	di
 846  8B22 CD 53 8F     	call Genera_coordenadas_X
 847  8B25 CD 8F 8F     	call Compara_coordenadas_X
 848  8B28 FB           	ei
 849  8B29
 850  8B29              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 851  8B29
 852  8B29              ; ---------
 853  8B29
 854  8B29 CD 5E 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 855  8B2C CD 5B 8D     	call Repone_datos_de_borrado
 856  8B2F CD B4 8B     	call Limpia_Variables_de_borrado
 857  8B32
 858  8B32 C9           3 ret													; _de la misma.
 859  8B33
 860  8B33              ; --------------------------------------------------------------------------------------------------------------
 861  8B33              ;
 862  8B33              ;	29/1/23
 863  8B33
 864  8B33              Mov_Amadeus
 865  8B33
 866  8B33 CD FB 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 867  8B36
 868  8B36 3A E1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 869  8B39 CB 67        	bit 4,a
 870  8B3B C8           	ret z
 871  8B3C
 872  8B3C              ; ---------
 873  8B3C
 874  8B3C CD 5E 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 875  8B3F CD 4B 8D     	call Repone_datos_de_borrado_Amadeus
 876  8B42 CD B4 8B     	call Limpia_Variables_de_borrado
 877  8B45
 878  8B45 C9           	ret
 879  8B46
 880  8B46              ; -----------------------------------------------------------------------------------
 881  8B46              ;
 882  8B46              ;	16/11/23
 883  8B46
 884  8B46 CD 14 8C     Inicia_entidad	call Inicia_Puntero_objeto
 885  8B49 CD AB 98     	call Recompone_posicion_inicio
 886  8B4C CD 8A 92     	call Draw
 887  8B4F CD A0 7F     	call Guarda_foto_registros
 888  8B52 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 889  8B53              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 890  8B53 CD 5C 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 891  8B56 C9           	ret
 892  8B57
 893  8B57              ; --------------------------------------------------------------------------------------------------------------
 894  8B57              ;
 895  8B57              ;	31/08/23
 896  8B57              ;
 897  8B57              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 898  8B57              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 899  8B57
 900  8B57              Guarda_foto_entidad_a_pintar
 901  8B57
 902  8B57              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 903  8B57
 904  8B57 CD 8A 92     	call Draw
 905  8B5A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 906  8B5D C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 907  8B5E
 908  8B5E              ; --------------------------------------------------------------------------------------------------------------
 909  8B5E              ;
 910  8B5E              ;	19/9/23
 911  8B5E
 912  8B5E 21 B5 88     Prepara_var_pintado ld hl,Filas
 913  8B61 11 D5 88     	ld de,Variables_de_pintado
 914  8B64 01 08 00     	ld bc,8
 915  8B67 ED B0        	ldir
 916  8B69 C9           	ret
 917  8B6A
 918  8B6A              ; --------------------------------------------------------------------------------------------------------------
 919  8B6A
 920  8B6A 21 D5 88     Repone_pintar ld hl,Variables_de_pintado
 921  8B6D 11 B5 88     	ld de,Filas
 922  8B70 01 08 00     	ld bc,8
 923  8B73 ED B0        	ldir
 924  8B75 C9           	ret
 925  8B76
 926  8B76              ; *************************************************************************************************************************************************************
 927  8B76              ;
 928  8B76              ; 8/1/23
 929  8B76              ;
 930  8B76              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 931  8B76              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 932  8B76              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 933  8B76
 934  8B76              ; Destruye HL y DE !!!!!
 935  8B76
 936  8B76              Inicia_punteros_de_cajas
 937  8B76
 938  8B76 21 6C 85     	ld hl,Indice_de_cajas
 939  8B79 CD 0E 8C         call Extrae_address
 940  8B7C 22 F7 88         ld (Puntero_store_caja),hl
 941  8B7F 21 6E 85     	ld hl,Indice_de_cajas+2
 942  8B82 22 FB 88     	ld (Indice_restore_caja),hl
 943  8B85 CD 0E 8C     	call Extrae_address
 944  8B88 22 F9 88     	ld (Puntero_restore_caja),hl
 945  8B8B C9               ret
 946  8B8C
 947  8B8C              ; *************************************************************************************************************************************************************
 948  8B8C              ;
 949  8B8C              ; 8/1/23
 950  8B8C              ;
 951  8B8C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 952  8B8C
 953  8B8C 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 954  8B8F 22 15 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 955  8B92 C9           	ret
 956  8B93 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 957  8B96 22 17 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 958  8B99 C9           	ret
 959  8B9A
 960  8B9A              ; -------------------------------------------------------------------------------------------------------------
 961  8B9A              ;
 962  8B9A              ; 21/9/23
 963  8B9A              ;
 964  8B9A
 965  8B9A              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 966  8B9A
 967  8B9A              Limpia_album_Amadeus
 968  8B9A
 969  8B9A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 970  8B9D 7E           	ld a,(hl)
 971  8B9E A7           	and a
 972  8B9F C8           	ret z
 973  8BA0
 974  8BA0 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 975  8BA3 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 976  8BA6 01 0B 00     	ld bc,11
 977  8BA9 AF           	xor a
 978  8BAA 77           	ld (hl),a
 979  8BAB ED B0        	ldir
 980  8BAD
 981  8BAD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 982  8BB0 22 11 89     	ld (End_Snapshot_Amadeus),hl
 983  8BB3
 984  8BB3 C9           	ret
 985  8BB4
 986  8BB4 21 CF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 987  8BB7 11 D0 88     	ld de,Variables_de_borrado+1
 988  8BBA 01 05 00     	ld bc,5
 989  8BBD AF           	xor a
 990  8BBE 77           	ld (hl),a
 991  8BBF ED B0        	ldir
 992  8BC1 C9           	ret
 993  8BC2
 994  8BC2              ; -------------------------------------------------------------------------------------------------------------
 995  8BC2              ;
 996  8BC2              ; 8/9/23
 997  8BC2              ;
 998  8BC2
 999  8BC2              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1000  8BC2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1001  8BC2
1002  8BC2              Calcula_numero_de_malotes
1003  8BC2
1004  8BC2 21 00 70     	ld hl,Album_de_fotos
1005  8BC5 EB           	ex de,hl
1006  8BC6 2A 0B 89     	ld hl,(Stack_snapshot)
1007  8BC9
1008  8BC9 06 00        	ld b,0
1009  8BCB 7D           	ld a,l
1010  8BCC 93           	sub e
1011  8BCD 28 07        	jr z,1F
1012  8BCF
1013  8BCF              ; Nº de malotes no es "0".
1014  8BCF
1015  8BCF D6 06        2 sub 6
1016  8BD1 04           	inc b
1017  8BD2 A7           	and a
1018  8BD3 20 FA        	jr nz,2B
1019  8BD5 78           	ld a,b
1020  8BD6
1021  8BD6 32 00 89     1 ld (Numero_de_malotes),a
1022  8BD9 C9           	ret
1023  8BDA
1024  8BDA              ; -------------------------------------------------------------------------------------------------------------
1025  8BDA              ;
1026  8BDA              ; 8/9/23
1027  8BDA              ;
1028  8BDA
1029  8BDA              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1030  8BDA              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1031  8BDA
1032  8BDA              Calcula_malotes_Amadeus
1033  8BDA
1034  8BDA 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1035  8BDD EB           	ex de,hl
1036  8BDE 2A 11 89     	ld hl,(End_Snapshot_Amadeus)
1037  8BE1
1038  8BE1 7C           	ld a,h
1039  8BE2 A7           	and a
1040  8BE3 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1041  8BE5
1042  8BE5 06 00        	ld b,0
1043  8BE7 7D           	ld a,l
1044  8BE8 93           	sub e
1045  8BE9 28 07        	jr z,1F
1046  8BEB
1047  8BEB              ; Nº de malotes no es "0".
1048  8BEB
1049  8BEB D6 06        2 sub 6
1050  8BED 04           	inc b
1051  8BEE A7           	and a
1052  8BEF 20 FA        	jr nz,2B
1053  8BF1 78           	ld a,b
1054  8BF2
1055  8BF2 32 00 89     1 ld (Numero_de_malotes),a
1056  8BF5 C9           	ret
1057  8BF6
1058  8BF6              ; -------------------------------------------------------------------------------------------------------------
1059  8BF6              ;
1060  8BF6              ; 28/2/23
1061  8BF6              ;
1062  8BF6
1063  8BF6              Calcula_numero_de_disparotes
1064  8BF6
1065  8BF6 21 56 70     	ld hl,Album_de_fotos_disparos
1066  8BF9 EB           	ex de,hl
1067  8BFA 2A 0F 89     	ld hl,(End_Snapshot_disparos)
1068  8BFD
1069  8BFD 06 00        	ld b,0
1070  8BFF 7D           	ld a,l
1071  8C00 93           	sub e
1072  8C01 28 07        	jr z,1F
1073  8C03
1074  8C03              ; Nº de malotes no es "0".
1075  8C03
1076  8C03 D6 06        2 sub 6
1077  8C05 04           	inc b
1078  8C06 A7           	and a
1079  8C07 20 FA        	jr nz,2B
1080  8C09 78           	ld a,b
1081  8C0A
1082  8C0A 32 14 89     1 ld (Numero_de_disparotes),a
1083  8C0D C9           	ret
1084  8C0E
1085  8C0E              ; *************************************************************************************************************************************************************
1086  8C0E              ;
1087  8C0E              ; 20/10/22
1088  8C0E              ;
1089  8C0E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1090  8C0E              ;
1091  8C0E              ; Destruye el puntero y DE !!!!!
1092  8C0E
1093  8C0E 5E           Extrae_address ld e,(hl)
1094  8C0F 23           	inc hl
1095  8C10 56           	ld d,(hl)
1096  8C11 2B           	dec hl
1097  8C12 EB           	ex de,hl
1098  8C13 C9           	ret
1099  8C14
1100  8C14              ; *************************************************************************************************************************************************************
1101  8C14              ;
1102  8C14              ;	7/2/23
1103  8C14              ;
1104  8C14              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1105  8C14              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1106  8C14              ;
1107  8C14              ;   Destruye HL y BC !!!!!,
1108  8C14              ;
1109  8C14              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1110  8C14              ;					"0" ..... Izquierda.
1111  8C14
1112  8C14              Inicia_Puntero_objeto
1113  8C14
1114  8C14 3A C9 88     	ld a,(Cuad_objeto)
1115  8C17 E6 01        	and 1
1116  8C19 F5           	push af
1117  8C1A CC 38 8C     	call z,Inicia_puntero_objeto_izq
1118  8C1D F1           	pop af
1119  8C1E 28 2B        	jr z,1F
1120  8C20 CD 25 8C     	call Inicia_puntero_objeto_der
1121  8C23 18 26        	jr 1F
1122  8C25
1123  8C25              ; Arrancamos desde la parte izquierda de la pantalla.
1124  8C25              ; Iniciamos (Indice_Sprite_der).
1125  8C25
1126  8C25 2A BF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1127  8C28 22 C3 88     	ld (Puntero_DESPLZ_der),hl
1128  8C2B CD 0E 8C     	call Extrae_address
1129  8C2E 22 B9 88     	ld (Puntero_objeto),hl
1130  8C31
1131  8C31 2A C1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1132  8C34 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
1133  8C37 C9           	ret
1134  8C38
1135  8C38              ; Arrancamos desde la parte derecha de la pantalla.
1136  8C38              ; Iniciamos (Indice_Sprite_izq).
1137  8C38
1138  8C38 2A C1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1139  8C3B 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
1140  8C3E CD 0E 8C     	call Extrae_address
1141  8C41 22 B9 88     	ld (Puntero_objeto),hl
1142  8C44
1143  8C44 2A BF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1144  8C47 22 C3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1145  8C4A C9           	ret
1146  8C4B
1147  8C4B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1148  8C4B
1149  8C4B 21 40 83     1 ld hl,Amadeus
1150  8C4E ED 4B B9 88  	ld bc,(Puntero_objeto)
1151  8C52 B7 ED 42     	sub hl,bc
1152  8C55 C0           	ret nz
1153  8C56 21 E1 88     	ld hl,Ctrl_0
1154  8C59 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1155  8C5B C9           	ret 												; _de nuestra nave en los extremos.
1156  8C5C
1157  8C5C              ; *************************************************************************************************************************************************************
1158  8C5C              ;
1159  8C5C              ;	14/5/23
1160  8C5C              ;
1161  8C5C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1162  8C5C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1163  8C5C
1164  8C5C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1165  8C5C              ;	_de la 2ª y 3ª entidad respectivamente.
1166  8C5C
1167  8C5C              Store_Restore_cajas
1168  8C5C
1169  8C5C E5           	push hl
1170  8C5D D5           	push de
1171  8C5E C5            	push bc
1172  8C5F
1173  8C5F              ;	STORE !!!!!
1174  8C5F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1175  8C5F
1176  8C5F 21 B5 88     	ld hl,Filas
1177  8C62 ED 5B F7 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1178  8C66 01 3F 00     	ld bc,63
1179  8C69 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1180  8C6B
1181  8C6B              ; 	Entidad_sospechosa. 20/4/23
1182  8C6B
1183  8C6B 3A CE 88     	ld a,(Impacto)
1184  8C6E A7           	and a
1185  8C6F 28 0C        	jr z,1F
1186  8C71
1187  8C71 2A F7 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1188  8C74 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1189  8C77 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1190  8C78 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1191  8C7A 22 1A 89     	ld (Entidad_sospechosa_de_colision),hl
1192  8C7D
1193  8C7D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1194  8C7D
1195  8C7D 2A F9 88     1 ld hl,(Puntero_restore_caja)
1196  8C80 7E           	ld a,(hl)
1197  8C81 A7           	and a
1198  8C82 F5           	push af
1199  8C83 28 08        	jr z,2F
1200  8C85
1201  8C85 11 B5 88     	ld de,Filas
1202  8C88 01 3F 00     	ld bc,63
1203  8C8B ED B0        	ldir
1204  8C8D
1205  8C8D CD A9 8C     2 call Incrementa_punteros_de_cajas
1206  8C90
1207  8C90 F1           	pop af
1208  8C91 28 EA        	jr z,1B
1209  8C93
1210  8C93 C1           	pop bc
1211  8C94 D1           	pop de
1212  8C95 E1           	pop hl
1213  8C96
1214  8C96 C9           	ret
1215  8C97
1216  8C97              ; **************************************************************************************************
1217  8C97              ;
1218  8C97              ;	12/05/23
1219  8C97              ;
1220  8C97              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1221  8C97
1222  8C97 E5           Restore_entidad push hl
1223  8C98 D5           	push de
1224  8C99 C5            	push bc
1225  8C9A
1226  8C9A 2A F7 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1227  8C9D 11 B5 88     	ld de,Filas
1228  8CA0 01 3F 00     	ld bc,63
1229  8CA3 ED B0        	ldir
1230  8CA5
1231  8CA5 C1           	pop bc
1232  8CA6 D1           	pop de
1233  8CA7 E1           	pop hl
1234  8CA8 C9           	ret
1235  8CA9
1236  8CA9              ; **************************************************************************************************
1237  8CA9              ;
1238  8CA9              ;	08/05/23
1239  8CA9              ;
1240  8CA9              ;	Incrementamos los dos punteros de entidades. (+1).
1241  8CA9
1242  8CA9              Incrementa_punteros_de_cajas
1243  8CA9
1244  8CA9 2A F9 88     	ld hl,(Puntero_restore_caja)
1245  8CAC 22 F7 88     	ld (Puntero_store_caja),hl
1246  8CAF 2A FB 88     	ld hl,(Indice_restore_caja)
1247  8CB2 23           	inc hl
1248  8CB3 23           	inc hl
1249  8CB4 22 FB 88     	ld (Indice_restore_caja),hl
1250  8CB7 CD 0E 8C         call Extrae_address
1251  8CBA 22 F9 88         ld (Puntero_restore_caja),hl
1252  8CBD C9               ret
1253  8CBE
1254  8CBE              ; **************************************************************************************************
1255  8CBE              ;
1256  8CBE              ;	25/01/23
1257  8CBE              ;
1258  8CBE              ;	Restore_Amadeus
1259  8CBE              ;
1260  8CBE              ;	Cargamos en DRAW los parámetros de Amadeus.
1261  8CBE              ;
1262  8CBE
1263  8CBE E5           Restore_Amadeus	push hl
1264  8CBF D5           	push de
1265  8CC0 C5            	push bc
1266  8CC1 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1267  8CC4 11 B5 88     	ld de,Filas
1268  8CC7 01 3F 00     	ld bc,63
1269  8CCA ED B0        	ldir
1270  8CCC C1           	pop bc
1271  8CCD D1           	pop de
1272  8CCE E1           	pop hl
1273  8CCF C9           	ret
1274  8CD0
1275  8CD0              ; *************************************************************************************************************************************************************
1276  8CD0              ;
1277  8CD0              ;	29/04/23
1278  8CD0              ;
1279  8CD0              ;	Store_Amadeus
1280  8CD0              ;
1281  8CD0              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1282  8CD0              ;
1283  8CD0              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1284  8CD0              ;
1285  8CD0              ;	DESTRUYE: HL y BC y DE.
1286  8CD0
1287  8CD0 21 B5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1288  8CD3 01 3F 00     	ld bc,63
1289  8CD6 ED B0        	ldir
1290  8CD8 C9           	ret
1291  8CD9
1292  8CD9              ; -----------------------------------------------------------
1293  8CD9              ;
1294  8CD9              ;	27/04/23
1295  8CD9              ;
1296  8CD9              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1297  8CD9              ;
1298  8CD9              ;	Destruye: HL,BC,DE,A
1299  8CD9
1300  8CD9 21 B5 88     Borra_datos_entidad ld hl,Filas
1301  8CDC 01 3E 00     	ld bc,62
1302  8CDF AF           	xor a
1303  8CE0 77           	ld (hl),a
1304  8CE1 11 B6 88     	ld de,Filas+1
1305  8CE4 ED B0        	ldir
1306  8CE6 C9           	ret
1307  8CE7
1308  8CE7              ; -----------------------------------------------------------
1309  8CE7
1310  8CE7              ; Teclado.
1311  8CE7
1312  8CE7 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1313  8CE9 DB FE        	in a,($fe)
1314  8CEB E6 01        	and $01
1315  8CED 28 02        	jr z,1f
1316  8CEF 18 F6        	jr Pulsa_ENTER
1317  8CF1 C9           1 ret
1318  8CF2
1319  8CF2              ; **************************************************************************************************
1320  8CF2              ;
1321  8CF2              ; Temporización.
1322  8CF2
1323  8CF2              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1324  8CF2              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1325  8CF2              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1326  8CF2              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1327  8CF2
1328  8CF2              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1329  8CF2              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1330  8CF2              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1331  8CF2
1332  8CF2              ; A partir de $4f61 no hace falta DELAY.
1333  8CF2
1334  8CF2              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1335  8CF2
1336  8CF2 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1337  8CF5 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1338  8CF6 78           	LD A,B
1339  8CF7 A7           	AND A
1340  8CF8 20 FB        	JR NZ,wait
1341  8CFA C9           	RET
1342  8CFB
1343  8CFB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1344  8CFB              ;
1345  8CFB              ;	5/3/23
1346  8CFB              ;
1347  8CFB              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1348  8CFB
1349  8CFB              Movimiento_Amadeus
1350  8CFB
1351  8CFB              ; Disparo.
1352  8CFB
1353  8CFB 3A 2A 89     	ld a,(Disparo_Amadeus)
1354  8CFE A7           	and a
1355  8CFF 20 02        	jr nz,1F
1356  8D01 18 15        	jr 2F
1357  8D03
1358  8D03 3E F7        1 ld a,$f7													; "5" para disparar.
1359  8D05 DB FE        	in a,($fe)
1360  8D07 E6 10        	and $10
1361  8D09
1362  8D09 F5           	push af
1363  8D0A CC B6 8D     	call z,Genera_disparo
1364  8D0D F1           	pop af
1365  8D0E 20 08        	jr nz,2F
1366  8D10
1367  8D10 3A 2A 89     	ld a,(Disparo_Amadeus)
1368  8D13 EE 01        	xor 1
1369  8D15 32 2A 89     	ld (Disparo_Amadeus),a
1370  8D18 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1371  8D1A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1372  8D1C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1373  8D1E CC 65 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1374  8D21
1375  8D21 3E F7        	ld a,$f7
1376  8D23 DB FE        	in a,($fe)
1377  8D25 E6 01        	and $01
1378  8D27 C8           	ret z
1379  8D28
1380  8D28 3E F7        	ld a,$f7
1381  8D2A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1382  8D2C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1383  8D2E CC 47 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1384  8D31 C9           	ret
1385  8D32
1386  8D32              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1387  8D32              ;
1388  8D32              ;	Rutina provisional para que los malotes cagen balas.
1389  8D32
1390  8D32              Detecta_disparo_entidad
1391  8D32
1392  8D32 3A 2D 89     	ld a,(Disparo_entidad)
1393  8D35 A7           	and a
1394  8D36 C8           	ret z
1395  8D37
1396  8D37              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1397  8D37
1398  8D37              ;	ld a,$7f				; Detecta SPACE.
1399  8D37              ;	in a,($fe)
1400  8D37              ;	and 1
1401  8D37              ;	ret nz
1402  8D37
1403  8D37 CD B6 8D     	call Genera_disparo
1404  8D3A C9           	ret
1405  8D3B
1406  8D3B              ; ----------------------------------------------------------------------
1407  8D3B              ;
1408  8D3B              ;	8/9/23
1409  8D3B
1410  8D3B 2A 11 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1411  8D3E 2B            	dec hl
1412  8D3F 7E           	ld a,(hl)
1413  8D40 A7           	and a
1414  8D41 C8           	ret z										; Salimos si es álbum está vacío.
1415  8D42
1416  8D42 11 D4 88     	ld de,Variables_de_borrado+5
1417  8D45 01 06 00     	ld bc,6
1418  8D48 ED B8        	lddr
1419  8D4A C9           	ret
1420  8D4B
1421  8D4B              ; ----------------------------------------------------------------------
1422  8D4B              ;
1423  8D4B              ;	9/9/23
1424  8D4B
1425  8D4B              Repone_datos_de_borrado_Amadeus
1426  8D4B
1427  8D4B 21 CF 88     	ld hl,Variables_de_borrado
1428  8D4E 11 AC 70     	ld de,Album_de_fotos_Amadeus
1429  8D51 01 06 00     	ld bc,6
1430  8D54 ED B0        	ldir
1431  8D56
1432  8D56 EB           	ex de,hl
1433  8D57 22 11 89     	ld (End_Snapshot_Amadeus),hl
1434  8D5A
1435  8D5A C9           	ret
1436  8D5B
1437  8D5B              ; ----------------------------------------------------------------------
1438  8D5B              ;
1439  8D5B              ;	27/10/23
1440  8D5B              ;
1441  8D5B
1442  8D5B              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1443  8D5B              ;	_ Album_de_fotos correspondiente.
1444  8D5B
1445  8D5B              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1446  8D5B              ;	_ durante el proceso de escritura.
1447  8D5B
1448  8D5B              Repone_datos_de_borrado
1449  8D5B
1450  8D5B F3           	di
1451  8D5C
1452  8D5C ED 5B 0B 89  	ld de,(Stack_snapshot)
1453  8D60 21 CF 88     	ld hl,Variables_de_borrado
1454  8D63 01 06 00     	ld bc,6
1455  8D66 ED B0        	ldir
1456  8D68 FB           	ei
1457  8D69
1458  8D69 EB           	ex de,hl
1459  8D6A 22 0B 89     	ld (Stack_snapshot),hl
1460  8D6D
1461  8D6D C9           	ret
1462  8D6E
1463  8D6E              ; -----------------------------------------------------------------------------------
1464  8D6E
1465  8D6E              Pinta_Amadeus
1466  8D6E
1467  8D6E 3E 06        	ld a,6
1468  8D70 D3 FE            out ($fe),a										; Amarillo
1469  8D72
1470  8D72 CD DA 8B        	call Calcula_malotes_Amadeus
1471  8D75 CD 1A 96     	call Extrae_foto_Amadeus
1472  8D78 CD 9A 8B     	call Limpia_album_Amadeus
1473  8D7B
1474  8D7B C9           	ret
1475  8D7C
1476  8D7C              Pinta_entidades
1477  8D7C
1478  8D7C              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1479  8D7C
1480  8D7C 3A 13 89     	ld a,(Ctrl_3)
1481  8D7F CB 47        	bit 0,a
1482  8D81 C8           	ret z
1483  8D82
1484  8D82 CD C2 8B     	call Calcula_numero_de_malotes
1485  8D85 CD 98 95     	call Extrae_foto_entidades
1486  8D88 CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1487  8D8B
1488  8D8B C9           	ret
1489  8D8C
1490  8D8C              ; -----------------------------------------------------------------------------------
1491  8D8C              ;
1492  8D8C              ;	10/12/23
1493  8D8C              ;
1494  8D8C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1495  8D8C
1496  8D8C              Actualiza_relojes
1497  8D8C
1498  8D8C 3A 13 89     	ld a,(Ctrl_3)
1499  8D8F CB 47        	bit 0,a
1500  8D91 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1501  8D92
1502  8D92 21 25 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1503  8D95 34           	inc (hl)
1504  8D96
1505  8D96 34           	inc (hl)
1506  8D97 35           	dec (hl)
1507  8D98 C0           	ret nz
1508  8D99
1509  8D99 21 26 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1510  8D9C 34           	inc (hl)
1511  8D9D C9           	ret
1512  8D9E
1513  8D9E              ; ---------------------------------------------------------------
1514  8D9E              ;
1515  8D9E              ;	27/9/23
1516  8D9E
1517  8D9E              Guarda_parametros_DRAW
1518  8D9E
1519  8D9E 21 B5 88     	ld hl,Filas
1520  8DA1 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1521  8DA4 01 3F 00     	ld bc,63
1522  8DA7 ED B0        	ldir
1523  8DA9 C9           	ret
1524  8DAA
1525  8DAA              Recupera_parametros_DRAW
1526  8DAA
1527  8DAA 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1528  8DAD 11 B5 88     	ld de,Filas
1529  8DB0 01 3F 00     	ld bc,63
1530  8DB3 ED B0        	ldir
1531  8DB5 C9           	ret
1532  8DB6
1533  8DB6              ; ---------------------------------------------------------------
1534  8DB6
1535  8DB6              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DB6              ; ******************************************************************************************************************************************************************************************
   2+ 8DB6              ;
   3+ 8DB6              ;   21/07/23
   4+ 8DB6              ;
   5+ 8DB6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DB6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DB6              ;
   8+ 8DB6              ;
   9+ 8DB6              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DB6              ;
  11+ 8DB6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DB6              ;               _ hacen las entidades hacia abajo.
  13+ 8DB6              ;
  14+ 8DB6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DB6              ;
  16+ 8DB6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DB6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DB6              ;
  19+ 8DB6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DB6              ;           _ la bala.
  21+ 8DB6              ;
  22+ 8DB6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DB6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DB6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DB6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DB6              ;           _ en el momento de generarse la bala)).
  27+ 8DB6
  28+ 8DB6              Genera_disparo
  29+ 8DB6
  30+ 8DB6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DB6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DB6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DB6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DB6              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DB6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DB6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DB6
  38+ 8DB6              ; Exclusiones:
  39+ 8DB6
  40+ 8DB6 3A CD 88         ld a,(Vel_down)
  41+ 8DB9 47               ld b,a
  42+ 8DBA 3A 24 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DBD B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DBE D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DBF 3A EE 88         ld a,(Columnas)
  46+ 8DC2 47               ld b,a
  47+ 8DC3 3A B6 88         ld a,(Columns)
  48+ 8DC6 B8               cp b
  49+ 8DC7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DC8
  51+ 8DC8              ; ----- ----- -----
  52+ 8DC8
  53+ 8DC8 3A E1 88         ld a,(Ctrl_0)
  54+ 8DCB CB 77            bit 6,a
  55+ 8DCD 20 06            jr nz,14F
  56+ 8DCF
  57+ 8DCF 3A BC 88         ld a,(Coordenada_y)
  58+ 8DD2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DD4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DD5
  61+ 8DD5 21 00 80     14 ld hl,Indice_disparo
  62+ 8DD8 3A BD 88         ld a,(CTRL_DESPLZ)
  63+ 8DDB 4F               ld c,a
  64+ 8DDC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8DDE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8DDE              ;                                            ""        ""       "f9", B="1"
  67+ 8DDE              ;                                            ""        ""       "fb", B="2"
  68+ 8DDE              ;                                            ""        ""       "fb", B="3"
  69+ 8DDE A7               and a
  70+ 8DDF 28 10            jr z,1F
  71+ 8DE1 E6 01            and 1
  72+ 8DE3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8DE4
  74+ 8DE4 79               ld a,c
  75+ 8DE5 16 F9            ld d,$f9
  76+ 8DE7 23           2 inc hl
  77+ 8DE8 23               inc hl
  78+ 8DE9 04               inc b
  79+ 8DEA BA               cp d
  80+ 8DEB 28 04            jr z,1F
  81+ 8DED 14               inc d
  82+ 8DEE 14               inc d
  83+ 8DEF 18 F6            jr 2B
  84+ 8DF1
  85+ 8DF1 CD 0E 8C     1 call Extrae_address
  86+ 8DF4 E5               push hl
  87+ 8DF5 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DF7 DD 21 60 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DFB
  90+ 8DFB              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DFB              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DFB
  93+ 8DFB 3A E1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8DFE CB 77            bit 6,a
  95+ 8E00 20 04            jr nz,19F
  96+ 8E02
  97+ 8E02 AF               xor a
  98+ 8E03 32 2D 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E06
 100+ 8E06 3A C9 88     19 ld a,(Cuad_objeto)
 101+ 8E09 FE 02            cp 2
 102+ 8E0B 38 66            jr c,3F
 103+ 8E0D 28 64            jr z,3F
 104+ 8E0F
 105+ 8E0F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E0F
 107+ 8E0F E6 01            and 1
 108+ 8E11 28 30            jr z,4F
 109+ 8E13
 110+ 8E13              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E13              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E13              ;
 113+ 8E13              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E13              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E13              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E13
 117+ 8E13 2A B7 88     	ld hl,(Posicion_actual)
 118+ 8E16
 119+ 8E16              ;   Amadeus o entidad ???.
 120+ 8E16
 121+ 8E16 3A E1 88         ld a,(Ctrl_0)
 122+ 8E19 CB 77            bit 6,a
 123+ 8E1B 28 0A            jr z,8F
 124+ 8E1D
 125+ 8E1D              ; 	Dispara Amadeus.
 126+ 8E1D
 127+ 8E1D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E1F CD 89 95         call PreviousScan
 129+ 8E22 CD 89 95         call PreviousScan
 130+ 8E25
 131+ 8E25              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E25              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E25              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E25              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E25
 136+ 8E25 18 11            jr 10F
 137+ 8E27
 138+ 8E27              ; 	Dispara Entidad.
 139+ 8E27
 140+ 8E27 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E2A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E2A
 143+ 8E2A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E2A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E2A
 146+ 8E2A C5               push bc
 147+ 8E2B 06 10            ld b,16
 148+ 8E2D CD 7A 95     9 call NextScan
 149+ 8E30 10 FB            djnz 9B
 150+ 8E32 C1               pop bc
 151+ 8E33 CD 9D 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E36 18 06            jr 17F
 153+ 8E38
 154+ 8E38              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E38              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E38              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E38              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E38
 159+ 8E38 CD 9D 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E3B CD 12 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E3E              ;                                                      ; _al generar el disparo.
 162+ 8E3E
 163+ 8E3E              ; 	LLegados a este punto tendremos:
 164+ 8E3E              ;
 165+ 8E3E              ;       Puntero_objeto_disparo en IY.
 166+ 8E3E              ;       Rutinas_de_impresion en IX.
 167+ 8E3E              ;       Puntero_de_impresion en HL.
 168+ 8E3E              ;       Impacto/Dirección en BC.
 169+ 8E3E
 170+ 8E3E CD A5 8E     17 call Almacena_disparo
 171+ 8E41 18 52            jr 6F                                             ; RET.
 172+ 8E43
 173+ 8E43              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E43              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E43              ;
 176+ 8E43              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E43              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E43              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E43
 180+ 8E43 2A B7 88     4 ld hl,(Posicion_actual)
 181+ 8E46
 182+ 8E46              ;   Amadeus o entidad ???.
 183+ 8E46
 184+ 8E46 3A E1 88         ld a,(Ctrl_0)
 185+ 8E49 CB 77            bit 6,a
 186+ 8E4B 28 0A            jr z,11F
 187+ 8E4D
 188+ 8E4D              ; 	Dispara Amadeus.
 189+ 8E4D
 190+ 8E4D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E4F CD 89 95         call PreviousScan
 192+ 8E52 CD 89 95         call PreviousScan
 193+ 8E55
 194+ 8E55              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E55              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E55              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E55              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E55
 199+ 8E55 18 11            jr 13F
 200+ 8E57
 201+ 8E57              ; 	Dispara Entidad.
 202+ 8E57
 203+ 8E57 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E5A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E5A
 206+ 8E5A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E5A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E5A
 209+ 8E5A C5               push bc
 210+ 8E5B 06 10            ld b,16
 211+ 8E5D CD 7A 95     12 call NextScan
 212+ 8E60 10 FB            djnz 12B
 213+ 8E62 C1               pop bc
 214+ 8E63
 215+ 8E63 CD 96 8E         call Ajusta_disparo_parte_derecha
 216+ 8E66 18 06            jr 18F
 217+ 8E68
 218+ 8E68              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E68              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E68              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E68              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E68
 223+ 8E68 CD 96 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E6B CD 12 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E6E              ;                                                       ; _al generar el disparo.
 226+ 8E6E
 227+ 8E6E              ; LLegados a este punto tendremos:
 228+ 8E6E              ;
 229+ 8E6E              ;       Puntero_objeto_disparo en IY.
 230+ 8E6E              ;       Rutinas_de_impresion en IX.
 231+ 8E6E              ;       Puntero_de_impresion en HL.
 232+ 8E6E              ;       Impacto/Dirección en BC.
 233+ 8E6E
 234+ 8E6E CD A5 8E     18 call Almacena_disparo
 235+ 8E71 18 22            jr 6F                                               ; RET.
 236+ 8E73
 237+ 8E73              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E73
 239+ 8E73 28 11        3 jr z,5F
 240+ 8E75
 241+ 8E75              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E75              ;
 243+ 8E75              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E75              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E75              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E75              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E75
 248+ 8E75              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E75              ;	   ""        ""       "f9", B="1"
 250+ 8E75              ;	   ""        ""       "fb", B="2"
 251+ 8E75              ; 	   ""        ""       "fb", B="3"
 252+ 8E75
 253+ 8E75 2A B7 88     	ld hl,(Posicion_actual)
 254+ 8E78 CD 7A 95     	call NextScan
 255+ 8E7B
 256+ 8E7B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E7B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E7B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E7B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E7B
 261+ 8E7B CD 9D 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E7E
 263+ 8E7E              ; 	No se produce impacto. B="$80"
 264+ 8E7E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E7E
 266+ 8E7E 01 80 80         ld bc,$8080
 267+ 8E81
 268+ 8E81              ; 	LLegados a este punto tendremos:
 269+ 8E81              ;
 270+ 8E81              ;       Puntero_objeto_disparo en IY.
 271+ 8E81              ;       Rutinas_de_impresion en IX.
 272+ 8E81              ;       Puntero_de_impresion en HL.
 273+ 8E81              ;       Impacto/Dirección en BC.
 274+ 8E81
 275+ 8E81 CD A5 8E         call Almacena_disparo
 276+ 8E84 18 0F            jr 6F                                           ; RET.
 277+ 8E86
 278+ 8E86              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E86              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E86              ;
 281+ 8E86              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E86              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E86              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E86              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E86
 286+ 8E86 2A B7 88     5 ld hl,(Posicion_actual)
 287+ 8E89 CD 7A 95     	call NextScan
 288+ 8E8C
 289+ 8E8C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E8C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E8C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E8C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E8C
 294+ 8E8C CD 96 8E         call Ajusta_disparo_parte_derecha
 295+ 8E8F
 296+ 8E8F              ; 	No se produce impacto. B="$80"
 297+ 8E8F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E8F
 299+ 8E8F 01 80 80     15 ld bc,$8080
 300+ 8E92
 301+ 8E92              ; 	LLegados a este punto tendremos:
 302+ 8E92              ;
 303+ 8E92              ;       Puntero_objeto_disparo en IY.
 304+ 8E92              ;       Rutinas_de_impresion en IX.
 305+ 8E92              ;       Puntero_de_impresion en HL.
 306+ 8E92              ;       Impacto/Dirección en BC.
 307+ 8E92
 308+ 8E92 CD A5 8E         call Almacena_disparo
 309+ 8E95
 310+ 8E95 C9           6 ret
 311+ 8E96
 312+ 8E96              ; ----------------------------------------------------------------
 313+ 8E96              ;
 314+ 8E96              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E96              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E96              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E96
 318+ 8E96 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E97 FE 02            cp 2
 320+ 8E99 38 01            jr c,1F
 321+ 8E9B 23               inc hl
 322+ 8E9C C9           1 ret
 323+ 8E9D
 324+ 8E9D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E9E FE 01        	cp 1
 326+ 8EA0 20 01        	jr nz,1F
 327+ 8EA2 2B           	dec hl
 328+ 8EA3 2B           1 dec hl
 329+ 8EA4 C9               ret
 330+ 8EA5
 331+ 8EA5              ; ----------------------------------------------------------------
 332+ 8EA5              ;
 333+ 8EA5              ;   25/02/23
 334+ 8EA5              ;
 335+ 8EA5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8EA5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8EA5              ;
 338+ 8EA5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8EA5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8EA5
 341+ 8EA5              Almacena_disparo
 342+ 8EA5
 343+ 8EA5 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8EA6 F1               pop af
 345+ 8EA7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8EA8
 347+ 8EA8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8EA9 E6 01            and 1
 349+ 8EAB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8EAD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8EAD              ; 	Dispara AMADEUS.
 352+ 8EAD
 353+ 8EAD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8EAD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8EAD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8EAD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8EAD
 358+ 8EAD C5               push bc
 359+ 8EAE 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EB1 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EB4 A7               and a
 362+ 8EB5 ED 42            sbc hl,bc
 363+ 8EB7 CC 93 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EBA C1               pop bc
 365+ 8EBB 28 54            jr z,4F
 366+ 8EBD
 367+ 8EBD 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8EC0 23               inc hl
 369+ 8EC1 23               inc hl
 370+ 8EC2 22 17 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8EC5              ;                                                   ; _ Disparo_(+1).
 372+ 8EC5 18 18            jr 2F
 373+ 8EC7
 374+ 8EC7              ; Dispara una entidad.
 375+ 8EC7
 376+ 8EC7 C5           1 push bc
 377+ 8EC8 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8ECB 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8ECE A7               and a
 380+ 8ECF ED 42            sbc hl,bc
 381+ 8ED1 CC 8C 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8ED4 C1               pop bc
 383+ 8ED5 28 3A            jr z,4F
 384+ 8ED7
 385+ 8ED7 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8EDA 23               inc hl
 387+ 8EDB 23               inc hl
 388+ 8EDC 22 15 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8EDF              ;                                                   ; _ Disparo_(+1).
 390+ 8EDF CD 0E 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8EE2              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8EE2              ;
 393+ 8EE2              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8EE2              ;                                                     Rutinas_de_impresion en IX.
 395+ 8EE2              ;                                                     Puntero_de_impresion en HL.
 396+ 8EE2              ;                                                     Impacto/Dirección en BC.
 397+ 8EE2
 398+ 8EE2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8EE3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8EE4 23               inc hl                                          ; _ al siguiente.
 401+ 8EE5 A7               and a
 402+ 8EE6 20 C0            jr nz,3B
 403+ 8EE8
 404+ 8EE8 08               ex af,af
 405+ 8EE9 ED 73 05 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8EED F9               ld sp,hl
 407+ 8EEE
 408+ 8EEE DD E5            push ix                                         ; Rutina de impresión.
 409+ 8EF0 F5               push af                                         ; Puntero de impresión.
 410+ 8EF1 FD E5            push iy                                         ; Puntero objeto.
 411+ 8EF3 C5               push bc                                         ; Control.
 412+ 8EF4
 413+ 8EF4 ED 7B 05 89      ld sp,(Stack)
 414+ 8EF8
 415+ 8EF8              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EF8
 417+ 8EF8 21 F4 88     	ld hl,Ctrl_1
 418+ 8EFB CB C6        	set 0,(hl)
 419+ 8EFD
 420+ 8EFD DD E5        	push ix
 421+ 8EFF E1               pop hl
 422+ 8F00 F5               push af
 423+ 8F01 DD E1            pop ix
 424+ 8F03
 425+ 8F03 CD A0 7F     	call Guarda_foto_registros
 426+ 8F06
 427+ 8F06 21 F4 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F09 CB 86        	res 0,(hl)
 429+ 8F0B
 430+ 8F0B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F0B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F0B
 433+ 8F0B CD 93 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F0E CD 8C 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F11
 436+ 8F11 C9           4 ret
 437+ 8F12
 438+ 8F12              ; ----------------------------------------------------------------
 439+ 8F12              ;
 440+ 8F12              ;   4/3/23
 441+ 8F12              ;
 442+ 8F12              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F12              ;   _ al generarse el disparo.
 444+ 8F12              ;
 445+ 8F12              ;       "$80" ..... No se produce colisión.
 446+ 8F12              ;       "$81" ..... Se produce colisión.
 447+ 8F12              ;
 448+ 8F12              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F12              ;         _ que forman el disparo.
 450+ 8F12
 451+ 8F12
 452+ 8F12              Comprueba_Colision
 453+ 8F12
 454+ 8F12              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F12
 456+ 8F12 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F14 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F15
 459+ 8F15 CD 4B 8F         call Modifica_H_Velocidad_disparo
 460+ 8F18
 461+ 8F18 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F19 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F1B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F1D
 465+ 8F1D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F1F CD 3B 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F22
 468+ 8F22 7B               ld a,e
 469+ 8F23 E6 01            and 1
 470+ 8F25 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F27              ;                                                  ; _ para activar IMPACTO.
 472+ 8F27 E1               pop hl
 473+ 8F28 E5               push hl
 474+ 8F29 CD 7A 95         call NextScan
 475+ 8F2C
 476+ 8F2C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F2D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F2F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F31              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F31 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F33 CD 3B 8F         call Bucle_2
 482+ 8F36
 483+ 8F36 43           1 ld b,e
 484+ 8F37 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F38 FD E1            pop iy
 486+ 8F3A C9               ret
 487+ 8F3B
 488+ 8F3B              ; ---------- ----------
 489+ 8F3B
 490+ 8F3B 06 02        Bucle_2 ld b,2
 491+ 8F3D FD 7E 00     2 ld a,(iy)
 492+ 8F40 A6               and (hl)
 493+ 8F41 28 02            jr z,1F
 494+ 8F43 1E 81            ld e,$81
 495+ 8F45 23           1 inc hl
 496+ 8F46 FD 23            inc iy
 497+ 8F48 10 F3            djnz 2B
 498+ 8F4A C9               ret
 499+ 8F4B
 500+ 8F4B              ; ---------- ----------
 501+ 8F4B              ;
 502+ 8F4B              ;   21/7/23
 503+ 8F4B
 504+ 8F4B              Modifica_H_Velocidad_disparo
 505+ 8F4B
 506+ 8F4B 3A 24 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F4E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F50 D0               ret nc                                         ; _ incrementamos H.
 509+ 8F51 24               inc h
 510+ 8F52
 511+ 8F52 C9               ret
 512+ 8F53
 513+ 8F53              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F53              ;
 515+ 8F53              ;   04/12/23
 516+ 8F53              ;
 517+ 8F53              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F53              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F53              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F53              ;
 521+ 8F53              ;   MODIFICA: HL,DE,B y A.
 522+ 8F53
 523+ 8F53              Genera_coordenadas_X
 524+ 8F53
 525+ 8F53              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F53              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F53
 528+ 8F53              ;   Limpiamos almacenes.
 529+ 8F53
 530+ 8F53 CD 84 8F         call Limpia_Coordenadas_X
 531+ 8F56
 532+ 8F56              ;   Almacenamos coordenadas X.
 533+ 8F56
 534+ 8F56              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8F56
 536+ 8F56 2A DF 88         ld hl,(Puntero_de_impresion)
 537+ 8F59 11 21 89         ld de,Coordenadas_X_Entidad
 538+ 8F5C 06 02            ld b,2
 539+ 8F5E
 540+ 8F5E 3A BD 88         ld a,(CTRL_DESPLZ)
 541+ 8F61 A7               and a
 542+ 8F62 28 01            jr z,1F
 543+ 8F64 04               inc b
 544+ 8F65
 545+ 8F65 CD 7B 8F     1 call Guarda_coordenadas_X
 546+ 8F68
 547+ 8F68              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8F68
 549+ 8F68 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 8F6B 11 1E 89         ld de,Coordenadas_X_Amadeus
 551+ 8F6E 06 02            ld b,2
 552+ 8F70
 553+ 8F70 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 8F73 A7               and a
 555+ 8F74 28 01            jr z,2F
 556+ 8F76 04               inc b
 557+ 8F77
 558+ 8F77 CD 7B 8F     2 call Guarda_coordenadas_X
 559+ 8F7A
 560+ 8F7A              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8F7A
 562+ 8F7A C9               ret
 563+ 8F7B
 564+ 8F7B              ; ----- ----- ----- ----- -----
 565+ 8F7B
 566+ 8F7B 7D           Guarda_coordenadas_X  ld a,l
 567+ 8F7C E6 1F            and $1f
 568+ 8F7E 12           1 ld (de),a
 569+ 8F7F 3C               inc a
 570+ 8F80 13               inc de
 571+ 8F81 10 FB            djnz 1B
 572+ 8F83 C9               ret
 573+ 8F84
 574+ 8F84 AF           Limpia_Coordenadas_X xor a
 575+ 8F85 06 06            ld b,6
 576+ 8F87 21 1E 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F8A 77           1 ld (hl),a
 578+ 8F8B 23               inc hl
 579+ 8F8C 10 FC            djnz 1B
 580+ 8F8E C9               ret
 581+ 8F8F
 582+ 8F8F              ; ----- ----- ----- ----- -----
 583+ 8F8F
 584+ 8F8F              Compara_coordenadas_X
 585+ 8F8F
 586+ 8F8F 06 03            ld b,3
 587+ 8F91 11 23 89         ld de,Coordenadas_X_Entidad+2
 588+ 8F94
 589+ 8F94 1A               ld a,(de)
 590+ 8F95 A7               and a
 591+ 8F96 20 01            jr nz,2F
 592+ 8F98 05               dec b
 593+ 8F99
 594+ 8F99 1B           2 dec de
 595+ 8F9A 1B               dec de
 596+ 8F9B 21 1E 89         ld hl,Coordenadas_X_Amadeus
 597+ 8F9E
 598+ 8F9E D5           1 push de
 599+ 8F9F E5               push hl
 600+ 8FA0 C5               push bc
 601+ 8FA1
 602+ 8FA1 CD AB 8F         call Comparando
 603+ 8FA4
 604+ 8FA4 C1               pop bc
 605+ 8FA5 E1               pop hl
 606+ 8FA6 D1               pop de
 607+ 8FA7
 608+ 8FA7 13               inc de
 609+ 8FA8 10 F4            djnz 1B
 610+ 8FAA
 611+ 8FAA C9               ret
 612+ 8FAB
 613+ 8FAB              ; ----- ----- ----- ----- -----
 614+ 8FAB              ;
 615+ 8FAB              ;   4/12/23
 616+ 8FAB              ;
 617+ 8FAB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8FAB
 619+ 8FAB 06 03        Comparando ld b,3
 620+ 8FAD 1A               ld a,(de)
 621+ 8FAE 4E           2 ld c,(hl)
 622+ 8FAF B9               cp c
 623+ 8FB0 28 04            jr z,1F
 624+ 8FB2 23               inc hl
 625+ 8FB3 10 F9            djnz 2B
 626+ 8FB5 C9               ret
 627+ 8FB6
 628+ 8FB6 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8FB8 32 CE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8FBB 21 19 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8FBE CB D6            set 2,(hl)
 632+ 8FC0 C9               ret
 633+ 8FC1
 634+ 8FC1              ; -----------------------------------------------------------------------
 635+ 8FC1              ;
 636+ 8FC1              ;   7/12/23
 637+ 8FC1              ;
 638+ 8FC1
 639+ 8FC1              Detecta_colision_nave_entidad
 640+ 8FC1
 641+ 8FC1              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8FC1
 643+ 8FC1 FD 2A B9 88      ld iy,(Puntero_objeto)
 644+ 8FC5 2A DF 88         ld hl,(Puntero_de_impresion)
 645+ 8FC8
 646+ 8FC8 E5               push hl
 647+ 8FC9
 648+ 8FC9              ; ----- ----- -----
 649+ 8FC9 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8FCB 06 0A            ld b,10
 651+ 8FCD CD FD 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8FD0 7B               ld a,e
 653+ 8FD1 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8FD3 38 0E            jr c,3F
 655+ 8FD5
 656+ 8FD5              ; LLegados a este punto:
 657+ 8FD5              ;
 658+ 8FD5              ;   HAY COLISIÓN !!!!!.
 659+ 8FD5              ;
 660+ 8FD5              ;   .db (Impacto) de Amadeus a "1".
 661+ 8FD5              ;   SET el bit3 de (Impacto2).
 662+ 8FD5              ;
 663+ 8FD5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8FD5
 665+ 8FD5 21 CE 88         ld hl,Impacto
 666+ 8FD8 36 01            ld (hl),1
 667+ 8FDA 21 19 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8FDD CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8FDF CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8FE1
 671+ 8FE1 18 18            jr 1F
 672+ 8FE3
 673+ 8FE3              ; -----
 674+ 8FE3
 675+ 8FE3 E1           3 pop hl
 676+ 8FE4 CD 7A 95         call NextScan
 677+ 8FE7 E5               push hl
 678+ 8FE8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8FE9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8FEB 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8FED 30 0C            jr nc,1F
 682+ 8FEF              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8FEF 10 DC            djnz 2B
 684+ 8FF1
 685+ 8FF1              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8FF1
 687+ 8FF1              ; LLegados a este punto:
 688+ 8FF1              ;
 689+ 8FF1              ;   NO HAY COLISIÓN !!!!!.
 690+ 8FF1              ;
 691+ 8FF1              ;   .db (Impacto) de Amadeus a "0".
 692+ 8FF1              ;   RES el bit2 de (Impacto2).
 693+ 8FF1              ;
 694+ 8FF1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8FF1              ;   Lo colocamos a "0".
 696+ 8FF1
 697+ 8FF1 21 19 89         ld hl,Impacto2
 698+ 8FF4 CB 96            res 2,(hl)
 699+ 8FF6 2A 1A 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8FF9 36 00            ld (hl),0
 701+ 8FFB
 702+ 8FFB E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8FFC C9               ret
 704+ 8FFD
 705+ 8FFD               ; ---------- ----------
 706+ 8FFD
 707+ 8FFD C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8FFE 3A B6 88         ld a,(Columns)
 709+ 9001 47               ld b,a
 710+ 9002 FD 7E 00     2 ld a,(iy)
 711+ 9005 BE               cp (hl)
 712+ 9006 28 01            jr z,1F
 713+ 9008
 714+ 9008 1C               inc e
 715+ 9009
 716+ 9009 23           1 inc hl
 717+ 900A FD 23            inc iy
 718+ 900C 10 F4            djnz 2B
 719+ 900E C1               pop bc
 720+ 900F C9               ret
 721+ 9010
 722+ 9010              ; -------------------------------------------------------------------------------------------------------------
 723+ 9010              ;
 724+ 9010              ;   13/03/23
 725+ 9010              ;
 726+ 9010              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9010              ;
 728+ 9010              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9010
 730+ 9010 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9013 7E               ld a,(hl)
 732+ 9014 A7               and a
 733+ 9015 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9016
 735+ 9016 44               ld b,h
 736+ 9017 4D               ld c,l
 737+ 9018 2A 0D 89         ld hl,(Stack_snapshot_disparos)
 738+ 901B E5               push hl
 739+ 901C A7               and a
 740+ 901D ED 42            sbc hl,bc
 741+ 901F E5               push hl
 742+ 9020 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9021
 744+ 9021 E1               pop hl
 745+ 9022 54               ld d,h
 746+ 9023 5D               ld e,l
 747+ 9024 1B               dec de
 748+ 9025 ED B8            lddr                                                ; Limpiamos.
 749+ 9027
 750+ 9027 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 902A 22 0D 89         ld (Stack_snapshot_disparos),hl
 752+ 902D
 753+ 902D C9               ret
 754+ 902E
 755+ 902E              ; -------------------------------------------------------------------------------------------------------------
 756+ 902E              ;
 757+ 902E              ;   18/07/23
 758+ 902E              ;
 759+ 902E
 760+ 902E              Motor_de_disparos
 761+ 902E
 762+ 902E              ; Gestiona DISPAROS DE AMADEUS.
 763+ 902E
 764+ 902E 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9031 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9034
 767+ 9034 CD 0E 8C     2 call Extrae_address
 768+ 9037 7E               ld a,(hl)
 769+ 9038 A7               and a
 770+ 9039 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 903B
 772+ 903B              ; ----- ----- ----- ----- ----- -----
 773+ 903B
 774+ 903B C5               push bc
 775+ 903C CD 00 91         call foto_disparo_a_borrar
 776+ 903F
 777+ 903F              ; Existe colisión con este disparo???
 778+ 903F
 779+ 903F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9040 7E               ld a,(hl)
 781+ 9041 2B               dec hl
 782+ 9042 E6 01            and 1
 783+ 9044 28 1D            jr z,9F
 784+ 9046
 785+ 9046              ;   En este punto:
 786+ 9046              ;
 787+ 9046              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9046              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9046              ;   _con la entidad).
 790+ 9046              ;
 791+ 9046              ;   Disparo_2A defw 0                                ; Control.
 792+ 9046              ;    defw 0                                          ; Puntero objeto.
 793+ 9046              ;    defw 0                                          ; Puntero de impresión.
 794+ 9046              ;    defw 0                                          ; Rutina de impresión.
 795+ 9046
 796+ 9046 E5               push hl
 797+ 9047
 798+ 9047 06 04            ld b,4
 799+ 9049 23           19 inc hl
 800+ 904A 10 FD            djnz 19B
 801+ 904C
 802+ 904C CD 0E 8C         call Extrae_address
 803+ 904F CD 43 9C         call Genera_coordenadas_disparo
 804+ 9052
 805+ 9052              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9052
 807+ 9052 21 1C 89         ld hl,Coordenadas_disparo_certero
 808+ 9055 72               ld (hl),d
 809+ 9056 23               inc hl
 810+ 9057 73               ld (hl),e
 811+ 9058
 812+ 9058              ; Elimino el disparo de la base de datos.
 813+ 9058
 814+ 9058 E1               pop hl
 815+ 9059 CD 7F 91         call Elimina_disparo_de_base_de_datos
 816+ 905C 21 19 89         ld hl,Impacto2
 817+ 905F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9061
 819+ 9061 18 06            jr 11F
 820+ 9063
 821+ 9063 CD 29 91     9 call Mueve_disparo
 822+ 9066 CD 00 91         call foto_disparo_a_borrar
 823+ 9069
 824+ 9069 C1           11 pop bc
 825+ 906A 18 04            jr 7F
 826+ 906C
 827+ 906C              ; ----- ----- ----- ----- ----- -----
 828+ 906C
 829+ 906C ED 42        1 sbc hl,bc
 830+ 906E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9070
 832+ 9070 2A 17 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9073 23               inc hl
 834+ 9074 23               inc hl
 835+ 9075 22 17 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9078 18 BA            jr 2B
 837+ 907A
 838+ 907A CD 93 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 907D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 907D
 841+ 907D              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 907D
 843+ 907D 01 6A 85         ld bc,Disparo_11
 844+ 9080 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9083
 846+ 9083 CD 0E 8C     5 call Extrae_address
 847+ 9086 7E               ld a,(hl)
 848+ 9087 A7               and a
 849+ 9088 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 908A
 851+ 908A              ; ----- ----- ----- ----- ----- -----
 852+ 908A
 853+ 908A C5               push bc
 854+ 908B CD 00 91         call foto_disparo_a_borrar
 855+ 908E
 856+ 908E              ; Existe colisión con este disparo???
 857+ 908E
 858+ 908E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 908F 7E               ld a,(hl)
 860+ 9090 2B               dec hl
 861+ 9091 E6 01            and 1
 862+ 9093 28 4D            jr z,10F
 863+ 9095
 864+ 9095              ;! La colisión se produce con Amadeus???
 865+ 9095              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9095
 867+ 9095 E5               push hl
 868+ 9096
 869+ 9096 06 04            ld b,4
 870+ 9098 23           16 inc hl
 871+ 9099 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 909B
 873+ 909B CD 0E 8C         call Extrae_address
 874+ 909E CD 43 9C         call Genera_coordenadas_disparo
 875+ 90A1
 876+ 90A1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 90A2 FE 16            cp $16
 878+ 90A4 38 2A            jr c,15F
 879+ 90A6
 880+ 90A6
 881+ 90A6              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 90A6
 883+ 90A6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 90A7
 885+ 90A7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 90A7
 887+ 90A7 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 90AA
 889+ 90AA              ; Coordenada X de Amadeus en D.
 890+ 90AA
 891+ 90AA 7D               ld a,l
 892+ 90AB E6 1F            and $1F
 893+ 90AD 57               ld d,a
 894+ 90AE
 895+ 90AE 21 86 85         ld hl,Amadeus_db+8
 896+ 90B1 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 90B2
 898+ 90B2 21 1E 89         ld hl,Coordenadas_X_Amadeus
 899+ 90B5 CD 7B 8F         call Guarda_coordenadas_X
 900+ 90B8
 901+ 90B8 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 90B9
 903+ 90B9              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 90B9
 905+ 90B9 06 02            ld b,2
 906+ 90BB C5           20 push bc
 907+ 90BC
 908+ 90BC 06 03            ld b,3
 909+ 90BE 21 1E 89         ld hl,Coordenadas_X_Amadeus
 910+ 90C1 7E           18 ld a,(hl)
 911+ 90C2 BA               cp d
 912+ 90C3 20 04            jr nz,17F
 913+ 90C5
 914+ 90C5              ;! Colisión Amadeus !!!!!!!!!!
 915+ 90C5
 916+ 90C5 C1               pop bc
 917+ 90C6 E1               pop hl
 918+ 90C7 18 0D            jr 14F
 919+ 90C9
 920+ 90C9 23           17 inc hl
 921+ 90CA 10 F5            djnz 18B
 922+ 90CC
 923+ 90CC 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 90CD
 925+ 90CD C1               pop bc
 926+ 90CE 10 EB            djnz 20B
 927+ 90D0
 928+ 90D0
 929+ 90D0              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 90D0              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 90D0
 932+ 90D0 E1           15 pop hl
 933+ 90D1 23               inc hl
 934+ 90D2 35               dec (hl)
 935+ 90D3 2B               dec hl
 936+ 90D4 18 0C            jr 10F
 937+ 90D6
 938+ 90D6              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 90D6              ; _ almacén de coordenadas_X de Amadeus.
 940+ 90D6
 941+ 90D6 E5           14 push hl
 942+ 90D7 CD 7F 91         call Elimina_disparo_de_base_de_datos
 943+ 90DA 21 19 89         ld hl,Impacto2
 944+ 90DD CB CE            set 1,(hl)
 945+ 90DF E1               pop hl
 946+ 90E0 18 06            jr 12F
 947+ 90E2
 948+ 90E2              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 90E2
 950+ 90E2 CD 29 91     10 call Mueve_disparo
 951+ 90E5 CD 00 91         call foto_disparo_a_borrar
 952+ 90E8 C1           12 pop bc
 953+ 90E9
 954+ 90E9 18 04            jr 8F
 955+ 90EB
 956+ 90EB              ; ----- ----- ----- ----- ----- -----
 957+ 90EB
 958+ 90EB ED 42        4 sbc hl,bc
 959+ 90ED 28 0A            jr z,6F
 960+ 90EF
 961+ 90EF 2A 15 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 90F2 23               inc hl
 963+ 90F3 23               inc hl
 964+ 90F4 22 15 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 90F7 18 8A            jr 5B
 966+ 90F9
 967+ 90F9 CD 8C 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 90FC CD 84 8F         call Limpia_Coordenadas_X
 969+ 90FF C9               ret
 970+ 9100
 971+ 9100              ; ------------------------------------------------------------------
 972+ 9100
 973+ 9100              foto_disparo_a_borrar
 974+ 9100
 975+ 9100 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9101 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9102 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9103
 979+ 9103 E5               push hl
 980+ 9104 23               inc hl
 981+ 9105 23               inc hl
 982+ 9106 ED 73 05 89      ld (Stack),sp
 983+ 910A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 910B FD E1            pop iy
 985+ 910D DD E1            pop ix
 986+ 910F E1               pop hl
 987+ 9110 ED 7B 05 89      ld sp,(Stack)
 988+ 9114 3A F4 88         ld a,(Ctrl_1)
 989+ 9117 CB C7            set 0,a
 990+ 9119 32 F4 88         ld (Ctrl_1),a
 991+ 911C CD A0 7F         call Guarda_foto_registros
 992+ 911F 3A F4 88         ld a,(Ctrl_1)
 993+ 9122 CB 87            res 0,a
 994+ 9124 32 F4 88         ld (Ctrl_1),a
 995+ 9127 E1               pop hl
 996+ 9128 C9               ret
 997+ 9129
 998+ 9129              ;---------------------------------------------------
 999+ 9129              ;
1000+ 9129              ;   18/07/23
1001+ 9129              ;
1002+ 9129
1003+ 9129              Mueve_disparo
1004+ 9129
1005+ 9129              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9129              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9129              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9129
1009+ 9129 E5               push hl
1010+ 912A
1011+ 912A 7E               ld a,(hl)
1012+ 912B
1013+ 912B 06 04            ld b,4
1014+ 912D 23           1 inc hl
1015+ 912E 10 FD            djnz 1B
1016+ 9130
1017+ 9130              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9130
1019+ 9130 CD 0E 8C         call Extrae_address
1020+ 9133
1021+ 9133 E6 01            and 1
1022+ 9135 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9137
1024+ 9137              ; Disparo hacia arriba, (Amadeus).
1025+ 9137
1026+ 9137              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9137              ; _ de la dificultad.
1028+ 9137
1029+ 9137 CD 89 95         call PreviousScan
1030+ 913A CD 89 95         call PreviousScan
1031+ 913D CD 89 95         call PreviousScan
1032+ 9140 CD 89 95         call PreviousScan
1033+ 9143
1034+ 9143              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9143
1036+ 9143 7C               ld a,h
1037+ 9144 FE 40            cp $40
1038+ 9146 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9148
1040+ 9148              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9148
1042+ 9148 EB               ex de,hl
1043+ 9149 06 04            ld b,4
1044+ 914B 2B           6 dec hl
1045+ 914C 10 FD            djnz 6B
1046+ 914E
1047+ 914E CD 7F 91         call Elimina_disparo_de_base_de_datos
1048+ 9151 E1               pop hl
1049+ 9152 18 10            jr 7F
1050+ 9154
1051+ 9154              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9154              ; HL contiene el puntero de impresión del disparo.
1053+ 9154              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9154
1055+ 9154 D5           3 push de
1056+ 9155 C5               push bc
1057+ 9156
1058+ 9156 CD 12 8F         call Comprueba_Colision
1059+ 9159
1060+ 9159              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9159
1062+ 9159 78               ld a,b
1063+ 915A
1064+ 915A C1               pop bc
1065+ 915B D1               pop de
1066+ 915C
1067+ 915C EB               ex de,hl
1068+ 915D
1069+ 915D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 915E 23               inc hl                                      ; _ movimiento.
1071+ 915F 72               ld (hl),d
1072+ 9160
1073+ 9160 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9161
1075+ 9161 23               inc hl                                      ; _ en curso.
1076+ 9162 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9163 2B               dec hl
1078+ 9164
1079+ 9164 C9           7 ret
1080+ 9165
1081+ 9165              ; Disparo hacia abajo, (Entidad).
1082+ 9165
1083+ 9165 3A 24 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9168 47               ld b,a
1085+ 9169
1086+ 9169 CD 7A 95     4 call NextScan
1087+ 916C 10 FB            djnz 4B
1088+ 916E
1089+ 916E              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 916E
1091+ 916E 7C               ld a,h
1092+ 916F FE 58            cp $58
1093+ 9171 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9173
1095+ 9173 EB               ex de,hl
1096+ 9174 06 04            ld b,4
1097+ 9176 2B           5 dec hl
1098+ 9177 10 FD            djnz 5B
1099+ 9179
1100+ 9179 CD 7F 91         call Elimina_disparo_de_base_de_datos
1101+ 917C E1               pop hl
1102+ 917D 18 E5            jr 7B
1103+ 917F
1104+ 917F              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 917F
1106+ 917F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9182 AF               xor a
1108+ 9183 77               ld (hl),a
1109+ 9184 54               ld d,h
1110+ 9185 5D               ld e,l
1111+ 9186 13               inc de
1112+ 9187 ED B0            ldir
1113+ 9189 C9               ret
1114+ 918A
1115+ 918A              ; -----------------------------------------------------------------
1116+ 918A              ;
1117+ 918A              ;   7/12/23
1118+ 918A              ;
1119+ 918A
1120+ 918A 3A 19 89     Selector_de_impactos ld a,(Impacto2)
1121+ 918D A7               and a
1122+ 918E C8               ret z
1123+ 918F
1124+ 918F              ; Analizamos si hay impacto por disparos.
1125+ 918F
1126+ 918F              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 918F
1128+ 918F CB 4F            bit 1,a
1129+ 9191 28 07            jr z,1F
1130+ 9193
1131+ 9193 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9196 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9198 18 08            jr 2F
1134+ 919A
1135+ 919A CB 47        1 bit 0,a
1136+ 919C C8               ret z
1137+ 919D
1138+ 919D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 919D
1140+ 919D 21 F4 88         ld hl,Ctrl_1
1141+ 91A0 CB D6            set 2,(hl)
1142+ 91A2
1143+ 91A2 C9           2 ret
1144+ 91A3
1145+ 91A3              ; -----------------------------------------------------------------
1146+ 91A3              ;
1147+ 91A3              ;   25/04/23
1148+ 91A3              ;
1149+ 91A3
1150+ 91A3              Determina_resultado_comparativa
1151+ 91A3
1152+ 91A3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 91A3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 91A3              ;
1155+ 91A3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 91A3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 91A3              ;
1158+ 91A3              ;   SBC HL,DE
1159+ 91A3
1160+ 91A3              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 91A3              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 91A3
1163+ 91A3              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 91A3              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 91A3
1166+ 91A3
1167+ 91A3 3A C9 88         ld a,(Cuad_objeto)
1168+ 91A6 FE 02            cp 2
1169+ 91A8 28 26            jr z,2F
1170+ 91AA 38 24            jr c,2F
1171+ 91AC
1172+ 91AC              ; Cuadrantes 3º y 4º
1173+ 91AC
1174+ 91AC E6 01            and 1
1175+ 91AE 28 10            jr z,4F
1176+ 91B0
1177+ 91B0              ; Cuadrante 3º
1178+ 91B0
1179+ 91B0 7C               ld a,h
1180+ 91B1 06 00            ld b,0
1181+ 91B3
1182+ 91B3 CD 3E 92         call Compara_cositas_H3
1183+ 91B6
1184+ 91B6 04               inc b
1185+ 91B7 05               dec b
1186+ 91B8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 91B9
1188+ 91B9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 91BA 06 00            ld b,0
1190+ 91BC
1191+ 91BC CD 50 92         call Compara_cositas_L3
1192+ 91BF C9               ret
1193+ 91C0
1194+ 91C0              ; Cuadrante 4º
1195+ 91C0
1196+ 91C0 7C           4 ld a,h
1197+ 91C1 06 00            ld b,0
1198+ 91C3
1199+ 91C3 CD 62 92         call Compara_cositas_H4
1200+ 91C6
1201+ 91C6 04               inc b
1202+ 91C7 05               dec b
1203+ 91C8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 91C9
1205+ 91C9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 91CA 06 00            ld b,0
1207+ 91CC
1208+ 91CC CD 78 92         call Compara_cositas_L4
1209+ 91CF C9               ret
1210+ 91D0
1211+ 91D0              ; Cuadrantes 1º y 2º.
1212+ 91D0
1213+ 91D0 28 10        2 jr z,3F
1214+ 91D2
1215+ 91D2              ; 1er Cuadrante
1216+ 91D2
1217+ 91D2 7C               ld a,h
1218+ 91D3 06 00            ld b,0
1219+ 91D5
1220+ 91D5 CD 16 92         call Compara_cositas_H1
1221+ 91D8
1222+ 91D8 04               inc b
1223+ 91D9 05               dec b
1224+ 91DA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 91DB
1226+ 91DB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 91DC 06 00            ld b,0
1228+ 91DE
1229+ 91DE CD 2C 92         call Compara_cositas_L1
1230+ 91E1 C9               ret
1231+ 91E2
1232+ 91E2
1233+ 91E2              ; 2º Cuadrante
1234+ 91E2
1235+ 91E2 7C           3 ld a,h
1236+ 91E3 06 00            ld b,0
1237+ 91E5
1238+ 91E5 CD F2 91         call Compara_cositas_H2
1239+ 91E8
1240+ 91E8 04               inc b
1241+ 91E9 05               dec b
1242+ 91EA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 91EB
1244+ 91EB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 91EC 06 00            ld b,0
1246+ 91EE
1247+ 91EE CD 04 92         call Compara_cositas_L2
1248+ 91F1 C9               ret
1249+ 91F2
1250+ 91F2 A7           Compara_cositas_H2 and a
1251+ 91F3 28 0D            jr z,1F
1252+ 91F5              ;    cp $fd
1253+ 91F5              ;    jr z,1F
1254+ 91F5              ;    cp $fe
1255+ 91F5              ;    jr z,1F
1256+ 91F5 FE FF            cp $ff
1257+ 91F7 28 09            jr z,1F
1258+ 91F9 FE 01            cp $01
1259+ 91FB 28 05            jr z,1F
1260+ 91FD FE 02            cp $02
1261+ 91FF 28 01            jr z,1F
1262+ 9201 C0               ret nz
1263+ 9202 04           1 inc b
1264+ 9203 C9               ret
1265+ 9204
1266+ 9204 A7           Compara_cositas_L2 and a
1267+ 9205 28 0D            jr z,1F
1268+ 9207              ;    cp $fd
1269+ 9207              ;    jr z,1F
1270+ 9207 FE FE            cp $fe
1271+ 9209 28 09            jr z,1F
1272+ 920B FE FF            cp $ff
1273+ 920D 28 05            jr z,1F
1274+ 920F FE 01            cp $01
1275+ 9211 28 01            jr z,1F
1276+ 9213              ;    cp $02
1277+ 9213              ;    jr z,1F
1278+ 9213 C0               ret nz
1279+ 9214 04           1 inc b
1280+ 9215 C9               ret
1281+ 9216
1282+ 9216 A7           Compara_cositas_H1 and a
1283+ 9217 28 11            jr z,1F
1284+ 9219              ;    cp $fd
1285+ 9219              ;    jr z,1F
1286+ 9219              ;    cp $fe
1287+ 9219              ;    jr z,1F
1288+ 9219 FE FF            cp $ff
1289+ 921B 28 0D            jr z,1F
1290+ 921D FE 01            cp $01
1291+ 921F 28 09            jr z,1F
1292+ 9221 FE 02            cp $02
1293+ 9223 28 05            jr z,1F
1294+ 9225 FE 03            cp $03
1295+ 9227 28 01            jr z,1F
1296+ 9229 C0               ret nz
1297+ 922A 04           1 inc b
1298+ 922B C9               ret
1299+ 922C
1300+ 922C A7           Compara_cositas_L1 and a
1301+ 922D 28 0D            jr z,1F
1302+ 922F              ;    cp $fd
1303+ 922F              ;    jr z,1F
1304+ 922F              ;    cp $fe
1305+ 922F              ;    jr z,1F
1306+ 922F              ;    cp $ff
1307+ 922F              ;    jr z,1F
1308+ 922F FE 01            cp $01
1309+ 9231 28 09            jr z,1F
1310+ 9233 FE 02            cp $02
1311+ 9235 28 05            jr z,1F
1312+ 9237 FE 03            cp $03
1313+ 9239 28 01            jr z,1F
1314+ 923B C0               ret nz
1315+ 923C 04           1 inc b
1316+ 923D C9               ret
1317+ 923E
1318+ 923E A7           Compara_cositas_H3 and a
1319+ 923F 28 0D            jr z,1F
1320+ 9241              ;    cp $fd
1321+ 9241              ;    jr z,1F
1322+ 9241 FE FE            cp $fe
1323+ 9243 28 09            jr z,1F
1324+ 9245 FE FF            cp $ff
1325+ 9247 28 05            jr z,1F
1326+ 9249 FE 01            cp $01
1327+ 924B 28 01            jr z,1F
1328+ 924D              ;    cp $02
1329+ 924D              ;    jr z,1F
1330+ 924D              ;    cp $03
1331+ 924D              ;    jr z,1F
1332+ 924D C0               ret nz
1333+ 924E 04           1 inc b
1334+ 924F C9               ret
1335+ 9250
1336+ 9250 A7           Compara_cositas_L3 and a
1337+ 9251 28 0D            jr z,1F
1338+ 9253              ;    cp $fd
1339+ 9253              ;    jr z,1F
1340+ 9253              ;    cp $fe
1341+ 9253              ;    jr z,1F
1342+ 9253              ;    cp $ff
1343+ 9253              ;    jr z,1F
1344+ 9253 FE 01            cp $01
1345+ 9255 28 09            jr z,1F
1346+ 9257 FE 02            cp $02
1347+ 9259 28 05            jr z,1F
1348+ 925B FE 03            cp $03
1349+ 925D 28 01            jr z,1F
1350+ 925F C0               ret nz
1351+ 9260 04           1 inc b
1352+ 9261 C9               ret
1353+ 9262
1354+ 9262 A7           Compara_cositas_H4 and a
1355+ 9263 28 11            jr z,1F
1356+ 9265 FE FD            cp $fd
1357+ 9267 28 0D            jr z,1F
1358+ 9269 FE FE            cp $fe
1359+ 926B 28 09            jr z,1F
1360+ 926D FE FF            cp $ff
1361+ 926F 28 05            jr z,1F
1362+ 9271 FE 01            cp $01
1363+ 9273 28 01            jr z,1F
1364+ 9275              ;    cp $02
1365+ 9275              ;    jr z,1F
1366+ 9275              ;    cp $03
1367+ 9275              ;    jr z,1F
1368+ 9275 C0               ret nz
1369+ 9276 04           1 inc b
1370+ 9277 C9               ret
1371+ 9278
1372+ 9278 A7           Compara_cositas_L4 and a
1373+ 9279 28 0D            jr z,1F
1374+ 927B              ;    cp $fd
1375+ 927B              ;    jr z,1F
1376+ 927B FE FE            cp $fe
1377+ 927D 28 09            jr z,1F
1378+ 927F FE FF            cp $ff
1379+ 9281 28 05            jr z,1F
1380+ 9283 FE 01            cp $01
1381+ 9285 28 01            jr z,1F
1382+ 9287              ;    cp $02
1383+ 9287              ;    jr z,1F
1384+ 9287              ;    cp $03
1385+ 9287              ;    jr z,1F
1386+ 9287 C0               ret nz
1387+ 9288 04           1 inc b
1388+ 9289 C9               ret
# file closed: Disparo.asm
1536  928A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 928A              ; ******************************************************************************************************************************************************************************************
   2+ 928A              ;
   3+ 928A              ; 26/06/23
   4+ 928A              ;
   5+ 928A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 928A
   7+ 928A CD 6E 95     Draw call Prepara_draw
   8+ 928D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 928E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 928F 28 05        	jr z,2F
  11+ 9291
  12+ 9291 3A C9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9294 18 0C        	jr 1F
  14+ 9296
  15+ 9296 2A C7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9299 22 B7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 929C CD 2B 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 929F              ;													; _la esquina superior izquierda de la pantalla.
  19+ 929F CD CE 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92A2
  21+ 92A2 3A E1 88     1 ld a,(Ctrl_0)
  22+ 92A5 CB 6F        	bit 5,a
  23+ 92A7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92A9
  25+ 92A9 CD C1 92     	call Comprueba_limite_horizontal
  26+ 92AC CD 51 93     	call Comprueba_limite_vertical
  27+ 92AF
  28+ 92AF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92AF              ; -----------------------
  30+ 92AF              ; -----------------------
  31+ 92AF              ; -----------------------
  32+ 92AF
  33+ 92AF CD 9E 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92B2 CD D5 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92B5 CD 34 95     	call Define_rutina_de_impresion
  36+ 92B8
  37+ 92B8 3A E1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92BB CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92BD 32 E1 88     	ld (Ctrl_0),a
  40+ 92C0
  41+ 92C0 C9           	ret
  42+ 92C1
  43+ 92C1              ; *******************************************************************************************************************************************************************************************
  44+ 92C1              ;	21/01/23
  45+ 92C1              ;
  46+ 92C1              ; 	Comprueba_limite_horizontal.
  47+ 92C1              ;
  48+ 92C1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92C1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92C1              ;
  51+ 92C1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92C1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92C1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92C1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92C1
  56+ 92C1
  57+ 92C1
  58+ 92C1 3A E1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92C4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92C6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92C8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92CA 32 E1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92CD 18 09            jr 6F
  64+ 92CF CB 5F        1 bit 3,a
  65+ 92D1 28 0A            jr z,2F
  66+ 92D3 E6 F7            and $f7
  67+ 92D5 32 E1 88         ld (Ctrl_0),a
  68+ 92D8 CD 2B 94     6 call Inicializacion
  69+ 92DB 18 5B            jr 5F
  70+ 92DD E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92DE
  72+ 92DE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92DE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92DE
  75+ 92DE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92DF 2A EF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92E2 CD 8D 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92E5 67           	ld h,a
  79+ 92E6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 92E7 CD 8D 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 92EA 67           	ld h,a
  82+ 92EB A7           	and a
  83+ 92EC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 92EE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 92EF 3A C9 88     	ld a,(Cuad_objeto)
  86+ 92F2 FE 02        	cp 2
  87+ 92F4 38 1E        	jr c,3F
  88+ 92F6 28 1C        	jr z,3F
  89+ 92F8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 92F9 28 23            jr z,7F
  91+ 92FB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 92FD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 92FF E1           	pop hl
  94+ 9300
  95+ 9300              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9300              ; _para indicar con E="2" en caso necesario.
  97+ 9300
  98+ 9300 E5               push hl
  99+ 9301 C5               push bc
 100+ 9302 CD 8D 98     	call calcula_tercio
 101+ 9305 FE 01        	cp 1
 102+ 9307 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9309 CD 39 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 930C 28 26            jr z,9F
 105+ 930E 38 24            jr c,9F
 106+ 9310 1E 00        11 ld e,0
 107+ 9312 18 22            jr 8F
 108+ 9314 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9315 28 07        	jr z, 7F
 110+ 9317 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9319 1E 00         	ld e,0
 112+ 931B E1           	pop hl
 113+ 931C 18 04        	jr 4F
 114+ 931E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9320 18 15            jr 10F
 116+ 9322
 117+ 9322              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9322              ; _para indicar con E="2" en caso necesario.
 119+ 9322
 120+ 9322 E5           4 push hl
 121+ 9323 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9324 CD 8D 98     	call calcula_tercio
 123+ 9327 FE 01        	cp 1
 124+ 9329 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 932B CD 39 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 932E 28 04            jr z,9F
 127+ 9330 30 02            jr nc,9F
 128+ 9332 18 02        	jr 8F
 129+ 9334 1E 02        9 ld e,2
 130+ 9336 C1           8 pop bc
 131+ 9337 E1           10 pop hl
 132+ 9338 C9           5 ret
 133+ 9339
 134+ 9339              ; --------------------
 135+ 9339              ;
 136+ 9339              ; 25/08/22
 137+ 9339
 138+ 9339 CD 8D 98     Comprueba_centro call calcula_tercio
 139+ 933C 67               ld h,a
 140+ 933D 08           	ex af,af
 141+ 933E FE 02        	cp 2
 142+ 9340 38 07        	jr c,1F
 143+ 9342 28 05        	jr z,1F
 144+ 9344 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9347 18 03        	jr 2F
 146+ 9349 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 934C 08           2 ex af,af
 148+ 934D A7               and a
 149+ 934E ED 42            sbc hl,bc
 150+ 9350 C9               ret
 151+ 9351
 152+ 9351              ; *********************************************************************************************************************************************************************************************
 153+ 9351              ;
 154+ 9351              ;   16/8/22
 155+ 9351              ;
 156+ 9351              ;	Comprueba_limite_vertical
 157+ 9351              ;
 158+ 9351              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9351              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9351              ;
 161+ 9351
 162+ 9351 2A B7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9354 7D           	ld a,l
 164+ 9355 E6 1F        	and $1F
 165+ 9357 57           	ld d,a
 166+ 9358 3A F1 88     	ld a,(Limite_vertical)
 167+ 935B BA           	cp d 											; Límite - Posición.
 168+ 935C 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 935D 3A C9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9360 CB 47        	bit 0,a
 171+ 9362 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9364
 173+ 9364              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9364
 175+ 9364 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9365 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9367
 178+ 9367              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9367              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9367
 181+ 9367 3A BB 88         ld a,(Coordenada_X)
 182+ 936A 16 0F            ld d,Centro_izquierda
 183+ 936C A7               and a
 184+ 936D 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 936E 28 1E            jr z,3F
 186+ 9370 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9372              ;                                                    ; _salimos sin modificar nada.
 188+ 9372 18 0E            jr 2F
 189+ 9374 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9375 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9377
 192+ 9377              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9377              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9377
 195+ 9377 3A BB 88         ld a,(Coordenada_X)
 196+ 937A 16 10            ld d,Centro_derecha
 197+ 937C A7               and a
 198+ 937D 92               sub d
 199+ 937E 28 0E            jr z,3F
 200+ 9380 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9382              ;                                                    ; _salimos sin modificar nada.
 202+ 9382 CB 43        2 bit 0,e
 203+ 9384 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9386 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9387 CD 1B 94         call Modificaccionne
 206+ 938A C1           	pop bc
 207+ 938B CD 2B 94         call Inicializacion
 208+ 938E C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 938F
 210+ 938F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 938F
 212+ 938F C5           4 push bc
 213+ 9390 01 B6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9393 0A           	ld a,(bc)
 215+ 9394 3D           	dec a
 216+ 9395 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9396 7D           	ld a,l
 218+ 9397 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9398 CB 47        	bit 0,a
 220+ 939A 28 03        	jr z,5F
 221+ 939C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 939D 18 2E        	jr 7F
 223+ 939F
 224+ 939F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 939F
 226+ 939F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93A0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93A1 3A E1 88     	ld a,(Ctrl_0)
 229+ 93A4 CB 4F        	bit 1,a
 230+ 93A6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93A8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93A9
 233+ 93A9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93A9
 235+ 93A9 1C               inc e
 236+ 93AA 1D               dec e
 237+ 93AB 20 07            jr nz,12F
 238+ 93AD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93AE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93AF 22 B7 88     	ld (Posicion_actual),hl
 241+ 93B2 18 44        13 jr 9F
 242+ 93B4 CB 43        12 bit 0,e
 243+ 93B6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93B8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93B8 C1           	pop bc
 246+ 93B9 18 D3        	jr 3B
 247+ 93BB 80           14 add b
 248+ 93BC 6F               ld l,a
 249+ 93BD 22 B7 88     	ld (Posicion_actual),hl
 250+ 93C0 CD 1B 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93C3 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93C5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93C7 32 E1 88         ld (Ctrl_0),a
 254+ 93CA F1           	pop af
 255+ 93CB 18 2B        	jr 9F
 256+ 93CD
 257+ 93CD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93CD
 259+ 93CD F5           7 push af
 260+ 93CE 3A E1 88     	ld a,(Ctrl_0)
 261+ 93D1 CB 47        	bit 0,a
 262+ 93D3 20 1D        	jr nz,8F
 263+ 93D5 F1           	pop af
 264+ 93D6
 265+ 93D6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93D6
 267+ 93D6 1C           	inc e
 268+ 93D7 1D               dec e
 269+ 93D8 20 07            jr nz,10F
 270+ 93DA 90           	sub b
 271+ 93DB 6F               ld l,a
 272+ 93DC 22 B7 88     	ld (Posicion_actual),hl
 273+ 93DF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93E1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93E1 CB 43        10 bit 0,e
 276+ 93E3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93E5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93E5 C1           	pop bc
 279+ 93E6 18 A6        	jr 3B
 280+ 93E8 90           16 sub b
 281+ 93E9 6F               ld l,a
 282+ 93EA 22 B7 88     	ld (Posicion_actual),hl
 283+ 93ED CD 1B 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 93F0 18 06            jr 9F
 285+ 93F2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 93F4 32 E1 88         ld (Ctrl_0),a
 287+ 93F7 F1           	pop af
 288+ 93F8 C1           9 pop bc
 289+ 93F9 1E 00        	ld e,0
 290+ 93FB CD 2B 94         call Inicializacion
 291+ 93FE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 93FF 08           	ex af,af
 293+ 9400 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9401 18 8B            jr 3B
 295+ 9403
 296+ 9403              ; --------------------
 297+ 9403
 298+ 9403 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9405 CD 89 95     1 call PreviousScan
 300+ 9408 10 FB            djnz 1B
 301+ 940A 22 B7 88     	ld (Posicion_actual),hl
 302+ 940D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 940E C9           	ret
 304+ 940F
 305+ 940F              ; --------------------
 306+ 940F
 307+ 940F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9411 CD 7A 95     1 call NextScan
 309+ 9414 10 FB            djnz 1B
 310+ 9416 22 B7 88     	ld (Posicion_actual),hl
 311+ 9419 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 941A C9           	ret
 313+ 941B
 314+ 941B              ; --------------------
 315+ 941B              ;
 316+ 941B              ;	22/01/23
 317+ 941B              ;
 318+ 941B              ;	E="1". Hemos cambiado de cuadrante.
 319+ 941B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 941B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 941B
 322+ 941B
 323+ 941B              Modificaccionne
 324+ 941B
 325+ 941B 3A C9 88     	ld a,(Cuad_objeto)
 326+ 941E FE 02        	cp 2
 327+ 9420 CC 03 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9423 DC 03 94         call c,Modifica_Pos_actual
 329+ 9426 C8           	ret z
 330+ 9427 CD 0F 94         call Modifica_Pos_actual2
 331+ 942A C9               ret
 332+ 942B
 333+ 942B              ; *************************************************************************************************************************************************************************************************
 334+ 942B              ;
 335+ 942B              ;	13/8/22
 336+ 942B              ;
 337+ 942B              ;	Inicializacion
 338+ 942B              ;
 339+ 942B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 942B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 942B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 942B              ;
 343+ 942B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 942B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 942B              ;	_ desaparece/aparece.
 346+ 942B
 347+ 942B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 942B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 942B              ;
 350+ 942B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 942B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 942B              ; 		   [E] ="0"
 353+ 942B
 354+ 942B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 942B
 356+ 942B CD 8D 98     Inicializacion call calcula_tercio
 357+ 942E 28 36        	jr z,primit
 358+ 9430 E6 02        	and 2
 359+ 9432 20 07        	jr nz,segmit
 360+ 9434 7D           	ld a,l
 361+ 9435 FE 7F        	cp $7f
 362+ 9437 38 2D        	jr c,primit
 363+ 9439 28 2B        	jr z,primit
 364+ 943B CD 98 94     segmit call column
 365+ 943E 38 13        	jr c,tercuad
 366+ 9440 3E 04        cuarcuad ld a,4
 367+ 9442 32 C9 88     	ld (Cuad_objeto),a
 368+ 9445 21 20 48     	ld hl,$4820
 369+ 9448 22 EF 88     	ld (Limite_horizontal),hl
 370+ 944B 21 F1 88     	ld hl,Limite_vertical
 371+ 944E 36 0D        	ld (hl),$0d
 372+ 9450 08           	ex af,af
 373+ 9451 18 3C        	jr 1F
 374+ 9453              tercuad
 375+ 9453 3E 03        	ld a,3
 376+ 9455 32 C9 88     	ld (Cuad_objeto),a
 377+ 9458 21 20 48     	ld hl,$4820
 378+ 945B 22 EF 88     	ld (Limite_horizontal),hl
 379+ 945E 21 F1 88     	ld hl,Limite_vertical
 380+ 9461 36 12        	ld (hl),$12
 381+ 9463 08           	ex af,af
 382+ 9464 18 29        	jr 1F
 383+ 9466 CD 98 94     primit call column
 384+ 9469 38 13        	jr c, primcuad
 385+ 946B              segcuad
 386+ 946B 3E 02        	ld a,2
 387+ 946D 32 C9 88     	ld (Cuad_objeto),a
 388+ 9470 21 C0 4F     	ld hl,$4fc0
 389+ 9473 22 EF 88     	ld (Limite_horizontal),hl
 390+ 9476 21 F1 88     	ld hl,Limite_vertical
 391+ 9479 36 0D        	ld (hl),$0d
 392+ 947B 08           	ex af,af
 393+ 947C 18 11        	jr 1F
 394+ 947E              primcuad
 395+ 947E 3E 01        	ld a,1
 396+ 9480 32 C9 88     	ld (Cuad_objeto),a
 397+ 9483 21 C0 4F     	ld hl,$4fc0
 398+ 9486 22 EF 88     	ld (Limite_horizontal),hl
 399+ 9489 21 F1 88     	ld hl,Limite_vertical
 400+ 948C 36 12        	ld (hl),$12
 401+ 948E 08           	ex af,af
 402+ 948F CD 18 9C     1 call Genera_coordenadas
 403+ 9492 21 E1 88     	ld hl,Ctrl_0
 404+ 9495 CB EE        	set 5,(hl)
 405+ 9497 C9           	ret
 406+ 9498
 407+ 9498              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9498
 409+ 9498              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9498              ;
 411+ 9498              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9498
 413+ 9498 7D           column ld a,l
 414+ 9499 E6 1F        	and $1f
 415+ 949B FE 10         	cp $10
 416+ 949D C9            	ret
 417+ 949E
 418+ 949E              ; --------------------------------------------------------------------------------------------------------------------
 419+ 949E              ;
 420+ 949E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 949E              ;
 422+ 949E              ; 14/12/22
 423+ 949E              ;
 424+ 949E              ;	Modifica: A y BC.
 425+ 949E
 426+ 949E 3A C9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94A1 E6 01        	and 1
 428+ 94A3 28 17        	jr z,1F
 429+ 94A5
 430+ 94A5              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94A5
 432+ 94A5 3A BB 88     	ld a,(Coordenada_X)
 433+ 94A8 47           	ld b,a
 434+ 94A9 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94AA 79           	ld a,c
 436+ 94AB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94AC 38 08        	jr c,2F
 438+ 94AE 47           	ld b,a
 439+ 94AF 79           	ld a,c
 440+ 94B0 90           	sub b
 441+ 94B1 32 EE 88     	ld (Columnas),a
 442+ 94B4 18 1B        	jr 4F
 443+ 94B6 79           2 ld a,c
 444+ 94B7 32 EE 88     	ld (Columnas),a
 445+ 94BA 18 15        	jr 4F
 446+ 94BC
 447+ 94BC              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94BC
 449+ 94BC 3A BB 88     1 ld a,(Coordenada_X)
 450+ 94BF 81           	add c
 451+ 94C0 3D           	dec a
 452+ 94C1 D6 1F        	sub $1f
 453+ 94C3 38 08        	jr c,3F
 454+ 94C5 47           	ld b,a
 455+ 94C6 79           	ld a,c
 456+ 94C7 90           	sub b
 457+ 94C8 32 EE 88     	ld (Columnas),a
 458+ 94CB 18 04        	jr 4F
 459+ 94CD 79           3 ld a,c
 460+ 94CE 32 EE 88     	ld (Columnas),a
 461+ 94D1 D9           4 exx
 462+ 94D2 4F           	ld c,a
 463+ 94D3 D9           	exx
 464+ 94D4 C9            ret
 465+ 94D5
 466+ 94D5              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94D5              ;
 468+ 94D5              ;   19/7/23
 469+ 94D5              ;
 470+ 94D5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94D5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94D5              ;
 473+ 94D5              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94D5              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94D5              ;
 476+ 94D5              ;	DESTRUYE: HL,B Y A.
 477+ 94D5
 478+ 94D5 3A C9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94D8 FE 02        	cp 2
 480+ 94DA 38 18        	jr c,1F
 481+ 94DC 28 16        	jr z,1F
 482+ 94DE E6 01        	and 1
 483+ 94E0 28 0D        	jr z,3F
 484+ 94E2
 485+ 94E2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94E2
 487+ 94E2 CD 28 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94E5
 489+ 94E5 7D           9 ld a,l
 490+ 94E6 E6 1F        	and $1f
 491+ 94E8 28 2A        	jr z,7F
 492+ 94EA 2B           	dec hl
 493+ 94EB 10 F8        	djnz 9B
 494+ 94ED 18 25        	jr 7F
 495+ 94EF
 496+ 94EF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 94EF
 498+ 94EF 2A B7 88     3 ld hl,(Posicion_actual)
 499+ 94F2 18 20        	jr 7F
 500+ 94F4
 501+ 94F4 28 14        1 jr z,2F
 502+ 94F6
 503+ 94F6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 94F6
 505+ 94F6 CD 28 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 94F9
 507+ 94F9 7D           4 ld a,l
 508+ 94FA E6 1F        	and $1f
 509+ 94FC 28 03        	jr z,6F
 510+ 94FE 2B           	dec hl
 511+ 94FF 10 F8        	djnz 4B
 512+ 9501 06 0F        6 ld b,15
 513+ 9503 CD 89 95     5 call PreviousScan
 514+ 9506 10 FB        	djnz 5B
 515+ 9508 18 0A        	jr 7F
 516+ 950A
 517+ 950A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 950A
 519+ 950A CD 28 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 950D 06 0F        	ld b,15
 521+ 950F CD 89 95     8 call PreviousScan
 522+ 9512 10 FB        	djnz 8B
 523+ 9514
 524+ 9514 E5           7 push hl
 525+ 9515 DD E1        	pop ix
 526+ 9517
 527+ 9517 2A B9 88     	ld hl,(Puntero_objeto)
 528+ 951A E5           	push hl
 529+ 951B FD E1        	pop iy
 530+ 951D
 531+ 951D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 951D
 533+ 951D 3A E1 88     	ld a,(Ctrl_0)
 534+ 9520 CB 77        	bit 6,a
 535+ 9522 C8           	ret z
 536+ 9523
 537+ 9523              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9523              ; _ entidad / Amadeus´.
 539+ 9523
 540+ 9523 DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 9527
 542+ 9527 C9           	ret
 543+ 9528
 544+ 9528              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9528              ;
 546+ 9528              ;	2/1/23
 547+ 9528              ;
 548+ 9528              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9528              ;
 550+ 9528              ;	Tras esta rutina tenemos:
 551+ 9528              ;
 552+ 9528              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9528              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9528              ;
 555+ 9528              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9528
 557+ 9528 2A B7 88     Operandos ld hl,(Posicion_actual)
 558+ 952B 3A EE 88     	ld a,(Columnas)
 559+ 952E 3D           	dec a
 560+ 952F 20 01        	jr nz,1F
 561+ 9531 3C           	inc a
 562+ 9532 47           1 ld b,a
 563+ 9533 C9           	ret
 564+ 9534
 565+ 9534              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9534              ;
 567+ 9534              ;	3/1/23
 568+ 9534              ;
 569+ 9534              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9534              ;
 571+ 9534              ;	Destruye: A,B,HL y DE.
 572+ 9534
 573+ 9534              Define_rutina_de_impresion
 574+ 9534
 575+ 9534 3A B6 88     	ld a,(Columns)
 576+ 9537 47           	ld b,a
 577+ 9538 3A EE 88     	ld a,(Columnas)
 578+ 953B B8           	cp b
 579+ 953C 20 0D        	jr nz,2f
 580+ 953E
 581+ 953E              ;	La entidad se imprime entera.
 582+ 953E
 583+ 953E 21 5D 96     	ld hl, Indice_entidades_completas
 584+ 9541 E6 01        	and 1
 585+ 9543 28 02        	jr z,1F
 586+ 9545
 587+ 9545 23           	inc hl
 588+ 9546 23           	inc hl
 589+ 9547
 590+ 9547 CD 0E 8C     1 call Extrae_address
 591+ 954A C9           	ret		;	ret
 592+ 954B
 593+ 954B              ;	La entidad no se imprime entera en pantalla.
 594+ 954B
 595+ 954B 3A C9 88     2 ld a,(Cuad_objeto)
 596+ 954E E6 01        	and 1
 597+ 9550 28 17        	jr z,3F
 598+ 9552
 599+ 9552              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9552
 601+ 9552 21 61 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9555 3A B6 88     4 ld a,(Columns)
 603+ 9558 E6 01        	and 1
 604+ 955A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 955C
 606+ 955C 23           	inc hl
 607+ 955D 23           	inc hl
 608+ 955E
 609+ 955E 3A EE 88     	ld a,(Columnas)
 610+ 9561 E6 01        	and 1
 611+ 9563 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9565
 613+ 9565 23           	inc hl
 614+ 9566 23           	inc hl
 615+ 9567
 616+ 9567 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9569
 618+ 9569 21 67 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 956C 18 E7        	jr 4B
 620+ 956E
 621+ 956E              ; --------------------------------------------------------------------------------------------------------------------
 622+ 956E              ;
 623+ 956E              ;	Prepara_draw
 624+ 956E              ;
 625+ 956E              ;	Es una rutina de carga.
 626+ 956E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 956E              ;
 628+ 956E              ;	FUNCIONAMIENTO:
 629+ 956E              ;
 630+ 956E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 956E              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 956E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 956E              ;
 634+ 956E              ;	DESTRUYE:
 635+ 956E              ;
 636+ 956E              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 956E
 638+ 956E 21 B5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9571 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9572 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9573 4E           	ld c,(hl)
 642+ 9574 2A B7 88     	ld hl,(Posicion_actual)
 643+ 9577 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9579 C9           	ret
 645+ 957A
 646+ 957A              ;----------------------------------------------------------------------------------------------------------------
 647+ 957A              ;
 648+ 957A              ;	5/08/22
 649+ 957A              ;
 650+ 957A              ;   NextScan.
 651+ 957A              ;
 652+ 957A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 957A              ;
 654+ 957A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 957A              ;
 656+ 957A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 957A              ;
 658+ 957A              ;       DESTRUIDOS: AF y HL !!!
 659+ 957A              ;
 660+ 957A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 957A              ;
 662+ 957A
 663+ 957A 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 957B 7C               ld a,h
 665+ 957C E6 07            and 7
 666+ 957E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 957F
 668+ 957F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9580 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9582 6F               ld l,a
 671+ 9583 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9584
 673+ 9584 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9585 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9587 67               ld h,a
 676+ 9588 C9               ret
 677+ 9589
 678+ 9589              ;----------------------------------------------------------------------------------------------------------------
 679+ 9589              ;
 680+ 9589              ;	5/08/22
 681+ 9589              ;
 682+ 9589              ;   PreviousScan.
 683+ 9589              ;
 684+ 9589              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9589              ;
 686+ 9589              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9589              ;
 688+ 9589              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9589              ;
 690+ 9589              ;       DESTRUIDOS: AF y HL !!!
 691+ 9589              ;
 692+ 9589              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9589              ;
 694+ 9589
 695+ 9589 7C           PreviousScan ld a,h
 696+ 958A 25               dec h               ; Dec H.
 697+ 958B E6 07            and 7
 698+ 958D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 958E
 700+ 958E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 958F D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9591 6F               ld l,a
 703+ 9592 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9593
 705+ 9593 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9594 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9596 67               ld h,a
 708+ 9597 C9               ret
 709+ 9598
 710+ 9598              ; -----------------------------------------------------------------------------------
 711+ 9598              ;
 712+ 9598              ;	31/7/23
 713+ 9598              ;
 714+ 9598              ;	Rutina principal de pintado de entidades.
 715+ 9598              ;	Extrae la foto del frame, (entidades).
 716+ 9598
 717+ 9598              Extrae_foto_entidades
 718+ 9598
 719+ 9598 21 01 70     	ld hl,Album_de_fotos+1
 720+ 959B 7E           	ld a,(hl)
 721+ 959C A7           	and a
 722+ 959D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 959E
 724+ 959E              ;	No hay datos, (entidades para pintar en este frame).
 725+ 959E
 726+ 959E 3A 00 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95A1 A7           	and a
 728+ 95A2 C8           	ret z
 729+ 95A3
 730+ 95A3              ; -----------------------------------
 731+ 95A3
 732+ 95A3 ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95A7 31 00 70     	ld sp,Album_de_fotos
 734+ 95AA
 735+ 95AA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95AC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95AD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95AE
 739+ 95AE ED 73 07 89  	ld (Stack_2),sp
 740+ 95B2 ED 7B 05 89  	ld sp,(Stack)
 741+ 95B6
 742+ 95B6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95B6
 744+ 95B6 3E CD        	ld a,$cd
 745+ 95B8 32 C0 95     	ld (Imprime),a
 746+ 95BB EB           	ex de,hl
 747+ 95BC 22 C1 95     	ld (Imprime+1),hl
 748+ 95BF EB           	ex de,hl
 749+ 95C0
 750+ 95C0              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95C0
 752+ 95C0 00 00 00     Imprime db 0,0,0
 753+ 95C3
 754+ 95C3 ED 73 05 89  	ld (Stack),sp
 755+ 95C7
 756+ 95C7 3A 00 89     	ld a,(Numero_de_malotes)
 757+ 95CA 3D           	dec a
 758+ 95CB 28 09        	jr z,1F
 759+ 95CD 32 00 89      	ld (Numero_de_malotes),a
 760+ 95D0
 761+ 95D0 ED 7B 07 89  	ld sp,(Stack_2)
 762+ 95D4 18 D4        	jr 2B
 763+ 95D6
 764+ 95D6 AF           1 xor a
 765+ 95D7 32 07 89     	ld (Stack_2),a
 766+ 95DA
 767+ 95DA C9           	ret
 768+ 95DB
 769+ 95DB              ; -----------------------------------------------------------------------------------
 770+ 95DB              ;
 771+ 95DB              ;	28/2/23
 772+ 95DB              ;
 773+ 95DB              ;	Pinta los disparos generados.
 774+ 95DB
 775+ 95DB              Extrae_foto_disparos
 776+ 95DB
 777+ 95DB 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95DE 7E               ld a,(hl)
 779+ 95DF A7               and a
 780+ 95E0 C8               ret z
 781+ 95E1
 782+ 95E1 3A 14 89     	ld a,(Numero_de_disparotes)
 783+ 95E4 A7           	and a
 784+ 95E5 C8           	ret z
 785+ 95E6 ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 95EA 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 95ED
 788+ 95ED FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 95EF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 95F0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 95F1
 792+ 95F1 ED 73 07 89  	ld (Stack_2),sp
 793+ 95F5 ED 7B 05 89  	ld sp,(Stack)
 794+ 95F9
 795+ 95F9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 95F9
 797+ 95F9 3E CD        	ld a,$cd
 798+ 95FB 32 03 96     	ld (Imprime2),a
 799+ 95FE EB           	ex de,hl
 800+ 95FF 22 04 96     	ld (Imprime2+1),hl
 801+ 9602 EB           	ex de,hl
 802+ 9603
 803+ 9603              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9603
 805+ 9603 00 00 00     Imprime2 db 0,0,0
 806+ 9606
 807+ 9606 3A 14 89     	ld a,(Numero_de_disparotes)
 808+ 9609 3D           	dec a
 809+ 960A 28 09        	jr z,1F
 810+ 960C 32 14 89      	ld (Numero_de_disparotes),a
 811+ 960F
 812+ 960F ED 7B 07 89  	ld sp,(Stack_2)
 813+ 9613 18 D8        	jr 2B
 814+ 9615
 815+ 9615 AF           1 xor a
 816+ 9616 32 07 89     	ld (Stack_2),a
 817+ 9619 C9           	ret
 818+ 961A
 819+ 961A              ; -----------------------------------------------------------------------------------
 820+ 961A              ;
 821+ 961A              ;	4/9/23
 822+ 961A              ;
 823+ 961A              ;	Rutina principal de pintado de Amadeus.
 824+ 961A              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 961A
 826+ 961A 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 961D 7E           	ld a,(hl)
 828+ 961E A7           	and a
 829+ 961F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9620
 831+ 9620 3A 00 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9623 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9624 C8           	ret z
 834+ 9625
 835+ 9625              ; -----------------------------------
 836+ 9625
 837+ 9625 ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9629 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 962C
 840+ 962C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 962E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 962F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9630
 844+ 9630 ED 73 07 89  	ld (Stack_2),sp
 845+ 9634 ED 7B 05 89  	ld sp,(Stack)
 846+ 9638
 847+ 9638              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9638
 849+ 9638 3E CD        	ld a,$cd
 850+ 963A 32 42 96     	ld (Imprime_Amadeus),a
 851+ 963D EB           	ex de,hl
 852+ 963E 22 43 96     	ld (Imprime_Amadeus+1),hl
 853+ 9641 EB           	ex de,hl
 854+ 9642
 855+ 9642              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9642
 857+ 9642 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9645
 859+ 9645 ED 73 05 89  	ld (Stack),sp
 860+ 9649
 861+ 9649 3A 00 89     	ld a,(Numero_de_malotes)
 862+ 964C 3D           	dec a
 863+ 964D 28 09        	jr z,1F
 864+ 964F 32 00 89      	ld (Numero_de_malotes),a
 865+ 9652
 866+ 9652 ED 7B 07 89  	ld sp,(Stack_2)
 867+ 9656 18 D4        	jr 2B
 868+ 9658
 869+ 9658 AF           1 xor a
 870+ 9659 32 07 89     	ld (Stack_2),a
 871+ 965C
 872+ 965C C9           	ret
# file closed: Draw_XOR.asm
1537  965D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 965D              ;   índices de Rutinas de impresión.
   2+ 965D
   3+ 965D 6D 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 965F 9A 96            defw Pinta_Amadeus_3x2
   5+ 9661
   6+ 9661 F0 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9663 90 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9665 44 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9667
  10+ 9667 1A 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9669 1E 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 966B D2 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 966D
  14+ 966D
  15+ 966D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 966D              ;
  17+ 966D              ;   12/12/22
  18+ 966D              ;
  19+ 966D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 966D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 966D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 966D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 966D              ;
  24+ 966D              ;   Modifica: DE y HL.
  25+ 966D
  26+ 966D ED 73 05 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9671 FD F9        	ld sp,iy
  28+ 9673 06 10            ld b,16
  29+ 9675 D1           1 pop de
  30+ 9676 7B               ld a,e
  31+ 9677 AE               xor (hl)
  32+ 9678 77           	ld (hl),a
  33+ 9679 23           	inc hl
  34+ 967A 7A               ld a,d
  35+ 967B AE               xor (hl)
  36+ 967C 77           	ld (hl),a
  37+ 967D 2B           	dec hl
  38+ 967E 24           	inc h
  39+ 967F 7C               ld a,h
  40+ 9680 E6 07            and 7
  41+ 9682 20 0A            jr nz,2F
  42+ 9684 7D               ld a,l
  43+ 9685 C6 20            add a,$20
  44+ 9687 6F               ld l,a
  45+ 9688 38 04            jr c,2F
  46+ 968A 7C               ld a,h
  47+ 968B D6 08            sub 8
  48+ 968D 67               ld h,a
  49+ 968E 7C           2 ld a,h
  50+ 968F FE 58            cp $58
  51+ 9691 28 02            jr z,3F
  52+ 9693 10 E0            djnz 1B
  53+ 9695 ED 7B 05 89  3 ld sp,(Stack)
  54+ 9699 C9           	ret
  55+ 969A
  56+ 969A ED 73 05 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 969E FD F9        	ld sp,iy
  58+ 96A0 06 08            ld b,8
  59+ 96A2 D1           1 pop de
  60+ 96A3 7B               ld a,e
  61+ 96A4 AE               xor (hl)
  62+ 96A5 77           	ld (hl),a
  63+ 96A6 23           	inc hl
  64+ 96A7 7A               ld a,d
  65+ 96A8 AE               xor (hl)
  66+ 96A9 77           	ld (hl),a
  67+ 96AA 23           	inc hl
  68+ 96AB D1           	pop de
  69+ 96AC 7B               ld a,e
  70+ 96AD AE               xor (hl)
  71+ 96AE 77           	ld (hl),a
  72+ 96AF 2B           	dec hl
  73+ 96B0 2B           	dec hl
  74+ 96B1 24           	inc h
  75+ 96B2 7C               ld a,h
  76+ 96B3 E6 07            and 7
  77+ 96B5 20 0A            jr nz,2F
  78+ 96B7 7D               ld a,l
  79+ 96B8 C6 20            add a,$20
  80+ 96BA 6F               ld l,a
  81+ 96BB 38 04            jr c,2F
  82+ 96BD 7C               ld a,h
  83+ 96BE D6 08            sub 8
  84+ 96C0 67               ld h,a
  85+ 96C1 7C           2 ld a,h
  86+ 96C2 FE 58            cp $58
  87+ 96C4 28 25            jr z,4F
  88+ 96C6 7A               ld a,d
  89+ 96C7 AE               xor (hl)
  90+ 96C8 77               ld (hl),a
  91+ 96C9 D1           	pop de
  92+ 96CA 23           	inc hl
  93+ 96CB 7B               ld a,e
  94+ 96CC AE               xor (hl)
  95+ 96CD 77           	ld (hl),a
  96+ 96CE 23           	inc hl
  97+ 96CF 7A               ld a,d
  98+ 96D0 AE               xor (hl)
  99+ 96D1 77           	ld (hl),a
 100+ 96D2 2B           	dec hl
 101+ 96D3 2B           	dec hl
 102+ 96D4 24           	inc h
 103+ 96D5 7C               ld a,h
 104+ 96D6 E6 07            and 7
 105+ 96D8 20 0A            jr nz,3F
 106+ 96DA 7D               ld a,l
 107+ 96DB C6 20            add a,$20
 108+ 96DD 6F               ld l,a
 109+ 96DE 38 04            jr c,3F
 110+ 96E0 7C               ld a,h
 111+ 96E1 D6 08            sub 8
 112+ 96E3 67               ld h,a
 113+ 96E4 7C           3 ld a,h
 114+ 96E5 FE 58            cp $58
 115+ 96E7 28 02            jr z,4F
 116+ 96E9 10 B7            djnz 1B
 117+ 96EB ED 7B 05 89  4 ld sp,(Stack)
 118+ 96EF C9           	ret
 119+ 96F0
 120+ 96F0              ; ---------------------------------------------------
 121+ 96F0
 122+ 96F0 ED 73 05 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 96F4 FD F9        	ld sp,iy
 124+ 96F6
 125+ 96F6              ; >>>
 126+ 96F6
 127+ 96F6 06 10            ld b,16
 128+ 96F8 D1           1 pop de
 129+ 96F9 7A           	ld a,d
 130+ 96FA AE           	xor (hl)
 131+ 96FB 77           	ld (hl),a
 132+ 96FC 24           	inc h
 133+ 96FD 7C               ld a,h
 134+ 96FE E6 07            and 7
 135+ 9700 20 0C            jr nz,2F
 136+ 9702 7D               ld a,l
 137+ 9703 C6 20            add a,$20
 138+ 9705 6F               ld l,a
 139+ 9706 38 06            jr c,2F
 140+ 9708 7C               ld a,h
 141+ 9709 D6 08            sub 8
 142+ 970B 67               ld h,a
 143+ 970C 18 00            jr 2F
 144+ 970E 7C           2 ld a,h
 145+ 970F FE 58            cp $58
 146+ 9711 28 02            jr z,3F
 147+ 9713 10 E3            djnz 1B
 148+ 9715 ED 7B 05 89  3 ld sp,(Stack)
 149+ 9719 C9           	ret
 150+ 971A
 151+ 971A ED 73 05 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 971E FD F9        	ld sp,iy
 153+ 9720
 154+ 9720              ; >>>
 155+ 9720
 156+ 9720 06 10            ld b,16
 157+ 9722 D1           1 pop de
 158+ 9723 7B           	ld a,e
 159+ 9724 AE           	xor (hl)
 160+ 9725 77           	ld (hl),a
 161+ 9726 24           	inc h
 162+ 9727 7C               ld a,h
 163+ 9728 E6 07            and 7
 164+ 972A 20 0C            jr nz,2F
 165+ 972C 7D               ld a,l
 166+ 972D C6 20            add a,$20
 167+ 972F 6F               ld l,a
 168+ 9730 38 06            jr c,2F
 169+ 9732 7C               ld a,h
 170+ 9733 D6 08            sub 8
 171+ 9735 67               ld h,a
 172+ 9736 18 00            jr 2F
 173+ 9738 7C           2 ld a,h
 174+ 9739 FE 58            cp $58
 175+ 973B 28 02            jr z,3F
 176+ 973D 10 E3            djnz 1B
 177+ 973F ED 7B 05 89  3 ld sp,(Stack)
 178+ 9743 C9           	ret
 179+ 9744
 180+ 9744              ; ---------------------------------------------------
 181+ 9744
 182+ 9744 ED 73 05 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9748 FD F9        	ld sp,iy
 184+ 974A 06 08            ld b,8
 185+ 974C D1           1 pop de
 186+ 974D 7A           	ld a,d
 187+ 974E AE           	xor (hl)
 188+ 974F 77           	ld (hl),a
 189+ 9750 23           	inc hl
 190+ 9751 D1           	pop de
 191+ 9752 7B           	ld a,e
 192+ 9753 AE           	xor (hl)
 193+ 9754 77           	ld (hl),a
 194+ 9755 2B           	dec hl
 195+ 9756 24            	inc h
 196+ 9757 7C               ld a,h
 197+ 9758 E6 07            and 7
 198+ 975A 20 0A            jr nz,2F
 199+ 975C 7D               ld a,l
 200+ 975D C6 20            add a,$20
 201+ 975F 6F               ld l,a
 202+ 9760 38 04            jr c,2F
 203+ 9762 7C               ld a,h
 204+ 9763 D6 08            sub 8
 205+ 9765 67               ld h,a
 206+ 9766 7C           2 ld a,h
 207+ 9767 FE 58            cp $58
 208+ 9769 28 20            jr z,4F
 209+ 976B D1               pop de
 210+ 976C 7B           	ld a,e
 211+ 976D AE           	xor (hl)
 212+ 976E 77           	ld (hl),a
 213+ 976F 23           	inc hl
 214+ 9770 7A           	ld a,d
 215+ 9771 AE           	xor (hl)
 216+ 9772 77           	ld (hl),a
 217+ 9773 2B           	dec hl
 218+ 9774 24           	inc h
 219+ 9775 7C               ld a,h
 220+ 9776 E6 07            and 7
 221+ 9778 20 0A            jr nz,3F
 222+ 977A 7D               ld a,l
 223+ 977B C6 20            add a,$20
 224+ 977D 6F               ld l,a
 225+ 977E 38 04            jr c,3F
 226+ 9780 7C               ld a,h
 227+ 9781 D6 08            sub 8
 228+ 9783 67               ld h,a
 229+ 9784 7C           3 ld a,h
 230+ 9785 FE 58            cp $58
 231+ 9787 28 02            jr z,4F
 232+ 9789 10 C1            djnz 1B
 233+ 978B ED 7B 05 89  4 ld sp,(Stack)
 234+ 978F C9           	ret
 235+ 9790
 236+ 9790 ED 73 05 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9794 FD F9        	ld sp,iy
 238+ 9796 06 08            ld b,8
 239+ 9798 D1           1 pop de
 240+ 9799 D1           	pop de
 241+ 979A 7B           	ld a,e
 242+ 979B AE           	xor (hl)
 243+ 979C 77           	ld (hl),a
 244+ 979D 24            	inc h
 245+ 979E 7C               ld a,h
 246+ 979F E6 07            and 7
 247+ 97A1 20 0A            jr nz,2F
 248+ 97A3 7D               ld a,l
 249+ 97A4 C6 20            add a,$20
 250+ 97A6 6F               ld l,a
 251+ 97A7 38 04            jr c,2F
 252+ 97A9 7C               ld a,h
 253+ 97AA D6 08            sub 8
 254+ 97AC 67               ld h,a
 255+ 97AD 7C           2 ld a,h
 256+ 97AE FE 58            cp $58
 257+ 97B0 28 1B            jr z,4F
 258+ 97B2 D1               pop de
 259+ 97B3 7A           	ld a,d
 260+ 97B4 AE           	xor (hl)
 261+ 97B5 77           	ld (hl),a
 262+ 97B6 24           	inc h
 263+ 97B7 7C               ld a,h
 264+ 97B8 E6 07            and 7
 265+ 97BA 20 0A            jr nz,3F
 266+ 97BC 7D               ld a,l
 267+ 97BD C6 20            add a,$20
 268+ 97BF 6F               ld l,a
 269+ 97C0 38 04            jr c,3F
 270+ 97C2 7C               ld a,h
 271+ 97C3 D6 08            sub 8
 272+ 97C5 67               ld h,a
 273+ 97C6 7C           3 ld a,h
 274+ 97C7 FE 58            cp $58
 275+ 97C9 28 02            jr z,4F
 276+ 97CB 10 CB            djnz 1B
 277+ 97CD ED 7B 05 89  4 ld sp,(Stack)
 278+ 97D1 C9           	ret
 279+ 97D2
 280+ 97D2 ED 73 05 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97D6 FD F9        	ld sp,iy
 282+ 97D8 06 08            ld b,8
 283+ 97DA D1           1 pop de
 284+ 97DB 7B           	ld a,e
 285+ 97DC AE           	xor (hl)
 286+ 97DD 77           	ld (hl),a
 287+ 97DE 23           	inc hl
 288+ 97DF 7A           	ld a,d
 289+ 97E0 AE           	xor (hl)
 290+ 97E1 77           	ld (hl),a
 291+ 97E2 2B           	dec hl
 292+ 97E3 24             	inc h
 293+ 97E4 7C               ld a,h
 294+ 97E5 E6 07            and 7
 295+ 97E7 20 0A            jr nz,2F
 296+ 97E9 7D               ld a,l
 297+ 97EA C6 20            add a,$20
 298+ 97EC 6F               ld l,a
 299+ 97ED 38 04            jr c,2F
 300+ 97EF 7C               ld a,h
 301+ 97F0 D6 08            sub 8
 302+ 97F2 67               ld h,a
 303+ 97F3 7C           2 ld a,h
 304+ 97F4 FE 58            cp $58
 305+ 97F6 28 21            jr z,4F
 306+ 97F8 D1               pop de
 307+ 97F9 7A           	ld a,d
 308+ 97FA AE           	xor (hl)
 309+ 97FB 77           	ld (hl),a
 310+ 97FC 23           	inc hl
 311+ 97FD D1               pop de
 312+ 97FE 7B           	ld a,e
 313+ 97FF AE           	xor (hl)
 314+ 9800 77           	ld (hl),a
 315+ 9801 2B           	dec hl
 316+ 9802 24           	inc h
 317+ 9803 7C               ld a,h
 318+ 9804 E6 07            and 7
 319+ 9806 20 0A            jr nz,3F
 320+ 9808 7D               ld a,l
 321+ 9809 C6 20            add a,$20
 322+ 980B 6F               ld l,a
 323+ 980C 38 04            jr c,3F
 324+ 980E 7C               ld a,h
 325+ 980F D6 08            sub 8
 326+ 9811 67               ld h,a
 327+ 9812 7C           3 ld a,h
 328+ 9813 FE 58            cp $58
 329+ 9815 28 02            jr z,4F
 330+ 9817 10 C1            djnz 1B
 331+ 9819 ED 7B 05 89  4 ld sp,(Stack)
 332+ 981D C9           	ret
 333+ 981E
 334+ 981E ED 73 05 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9822 FD F9        	ld sp,iy
 336+ 9824 06 08            ld b,8
 337+ 9826 D1           1 pop de
 338+ 9827 7B           	ld a,e
 339+ 9828 AE           	xor (hl)
 340+ 9829 77           	ld (hl),a
 341+ 982A 24            	inc h
 342+ 982B 7C               ld a,h
 343+ 982C E6 07            and 7
 344+ 982E 20 0A            jr nz,2F
 345+ 9830 7D               ld a,l
 346+ 9831 C6 20            add a,$20
 347+ 9833 6F               ld l,a
 348+ 9834 38 04            jr c,2F
 349+ 9836 7C               ld a,h
 350+ 9837 D6 08            sub 8
 351+ 9839 67               ld h,a
 352+ 983A 7C           2 ld a,h
 353+ 983B FE 58            cp $58
 354+ 983D 28 1C            jr z,4F
 355+ 983F D1               pop de
 356+ 9840 7A           	ld a,d
 357+ 9841 AE           	xor (hl)
 358+ 9842 77           	ld (hl),a
 359+ 9843 24           	inc h
 360+ 9844 7C               ld a,h
 361+ 9845 E6 07            and 7
 362+ 9847 20 0A            jr nz,3F
 363+ 9849 7D               ld a,l
 364+ 984A C6 20            add a,$20
 365+ 984C 6F               ld l,a
 366+ 984D 38 04            jr c,3F
 367+ 984F 7C               ld a,h
 368+ 9850 D6 08            sub 8
 369+ 9852 67               ld h,a
 370+ 9853 7C           3 ld a,h
 371+ 9854 FE 58            cp $58
 372+ 9856 28 03            jr z,4F
 373+ 9858 D1               pop de
 374+ 9859 10 CB            djnz 1B
 375+ 985B ED 7B 05 89  4 ld sp,(Stack)
 376+ 985F C9           	ret
 377+ 9860
 378+ 9860              ; ---------------------------------------------------
 379+ 9860              ;
 380+ 9860              ;   27/02/23
 381+ 9860              ;
 382+ 9860              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9860              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9860              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9860
 386+ 9860 ED 73 05 89  Pinta_Disparo ld (Stack),sp
 387+ 9864 FD F9            ld sp,iy
 388+ 9866 06 03            ld b,3
 389+ 9868 D1           1 pop de
 390+ 9869 7B               ld a,e
 391+ 986A AE               xor (hl)
 392+ 986B 77               ld (hl),a
 393+ 986C 23               inc hl
 394+ 986D 7A               ld a,d
 395+ 986E AE               xor (hl)
 396+ 986F 77               ld (hl),a
 397+ 9870 2B               dec hl
 398+ 9871
 399+ 9871 24               inc h
 400+ 9872 7C               ld a,h
 401+ 9873 E6 07            and 7
 402+ 9875 20 0A            jr nz,2F
 403+ 9877 7D               ld a,l
 404+ 9878 C6 20            add a,$20
 405+ 987A 6F               ld l,a
 406+ 987B 38 04            jr c,2F
 407+ 987D 7C               ld a,h
 408+ 987E D6 08            sub 8
 409+ 9880 67               ld h,a
 410+ 9881 7C           2 ld a,h
 411+ 9882 FE 58            cp $58
 412+ 9884 28 02            jr z,3F
 413+ 9886
 414+ 9886 10 E0            djnz 1B
 415+ 9888 ED 7B 05 89  3 ld sp,(Stack)
 416+ 988C C9               ret
 417+ 988D
# file closed: Rutinas_de_impresion_sprites.asm
1538  988D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 988D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 988D              ;
   3+ 988D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 988D              ;
   5+ 988D              ; *****************************************************************************************************************************************************************************************
   6+ 988D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 988D
   8+ 988D 7C           calcula_tercio ld a,h
   9+ 988E E6 18        	and $18
  10+ 9890 CB 2F        	sra a
  11+ 9892 CB 2F        	sra a
  12+ 9894 CB 2F        	sra a
  13+ 9896 C9           	ret
  14+ 9897
# file closed: calcula_tercio.asm
1539  9897              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9897              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9897              ;
   3+ 9897              ;
   4+ 9897              ;	CLS.
   5+ 9897              ;
   6+ 9897              ;	Limpia la pantalla y define sus atributos.
   7+ 9897              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9897              ;
   9+ 9897              ;	COLORES: 0 ..... NEGRO
  10+ 9897              ;    		 1 ..... AZUL
  11+ 9897              ; 			 2 ..... ROJO
  12+ 9897              ;			 3 ..... MAGENTA
  13+ 9897              ; 			 4 ..... VERDE
  14+ 9897              ; 			 5 ..... CIAN
  15+ 9897              ;			 6 ..... AMARILLO
  16+ 9897              ; 			 7 ..... BLANCO
  17+ 9897              ;
  18+ 9897              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9897              ;
  20+ 9897              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9897
  22+ 9897
  23+ 9897 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 989A 11 01 40     	LD DE,$4001
  25+ 989D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98A0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98A2 ED B0        	LDIR
  28+ 98A4 01 FF 02     	LD BC,767
  29+ 98A7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98A8 ED B0        	LDIR
  31+ 98AA C9           	ret
  32+ 98AB
# file closed: Cls.asm
1540  98AB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98AB              ; ******************************************************************************************************************************************************************************************
   2+ 98AB              ;
   3+ 98AB              ;   20/05/23
   4+ 98AB              ;
   5+ 98AB              ;	Recompone_posicion_inicio
   6+ 98AB              ;
   7+ 98AB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98AB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98AB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98AB              ;	_ a una u otra rutina.
  11+ 98AB
  12+ 98AB              Recompone_posicion_inicio
  13+ 98AB
  14+ 98AB 2A C7 88     	ld hl,(Posicion_inicio)
  15+ 98AE 7D           	ld a,l
  16+ 98AF E6 1F        	and $1f
  17+ 98B1 28 16        	jr z,1F
  18+ 98B3
  19+ 98B3 FE 1F        	cp $1f
  20+ 98B5 28 0D        	jr z,3F
  21+ 98B7
  22+ 98B7 21 F2 88     	ld hl,Ctrl_2
  23+ 98BA CB C6        	set 0,(hl)
  24+ 98BC 2A B9 88     	ld hl,(Puntero_objeto)
  25+ 98BF 22 F5 88     	ld (Repone_puntero_objeto),hl
  26+ 98C2 18 08        	jr 2F
  27+ 98C4
  28+ 98C4 CD 65 9A     3 call Mov_left
  29+ 98C7 18 03        	jr 2F
  30+ 98C9
  31+ 98C9 CD 47 99     1 call Mov_right
  32+ 98CC 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98CF 22 B9 88     	ld (Puntero_objeto),hl
  34+ 98D2 C9           	ret
  35+ 98D3
  36+ 98D3              ; ******************************************************************************************************************************************************************************************
  37+ 98D3              ;
  38+ 98D3              ;   27/05/23
  39+ 98D3              ;
  40+ 98D3              ;	Mov_down
  41+ 98D3              ;
  42+ 98D3              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98D3              ;
  44+ 98D3              ;
  45+ 98D3              Mov_down
  46+ 98D3
  47+ 98D3 CD 35 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98D6              ;																	; _ repone (Puntero_objeto).
  49+ 98D6 21 E1 88     	ld hl,Ctrl_0
  50+ 98D9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98DB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98DB              ; 																	; _ en el caso de que no lo haya.
  53+ 98DB 3A CD 88     	ld a,(Vel_down)
  54+ 98DE 47           	ld b,a
  55+ 98DF 2A B7 88         ld hl,(Posicion_actual)
  56+ 98E2 CD 8D 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98E5 E6 02        	and 2
  58+ 98E7 28 0F        	jr z,1F
  59+ 98E9
  60+ 98E9              ; Nos encontramos en el último tercio de pantalla.
  61+ 98E9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98E9
  63+ 98E9 7C           	ld a,h
  64+ 98EA FE 57        	cp $57
  65+ 98EC 20 0A        	jr nz,1F
  66+ 98EE
  67+ 98EE 7D           	ld a,l
  68+ 98EF C6 20        	add $20
  69+ 98F1 30 05        	jr nc,1F
  70+ 98F3
  71+ 98F3              ; ------------------------------
  72+ 98F3              ;	call Reaparece_arriba
  73+ 98F3 CD F2 9B     	call Reinicio
  74+ 98F6              ; ------------------------------
  75+ 98F6
  76+ 98F6 18 08        	jr 3F
  77+ 98F8 CD 7A 95     1 call NextScan
  78+ 98FB 22 B7 88     	ld (Posicion_actual),hl
  79+ 98FE 10 E2            djnz 2B
  80+ 9900 CD 18 9C     3 call Genera_coordenadas
  81+ 9903 C9           	ret
  82+ 9904
  83+ 9904              ; ******************************************************************************************************************************************************************************************
  84+ 9904              ;
  85+ 9904              ;   27/05/23
  86+ 9904              ;
  87+ 9904              ;	Mov_up
  88+ 9904              ;
  89+ 9904              ; 	Mueve el Sprite hacia arriba.
  90+ 9904              ;
  91+ 9904              ;
  92+ 9904              Mov_up
  93+ 9904
  94+ 9904 CD 35 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9907              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9907 21 E1 88     	ld hl,Ctrl_0
  97+ 990A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 990C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 990C              ; 																		; _ en el caso de que no lo haya.
 100+ 990C 3A CC 88     	ld a,(Vel_up)
 101+ 990F 47           	ld b,a
 102+ 9910 2A B7 88     	ld hl,(Posicion_actual)
 103+ 9913 CD 8D 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9916 A7           	and a
 105+ 9917 20 10        	jr nz,1F
 106+ 9919
 107+ 9919              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9919              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9919
 110+ 9919 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 991A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 991C 20 0B            jr nz,1F
 113+ 991E 7D               ld a,l
 114+ 991F D6 20            sub $20
 115+ 9921 30 06            jr nc,1F
 116+ 9923 25               dec h
 117+ 9924
 118+ 9924              ; -----------------------------
 119+ 9924 CD D3 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9927              ;	call Reinicio
 121+ 9927              ; -----------------------------
 122+ 9927
 123+ 9927 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9929 CD 89 95     1 call PreviousScan
 125+ 992C 22 B7 88     	ld (Posicion_actual),hl
 126+ 992F 10 E2            djnz 3B
 127+ 9931 CD 18 9C     2 call Genera_coordenadas
 128+ 9934 C9           	ret
 129+ 9935
 130+ 9935              ; -----------------------------
 131+ 9935              ;
 132+ 9935              ;	27/5/23
 133+ 9935              ;
 134+ 9935              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9935              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9935              ;
 137+ 9935              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9935              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9935              ;
 140+ 9935              ;	Modifica: A y (Puntero_objeto).
 141+ 9935
 142+ 9935 3A F2 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9938 CB 47        	bit 0,a
 144+ 993A C8           	ret z
 145+ 993B CB 87        	res 0,a
 146+ 993D 32 F2 88     	ld (Ctrl_2),a
 147+ 9940 2A F5 88     	ld hl,(Repone_puntero_objeto)
 148+ 9943 22 B9 88     	ld (Puntero_objeto),hl
 149+ 9946 C9           	ret
 150+ 9947
 151+ 9947              ; ******************************************************************************************************************************************************************************************
 152+ 9947              ;
 153+ 9947              ;	19/10/22
 154+ 9947              ;
 155+ 9947              ;	Mov_right.
 156+ 9947              ;
 157+ 9947              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9947              ;
 159+ 9947
 160+ 9947 21 E1 88     Mov_right ld hl,Ctrl_0
 161+ 994A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 994C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 994C              ; 																	; _ en el caso de que no lo haya.
 164+ 994C 3A E1 88     	ld a,(Ctrl_0)
 165+ 994F CB 77        	bit 6,a
 166+ 9951 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9953
 168+ 9953 CD 81 9B     	call Stop_Amadeus_right
 169+ 9956 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9957 18 4D        	jr 8F
 171+ 9959
 172+ 9959 3A BB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 995C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 995E 20 46        	jr nz,8F
 175+ 9960
 176+ 9960 3A BD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9963 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9964 28 40        	jr z,8F
 179+ 9966
 180+ 9966              ; ---------- ---------- ----------
 181+ 9966              ;
 182+ 9966              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9966
 184+ 9966 3A CB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9969 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 996B 28 11        	jr z,1F
 187+ 996D 38 06        	jr c,6F
 188+ 996F FE 04        	cp 4
 189+ 9971 28 14        	jr z,7F
 190+ 9973 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9975
 192+ 9975              ; ---------- ---------- ----------
 193+ 9975              ;
 194+ 9975              ; Perfiles de velocidad
 195+ 9975              ;
 196+ 9975
 197+ 9975 3A BD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9978 FE FE        	cp $fe
 199+ 997A 20 2A        	jr nz,8F
 200+ 997C 18 10        	jr 3F
 201+ 997E 3A BD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9981 FE FD        	cp $fd
 203+ 9983 20 21        	jr nz,8F
 204+ 9985 18 07        	jr 3F
 205+ 9987 3A BD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 998A FE FB        	cp $fb
 207+ 998C 20 18        	jr nz,8F
 208+ 998E
 209+ 998E              ; ---------- ---------- ----------
 210+ 998E
 211+ 998E              3
 212+ 998E CD C1 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9991              ;	call Reinicio
 214+ 9991
 215+ 9991              ; ---------- ---------- ----------
 216+ 9991              ;
 217+ 9991              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9991
 219+ 9991 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9993 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9994 CD AD 99     	call DESPLZ_DER
 222+ 9997 C1           	pop bc
 223+ 9998 10 F9        	djnz 5B
 224+ 999A 2A B7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 999D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 999E 22 B7 88     	ld (Posicion_actual),hl
 227+ 99A1 CD 18 9C     	call Genera_coordenadas
 228+ 99A4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99A6
 230+ 99A6              ; ---------- ---------- ----------
 231+ 99A6
 232+ 99A6 2A B7 88     8 ld hl,(Posicion_actual)
 233+ 99A9 CD AD 99     	call DESPLZ_DER
 234+ 99AC C9           2 ret
 235+ 99AD
 236+ 99AD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99AD              ;
 238+ 99AD              ;	22/9/22
 239+ 99AD              ;
 240+ 99AD
 241+ 99AD CD BC 99     DESPLZ_DER call Desplaza_derecha
 242+ 99B0 CD 08 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99B3 CD 31 9A         call Ciclo_completo
 244+ 99B6 21 E1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99B9 CB FE        	set 7,(hl)
 246+ 99BB C9           	ret
 247+ 99BC
 248+ 99BC              ; ******************************************************************************************************************************************************************************************
 249+ 99BC              ;	15/02/23
 250+ 99BC              ;
 251+ 99BC
 252+ 99BC 3A CB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99BF 47           	ld b,a
 254+ 99C0 2A C3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99C3 23           1 inc hl
 256+ 99C4 23           	inc hl
 257+ 99C5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99C7 22 C3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99CA CD 0E 8C     	call Extrae_address
 260+ 99CD 22 B9 88     	ld (Puntero_objeto),hl
 261+ 99D0
 262+ 99D0              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99D0
 264+ 99D0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99D0              ; Cuántos movimientos hemos hecho ??
 266+ 99D0              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99D0
 268+ 99D0 2A BF 88     7 ld hl,(Indice_Sprite_der)
 269+ 99D3 EB           	ex de,hl
 270+ 99D4 A7           	and a
 271+ 99D5 ED 52        	sbc hl,de
 272+ 99D7 CB 3D        	srl l
 273+ 99D9 3E 08        6 ld a,8
 274+ 99DB 95           	sub l
 275+ 99DC 30 1E        	jr nc,3F
 276+ 99DE
 277+ 99DE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99DE              ; B="0".
 279+ 99DE
 280+ 99DE 04           4 inc b
 281+ 99DF 3C           	inc a
 282+ 99E0 20 FC        	jr nz,4B
 283+ 99E2 78           	ld a,b
 284+ 99E3 08           	ex af,af
 285+ 99E4 2A BF 88     	ld hl,(Indice_Sprite_der)
 286+ 99E7 23           5 inc hl
 287+ 99E8 23           	inc hl
 288+ 99E9 10 FC        	djnz 5B
 289+ 99EB 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 99EE CD 0E 8C     	call Extrae_address
 291+ 99F1 22 B9 88     	ld (Puntero_objeto),hl
 292+ 99F4
 293+ 99F4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 99F4              ; _(Posicion_actual).
 295+ 99F4
 296+ 99F4 21 B7 88     	ld hl,Posicion_actual
 297+ 99F7 34           	inc (hl)
 298+ 99F8 08               ex af,af
 299+ 99F9 6F           	ld l,a
 300+ 99FA 18 DD        	jr 6B
 301+ 99FC
 302+ 99FC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 99FC
 304+ 99FC 47           3 ld b,a
 305+ 99FD 2A C1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A00 23           2 inc hl
 307+ 9A01 23           	inc hl
 308+ 9A02 10 FC        	djnz 2B
 309+ 9A04 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A07 C9           8 ret
 311+ 9A08
 312+ 9A08              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A08              ;
 314+ 9A08              ;	24/7/22
 315+ 9A08              ;
 316+ 9A08              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A08              ;
 318+ 9A08              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A08              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A08              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A08
 322+ 9A08 3A BD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A0B A7           	and a
 324+ 9A0C 20 1F        	jr nz,1F
 325+ 9A0E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A10 32 BD 88         ld (CTRL_DESPLZ),a
 327+ 9A13
 328+ 9A13 21 B6 88     	ld hl,Columns
 329+ 9A16 34           	inc (hl)
 330+ 9A17 3A C9 88     	ld a,(Cuad_objeto)
 331+ 9A1A E6 01        	and 1
 332+ 9A1C 28 0F        	jr z,1F
 333+ 9A1E 2A B7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A21 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A22 22 B7 88     	ld (Posicion_actual),hl
 336+ 9A25 CD 18 9C     	call Genera_coordenadas
 337+ 9A28 CD 8D 9B     	call Inc_CTRL_DESPLZ
 338+ 9A2B 18 03        	jr 2F
 339+ 9A2D CD 8D 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A30 C9           2 ret
 341+ 9A31
 342+ 9A31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A31              ;
 344+ 9A31              ;	24/7/22
 345+ 9A31              ;
 346+ 9A31              ;	Ciclo_completo.
 347+ 9A31              ;
 348+ 9A31              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A31              ;
 350+ 9A31              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A31              ; 	Decrementamos (Columns).
 352+ 9A31              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A31              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A31
 355+ 9A31
 356+ 9A31 3A BD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A34 FE FF        	cp $ff
 358+ 9A36 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A38 E6 F0        	and $f0
 360+ 9A3A 20 28        	jr nz,3F
 361+ 9A3C
 362+ 9A3C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A3C
 364+ 9A3C 3A BD 88     	ld a,(CTRL_DESPLZ)
 365+ 9A3F 47           	ld b,a
 366+ 9A40 3E F8        	ld a,$f8
 367+ 9A42 80           	add b
 368+ 9A43 32 BD 88     	ld (CTRL_DESPLZ),a
 369+ 9A46 18 1C        	jr 3F
 370+ 9A48 21 B6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A4B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A4C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A4D 32 BD 88     	ld (CTRL_DESPLZ),a
 374+ 9A50 3A C9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A53 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A55 20 0A        	jr nz,2F
 377+ 9A57 2A B7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A5A 23           	inc hl
 379+ 9A5B 22 B7 88     	ld (Posicion_actual),hl
 380+ 9A5E CD 18 9C     	call Genera_coordenadas
 381+ 9A61
 382+ 9A61              ; Inicia el puntero de Sprite.
 383+ 9A61
 384+ 9A61 CD 25 8C     2 call Inicia_puntero_objeto_der
 385+ 9A64 C9           3 ret
 386+ 9A65
 387+ 9A65              ; ******************************************************************************************************************************************************************************************
 388+ 9A65              ;
 389+ 9A65              ;	15/02/23
 390+ 9A65              ;
 391+ 9A65              ;	Mov_left.
 392+ 9A65              ;
 393+ 9A65              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A65              ;
 395+ 9A65              Mov_left
 396+ 9A65
 397+ 9A65 21 E1 88     	ld hl,Ctrl_0
 398+ 9A68 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A6A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A6A              ; 																	; _ en el caso de que no lo haya.
 401+ 9A6A 3A E1 88     	ld a,(Ctrl_0)
 402+ 9A6D CB 77        	bit 6,a
 403+ 9A6F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A71
 405+ 9A71 CD 87 9B     	call Stop_Amadeus_left
 406+ 9A74 C8           	ret z
 407+ 9A75 20 4A        	jr nz,8F
 408+ 9A77
 409+ 9A77 3A BB 88     11 ld a,(Coordenada_X)
 410+ 9A7A A7           	and a
 411+ 9A7B 20 44        	jr nz,8F
 412+ 9A7D
 413+ 9A7D 3A BD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A80 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A81 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A83
 417+ 9A83              ; ---------- ---------- ----------
 418+ 9A83
 419+ 9A83 3A CA 88     	ld a,(Vel_left)
 420+ 9A86 FE 02        	cp 2
 421+ 9A88 28 0F        	jr z,1F
 422+ 9A8A 38 04        	jr c,6F
 423+ 9A8C FE 04        	cp 4
 424+ 9A8E 28 12        	jr z,7F
 425+ 9A90
 426+ 9A90              ; ---------- ---------- ----------
 427+ 9A90
 428+ 9A90 3A BD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9A93 FE F8        	cp $f8
 430+ 9A95 20 2A        	jr nz,8F
 431+ 9A97 18 10        	jr 4F
 432+ 9A99 3A BD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9A9C FE F9        	cp $f9
 434+ 9A9E 20 21        	jr nz,8F
 435+ 9AA0 18 07        	jr 4F
 436+ 9AA2 3A BD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9AA5 FE FB        	cp $fb
 438+ 9AA7 20 18        	jr nz,8F
 439+ 9AA9
 440+ 9AA9              ; ---------- ---------- ----------
 441+ 9AA9
 442+ 9AA9              4
 443+ 9AA9 CD AF 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AAC              ;	call Reinicio
 445+ 9AAC
 446+ 9AAC              ; ---------- ---------- ----------
 447+ 9AAC
 448+ 9AAC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AAE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AAF
 451+ 9AAF              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AAF              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AAF
 454+ 9AAF CD C8 9A     	call DESPLZ_IZQ
 455+ 9AB2 C1           	pop bc
 456+ 9AB3 10 F9        	djnz 5B
 457+ 9AB5 2A B7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9AB8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9AB9 22 B7 88     	ld (Posicion_actual),hl
 460+ 9ABC CD 18 9C     	call Genera_coordenadas
 461+ 9ABF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9AC1
 463+ 9AC1              ; ---------- ---------- ----------
 464+ 9AC1
 465+ 9AC1              ; Movemos, no hay recolocación.
 466+ 9AC1
 467+ 9AC1 2A B7 88     8 ld hl,(Posicion_actual)
 468+ 9AC4 CD C8 9A     	call DESPLZ_IZQ
 469+ 9AC7 C9           2 ret
 470+ 9AC8
 471+ 9AC8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9AC8              ;
 473+ 9AC8              ;	22/9/22
 474+ 9AC8
 475+ 9AC8              DESPLZ_IZQ
 476+ 9AC8
 477+ 9AC8 CD D7 9A     	call Desplaza_izquierda
 478+ 9ACB CD 23 9B         call modifica_parametros_1er_DESPLZ
 479+ 9ACE CD 4B 9B     	call Ciclo_completo_2
 480+ 9AD1 21 E1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AD4 CB BE        	res 7,(hl)
 482+ 9AD6 C9           	ret
 483+ 9AD7
 484+ 9AD7              Desplaza_izquierda
 485+ 9AD7
 486+ 9AD7 3A CA 88     	ld a,(Vel_left)
 487+ 9ADA 47           	ld b,a
 488+ 9ADB 2A C5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9ADE 23           1 inc hl
 490+ 9ADF 23           	inc hl
 491+ 9AE0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AE2 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9AE5 CD 0E 8C     	call Extrae_address
 494+ 9AE8 22 B9 88     	ld (Puntero_objeto),hl
 495+ 9AEB
 496+ 9AEB              ; Modifica (Puntero_DESPLZ_der).
 497+ 9AEB
 498+ 9AEB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9AEB              ; Cuántos movimientos hemos hecho ??
 500+ 9AEB              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9AEB
 502+ 9AEB 2A C1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9AEE EB           	ex de,hl
 504+ 9AEF A7           	and a
 505+ 9AF0 ED 52        	sbc hl,de
 506+ 9AF2 CB 3D        	srl l
 507+ 9AF4 3E 08        6 ld a,8
 508+ 9AF6 95           	sub l
 509+ 9AF7 30 1E        	jr nc,3F
 510+ 9AF9
 511+ 9AF9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9AF9              ; B="0".
 513+ 9AF9
 514+ 9AF9 04           4 inc b
 515+ 9AFA 3C           	inc a
 516+ 9AFB 20 FC        	jr nz,4B
 517+ 9AFD 78           	ld a,b
 518+ 9AFE 08           	ex af,af
 519+ 9AFF 2A C1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B02 23           5 inc hl
 521+ 9B03 23           	inc hl
 522+ 9B04 10 FC        	djnz 5B
 523+ 9B06 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B09 CD 0E 8C     	call Extrae_address
 525+ 9B0C 22 B9 88     	ld (Puntero_objeto),hl
 526+ 9B0F
 527+ 9B0F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B0F              ; _(Posicion_actual).
 529+ 9B0F
 530+ 9B0F 21 B7 88     	ld hl,Posicion_actual
 531+ 9B12 35           	dec (hl)
 532+ 9B13 08           	ex af,af
 533+ 9B14 6F           	ld l,a
 534+ 9B15 18 DD        	jr 6B
 535+ 9B17
 536+ 9B17              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B17
 538+ 9B17 47           3 ld b,a
 539+ 9B18 2A BF 88     	ld hl,(Indice_Sprite_der)
 540+ 9B1B 23           2 inc hl
 541+ 9B1C 23           	inc hl
 542+ 9B1D 10 FC        	djnz 2B
 543+ 9B1F 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B22 C9           8 ret
 545+ 9B23
 546+ 9B23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B23              ;
 548+ 9B23              ;	modifica_parametros_1er_DESPLZ
 549+ 9B23              ;
 550+ 9B23              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B23              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B23              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B23
 554+ 9B23 3A BD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B26 A7           	and a
 556+ 9B27 20 1E        	jr nz,1F
 557+ 9B29 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B2A 32 BD 88         ld (CTRL_DESPLZ),a
 559+ 9B2D 21 B6 88     	ld hl,Columns
 560+ 9B30 34           	inc (hl)
 561+ 9B31 3A C9 88     	ld a,(Cuad_objeto)
 562+ 9B34 E6 01        	and 1
 563+ 9B36 20 0F        	jr nz,1F
 564+ 9B38 2A B7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B3B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B3C 22 B7 88     	ld (Posicion_actual),hl
 567+ 9B3F CD 18 9C     	call Genera_coordenadas
 568+ 9B42 CD 9E 9B     	call Dec_CTRL_DESPLZ
 569+ 9B45 18 03        	jr 2F
 570+ 9B47 CD 9E 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B4A C9           2 ret
 572+ 9B4B
 573+ 9B4B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B4B
 575+ 9B4B 3A BD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B4E FE F7        	cp $f7
 577+ 9B50 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B52 30 2C        	jr nc,3F
 579+ 9B54
 580+ 9B54              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B54
 582+ 9B54 06 00        	ld b,0
 583+ 9B56 04           4 inc b
 584+ 9B57 3C           	inc a
 585+ 9B58 FE F7        	cp $f7
 586+ 9B5A 20 FA        	jr nz,4B
 587+ 9B5C 3E FF        	ld a,$ff
 588+ 9B5E 90           	sub b
 589+ 9B5F 32 BD 88     	ld (CTRL_DESPLZ),a
 590+ 9B62 18 1C        	jr 3F
 591+ 9B64
 592+ 9B64              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B64
 594+ 9B64 21 B6 88     1 ld hl,Columns
 595+ 9B67 35           	dec (hl)
 596+ 9B68 AF           	xor a
 597+ 9B69 32 BD 88     	ld (CTRL_DESPLZ),a
 598+ 9B6C 3A C9 88     	ld a,(Cuad_objeto)
 599+ 9B6F E6 01        	and 1
 600+ 9B71 28 0A        	jr z,2F
 601+ 9B73 2A B7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B76 2B           	dec hl
 603+ 9B77 22 B7 88     	ld (Posicion_actual),hl
 604+ 9B7A CD 18 9C     	call Genera_coordenadas
 605+ 9B7D
 606+ 9B7D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B7D
 608+ 9B7D CD 38 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B80 C9           3 ret
 610+ 9B81
 611+ 9B81              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B81              ;
 613+ 9B81              ;	19/10/22
 614+ 9B81              ;
 615+ 9B81              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B81              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B81
 618+ 9B81 3A BB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B84 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9B86 C9           	ret
 621+ 9B87
 622+ 9B87              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9B87              ;
 624+ 9B87              ;	19/10/22
 625+ 9B87              ;
 626+ 9B87              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9B87              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9B87
 629+ 9B87 3A BB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9B8A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9B8C C9           	ret
 632+ 9B8D
 633+ 9B8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9B8D              ;
 635+ 9B8D              ;	24/7/22
 636+ 9B8D              ;
 637+ 9B8D              ;	Inc_CTRL_DESPLZ
 638+ 9B8D              ;
 639+ 9B8D              ;
 640+ 9B8D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9B8D
 642+ 9B8D 21 BD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9B90 3A CB 88     	ld a,(Vel_right)
 644+ 9B93 A7           	and a
 645+ 9B94 28 06        	jr z,1F
 646+ 9B96 47           	ld b,a
 647+ 9B97 34           3 inc (hl)
 648+ 9B98 10 FD        	djnz 3B
 649+ 9B9A 18 01        	jr 2F
 650+ 9B9C 34           1 inc (hl)
 651+ 9B9D C9           2 ret
 652+ 9B9E
 653+ 9B9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9B9E              ;
 655+ 9B9E              ;	5/2/23
 656+ 9B9E              ;
 657+ 9B9E              ;	Dec_CTRL_DESPLZ
 658+ 9B9E              ;
 659+ 9B9E              ;
 660+ 9B9E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9B9E
 662+ 9B9E 21 BD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BA1 3A CA 88     	ld a,(Vel_left)
 664+ 9BA4 A7           	and a
 665+ 9BA5 28 06        	jr z,1F
 666+ 9BA7 47           	ld b,a
 667+ 9BA8 35           3 dec (hl)
 668+ 9BA9 10 FD        	djnz 3B
 669+ 9BAB 18 01        	jr 2F
 670+ 9BAD 35           1 dec (hl)
 671+ 9BAE C9           2 ret
 672+ 9BAF
 673+ 9BAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BAF
 675+ 9BAF 2A B7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BB2 01 1F 00     	ld bc,31
 677+ 9BB5 A7           	and a
 678+ 9BB6 ED 4A        	adc hl,bc
 679+ 9BB8 22 B7 88     	ld (Posicion_actual),hl
 680+ 9BBB 21 E1 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BBE CB C6        	set 0,(hl)
 682+ 9BC0 C9           	ret
 683+ 9BC1
 684+ 9BC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BC1
 686+ 9BC1 2A B7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BC4 01 1F 00     	ld bc,31
 688+ 9BC7 A7           	and a
 689+ 9BC8 ED 42        	sbc hl,bc
 690+ 9BCA 22 B7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BCD 21 E1 88     	ld hl,Ctrl_0
 692+ 9BD0 CB CE        	set 1,(hl)
 693+ 9BD2 C9           	ret
 694+ 9BD3
 695+ 9BD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BD3
 697+ 9BD3 24           Reaparece_abajo inc h
 698+ 9BD4 01 E0 17     	ld bc,$17e0
 699+ 9BD7 A7           	and a
 700+ 9BD8 ED 4A        	adc hl,bc
 701+ 9BDA 22 B7 88     	ld (Posicion_actual),hl
 702+ 9BDD 21 E1 88     	ld hl,Ctrl_0
 703+ 9BE0 CB D6        	set 2,(hl)
 704+ 9BE2 C9           	ret
 705+ 9BE3
 706+ 9BE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BE3
 708+ 9BE3 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9BE6 A7           	and a
 710+ 9BE7 ED 42        	sbc hl,bc
 711+ 9BE9 22 B7 88     	ld (Posicion_actual),hl
 712+ 9BEC 21 E1 88     	ld hl,Ctrl_0
 713+ 9BEF CB DE        	set 3,(hl)
 714+ 9BF1 C9           	ret
 715+ 9BF2
 716+ 9BF2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9BF2              ;
 718+ 9BF2              ;	15/07/23
 719+ 9BF2
 720+ 9BF2              Reinicio
 721+ 9BF2
 722+ 9BF2              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9BF2
 724+ 9BF2 AF           	xor a
 725+ 9BF3 21 E6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9BF6 CD 14 9C     	call Limpia_contenido_hl
 727+ 9BF9
 728+ 9BF9 21 B7 88     	ld hl,Posicion_actual
 729+ 9BFC CD 14 9C     	call Limpia_contenido_hl
 730+ 9BFF
 731+ 9BFF CD 44 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C02 CD CE 9E     	call Inicia_Puntero_mov
 733+ 9C05
 734+ 9C05 21 E8 88     	ld hl,Incrementa_puntero
 735+ 9C08 06 05        	ld b,5
 736+ 9C0A 77           1 ld (hl),a
 737+ 9C0B 23           	inc hl
 738+ 9C0C 10 FC        	djnz 1B
 739+ 9C0E
 740+ 9C0E 21 F2 88     	ld hl,Ctrl_2
 741+ 9C11 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C13
 743+ 9C13 C9           	ret
 744+ 9C14
 745+ 9C14 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C15 23           	inc hl
 747+ 9C16 77           	ld (hl),a
 748+ 9C17 C9           	ret
 749+ 9C18
 750+ 9C18
# file closed: Direcciones.asm
1541  9C18              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C18              ; ------------------------------------------------------------------------
   2+ 9C18              ;
   3+ 9C18              ;	02/04/23
   4+ 9C18              ;
   5+ 9C18              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C18              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C18              ;
   8+ 9C18              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C18              ;
  10+ 9C18              ;	Modifica: A,BC y DE.
  11+ 9C18
  12+ 9C18 C5           Genera_coordenadas push bc
  13+ 9C19 E5           	push hl
  14+ 9C1A D5           	push de
  15+ 9C1B
  16+ 9C1B 2A B7 88     	ld hl,(Posicion_actual)
  17+ 9C1E
  18+ 9C1E 7D           	ld a,l
  19+ 9C1F E6 1F        	and $1f
  20+ 9C21 32 BB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C24
  22+ 9C24 CD 8D 98     	call calcula_tercio
  23+ 9C27 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C28
  25+ 9C28 1E 00        	ld e,0
  26+ 9C2A 7D           	ld a,l
  27+ 9C2B E6 E0        	and $e0
  28+ 9C2D 28 01        	jr z,1F
  29+ 9C2F 04           	inc b
  30+ 9C30
  31+ 9C30 04           1 inc b
  32+ 9C31 05           	dec b
  33+ 9C32 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C34              ;														; _ , salimos.
  35+ 9C34 1C           3 inc e
  36+ 9C35 D6 20        	sub 32
  37+ 9C37 20 FB        	jr nz,3B
  38+ 9C39 10 F5        	djnz 1B
  39+ 9C3B
  40+ 9C3B 7B           2 ld a,e
  41+ 9C3C 32 BC 88     	ld (Coordenada_y),a
  42+ 9C3F
  43+ 9C3F D1           	pop de
  44+ 9C40 E1           	pop hl
  45+ 9C41 C1           	pop bc
  46+ 9C42
  47+ 9C42 C9           	ret
  48+ 9C43
  49+ 9C43              ; ------------------------------------------------------------------------
  50+ 9C43              ;	28/05/23
  51+ 9C43              ;
  52+ 9C43              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C43              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C43              ;
  55+ 9C43              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C43              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C43              ;
  58+ 9C43              ;		DE="$120d"
  59+ 9C43              ;
  60+ 9C43              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C43              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C43              ;
  63+ 9C43              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C43
  65+ 9C43              ;	Modifica: A,BC y DE.
  66+ 9C43
  67+ 9C43
  68+ 9C43              Genera_coordenadas_disparo
  69+ 9C43
  70+ 9C43              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C43
  72+ 9C43 7D           	ld a,l
  73+ 9C44 E6 1F        	and $1f
  74+ 9C46 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C47 CD 8D 98     	call calcula_tercio
  76+ 9C4A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C4B 1E 00        	ld e,0
  78+ 9C4D 7D           	ld a,l
  79+ 9C4E E6 E0        	and $e0
  80+ 9C50 28 01        	jr z,1F
  81+ 9C52 04           	inc b
  82+ 9C53 1C           1 inc e
  83+ 9C54 D6 20        	sub 32
  84+ 9C56 20 FB        	jr nz,1B
  85+ 9C58 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C5A C9           	ret
  87+ 9C5B
# file closed: Genera_coordenadas.asm
1542  9C5B              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C5B              ; Relojes y temporizaciones.
   2+ 9C5B
   3+ 9C5B              ; ------------------------------------------------------
   4+ 9C5B              ;
   5+ 9C5B              ;	16/7/23
   6+ 9C5B              ;
   7+ 9C5B              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C5B              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C5B              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C5B              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C5B              ;
  12+ 9C5B              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C5B              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C5B
  15+ 9C5B              ; Disparo_entidad db 1
  16+ 9C5B              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C5B              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C5B
  19+ 9C5B              Habilita_disparos
  20+ 9C5B
  21+ 9C5B 7E           	ld a,(hl)
  22+ 9C5C A7           	and a
  23+ 9C5D C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C5E
  25+ 9C5E EB           	ex de,hl
  26+ 9C5F
  27+ 9C5F 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C60 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C61
  30+ 9C61              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C61
  32+ 9C61 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C62 7E           	ld a,(hl)
  34+ 9C63 23           	inc hl
  35+ 9C64 77           	ld (hl),a
  36+ 9C65
  37+ 9C65 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C66 3E 01        	ld a,1
  39+ 9C68 77           	ld (hl),a
  40+ 9C69 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1543  9C6A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C6A
   2+ 9C6A
   3+ 9C6A              ;   07/07/23
   4+ 9C6A              ;
   5+ 9C6A              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C6A              ;
   7+ 9C6A              ;   Codificación:
   8+ 9C6A              ;
   9+ 9C6A              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C6A              ;
  11+ 9C6A              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C6A              ;
  13+ 9C6A              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C6A              ;
  15+ 9C6A              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C6A              ;
  17+ 9C6A              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C6A              ;                               ..... %01000010 Vel_up 4
  19+ 9C6A              ;                                               Vel_down 2
  20+ 9C6A              ;                               ..... $42
  21+ 9C6A              ;
  22+ 9C6A              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C6A              ;
  24+ 9C6A              ;                               ..... %01000010 Vel_left 4
  25+ 9C6A              ;                                               Vel_right 2
  26+ 9C6A              ;                               ..... $42
  27+ 9C6A              ;
  28+ 9C6A              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C6A              ;
  30+ 9C6A              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C6A              ;
  32+ 9C6A              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C6A              ;
  34+ 9C6A              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C6A              ;                                     $53
  36+ 9C6A              ;
  37+ 9C6A              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C6A              ;
  39+ 9C6A              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C6A              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C6A              ;
  42+ 9C6A              ;                       Arriba ..... $81
  43+ 9C6A              ;                       Arriba - izquierda ..... $a1
  44+ 9C6A              ;                       Arriba - derecha ..... $91
  45+ 9C6A              ;
  46+ 9C6A              ;                       Abajo ..... $41
  47+ 9C6A              ;                       Abajo - izquierda ..... $61
  48+ 9C6A              ;                       Abajo - derecha ..... $51
  49+ 9C6A              ;
  50+ 9C6A              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C6A              ;
  52+ 9C6A              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C6A              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C6A              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C6A              ;
  56+ 9C6A              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C6A              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C6A              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C6A              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C6A              ;
  61+ 9C6A              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C6A              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C6A              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C6A              ;
  65+ 9C6A              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C6A              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C6A              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C6A              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C6A
  70+ 9C6A              ; ----- ----- ----- ----- -----
  71+ 9C6A
  72+ 9C6A 96 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C6C 9E 9C            defw F_1
  74+ 9C6E A8 9C            defw F_2
  75+ 9C70 B2 9C            defw Codo_abajo_derecha
  76+ 9C72 E6 9C            defw Derecha_y_subiendo
  77+ 9C74 F0 9C            defw Derecha_y_subiendo_1
  78+ 9C76 FA 9C            defw F_3
  79+ 9C78 04 9D            defw F_4
  80+ 9C7A 0E 9D            defw Derecha_y_bajando
  81+ 9C7C 18 9D            defw Derecha_y_bajando_1
  82+ 9C7E 22 9D            defw Derecha_y_bajando_2
  83+ 9C80 2C 9D            defw Codo_derecha_abajo
  84+ 9C82 5C 9D            defw Codo_abajo_izq.
  85+ 9C84 90 9D            defw Izquierda_y_subiendo
  86+ 9C86 9A 9D            defw Izquierda_y_subiendo_1
  87+ 9C88 A4 9D            defw F_5
  88+ 9C8A AE 9D            defw F_6
  89+ 9C8C B8 9D            defw Izquierda_y_bajando
  90+ 9C8E C2 9D            defw Izquierda_y_bajando_1
  91+ 9C90 CC 9D            defw Izquierda_y_bajando_2
  92+ 9C92 D6 9D            defw Codo_izquierda_abajo
  93+ 9C94 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C96
  95+ 9C96 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C9A 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C9E
  98+ 9C9E 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CA2 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CA6 08 00
 100+ 9CA8 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CAC 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CB0 0F FE
 102+ 9CB2
 103+ 9CB2 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CB6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CBA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CBE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CC2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CC6 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CCA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CCE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CD2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CD6 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CDA 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CDE 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CE2 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CE6
 117+ 9CE6 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9CEA 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9CEE 06 00
 119+ 9CF0
 120+ 9CF0 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9CF4 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CF8 02 00
 122+ 9CFA
 123+ 9CFA 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9CFE 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D02 04 00
 125+ 9D04 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D08 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D0C 08 00
 127+ 9D0E
 128+ 9D0E 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D12 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D16 02 00
 130+ 9D18
 131+ 9D18 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D1C 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D20 06 00
 133+ 9D22
 134+ 9D22 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D26 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D2A 06 00
 136+ 9D2C
 137+ 9D2C              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D2C
 139+ 9D2C 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D30 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D34 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D38 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D3C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D40 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D44 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D48 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D4C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D50 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D54 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D58 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D5C
 152+ 9D5C 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D60 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D64 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D68 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D6C 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D70 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D74 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D78 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D7C 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D80 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D84 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D88 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D8C 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D90
 166+ 9D90 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D94 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D98 06 00
 168+ 9D9A
 169+ 9D9A 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D9E 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DA2 02 00
 171+ 9DA4
 172+ 9DA4 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DA8 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DAC 04 00
 174+ 9DAE 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DB2 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DB6 08 00
 176+ 9DB8
 177+ 9DB8 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DBC 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DC0 02 00
 179+ 9DC2
 180+ 9DC2 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DC6 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DCA 06 00
 182+ 9DCC
 183+ 9DCC 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DD0 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DD4 06 00
 185+ 9DD6
 186+ 9DD6 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DDA 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DDE 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DE2 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DE6 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9DEA 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9DEE 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9DF2 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DF6 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DFA 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9DFE 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E02 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E06
 199+ 9E06              ; ----- ----- ----- ----- -----
 200+ 9E06              ;
 201+ 9E06              ;   27/06/23
 202+ 9E06
 203+ 9E06              Movimiento
 204+ 9E06
 205+ 9E06              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E06
 207+ 9E06              ;    ld hl,(Posicion_actual)
 208+ 9E06
 209+ 9E06 3A F2 88         ld a,(Ctrl_2)
 210+ 9E09 CB 57            bit 2,a
 211+ 9E0B 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E0D
 213+ 9E0D 2A E4 88         ld hl,(Puntero_mov)
 214+ 9E10 7E               ld a,(hl)
 215+ 9E11
 216+ 9E11              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E11
 218+ 9E11              Inicia_desplazamiento.
 219+ 9E11
 220+ 9E11              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E11
 222+ 9E11 CD 05 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E14
 224+ 9E14              ; Iniciamos (Repetimos_mov).
 225+ 9E14
 226+ 9E14 7E               ld a,(hl)
 227+ 9E15 E6 0F            and $0f
 228+ 9E17 32 EA 88         ld (Repetimos_desplazamiento),a
 229+ 9E1A 32 EB 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E1D
 231+ 9E1D              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E1D
 233+ 9E1D 23               inc hl
 234+ 9E1E 7E               ld a,(hl)
 235+ 9E1F 32 ED 88         ld (Cola_de_desplazamiento),a
 236+ 9E22 2B               dec hl
 237+ 9E23
 238+ 9E23 21 F2 88         ld hl,Ctrl_2
 239+ 9E26 CB D6            set 2,(hl)
 240+ 9E28
 241+ 9E28              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E28              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E28
 244+ 9E28              Desplazamiento_iniciado
 245+ 9E28
 246+ 9E28 CD D9 9E         call Aplica_desplazamiento
 247+ 9E2B
 248+ 9E2B 3A F2 88         ld a,(Ctrl_2)
 249+ 9E2E CB 67            bit 4,a
 250+ 9E30 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E31
 252+ 9E31 21 EA 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E34 35               dec (hl)
 254+ 9E35 C0               ret nz
 255+ 9E36
 256+ 9E36              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E36              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E36              ; Analiza (Cola_de_desplazamiento).
 259+ 9E36
 260+ 9E36 3A ED 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E39 A7               and a
 262+ 9E3A CC 2E 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E3D 28 30            jr z,Reinicia_el_movimiento
 264+ 9E3F
 265+ 9E3F FE FF            cp $ff
 266+ 9E41 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E43
 268+ 9E43 FE FE            cp $fe
 269+ 9E45 CC B2 9E         call z,Fijamos_bucle
 270+ 9E48 28 25            jr z,Reinicia_el_movimiento
 271+ 9E4A
 272+ 9E4A FE FD            cp $fd
 273+ 9E4C 20 11            jr nz,1F
 274+ 9E4E
 275+ 9E4E              ; ---
 276+ 9E4E              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E4E
 278+ 9E4E 3A F2 88         ld a,(Ctrl_2)
 279+ 9E51 CB 5F            bit 3,a
 280+ 9E53 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E55
 282+ 9E55              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E55
 284+ 9E55 21 F2 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E58 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E5A
 287+ 9E5A CD C3 9E         call Inicia_Repetimos_movimiento
 288+ 9E5D 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E5F              ; ---
 290+ 9E5F
 291+ 9E5F FE 01        1 cp 1
 292+ 9E61 CA 9C 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E64
 294+ 9E64 3D               dec a
 295+ 9E65 32 ED 88         ld (Cola_de_desplazamiento),a
 296+ 9E68
 297+ 9E68 3A EB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E6B 32 EA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E6E              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E6E C9               ret
 301+ 9E6F
 302+ 9E6F              Reinicia_el_movimiento
 303+ 9E6F
 304+ 9E6F 3A F2 88         ld a,(Ctrl_2)
 305+ 9E72 CB 5F            bit 3,a
 306+ 9E74 28 1B            jr z,2F
 307+ 9E76
 308+ 9E76              ; (Cola_de_desplazamiento)="254".
 309+ 9E76
 310+ 9E76 21 EC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E79 35               dec (hl)
 312+ 9E7A 20 15            jr nz,2F
 313+ 9E7C
 314+ 9E7C              ; Fin de las repeticiones del último movimiento.
 315+ 9E7C
 316+ 9E7C 21 F2 88         ld hl,Ctrl_2
 317+ 9E7F CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E81
 319+ 9E81 2A E4 88         ld hl,(Puntero_mov)
 320+ 9E84 23               inc hl
 321+ 9E85 23               inc hl
 322+ 9E86 23               inc hl
 323+ 9E87 22 E4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9E8A              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9E8A 7E               ld a,(hl)
 326+ 9E8B 32 ED 88         ld (Cola_de_desplazamiento),a
 327+ 9E8E
 328+ 9E8E C3 36 9E         jp Cola
 329+ 9E91
 330+ 9E91 CD CE 9E     2 call Inicia_Puntero_mov
 331+ 9E94
 332+ 9E94 21 F2 88         ld hl,Ctrl_2
 333+ 9E97 CB 96            res 2,(hl)
 334+ 9E99
 335+ 9E99 C3 06 9E         jp Movimiento
 336+ 9E9C
 337+ 9E9C              Siguiente_desplazamiento
 338+ 9E9C
 339+ 9E9C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9E9C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9E9C
 342+ 9E9C 21 F2 88         ld hl,Ctrl_2
 343+ 9E9F CB 96            res 2,(hl)
 344+ 9EA1
 345+ 9EA1 2A E4 88         ld hl,(Puntero_mov)
 346+ 9EA4 23               inc hl
 347+ 9EA5 23               inc hl
 348+ 9EA6 22 E4 88         ld (Puntero_mov),hl
 349+ 9EA9
 350+ 9EA9 7E               ld a,(hl)
 351+ 9EAA A7               and a
 352+ 9EAB CC 2E 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9EAE CA 6F 9E         jp z,Reinicia_el_movimiento
 354+ 9EB1
 355+ 9EB1 C9               ret
 356+ 9EB2
 357+ 9EB2              ; Subrutinas -----------------------------------------
 358+ 9EB2              ; ---------- --------- --------- ---------- ----------
 359+ 9EB2              ;
 360+ 9EB2              ;   24/07/23
 361+ 9EB2              ;
 362+ 9EB2              ;   Fijamos_bucle
 363+ 9EB2              ;
 364+ 9EB2              ;
 365+ 9EB2
 366+ 9EB2              Fijamos_bucle
 367+ 9EB2
 368+ 9EB2 3A E8 88         ld a,(Incrementa_puntero)
 369+ 9EB5 3C               inc a
 370+ 9EB6 32 E9 88         ld (Incrementa_puntero_backup),a
 371+ 9EB9
 372+ 9EB9 CD 2E 9F         call Incrementa_Puntero_indice_mov
 373+ 9EBC 2A E2 88         ld hl,(Puntero_indice_mov)
 374+ 9EBF 22 E6 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9EC2 C9               ret
 376+ 9EC3
 377+ 9EC3              ; ---------- --------- --------- ---------- ----------
 378+ 9EC3              ;
 379+ 9EC3              ;   07/7/23
 380+ 9EC3              ;
 381+ 9EC3              ;   Inicia_Repetimos_movimiento
 382+ 9EC3              ;
 383+ 9EC3              ;
 384+ 9EC3
 385+ 9EC3              Inicia_Repetimos_movimiento
 386+ 9EC3
 387+ 9EC3              ; Iniciamos (Repetimos_movimiento).
 388+ 9EC3
 389+ 9EC3 DD 2A E4 88      ld ix,(Puntero_mov)
 390+ 9EC7 DD 7E 02         ld a,(ix+2)
 391+ 9ECA 32 EC 88         ld (Repetimos_movimiento),a
 392+ 9ECD
 393+ 9ECD C9               ret
 394+ 9ECE
 395+ 9ECE              ; ---------- --------- --------- ---------- ----------
 396+ 9ECE              ;
 397+ 9ECE              ;   26/6/23
 398+ 9ECE              ;
 399+ 9ECE              ;   Inicia_Puntero_mov
 400+ 9ECE              ;
 401+ 9ECE              ;
 402+ 9ECE
 403+ 9ECE 2A E2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9ED1 5E               ld e,(hl)
 405+ 9ED2 23               inc hl
 406+ 9ED3 56               ld d,(hl)
 407+ 9ED4 EB               ex de,hl
 408+ 9ED5 22 E4 88         ld (Puntero_mov),hl
 409+ 9ED8 C9               ret
 410+ 9ED9
 411+ 9ED9              ; ---------- --------- --------- ---------- ----------
 412+ 9ED9              ;
 413+ 9ED9              ;   27/06/23
 414+ 9ED9              ;
 415+ 9ED9              ;   Aplica_movimiento.
 416+ 9ED9
 417+ 9ED9              Aplica_desplazamiento
 418+ 9ED9
 419+ 9ED9              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9ED9
 421+ 9ED9 2A E4 88         ld hl, (Puntero_mov)
 422+ 9EDC
 423+ 9EDC 7E               ld a,(hl)
 424+ 9EDD E6 F0            and $f0
 425+ 9EDF C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EE0
 427+ 9EE0 CB 7E            bit 7,(hl)
 428+ 9EE2 28 03            jr z,1F
 429+ 9EE4 CD 04 99         call Mov_up
 430+ 9EE7 2A E4 88     1 ld hl, (Puntero_mov)
 431+ 9EEA CB 76            bit 6,(hl)
 432+ 9EEC 28 03            jr z,2F
 433+ 9EEE CD D3 98         call Mov_down
 434+ 9EF1 2A E4 88     2 ld hl, (Puntero_mov)
 435+ 9EF4 CB 6E            bit 5,(hl)
 436+ 9EF6 28 03            jr z,3F
 437+ 9EF8 CD 65 9A         call Mov_left
 438+ 9EFB 2A E4 88     3 ld hl, (Puntero_mov)
 439+ 9EFE CB 66            bit 4,(hl)
 440+ 9F00 C8               ret z
 441+ 9F01 CD 47 99         call Mov_right
 442+ 9F04 C9               ret
 443+ 9F05
 444+ 9F05              ; ---------- --------- --------- ---------- ----------
 445+ 9F05              ;
 446+ 9F05              ;   26/06/23
 447+ 9F05              ;
 448+ 9F05              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F05
 450+ 9F05              Ajusta_velocidad_desplazamiento
 451+ 9F05
 452+ 9F05              ; 1er byte de la cadena de movimiento.
 453+ 9F05              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F05
 455+ 9F05 CD 23 9F         call Extrae_nibble_alto
 456+ 9F08
 457+ 9F08 32 CC 88         ld (Vel_up),a
 458+ 9F0B 79               ld a,c
 459+ 9F0C E6 0F            and $0f
 460+ 9F0E 32 CD 88         ld (Vel_down),a
 461+ 9F11
 462+ 9F11              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F11              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F11
 465+ 9F11 23               inc hl
 466+ 9F12 CD 23 9F         call Extrae_nibble_alto
 467+ 9F15
 468+ 9F15 32 CA 88         ld (Vel_left),a
 469+ 9F18 79               ld a,c
 470+ 9F19 E6 0F            and $0f
 471+ 9F1B 32 CB 88         ld (Vel_right),a
 472+ 9F1E
 473+ 9F1E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F1E
 475+ 9F1E 23               inc hl
 476+ 9F1F 22 E4 88         ld (Puntero_mov),hl
 477+ 9F22 C9               ret
 478+ 9F23
 479+ 9F23 06 04        Extrae_nibble_alto ld b,4
 480+ 9F25 7E               ld a,(hl)
 481+ 9F26 4F               ld c,a
 482+ 9F27 E6 F0            and $f0
 483+ 9F29 CB 3F        1 srl a
 484+ 9F2B 10 FC            djnz 1B
 485+ 9F2D C9               ret
 486+ 9F2E
 487+ 9F2E              ; ---------- --------- --------- ---------- ----------
 488+ 9F2E              ;
 489+ 9F2E              ;   5/7/23
 490+ 9F2E              ;
 491+ 9F2E              ;   Incrementa_Puntero_indice_mov
 492+ 9F2E
 493+ 9F2E              Incrementa_Puntero_indice_mov
 494+ 9F2E
 495+ 9F2E 21 E8 88         ld hl,Incrementa_puntero
 496+ 9F31 34               inc (hl)
 497+ 9F32
 498+ 9F32 2A E2 88         ld hl,(Puntero_indice_mov)
 499+ 9F35 01 02 00         ld bc,2
 500+ 9F38 A7               and a
 501+ 9F39 09               add hl,bc
 502+ 9F3A 22 E2 88         ld (Puntero_indice_mov),hl
 503+ 9F3D
 504+ 9F3D 7E               ld a,(hl)
 505+ 9F3E A7               and a
 506+ 9F3F
 507+ 9F3F              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F3F
 509+ 9F3F              ;    jr z,$
 510+ 9F3F
 511+ 9F3F              ;! Reinicia el Patrón de movimiento.
 512+ 9F3F
 513+ 9F3F CC 44 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F42
 515+ 9F42 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F43
 517+ 9F43 C9               ret
 518+ 9F44
 519+ 9F44
 520+ 9F44              ; ---------- --------- --------- ---------- ----------
 521+ 9F44              ;
 522+ 9F44              ;   24/07/23
 523+ 9F44              ;
 524+ 9F44              ;   Inicializa_Puntero_indice_mov
 525+ 9F44
 526+ 9F44              Inicializa_Puntero_indice_mov
 527+ 9F44
 528+ 9F44              ; Existe etiqueta de bucle principal???
 529+ 9F44
 530+ 9F44 2A E6 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F47 24               inc h
 532+ 9F48 25               dec h
 533+ 9F49 28 05            jr z,2F
 534+ 9F4B
 535+ 9F4B 22 E2 88         ld (Puntero_indice_mov),hl
 536+ 9F4E 18 14            jr 3F
 537+ 9F50
 538+ 9F50              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F50
 540+ 9F50 3A E8 88     2 ld a,(Incrementa_puntero)
 541+ 9F53 47               ld b,a
 542+ 9F54
 543+ 9F54 2A E2 88         ld hl,(Puntero_indice_mov)
 544+ 9F57 2B           1 dec hl
 545+ 9F58 2B               dec hl
 546+ 9F59 10 FC            djnz 1B
 547+ 9F5B 22 E2 88         ld (Puntero_indice_mov),hl
 548+ 9F5E
 549+ 9F5E AF               xor a
 550+ 9F5F 32 E8 88         ld (Incrementa_puntero),a
 551+ 9F62 18 06            jr 4F
 552+ 9F64
 553+ 9F64 3A E9 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F67 32 E8 88         ld (Incrementa_puntero),a
 555+ 9F6A C9           4 ret
 556+ 9F6B
 557+ 9F6B
 558+ 9F6B
# file closed: Patrones_de_mov.asm
1544  9F6B              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F6B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F6B              ;
   3+ 9F6B              ;	4/12/23
   4+ 9F6B              ;
   5+ 9F6B              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F6B
   7+ 9F6B              ;	ADC HL,SP	LD (addr),SP
   8+ 9F6B              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F6B              ;	ADD IX,SP	LD SP,nn
  10+ 9F6B              ; 	ADD IY,SP	LD SP,HL
  11+ 9F6B              ;				LD SP,IX
  12+ 9F6B              ;	DEC SP		LD SP,IY
  13+ 9F6B
  14+ 9F6B              ;	EX (SP),HL
  15+ 9F6B              ;	EX (SP),IX
  16+ 9F6B              ;	EX (SP),IY
  17+ 9F6B
  18+ 9F6B              ;	INC SP
  19+ 9F6B
  20+ 9F6B                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 05 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 D5 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 E1 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A F4 88         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 0D 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A E1 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 11 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 0B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A F4 88         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 0D 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A E1 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 11 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 05 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 0B 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 05 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 0B 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 0B 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1545  8015
1546  8015              	SAVESNA "Pruebas.sna", START
1547  8015
1548  8015
1549  8015
1550  8015
# file closed: Banco_de_pruebas.asm
