# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 6F 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD AC A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 7D 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 99 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 98 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 97 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 97 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9A 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD B6 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	10/11/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas).
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 EB 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 0F           Nivel_1 db 15									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01
  17+ 8BE1 01 01 01 01  	db 1,1,1,1,1
  17+ 8BE5 01
  18+ 8BE6 01 01 01 01  	db 1,1,1,1,1
  18+ 8BEA 01
  19+ 8BEB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BEC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 8BF0 01 02
  21+ 8BF2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8BF6 01 02
  22+ 8BF8
# file closed: Niveles.asm
 150  8BF8
 151  8BF8              ; --------------------------------------------------------------------------------
 152  8BF8              ;
 153  8BF8              ; 12/05/24
 154  8BF8              ;
 155  8BF8              ; Parámetros DRAW.
 156  8BF8              ;
 157  8BF8
 158  8BF8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BF8
 160  8BF8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BF9              ;															- Patrón de movimiento.
 162  8BF9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BFB
 165  8BFB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BFC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BFC
 168  8BFC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BFC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BFC              ; Ejemplos.
 171  8BFC
 172  8BFC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BFC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BFC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BFC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BFC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BFC
 178  8BFC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BFD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BFD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BFD
 182  8BFD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BFF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BFF
 185  8BFF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C01
 187  8C01              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C01
 189  8C01 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C03              ;														; _palabras que componen el "movimiento_masticado".
 191  8C03
 192  8C03              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C03
 194  8C03 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C04              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C04              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C04              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C04              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C04
 200  8C04 00           Ctrl_2 db 0
 201  8C05              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C05              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C05              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C05              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C05              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C05              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C05              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C05              ;
 209  8C05              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C05              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C05              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C05              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C05              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C05              ;														BIT 4, ???
 215  8C05              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C05
 217  8C05 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C06              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C06              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C06              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C06              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C06              ;
 223  8C06              ; 														DESCRIPCIÖN:
 224  8C06              ;
 225  8C06              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C06              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C06              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C06              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C06              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C06              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C06              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C06              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C06              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C06              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C06              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C06              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C06              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C06              ;
 239  8C06              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C06              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C06              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C06
 243  8C06              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C06
 245  8C06 00           Filas db 0												; Filas. [DRAW]
 246  8C07 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C08 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C0C
 250  8C0C              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C0C
 252  8C0C 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C0D              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C0D              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C0D
 256  8C0D              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C0D
 258  8C0D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C0D              ;
 260  8C0D              ;	COLORES: 0 ..... NEGRO
 261  8C0D              ;    		 1 ..... AZUL
 262  8C0D              ; 			 2 ..... ROJO
 263  8C0D              ;			 3 ..... MAGENTA
 264  8C0D              ; 			 4 ..... VERDE
 265  8C0D              ; 			 5 ..... CIAN
 266  8C0D              ;			 6 ..... AMARILLO
 267  8C0D              ; 			 7 ..... BLANCO
 268  8C0D
 269  8C0D 00 00        Indice_Sprite_der defw 0
 270  8C0F 00 00        Indice_Sprite_izq defw 0
 271  8C11 00 00        Puntero_DESPLZ_der defw 0
 272  8C13 00 00        Puntero_DESPLZ_izq defw 0
 273  8C15
 274  8C15 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C17 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C18 00           Columnas db 0
 277  8C19 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C1B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C1B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C1C
 281  8C1C              ; variables de control general.
 282  8C1C
 283  8C1C 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C1D
 285  8C1D              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C1D
 287  8C1D              Perfiles_de_velocidad
 288  8C1D
 289  8C1D 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C1E 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C1F 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C20 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C21
 294  8C21              ; Contadores de 16 bits.
 295  8C21
 296  8C21 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C23 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C25 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C27 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C29
 301  8C29              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C29
 303  8C29 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C2B 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C2D 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C2F              ;
 307  8C2F              ;
 308  8C2F 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C30              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C30              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C30 00           Incrementa_puntero_backup db 0
 312  8C31 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C32              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C32 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C33 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C34 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C35              ;
 318  8C35              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C35              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C35              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C35              ;
 322  8C35              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C35              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C35              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C35              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C35              ;
 327  8C35              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C35              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C35              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C35
 331  8C35 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C36
 333  8C36              ;														DESCRIPCIÓN:
 334  8C36              ;
 335  8C36              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C36              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C36              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C36              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C36              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C36              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C36
 342  8C36              ;														BIT 3, Recarga de nueva oleada.
 343  8C36              ;														BIT 4, Recarga de nueva oleada.
 344  8C36              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C36              ;														BIT 6, **** Frame completo.
 346  8C36              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C36
 348  8C36 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C38              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C38              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C38              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C38
 353  8C38              ; Gestión de ENTIDADES y CAJAS.
 354  8C38
 355  8C38 00 00        Puntero_store_caja defw 0
 356  8C3A 00 00        Puntero_restore_caja defw 0
 357  8C3C 00 00        Indice_restore_caja defw 0
 358  8C3E 00 00        Puntero_indice_master defw 0
 359  8C40
 360  8C40 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C41 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C42 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C43
 364  8C43 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C45 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C47              ;														; _ puntero (Indice_entidades).
 367  8C47
 368  8C47              ;---------------------------------------------------------------------------------------------------------------
 369  8C47              ;
 370  8C47              ;	13/10/24
 371  8C47              ;
 372  8C47              ;	Álbumes.
 373  8C47
 374  8C47 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C49              ;														; _variable para almacenar lo posición del puntero_
 376  8C49              ; 														; _de pila, SP.
 377  8C49 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C4B              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C4B
 380  8C4B              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C4B
 382  8C4B 00 00        Album_de_pintado defw 0
 383  8C4D 00 00        Album_de_borrado defw 0
 384  8C4F 00 00        Album_de_pintado_Amadeus defw 0
 385  8C51 00 00        Album_de_borrado_Amadeus defw 0
 386  8C53
 387  8C53 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C55 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C57
 390  8C57 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C59 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C5B
 393  8C5B
 394  8C5B 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C5D
 396  8C5D 00           Num_de_bytes_album_de_disparos db 0
 397  8C5E 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C5F
 399  8C5F 07           Numero_de_disparos_de_entidades db 7
 400  8C60
 401  8C60 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C61 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C62
 404  8C62 00 00        Techo_Scanlines_album defw 0
 405  8C64 00 00        Techo_Scanlines_album_2 defw 0
 406  8C66 00           Switch db 0
 407  8C67 00 00        Techo defw 0
 408  8C69 00 00        Scanlines_album_SP defw 0
 409  8C6B 00 89        India_SP defw Tabla_de_pintado
 410  8C6D 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C6F
 412  8C6F 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C70              ;
 414  8C70              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C70              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C70              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C70              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C70              ;																Habilita el borrado/pintado de sprites.
 419  8C70              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C70              ;																_ a la baja.
 421  8C70              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C70              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C70              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C70              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C70              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C70              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C70
 428  8C70 00           Ctrl_4 db 0
 429  8C71 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C72              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C72              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C72
 433  8C72              ; Gestión de Disparos.
 434  8C72
 435  8C72 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C74 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C76 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C77
 439  8C77              ;
 440  8C77              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C77              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C77              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C77              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C77
 445  8C77
 446  8C77
 447  8C77
 448  8C77
 449  8C77
 450  8C77
 451  8C77 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C79              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C79              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C79
 455  8C79 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C7B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C7B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C7E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C7E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C81              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C81
 462  8C81              ;---------------------------------------------------------------------------------------------------------------
 463  8C81
 464  8C81              ; Relojes y temporizaciones.
 465  8C81
 466  8C81 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C82 05           Clock_explosion_Amadeus db 5
 468  8C83 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C84
 470  8C84 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C86 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C88 00           Numero_rnd_disparos db 0
 473  8C89
 474  8C89 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C8B 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C8C              ;																		; Repite la oleada de entidades.
 477  8C8C A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C8D A0           CLOCK_disparos_de_entidades db $a0
 479  8C8E
 480  8C8E              ;---------------------------------------------------------------------------------------------------------------
 481  8C8E
 482  8C8E              ; Gestión de NIVELES.
 483  8C8E
 484  8C8E 00           Nivel db 0												; Nivel actual del juego.
 485  8C8F 00 00        Puntero_indice_NIVELES defw 0
 486  8C91 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C93              ; 														; _ que definen el NIVEL.
 488  8C93
 489  8C93              ; ---------------------------------------------------------------------------------------------------------------
 490  8C93
 491  8C93              ; Temporizaciones Shield.
 492  8C93
 493  8C93 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C97 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C99 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C9A 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C9B 00           Shield_3 db 0
 498  8C9C
 499  8C9C 07           Lives db 7
 500  8C9D
 501  8C9D              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C9D              ;
 503  8C9D              ;	13/11/24
 504  8C9D
 505  8C9D              START
 506  8C9D
 507  8C9D 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8CA0 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8CA2 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8CA4 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8CA6 F3           	DI
 512  8CA7
 513  8CA7              ; Limpiamos pantalla.
 514  8CA7
 515  8CA7 3E 07        	ld a,%00000111
 516  8CA9 CD 2E 95     	call Cls
 517  8CAC CD 8D 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CAF
 519  8CAF              INICIALIZACION
 520  8CAF
 521  8CAF 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CB1 CD 27 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CB4 CD 0C 8F     	call Extrae_numero_aleatorio_y_avanza
 524  8CB7 6F           	ld l,a
 525  8CB8 26 00        	ld h,0
 526  8CBA 22 89 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CBD
 528  8CBD              ;	Inicia los álbumes de líneas.
 529  8CBD
 530  8CBD CD DF 90     	call Inicia_albumes_de_lineas
 531  8CC0 CD EF 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CC3 CD FC 90     	call Inicia_albumes_de_disparos
 533  8CC6
 534  8CC6              ;	Inicia 1er Nivel.
 535  8CC6
 536  8CC6 CD 89 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CC9 CD 57 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CCC              ;														   _reponiendo entidades eliminadas.
 539  8CCC CD BD 93     	call Prepara_Cajas_de_Entidades
 540  8CCF
 541  8CCF CD 0E 94     	call Inicia_Amadeus
 542  8CD2
 543  8CD2              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 544  8CD2              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 545  8CD2              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 546  8CD2 11 AE 89     	ld de,Amadeus_BOX
 547  8CD5 CD FD 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 548  8CD8 CD 51 94     	call Limpiamos_bandeja_DRAW
 549  8CDB
 550  8CDB              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 551  8CDB
 552  8CDB 06 3C        	ld b,60
 553  8CDD CD CF 9D     2 call Amadeus_a_izquierda
 554  8CE0 10 FB        	djnz 2B
 555  8CE2
 556  8CE2 CD BD 90     	call Genera_datos_de_impresion_Amadeus
 557  8CE5
 558  8CE5              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 559  8CE5
 560  8CE5 CD 18 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 561  8CE8
 562  8CE8 CD 98 91     	call Inicia_Shield
 563  8CEB
 564  8CEB 2A 69 8C     6 ld hl,(Scanlines_album_SP)
 565  8CEE 22 62 8C     	ld (Techo_Scanlines_album),hl
 566  8CF1
 567  8CF1 2A 4D 8C     	ld hl,(Album_de_borrado)
 568  8CF4 22 69 8C     	ld (Scanlines_album_SP),hl
 569  8CF7
 570  8CF7 21 00 89     	ld hl,Tabla_de_pintado
 571  8CFA 22 6B 8C     	ld (India_SP),hl
 572  8CFD
 573  8CFD 21 6F 8C     	ld hl,Ctrl_3
 574  8D00 CB C6        	set 0,(hl) 											; Indica Frame completo.
 575  8D02 CB D6        	set 2,(hl)
 576  8D04 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 577  8D06
 578  8D06 FB           	ei 													; Ha de apuntar a $5c3a.
 579  8D07
 580  8D07 76           	halt
 581  8D08
 582  8D08              ; ------------------------------------
 583  8D08
 584  8D08              Main
 585  8D08              ;
 586  8D08              ; 07/11/24.
 587  8D08
 588  8D08              ; Gestión de disparos.
 589  8D08
 590  8D08 CD E1 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 591  8D0B CD C3 9F     	call Motor_de_disparos_entidades
 592  8D0E CD 58 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 593  8D11
 594  8D11              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 595  8D11              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 596  8D11              ; Este hecho lo indica el bit2 de (Impacto2).
 597  8D11
 598  8D11 CD F9 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 599  8D14
 600  8D14              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 601  8D14
 602  8D14 21 8D 8C     	ld hl,CLOCK_disparos_de_entidades
 603  8D17 35           	dec (hl)
 604  8D18 CC 22 8E     	call z,Autoriza_disparo_de_entidades
 605  8D1B
 606  8D1B 2A 89 8C     	ld hl,(Clock_next_entity)
 607  8D1E ED 4B 78 5C  	ld bc,(FRAMES)
 608  8D22 A7           	and a
 609  8D23 ED 42        	sbc hl,bc
 610  8D25 20 16        	jr nz,1F
 611  8D27
 612  8D27              ; GESTIÓN DE ENTIDADES.
 613  8D27
 614  8D27              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 615  8D27              ; _ (Clock_next_entity) para la siguiente entidad.
 616  8D27
 617  8D27              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 618  8D27              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 619  8D27              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 620  8D27
 621  8D27 21 41 8C     	ld hl,Numero_parcial_de_entidades
 622  8D2A 46           	ld b,(hl)
 623  8D2B 3A 42 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 624  8D2E B8           	cp b
 625  8D2F 28 0C        	jr z,1F
 626  8D31 30 0A        	jr nc,1F
 627  8D33
 628  8D33              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 629  8D33
 630  8D33 3C           	inc a
 631  8D34 32 42 8C     	ld (Entidades_en_curso),a
 632  8D37
 633  8D37              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 634  8D37
 635  8D37 CD 0C 8F     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 636  8D3A CD 28 8F     	call Define_Clock_next_entity
 637  8D3D
 638  8D3D 3A 42 8C     1 ld a,(Entidades_en_curso)
 639  8D40 A7           	and a
 640  8D41 CA CD 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 641  8D44 47           	ld b,a												; No hay entidades que gestionar.
 642  8D45
 643  8D45              ; ( Código que ejecutamos con cada entidad: ).
 644  8D45
 645  8D45              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 646  8D45              ;
 647  8D45              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 648  8D45
 649  8D45 21 00 89     	ld hl,Tabla_de_pintado
 650  8D48 22 6B 8C     	ld (India_SP),hl
 651  8D4B
 652  8D4B 21 6F 8C     	ld hl,Ctrl_3
 653  8D4E CB D6        	set 2,(hl)
 654  8D50 CD B6 8E     	call Change
 655  8D53
 656  8D53 C5           2 push bc 												; Nº de entidades en curso.
 657  8D54
 658  8D54 DD 2A 38 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 659  8D58 CD 69 91     	call Salta_caja_de_entidades_vacia
 660  8D5B
 661  8D5B              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 662  8D5B              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 663  8D5B
 664  8D5B 3A 76 8C     	ld a,(Impacto2)
 665  8D5E CB 5F        	bit 3,a
 666  8D60 C4 EF A1     	call nz,Compara_con_coordenadas_de_disparo
 667  8D63
 668  8D63              ; Existe colisión entre esta entidad y Amadeus ???
 669  8D63
 670  8D63 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 671  8D66 CB 4F        	bit 1,a
 672  8D68 C4 83 92     	call nz,Genera_explosion
 673  8D6B 20 43        	jr nz,Gestiona_siguiente_entidad
 674  8D6D
 675  8D6D DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 676  8D70 A7           	and a
 677  8D71 28 0C        	jr z,3F
 678  8D73
 679  8D73              ; IMPACTO en entidad por colisión con Amadeus.
 680  8D73
 681  8D73              ; 5/7/24
 682  8D73              ; Nota importante:
 683  8D73              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 684  8D73              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 685  8D73              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 686  8D73
 687  8D73 3A B2 89     	ld a,(Impacto_Amadeus)
 688  8D76 A7           	and a
 689  8D77 C4 83 92     	call nz,Genera_explosion
 690  8D7A 20 34        	jr nz,Gestiona_siguiente_entidad
 691  8D7C
 692  8D7C              ; Falsa colisión !!!
 693  8D7C
 694  8D7C 32 FC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 695  8D7F
 696  8D7F              ; -------------------------------------------
 697  8D7F
 698  8D7F CD 6C 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 699  8D82 CD 8E 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 700  8D85 CD 5C 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 701  8D88
 702  8D88 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 703  8D8A DD 2A FD 8B  	ld ix,(Puntero_de_impresion)
 704  8D8E CD 6E 95     	call Genera_datos_de_impresion
 705  8D91 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 706  8D93
 707  8D93 CD 74 94     	call Decrementa_Contador_de_mov_masticados
 708  8D96
 709  8D96              ; -------------------------------------------
 710  8D96
 711  8D96              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 712  8D96
 713  8D96 2A FD 8B     	ld hl,(Puntero_de_impresion)
 714  8D99 CD 42 95     	call Genera_coordenadas
 715  8D9C
 716  8D9C ED 4B F9 8B  	ld bc,(Coordenada_X)
 717  8DA0
 718  8DA0 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 719  8DA3 DD 70 02     	ld (ix+2),b
 720  8DA6
 721  8DA6              ; TODO: Generamos disparo ???
 722  8DA6
 723  8DA6 3A 61 8C     	ld a,(Permiso_de_disparo_Entidades)
 724  8DA9 A7           	and a
 725  8DAA C4 37 8E     	call nz,Entidad_genera_disparo_si_procede
 726  8DAD
 727  8DAD CD 73 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 728  8DB0
 729  8DB0              Gestiona_siguiente_entidad
 730  8DB0
 731  8DB0 CD 78 91     	call Incrementa_punteros_de_cajas
 732  8DB3
 733  8DB3 C1           	pop bc
 734  8DB4 10 9D        	djnz 2B
 735  8DB6
 736  8DB6              ; Hemos gestionado todas las entidades.
 737  8DB6              ; ----- ----- -----
 738  8DB6
 739  8DB6 CD 80 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 740  8DB9 CD 97 8F     	call Ordena_tabla_de_impresion
 741  8DBC CD 18 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 742  8DBF
 743  8DBF CD 3D 8F     	call Borra_diferencia
 744  8DC2
 745  8DC2 3A 6F 8C     	ld a,(Ctrl_3)
 746  8DC5 CB 5F        	bit 3,a
 747  8DC7 20 04        	jr nz,Gestion_de_Amadeus
 748  8DC9
 749  8DC9 EB           	ex de,hl
 750  8DCA 71           	ld (hl),c
 751  8DCB 2C           	inc l
 752  8DCC 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 753  8DCD
 754  8DCD              ;! GESTIONA AMADEUS !!!!!!!!!!
 755  8DCD
 756  8DCD              Gestion_de_Amadeus
 757  8DCD
 758  8DCD 21 6F 8C     	ld hl,Ctrl_3
 759  8DD0 CB 76        	bit 6,(hl)
 760  8DD2 28 13        	jr z,Amadeus_vivo
 761  8DD4
 762  8DD4              ; Amadeus ha sido destruido.
 763  8DD4              ; Decrementa (Temp_new_live).
 764  8DD4
 765  8DD4 21 83 8C     	ld hl,Temp_new_live
 766  8DD7 35           	dec (hl)
 767  8DD8 20 26        	jr nz,End_frame
 768  8DDA
 769  8DDA              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 770  8DDA
 771  8DDA 21 9C 8C     	ld hl,Lives
 772  8DDD 35           	dec (hl)
 773  8DDE
 774  8DDE              ;! Fin del juego
 775  8DDE
 776  8DDE F3           	di
 777  8DDF 28 FE        	jr z,$
 778  8DE1 FB           	ei
 779  8DE2
 780  8DE2              ; Nueva nave.
 781  8DE2
 782  8DE2 CD 54 8E     	call Reinicia_Amadeus
 783  8DE5 18 19        	jr End_frame
 784  8DE7
 785  8DE7              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 786  8DE7
 787  8DE7              Amadeus_vivo
 788  8DE7
 789  8DE7 3A B2 89     	ld a,(Impacto_Amadeus)
 790  8DEA A7           	and a
 791  8DEB C4 F2 92     	call nz, Genera_explosion_Amadeus
 792  8DEE 20 10        	jr nz, End_frame
 793  8DF0
 794  8DF0 CD 60 92     	call Teclado
 795  8DF3 21 6F 8C     	ld hl,Ctrl_3
 796  8DF6
 797  8DF6 CB 6E        	bit 5,(hl)
 798  8DF8 28 06        	jr z,End_frame
 799  8DFA
 800  8DFA              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 801  8DFA
 802  8DFA CD D1 8E     	call Change_Amadeus
 803  8DFD CD BD 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 804  8E00
 805  8E00              End_frame
 806  8E00
 807  8E00              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 808  8E00              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 809  8E00
 810  8E00 CD 1A A1     	call Genera_datos_de_impresion_disparos_Entidades
 811  8E03 CD DE A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 812  8E06 CD 34 A2     	call Calcula_bytes_pintado_disparos
 813  8E09 CD 41 A2     	call Limpia_album_de_pintado_disparos_entidades
 814  8E0C
 815  8E0C              ; ------------ ------------- --------------
 816  8E0C
 817  8E0C 2A 4D 8C     	ld hl,(Album_de_borrado)
 818  8E0F 22 69 8C     	ld (Scanlines_album_SP),hl
 819  8E12
 820  8E12 21 6F 8C     	ld hl,Ctrl_3
 821  8E15 CB C6        	set 0,(hl) 											; Indica Frame completo.
 822  8E17 CB 9E        	res 3,(hl)
 823  8E19 CB A6        	res 4,(hl)
 824  8E1B
 825  8E1B AF           	xor a
 826  8E1C D3 FE        	out ($fe),a
 827  8E1E
 828  8E1E 76           	halt
 829  8E1F
 830  8E1F              ; ----------------------------------------
 831  8E1F
 832  8E1F              ;	ld a,(Ctrl_1) 										; Existe Loop?
 833  8E1F              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 834  8E1F CA 08 8D     	jp z,Main
 835  8E22
 836  8E22              ;------------------------------------------
 837  8E22              ;
 838  8E22              ;	07/11/24
 839  8E22
 840  8E22              Autoriza_disparo_de_entidades
 841  8E22
 842  8E22 3E 01        	ld a,1
 843  8E24 32 61 8C     	ld (Permiso_de_disparo_Entidades),a
 844  8E27
 845  8E27 3A 8C 8C     	ld a,(Repone_CLOCK_disparos)
 846  8E2A FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 847  8E2C 38 02        	jr c,1F
 848  8E2E
 849  8E2E              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 850  8E2E              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 851  8E2E              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 852  8E2E
 853  8E2E D6 03        	sub 3
 854  8E30
 855  8E30 32 8C 8C     1 ld (Repone_CLOCK_disparos),a
 856  8E33 32 8D 8C     	ld (CLOCK_disparos_de_entidades),a
 857  8E36
 858  8E36 C9           	ret
 859  8E37
 860  8E37              ;------------------------------------------
 861  8E37              ;
 862  8E37              ;	14/09/24
 863  8E37              ;
 864  8E37              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 865  8E37
 866  8E37              Entidad_genera_disparo_si_procede
 867  8E37
 868  8E37 2A 86 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 869  8E3A CB 06        	rlc (hl)
 870  8E3C
 871  8E3C DC 6A A1     	call c,Genera_disparo_de_entidad_maldosa
 872  8E3F
 873  8E3F C9           	ret
 874  8E40
 875  8E40              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 876  8E40              ;
 877  8E40              ;	30/09/24
 878  8E40
 879  8E40              Actuaiza_sp_de_disparos_de_entidades
 880  8E40
 881  8E40 2A 86 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 882  8E43 23           	inc hl
 883  8E44 22 86 8C     	ld (Puntero_num_aleatorios_disparos),hl
 884  8E47
 885  8E47 11 FD 88     	ld de,Numeros_aleatorios+7
 886  8E4A 7B           	ld a,e
 887  8E4B 95           	sub l
 888  8E4C C0           	ret nz
 889  8E4D
 890  8E4D 21 F6 88     1 ld hl,Numeros_aleatorios
 891  8E50 22 86 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 892  8E53 C9           	ret
 893  8E54
 894  8E54              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 895  8E54              ;
 896  8E54              ;	24/07/24
 897  8E54
 898  8E54              Reinicia_Amadeus
 899  8E54
 900  8E54              ;	Reinicia posición y estado.
 901  8E54
 902  8E54 21 CF 50     	ld hl,$50cf
 903  8E57 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 904  8E5A 21 CC DC     	ld hl,$dccc
 905  8E5D 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 906  8E60 21 3D 00     	ld hl,$003d
 907  8E63 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 908  8E66
 909  8E66              ;	limpiamos el álbum de borrado.
 910  8E66
 911  8E66 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
 912  8E69
 913  8E69 AF           	xor a
 914  8E6A 77           	ld (hl),a
 915  8E6B
 916  8E6B E5           	push hl
 917  8E6C D1           	pop de
 918  8E6D 13           	inc de
 919  8E6E
 920  8E6E 01 23 00     	ld bc,35
 921  8E71 ED B0        	ldir
 922  8E73
 923  8E73 CD BD 90     	call Genera_datos_de_impresion_Amadeus
 924  8E76
 925  8E76              ;	Reinicia temporizaciones.
 926  8E76
 927  8E76 CD 98 91     	call Inicia_Shield
 928  8E79
 929  8E79 3E 5A        	ld a,90
 930  8E7B 32 99 8C     	ld (Shield),a
 931  8E7E
 932  8E7E 3E 64        	ld a,100
 933  8E80 32 83 8C     	ld (Temp_new_live),a
 934  8E83
 935  8E83              ; 	Restauramos el FLAG: Amadeus vivo.
 936  8E83
 937  8E83 21 6F 8C     	ld hl,Ctrl_3
 938  8E86 CB B6        	res 6,(hl)
 939  8E88
 940  8E88              ;	Fuerza la impresión de la nave en el siguiente frame.
 941  8E88
 942  8E88 21 6F 8C      	ld hl,Ctrl_3
 943  8E8B CB EE        	set 5,(hl)
 944  8E8D
 945  8E8D C9           	ret
 946  8E8E
 947  8E8E              ; --------------------------------------------------------------------------------------------------------------
 948  8E8E              ;
 949  8E8E              ;	23/11/24
 950  8E8E
 951  8E8E              Ajusta_velocidad_entidad
 952  8E8E
 953  8E8E DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 954  8E91 A7           	and a
 955  8E92 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 956  8E93              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 957  8E93              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 958  8E93
 959  8E93
 960  8E93              ; Incrementa (Contador_de_vueltas)x2.
 961  8E93              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 962  8E93
 963  8E93              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 964  8E93              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 965  8E93              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 966  8E93              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 967  8E93              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 968  8E93
 969  8E93
 970  8E93 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 971  8E95 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 972  8E98 E6 10        	and $10
 973  8E9A C8           	ret z
 974  8E9B
 975  8E9B              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 976  8E9B
 977  8E9B DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 978  8E9E CB 2F        	sra a
 979  8EA0 CB 2F        	sra a
 980  8EA2 DD 77 0B     	ld (ix+11),a
 981  8EA5
 982  8EA5 DD 6E 07     	ld l,(ix+7)
 983  8EA8 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 984  8EAB
 985  8EAB              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 986  8EAB 23           	inc hl
 987  8EAC 23           	inc hl
 988  8EAD 23           	inc hl
 989  8EAE 23           	inc hl
 990  8EAF              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 991  8EAF
 992  8EAF DD 75 07     	ld (ix+7),l
 993  8EB2 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
 994  8EB5
 995  8EB5 C9           	ret
 996  8EB6
 997  8EB6              ; --------------------------------------------------------------------------------------------------------------
 998  8EB6              ;
 999  8EB6              ;	25/08/24
1000  8EB6
1001  8EB6              Change
1002  8EB6
1003  8EB6 3A 66 8C     	ld a,(Switch)
1004  8EB9 EE 01        	xor 1
1005  8EBB 32 66 8C     	ld (Switch),a
1006  8EBE 2A 4B 8C     	ld hl,(Album_de_pintado)
1007  8EC1 ED 5B 4D 8C  	ld de,(Album_de_borrado)
1008  8EC5 EB           	ex de,hl
1009  8EC6 22 4B 8C     	ld (Album_de_pintado),hl
1010  8EC9 22 69 8C     	ld (Scanlines_album_SP),hl
1011  8ECC ED 53 4D 8C  	ld (Album_de_borrado),de
1012  8ED0 C9           	ret
1013  8ED1
1014  8ED1              Change_Amadeus
1015  8ED1
1016  8ED1 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1017  8ED4 ED 5B 51 8C  	ld de,(Album_de_borrado_Amadeus)
1018  8ED8 EB           	ex de,hl
1019  8ED9 22 4F 8C     	ld (Album_de_pintado_Amadeus),hl
1020  8EDC ED 53 51 8C  	ld (Album_de_borrado_Amadeus),de
1021  8EE0 C9           	ret
1022  8EE1
1023  8EE1              Change_Disparos
1024  8EE1
1025  8EE1              ; Álbumes de Amadeus.
1026  8EE1
1027  8EE1 2A 53 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1028  8EE4 ED 5B 55 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1029  8EE8 EB           	ex de,hl
1030  8EE9 22 53 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1031  8EEC ED 53 55 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1032  8EF0 CD 29 A2     	call Limpia_album_de_pintado_disparos_Amadeus
1033  8EF3
1034  8EF3              ; Álbumes de entidades.
1035  8EF3
1036  8EF3 2A 57 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1037  8EF6 ED 5B 59 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1038  8EFA EB           	ex de,hl
1039  8EFB 22 57 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1040  8EFE ED 53 59 8C  	ld (Album_de_borrado_disparos_Entidades),de
1041  8F02 22 5B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1042  8F05
1043  8F05 3A 5D 8C     	ld a,(Num_de_bytes_album_de_disparos)
1044  8F08 32 5E 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1045  8F0B
1046  8F0B C9           	ret
1047  8F0C
1048  8F0C              ; ------------------------------------
1049  8F0C              ;
1050  8F0C              ; 1/05/24
1051  8F0C
1052  8F0C              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1053  8F0C              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1054  8F0C
1055  8F0C              ;	DESTRUYE: HL,DE,A
1056  8F0C              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1057  8F0C
1058  8F0C              ;	Variables implicadas: (RND_SP).
1059  8F0C
1060  8F0C              Extrae_numero_aleatorio_y_avanza
1061  8F0C
1062  8F0C 21 00 89     	ld hl,Tabla_de_pintado
1063  8F0F EB           	ex de,hl
1064  8F10 2A 84 8C     	ld hl,(RND_SP)
1065  8F13 EB           	ex de,hl
1066  8F14 A7           	and a
1067  8F15 ED 52        	sbc hl,de
1068  8F17
1069  8F17 2A 84 8C     	ld hl,(RND_SP)
1070  8F1A 20 06        	jr nz,1F
1071  8F1C
1072  8F1C              ; Sitúa HL al principio de la tabla de nº aleatorios.
1073  8F1C
1074  8F1C 21 F6 88     	ld hl,Numeros_aleatorios
1075  8F1F 22 84 8C     	ld (RND_SP),HL
1076  8F22
1077  8F22              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1078  8F22
1079  8F22 7E           1 ld a,(hl)
1080  8F23 23           	inc hl
1081  8F24 22 84 8C     	ld (RND_SP),hl
1082  8F27 C9           	ret
1083  8F28
1084  8F28              ; ------------------------------------
1085  8F28              ;
1086  8F28              ; 1/05/24
1087  8F28
1088  8F28              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1089  8F28              ; (1 a 4 segundos).
1090  8F28              ; Actualizamos (Clock_next_entity) con A.
1091  8F28
1092  8F28              ;	DESTRUYE: A y B.
1093  8F28              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1094  8F28              ;			 Actualiza (Clock_next_entity) con A.
1095  8F28
1096  8F28              ;	Variables implicadas: (Clock_next_entity).
1097  8F28
1098  8F28              ; Notas:
1099  8F28
1100  8F28              ; 	$32 1 seg.
1101  8F28              ; 	$64 2 seg.
1102  8F28              ; 	$96 3 seg.
1103  8F28              ; 	$c8 4 seg.
1104  8F28              ; 	$fa 5 seg.
1105  8F28
1106  8F28              ; $ffff 1310,7 seg, 22 minutos.
1107  8F28
1108  8F28              ;	$0100  5 seg. aproximadamente.
1109  8F28              ;	$0200 10 seg. aproximadamente.
1110  8F28              ;	$0300 15 seg. aproximadamente.
1111  8F28              ;	$0400 20 seg. aproximadamente.
1112  8F28              ;	$0500 25 seg. aproximadamente.
1113  8F28              ;	$0600 30 seg. aproximadamente.
1114  8F28
1115  8F28              Define_Clock_next_entity
1116  8F28
1117  8F28 FE 34        	cp $34
1118  8F2A 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1119  8F2C
1120  8F2C              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1121  8F2C
1122  8F2C 4F           3 ld c,a
1123  8F2D 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1124  8F2F 2A 78 5C     	ld hl,(FRAMES)
1125  8F32 A7           	and a
1126  8F33 ED 4A        	adc hl,bc
1127  8F35 22 89 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1128  8F38 C9           	ret
1129  8F39
1130  8F39 3E 34        1 ld a,$34
1131  8F3B 18 EF        	jr 3B
1132  8F3D
1133  8F3D              ; ------------------------------------
1134  8F3D              ;
1135  8F3D              ; 18/03/24
1136  8F3D
1137  8F3D              Borra_diferencia
1138  8F3D
1139  8F3D ED 4B 69 8C  	ld bc,(Scanlines_album_SP)
1140  8F41
1141  8F41 3A 66 8C     	ld a,(Switch)
1142  8F44 A7           	and a
1143  8F45 28 08        	jr z,2F
1144  8F47
1145  8F47 2A 64 8C     	ld hl,(Techo_Scanlines_album_2)
1146  8F4A 11 64 8C     	ld de,Techo_Scanlines_album_2
1147  8F4D 18 06        	jr 3F
1148  8F4F
1149  8F4F 2A 62 8C     2 ld hl,(Techo_Scanlines_album)
1150  8F52 11 62 8C     	ld de,Techo_Scanlines_album
1151  8F55
1152  8F55              ; Diferencia.
1153  8F55
1154  8F55 ED 42        3 sbc hl,bc
1155  8F57
1156  8F57 C8           	ret z
1157  8F58 D8           	ret c
1158  8F59
1159  8F59              ; Nuevo techo, (más bajo que el anterior).
1160  8F59              ; Fijamos nuevo techo y borramos bytes sobrantes.
1161  8F59
1162  8F59 EB           	ex de,hl
1163  8F5A
1164  8F5A 71           	ld (hl),c
1165  8F5B 2C           	inc l
1166  8F5C 70           	ld (hl),b
1167  8F5D
1168  8F5D AF           	xor a
1169  8F5E 43           	ld b,e
1170  8F5F
1171  8F5F 2A 69 8C     	ld hl,(Scanlines_album_SP)
1172  8F62
1173  8F62 77           1 ld (hl),a
1174  8F63 23           	inc hl
1175  8F64 10 FC        	djnz 1B
1176  8F66
1177  8F66              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1178  8F66
1179  8F66 21 6F 8C     	ld hl,Ctrl_3
1180  8F69 CB DE        	set 3,(hl)
1181  8F6B
1182  8F6B C9           	ret
1183  8F6C
1184  8F6C              ; --------------------------------------------------------------------------------------------------------------
1185  8F6C              ;
1186  8F6C              ;	23/11/24
1187  8F6C              ;
1188  8F6C              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1189  8F6C
1190  8F6C              Entidad_a_Tabla_de_pintado
1191  8F6C
1192  8F6C              ; Almacena la Coordenada Y de la entidad en curso.
1193  8F6C
1194  8F6C              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1195  8F6C
1196  8F6C DD 7E 02     	ld a,(ix+2)
1197  8F6F 2A 6B 8C     	ld hl,(India_SP)
1198  8F72 77           	ld (hl),a
1199  8F73 2C           	inc l
1200  8F74
1201  8F74              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1202  8F74
1203  8F74 ED 5B 69 8C  	ld de,(Scanlines_album_SP)
1204  8F78
1205  8F78 73           	ld (hl),e
1206  8F79 2C           	inc l
1207  8F7A 72           	ld (hl),d
1208  8F7B 2C           	inc l
1209  8F7C
1210  8F7C 22 6B 8C     	ld (India_SP),hl
1211  8F7F
1212  8F7F C9           	ret
1213  8F80
1214  8F80              ; --------------------------------------------------------------------------------------------------------------
1215  8F80              ;
1216  8F80              ;	27/03/24
1217  8F80              ;
1218  8F80
1219  8F80              Inicializa_India_y_limpia_Tabla_de_impresion
1220  8F80
1221  8F80 2A 6B 8C     	ld hl,(India_SP)
1222  8F83 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1223  8F86
1224  8F86 79           	ld a,c
1225  8F87 95           	sub l
1226  8F88 28 06        	jr z,2F
1227  8F8A 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1228  8F8B              ;														; _ y pasamos a inicializar (India_SP).
1229  8F8B AF           	xor a
1230  8F8C
1231  8F8C 77           1 ld (hl),a
1232  8F8D 2C           	inc l
1233  8F8E 10 FC        	djnz 1B												; Limpia Tabla.
1234  8F90
1235  8F90 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1236  8F93 22 6B 8C     	ld (India_SP),hl
1237  8F96
1238  8F96 C9           	ret
1239  8F97
1240  8F97              ; --------------------------------------------------------------------------------------------------------------
1241  8F97              ;
1242  8F97              ;	31/3/24
1243  8F97
1244  8F97              Ordena_tabla_de_impresion
1245  8F97
1246  8F97              ; 5794 T/states.
1247  8F97              ; 6278 T/states.
1248  8F97              ; 5310 T/states.
1249  8F97
1250  8F97              ; Inicializamos punteros (India_SP) e (India_2_SP).
1251  8F97              ; Inicializamos contador de comparaciones, [C].
1252  8F97              ; Cargamos los registros A y B para efectuar comparación.
1253  8F97
1254  8F97 FD 2E 00     	ld iyl,0
1255  8F9A
1256  8F9A 3A 42 8C     	ld a,(Entidades_en_curso)
1257  8F9D FE 04        	cp 4 	;	4
1258  8F9F D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1259  8FA0
1260  8FA0 3D           	dec a
1261  8FA1 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1262  8FA2 51           	ld d,c 										; Copia de respaldo.
1263  8FA3
1264  8FA3 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1265  8FA4
1266  8FA4 21 03 89     	ld hl,Tabla_de_pintado+3
1267  8FA7 46           	ld b,(hl)
1268  8FA8 22 6D 8C     	ld (India_2_SP),hl
1269  8FAB
1270  8FAB B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1271  8FAC DC D4 8F     	call c, Avanza_India_2_SP
1272  8FAF CC D4 8F     	call z, Avanza_India_2_SP
1273  8FB2
1274  8FB2 FD 2D        	dec iyl
1275  8FB4 28 18        	jr z,2F
1276  8FB6
1277  8FB6
1278  8FB6              ; --------------------------------------------------------------------------------------------------------------
1279  8FB6              ;
1280  8FB6              ;	7/4/24
1281  8FB6
1282  8FB6              Trueque
1283  8FB6
1284  8FB6              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1285  8FB6              ;  			A contiene en nº de fila de (India_SP).
1286  8FB6              ;			HL contiene (India_2_SP).
1287  8FB6
1288  8FB6 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1289  8FB7 E5           	push hl										; Preservo (India_2_SP).
1290  8FB8
1291  8FB8 ED 5B 6B 8C  	ld de,(India_SP)
1292  8FBC EB           	ex de,hl
1293  8FBD 70           	ld (hl),b
1294  8FBE 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1295  8FBF
1296  8FBF CD 00 90     	call Intercambia_1_byte
1297  8FC2 CD 00 90     	call Intercambia_1_byte
1298  8FC5
1299  8FC5
1300  8FC5              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1301  8FC5              ; Recuperamos (India_2_SP) en HL.
1302  8FC5
1303  8FC5 2A 6B 8C     	ld hl,(India_SP)
1304  8FC8 7E           	ld a,(hl)
1305  8FC9
1306  8FC9 E1           	pop hl
1307  8FCA D1           	pop de
1308  8FCB
1309  8FCB              ; --------------------------------------------------------------------------------------------------------------
1310  8FCB
1311  8FCB CD D4 8F     	call Avanza_India_2_SP
1312  8FCE
1313  8FCE 14           2 inc d
1314  8FCF 15           	dec d
1315  8FD0 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1316  8FD1 18 D8        	jr 1B
1317  8FD3
1318  8FD3 C9           	ret
1319  8FD4
1320  8FD4              ; ----- ----- ----- ----- -----
1321  8FD4
1322  8FD4              Avanza_India_2_SP
1323  8FD4
1324  8FD4 0D           	dec c
1325  8FD5 28 0A        	jr z,Avanza_punteros_indios
1326  8FD7
1327  8FD7 FD 2C        	inc iyl
1328  8FD9
1329  8FD9 2C           	inc l
1330  8FDA 2C           	inc l
1331  8FDB 2C           	inc l
1332  8FDC
1333  8FDC 46           	ld b,(hl)
1334  8FDD 22 6D 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1335  8FE0
1336  8FE0 C9           	ret
1337  8FE1
1338  8FE1              ; ----- ----- ----- ----- -----
1339  8FE1
1340  8FE1              Avanza_punteros_indios
1341  8FE1
1342  8FE1 15           	dec d
1343  8FE2 28 15        	jr z,Prepara_salida
1344  8FE4
1345  8FE4 4A           	ld c,d
1346  8FE5
1347  8FE5 2A 6B 8C     	ld hl,(India_SP)
1348  8FE8 2C           	inc l
1349  8FE9 2C           	inc l
1350  8FEA 2C           	inc l
1351  8FEB 7E           	ld a,(hl)
1352  8FEC 22 6B 8C     	ld (India_SP),hl
1353  8FEF
1354  8FEF 2C           	inc l
1355  8FF0 2C           	inc l
1356  8FF1 2C           	inc l
1357  8FF2 46           	ld b,(hl)
1358  8FF3 22 6D 8C     	ld (India_2_SP),hl
1359  8FF6
1360  8FF6 FD 2C        	inc iyl
1361  8FF8
1362  8FF8 C9           	ret
1363  8FF9
1364  8FF9              Prepara_salida
1365  8FF9
1366  8FF9 21 00 89     	ld hl,Tabla_de_pintado
1367  8FFC 22 6B 8C     	ld (India_SP),hl
1368  8FFF C9           	ret
1369  9000
1370  9000
1371  9000 2C           Intercambia_1_byte inc l
1372  9001 1C           	inc e
1373  9002 46           	ld b,(hl)
1374  9003 1A           	ld a,(de)
1375  9004 EB           	ex de,hl
1376  9005 70           	ld (hl),b
1377  9006 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1378  9007 C9           	ret
1379  9008
1380  9008              ; -----------------------------------------------------------------------------------
1381  9008              ;
1382  9008              ;	20/01/24
1383  9008              ;
1384  9008              ;
1385  9008
1386  9008              Construye_movimientos_masticados_entidad
1387  9008
1388  9008 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1389  900B E5           	push hl
1390  900C CD 4F 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1391  900F              ;															; _ el (Contador_de_mov_masticados).
1392  900F CD 34 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1393  9012              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1394  9012 CD 55 9A     	call Recompone_posicion_inicio
1395  9015
1396  9015 CD 85 97     1 call Draw
1397  9018 CD 34 90     	call Guarda_movimiento_masticado
1398  901B
1399  901B CD 02 9E     	call Movimiento
1400  901E
1401  901E 3A 6F 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1402  9021 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1403  9023 28 F0        	jr z,1B
1404  9025
1405  9025              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1406  9025              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1407  9025
1408  9025 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1409  9026 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1410  9029
1411  9029              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1412  9029
1413  9029 CD 66 9F     	call Situa_en_contador_general_de_mov_masticados
1414  902C
1415  902C              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1416  902C              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1417  902C
1418  902C ED 4B 01 8C  	ld bc,(Contador_de_mov_masticados)
1419  9030
1420  9030 71           	ld (hl),c
1421  9031 23           	inc hl
1422  9032 70           	ld (hl),b
1423  9033
1424  9033 C9           	ret
1425  9034
1426  9034              ; -----------------------------------------------------------------------------------
1427  9034              ;
1428  9034              ;	28/12/23
1429  9034              ;
1430  9034              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1431  9034              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1432  9034
1433  9034              Guarda_movimiento_masticado
1434  9034
1435  9034 ED 73 47 8C  	ld (Stack),sp
1436  9038 ED 7B FF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1437  903C
1438  903C DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1439  903E FD E5            push iy 												; Pushea Puntero_objeto.
1440  9040
1441  9040 ED 7B 47 8C      ld sp,(Stack)
1442  9044
1443  9044 2A 01 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1444  9047 23           	inc hl
1445  9048 22 01 8C     	ld (Contador_de_mov_masticados),hl
1446  904B
1447  904B CD 4F 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1448  904E              ;															; _ el (Contador_de_mov_masticados).
1449  904E C9               ret
1450  904F
1451  904F              ; --------------------------------------------------------------------------------------------------------------
1452  904F              ;
1453  904F              ;	12/1/24
1454  904F              ;
1455  904F              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1456  904F
1457  904F              Actualiza_Puntero_de_almacen_de_mov_masticados
1458  904F
1459  904F 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1460  9052 01 04 00     	ld bc,4
1461  9055 A7           	and a
1462  9056 ED 4A        	adc hl,bc
1463  9058 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1464  905B C9           	ret
1465  905C
1466  905C              ; ------------------------------------------
1467  905C              ;
1468  905C              ;	23/11/24
1469  905C              ;
1470  905C              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1471  905C
1472  905C
1473  905C              Obtenemos_puntero_de_impresion
1474  905C
1475  905C DD 6E 07     	ld l,(ix+7)
1476  905F DD 66 08     	ld h,(ix+8)
1477  9062
1478  9062              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1479  9062
1480  9062 ED 73 47 8C  	ld (Stack),sp
1481  9066 F9           	ld sp,hl
1482  9067
1483  9067 AF           	xor a
1484  9068 67           	ld h,a
1485  9069 6C           	ld l,h															; ld hl,"0"
1486  906A
1487  906A D1           	pop de															; (Puntero_objeto) en DE.
1488  906B C1           	pop bc
1489  906C
1490  906C              ; 	Almacena (Puntero_de_impresion) en caja.
1491  906C
1492  906C DD 71 05     	ld (ix+5),c
1493  906F DD 70 06     	ld (ix+6),b
1494  9072
1495  9072 ED 43 FD 8B  	ld (Puntero_de_impresion),bc
1496  9076
1497  9076              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1498  9076
1499  9076 39           	add hl,sp
1500  9077 DD 75 07     	ld (ix+7),l
1501  907A DD 74 08     	ld (ix+8),h
1502  907D
1503  907D C1           	pop bc
1504  907E
1505  907E 79           	ld a,c
1506  907F 80           	add b															; Comprueba si ya no hay datos en el almacén.
1507  9080
1508  9080 ED 7B 47 8C  	ld sp,(Stack)
1509  9084
1510  9084 CC 82 94     	call z,Reinicia_entidad_maliciosa
1511  9087
1512  9087 C9           	ret
1513  9088
1514  9088              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1515  9088              ;
1516  9088              ;	25/11/24
1517  9088
1518  9088              Cargamos_registros_con_explosion
1519  9088
1520  9088 DD 6E 07     	ld l,(ix+7)
1521  908B DD 66 08     	ld h,(ix+8)
1522  908E CD 2E 91     	call Extrae_address
1523  9091 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1524  9092
1525  9092 DD 6E 05     	ld l,(ix+5)
1526  9095 DD 66 06     	ld h,(ix+6)
1527  9098
1528  9098 E5           	push hl
1529  9099 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1530  909B
1531  909B C9           	ret
1532  909C
1533  909C
1534  909C              Cargamos_registros_con_explosion_Amadeus
1535  909C
1536  909C 2A B5 89     	ld hl,(Pamm_Amadeus)
1537  909F CD 2E 91     	call Extrae_address
1538  90A2
1539  90A2 5D           	ld e,l
1540  90A3 54           	ld d,h
1541  90A4
1542  90A4 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1543  90A8
1544  90A8 C9           	ret
1545  90A9
1546  90A9              ; --------------------------------------------------------------------------------------------------------------
1547  90A9              ;
1548  90A9              ;	17/06/24
1549  90A9              ;
1550  90A9              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1551  90A9              ;
1552  90A9              ;	IX contiene el puntero de impresión.
1553  90A9              ;	DE contiene (Puntero_objeto).
1554  90A9
1555  90A9
1556  90A9              Cargamos_registros_con_mov_masticado_Amadeus
1557  90A9
1558  90A9 ED 73 47 8C  	ld (Stack),sp
1559  90AD ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1560  90B1 D1           	pop de 															; DE contiene Puntero_objeto
1561  90B2 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1562  90B4 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1563  90B8 ED 7B 47 8C  	ld sp,(Stack)
1564  90BC C9           	ret
1565  90BD
1566  90BD              ; ---------------------------------------------------------------------------------------------------------------------
1567  90BD              ;
1568  90BD              ;	18/6/24
1569  90BD              ;
1570  90BD              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1571  90BD
1572  90BD              Genera_datos_de_impresion_Amadeus
1573  90BD
1574  90BD 3A B2 89     	ld a,(Impacto_Amadeus)
1575  90C0 A7           	and a
1576  90C1 20 03        	jr nz,1F
1577  90C3
1578  90C3              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1579  90C3              ; _apuntando a la correspondiente explosión.
1580  90C3
1581  90C3 CD A9 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1582  90C6
1583  90C6 DD 7D        1 ld a,ixl
1584  90C8 E6 1F        	and $1f
1585  90CA 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1586  90CD
1587  90CD 2A 69 8C     	ld hl,(Scanlines_album_SP)
1588  90D0 E5           	push hl
1589  90D1
1590  90D1 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1591  90D4 22 69 8C     	ld (Scanlines_album_SP),hl
1592  90D7
1593  90D7 CD 6E 95     	call Genera_datos_de_impresion
1594  90DA
1595  90DA E1           	pop hl
1596  90DB 22 69 8C     	ld (Scanlines_album_SP),hl
1597  90DE
1598  90DE C9           	ret
1599  90DF
1600  90DF              ; ---------------------------------------------------------------------------------------------------------------------
1601  90DF              ;
1602  90DF              ;	13/03/24
1603  90DF              ;
1604  90DF              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1605  90DF
1606  90DF              Inicia_albumes_de_lineas
1607  90DF
1608  90DF 21 00 80     	ld hl,Scanlines_album
1609  90E2 22 4B 8C     	ld (Album_de_pintado),hl
1610  90E5 22 69 8C     	ld (Scanlines_album_SP),hl
1611  90E8
1612  90E8 21 1A 81     	ld hl,Scanlines_album_2
1613  90EB 22 4D 8C     	ld (Album_de_borrado),hl
1614  90EE
1615  90EE C9           	ret
1616  90EF
1617  90EF              Inicia_albumes_de_lineas_Amadeus
1618  90EF
1619  90EF 21 34 82     	ld hl,Amadeus_scanlines_album
1620  90F2 22 4F 8C     	ld (Album_de_pintado_Amadeus),hl
1621  90F5 21 58 82     	ld hl,Amadeus_scanlines_album_2
1622  90F8 22 51 8C     	ld (Album_de_borrado_Amadeus),hl
1623  90FB
1624  90FB C9           	ret
1625  90FC
1626  90FC              Inicia_albumes_de_disparos
1627  90FC
1628  90FC 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1629  90FF 22 53 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1630  9102 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1631  9105 22 55 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1632  9108
1633  9108 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1634  910B 22 57 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1635  910E 22 5B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1636  9111
1637  9111 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1638  9114 22 59 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1639  9117
1640  9117 C9           	ret
1641  9118
1642  9118              ; ---------------------------------------------------------------------------------------------------------------------
1643  9118              ;
1644  9118              ; 8/1/23
1645  9118              ;
1646  9118              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1647  9118              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1648  9118              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1649  9118
1650  9118              ; Destruye HL y DE !!!!!
1651  9118
1652  9118              Inicia_punteros_de_cajas
1653  9118
1654  9118 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1655  911B CD 2E 91         call Extrae_address
1656  911E 22 38 8C         ld (Puntero_store_caja),hl
1657  9121 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1658  9124 22 3C 8C     	ld (Indice_restore_caja),hl
1659  9127 CD 2E 91     	call Extrae_address
1660  912A 22 3A 8C     	ld (Puntero_restore_caja),hl
1661  912D C9               ret
1662  912E
1663  912E              ; *************************************************************************************************************************************************************
1664  912E
1665  912E              ;
1666  912E              ; 20/10/22
1667  912E              ;
1668  912E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1669  912E              ;
1670  912E              ; Destruye el puntero y DE !!!!!
1671  912E
1672  912E 5E           Extrae_address ld e,(hl)
1673  912F 23           	inc hl
1674  9130 56           	ld d,(hl)
1675  9131 2B           	dec hl
1676  9132 EB           	ex de,hl
1677  9133 C9           	ret
1678  9134
1679  9134              ; *************************************************************************************************************************************************************
1680  9134              ;
1681  9134              ;	20/1/24
1682  9134              ;
1683  9134              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1684  9134              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1685  9134              ;
1686  9134              ;   Destruye HL y BC !!!!!,
1687  9134              ;
1688  9134              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1689  9134              ;					"0" ..... Izquierda.
1690  9134
1691  9134              Inicia_Puntero_objeto
1692  9134
1693  9134 3A 17 8C     	ld a,(Cuad_objeto)
1694  9137 E6 01        	and 1
1695  9139 F5           	push af
1696  913A CC 56 91     	call z,Inicia_puntero_objeto_izq
1697  913D F1           	pop af
1698  913E C8           	ret z
1699  913F CD 43 91     	call Inicia_puntero_objeto_der
1700  9142 C9           	ret
1701  9143
1702  9143              ; Arrancamos desde la parte izquierda de la pantalla.
1703  9143              ; Iniciamos (Indice_Sprite_der).
1704  9143
1705  9143 2A 0D 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1706  9146 22 11 8C     	ld (Puntero_DESPLZ_der),hl
1707  9149 CD 2E 91     	call Extrae_address
1708  914C 22 0A 8C     	ld (Puntero_objeto),hl
1709  914F
1710  914F 2A 0F 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1711  9152 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
1712  9155 C9           	ret
1713  9156
1714  9156              ; Arrancamos desde la parte derecha de la pantalla.
1715  9156              ; Iniciamos (Indice_Sprite_izq).
1716  9156
1717  9156 2A 0F 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1718  9159 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
1719  915C CD 2E 91     	call Extrae_address
1720  915F 22 0A 8C     	ld (Puntero_objeto),hl
1721  9162
1722  9162 2A 0D 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1723  9165 22 11 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1724  9168 C9           	ret
1725  9169
1726  9169              ; **************************************************************************************************
1727  9169              ;
1728  9169              ;	27/11/24
1729  9169              ;
1730  9169              ;	INPUT: IX contiene (Puntero_store_caja).
1731  9169              ;
1732  9169              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1733  9169
1734  9169              Salta_caja_de_entidades_vacia
1735  9169
1736  9169 DD 7E 00     	ld a,(ix+0)
1737  916C A7           	and a
1738  916D C0           	ret nz
1739  916E
1740  916E CD 78 91     	call Incrementa_punteros_de_cajas
1741  9171 DD 2A 38 8C  	ld ix,(Puntero_store_caja)
1742  9175 18 F2        	jr Salta_caja_de_entidades_vacia
1743  9177
1744  9177 C9           	ret
1745  9178
1746  9178              ; **************************************************************************************************
1747  9178              ;
1748  9178              ;	08/05/23
1749  9178              ;
1750  9178              ;	Incrementamos los dos punteros de entidades. (+1).
1751  9178
1752  9178              Incrementa_punteros_de_cajas
1753  9178
1754  9178 2A 3A 8C     	ld hl,(Puntero_restore_caja)
1755  917B 22 38 8C     	ld (Puntero_store_caja),hl
1756  917E 2A 3C 8C     	ld hl,(Indice_restore_caja)
1757  9181 23           	inc hl
1758  9182 23           	inc hl
1759  9183 22 3C 8C     	ld (Indice_restore_caja),hl
1760  9186 CD 2E 91         call Extrae_address
1761  9189 22 3A 8C         ld (Puntero_restore_caja),hl
1762  918C C9               ret
1763  918D
1764  918D              ; -----------------------------------------------------------
1765  918D
1766  918D              ; Teclado.
1767  918D
1768  918D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1769  918F DB FE        	in a,($fe)
1770  9191 E6 01        	and $01
1771  9193 28 02        	jr z,1f
1772  9195 18 F6        	jr Pulsa_ENTER
1773  9197 C9           1 ret
1774  9198
1775  9198              ; **************************************************************************************************
1776  9198              ;
1777  9198              ; Temporización.
1778  9198
1779  9198              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1780  9198              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1781  9198              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1782  9198              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1783  9198
1784  9198              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1785  9198              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1786  9198              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1787  9198
1788  9198              ; A partir de $4f61 no hace falta DELAY.
1789  9198
1790  9198              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1791  9198
1792  9198              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1793  9198              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1794  9198              ;	LD A,B
1795  9198              ;	AND A
1796  9198              ;	JR NZ,wait
1797  9198              ;	RET
1798  9198
1799  9198              ; ---------------------------------------------------------------------------------------------------------------
1800  9198              ;
1801  9198              ;	13/07/24
1802  9198              ;
1803  9198
1804  9198              Inicia_Shield
1805  9198
1806  9198 21 93 8C     	ld hl,Datos_Shield
1807  919B 22 97 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1808  919E
1809  919E 7E           	ld a,(hl)
1810  919F 32 9A 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1811  91A2
1812  91A2 3E 01        	ld a,1
1813  91A4 32 9B 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1814  91A7
1815  91A7 C9           	ret
1816  91A8
1817  91A8              ; ---------- ---------- ---------- ---------- ----------
1818  91A8              ;
1819  91A8              ;	30/11/24
1820  91A8              ;
1821  91A8              ;	Limpia la caja de entidades de una entidad eliminada.
1822  91A8              ;
1823  91A8              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1824  91A8              ;	MODIFY: A,BC,DE y HL.
1825  91A8
1826  91A8              Limpia_caja_de_entidades
1827  91A8
1828  91A8 DD E5        	push ix
1829  91AA E1           	pop hl
1830  91AB AF           	xor a
1831  91AC 77           	ld (hl),a
1832  91AD 5D           	ld e,l
1833  91AE 54           	ld d,h
1834  91AF 1C           	inc e
1835  91B0 01 0B 00     	ld bc,11
1836  91B3 ED B0        	ldir
1837  91B5 C9           	ret
1838  91B6
1839  91B6              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1840  91B6              ;
1841  91B6              ;	4/6/24
1842  91B6              ;
1843  91B6              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1844  91B6              ;
1845  91B6              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1846  91B6              ;
1847  91B6
1848  91B6              Actualiza_pantalla
1849  91B6
1850  91B6 3E 02        	ld a,2
1851  91B8 D3 FE        	out ($fe),a
1852  91BA
1853  91BA 3A 6F 8C     	ld a,(Ctrl_3)
1854  91BD CB 57        	bit 2,a
1855  91BF 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1856  91C1
1857  91C1              Borrando_entidades
1858  91C1
1859  91C1 2A 69 8C     	ld hl,(Scanlines_album_SP)
1860  91C4 CD 2E 91     	call Extrae_address
1861  91C7 24           	inc h
1862  91C8 25           	dec h
1863  91C9 28 05        	jr z,Pintando_entidades
1864  91CB CD 62 96     	call Pinta_Sprites
1865  91CE 18 F1        	jr Borrando_entidades
1866  91D0
1867  91D0              Pintando_entidades
1868  91D0
1869  91D0 2A 6B 8C     	ld hl,(India_SP)
1870  91D3 2C           	inc l
1871  91D4 CD 2E 91     	call Extrae_address
1872  91D7 24           	inc h
1873  91D8 25           	dec h
1874  91D9 28 0E        	jr z,Ejecuta_escudo
1875  91DB 1C           	inc e
1876  91DC 1C           	inc e
1877  91DD ED 53 6B 8C  	ld (India_SP),de
1878  91E1 CD 2E 91     	call Extrae_address
1879  91E4 CD 62 96     	call Pinta_Sprites
1880  91E7 18 E7        	jr Pintando_entidades
1881  91E9
1882  91E9              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1883  91E9
1884  91E9              Ejecuta_escudo
1885  91E9
1886  91E9 3A 99 8C     	ld a,(Shield)
1887  91EC A7           	and a
1888  91ED 20 2F        	jr nz,Aplica_Shield
1889  91EF
1890  91EF              Borrando_Amadeus
1891  91EF
1892  91EF 21 6F 8C     	ld hl,Ctrl_3
1893  91F2 CB 6E        	bit 5,(hl)
1894  91F4 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1895  91F6
1896  91F6 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
1897  91F9 CD 2E 91     	call Extrae_address
1898  91FC 24           	inc h
1899  91FD 25           	dec h
1900  91FE 28 03        	jr z,Pintando_Amadeus
1901  9200 CD 62 96     	call Pinta_Sprites
1902  9203
1903  9203              Pintando_Amadeus
1904  9203
1905  9203 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1906  9206 CD 2E 91     	call Extrae_address
1907  9209 24           	inc h
1908  920A 25           	dec h
1909  920B 28 03        	jr z,1F
1910  920D CD 62 96     	call Pinta_Sprites
1911  9210
1912  9210              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1913  9210
1914  9210 21 6F 8C     1 ld hl,Ctrl_3
1915  9213 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1916  9215 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1917  9217 CB AE        	res 5,(hl)
1918  9219
1919  9219 3E 01        	ld a,1												; Borde azul.
1920  921B D3 FE        	out ($fe),a
1921  921D
1922  921D C9           	ret
1923  921E
1924  921E              Aplica_Shield
1925  921E
1926  921E              ;	Bit 1 "1" (Shield_3) Sólo borra.
1927  921E              ;		  "0"     ""     Borra/Pinta.
1928  921E              ;	Bit 2    ""  RET.	 No borra, no pinta.
1929  921E
1930  921E 21 9B 8C     	ld hl,Shield_3
1931  9221
1932  9221 CB 5E        	bit 3,(hl)
1933  9223 20 DE        	jr nz,Pintando_Amadeus
1934  9225
1935  9225 CB 56        	bit 2,(hl)
1936  9227 20 E7        	jr nz,1B
1937  9229
1938  9229 CB 4E        	bit 1,(hl)
1939  922B C4 32 92     	call nz,Borra_Amadeus_shield
1940  922E
1941  922E 28 BF        	jr z,Borrando_Amadeus
1942  9230 18 DE        	jr 1B
1943  9232
1944  9232              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1945  9232
1946  9232              Borra_Amadeus_shield
1947  9232
1948  9232 3A 6F 8C     	ld a,(Ctrl_3)
1949  9235 CB 6F        	bit 5,a
1950  9237 28 08        	jr z,1F
1951  9239
1952  9239 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
1953  923C CD 2E 91     	call Extrae_address
1954  923F 18 06        	jr 2F
1955  9241
1956  9241 2A 4F 8C     1 ld hl,(Album_de_pintado_Amadeus)
1957  9244 CD 2E 91     	call Extrae_address
1958  9247
1959  9247 CD 62 96     2 call Pinta_Sprites
1960  924A
1961  924A AF           	xor a
1962  924B 3C           	inc a											; Asegura NZ en la salida de la rutina.
1963  924C
1964  924C C9           	ret
1965  924D
1966  924D              Pinta_Amadeus_shield
1967  924D
1968  924D 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1969  9250 CD 2E 91     	call Extrae_address
1970  9253 CD 62 96     	call Pinta_Sprites
1971  9256
1972  9256 AF           	xor a
1973  9257 3C           	inc a											; Asegura NZ en la salida de la rutina.
1974  9258
1975  9258 C9           	ret
1976  9259
1977  9259              Borra_Pinta_Amadeus_shield
1978  9259
1979  9259 CD 32 92     	call Borra_Amadeus_shield
1980  925C CD 4D 92     	call Pinta_Amadeus_shield
1981  925F C9           	ret
1982  9260
1983  9260              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1984  9260              ;
1985  9260              ;	19/6/24
1986  9260              ;
1987  9260
1988  9260              Teclado
1989  9260
1990  9260              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1991  9260
1992  9260 3E F7        	ld a,$f7												; "5" para disparar.
1993  9262 DB FE        	in a,($fe)
1994  9264 E6 10        	and $10
1995  9266
1996  9266 CC FD A2     	call z,Genera_disparo_Amadeus
1997  9269
1998  9269 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1999  926B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2000  926D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2001  926F CC CF 9D         call z,Amadeus_a_izquierda
2002  9272
2003  9272 3E F7        	ld a,$f7
2004  9274 DB FE        	in a,($fe)
2005  9276 E6 01        	and $01
2006  9278 C8           	ret z
2007  9279
2008  9279 3E F7        	ld a,$f7
2009  927B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2010  927D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2011  927F CC E7 9D     	call z,Amadeus_a_derecha
2012  9282
2013  9282 C9           	ret
2014  9283
2015  9283              ; ------------------------------------------------------------------------------------------------------------------------
2016  9283              ;
2017  9283              ;	06/07/24
2018  9283              ;
2019  9283
2020  9283              Genera_explosion
2021  9283
2022  9283 21 81 8C     	ld hl,Clock_explosion
2023  9286 35           	dec (hl)
2024  9287 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2025  9289
2026  9289              Borra_entidad_colisionada
2027  9289
2028  9289 CD 6C 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2029  928C
2030  928C DD E5        	push ix
2031  928E CD 88 90     	call Cargamos_registros_con_explosion
2032  9291 CD 6E 95     	call Genera_datos_de_impresion
2033  9294 DD E1        	pop ix
2034  9296
2035  9296 AF           	xor a
2036  9297 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2037  9298
2038  9298 C9           	ret
2039  9299
2040  9299              Siguiente_frame_explosion
2041  9299
2042  9299 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2043  929B
2044  929B              ; Avanza Frame de explosión.
2045  929B
2046  929B DD 6E 07     	ld l,(ix+7)
2047  929E DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2048  92A1
2049  92A1 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2050  92A4
2051  92A4 79           	ld a,c
2052  92A5 95           	sub l
2053  92A6 20 40        	jr nz,1F
2054  92A8
2055  92A8
2056  92A8              ; Fín de la entidad !!!!!!!!!!!!!
2057  92A8              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2058  92A8
2059  92A8              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2060  92A8              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2061  92A8              ; Entidades_en_curso db 0								; Entidades en pantalla.
2062  92A8
2063  92A8              ; La entidad eliminada, es la última del nivel ?
2064  92A8
2065  92A8 3A 40 8C     	ld a,(Numero_de_entidades)
2066  92AB A7           	and a
2067  92AC 28 2B        	jr z,2F
2068  92AE
2069  92AE              ; Decrementa (Numero_de_entidades)
2070  92AE
2071  92AE 3D           	dec a
2072  92AF 32 40 8C     	ld (Numero_de_entidades),a
2073  92B2
2074  92B2              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2075  92B2              ; IX apunta al 1er .db de la entidad eliminada.
2076  92B2
2077  92B2 2A 3E 8C     	ld hl,(Puntero_indice_master)
2078  92B5 CD 2E 91     	call Extrae_address
2079  92B8
2080  92B8 DD E5        	push ix
2081  92BA D1           	pop de
2082  92BB
2083  92BB 01 0C 00     	ld bc,12
2084  92BE ED B0        	ldir
2085  92C0
2086  92C0              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2087  92C0
2088  92C0 CD 5C 90     	call Obtenemos_puntero_de_impresion
2089  92C3
2090  92C3 DD 6E 05     	ld l,(ix+5)
2091  92C6 2C           	inc l
2092  92C7 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2093  92CA
2094  92CA CD 42 95     	call Genera_coordenadas
2095  92CD
2096  92CD ED 4B F9 8B  	ld bc,(Coordenada_X)
2097  92D1
2098  92D1 DD 71 01     	ld (ix+1),c
2099  92D4 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2100  92D7
2101  92D7 18 B0        	jr Borra_entidad_colisionada
2102  92D9
2103  92D9              ; (Numero_de_entidades) = "0". (Numero_parcial_de_entidades)="0" ???
2104  92D9
2105  92D9 21 41 8C     2 ld hl,Numero_parcial_de_entidades
2106  92DC 35           	dec (hl)
2107  92DD
2108  92DD F3           	di
2109  92DE 28 FE        	jr z,$
2110  92E0 FB           	ei																;! Nivel superado !!!!!!!!!!!!!!!
2111  92E1
2112  92E1              	; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2113  92E1
2114  92E1 23           	inc hl
2115  92E2 35           	dec (hl)
2116  92E3
2117  92E3 CD A8 91     	call Limpia_caja_de_entidades
2118  92E6 18 A1        	jr Borra_entidad_colisionada
2119  92E8
2120  92E8 23           1 inc hl
2121  92E9 23           	inc hl
2122  92EA
2123  92EA DD 75 07     	ld (ix+7),l
2124  92ED DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2125  92F0
2126  92F0 18 97        	jr Borra_entidad_colisionada
2127  92F2
2128  92F2              ; ----- ----- ----- ----- -----
2129  92F2
2130  92F2              Genera_explosion_Amadeus
2131  92F2
2132  92F2 21 82 8C     	ld hl,Clock_explosion_Amadeus
2133  92F5 35           	dec (hl)
2134  92F6 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2135  92F8
2136  92F8              Borra_Amadeus_impactado
2137  92F8
2138  92F8 CD D1 8E     	call Change_Amadeus
2139  92FB CD 9C 90     	call Cargamos_registros_con_explosion_Amadeus
2140  92FE CD BD 90     	call Genera_datos_de_impresion_Amadeus
2141  9301
2142  9301 21 6F 8C     	ld hl,Ctrl_3
2143  9304 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2144  9306
2145  9306 AF           	xor a
2146  9307 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2147  9308
2148  9308 C9           	ret
2149  9309
2150  9309              Siguiente_frame_explosion_Amadeus
2151  9309
2152  9309 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2153  930B
2154  930B              ; Avanza Frame de explosión.
2155  930B
2156  930B 2A B5 89     	ld hl,(Pamm_Amadeus)
2157  930E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2158  9311
2159  9311 79           	ld a,c
2160  9312 95           	sub l
2161  9313 20 0B        	jr nz,1F
2162  9315
2163  9315              ; Fín de Amadeus !!!!!!!!!!!!!
2164  9315              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2165  9315
2166  9315 AF           	xor a
2167  9316 32 B2 89     	ld (Impacto_Amadeus),a
2168  9319 21 6F 8C     	ld hl,Ctrl_3
2169  931C CB F6        	set 6,(hl)
2170  931E
2171  931E 18 D8        	jr Borra_Amadeus_impactado
2172  9320
2173  9320 23           1 inc hl
2174  9321 23           	inc hl
2175  9322 22 B5 89     	ld (Pamm_Amadeus),hl
2176  9325 18 D1        	jr Borra_Amadeus_impactado
2177  9327
2178  9327              ; ---------------------------------------------------------------
2179  9327
2180  9327              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9327              ; ******************************************************************************************************************************************************************************************
   2+ 9327              ;
   3+ 9327              ;   21/04/24
   4+ 9327              ;
   5+ 9327              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9327              ;   (XOR) bit a bit.
   7+ 9327              ;
   8+ 9327              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9327
  10+ 9327              Derivando_RND
  11+ 9327
  12+ 9327 21 F6 88         ld hl,Numeros_aleatorios
  13+ 932A
  14+ 932A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 932C C5               push bc
  16+ 932D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 932D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9330              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9330
  20+ 9330 A7           6 and a                                 ; Carry a "0".
  21+ 9331 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9333 30 02            jr nc,1F
  23+ 9335
  24+ 9335 CB C1            set 0,c
  25+ 9337
  26+ 9337 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9338 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 933A 5F               ld e,a
  29+ 933B
  30+ 933B 7A               ld a,d
  31+ 933C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 933E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9340
  34+ 9340 CB 3F            srl a
  35+ 9342
  36+ 9342 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9343
  38+ 9343 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9344 28 04            jr z,4F
  40+ 9346
  41+ 9346 CB FF            set 7,a
  42+ 9348 18 02            jr 5F
  43+ 934A
  44+ 934A CB BF        4 res 7,a
  45+ 934C
  46+ 934C CB 21        5 sla c
  47+ 934E 10 E0            djnz 6B
  48+ 9350
  49+ 9350 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9351
  51+ 9351 77               ld (hl),a
  52+ 9352 23               inc hl
  53+ 9353 C1               pop bc
  54+ 9354 10 D4            djnz 3B
  55+ 9356
  56+ 9356 C9               ret
  57+ 9357
  58+ 9357
  59+ 9357
# file closed: RND_Derivando.asm
2181  9357              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9357              ;---------------------------------------------------------------------------------------------------------------
   2+ 9357              ;
   3+ 9357              ;   13/11/24
   4+ 9357
   5+ 9357              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9357
   7+ 9357              Genera_movimientos_masticados_del_nivel
   8+ 9357
   9+ 9357              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9357
  11+ 9357              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9357              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9357              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9357
  15+ 9357 2D           	dec l
  16+ 9358 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9359 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 935A 4E           	ld c,(hl)
  19+ 935B
  20+ 935B E5           1 push hl														; Push (Datos_de_nivel).
  21+ 935C C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 935D
  23+ 935D              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 935D
  25+ 935D 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 935E
  27+ 935E CD 9C 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9361
  29+ 9361              ;	Caja Master inicializada ???
  30+ 9361
  31+ 9361 7E           	ld a,(hl)
  32+ 9362 A7           	and a
  33+ 9363 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9365
  35+ 9365              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9365
  37+ 9365 C1           	pop bc
  38+ 9366 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9367 C5           	push bc
  40+ 9368
  41+ 9368 CD 3C 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 936B CD D0 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 936E
  44+ 936E 3A F8 8B     	ld a,(Tipo)
  45+ 9371 CD AC 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9374
  47+ 9374              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9374
  49+ 9374              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9374              ;	ld a,(hl)
  51+ 9374              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9374
  53+ 9374              ;	ld hl,Posicion_inicio
  54+ 9374              ;	ld (hl),a
  55+ 9374
  56+ 9374              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9374              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9374
  59+ 9374 CD 08 90     	call Construye_movimientos_masticados_entidad
  60+ 9377
  61+ 9377 2A 3E 8C     	ld hl,(Puntero_indice_master)
  62+ 937A CD 2E 91     	call Extrae_address
  63+ 937D
  64+ 937D 5D           	ld e,l
  65+ 937E 54           	ld d,h
  66+ 937F
  67+ 937F CD FD 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9382
  69+ 9382              Movimientos_masticados_construidos
  70+ 9382
  71+ 9382 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9383
  73+ 9383 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9384 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9385
  76+ 9385 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9386 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9388
  79+ 9388 C9           	ret
  80+ 9389
  81+ 9389              ;---------------------------------------------------------------------------------------------------------------
  82+ 9389              ;
  83+ 9389              ;   9/11/24
  84+ 9389              ;
  85+ 9389              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9389              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9389              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9389              ;	_ de la 1ª entidad del Nivel.
  89+ 9389              ;
  90+ 9389              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9389
  92+ 9389              ;	MODIFICA: HL,DE y A.
  93+ 9389              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9389
  95+ 9389              Inicializa_1er_Nivel
  96+ 9389
  97+ 9389              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9389
  99+ 9389 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 938C CD 2E 91     	call Extrae_address
 101+ 938F ED 53 8F 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9393
 103+ 9393 7E           	ld a,(hl)
 104+ 9394 32 40 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9397
 106+ 9397 2C           	inc l
 107+ 9398 22 91 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 939B
 109+ 939B C9           	ret
 110+ 939C
 111+ 939C              ; ----------------------
 112+ 939C              ;
 113+ 939C              ;	13/11/24
 114+ 939C              ;
 115+ 939C
 116+ 939C              Situa_en_Caja_Master
 117+ 939C
 118+ 939C CD BB 94         call Calcula_salto_en_BC
 119+ 939F 21 58 89         ld hl,Indice_de_cajas_master
 120+ 93A2 A7               and a
 121+ 93A3 ED 4A            adc hl,bc
 122+ 93A5 22 3E 8C       	ld (Puntero_indice_master),hl
 123+ 93A8 CD 2E 91     	call Extrae_address
 124+ 93AB C9           	ret
 125+ 93AC
 126+ 93AC              ; ----------------------
 127+ 93AC
 128+ 93AC              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 93AC              ; 	ld bc,4
 130+ 93AC              ; 	ldir
 131+ 93AC              ; 	ret
 132+ 93AC
 133+ 93AC 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 93AD CD BB 94         call Calcula_salto_en_BC
 135+ 93B0 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 93B3 A7               and a
 137+ 93B4 ED 4A            adc hl,bc
 138+ 93B6 CD 2E 91         call Extrae_address
 139+ 93B9 22 29 8C         ld (Puntero_indice_mov),hl
 140+ 93BC C9               ret
 141+ 93BD
 142+ 93BD              ;---------------------------------------------------------------------------------------------------------------
 143+ 93BD              ;
 144+ 93BD              ;   13/11/24
 145+ 93BD              ;
 146+ 93BD              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 93BD
 148+ 93BD
 149+ 93BD              Prepara_Cajas_de_Entidades
 150+ 93BD
 151+ 93BD              ; Preparamos los punteros de las cajas de entidades:
 152+ 93BD
 153+ 93BD CD 18 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 93C0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 93C0 CD 06 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 93C3
 157+ 93C3 2A 91 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 93C6
 159+ 93C6              ; En este punto:
 160+ 93C6              ;
 161+ 93C6              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 93C6              ; B contiene (Numero_parcial_de_entidades).
 163+ 93C6
 164+ 93C6 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 93C7
 166+ 93C7 7E           	ld a,(hl)
 167+ 93C8
 168+ 93C8 CD 9C 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 93CB
 170+ 93CB ED 5B 38 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 93CF
 172+ 93CF D5           	push de
 173+ 93D0 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 93D2
 175+ 93D2 01 0C 00     	ld bc,12
 176+ 93D5 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 93D7              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 93D7
 179+ 93D7              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 93D7              ;
 181+ 93D7              ;
 182+ 93D7              ; ------------------------------------------------------ IX
 183+ 93D7              ; ------------------------------------------------------ IX
 184+ 93D7              ; ------------------------------------------------------ IX
 185+ 93D7              ; ------------------------------------------------------ IX
 186+ 93D7
 187+ 93D7 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 93D9
 189+ 93D9 CD 5C 90     	call Obtenemos_puntero_de_impresion
 190+ 93DC
 191+ 93DC DD 6E 05     	ld l,(ix+5)
 192+ 93DF 2C           	inc l
 193+ 93E0 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 93E3
 195+ 93E3 D5           	push de														; Push (Puntero_objeto).
 196+ 93E4 E5           	push hl														; Push (Puntero_de_impresion).
 197+ 93E5
 198+ 93E5 CD 42 95     	call Genera_coordenadas
 199+ 93E8
 200+ 93E8 ED 4B F9 8B  	ld bc,(Coordenada_X)
 201+ 93EC
 202+ 93EC DD 71 01     	ld (ix+1),c
 203+ 93EF DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 93F2
 205+ 93F2 CD 6C 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 93F5
 207+ 93F5 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 93F7 D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 93F8
 210+ 93F8 CD 6E 95     	call Genera_datos_de_impresion
 211+ 93FB
 212+ 93FB DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93FD
 214+ 93FD              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93FD
 216+ 93FD CD 74 94     	call Decrementa_Contador_de_mov_masticados
 217+ 9400 CD 51 94     	call Limpiamos_bandeja_DRAW
 218+ 9403 CD 78 91     	call Incrementa_punteros_de_cajas
 219+ 9406
 220+ 9406              ; Siguiente entidad del Nivel.
 221+ 9406
 222+ 9406 2A 91 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 9409 23           	inc hl 														; _ entidad del Nivel.
 224+ 940A
 225+ 940A C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 940B
 227+ 940B 10 B9        	djnz 1B
 228+ 940D
 229+ 940D C9           	ret
 230+ 940E
 231+ 940E              ; -------------------------------------------------------------------------------------------------------------------
 232+ 940E              ;
 233+ 940E              ;	27/5/24
 234+ 940E              ;
 235+ 940E              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 940E              ;
 237+ 940E
 238+ 940E              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 940E              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 940E
 241+ 940E 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 9411 CD D0 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 9414
 244+ 9414
 245+ 9414              Construye_movimientos_masticados_Amadeus
 246+ 9414
 247+ 9414 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 9417 CD 4F 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 941A              ;															; _ el (Contador_de_mov_masticados).
 250+ 941A CD 34 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 941D              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 941D
 253+ 941D              ; Generamos movimientos masticados de Amadeus.
 254+ 941D
 255+ 941D 06 79        	ld b,121												; $0079, 121d.
 256+ 941F
 257+ 941F C5           1 push bc
 258+ 9420 CD 85 97     	call Draw
 259+ 9423 CD 34 90     	call Guarda_movimiento_masticado
 260+ 9426
 261+ 9426 CD F9 9A     	call Mov_right
 262+ 9429 CD F9 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 942C
 264+ 942C C1           	pop bc
 265+ 942D 10 F0        	djnz 1B
 266+ 942F
 267+ 942F              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 942F
 269+ 942F              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 942F              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 942F
 272+ 942F 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 9432 01 08 00     	ld bc,8
 274+ 9435 A7           	and a
 275+ 9436 ED 42        	sbc hl,bc
 276+ 9438 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 943B
 278+ 943B C9           	ret
 279+ 943C
 280+ 943C              ; ---------------------------------------------------------------------
 281+ 943C              ;
 282+ 943C              ;	10/02/24
 283+ 943C              ;
 284+ 943C              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 943C              ;
 286+ 943C              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 943C
 288+ 943C              Definicion_segun_tipo
 289+ 943C
 290+ 943C CD BB 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 943F 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 9442 CD C6 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 9445 C9           	ret
 294+ 9446
 295+ 9446              ; ---------------------------------------------------------------------
 296+ 9446              ;
 297+ 9446              ;	6/7/24
 298+ 9446
 299+ 9446
 300+ 9446              Store_Restore_cajas
 301+ 9446
 302+ 9446 ED 5B 38 8C  	ld de,(Puntero_store_caja)
 303+ 944A CD FD 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 944D CD 78 91     	call Incrementa_punteros_de_cajas
 305+ 9450 C9           	ret
 306+ 9451
 307+ 9451              ; ---------------------------------------------------------------------
 308+ 9451              ;
 309+ 9451              ;	23/6/24
 310+ 9451              ;
 311+ 9451              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9451              ;
 313+ 9451              ;	MODIFY: HL
 314+ 9451
 315+ 9451              Limpiamos_bandeja_DRAW
 316+ 9451
 317+ 9451 ED 73 47 8C  	ld (Stack),sp
 318+ 9455 31 1D 8C     	ld sp,Vel_left
 319+ 9458
 320+ 9458 AF           	xor a
 321+ 9459 67           	ld h,a
 322+ 945A 6F           	ld l,a
 323+ 945B
 324+ 945B E5           	push hl
 325+ 945C E5           	push hl
 326+ 945D E5           	push hl
 327+ 945E E5           	push hl
 328+ 945F E5           	push hl
 329+ 9460 E5           	push hl
 330+ 9461 E5           	push hl
 331+ 9462 E5           	push hl
 332+ 9463 E5           	push hl
 333+ 9464 E5           	push hl
 334+ 9465 E5           	push hl
 335+ 9466 E5           	push hl
 336+ 9467 E5           	push hl
 337+ 9468 E5           	push hl
 338+ 9469 E5           	push hl
 339+ 946A E5           	push hl
 340+ 946B E5           	push hl
 341+ 946C E5           	push hl
 342+ 946D
 343+ 946D 33           	inc sp
 344+ 946E
 345+ 946E E5           	push hl
 346+ 946F ED 7B 47 8C  	ld sp,(Stack)
 347+ 9473
 348+ 9473 C9           	ret
 349+ 9474
 350+ 9474              ; ---------------------------------------------------------------------
 351+ 9474              ;
 352+ 9474              ;	23/11/24
 353+ 9474              ;
 354+ 9474              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 9474
 356+ 9474              Decrementa_Contador_de_mov_masticados
 357+ 9474
 358+ 9474 DD 6E 09     	ld l,(ix+9)
 359+ 9477 DD 66 0A     	ld h,(ix+10)
 360+ 947A
 361+ 947A 2B           	dec hl
 362+ 947B
 363+ 947B DD 75 09     	ld (ix+9),l
 364+ 947E DD 74 0A     	ld (ix+10),h
 365+ 9481
 366+ 9481 C9           	ret
 367+ 9482
 368+ 9482              ; ---------------------------------------------------------------------
 369+ 9482              ;
 370+ 9482              ;	24/11/24
 371+ 9482
 372+ 9482              Reinicia_entidad_maliciosa
 373+ 9482
 374+ 9482              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 9482
 376+ 9482 CD 66 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 9485 CD 73 9F     	call Transfiere_datos_de_contadores
 378+ 9488
 379+ 9488              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 9488
 381+ 9488 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 948B CD 3C 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 948E
 384+ 948E 7D           	ld a,l
 385+ 948F C6 0B        	add 11
 386+ 9491 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 9492
 388+ 9492 CD 2E 91     	call Extrae_address
 389+ 9495
 390+ 9495 DD 75 07     	ld (ix+7),l
 391+ 9498 DD 74 08     	ld (ix+8),h
 392+ 949B
 393+ 949B CD 5C 90     	call Obtenemos_puntero_de_impresion
 394+ 949E
 395+ 949E              ; Incrementa (Contador_de_vueltas)x2.
 396+ 949E              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 949E
 398+ 949E              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 949E              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 949E              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 949E              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 949E              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 949E
 404+ 949E DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 94A2
 406+ 94A2 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 94A5 CB 2F        	sra a
 408+ 94A7 CB 2F        	sra a
 409+ 94A9
 410+ 94A9 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 94AC
 412+ 94AC 3E 40        	ld a,$40
 413+ 94AE DD BE 03     	cp (ix+3)
 414+ 94B1 C0           	ret nz
 415+ 94B2
 416+ 94B2              ; Límitador.
 417+ 94B2
 418+ 94B2              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 94B2
 420+ 94B2 DD CB 03 2E  	sra (ix+3)
 421+ 94B6 DD CB 0B 2E  	sra (ix+11)
 422+ 94BA
 423+ 94BA C9           	ret
 424+ 94BB
 425+ 94BB              ;	------------------------------------------------------------------------------------
 426+ 94BB              ;
 427+ 94BB              ;	09/11/24
 428+ 94BB              ;
 429+ 94BB              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 94BB              ;
 431+ 94BB              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 94BB              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 94BB
 434+ 94BB A7           Calcula_salto_en_BC and a
 435+ 94BC 28 04        	jr z,1F
 436+ 94BE CB 27        	sla a
 437+ 94C0 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 94C2 4F           1 ld c,a
 439+ 94C3 06 00        	ld b,0
 440+ 94C5 C9           	ret
 441+ 94C6
 442+ 94C6              ; ------------------------------------------------------------------
 443+ 94C6              ;
 444+ 94C6              ;	19/1/24
 445+ 94C6              ;
 446+ 94C6              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 94C6              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 94C6
 449+ 94C6 A7           Situa_en_datos_de_definicion and a
 450+ 94C7 ED 4A        	adc hl,bc
 451+ 94C9 CD 2E 91     	call Extrae_address
 452+ 94CC 22 45 8C         ld (Datos_de_entidad),hl
 453+ 94CF C9           	ret
 454+ 94D0
 455+ 94D0              ; ----------------------------------------------------------------------------------------------------------
 456+ 94D0              ;
 457+ 94D0              ;	24/6/24
 458+ 94D0              ;
 459+ 94D0              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 94D0              ;	_ de entidad.
 461+ 94D0              ;
 462+ 94D0              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 94D0              ;
 464+ 94D0              ;
 465+ 94D0              ;	MODIFICA: HL,DE y BC
 466+ 94D0
 467+ 94D0
 468+ 94D0              Definicion_de_entidad_a_bandeja_DRAW
 469+ 94D0
 470+ 94D0 11 F8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 94D3 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 94D4 12           	ld (de),a
 473+ 94D5 23           	inc hl
 474+ 94D6              ;
 475+ 94D6 11 06 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 94D9 01 02 00     	ld bc,2
 477+ 94DC ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 94DE              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 94DE 11 FB 8B     	ld de,Contador_de_vueltas
 480+ 94E1 7E           	ld a,(hl)
 481+ 94E2 12           	ld (de),a
 482+ 94E3 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 94E4
 484+ 94E4 11 0D 8C     	ld de,Indice_Sprite_der
 485+ 94E7 01 04 00     	ld bc,4
 486+ 94EA ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 94EC
 488+ 94EC 11 15 8C     	ld de,Posicion_inicio
 489+ 94EF 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 94F2 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 94F4
 492+ 94F4 11 FF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 94F7 01 02 00     	ld bc,2
 494+ 94FA ED B0        	ldir
 495+ 94FC
 496+ 94FC C9           	ret
 497+ 94FD
 498+ 94FD              ; ----------------------------------------------------------------------------------------------------------
 499+ 94FD              ;
 500+ 94FD              ;	1/8/24
 501+ 94FD              ;
 502+ 94FD
 503+ 94FD              Parametros_de_bandeja_DRAW_a_caja
 504+ 94FD
 505+ 94FD 21 F8 8B     	ld hl,Bandeja_DRAW
 506+ 9500 01 0C 00     	ld bc,12
 507+ 9503 ED B0        	ldir
 508+ 9505 C9           	ret
 509+ 9506
 510+ 9506              ;---------------------------------------------------------------------------------------------------------------
 511+ 9506              ;
 512+ 9506              ;	13/11/24
 513+ 9506              ;
 514+ 9506              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 9506              ;
 516+ 9506              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 9506              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 9506
 519+ 9506              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 9506              ;			- Actualiza (Numero_de_entidades).
 521+ 9506
 522+ 9506              ;	MODIFICA: A y B.
 523+ 9506
 524+ 9506
 525+ 9506              Inicializa_Numero_parcial_de_entidades
 526+ 9506
 527+ 9506 3A 40 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 9509 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 950B 38 0E        	jr c,1F
 530+ 950D 28 0C        	jr z,1F
 531+ 950F
 532+ 950F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 950F              ; Actualizamos variables.
 534+ 950F
 535+ 950F D6 06        	sub 6
 536+ 9511 32 40 8C     	ld (Numero_de_entidades),a
 537+ 9514 3E 06        	ld a,6
 538+ 9516 32 41 8C     	ld (Numero_parcial_de_entidades),a
 539+ 9519 47           	ld b,a
 540+ 951A C9           	ret
 541+ 951B
 542+ 951B              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 951B              ; (Numero_de_entidades)="0".
 544+ 951B
 545+ 951B 32 41 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 951E 47           	ld b,a
 547+ 951F AF           	xor a
 548+ 9520 32 40 8C     	ld (Numero_de_entidades),a
 549+ 9523 C9           	ret
 550+ 9524
# file closed: Rutinas_de_inicio_y_niveles.asm
2182  9524              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9524              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9524              ;
   3+ 9524              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9524              ;
   5+ 9524              ; *****************************************************************************************************************************************************************************************
   6+ 9524              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9524
   8+ 9524 7C           calcula_tercio ld a,h
   9+ 9525 E6 18        	and $18
  10+ 9527 CB 2F        	sra a
  11+ 9529 CB 2F        	sra a
  12+ 952B CB 2F        	sra a
  13+ 952D C9           	ret
  14+ 952E
# file closed: calcula_tercio.asm
2183  952E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 952E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 952E              ;
   3+ 952E              ;
   4+ 952E              ;	CLS.
   5+ 952E              ;
   6+ 952E              ;	Limpia la pantalla y define sus atributos.
   7+ 952E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 952E              ;
   9+ 952E              ;	COLORES: 0 ..... NEGRO
  10+ 952E              ;    		 1 ..... AZUL
  11+ 952E              ; 			 2 ..... ROJO
  12+ 952E              ;			 3 ..... MAGENTA
  13+ 952E              ; 			 4 ..... VERDE
  14+ 952E              ; 			 5 ..... CIAN
  15+ 952E              ;			 6 ..... AMARILLO
  16+ 952E              ; 			 7 ..... BLANCO
  17+ 952E              ;
  18+ 952E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 952E              ;
  20+ 952E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 952E
  22+ 952E
  23+ 952E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9531 11 01 40     	LD DE,$4001
  25+ 9534 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9537 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9539 ED B0        	LDIR
  28+ 953B 01 FF 02     	LD BC,767
  29+ 953E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 953F ED B0        	LDIR
  31+ 9541 C9           	ret
  32+ 9542
# file closed: Cls.asm
2184  9542              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9542              ; ------------------------------------------------------------------------
   2+ 9542              ;
   3+ 9542              ;	30/1/24
   4+ 9542              ;
   5+ 9542              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9542              ;	Fila superior "0", Columna izquierda "0".
   7+ 9542              ;
   8+ 9542              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9542              ;
  10+ 9542              ;	Modifica: A,BC y DE.
  11+ 9542
  12+ 9542              Genera_coordenadas
  13+ 9542
  14+ 9542 7D           	ld a,l
  15+ 9543 E6 1F        	and $1f
  16+ 9545
  17+ 9545 32 F9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9548
  19+ 9548 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9549 FE 40        	cp $40
  21+ 954B 38 1C        	jr c,4F
  22+ 954D
  23+ 954D CD 24 95     	call calcula_tercio
  24+ 9550 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9551
  26+ 9551 1E 00        	ld e,0
  27+ 9553 7D           	ld a,l
  28+ 9554 E6 E0        	and $e0
  29+ 9556 28 01        	jr z,1F
  30+ 9558 04           	inc b
  31+ 9559
  32+ 9559 04           1 inc b
  33+ 955A 05           	dec b
  34+ 955B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 955D              ;														; _ , salimos.
  36+ 955D 1C           3 inc e
  37+ 955E D6 20        	sub 32
  38+ 9560 20 FB        	jr nz,3B
  39+ 9562 10 F5        	djnz 1B
  40+ 9564
  41+ 9564 7B           2 ld a,e
  42+ 9565 32 FA 8B     	ld (Coordenada_y),a
  43+ 9568 C9           	ret
  44+ 9569
  45+ 9569 AF           4 xor a
  46+ 956A 32 FA 8B     	ld (Coordenada_y),a
  47+ 956D C9           	ret
  48+ 956E
# file closed: Genera_coordenadas.asm
2185  956E              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 956E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 956E              ;
   3+ 956E              ;	20/09/24
   4+ 956E              ;
   5+ 956E              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 956E              ;   DE contiene Puntero_objeto.
   7+ 956E              ;   IX contiene el Puntero de impresión.
   8+ 956E
   9+ 956E              Genera_datos_de_impresion
  10+ 956E
  11+ 956E ED 73 47 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9572
  13+ 9572 2A 69 8C         ld hl,(Scanlines_album_SP)
  14+ 9575
  15+ 9575 3E 05            ld a,5
  16+ 9577 85               add l
  17+ 9578 6F               ld l,a
  18+ 9579
  19+ 9579 F9               ld sp,hl
  20+ 957A 22 69 8C         ld (Scanlines_album_SP),hl
  21+ 957D
  22+ 957D 21 00 00         ld hl,0
  23+ 9580
  24+ 9580 DD E5            push ix
  25+ 9582 3B               dec sp
  26+ 9583 ED 7A            adc hl,sp
  27+ 9585 D5               push de
  28+ 9586
  29+ 9586              ; Recuperamos SP.
  30+ 9586
  31+ 9586 ED 7B 47 8C      ld sp,(Stack)
  32+ 958A
  33+ 958A E5               push hl
  34+ 958B F1               pop af
  35+ 958C 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 958D
  37+ 958D              ; Tenemos el encabezado listo.
  38+ 958D              ; Preparamos registros para generar los scanlines.
  39+ 958D
  40+ 958D DD E5            push ix
  41+ 958F E1               pop hl                                          ; 1er scanline en HL.
  42+ 9590
  43+ 9590 ED 5B 69 8C      ld de,(Scanlines_album_SP)
  44+ 9594
  45+ 9594              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9594              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9594
  48+ 9594 7C               ld a,h
  49+ 9595 FE 50            cp $50
  50+ 9597 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9599
  52+ 9599 20 05            jr nz,2F
  53+ 959B
  54+ 959B 7D               ld a,l
  55+ 959C FE E0            cp $e0
  56+ 959E 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95A0
  58+ 95A0 7D           2 ld a,l
  59+ 95A1 FE C0            cp $c0
  60+ 95A3 D2 39 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95A6
  62+ 95A6              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95A6
  64+ 95A6 CD 37 9A         call NextScan
  65+ 95A9 EB               ex de,hl
  66+ 95AA
  67+ 95AA 73               ld (hl),e
  68+ 95AB 23               inc hl
  69+ 95AC 72               ld (hl),d
  70+ 95AD 23               inc hl
  71+ 95AE
  72+ 95AE EB               ex de,hl
  73+ 95AF
  74+ 95AF CD 37 9A         call NextScan
  75+ 95B2 EB               ex de,hl
  76+ 95B3
  77+ 95B3 73               ld (hl),e
  78+ 95B4 23               inc hl
  79+ 95B5 72               ld (hl),d
  80+ 95B6 23               inc hl
  81+ 95B7
  82+ 95B7 EB               ex de,hl
  83+ 95B8
  84+ 95B8 CD 37 9A         call NextScan
  85+ 95BB EB               ex de,hl
  86+ 95BC
  87+ 95BC 73               ld (hl),e
  88+ 95BD 23               inc hl
  89+ 95BE 72               ld (hl),d
  90+ 95BF 23               inc hl
  91+ 95C0
  92+ 95C0 EB               ex de,hl
  93+ 95C1
  94+ 95C1 CD 37 9A         call NextScan
  95+ 95C4 EB               ex de,hl
  96+ 95C5
  97+ 95C5 73               ld (hl),e
  98+ 95C6 23               inc hl
  99+ 95C7 72               ld (hl),d
 100+ 95C8 23               inc hl
 101+ 95C9
 102+ 95C9 EB               ex de,hl
 103+ 95CA
 104+ 95CA CD 37 9A         call NextScan
 105+ 95CD EB               ex de,hl
 106+ 95CE
 107+ 95CE 73               ld (hl),e
 108+ 95CF 23               inc hl
 109+ 95D0 72               ld (hl),d
 110+ 95D1 23               inc hl
 111+ 95D2
 112+ 95D2 EB               ex de,hl
 113+ 95D3
 114+ 95D3 CD 37 9A         call NextScan
 115+ 95D6 EB               ex de,hl
 116+ 95D7
 117+ 95D7 73               ld (hl),e
 118+ 95D8 23               inc hl
 119+ 95D9 72               ld (hl),d
 120+ 95DA 23               inc hl
 121+ 95DB
 122+ 95DB EB               ex de,hl
 123+ 95DC
 124+ 95DC CD 37 9A         call NextScan
 125+ 95DF EB               ex de,hl
 126+ 95E0
 127+ 95E0 73               ld (hl),e
 128+ 95E1 23               inc hl
 129+ 95E2 72               ld (hl),d
 130+ 95E3 23               inc hl
 131+ 95E4
 132+ 95E4 EB               ex de,hl
 133+ 95E5
 134+ 95E5 CD 37 9A         call NextScan
 135+ 95E8 EB               ex de,hl
 136+ 95E9
 137+ 95E9 73               ld (hl),e
 138+ 95EA 23               inc hl
 139+ 95EB 72               ld (hl),d
 140+ 95EC 23               inc hl
 141+ 95ED
 142+ 95ED EB               ex de,hl
 143+ 95EE
 144+ 95EE CD 37 9A         call NextScan
 145+ 95F1 EB               ex de,hl
 146+ 95F2
 147+ 95F2 73               ld (hl),e
 148+ 95F3 23               inc hl
 149+ 95F4 72               ld (hl),d
 150+ 95F5 23               inc hl
 151+ 95F6
 152+ 95F6 EB               ex de,hl
 153+ 95F7
 154+ 95F7 CD 37 9A         call NextScan
 155+ 95FA EB               ex de,hl
 156+ 95FB
 157+ 95FB 73               ld (hl),e
 158+ 95FC 23               inc hl
 159+ 95FD 72               ld (hl),d
 160+ 95FE 23               inc hl
 161+ 95FF
 162+ 95FF EB               ex de,hl
 163+ 9600
 164+ 9600 CD 37 9A         call NextScan
 165+ 9603 EB               ex de,hl
 166+ 9604
 167+ 9604 73               ld (hl),e
 168+ 9605 23               inc hl
 169+ 9606 72               ld (hl),d
 170+ 9607 23               inc hl
 171+ 9608
 172+ 9608 EB               ex de,hl
 173+ 9609
 174+ 9609 CD 37 9A         call NextScan
 175+ 960C EB               ex de,hl
 176+ 960D
 177+ 960D 73               ld (hl),e
 178+ 960E 23               inc hl
 179+ 960F 72               ld (hl),d
 180+ 9610 23               inc hl
 181+ 9611
 182+ 9611 EB               ex de,hl
 183+ 9612
 184+ 9612 CD 37 9A         call NextScan
 185+ 9615 EB               ex de,hl
 186+ 9616
 187+ 9616 73               ld (hl),e
 188+ 9617 23               inc hl
 189+ 9618 72               ld (hl),d
 190+ 9619 23               inc hl
 191+ 961A
 192+ 961A EB               ex de,hl
 193+ 961B
 194+ 961B CD 37 9A         call NextScan
 195+ 961E EB               ex de,hl
 196+ 961F
 197+ 961F 73               ld (hl),e
 198+ 9620 23               inc hl
 199+ 9621 72               ld (hl),d
 200+ 9622 23               inc hl
 201+ 9623
 202+ 9623 EB               ex de,hl
 203+ 9624
 204+ 9624 CD 37 9A         call NextScan
 205+ 9627 EB               ex de,hl
 206+ 9628
 207+ 9628              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9628              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9628              ;   _ generar sus scanlines.
 210+ 9628
 211+ 9628              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9628
 213+ 9628 73               ld (hl),e
 214+ 9629 23               inc hl
 215+ 962A 72               ld (hl),d
 216+ 962B 23               inc hl
 217+ 962C
 218+ 962C              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 962C
 220+ 962C 22 69 8C         ld (Scanlines_album_SP),hl
 221+ 962F
 222+ 962F EB               ex de,hl
 223+ 9630
 224+ 9630              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9630
 226+ 9630              ;    call NextScan
 227+ 9630              ;    call NextScan
 228+ 9630
 229+ 9630 22 74 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9633
 231+ 9633              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9633
 233+ 9633 08               ex af,af
 234+ 9634
 235+ 9634 F5               push af
 236+ 9635 E1               pop hl
 237+ 9636
 238+ 9636 36 10            ld (hl),16
 239+ 9638
 240+ 9638 C9               ret
 241+ 9639
 242+ 9639              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9639
 244+ 9639              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9639
 246+ 9639 3E 57            ld a,$57
 247+ 963B 94               sub h
 248+ 963C 47               ld b,a
 249+ 963D
 250+ 963D 3E DF            ld a,$df
 251+ 963F BD               cp l
 252+ 9640 38 04            jr c,1F
 253+ 9642
 254+ 9642 3E 08            ld a,8
 255+ 9644 80               add b
 256+ 9645 47               ld b,a
 257+ 9646
 258+ 9646              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9646              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9646
 261+ 9646 48           1 ld c,b
 262+ 9647 0C               inc c
 263+ 9648
 264+ 9648 04               inc b
 265+ 9649 05               dec b
 266+ 964A 20 02            jr nz,3F
 267+ 964C
 268+ 964C 18 0B            jr 6F
 269+ 964E
 270+ 964E CD 37 9A     3 call NextScan
 271+ 9651 EB               ex de,hl
 272+ 9652
 273+ 9652 73               ld (hl),e
 274+ 9653 23               inc hl
 275+ 9654 72               ld (hl),d
 276+ 9655 23               inc hl
 277+ 9656
 278+ 9656 EB               ex de,hl
 279+ 9657 10 F5            djnz 3B
 280+ 9659
 281+ 9659 ED 53 69 8C  6 ld (Scanlines_album_SP),de
 282+ 965D
 283+ 965D 08           5 ex af,af
 284+ 965E F5               push af
 285+ 965F E1               pop hl
 286+ 9660
 287+ 9660 71               ld (hl),c
 288+ 9661
 289+ 9661 C9               ret
 290+ 9662
# file closed: Genera_datos_de_impresion.asm
2186  9662              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9662              ; -----------------------------------------------------------------------------
   2+ 9662              ;
   3+ 9662              ;   11/03/24
   4+ 9662              ;
   5+ 9662
   6+ 9662              Pinta_Sprites
   7+ 9662
   8+ 9662              ;    ld hl,(Scanlines_album_SP)
   9+ 9662              ;    call Extrae_address
  10+ 9662
  11+ 9662              ;    inc h
  12+ 9662              ;    dec h
  13+ 9662              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9662
  15+ 9662 ED 73 47 8C      ld (Stack),sp
  16+ 9666
  17+ 9666 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9667              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9667 2C               inc l
  20+ 9668 2C               inc l
  21+ 9669
  22+ 9669 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 966A
  24+ 966A 2C               inc l
  25+ 966B F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 966C
  27+ 966C              ;   Seleccionamos rutina de impresión:
  28+ 966C
  29+ 966C 3E 10            ld a,16
  30+ 966E B8               cp b
  31+ 966F C2 6B 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9672
  33+ 9672              ;   Rutinas:
  34+ 9672
  35+ 9672              Pinta_rapido    ;   1520 t/states.
  36+ 9672
  37+ 9672 E1               pop hl
  38+ 9673
  39+ 9673 1A               ld a,(de)
  40+ 9674 AE               xor (hl)
  41+ 9675 77               ld (hl),a
  42+ 9676 2C               inc l
  43+ 9677 1C               inc e
  44+ 9678 1A               ld a,(de)
  45+ 9679 AE               xor (hl)
  46+ 967A 77               ld (hl),a
  47+ 967B 2C               inc l
  48+ 967C 1C               inc e
  49+ 967D 1A               ld a,(de)
  50+ 967E AE               xor (hl)
  51+ 967F 77               ld (hl),a
  52+ 9680 13               inc de
  53+ 9681
  54+ 9681 E1               pop hl
  55+ 9682
  56+ 9682 1A               ld a,(de)
  57+ 9683 AE               xor (hl)
  58+ 9684 77               ld (hl),a
  59+ 9685 2C               inc l
  60+ 9686 1C               inc e
  61+ 9687 1A               ld a,(de)
  62+ 9688 AE               xor (hl)
  63+ 9689 77               ld (hl),a
  64+ 968A 2C               inc l
  65+ 968B 1C               inc e
  66+ 968C 1A               ld a,(de)
  67+ 968D AE               xor (hl)
  68+ 968E 77               ld (hl),a
  69+ 968F 13               inc de
  70+ 9690
  71+ 9690 E1               pop hl
  72+ 9691
  73+ 9691 1A               ld a,(de)
  74+ 9692 AE               xor (hl)
  75+ 9693 77               ld (hl),a
  76+ 9694 2C               inc l
  77+ 9695 1C               inc e
  78+ 9696 1A               ld a,(de)
  79+ 9697 AE               xor (hl)
  80+ 9698 77               ld (hl),a
  81+ 9699 2C               inc l
  82+ 969A 1C               inc e
  83+ 969B 1A               ld a,(de)
  84+ 969C AE               xor (hl)
  85+ 969D 77               ld (hl),a
  86+ 969E 13               inc de
  87+ 969F
  88+ 969F E1               pop hl
  89+ 96A0
  90+ 96A0 1A               ld a,(de)
  91+ 96A1 AE               xor (hl)
  92+ 96A2 77               ld (hl),a
  93+ 96A3 2C               inc l
  94+ 96A4 1C               inc e
  95+ 96A5 1A               ld a,(de)
  96+ 96A6 AE               xor (hl)
  97+ 96A7 77               ld (hl),a
  98+ 96A8 2C               inc l
  99+ 96A9 1C               inc e
 100+ 96AA 1A               ld a,(de)
 101+ 96AB AE               xor (hl)
 102+ 96AC 77               ld (hl),a
 103+ 96AD 13               inc de
 104+ 96AE
 105+ 96AE E1               pop hl
 106+ 96AF
 107+ 96AF 1A               ld a,(de)
 108+ 96B0 AE               xor (hl)
 109+ 96B1 77               ld (hl),a
 110+ 96B2 2C               inc l
 111+ 96B3 1C               inc e
 112+ 96B4 1A               ld a,(de)
 113+ 96B5 AE               xor (hl)
 114+ 96B6 77               ld (hl),a
 115+ 96B7 2C               inc l
 116+ 96B8 1C               inc e
 117+ 96B9 1A               ld a,(de)
 118+ 96BA AE               xor (hl)
 119+ 96BB 77               ld (hl),a
 120+ 96BC 13               inc de
 121+ 96BD
 122+ 96BD E1               pop hl
 123+ 96BE
 124+ 96BE 1A               ld a,(de)
 125+ 96BF AE               xor (hl)
 126+ 96C0 77               ld (hl),a
 127+ 96C1 2C               inc l
 128+ 96C2 1C               inc e
 129+ 96C3 1A               ld a,(de)
 130+ 96C4 AE               xor (hl)
 131+ 96C5 77               ld (hl),a
 132+ 96C6 2C               inc l
 133+ 96C7 1C               inc e
 134+ 96C8 1A               ld a,(de)
 135+ 96C9 AE               xor (hl)
 136+ 96CA 77               ld (hl),a
 137+ 96CB 13               inc de
 138+ 96CC
 139+ 96CC E1               pop hl
 140+ 96CD
 141+ 96CD 1A               ld a,(de)
 142+ 96CE AE               xor (hl)
 143+ 96CF 77               ld (hl),a
 144+ 96D0 2C               inc l
 145+ 96D1 1C               inc e
 146+ 96D2 1A               ld a,(de)
 147+ 96D3 AE               xor (hl)
 148+ 96D4 77               ld (hl),a
 149+ 96D5 2C               inc l
 150+ 96D6 1C               inc e
 151+ 96D7 1A               ld a,(de)
 152+ 96D8 AE               xor (hl)
 153+ 96D9 77               ld (hl),a
 154+ 96DA 13               inc de
 155+ 96DB
 156+ 96DB E1               pop hl
 157+ 96DC
 158+ 96DC 1A               ld a,(de)
 159+ 96DD AE               xor (hl)
 160+ 96DE 77               ld (hl),a
 161+ 96DF 2C               inc l
 162+ 96E0 1C               inc e
 163+ 96E1 1A               ld a,(de)
 164+ 96E2 AE               xor (hl)
 165+ 96E3 77               ld (hl),a
 166+ 96E4 2C               inc l
 167+ 96E5 1C               inc e
 168+ 96E6 1A               ld a,(de)
 169+ 96E7 AE               xor (hl)
 170+ 96E8 77               ld (hl),a
 171+ 96E9 13               inc de
 172+ 96EA
 173+ 96EA E1               pop hl
 174+ 96EB
 175+ 96EB 1A               ld a,(de)
 176+ 96EC AE               xor (hl)
 177+ 96ED 77               ld (hl),a
 178+ 96EE 2C               inc l
 179+ 96EF 1C               inc e
 180+ 96F0 1A               ld a,(de)
 181+ 96F1 AE               xor (hl)
 182+ 96F2 77               ld (hl),a
 183+ 96F3 2C               inc l
 184+ 96F4 1C               inc e
 185+ 96F5 1A               ld a,(de)
 186+ 96F6 AE               xor (hl)
 187+ 96F7 77               ld (hl),a
 188+ 96F8 13               inc de
 189+ 96F9
 190+ 96F9 E1               pop hl
 191+ 96FA
 192+ 96FA 1A               ld a,(de)
 193+ 96FB AE               xor (hl)
 194+ 96FC 77               ld (hl),a
 195+ 96FD 2C               inc l
 196+ 96FE 1C               inc e
 197+ 96FF 1A               ld a,(de)
 198+ 9700 AE               xor (hl)
 199+ 9701 77               ld (hl),a
 200+ 9702 2C               inc l
 201+ 9703 1C               inc e
 202+ 9704 1A               ld a,(de)
 203+ 9705 AE               xor (hl)
 204+ 9706 77               ld (hl),a
 205+ 9707 13               inc de
 206+ 9708
 207+ 9708 E1               pop hl
 208+ 9709
 209+ 9709 1A               ld a,(de)
 210+ 970A AE               xor (hl)
 211+ 970B 77               ld (hl),a
 212+ 970C 2C               inc l
 213+ 970D 1C               inc e
 214+ 970E 1A               ld a,(de)
 215+ 970F AE               xor (hl)
 216+ 9710 77               ld (hl),a
 217+ 9711 2C               inc l
 218+ 9712 1C               inc e
 219+ 9713 1A               ld a,(de)
 220+ 9714 AE               xor (hl)
 221+ 9715 77               ld (hl),a
 222+ 9716 13               inc de
 223+ 9717
 224+ 9717 E1               pop hl
 225+ 9718
 226+ 9718 1A               ld a,(de)
 227+ 9719 AE               xor (hl)
 228+ 971A 77               ld (hl),a
 229+ 971B 2C               inc l
 230+ 971C 1C               inc e
 231+ 971D 1A               ld a,(de)
 232+ 971E AE               xor (hl)
 233+ 971F 77               ld (hl),a
 234+ 9720 2C               inc l
 235+ 9721 1C               inc e
 236+ 9722 1A               ld a,(de)
 237+ 9723 AE               xor (hl)
 238+ 9724 77               ld (hl),a
 239+ 9725 13               inc de
 240+ 9726
 241+ 9726 E1               pop hl
 242+ 9727
 243+ 9727 1A               ld a,(de)
 244+ 9728 AE               xor (hl)
 245+ 9729 77               ld (hl),a
 246+ 972A 2C               inc l
 247+ 972B 1C               inc e
 248+ 972C 1A               ld a,(de)
 249+ 972D AE               xor (hl)
 250+ 972E 77               ld (hl),a
 251+ 972F 2C               inc l
 252+ 9730 1C               inc e
 253+ 9731 1A               ld a,(de)
 254+ 9732 AE               xor (hl)
 255+ 9733 77               ld (hl),a
 256+ 9734 13               inc de
 257+ 9735
 258+ 9735 E1               pop hl
 259+ 9736
 260+ 9736 1A               ld a,(de)
 261+ 9737 AE               xor (hl)
 262+ 9738 77               ld (hl),a
 263+ 9739 2C               inc l
 264+ 973A 1C               inc e
 265+ 973B 1A               ld a,(de)
 266+ 973C AE               xor (hl)
 267+ 973D 77               ld (hl),a
 268+ 973E 2C               inc l
 269+ 973F 1C               inc e
 270+ 9740 1A               ld a,(de)
 271+ 9741 AE               xor (hl)
 272+ 9742 77               ld (hl),a
 273+ 9743 13               inc de
 274+ 9744
 275+ 9744 E1               pop hl
 276+ 9745
 277+ 9745 1A               ld a,(de)
 278+ 9746 AE               xor (hl)
 279+ 9747 77               ld (hl),a
 280+ 9748 2C               inc l
 281+ 9749 1C               inc e
 282+ 974A 1A               ld a,(de)
 283+ 974B AE               xor (hl)
 284+ 974C 77               ld (hl),a
 285+ 974D 2C               inc l
 286+ 974E 1C               inc e
 287+ 974F 1A               ld a,(de)
 288+ 9750 AE               xor (hl)
 289+ 9751 77               ld (hl),a
 290+ 9752 13               inc de
 291+ 9753
 292+ 9753 E1               pop hl
 293+ 9754
 294+ 9754 1A               ld a,(de)
 295+ 9755 AE               xor (hl)
 296+ 9756 77               ld (hl),a
 297+ 9757 2C               inc l
 298+ 9758 1C               inc e
 299+ 9759 1A               ld a,(de)
 300+ 975A AE               xor (hl)
 301+ 975B 77               ld (hl),a
 302+ 975C 2C               inc l
 303+ 975D 1C               inc e
 304+ 975E 1A               ld a,(de)
 305+ 975F AE               xor (hl)
 306+ 9760 77               ld (hl),a
 307+ 9761 13               inc de
 308+ 9762
 309+ 9762 ED 73 69 8C      ld (Scanlines_album_SP),sp
 310+ 9766 ED 7B 47 8C      ld sp,(Stack)
 311+ 976A C9               ret
 312+ 976B
 313+ 976B              Pinta_lento
 314+ 976B
 315+ 976B E1           1 pop hl
 316+ 976C
 317+ 976C 1A               ld a,(de)
 318+ 976D AE               xor (hl)
 319+ 976E 77               ld (hl),a
 320+ 976F 2C               inc l
 321+ 9770 1C               inc e
 322+ 9771 1A               ld a,(de)
 323+ 9772 AE               xor (hl)
 324+ 9773 77               ld (hl),a
 325+ 9774 2C               inc l
 326+ 9775 1C               inc e
 327+ 9776 1A               ld a,(de)
 328+ 9777 AE               xor (hl)
 329+ 9778 77               ld (hl),a
 330+ 9779 13               inc de
 331+ 977A
 332+ 977A 10 EF            djnz 1B
 333+ 977C
 334+ 977C ED 73 69 8C      ld (Scanlines_album_SP),sp
 335+ 9780 ED 7B 47 8C      ld sp,(Stack)
 336+ 9784 C9               ret
# file closed: Pinta_Sprites.asm
2187  9785              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9785              ; ******************************************************************************************************************************************************************************************
   2+ 9785              ;
   3+ 9785              ; 26/06/23
   4+ 9785              ;
   5+ 9785              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9785
   7+ 9785              Draw
   8+ 9785
   9+ 9785 CD 2B 9A     	call Prepara_draw
  10+ 9788 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9789 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 978A 28 05        	jr z,2F
  13+ 978C
  14+ 978C 3A 17 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 978F 18 0C        	jr 1F
  16+ 9791
  17+ 9791 2A 15 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9794 22 08 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9797 CD 23 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 979A              ;													; _la esquina superior izquierda de la pantalla.
  21+ 979A
  22+ 979A CD CA 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 979D
  24+ 979D 3A 05 8C     1 ld a,(Ctrl_0)
  25+ 97A0 CB 6F        	bit 5,a
  26+ 97A2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 97A4
  28+ 97A4 CD B9 97     	call Comprueba_limite_horizontal
  29+ 97A7 CD 49 98     	call Comprueba_limite_vertical
  30+ 97AA
  31+ 97AA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 97AA              ; -----------------------
  33+ 97AA              ; -----------------------
  34+ 97AA              ; -----------------------
  35+ 97AA
  36+ 97AA CD 9F 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 97AD CD D6 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 97B0
  39+ 97B0 3A 05 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 97B3 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 97B5 32 05 8C     	ld (Ctrl_0),a
  42+ 97B8
  43+ 97B8 C9           	ret
  44+ 97B9
  45+ 97B9              ; *******************************************************************************************************************************************************************************************
  46+ 97B9              ;	21/01/23
  47+ 97B9              ;
  48+ 97B9              ; 	Comprueba_limite_horizontal.
  49+ 97B9              ;
  50+ 97B9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 97B9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 97B9              ;
  53+ 97B9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 97B9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 97B9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 97B9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 97B9
  58+ 97B9
  59+ 97B9
  60+ 97B9 3A 05 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 97BC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 97BE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 97C0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 97C2 32 05 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 97C5 18 09            jr 6F
  66+ 97C7 CB 5F        1 bit 3,a
  67+ 97C9 28 0A            jr z,2F
  68+ 97CB E6 F7            and $f7
  69+ 97CD 32 05 8C         ld (Ctrl_0),a
  70+ 97D0 CD 23 99     6 call Inicializacion
  71+ 97D3 18 5B            jr 5F
  72+ 97D5 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 97D6
  74+ 97D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 97D6              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 97D6
  77+ 97D6 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 97D7 2A 19 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 97DA CD 24 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 97DD 67           	ld h,a
  81+ 97DE EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 97DF CD 24 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 97E2 67           	ld h,a
  84+ 97E3 A7           	and a
  85+ 97E4 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 97E6 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 97E7 3A 17 8C     	ld a,(Cuad_objeto)
  88+ 97EA FE 02        	cp 2
  89+ 97EC 38 1E        	jr c,3F
  90+ 97EE 28 1C        	jr z,3F
  91+ 97F0 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 97F1 28 23            jr z,7F
  93+ 97F3 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97F5 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97F7 E1           	pop hl
  96+ 97F8
  97+ 97F8              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97F8              ; _para indicar con E="2" en caso necesario.
  99+ 97F8
 100+ 97F8 E5               push hl
 101+ 97F9 C5               push bc
 102+ 97FA CD 24 95     	call calcula_tercio
 103+ 97FD FE 01        	cp 1
 104+ 97FF 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9801 CD 31 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9804 28 26            jr z,9F
 107+ 9806 38 24            jr c,9F
 108+ 9808 1E 00        11 ld e,0
 109+ 980A 18 22            jr 8F
 110+ 980C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 980D 28 07        	jr z, 7F
 112+ 980F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9811 1E 00         	ld e,0
 114+ 9813 E1           	pop hl
 115+ 9814 18 04        	jr 4F
 116+ 9816 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9818 18 15            jr 10F
 118+ 981A
 119+ 981A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 981A              ; _para indicar con E="2" en caso necesario.
 121+ 981A
 122+ 981A E5           4 push hl
 123+ 981B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 981C CD 24 95     	call calcula_tercio
 125+ 981F FE 01        	cp 1
 126+ 9821 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9823 CD 31 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9826 28 04            jr z,9F
 129+ 9828 30 02            jr nc,9F
 130+ 982A 18 02        	jr 8F
 131+ 982C 1E 02        9 ld e,2
 132+ 982E C1           8 pop bc
 133+ 982F E1           10 pop hl
 134+ 9830 C9           5 ret
 135+ 9831
 136+ 9831              ; --------------------
 137+ 9831              ;
 138+ 9831              ; 25/08/22
 139+ 9831
 140+ 9831 CD 24 95     Comprueba_centro call calcula_tercio
 141+ 9834 67               ld h,a
 142+ 9835 08           	ex af,af
 143+ 9836 FE 02        	cp 2
 144+ 9838 38 07        	jr c,1F
 145+ 983A 28 05        	jr z,1F
 146+ 983C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 983F 18 03        	jr 2F
 148+ 9841 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9844 08           2 ex af,af
 150+ 9845 A7               and a
 151+ 9846 ED 42            sbc hl,bc
 152+ 9848 C9               ret
 153+ 9849
 154+ 9849              ; *********************************************************************************************************************************************************************************************
 155+ 9849              ;
 156+ 9849              ;   16/8/22
 157+ 9849              ;
 158+ 9849              ;	Comprueba_limite_vertical
 159+ 9849              ;
 160+ 9849              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9849              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9849              ;
 163+ 9849
 164+ 9849 2A 08 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 984C 7D           	ld a,l
 166+ 984D E6 1F        	and $1F
 167+ 984F 57           	ld d,a
 168+ 9850 3A 1B 8C     	ld a,(Limite_vertical)
 169+ 9853 BA           	cp d 											; Límite - Posición.
 170+ 9854 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9855 3A 17 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9858 CB 47        	bit 0,a
 173+ 985A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 985C
 175+ 985C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 985C
 177+ 985C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 985D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 985F
 180+ 985F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 985F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 985F
 183+ 985F 3A F9 8B         ld a,(Coordenada_X)
 184+ 9862 16 0F            ld d,Centro_izquierda
 185+ 9864 A7               and a
 186+ 9865 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9866 28 1E            jr z,3F
 188+ 9868 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 986A              ;                                                    ; _salimos sin modificar nada.
 190+ 986A 18 0E            jr 2F
 191+ 986C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 986D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 986F
 194+ 986F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 986F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 986F
 197+ 986F 3A F9 8B         ld a,(Coordenada_X)
 198+ 9872 16 10            ld d,Centro_derecha
 199+ 9874 A7               and a
 200+ 9875 92               sub d
 201+ 9876 28 0E            jr z,3F
 202+ 9878 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 987A              ;                                                    ; _salimos sin modificar nada.
 204+ 987A CB 43        2 bit 0,e
 205+ 987C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 987E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 987F CD 13 99         call Modificaccionne
 208+ 9882 C1           	pop bc
 209+ 9883 CD 23 99         call Inicializacion
 210+ 9886 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9887
 212+ 9887              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9887
 214+ 9887 C5           4 push bc
 215+ 9888 01 07 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 988B 0A           	ld a,(bc)
 217+ 988C 3D           	dec a
 218+ 988D 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 988E 7D           	ld a,l
 220+ 988F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9890 CB 47        	bit 0,a
 222+ 9892 28 03        	jr z,5F
 223+ 9894 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9895 18 2E        	jr 7F
 225+ 9897
 226+ 9897              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9897
 228+ 9897 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9898 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9899 3A 05 8C     	ld a,(Ctrl_0)
 231+ 989C CB 4F        	bit 1,a
 232+ 989E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 98A0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 98A1
 235+ 98A1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 98A1
 237+ 98A1 1C               inc e
 238+ 98A2 1D               dec e
 239+ 98A3 20 07            jr nz,12F
 240+ 98A5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 98A6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 98A7 22 08 8C     	ld (Posicion_actual),hl
 243+ 98AA 18 44        13 jr 9F
 244+ 98AC CB 43        12 bit 0,e
 245+ 98AE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 98B0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 98B0 C1           	pop bc
 248+ 98B1 18 D3        	jr 3B
 249+ 98B3 80           14 add b
 250+ 98B4 6F               ld l,a
 251+ 98B5 22 08 8C     	ld (Posicion_actual),hl
 252+ 98B8 CD 13 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 98BB 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 98BD E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 98BF 32 05 8C         ld (Ctrl_0),a
 256+ 98C2 F1           	pop af
 257+ 98C3 18 2B        	jr 9F
 258+ 98C5
 259+ 98C5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 98C5
 261+ 98C5 F5           7 push af
 262+ 98C6 3A 05 8C     	ld a,(Ctrl_0)
 263+ 98C9 CB 47        	bit 0,a
 264+ 98CB 20 1D        	jr nz,8F
 265+ 98CD F1           	pop af
 266+ 98CE
 267+ 98CE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 98CE
 269+ 98CE 1C           	inc e
 270+ 98CF 1D               dec e
 271+ 98D0 20 07            jr nz,10F
 272+ 98D2 90           	sub b
 273+ 98D3 6F               ld l,a
 274+ 98D4 22 08 8C     	ld (Posicion_actual),hl
 275+ 98D7 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 98D9              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 98D9 CB 43        10 bit 0,e
 278+ 98DB 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 98DD              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 98DD C1           	pop bc
 281+ 98DE 18 A6        	jr 3B
 282+ 98E0 90           16 sub b
 283+ 98E1 6F               ld l,a
 284+ 98E2 22 08 8C     	ld (Posicion_actual),hl
 285+ 98E5 CD 13 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 98E8 18 06            jr 9F
 287+ 98EA E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 98EC 32 05 8C         ld (Ctrl_0),a
 289+ 98EF F1           	pop af
 290+ 98F0 C1           9 pop bc
 291+ 98F1 1E 00        	ld e,0
 292+ 98F3 CD 23 99         call Inicializacion
 293+ 98F6 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98F7 08           	ex af,af
 295+ 98F8 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98F9 18 8B            jr 3B
 297+ 98FB
 298+ 98FB              ; --------------------
 299+ 98FB
 300+ 98FB 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98FD CD 46 9A     1 call PreviousScan
 302+ 9900 10 FB            djnz 1B
 303+ 9902 22 08 8C     	ld (Posicion_actual),hl
 304+ 9905 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9906 C9           	ret
 306+ 9907
 307+ 9907              ; --------------------
 308+ 9907
 309+ 9907 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9909 CD 37 9A     1 call NextScan
 311+ 990C 10 FB            djnz 1B
 312+ 990E 22 08 8C     	ld (Posicion_actual),hl
 313+ 9911 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9912 C9           	ret
 315+ 9913
 316+ 9913              ; --------------------
 317+ 9913              ;
 318+ 9913              ;	22/01/23
 319+ 9913              ;
 320+ 9913              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9913              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9913              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9913
 324+ 9913
 325+ 9913              Modificaccionne
 326+ 9913
 327+ 9913 3A 17 8C     	ld a,(Cuad_objeto)
 328+ 9916 FE 02        	cp 2
 329+ 9918 CC FB 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 991B DC FB 98         call c,Modifica_Pos_actual
 331+ 991E C8           	ret z
 332+ 991F CD 07 99         call Modifica_Pos_actual2
 333+ 9922 C9               ret
 334+ 9923
 335+ 9923              ; *************************************************************************************************************************************************************************************************
 336+ 9923              ;
 337+ 9923              ;	13/8/22
 338+ 9923              ;
 339+ 9923              ;	Inicializacion
 340+ 9923              ;
 341+ 9923              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9923              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9923              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9923              ;
 345+ 9923              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9923              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9923              ;	_ desaparece/aparece.
 348+ 9923
 349+ 9923              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9923              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9923              ;
 352+ 9923              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9923              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9923              ; 		   [E] ="0"
 355+ 9923
 356+ 9923              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9923
 358+ 9923 CD 24 95     Inicializacion call calcula_tercio
 359+ 9926 28 36        	jr z,primit
 360+ 9928 E6 02        	and 2
 361+ 992A 20 07        	jr nz,segmit
 362+ 992C 7D           	ld a,l
 363+ 992D FE 7F        	cp $7f
 364+ 992F 38 2D        	jr c,primit
 365+ 9931 28 2B        	jr z,primit
 366+ 9933 CD 99 99     segmit call column
 367+ 9936 38 13        	jr c,tercuad
 368+ 9938 3E 04        cuarcuad ld a,4
 369+ 993A 32 17 8C     	ld (Cuad_objeto),a
 370+ 993D 21 20 48     	ld hl,$4820
 371+ 9940 22 19 8C     	ld (Limite_horizontal),hl
 372+ 9943 21 1B 8C     	ld hl,Limite_vertical
 373+ 9946 36 0D        	ld (hl),$0d
 374+ 9948 08           	ex af,af
 375+ 9949 18 3C        	jr 1F
 376+ 994B              tercuad
 377+ 994B 3E 03        	ld a,3
 378+ 994D 32 17 8C     	ld (Cuad_objeto),a
 379+ 9950 21 20 48     	ld hl,$4820
 380+ 9953 22 19 8C     	ld (Limite_horizontal),hl
 381+ 9956 21 1B 8C     	ld hl,Limite_vertical
 382+ 9959 36 12        	ld (hl),$12
 383+ 995B 08           	ex af,af
 384+ 995C 18 29        	jr 1F
 385+ 995E CD 99 99     primit call column
 386+ 9961 38 13        	jr c, primcuad
 387+ 9963              segcuad
 388+ 9963 3E 02        	ld a,2
 389+ 9965 32 17 8C     	ld (Cuad_objeto),a
 390+ 9968 21 C0 4F     	ld hl,$4fc0
 391+ 996B 22 19 8C     	ld (Limite_horizontal),hl
 392+ 996E 21 1B 8C     	ld hl,Limite_vertical
 393+ 9971 36 0D        	ld (hl),$0d
 394+ 9973 08           	ex af,af
 395+ 9974 18 11        	jr 1F
 396+ 9976              primcuad
 397+ 9976 3E 01        	ld a,1
 398+ 9978 32 17 8C     	ld (Cuad_objeto),a
 399+ 997B 21 C0 4F     	ld hl,$4fc0
 400+ 997E 22 19 8C     	ld (Limite_horizontal),hl
 401+ 9981 21 1B 8C     	ld hl,Limite_vertical
 402+ 9984 36 12        	ld (hl),$12
 403+ 9986 08           	ex af,af
 404+ 9987
 405+ 9987 C5           1 push bc
 406+ 9988 E5           	push hl
 407+ 9989 D5           	push de
 408+ 998A
 409+ 998A 2A 08 8C     	ld hl,(Posicion_actual)
 410+ 998D CD 42 95     	call Genera_coordenadas
 411+ 9990
 412+ 9990 D1           	pop de
 413+ 9991 E1           	pop hl
 414+ 9992 C1           	pop bc
 415+ 9993
 416+ 9993 21 05 8C     	ld hl,Ctrl_0
 417+ 9996 CB EE        	set 5,(hl)
 418+ 9998 C9           	ret
 419+ 9999
 420+ 9999              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9999
 422+ 9999              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9999              ;
 424+ 9999              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9999
 426+ 9999 7D           column ld a,l
 427+ 999A E6 1F        	and $1f
 428+ 999C FE 10         	cp $10
 429+ 999E C9            	ret
 430+ 999F
 431+ 999F              ; --------------------------------------------------------------------------------------------------------------------
 432+ 999F              ;
 433+ 999F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 999F              ;
 435+ 999F              ; 14/12/22
 436+ 999F              ;
 437+ 999F              ;	Modifica: A y BC.
 438+ 999F
 439+ 999F 3A 17 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 99A2 E6 01        	and 1
 441+ 99A4 28 17        	jr z,1F
 442+ 99A6
 443+ 99A6              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 99A6
 445+ 99A6 3A F9 8B     	ld a,(Coordenada_X)
 446+ 99A9 47           	ld b,a
 447+ 99AA 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 99AB 79           	ld a,c
 449+ 99AC 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 99AD 38 08        	jr c,2F
 451+ 99AF 47           	ld b,a
 452+ 99B0 79           	ld a,c
 453+ 99B1 90           	sub b
 454+ 99B2 32 18 8C     	ld (Columnas),a
 455+ 99B5 18 1B        	jr 4F
 456+ 99B7 79           2 ld a,c
 457+ 99B8 32 18 8C     	ld (Columnas),a
 458+ 99BB 18 15        	jr 4F
 459+ 99BD
 460+ 99BD              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 99BD
 462+ 99BD 3A F9 8B     1 ld a,(Coordenada_X)
 463+ 99C0 81           	add c
 464+ 99C1 3D           	dec a
 465+ 99C2 D6 1F        	sub $1f
 466+ 99C4 38 08        	jr c,3F
 467+ 99C6 47           	ld b,a
 468+ 99C7 79           	ld a,c
 469+ 99C8 90           	sub b
 470+ 99C9 32 18 8C     	ld (Columnas),a
 471+ 99CC 18 04        	jr 4F
 472+ 99CE 79           3 ld a,c
 473+ 99CF 32 18 8C     	ld (Columnas),a
 474+ 99D2 D9           4 exx
 475+ 99D3 4F           	ld c,a
 476+ 99D4 D9           	exx
 477+ 99D5 C9            ret
 478+ 99D6
 479+ 99D6              ; --------------------------------------------------------------------------------------------------------------------
 480+ 99D6              ;
 481+ 99D6              ;   19/7/23
 482+ 99D6              ;
 483+ 99D6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 99D6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 99D6              ;
 486+ 99D6              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 99D6              ;			HL e IY Contienen (Puntero_objeto).
 488+ 99D6              ;
 489+ 99D6              ;	DESTRUYE: HL,B Y A.
 490+ 99D6
 491+ 99D6 3A 17 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 99D9 FE 02        	cp 2
 493+ 99DB 38 18        	jr c,1F
 494+ 99DD 28 16        	jr z,1F
 495+ 99DF E6 01        	and 1
 496+ 99E1 28 0D        	jr z,3F
 497+ 99E3
 498+ 99E3              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 99E3
 500+ 99E3 CD 1F 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 99E6
 502+ 99E6 7D           9 ld a,l
 503+ 99E7 E6 1F        	and $1f
 504+ 99E9 28 2A        	jr z,7F
 505+ 99EB 2B           	dec hl
 506+ 99EC 10 F8        	djnz 9B
 507+ 99EE 18 25        	jr 7F
 508+ 99F0
 509+ 99F0              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 99F0
 511+ 99F0 2A 08 8C     3 ld hl,(Posicion_actual)
 512+ 99F3 18 20        	jr 7F
 513+ 99F5
 514+ 99F5 28 14        1 jr z,2F
 515+ 99F7
 516+ 99F7              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99F7
 518+ 99F7 CD 1F 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99FA
 520+ 99FA 7D           4 ld a,l
 521+ 99FB E6 1F        	and $1f
 522+ 99FD 28 03        	jr z,6F
 523+ 99FF 2B           	dec hl
 524+ 9A00 10 F8        	djnz 4B
 525+ 9A02 06 0F        6 ld b,15
 526+ 9A04 CD 46 9A     5 call PreviousScan
 527+ 9A07 10 FB        	djnz 5B
 528+ 9A09 18 0A        	jr 7F
 529+ 9A0B
 530+ 9A0B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9A0B
 532+ 9A0B CD 1F 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9A0E 06 0F        	ld b,15
 534+ 9A10 CD 46 9A     8 call PreviousScan
 535+ 9A13 10 FB        	djnz 8B
 536+ 9A15
 537+ 9A15 E5           7 push hl
 538+ 9A16 DD E1        	pop ix
 539+ 9A18
 540+ 9A18 2A 0A 8C     	ld hl,(Puntero_objeto)
 541+ 9A1B E5           	push hl
 542+ 9A1C FD E1        	pop iy
 543+ 9A1E
 544+ 9A1E C9           	ret
 545+ 9A1F
 546+ 9A1F              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9A1F              ;
 548+ 9A1F              ;	2/1/23
 549+ 9A1F              ;
 550+ 9A1F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9A1F              ;
 552+ 9A1F              ;	Tras esta rutina tenemos:
 553+ 9A1F              ;
 554+ 9A1F              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9A1F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9A1F              ;
 557+ 9A1F              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9A1F
 559+ 9A1F 2A 08 8C     Operandos ld hl,(Posicion_actual)
 560+ 9A22 3A 18 8C     	ld a,(Columnas)
 561+ 9A25 3D           	dec a
 562+ 9A26 20 01        	jr nz,1F
 563+ 9A28 3C           	inc a
 564+ 9A29 47           1 ld b,a
 565+ 9A2A C9           	ret
 566+ 9A2B
 567+ 9A2B              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9A2B              ;
 569+ 9A2B              ;	Prepara_draw
 570+ 9A2B              ;
 571+ 9A2B              ;	Es una rutina de carga.
 572+ 9A2B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9A2B              ;
 574+ 9A2B              ;	FUNCIONAMIENTO:
 575+ 9A2B              ;
 576+ 9A2B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9A2B              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9A2B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9A2B              ;
 580+ 9A2B              ;	DESTRUYE:
 581+ 9A2B              ;
 582+ 9A2B              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9A2B
 584+ 9A2B 21 06 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9A2E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9A2F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9A30 4E           	ld c,(hl)
 588+ 9A31 2A 08 8C     	ld hl,(Posicion_actual)
 589+ 9A34 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9A36 C9           	ret
 591+ 9A37
 592+ 9A37              ;----------------------------------------------------------------------------------------------------------------
 593+ 9A37              ;
 594+ 9A37              ;	5/08/22
 595+ 9A37              ;
 596+ 9A37              ;   NextScan.
 597+ 9A37              ;
 598+ 9A37              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9A37              ;
 600+ 9A37              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9A37              ;
 602+ 9A37              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9A37              ;
 604+ 9A37              ;       DESTRUIDOS: AF y HL !!!
 605+ 9A37              ;
 606+ 9A37              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9A37              ;
 608+ 9A37
 609+ 9A37 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A38 7C               ld a,h
 611+ 9A39 E6 07            and 7
 612+ 9A3B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A3C
 614+ 9A3C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A3D C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A3F 6F               ld l,a
 617+ 9A40 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A41
 619+ 9A41 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A42 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A44 67               ld h,a
 622+ 9A45 C9               ret
 623+ 9A46
 624+ 9A46              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A46              ;
 626+ 9A46              ;	5/08/22
 627+ 9A46              ;
 628+ 9A46              ;   PreviousScan.
 629+ 9A46              ;
 630+ 9A46              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A46              ;
 632+ 9A46              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A46              ;
 634+ 9A46              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A46              ;
 636+ 9A46              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A46              ;
 638+ 9A46              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A46              ;
 640+ 9A46
 641+ 9A46 7C           PreviousScan ld a,h
 642+ 9A47 25               dec h               ; Dec H.
 643+ 9A48 E6 07            and 7
 644+ 9A4A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A4B
 646+ 9A4B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A4C D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A4E 6F               ld l,a
 649+ 9A4F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A50
 651+ 9A50 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A51 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A53 67               ld h,a
 654+ 9A54 C9               ret
 655+ 9A55
 656+ 9A55
 657+ 9A55
 658+ 9A55
 659+ 9A55
 660+ 9A55
 661+ 9A55
 662+ 9A55
 663+ 9A55
 664+ 9A55
 665+ 9A55
 666+ 9A55
# file closed: Draw_XOR.asm
2188  9A55              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A55
   2+ 9A55              ; ******************************************************************************************************************************************************************************************
   3+ 9A55              ;
   4+ 9A55              ;   20/05/23
   5+ 9A55              ;
   6+ 9A55              ;	Recompone_posicion_inicio
   7+ 9A55              ;
   8+ 9A55              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A55              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A55              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A55              ;	_ a una u otra rutina.
  12+ 9A55
  13+ 9A55              Recompone_posicion_inicio
  14+ 9A55
  15+ 9A55 2A 15 8C     	ld hl,(Posicion_inicio)
  16+ 9A58 7D           	ld a,l
  17+ 9A59 E6 1F        	and $1f
  18+ 9A5B 28 16        	jr z,1F
  19+ 9A5D
  20+ 9A5D FE 1F        	cp $1f
  21+ 9A5F 28 0D        	jr z,3F
  22+ 9A61
  23+ 9A61 21 04 8C     	ld hl,Ctrl_2
  24+ 9A64 CB C6        	set 0,(hl)
  25+ 9A66 2A 0A 8C     	ld hl,(Puntero_objeto)
  26+ 9A69 22 36 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A6C 18 08        	jr 2F
  28+ 9A6E
  29+ 9A6E CD 1C 9C     3 call Mov_left
  30+ 9A71 18 03        	jr 2F
  31+ 9A73
  32+ 9A73 CD F9 9A     1 call Mov_right
  33+ 9A76 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A79 22 0A 8C     	ld (Puntero_objeto),hl
  35+ 9A7C C9           	ret
  36+ 9A7D
  37+ 9A7D              ; ******************************************************************************************************************************************************************************************
  38+ 9A7D              ;
  39+ 9A7D              ;   27/05/23
  40+ 9A7D              ;
  41+ 9A7D              ;	Mov_down
  42+ 9A7D              ;
  43+ 9A7D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A7D              ;
  45+ 9A7D              ;
  46+ 9A7D              Mov_down
  47+ 9A7D
  48+ 9A7D CD E7 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A80              ;																	; _ repone (Puntero_objeto).
  50+ 9A80 21 05 8C     	ld hl,Ctrl_0
  51+ 9A83 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A85              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A85              ; 																	; _ en el caso de que no lo haya.
  54+ 9A85 3A 20 8C     	ld a,(Vel_down)
  55+ 9A88 47           	ld b,a
  56+ 9A89 2A 08 8C         ld hl,(Posicion_actual)
  57+ 9A8C CD 24 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A8F E6 02        	and 2
  59+ 9A91 28 17        	jr z,1F
  60+ 9A93
  61+ 9A93              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A93              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A93
  64+ 9A93 7C           	ld a,h
  65+ 9A94 FE 57        	cp $57
  66+ 9A96 20 12        	jr nz,1F
  67+ 9A98
  68+ 9A98 7D           	ld a,l
  69+ 9A99 C6 20        	add $20
  70+ 9A9B 30 0D        	jr nc,1F
  71+ 9A9D
  72+ 9A9D              ; ------------------------------
  73+ 9A9D              ;
  74+ 9A9D              ;	12/01/24
  75+ 9A9D
  76+ 9A9D              ;	call Reaparece_arriba
  77+ 9A9D CD A9 9D     	call Reinicio
  78+ 9AA0
  79+ 9AA0              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9AA0
  81+ 9AA0 3A 6F 8C     	ld a,(Ctrl_3)
  82+ 9AA3 CB CF        	set 1,a
  83+ 9AA5 32 6F 8C     	ld (Ctrl_3),a
  84+ 9AA8
  85+ 9AA8 18 08        	jr 3F
  86+ 9AAA              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9AAA              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9AAA              ; ------------------------------
  89+ 9AAA
  90+ 9AAA CD 37 9A     1 call NextScan
  91+ 9AAD 22 08 8C     	ld (Posicion_actual),hl
  92+ 9AB0 10 DA            djnz 2B
  93+ 9AB2 CD 42 95     3 call Genera_coordenadas
  94+ 9AB5 C9           	ret
  95+ 9AB6
  96+ 9AB6              ; ******************************************************************************************************************************************************************************************
  97+ 9AB6              ;
  98+ 9AB6              ;   27/05/23
  99+ 9AB6              ;
 100+ 9AB6              ;	Mov_up
 101+ 9AB6              ;
 102+ 9AB6              ; 	Mueve el Sprite hacia arriba.
 103+ 9AB6              ;
 104+ 9AB6              ;
 105+ 9AB6              Mov_up
 106+ 9AB6
 107+ 9AB6 CD E7 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9AB9              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9AB9 21 05 8C     	ld hl,Ctrl_0
 110+ 9ABC CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9ABE              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9ABE              ; 																		; _ en el caso de que no lo haya.
 113+ 9ABE 3A 1F 8C     	ld a,(Vel_up)
 114+ 9AC1 47           	ld b,a
 115+ 9AC2 2A 08 8C     	ld hl,(Posicion_actual)
 116+ 9AC5 CD 24 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9AC8 A7           	and a
 118+ 9AC9 20 10        	jr nz,1F
 119+ 9ACB
 120+ 9ACB              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9ACB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9ACB
 123+ 9ACB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9ACC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9ACE 20 0B            jr nz,1F
 126+ 9AD0 7D               ld a,l
 127+ 9AD1 D6 20            sub $20
 128+ 9AD3 30 06            jr nc,1F
 129+ 9AD5 25               dec h
 130+ 9AD6
 131+ 9AD6              ; -----------------------------
 132+ 9AD6 CD 8A 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9AD9              ;	call Reinicio
 134+ 9AD9              ; -----------------------------
 135+ 9AD9
 136+ 9AD9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9ADB CD 46 9A     1 call PreviousScan
 138+ 9ADE 22 08 8C     	ld (Posicion_actual),hl
 139+ 9AE1 10 E2            djnz 3B
 140+ 9AE3 CD 42 95     2 call Genera_coordenadas
 141+ 9AE6 C9           	ret
 142+ 9AE7
 143+ 9AE7              ; -----------------------------
 144+ 9AE7              ;
 145+ 9AE7              ;	27/5/23
 146+ 9AE7              ;
 147+ 9AE7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9AE7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9AE7              ;
 150+ 9AE7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9AE7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9AE7              ;
 153+ 9AE7              ;	Modifica: A y (Puntero_objeto).
 154+ 9AE7
 155+ 9AE7 3A 04 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9AEA CB 47        	bit 0,a
 157+ 9AEC C8           	ret z
 158+ 9AED CB 87        	res 0,a
 159+ 9AEF 32 04 8C     	ld (Ctrl_2),a
 160+ 9AF2 2A 36 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9AF5 22 0A 8C     	ld (Puntero_objeto),hl
 162+ 9AF8 C9           	ret
 163+ 9AF9
 164+ 9AF9              ; ******************************************************************************************************************************************************************************************
 165+ 9AF9              ;
 166+ 9AF9              ;	19/10/22
 167+ 9AF9              ;
 168+ 9AF9              ;	Mov_right.
 169+ 9AF9              ;
 170+ 9AF9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AF9              ;
 172+ 9AF9
 173+ 9AF9 3A 05 8C     Mov_right ld a,(Ctrl_0)
 174+ 9AFC CB 77        	bit 6,a
 175+ 9AFE 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B00
 177+ 9B00 CD 38 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B03 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B04
 180+ 9B04 21 05 8C     	ld hl,Ctrl_0
 181+ 9B07 CB E6        	set 4,(hl)
 182+ 9B09 18 52        	jr 8F
 183+ 9B0B
 184+ 9B0B 21 05 8C     10 ld hl,Ctrl_0
 185+ 9B0E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9B10              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9B10              ; 																	; _ en el caso de que no lo haya.
 188+ 9B10 3A F9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9B13 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9B15 20 46        	jr nz,8F
 191+ 9B17
 192+ 9B17 3A 0C 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9B1A A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9B1B 28 40        	jr z,8F
 195+ 9B1D
 196+ 9B1D              ; ---------- ---------- ----------
 197+ 9B1D              ;
 198+ 9B1D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9B1D
 200+ 9B1D 3A 1E 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9B20 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9B22 28 11        	jr z,1F
 203+ 9B24 38 06        	jr c,6F
 204+ 9B26 FE 04        	cp 4
 205+ 9B28 28 14        	jr z,7F
 206+ 9B2A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9B2C
 208+ 9B2C              ; ---------- ---------- ----------
 209+ 9B2C              ;
 210+ 9B2C              ; Perfiles de velocidad
 211+ 9B2C              ;
 212+ 9B2C
 213+ 9B2C 3A 0C 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9B2F FE FE        	cp $fe
 215+ 9B31 20 2A        	jr nz,8F
 216+ 9B33 18 10        	jr 3F
 217+ 9B35 3A 0C 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B38 FE FD        	cp $fd
 219+ 9B3A 20 21        	jr nz,8F
 220+ 9B3C 18 07        	jr 3F
 221+ 9B3E 3A 0C 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B41 FE FB        	cp $fb
 223+ 9B43 20 18        	jr nz,8F
 224+ 9B45
 225+ 9B45              ; ---------- ---------- ----------
 226+ 9B45
 227+ 9B45              3
 228+ 9B45 CD 78 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B48              ;	call Reinicio
 230+ 9B48
 231+ 9B48              ; ---------- ---------- ----------
 232+ 9B48              ;
 233+ 9B48              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B48
 235+ 9B48 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B4A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B4B CD 64 9B     	call DESPLZ_DER
 238+ 9B4E C1           	pop bc
 239+ 9B4F 10 F9        	djnz 5B
 240+ 9B51 2A 08 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B54 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B55 22 08 8C     	ld (Posicion_actual),hl
 243+ 9B58 CD 42 95     	call Genera_coordenadas
 244+ 9B5B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B5D
 246+ 9B5D              ; ---------- ---------- ----------
 247+ 9B5D
 248+ 9B5D 2A 08 8C     8 ld hl,(Posicion_actual)
 249+ 9B60 CD 64 9B     	call DESPLZ_DER
 250+ 9B63 C9           2 ret
 251+ 9B64
 252+ 9B64              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B64              ;
 254+ 9B64              ;	22/9/22
 255+ 9B64              ;
 256+ 9B64
 257+ 9B64 CD 73 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B67 CD BF 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B6A CD E8 9B         call Ciclo_completo
 260+ 9B6D 21 05 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B70 CB FE        	set 7,(hl)
 262+ 9B72 C9           	ret
 263+ 9B73
 264+ 9B73              ; ******************************************************************************************************************************************************************************************
 265+ 9B73              ;	15/02/23
 266+ 9B73              ;
 267+ 9B73
 268+ 9B73 3A 1E 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B76 47           	ld b,a
 270+ 9B77 2A 11 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B7A 23           1 inc hl
 272+ 9B7B 23           	inc hl
 273+ 9B7C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B7E 22 11 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B81 CD 2E 91     	call Extrae_address
 276+ 9B84 22 0A 8C     	ld (Puntero_objeto),hl
 277+ 9B87
 278+ 9B87              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B87
 280+ 9B87              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B87              ; Cuántos movimientos hemos hecho ??
 282+ 9B87              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B87
 284+ 9B87 2A 0D 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B8A EB           	ex de,hl
 286+ 9B8B A7           	and a
 287+ 9B8C ED 52        	sbc hl,de
 288+ 9B8E CB 3D        	srl l
 289+ 9B90 3E 08        6 ld a,8
 290+ 9B92 95           	sub l
 291+ 9B93 30 1E        	jr nc,3F
 292+ 9B95
 293+ 9B95              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B95              ; B="0".
 295+ 9B95
 296+ 9B95 04           4 inc b
 297+ 9B96 3C           	inc a
 298+ 9B97 20 FC        	jr nz,4B
 299+ 9B99 78           	ld a,b
 300+ 9B9A 08           	ex af,af
 301+ 9B9B 2A 0D 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B9E 23           5 inc hl
 303+ 9B9F 23           	inc hl
 304+ 9BA0 10 FC        	djnz 5B
 305+ 9BA2 22 11 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9BA5 CD 2E 91     	call Extrae_address
 307+ 9BA8 22 0A 8C     	ld (Puntero_objeto),hl
 308+ 9BAB
 309+ 9BAB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9BAB              ; _(Posicion_actual).
 311+ 9BAB
 312+ 9BAB 21 08 8C     	ld hl,Posicion_actual
 313+ 9BAE 34           	inc (hl)
 314+ 9BAF 08               ex af,af
 315+ 9BB0 6F           	ld l,a
 316+ 9BB1 18 DD        	jr 6B
 317+ 9BB3
 318+ 9BB3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9BB3
 320+ 9BB3 47           3 ld b,a
 321+ 9BB4 2A 0F 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9BB7 23           2 inc hl
 323+ 9BB8 23           	inc hl
 324+ 9BB9 10 FC        	djnz 2B
 325+ 9BBB 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9BBE C9           8 ret
 327+ 9BBF
 328+ 9BBF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9BBF              ;
 330+ 9BBF              ;	24/7/22
 331+ 9BBF              ;
 332+ 9BBF              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9BBF              ;
 334+ 9BBF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9BBF              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9BBF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9BBF
 338+ 9BBF 3A 0C 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9BC2 A7           	and a
 340+ 9BC3 20 1F        	jr nz,1F
 341+ 9BC5 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9BC7 32 0C 8C         ld (CTRL_DESPLZ),a
 343+ 9BCA
 344+ 9BCA 21 07 8C     	ld hl,Columns
 345+ 9BCD 34           	inc (hl)
 346+ 9BCE 3A 17 8C     	ld a,(Cuad_objeto)
 347+ 9BD1 E6 01        	and 1
 348+ 9BD3 28 0F        	jr z,1F
 349+ 9BD5 2A 08 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9BD8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9BD9 22 08 8C     	ld (Posicion_actual),hl
 352+ 9BDC CD 42 95     	call Genera_coordenadas
 353+ 9BDF CD 44 9D     	call Inc_CTRL_DESPLZ
 354+ 9BE2 18 03        	jr 2F
 355+ 9BE4 CD 44 9D     1 call Inc_CTRL_DESPLZ
 356+ 9BE7 C9           2 ret
 357+ 9BE8
 358+ 9BE8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9BE8              ;
 360+ 9BE8              ;	24/7/22
 361+ 9BE8              ;
 362+ 9BE8              ;	Ciclo_completo.
 363+ 9BE8              ;
 364+ 9BE8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9BE8              ;
 366+ 9BE8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9BE8              ; 	Decrementamos (Columns).
 368+ 9BE8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9BE8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9BE8
 371+ 9BE8
 372+ 9BE8 3A 0C 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9BEB FE FF        	cp $ff
 374+ 9BED 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9BEF E6 F0        	and $f0
 376+ 9BF1 20 28        	jr nz,3F
 377+ 9BF3
 378+ 9BF3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BF3
 380+ 9BF3 3A 0C 8C     	ld a,(CTRL_DESPLZ)
 381+ 9BF6 47           	ld b,a
 382+ 9BF7 3E F8        	ld a,$f8
 383+ 9BF9 80           	add b
 384+ 9BFA 32 0C 8C     	ld (CTRL_DESPLZ),a
 385+ 9BFD 18 1C        	jr 3F
 386+ 9BFF 21 07 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9C02 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9C03 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9C04 32 0C 8C     	ld (CTRL_DESPLZ),a
 390+ 9C07 3A 17 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9C0A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9C0C 20 0A        	jr nz,2F
 393+ 9C0E 2A 08 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9C11 23           	inc hl
 395+ 9C12 22 08 8C     	ld (Posicion_actual),hl
 396+ 9C15 CD 42 95     	call Genera_coordenadas
 397+ 9C18
 398+ 9C18              ; Inicia el puntero de Sprite.
 399+ 9C18
 400+ 9C18 CD 43 91     2 call Inicia_puntero_objeto_der
 401+ 9C1B C9           3 ret
 402+ 9C1C
 403+ 9C1C              ; ******************************************************************************************************************************************************************************************
 404+ 9C1C              ;
 405+ 9C1C              ;	15/02/23
 406+ 9C1C              ;
 407+ 9C1C              ;	Mov_left.
 408+ 9C1C              ;
 409+ 9C1C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9C1C              ;
 411+ 9C1C              Mov_left
 412+ 9C1C
 413+ 9C1C 21 05 8C     	ld hl,Ctrl_0
 414+ 9C1F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9C21              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9C21              ; 																	; _ en el caso de que no lo haya.
 417+ 9C21 3A 05 8C     	ld a,(Ctrl_0)
 418+ 9C24 CB 77        	bit 6,a
 419+ 9C26 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9C28
 421+ 9C28 CD 3E 9D     	call Stop_Amadeus_left
 422+ 9C2B C8           	ret z
 423+ 9C2C 20 4A        	jr nz,8F
 424+ 9C2E
 425+ 9C2E 3A F9 8B     11 ld a,(Coordenada_X)
 426+ 9C31 A7           	and a
 427+ 9C32 20 44        	jr nz,8F
 428+ 9C34
 429+ 9C34 3A 0C 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9C37 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C38 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C3A
 433+ 9C3A              ; ---------- ---------- ----------
 434+ 9C3A
 435+ 9C3A 3A 1D 8C     	ld a,(Vel_left)
 436+ 9C3D FE 02        	cp 2
 437+ 9C3F 28 0F        	jr z,1F
 438+ 9C41 38 04        	jr c,6F
 439+ 9C43 FE 04        	cp 4
 440+ 9C45 28 12        	jr z,7F
 441+ 9C47
 442+ 9C47              ; ---------- ---------- ----------
 443+ 9C47
 444+ 9C47 3A 0C 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C4A FE F8        	cp $f8
 446+ 9C4C 20 2A        	jr nz,8F
 447+ 9C4E 18 10        	jr 4F
 448+ 9C50 3A 0C 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C53 FE F9        	cp $f9
 450+ 9C55 20 21        	jr nz,8F
 451+ 9C57 18 07        	jr 4F
 452+ 9C59 3A 0C 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C5C FE FB        	cp $fb
 454+ 9C5E 20 18        	jr nz,8F
 455+ 9C60
 456+ 9C60              ; ---------- ---------- ----------
 457+ 9C60
 458+ 9C60              4
 459+ 9C60 CD 66 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C63              ;	call Reinicio
 461+ 9C63
 462+ 9C63              ; ---------- ---------- ----------
 463+ 9C63
 464+ 9C63 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C65 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C66
 467+ 9C66              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C66              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C66
 470+ 9C66 CD 7F 9C     	call DESPLZ_IZQ
 471+ 9C69 C1           	pop bc
 472+ 9C6A 10 F9        	djnz 5B
 473+ 9C6C 2A 08 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C6F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C70 22 08 8C     	ld (Posicion_actual),hl
 476+ 9C73 CD 42 95     	call Genera_coordenadas
 477+ 9C76 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C78
 479+ 9C78              ; ---------- ---------- ----------
 480+ 9C78
 481+ 9C78              ; Movemos, no hay recolocación.
 482+ 9C78
 483+ 9C78 2A 08 8C     8 ld hl,(Posicion_actual)
 484+ 9C7B CD 7F 9C     	call DESPLZ_IZQ
 485+ 9C7E C9           2 ret
 486+ 9C7F
 487+ 9C7F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C7F              ;
 489+ 9C7F              ;	22/9/22
 490+ 9C7F
 491+ 9C7F              DESPLZ_IZQ
 492+ 9C7F
 493+ 9C7F CD 8E 9C     	call Desplaza_izquierda
 494+ 9C82 CD DA 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C85 CD 02 9D     	call Ciclo_completo_2
 496+ 9C88 21 05 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C8B CB BE        	res 7,(hl)
 498+ 9C8D C9           	ret
 499+ 9C8E
 500+ 9C8E              Desplaza_izquierda
 501+ 9C8E
 502+ 9C8E 3A 1D 8C     	ld a,(Vel_left)
 503+ 9C91 47           	ld b,a
 504+ 9C92 2A 13 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C95 23           1 inc hl
 506+ 9C96 23           	inc hl
 507+ 9C97 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C99 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C9C CD 2E 91     	call Extrae_address
 510+ 9C9F 22 0A 8C     	ld (Puntero_objeto),hl
 511+ 9CA2
 512+ 9CA2              ; Modifica (Puntero_DESPLZ_der).
 513+ 9CA2
 514+ 9CA2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9CA2              ; Cuántos movimientos hemos hecho ??
 516+ 9CA2              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9CA2
 518+ 9CA2 2A 0F 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9CA5 EB           	ex de,hl
 520+ 9CA6 A7           	and a
 521+ 9CA7 ED 52        	sbc hl,de
 522+ 9CA9 CB 3D        	srl l
 523+ 9CAB 3E 08        6 ld a,8
 524+ 9CAD 95           	sub l
 525+ 9CAE 30 1E        	jr nc,3F
 526+ 9CB0
 527+ 9CB0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9CB0              ; B="0".
 529+ 9CB0
 530+ 9CB0 04           4 inc b
 531+ 9CB1 3C           	inc a
 532+ 9CB2 20 FC        	jr nz,4B
 533+ 9CB4 78           	ld a,b
 534+ 9CB5 08           	ex af,af
 535+ 9CB6 2A 0F 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9CB9 23           5 inc hl
 537+ 9CBA 23           	inc hl
 538+ 9CBB 10 FC        	djnz 5B
 539+ 9CBD 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9CC0 CD 2E 91     	call Extrae_address
 541+ 9CC3 22 0A 8C     	ld (Puntero_objeto),hl
 542+ 9CC6
 543+ 9CC6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9CC6              ; _(Posicion_actual).
 545+ 9CC6
 546+ 9CC6 21 08 8C     	ld hl,Posicion_actual
 547+ 9CC9 35           	dec (hl)
 548+ 9CCA 08           	ex af,af
 549+ 9CCB 6F           	ld l,a
 550+ 9CCC 18 DD        	jr 6B
 551+ 9CCE
 552+ 9CCE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9CCE
 554+ 9CCE 47           3 ld b,a
 555+ 9CCF 2A 0D 8C     	ld hl,(Indice_Sprite_der)
 556+ 9CD2 23           2 inc hl
 557+ 9CD3 23           	inc hl
 558+ 9CD4 10 FC        	djnz 2B
 559+ 9CD6 22 11 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9CD9 C9           8 ret
 561+ 9CDA
 562+ 9CDA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9CDA              ;
 564+ 9CDA              ;	modifica_parametros_1er_DESPLZ
 565+ 9CDA              ;
 566+ 9CDA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9CDA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9CDA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9CDA
 570+ 9CDA 3A 0C 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9CDD A7           	and a
 572+ 9CDE 20 1E        	jr nz,1F
 573+ 9CE0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9CE1 32 0C 8C         ld (CTRL_DESPLZ),a
 575+ 9CE4 21 07 8C     	ld hl,Columns
 576+ 9CE7 34           	inc (hl)
 577+ 9CE8 3A 17 8C     	ld a,(Cuad_objeto)
 578+ 9CEB E6 01        	and 1
 579+ 9CED 20 0F        	jr nz,1F
 580+ 9CEF 2A 08 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CF2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CF3 22 08 8C     	ld (Posicion_actual),hl
 583+ 9CF6 CD 42 95     	call Genera_coordenadas
 584+ 9CF9 CD 55 9D     	call Dec_CTRL_DESPLZ
 585+ 9CFC 18 03        	jr 2F
 586+ 9CFE CD 55 9D     1 call Dec_CTRL_DESPLZ
 587+ 9D01 C9           2 ret
 588+ 9D02
 589+ 9D02              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9D02
 591+ 9D02 3A 0C 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9D05 FE F7        	cp $f7
 593+ 9D07 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9D09 30 2C        	jr nc,3F
 595+ 9D0B
 596+ 9D0B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9D0B
 598+ 9D0B 06 00        	ld b,0
 599+ 9D0D 04           4 inc b
 600+ 9D0E 3C           	inc a
 601+ 9D0F FE F7        	cp $f7
 602+ 9D11 20 FA        	jr nz,4B
 603+ 9D13 3E FF        	ld a,$ff
 604+ 9D15 90           	sub b
 605+ 9D16 32 0C 8C     	ld (CTRL_DESPLZ),a
 606+ 9D19 18 1C        	jr 3F
 607+ 9D1B
 608+ 9D1B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9D1B
 610+ 9D1B 21 07 8C     1 ld hl,Columns
 611+ 9D1E 35           	dec (hl)
 612+ 9D1F AF           	xor a
 613+ 9D20 32 0C 8C     	ld (CTRL_DESPLZ),a
 614+ 9D23 3A 17 8C     	ld a,(Cuad_objeto)
 615+ 9D26 E6 01        	and 1
 616+ 9D28 28 0A        	jr z,2F
 617+ 9D2A 2A 08 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9D2D 2B           	dec hl
 619+ 9D2E 22 08 8C     	ld (Posicion_actual),hl
 620+ 9D31 CD 42 95     	call Genera_coordenadas
 621+ 9D34
 622+ 9D34              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9D34
 624+ 9D34 CD 56 91     2 call Inicia_puntero_objeto_izq
 625+ 9D37 C9           3 ret
 626+ 9D38
 627+ 9D38              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D38              ;
 629+ 9D38              ;	19/10/22
 630+ 9D38              ;
 631+ 9D38              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D38              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D38
 634+ 9D38 3A F9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D3B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D3D C9           	ret
 637+ 9D3E
 638+ 9D3E              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D3E              ;
 640+ 9D3E              ;	19/10/22
 641+ 9D3E              ;
 642+ 9D3E              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D3E              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D3E
 645+ 9D3E 3A F9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D41 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D43 C9           	ret
 648+ 9D44
 649+ 9D44              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D44              ;
 651+ 9D44              ;	24/7/22
 652+ 9D44              ;
 653+ 9D44              ;	Inc_CTRL_DESPLZ
 654+ 9D44              ;
 655+ 9D44              ;
 656+ 9D44              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D44
 658+ 9D44 21 0C 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D47 3A 1E 8C     	ld a,(Vel_right)
 660+ 9D4A A7           	and a
 661+ 9D4B 28 06        	jr z,1F
 662+ 9D4D 47           	ld b,a
 663+ 9D4E 34           3 inc (hl)
 664+ 9D4F 10 FD        	djnz 3B
 665+ 9D51 18 01        	jr 2F
 666+ 9D53 34           1 inc (hl)
 667+ 9D54 C9           2 ret
 668+ 9D55
 669+ 9D55              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D55              ;
 671+ 9D55              ;	5/2/23
 672+ 9D55              ;
 673+ 9D55              ;	Dec_CTRL_DESPLZ
 674+ 9D55              ;
 675+ 9D55              ;
 676+ 9D55              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D55
 678+ 9D55 21 0C 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D58 3A 1D 8C     	ld a,(Vel_left)
 680+ 9D5B A7           	and a
 681+ 9D5C 28 06        	jr z,1F
 682+ 9D5E 47           	ld b,a
 683+ 9D5F 35           3 dec (hl)
 684+ 9D60 10 FD        	djnz 3B
 685+ 9D62 18 01        	jr 2F
 686+ 9D64 35           1 dec (hl)
 687+ 9D65 C9           2 ret
 688+ 9D66
 689+ 9D66              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D66
 691+ 9D66 2A 08 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D69 01 1F 00     	ld bc,31
 693+ 9D6C A7           	and a
 694+ 9D6D ED 4A        	adc hl,bc
 695+ 9D6F 22 08 8C     	ld (Posicion_actual),hl
 696+ 9D72 21 05 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9D75 CB C6        	set 0,(hl)
 698+ 9D77 C9           	ret
 699+ 9D78
 700+ 9D78              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D78
 702+ 9D78 2A 08 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D7B 01 1F 00     	ld bc,31
 704+ 9D7E A7           	and a
 705+ 9D7F ED 42        	sbc hl,bc
 706+ 9D81 22 08 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D84 21 05 8C     	ld hl,Ctrl_0
 708+ 9D87 CB CE        	set 1,(hl)
 709+ 9D89 C9           	ret
 710+ 9D8A
 711+ 9D8A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D8A
 713+ 9D8A 24           Reaparece_abajo inc h
 714+ 9D8B 01 E0 17     	ld bc,$17e0
 715+ 9D8E A7           	and a
 716+ 9D8F ED 4A        	adc hl,bc
 717+ 9D91 22 08 8C     	ld (Posicion_actual),hl
 718+ 9D94 21 05 8C     	ld hl,Ctrl_0
 719+ 9D97 CB D6        	set 2,(hl)
 720+ 9D99 C9           	ret
 721+ 9D9A
 722+ 9D9A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D9A
 724+ 9D9A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D9D A7           	and a
 726+ 9D9E ED 42        	sbc hl,bc
 727+ 9DA0 22 08 8C     	ld (Posicion_actual),hl
 728+ 9DA3 21 05 8C     	ld hl,Ctrl_0
 729+ 9DA6 CB DE        	set 3,(hl)
 730+ 9DA8 C9           	ret
 731+ 9DA9
 732+ 9DA9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9DA9              ;
 734+ 9DA9              ;	15/07/23
 735+ 9DA9
 736+ 9DA9              Reinicio
 737+ 9DA9
 738+ 9DA9              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9DA9
 740+ 9DA9 AF           	xor a
 741+ 9DAA 21 2D 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9DAD CD CB 9D     	call Limpia_contenido_hl
 743+ 9DB0
 744+ 9DB0 21 08 8C     	ld hl,Posicion_actual
 745+ 9DB3 CD CB 9D     	call Limpia_contenido_hl
 746+ 9DB6
 747+ 9DB6 CD AC 93     	call Situa_Puntero_indice_mov
 748+ 9DB9 CD CA 9E     	call Inicia_Puntero_mov
 749+ 9DBC
 750+ 9DBC 21 2F 8C     	ld hl,Incrementa_puntero
 751+ 9DBF 06 05        	ld b,5
 752+ 9DC1 77           1 ld (hl),a
 753+ 9DC2 23           	inc hl
 754+ 9DC3 10 FC        	djnz 1B
 755+ 9DC5
 756+ 9DC5 21 04 8C     	ld hl,Ctrl_2
 757+ 9DC8 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9DCA
 759+ 9DCA C9           	ret
 760+ 9DCB
 761+ 9DCB 77           Limpia_contenido_hl	ld (hl),a
 762+ 9DCC 23           	inc hl
 763+ 9DCD 77           	ld (hl),a
 764+ 9DCE C9           	ret
 765+ 9DCF
 766+ 9DCF              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9DCF              ;
 768+ 9DCF              ;	18/6/24
 769+ 9DCF              ;
 770+ 9DCF
 771+ 9DCF              Amadeus_a_izquierda
 772+ 9DCF
 773+ 9DCF              ;	Actualiza contador de movimientos.
 774+ 9DCF
 775+ 9DCF 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9DD2 35           	dec (hl)
 777+ 9DD3 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9DD5
 779+ 9DD5 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9DD8 2B           	dec hl
 781+ 9DD9 2B           	dec hl
 782+ 9DDA 2B           	dec hl
 783+ 9DDB 2B           	dec hl
 784+ 9DDC 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9DDF
 786+ 9DDF 21 6F 8C     	ld hl,Ctrl_3
 787+ 9DE2 CB EE        	set 5,(hl)
 788+ 9DE4
 789+ 9DE4 C9           	ret
 790+ 9DE5
 791+ 9DE5 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9DE6 C9           	ret
 793+ 9DE7
 794+ 9DE7
 795+ 9DE7              Amadeus_a_derecha
 796+ 9DE7
 797+ 9DE7              ;	Actualiza contador de movimientos.
 798+ 9DE7
 799+ 9DE7 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9DEA 34           	inc (hl)
 801+ 9DEB 3E 7A        	ld a,$7a
 802+ 9DED BE           	cp (hl)
 803+ 9DEE 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9DF0
 805+ 9DF0 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DF3 23           	inc hl
 807+ 9DF4 23           	inc hl
 808+ 9DF5 23           	inc hl
 809+ 9DF6 23           	inc hl
 810+ 9DF7 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DFA
 812+ 9DFA 21 6F 8C     	ld hl,Ctrl_3
 813+ 9DFD CB EE        	set 5,(hl)
 814+ 9DFF C9           	ret
 815+ 9E00
 816+ 9E00 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9E01 C9           	ret
# file closed: Direcciones.asm
2189  9E02              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E02              ; ----- ----- ----- ----- -----
   2+ 9E02              ;
   3+ 9E02              ;   28/12/23
   4+ 9E02
   5+ 9E02              Movimiento
   6+ 9E02
   7+ 9E02              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9E02
   9+ 9E02 3A 04 8C         ld a,(Ctrl_2)
  10+ 9E05 CB 57            bit 2,a
  11+ 9E07 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9E09
  13+ 9E09 2A 2B 8C         ld hl,(Puntero_mov)
  14+ 9E0C 7E               ld a,(hl)
  15+ 9E0D
  16+ 9E0D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9E0D
  18+ 9E0D              Inicia_desplazamiento.
  19+ 9E0D
  20+ 9E0D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9E0D
  22+ 9E0D CD 00 9F         call Ajusta_velocidad_desplazamiento
  23+ 9E10
  24+ 9E10              ; Iniciamos (Repetimos_mov).
  25+ 9E10
  26+ 9E10 7E               ld a,(hl)
  27+ 9E11 E6 0F            and $0f
  28+ 9E13 32 31 8C         ld (Repetimos_desplazamiento),a
  29+ 9E16 32 32 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9E19
  31+ 9E19              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9E19
  33+ 9E19 23               inc hl
  34+ 9E1A 7E               ld a,(hl)
  35+ 9E1B 32 34 8C         ld (Cola_de_desplazamiento),a
  36+ 9E1E 2B               dec hl
  37+ 9E1F
  38+ 9E1F 21 04 8C         ld hl,Ctrl_2
  39+ 9E22 CB D6            set 2,(hl)
  40+ 9E24
  41+ 9E24              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9E24              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9E24
  44+ 9E24              Desplazamiento_iniciado
  45+ 9E24
  46+ 9E24 CD D4 9E         call Aplica_desplazamiento
  47+ 9E27
  48+ 9E27              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9E27
  50+ 9E27 3A 6F 8C         ld a,(Ctrl_3)
  51+ 9E2A CB 4F            bit 1,a
  52+ 9E2C C0               ret nz
  53+ 9E2D
  54+ 9E2D 21 31 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9E30 35               dec (hl)
  56+ 9E31 C0               ret nz
  57+ 9E32
  58+ 9E32              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9E32              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9E32              ; Analiza (Cola_de_desplazamiento).
  61+ 9E32
  62+ 9E32 3A 34 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9E35 A7               and a
  64+ 9E36 CC 29 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9E39 28 30            jr z,Reinicia_el_movimiento
  66+ 9E3B
  67+ 9E3B FE FF            cp $ff
  68+ 9E3D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E3F
  70+ 9E3F FE FE            cp $fe
  71+ 9E41 CC AE 9E         call z,Fijamos_bucle
  72+ 9E44 28 25            jr z,Reinicia_el_movimiento
  73+ 9E46
  74+ 9E46 FE FD            cp $fd
  75+ 9E48 20 11            jr nz,1F
  76+ 9E4A
  77+ 9E4A              ; ---
  78+ 9E4A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E4A
  80+ 9E4A 3A 04 8C         ld a,(Ctrl_2)
  81+ 9E4D CB 5F            bit 3,a
  82+ 9E4F 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E51
  84+ 9E51              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E51
  86+ 9E51 21 04 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E54 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E56
  89+ 9E56 CD BF 9E         call Inicia_Repetimos_movimiento
  90+ 9E59 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E5B              ; ---
  92+ 9E5B
  93+ 9E5B FE 01        1 cp 1
  94+ 9E5D CA 98 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E60
  96+ 9E60 3D               dec a
  97+ 9E61 32 34 8C         ld (Cola_de_desplazamiento),a
  98+ 9E64
  99+ 9E64 3A 32 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E67 32 31 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E6A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E6A C9               ret
 103+ 9E6B
 104+ 9E6B              Reinicia_el_movimiento
 105+ 9E6B
 106+ 9E6B 3A 04 8C         ld a,(Ctrl_2)
 107+ 9E6E CB 5F            bit 3,a
 108+ 9E70 28 1B            jr z,2F
 109+ 9E72
 110+ 9E72              ; (Cola_de_desplazamiento)="254".
 111+ 9E72
 112+ 9E72 21 33 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E75 35               dec (hl)
 114+ 9E76 20 15            jr nz,2F
 115+ 9E78
 116+ 9E78              ; Fin de las repeticiones del último movimiento.
 117+ 9E78
 118+ 9E78 21 04 8C         ld hl,Ctrl_2
 119+ 9E7B CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E7D
 121+ 9E7D 2A 2B 8C         ld hl,(Puntero_mov)
 122+ 9E80 23               inc hl
 123+ 9E81 23               inc hl
 124+ 9E82 23               inc hl
 125+ 9E83 22 2B 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E86              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E86 7E               ld a,(hl)
 128+ 9E87 32 34 8C         ld (Cola_de_desplazamiento),a
 129+ 9E8A
 130+ 9E8A C3 32 9E         jp Cola
 131+ 9E8D
 132+ 9E8D CD CA 9E     2 call Inicia_Puntero_mov
 133+ 9E90
 134+ 9E90 21 04 8C         ld hl,Ctrl_2
 135+ 9E93 CB 96            res 2,(hl)
 136+ 9E95
 137+ 9E95 C3 02 9E         jp Movimiento
 138+ 9E98
 139+ 9E98              Siguiente_desplazamiento
 140+ 9E98
 141+ 9E98              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E98              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E98
 144+ 9E98 21 04 8C         ld hl,Ctrl_2
 145+ 9E9B CB 96            res 2,(hl)
 146+ 9E9D
 147+ 9E9D 2A 2B 8C         ld hl,(Puntero_mov)
 148+ 9EA0 23               inc hl
 149+ 9EA1 23               inc hl
 150+ 9EA2 22 2B 8C         ld (Puntero_mov),hl
 151+ 9EA5
 152+ 9EA5 7E               ld a,(hl)
 153+ 9EA6 A7               and a
 154+ 9EA7 CC 29 9F         call z,Incrementa_Puntero_indice_mov
 155+ 9EAA CA 6B 9E         jp z,Reinicia_el_movimiento
 156+ 9EAD
 157+ 9EAD C9               ret
 158+ 9EAE
 159+ 9EAE              ; Subrutinas -----------------------------------------
 160+ 9EAE              ; ---------- --------- --------- ---------- ----------
 161+ 9EAE              ;
 162+ 9EAE              ;   24/07/23
 163+ 9EAE              ;
 164+ 9EAE              ;   Fijamos_bucle
 165+ 9EAE              ;
 166+ 9EAE              ;
 167+ 9EAE
 168+ 9EAE              Fijamos_bucle
 169+ 9EAE
 170+ 9EAE 3A 2F 8C         ld a,(Incrementa_puntero)
 171+ 9EB1 3C               inc a
 172+ 9EB2 32 30 8C         ld (Incrementa_puntero_backup),a
 173+ 9EB5
 174+ 9EB5 CD 29 9F         call Incrementa_Puntero_indice_mov
 175+ 9EB8 2A 29 8C         ld hl,(Puntero_indice_mov)
 176+ 9EBB 22 2D 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9EBE C9               ret
 178+ 9EBF
 179+ 9EBF              ; ---------- --------- --------- ---------- ----------
 180+ 9EBF              ;
 181+ 9EBF              ;   07/7/23
 182+ 9EBF              ;
 183+ 9EBF              ;   Inicia_Repetimos_movimiento
 184+ 9EBF              ;
 185+ 9EBF              ;
 186+ 9EBF
 187+ 9EBF              Inicia_Repetimos_movimiento
 188+ 9EBF
 189+ 9EBF              ; Iniciamos (Repetimos_movimiento).
 190+ 9EBF
 191+ 9EBF DD 2A 2B 8C      ld ix,(Puntero_mov)
 192+ 9EC3 DD 7E 02         ld a,(ix+2)
 193+ 9EC6 32 33 8C         ld (Repetimos_movimiento),a
 194+ 9EC9
 195+ 9EC9 C9               ret
 196+ 9ECA
 197+ 9ECA              ; ---------- --------- --------- ---------- ----------
 198+ 9ECA              ;
 199+ 9ECA              ;   26/6/23
 200+ 9ECA              ;
 201+ 9ECA              ;   Inicia_Puntero_mov
 202+ 9ECA              ;
 203+ 9ECA              ;
 204+ 9ECA
 205+ 9ECA 2A 29 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9ECD CD 2E 91         call Extrae_address
 207+ 9ED0 22 2B 8C         ld (Puntero_mov),hl
 208+ 9ED3 C9               ret
 209+ 9ED4
 210+ 9ED4              ; ---------- --------- --------- ---------- ----------
 211+ 9ED4              ;
 212+ 9ED4              ;   27/06/23
 213+ 9ED4              ;
 214+ 9ED4              ;   Aplica_movimiento.
 215+ 9ED4
 216+ 9ED4              Aplica_desplazamiento
 217+ 9ED4
 218+ 9ED4              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9ED4
 220+ 9ED4 2A 2B 8C         ld hl, (Puntero_mov)
 221+ 9ED7
 222+ 9ED7 7E               ld a,(hl)
 223+ 9ED8 E6 F0            and $f0
 224+ 9EDA C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9EDB
 226+ 9EDB CB 7E            bit 7,(hl)
 227+ 9EDD 28 03            jr z,1F
 228+ 9EDF CD B6 9A         call Mov_up
 229+ 9EE2 2A 2B 8C     1 ld hl, (Puntero_mov)
 230+ 9EE5 CB 76            bit 6,(hl)
 231+ 9EE7 28 03            jr z,2F
 232+ 9EE9 CD 7D 9A         call Mov_down
 233+ 9EEC
 234+ 9EEC              ; Se ha aplicado reinicio ???
 235+ 9EEC              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9EEC
 237+ 9EEC              ;    ld a,(Ctrl_3)
 238+ 9EEC              ;    bit 1,a
 239+ 9EEC              ;    ret nz
 240+ 9EEC
 241+ 9EEC 2A 2B 8C     2 ld hl, (Puntero_mov)
 242+ 9EEF CB 6E            bit 5,(hl)
 243+ 9EF1 28 03            jr z,3F
 244+ 9EF3 CD 1C 9C         call Mov_left
 245+ 9EF6 2A 2B 8C     3 ld hl, (Puntero_mov)
 246+ 9EF9 CB 66            bit 4,(hl)
 247+ 9EFB C8               ret z
 248+ 9EFC CD F9 9A         call Mov_right
 249+ 9EFF C9               ret
 250+ 9F00
 251+ 9F00              ; ---------- --------- --------- ---------- ----------
 252+ 9F00              ;
 253+ 9F00              ;   26/06/23
 254+ 9F00              ;
 255+ 9F00              ;   Ajusta_velocidad_desplazamiento.
 256+ 9F00
 257+ 9F00              Ajusta_velocidad_desplazamiento
 258+ 9F00
 259+ 9F00              ; 1er byte de la cadena de movimiento.
 260+ 9F00              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9F00
 262+ 9F00 CD 1E 9F         call Extrae_nibble_alto
 263+ 9F03
 264+ 9F03 32 1F 8C         ld (Vel_up),a
 265+ 9F06 79               ld a,c
 266+ 9F07 E6 0F            and $0f
 267+ 9F09 32 20 8C         ld (Vel_down),a
 268+ 9F0C
 269+ 9F0C              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9F0C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9F0C
 272+ 9F0C 23               inc hl
 273+ 9F0D CD 1E 9F         call Extrae_nibble_alto
 274+ 9F10
 275+ 9F10 32 1D 8C         ld (Vel_left),a
 276+ 9F13 79               ld a,c
 277+ 9F14 E6 0F            and $0f
 278+ 9F16 32 1E 8C         ld (Vel_right),a
 279+ 9F19
 280+ 9F19              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9F19
 282+ 9F19 23               inc hl
 283+ 9F1A 22 2B 8C         ld (Puntero_mov),hl
 284+ 9F1D C9               ret
 285+ 9F1E
 286+ 9F1E 06 04        Extrae_nibble_alto ld b,4
 287+ 9F20 7E               ld a,(hl)
 288+ 9F21 4F               ld c,a
 289+ 9F22 E6 F0            and $f0
 290+ 9F24 CB 3F        1 srl a
 291+ 9F26 10 FC            djnz 1B
 292+ 9F28 C9               ret
 293+ 9F29
 294+ 9F29              ; ---------- --------- --------- ---------- ----------
 295+ 9F29              ;
 296+ 9F29              ;   5/7/23
 297+ 9F29              ;
 298+ 9F29              ;   Incrementa_Puntero_indice_mov
 299+ 9F29
 300+ 9F29              Incrementa_Puntero_indice_mov
 301+ 9F29
 302+ 9F29 21 2F 8C         ld hl,Incrementa_puntero
 303+ 9F2C 34               inc (hl)
 304+ 9F2D
 305+ 9F2D 2A 29 8C         ld hl,(Puntero_indice_mov)
 306+ 9F30 01 02 00         ld bc,2
 307+ 9F33 A7               and a
 308+ 9F34 09               add hl,bc
 309+ 9F35 22 29 8C         ld (Puntero_indice_mov),hl
 310+ 9F38
 311+ 9F38 7E               ld a,(hl)
 312+ 9F39 A7               and a
 313+ 9F3A
 314+ 9F3A              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9F3A
 316+ 9F3A              ;    jr z,$
 317+ 9F3A
 318+ 9F3A              ;! Reinicia el Patrón de movimiento.
 319+ 9F3A
 320+ 9F3A CC 3F 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9F3D
 322+ 9F3D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F3E
 324+ 9F3E C9               ret
 325+ 9F3F
 326+ 9F3F              ; ---------- --------- --------- ---------- ----------
 327+ 9F3F              ;
 328+ 9F3F              ;   15/01/24
 329+ 9F3F              ;
 330+ 9F3F              ;   Inicializa_Puntero_indice_mov
 331+ 9F3F
 332+ 9F3F              Inicializa_Puntero_indice_mov_2
 333+ 9F3F
 334+ 9F3F              ; Existe etiqueta de bucle principal???
 335+ 9F3F
 336+ 9F3F 2A 2D 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F42 24               inc h
 338+ 9F43 25               dec h
 339+ 9F44 28 05            jr z,2F
 340+ 9F46
 341+ 9F46 22 29 8C         ld (Puntero_indice_mov),hl
 342+ 9F49 18 14            jr 3F
 343+ 9F4B
 344+ 9F4B              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F4B
 346+ 9F4B 3A 2F 8C     2 ld a,(Incrementa_puntero)
 347+ 9F4E 47               ld b,a
 348+ 9F4F
 349+ 9F4F 2A 29 8C         ld hl,(Puntero_indice_mov)
 350+ 9F52 2B           1 dec hl
 351+ 9F53 2B               dec hl
 352+ 9F54 10 FC            djnz 1B
 353+ 9F56 22 29 8C         ld (Puntero_indice_mov),hl
 354+ 9F59
 355+ 9F59 AF               xor a
 356+ 9F5A 32 2F 8C         ld (Incrementa_puntero),a
 357+ 9F5D 18 06            jr 4F
 358+ 9F5F
 359+ 9F5F 3A 30 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F62 32 2F 8C         ld (Incrementa_puntero),a
 361+ 9F65 C9           4 ret
 362+ 9F66
 363+ 9F66              ; ----------------------------------------------------------------------
 364+ 9F66              ;
 365+ 9F66              ;   24/11/24
 366+ 9F66              ;
 367+ 9F66              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F66
 369+ 9F66 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F69 CD BB 94         call Calcula_salto_en_BC
 371+ 9F6C 21 21 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F6F A7               and a
 373+ 9F70 ED 4A            adc hl,bc
 374+ 9F72 C9               ret
 375+ 9F73
 376+ 9F73              ; ----------------------------------------------------------------------
 377+ 9F73              ;
 378+ 9F73              ;   24/11/24
 379+ 9F73              ;
 380+ 9F73              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F73              ;
 382+ 9F73              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F73
 384+ 9F73 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F74 23               inc hl
 386+ 9F75 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F76 DD 71 09         ld (ix+9),c
 388+ 9F79 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F7C C9               ret
 390+ 9F7D
# file closed: Movimiento.asm
2190  9F7D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F7D              ; --------------------------------------------------------------------------------------
   2+ 9F7D              ;
   3+ 9F7D              ;   25/10/24
   4+ 9F7D              ;
   5+ 9F7D
   6+ 9F7D              Pinta_disparos_Entidades
   7+ 9F7D
   8+ 9F7D ED 73 47 8C      ld (Stack),sp
   9+ 9F81 ED 7B 59 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F85
  11+ 9F85 3E 02            ld a,2
  12+ 9F87 08               ex af,af
  13+ 9F88
  14+ 9F88 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F8A              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F8A              ;                                     _ No encontraría "0".
  17+ 9F8A FD E1        4 pop iy
  18+ 9F8C D1               pop de                          ; 1er .db IYL
  19+ 9F8D              ;                                   ; 2º  .db IYH
  20+ 9F8D              ;                                   ; 3er .db E.
  21+ 9F8D              ;   Album vacío ???
  22+ 9F8D
  23+ 9F8D FD 7D            ld a,iyl
  24+ 9F8F FD 84            add iyh
  25+ 9F91 83               add e
  26+ 9F92 28 1F            jr z,1F
  27+ 9F94
  28+ 9F94              ;   Imprime album, (contiene datos).
  29+ 9F94
  30+ 9F94 3B               dec sp
  31+ 9F95
  32+ 9F95 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F96
  34+ 9F96              ; Imprime el 1er scanline del disparo.
  35+ 9F96
  36+ 9F96 FD 7D            ld a,iyl
  37+ 9F98 AE               xor (hl)
  38+ 9F99 77               ld (hl),a
  39+ 9F9A
  40+ 9F9A 2C               inc l
  41+ 9F9B
  42+ 9F9B FD 7C            ld a,iyh
  43+ 9F9D AE               xor (hl)
  44+ 9F9E 77               ld (hl),a
  45+ 9F9F
  46+ 9F9F 2C               inc l
  47+ 9FA0
  48+ 9FA0 7B               ld a,e
  49+ 9FA1 AE               xor (hl)
  50+ 9FA2 77               ld (hl),a
  51+ 9FA3
  52+ 9FA3              ; Imprime el 2º scanline del disparo.
  53+ 9FA3
  54+ 9FA3 E1               pop hl
  55+ 9FA4
  56+ 9FA4 FD 7D            ld a,iyl
  57+ 9FA6 AE               xor (hl)
  58+ 9FA7 77               ld (hl),a
  59+ 9FA8
  60+ 9FA8 2C               inc l
  61+ 9FA9
  62+ 9FA9 FD 7C            ld a,iyh
  63+ 9FAB AE               xor (hl)
  64+ 9FAC 77               ld (hl),a
  65+ 9FAD
  66+ 9FAD 2C               inc l
  67+ 9FAE
  68+ 9FAE 7B               ld a,e
  69+ 9FAF AE               xor (hl)
  70+ 9FB0 77               ld (hl),a
  71+ 9FB1
  72+ 9FB1 10 D7            djnz 4B
  73+ 9FB3
  74+ 9FB3 08           1 ex af,af
  75+ 9FB4 3D               dec a
  76+ 9FB5 20 05            jr nz,2F
  77+ 9FB7
  78+ 9FB7 ED 7B 47 8C      ld sp,(Stack)
  79+ 9FBB C9               ret
  80+ 9FBC
  81+ 9FBC ED 7B 57 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9FC0 08               ex af,af
  83+ 9FC1 18 C5            jr 3B
  84+ 9FC3
  85+ 9FC3              ; --------------------------------------------------------------------------------------
  86+ 9FC3              ;
  87+ 9FC3              ;   30/10/24
  88+ 9FC3              ;
  89+ 9FC3
  90+ 9FC3              Motor_de_disparos_entidades
  91+ 9FC3
  92+ 9FC3 3A 5F 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9FC6 FE 07            cp 7
  94+ 9FC8 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9FC9
  96+ 9FC9 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9FCB 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9FCE
  99+ 9FCE CD 2E 91     1 call Extrae_address
 100+ 9FD1 1C               inc e
 101+ 9FD2 1C               inc e
 102+ 9FD3 ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9FD7
 104+ 9FD7               ; Caja vacía ???
 105+ 9FD7
 106+ 9FD7 2D               dec l
 107+ 9FD8 7E               ld a,(hl)
 108+ 9FD9 A7               and a
 109+ 9FDA 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9FDC
 111+ 9FDC              ; --- Trabajamos con caja:
 112+ 9FDC
 113+ 9FDC 2C               inc l
 114+ 9FDD
 115+ 9FDD              ; --- Existe posibilidad de impacto ???
 116+ 9FDD
 117+ 9FDD CB 46            bit 0,(hl)
 118+ 9FDF C4 1F A0         call nz, Comprueba_impacto_con_Amadeus
 119+ 9FE2 20 37            jr nz,3F
 120+ 9FE4
 121+ 9FE4 CD A6 A0         call Rota_disparo_si_procede
 122+ 9FE7
 123+ 9FE7              ; ------------------------------------------------------------
 124+ 9FE7
 125+ 9FE7 2D               dec l
 126+ 9FE8 2D               dec l
 127+ 9FE9
 128+ 9FE9 CD 2E 91         call Extrae_address
 129+ 9FEC
 130+ 9FEC              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9FEC              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9FEC
 133+ 9FEC 3A 71 8C         ld a,(Ctrl_5)
 134+ 9FEF CB 57            bit 2,a
 135+ 9FF1 28 09            jr z,4F
 136+ 9FF3
 137+ 9FF3 CB 97            res 2,a
 138+ 9FF5 32 71 8C         ld (Ctrl_5),a
 139+ 9FF8 2C               inc l
 140+ 9FF9 2C               inc l
 141+ 9FFA 18 0C            jr 5F
 142+ 9FFC
 143+ 9FFC CB 5F        4 bit 3,a
 144+ 9FFE 28 08            jr z,5F
 145+ A000
 146+ A000 CB 9F            res 3,a
 147+ A002 32 71 8C         ld (Ctrl_5),a
 148+ A005 2D               dec l
 149+ A006 2D               dec l
 150+ A007 2D               dec l
 151+ A008
 152+ A008              ; ---------------------------------------------------------------------
 153+ A008
 154+ A008              ;! Velocidad del disparo de entidades.
 155+ A008
 156+ A008 CD 37 9A     5 call NextScan
 157+ A00B CD 37 9A         call NextScan
 158+ A00E
 159+ A00E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ A00E
 161+ A00E CD 83 A0         call Fin_de_disparo_de_entidad
 162+ A011
 163+ A011 EB               ex de,hl
 164+ A012
 165+ A012 73               ld (hl),e
 166+ A013 23               inc hl
 167+ A014 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ A015
 169+ A015 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ A018 18 02            jr 2F
 171+ A01A
 172+ A01A C9               ret
 173+ A01B
 174+ A01B EB           3 ex de,hl
 175+ A01C 10 B0        2 djnz 1B
 176+ A01E
 177+ A01E C9               ret
 178+ A01F
 179+ A01F              ; ------------- ------------- ------------
 180+ A01F              ;
 181+ A01F              ;   1/11/24
 182+ A01F
 183+ A01F              Comprueba_impacto_con_Amadeus
 184+ A01F
 185+ A01F              ;   El disparo se encuentra en zona de Amadeus.
 186+ A01F              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ A01F
 188+ A01F              ;   Modificamos registros, así que guardamos ...
 189+ A01F
 190+ A01F C5               push bc
 191+ A020 E5               push hl
 192+ A021 D5               push de
 193+ A022
 194+ A022 2D               dec l
 195+ A023 2D               dec l
 196+ A024
 197+ A024 CD 2E 91         call Extrae_address
 198+ A027
 199+ A027 3A AF 89         ld a,(CX_Amadeus)
 200+ A02A 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ A02B
 202+ A02B 7D               ld a,l
 203+ A02C E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ A02E
 205+ A02E 06 03            ld b,3
 206+ A030
 207+ A030 B9           1 cp c
 208+ A031 28 15            jr z,Coincidencia
 209+ A033 0C               inc c
 210+ A034 10 FA            djnz 1B
 211+ A036
 212+ A036 0D               dec c
 213+ A037 0D               dec c
 214+ A038 0D               dec c
 215+ A039
 216+ A039 3C               inc a
 217+ A03A B9               cp c
 218+ A03B 28 0B            jr z,Coincidencia
 219+ A03D
 220+ A03D 3C               inc a
 221+ A03E B9               cp c
 222+ A03F 28 07            jr z,Coincidencia
 223+ A041
 224+ A041 D1           2 pop de
 225+ A042 E1               pop hl
 226+ A043 C1               pop bc
 227+ A044
 228+ A044              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ A044
 230+ A044 CB 86            res 0,(hl)
 231+ A046 AF               xor a                       ; Z before RET.
 232+ A047 C9               ret
 233+ A048
 234+ A048              Coincidencia
 235+ A048
 236+ A048              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A048              ;   Existe posibilidad de impacto.
 238+ A048              ;   Vamos a averiguarlo ...
 239+ A048
 240+ A048 1D               dec e
 241+ A049 1D               dec e
 242+ A04A 1D               dec e
 243+ A04B
 244+ A04B              ; DE en Puntero_objeto del disparo.
 245+ A04B              ; HL en Puntero_de_impresión del disparo.
 246+ A04B
 247+ A04B              ; Comparador:
 248+ A04B
 249+ A04B 06 03            ld b,3
 250+ A04D
 251+ A04D 1A           3 ld a,(de)
 252+ A04E 4F               ld c,a
 253+ A04F A6               and (hl)
 254+ A050 B9               cp c
 255+ A051 20 06            jr nz,Amadeus_impactado
 256+ A053
 257+ A053 2C               inc l
 258+ A054 1C               inc e
 259+ A055
 260+ A055 10 F6            djnz 3B
 261+ A057
 262+ A057 18 E8            jr 2B
 263+ A059
 264+ A059              Amadeus_impactado
 265+ A059
 266+ A059              ; Borramos disparo.
 267+ A059
 268+ A059 D1               pop de
 269+ A05A E1               pop hl
 270+ A05B
 271+ A05B E5               push hl
 272+ A05C D5               push de
 273+ A05D
 274+ A05D CD 11 A1         call Borra_6_bytes
 275+ A060
 276+ A060 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A063 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A064
 279+ A064              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A064
 281+ A064 21 B2 89         ld hl,Impacto_Amadeus
 282+ A067 36 01            ld (hl),1
 283+ A069
 284+ A069              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A069              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A069
 287+ A069 3A B3 89         ld a,(p.imp.amadeus)
 288+ A06C FE DE            cp $de
 289+ A06E 20 04            jr nz,1F
 290+ A070
 291+ A070 3D               dec a
 292+ A071 32 B3 89         ld (p.imp.amadeus),a
 293+ A074
 294+ A074              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A074
 296+ A074 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A077 21 B5 89         ld hl,Pamm_Amadeus
 298+ A07A
 299+ A07A 73               ld (hl),e
 300+ A07B 23               inc hl
 301+ A07C 72               ld (hl),d
 302+ A07D
 303+ A07D D1               pop de
 304+ A07E E1               pop hl
 305+ A07F C1               pop bc
 306+ A080
 307+ A080 AF               xor a
 308+ A081 3C               inc a               ; NZ before RET.
 309+ A082 C9               ret
 310+ A083
 311+ A083              ; ------------- ------------- ------------
 312+ A083              ;
 313+ A083              ;   31/10/24
 314+ A083
 315+ A083              Fin_de_disparo_de_entidad
 316+ A083
 317+ A083              ; Estamos en zona de Amadeus ??
 318+ A083
 319+ A083 7C               ld a,h
 320+ A084 FE 54            cp $54
 321+ A086 38 0D            jr c,1F
 322+ A088
 323+ A088 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A089
 325+ A089 5D               ld e,l
 326+ A08A 54               ld d,h
 327+ A08B
 328+ A08B 21 E0 57         ld hl,$57e0
 329+ A08E ED 52            sbc hl,de
 330+ A090
 331+ A090 38 6F            jr c,Elimina_disparo_entidad
 332+ A092
 333+ A092 6B               ld l,e
 334+ A093 62               ld h,d
 335+ A094
 336+ A094 D1               pop de
 337+ A095
 338+ A095 7C           1 ld a,h
 339+ A096 FE 50            cp $50
 340+ A098 D8               ret c
 341+ A099
 342+ A099 7D               ld a,l
 343+ A09A FE C0            cp $c0
 344+ A09C D8               ret c
 345+ A09D
 346+ A09D              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A09D              ; Así podremos comprobar si hay colisión más adelante.
 348+ A09D
 349+ A09D 1C               inc e
 350+ A09E 1C               inc e
 351+ A09F
 352+ A09F EB               ex de,hl
 353+ A0A0 CB C6            set 0,(hl)
 354+ A0A2 EB               ex de,hl
 355+ A0A3
 356+ A0A3 1D               dec e
 357+ A0A4 1D               dec e
 358+ A0A5
 359+ A0A5 C9               ret
 360+ A0A6
 361+ A0A6              ; ----------------------------------------------------------
 362+ A0A6              ;
 363+ A0A6              ;   08/10/24
 364+ A0A6
 365+ A0A6              ;   Estructura de un disparo de entidades.
 366+ A0A6
 367+ A0A6              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A0A6              ; 	defw 0											; Puntero de impresión.
 369+ A0A6              ;	defw 0											; Control.
 370+ A0A6
 371+ A0A6              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A0A6              ;   _de la entidad en el momento de disparar.
 373+ A0A6
 374+ A0A6              ;   El byte alto muestra la siguiente información:
 375+ A0A6              ;
 376+ A0A6              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A0A6              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A0A6              ;
 379+ A0A6              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A0A6              ;
 381+ A0A6              ;                        10xx ..... Izquierda.
 382+ A0A6              ;                        01xx ..... Derecha.
 383+ A0A6              ;                        00xx ..... Recto.
 384+ A0A6
 385+ A0A6              Rota_disparo_si_procede
 386+ A0A6
 387+ A0A6              ;   Nos situamos en el byte alto de (Control).
 388+ A0A6
 389+ A0A6 CB 76            bit 6,(hl)
 390+ A0A8 20 2D            jr nz,Rota_a_derecha
 391+ A0AA CB 7E            bit 7,(hl)
 392+ A0AC C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A0AD
 394+ A0AD              Rota_a_izq
 395+ A0AD
 396+ A0AD E5               push hl
 397+ A0AE
 398+ A0AE 7D               ld a,l
 399+ A0AF D6 05            sub 5
 400+ A0B1 6F               ld l,a
 401+ A0B2
 402+ A0B2 E5               push hl
 403+ A0B3 FD E1            pop iy
 404+ A0B5
 405+ A0B5 A7               and a
 406+ A0B6
 407+ A0B6 FD CB 02 16      rl (iy+02)
 408+ A0BA FD CB 01 16      rl (iy+01)
 409+ A0BE FD CB 00 16      rl (iy+00)
 410+ A0C2
 411+ A0C2 30 3B            jr nc,Exit
 412+ A0C4
 413+ A0C4              ; Desplazamiento completo hasta Carry.
 414+ A0C4              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A0C4
 416+ A0C4 FD 36 02 03      ld (iy+02),$03
 417+ A0C8 FD 36 01 00      ld (iy+01),$00
 418+ A0CC FD 36 00 00      ld (iy+00),$00
 419+ A0D0
 420+ A0D0 21 71 8C         ld hl,Ctrl_5
 421+ A0D3 CB DE            set 3,(hl)
 422+ A0D5
 423+ A0D5 18 28            jr Exit
 424+ A0D7
 425+ A0D7              Rota_a_derecha
 426+ A0D7
 427+ A0D7 E5               push hl
 428+ A0D8
 429+ A0D8 7D               ld a,l
 430+ A0D9 D6 05            sub 5
 431+ A0DB 6F               ld l,a
 432+ A0DC
 433+ A0DC E5               push hl
 434+ A0DD FD E1            pop iy
 435+ A0DF
 436+ A0DF A7               and a
 437+ A0E0
 438+ A0E0 FD CB 00 1E      rr (iy+00)
 439+ A0E4 FD CB 01 1E      rr (iy+01)
 440+ A0E8 FD CB 02 1E      rr (iy+02)
 441+ A0EC
 442+ A0EC 30 11            jr nc,Exit
 443+ A0EE
 444+ A0EE              ; Desplazamiento completo hasta Carry.
 445+ A0EE              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A0EE
 447+ A0EE FD 36 00 01      ld (iy+00),$01
 448+ A0F2 FD 36 01 80      ld (iy+01),$80
 449+ A0F6 FD 36 02 00      ld (iy+02),$00
 450+ A0FA
 451+ A0FA 21 71 8C         ld hl,Ctrl_5
 452+ A0FD CB D6            set 2,(hl)
 453+ A0FF
 454+ A0FF E1           Exit pop hl
 455+ A100 C9               ret
 456+ A101
 457+ A101              ; ------------ ----------- ------------
 458+ A101              ;
 459+ A101              ;   25/9/24
 460+ A101
 461+ A101              Elimina_disparo_entidad
 462+ A101
 463+ A101 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A104 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A105
 466+ A105 E1               pop hl
 467+ A106 E5               push hl
 468+ A107
 469+ A107 2C               inc l
 470+ A108 2C               inc l
 471+ A109
 472+ A109 CD 11 A1         call Borra_6_bytes
 473+ A10C
 474+ A10C D1               pop de
 475+ A10D
 476+ A10D 21 00 00         ld hl,0
 477+ A110
 478+ A110 C9               ret
 479+ A111
 480+ A111              ; ----- ----- ----- ----- -----
 481+ A111
 482+ A111              Borra_6_bytes
 483+ A111
 484+ A111 16 06            ld d,6                                                    ; Contador
 485+ A113 AF               xor a                                                     ; Borrador
 486+ A114 77           1 ld (hl),a
 487+ A115 2D               dec l
 488+ A116 15               dec d
 489+ A117 20 FB            jr nz,1B
 490+ A119
 491+ A119 C9               ret
 492+ A11A
 493+ A11A              ; --------------------------------------------------------------------------------------
 494+ A11A              ;
 495+ A11A              ;   12/10/24
 496+ A11A              ;
 497+ A11A
 498+ A11A              Genera_datos_de_impresion_disparos_Entidades
 499+ A11A
 500+ A11A 3E 07            ld a,7
 501+ A11C 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A11D
 503+ A11D              ; ---------------
 504+ A11D
 505+ A11D              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A11D
 507+ A11D 21 20 89          ld hl,Indice_de_disparos_entidades
 508+ A120
 509+ A120 CD 2E 91     1 call Extrae_address
 510+ A123
 511+ A123 13               inc de
 512+ A124 13               inc de
 513+ A125
 514+ A125 ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A129
 516+ A129 2D               dec l
 517+ A12A 7E               ld a,(hl)
 518+ A12B A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A12C 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A12E
 521+ A12E              ; ----- ----- ----- -----
 522+ A12E
 523+ A12E 2D               dec l
 524+ A12F CD 2E 91         call Extrae_address
 525+ A132 E5               push hl
 526+ A133
 527+ A133 1D               dec e
 528+ A134
 529+ A134 EB               ex de,hl
 530+ A135
 531+ A135 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A136 2D               dec l
 533+ A137 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A138 2D               dec l
 535+ A139 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A13A
 537+ A13A E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A13B
 539+ A13B              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A13B
 541+ A13B FD 2A 5B 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A13F FD 73 00         ld (iy+0),e
 543+ A142 FD 70 01         ld (iy+1),b
 544+ A145 FD 71 02         ld (iy+2),c
 545+ A148
 546+ A148 FD 75 03         ld (iy+3),l
 547+ A14B FD 74 04         ld (iy+4),h
 548+ A14E
 549+ A14E CD 37 9A         call NextScan
 550+ A151
 551+ A151 FD 75 05         ld (iy+5),l
 552+ A154 FD 74 06         ld (iy+6),h
 553+ A157
 554+ A157 FD E5            push iy
 555+ A159 E1               pop hl
 556+ A15A
 557+ A15A 3E 07            ld a,7
 558+ A15C 85               add l
 559+ A15D 6F               ld l,a
 560+ A15E
 561+ A15E 22 5B 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A161
 563+ A161              ; ----- ----- ----- -----
 564+ A161
 565+ A161              Situa_en_siguiente_caja
 566+ A161
 567+ A161 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A162 3D               dec a
 569+ A163 C8               ret z
 570+ A164
 571+ A164 08               ex af,af
 572+ A165 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A168 18 B6            jr 1B
 574+ A16A
 575+ A16A              ; --------------------------------------------------------------------------------------
 576+ A16A              ;
 577+ A16A              ;   12/10/24
 578+ A16A              ;
 579+ A16A
 580+ A16A              Genera_disparo_de_entidad_maldosa
 581+ A16A
 582+ A16A              ;   Estructura de un disparo de entidades.
 583+ A16A
 584+ A16A              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A16A              ; 	defw 0											; Puntero de impresión.
 586+ A16A              ;	defw 0											; Control.
 587+ A16A
 588+ A16A              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A16A              ;   _de la entidad en el momento de disparar.
 590+ A16A
 591+ A16A              ;   El byte de control muestra la siguiente información:
 592+ A16A
 593+ A16A              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A16A              ;
 595+ A16A              ;                        10xx ..... Izquierda.
 596+ A16A              ;                        01xx ..... Derecha.
 597+ A16A              ;                        00xx ..... Recto.
 598+ A16A
 599+ A16A              ;*  Exclusiones.
 600+ A16A
 601+ A16A              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A16A              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A16A
 604+ A16A 3A 5F 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A16D A7               and a
 606+ A16E C8               ret z
 607+ A16F
 608+ A16F 3A FA 8B         ld a,(Coordenada_y)
 609+ A172 A7               and a
 610+ A173 C8               ret z
 611+ A174
 612+ A174 3D               dec a
 613+ A175 C8               ret z
 614+ A176
 615+ A176 FE 10            cp 16
 616+ A178 D0               ret nc
 617+ A179
 618+ A179              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A179              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A179              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A179
 622+ A179 21 61 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A17C 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A17D
 625+ A17D              ;   Decrementa el numero de disparos de entidades.
 626+ A17D
 627+ A17D 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A180 35               dec (hl)
 629+ A181
 630+ A181 21 20 89         ld hl,Indice_de_disparos_entidades
 631+ A184
 632+ A184 CD 2E 91     1 call Extrae_address
 633+ A187
 634+ A187 13               inc de
 635+ A188 13               inc de
 636+ A189
 637+ A189 ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A18D
 639+ A18D              ;   Comprobamos si la caja está vacía.
 640+ A18D
 641+ A18D 2D               dec l
 642+ A18E 7E               ld a,(hl)
 643+ A18F A7               and a
 644+ A190 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A192 2C               inc l
 646+ A193
 647+ A193              ;   Caja vacía, vamos a generar un disparo.
 648+ A193              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A193
 650+ A193 CD B4 A1         call Genera_byte_inclinacion
 651+ A196
 652+ A196 7E               ld a,(hl)
 653+ A197 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A198
 655+ A198 2D               dec l
 656+ A199
 657+ A199 CD D0 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A19C
 659+ A19C 70               ld (hl),b
 660+ A19D 2D               dec l
 661+ A19E 71               ld (hl),c
 662+ A19F
 663+ A19F 2D               dec l
 664+ A1A0
 665+ A1A0              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A1A0
 667+ A1A0 FD 7E 02         ld a,(iy+02)
 668+ A1A3 77               ld (hl),a
 669+ A1A4 2D               dec l
 670+ A1A5
 671+ A1A5 FD 7E 01         ld a,(iy+01)
 672+ A1A8 77               ld (hl),a
 673+ A1A9 2D               dec l
 674+ A1AA
 675+ A1AA FD 7E 00         ld a,(iy+00)
 676+ A1AD 77               ld (hl),a
 677+ A1AE
 678+ A1AE C9               ret
 679+ A1AF
 680+ A1AF              ;   --- --- ---
 681+ A1AF
 682+ A1AF              Situa_en_siguiente_disparo
 683+ A1AF
 684+ A1AF 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A1B2 18 D0            jr 1B
 686+ A1B4
 687+ A1B4              ; --------------------------------------------------------------------------------------
 688+ A1B4              ;
 689+ A1B4              ;   09/10/24
 690+ A1B4              ;
 691+ A1B4
 692+ A1B4              Genera_byte_inclinacion
 693+ A1B4
 694+ A1B4              ; Determina tendencia del disparo.
 695+ A1B4
 696+ A1B4 3A AF 89         ld a,(CX_Amadeus)
 697+ A1B7 47               ld b,a
 698+ A1B8 3A F9 8B         ld a,(Coordenada_X)
 699+ A1BB 90               sub b
 700+ A1BC 38 07            jr c,Disparo_a_derecha
 701+ A1BE
 702+ A1BE FE 06        Disparo_a_izquierda cp 6
 703+ A1C0
 704+ A1C0 D8               ret c
 705+ A1C1 C8               ret z
 706+ A1C2
 707+ A1C2 CB FE            set 7,(hl)
 708+ A1C4 C9               ret
 709+ A1C5
 710+ A1C5 47           Disparo_a_derecha ld b,a
 711+ A1C6 3E FF            ld a,$ff
 712+ A1C8 90               sub b
 713+ A1C9
 714+ A1C9 FE 05            cp 5
 715+ A1CB
 716+ A1CB D8               ret c
 717+ A1CC C8               ret z
 718+ A1CD
 719+ A1CD CB F6            set 6,(hl)
 720+ A1CF C9               ret
 721+ A1D0
 722+ A1D0              ; --------------------------------------------------------------------------------------
 723+ A1D0              ;
 724+ A1D0              ;   09/10/24
 725+ A1D0              ;
 726+ A1D0
 727+ A1D0              Modifica_puntero_de_impresion
 728+ A1D0
 729+ A1D0              ;   Puntero de impresión del disparo en BC.
 730+ A1D0
 731+ A1D0 E5               push hl
 732+ A1D1
 733+ A1D1 2A 74 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A1D4 CD 37 9A         call NextScan
 735+ A1D7
 736+ A1D7 4D               ld c,l
 737+ A1D8 44               ld b,h
 738+ A1D9
 739+ A1D9 E1               pop hl
 740+ A1DA
 741+ A1DA 08               ex af,af
 742+ A1DB CB 77            bit 6,a
 743+ A1DD 28 06            jr z,1F
 744+ A1DF
 745+ A1DF FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A1E3 0C               inc c
 747+ A1E4 C9               ret
 748+ A1E5
 749+ A1E5 CB 7F        1 bit 7,a
 750+ A1E7 28 F6            jr z,2B
 751+ A1E9
 752+ A1E9 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A1ED 0D               dec c
 754+ A1EE
 755+ A1EE C9               ret
 756+ A1EF
 757+ A1EF              ; --------------------------------------------------------------------------------------
 758+ A1EF              ;
 759+ A1EF              ;   28/11/24
 760+ A1EF              ;
 761+ A1EF
 762+ A1EF              Compara_con_coordenadas_de_disparo
 763+ A1EF
 764+ A1EF DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 765+ A1F2 47               ld b,a
 766+ A1F3 3A 79 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1F6 90               sub b
 768+ A1F7
 769+ A1F7              ; A = "0" ok
 770+ A1F7              ; A = "1" ok
 771+ A1F7
 772+ A1F7 28 08            jr z,Comprueba_coordenada_X
 773+ A1F9 3D               dec a
 774+ A1FA 28 05            jr z,Comprueba_coordenada_X
 775+ A1FC
 776+ A1FC              ; A = "$ff" ok
 777+ A1FC
 778+ A1FC FE FE            cp $fe
 779+ A1FE 28 01            jr z,Comprueba_coordenada_X
 780+ A200
 781+ A200 C9               ret
 782+ A201
 783+ A201              Comprueba_coordenada_X
 784+ A201
 785+ A201 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 786+ A204 47               ld b,a
 787+ A205 21 7A 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A208 7E               ld a,(hl)
 789+ A209 90               sub b
 790+ A20A
 791+ A20A              ; A = "0" ok
 792+ A20A              ; A = "1" ok
 793+ A20A
 794+ A20A 28 09            jr z,Activa_Impacto_en_entidad
 795+ A20C 3D               dec a
 796+ A20D 28 06            jr z,Activa_Impacto_en_entidad
 797+ A20F
 798+ A20F              ; A = "2" ok
 799+ A20F
 800+ A20F 3D               dec a
 801+ A210 28 03            jr z,Activa_Impacto_en_entidad
 802+ A212
 803+ A212              ; A = "$ff"
 804+ A212
 805+ A212 FE FD            cp $fd
 806+ A214 C0               ret nz
 807+ A215
 808+ A215              Activa_Impacto_en_entidad
 809+ A215
 810+ A215              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A215
 812+ A215 3E 02            ld a,2
 813+ A217 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 814+ A21A
 815+ A21A              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A21A
 817+ A21A 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A21D
 819+ A21D DD 73 07         ld (ix+7),e
 820+ A220 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 821+ A223
 822+ A223              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 823+ A223
 824+ A223 21 76 8C         ld hl,Impacto2
 825+ A226 CB 9E            res 3,(hl)
 826+ A228
 827+ A228 C9               ret
 828+ A229
 829+ A229              ; --------------------------------------------------------------------------------------
 830+ A229              ;
 831+ A229              ;   13/10/24
 832+ A229              ;
 833+ A229
 834+ A229              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 835+ A229
 836+ A229              Limpia_album_de_pintado_disparos_Amadeus
 837+ A229
 838+ A229 2A 53 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 839+ A22C 06 06            ld b,6
 840+ A22E AF               xor a
 841+ A22F 77           1 ld (hl),a
 842+ A230 2C               inc l
 843+ A231 10 FC            djnz 1B
 844+ A233
 845+ A233 C9               ret
 846+ A234
 847+ A234              ; --------------------------------------------------------------------------------------
 848+ A234              ;
 849+ A234              ;   29/09/24
 850+ A234              ;
 851+ A234
 852+ A234              Calcula_bytes_pintado_disparos
 853+ A234
 854+ A234 2A 57 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 855+ A237 45               ld b,l
 856+ A238 2A 5B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 857+ A23B 7D               ld a,l
 858+ A23C
 859+ A23C 90               sub b
 860+ A23D 32 5D 8C         ld (Num_de_bytes_album_de_disparos),a
 861+ A240
 862+ A240 C9               ret
 863+ A241
 864+ A241              ; --------------------------------------------------------------------------------------
 865+ A241              ;
 866+ A241              ;   26/10/24
 867+ A241              ;
 868+ A241              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 869+ A241              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 870+ A241              ;   _disparos que el álbum del FRAME actual).
 871+ A241
 872+ A241              Limpia_album_de_pintado_disparos_entidades
 873+ A241
 874+ A241 21 5E 8C         ld hl,Num_de_bytes_album_de_disparos+1
 875+ A244 7E               ld a,(hl)
 876+ A245 2D               dec l
 877+ A246 46               ld b,(hl)
 878+ A247 90               sub b
 879+ A248
 880+ A248 D8               ret c
 881+ A249 C8               ret z
 882+ A24A
 883+ A24A F5               push af
 884+ A24B 80               add b
 885+ A24C 77               ld (hl),a
 886+ A24D F1               pop af
 887+ A24E
 888+ A24E              ; Clean.
 889+ A24E
 890+ A24E 47           2 ld b,a
 891+ A24F AF               xor a
 892+ A250 2A 5B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 893+ A253 77           1 ld (hl),a
 894+ A254 23               inc hl
 895+ A255 10 FC            djnz 1B
 896+ A257
 897+ A257 C9               ret
 898+ A258
 899+ A258              ; --------------------------------------------------------------------------------------
 900+ A258              ;
 901+ A258              ;   29/09/24
 902+ A258              ;
 903+ A258
 904+ A258              Motor_Disparos_Amadeus
 905+ A258
 906+ A258 21 1D 89         ld hl,Disparo_Amad+1
 907+ A25B
 908+ A25B 34               inc (hl)
 909+ A25C 35               dec (hl)
 910+ A25D
 911+ A25D C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 912+ A25E
 913+ A25E              ;   Esta caja contiene un disparo.
 914+ A25E
 915+ A25E CD 65 A2         call Consulta_Impacto
 916+ A261 CC 7E A2         call z,Mueve_disparo_Amadeus
 917+ A264
 918+ A264 C9               ret
 919+ A265
 920+ A265              ; ----------------------
 921+ A265              ;
 922+ A265              ;
 923+ A265              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 924+ A265              ;
 925+ A265              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 926+ A265
 927+ A265
 928+ A265              Consulta_Impacto
 929+ A265
 930+ A265              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 931+ A265              ;   _sea lo más coherente posible.
 932+ A265
 933+ A265 E5               push hl
 934+ A266 2B               dec hl
 935+ A267 CD 5A A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 936+ A26A E1               pop hl
 937+ A26B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 938+ A26C
 939+ A26C C8               ret z
 940+ A26D
 941+ A26D 3A 76 8C         ld a,(Impacto2)
 942+ A270 CB DF            set 3,a
 943+ A272 32 76 8C         ld (Impacto2),a
 944+ A275
 945+ A275 E5               push hl
 946+ A276 CD 47 A3         call Genera_coordenadas_de_disparo_Amadeus
 947+ A279 E1               pop hl
 948+ A27A CD 97 A2         call Elimina_disparo_Amadeus
 949+ A27D
 950+ A27D C9               ret
 951+ A27E
 952+ A27E              ; ----------------------
 953+ A27E              ;
 954+ A27E              ;
 955+ A27E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 956+ A27E
 957+ A27E              Mueve_disparo_Amadeus
 958+ A27E
 959+ A27E CD 2E 91         call Extrae_address
 960+ A281
 961+ A281 CD 46 9A         call PreviousScan
 962+ A284 CD 46 9A         call PreviousScan
 963+ A287 CD 46 9A         call PreviousScan
 964+ A28A CD 46 9A         call PreviousScan
 965+ A28D
 966+ A28D              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 967+ A28D
 968+ A28D 7C               ld a,h
 969+ A28E D6 40            sub $40
 970+ A290 EB               ex de,hl
 971+ A291 38 04            jr c,Elimina_disparo_Amadeus
 972+ A293
 973+ A293               ; Introduce nuevo puntero_de_impresión en la caja.
 974+ A293
 975+ A293 73               ld (hl),e
 976+ A294 23               inc hl
 977+ A295 72               ld (hl),d
 978+ A296
 979+ A296 C9               ret
 980+ A297
 981+ A297              ; ----------------------
 982+ A297              ;
 983+ A297              ;   29/9/24
 984+ A297
 985+ A297              Elimina_disparo_Amadeus
 986+ A297
 987+ A297              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 988+ A297              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 989+ A297
 990+ A297              ;   Disparo_1A defw 0									; Puntero objeto.
 991+ A297              ;   	defw 0											; Puntero de impresión.
 992+ A297
 993+ A297 2B               dec hl
 994+ A298 2B               dec hl
 995+ A299
 996+ A299 AF               xor a
 997+ A29A 77               ld (hl),a
 998+ A29B 23               inc hl
 999+ A29C 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1000+ A29D
1001+ A29D 23               inc hl
1002+ A29E 77               ld (hl),a
1003+ A29F 23               inc hl
1004+ A2A0 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1005+ A2A1
1006+ A2A1 3E 01            ld a,1
1007+ A2A3 32 60 8C         ld (Permiso_de_disparo_Amadeus),a
1008+ A2A6
1009+ A2A6 CD 29 A2         call Limpia_album_de_pintado_disparos_Amadeus
1010+ A2A9
1011+ A2A9 AF               xor a
1012+ A2AA 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1013+ A2AB
1014+ A2AB C9               ret
1015+ A2AC
1016+ A2AC              ; --------------------------------------------------------------------------------------
1017+ A2AC              ;
1018+ A2AC              ;   13/10/24
1019+ A2AC              ;
1020+ A2AC
1021+ A2AC              Pinta_disparos_Amadeus
1022+ A2AC
1023+ A2AC 06 02            ld b,2
1024+ A2AE ED 73 47 8C      ld (Stack),sp
1025+ A2B2 ED 7B 55 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1026+ A2B6 D1           3 pop de
1027+ A2B7 14               inc d
1028+ A2B8 15               dec d
1029+ A2B9 28 1C            jr z,1F
1030+ A2BB E1               pop hl
1031+ A2BC
1032+ A2BC              Imprime_scanlines_en_pantalla
1033+ A2BC
1034+ A2BC              ; 1er scanline
1035+ A2BC
1036+ A2BC 1A               ld a,(de)
1037+ A2BD AE               xor (hl)
1038+ A2BE 77               ld (hl),a
1039+ A2BF
1040+ A2BF 1C               inc e
1041+ A2C0 2C               inc l
1042+ A2C1
1043+ A2C1 1A               ld a,(de)
1044+ A2C2 AE               xor (hl)
1045+ A2C3 77               ld (hl),a
1046+ A2C4
1047+ A2C4 1D               dec e
1048+ A2C5 E1               pop hl
1049+ A2C6
1050+ A2C6              ; 2º scanline
1051+ A2C6
1052+ A2C6 1A               ld a,(de)
1053+ A2C7 AE               xor (hl)
1054+ A2C8 77               ld (hl),a
1055+ A2C9
1056+ A2C9 1C               inc e
1057+ A2CA 2C               inc l
1058+ A2CB
1059+ A2CB 1A               ld a,(de)
1060+ A2CC AE               xor (hl)
1061+ A2CD 77               ld (hl),a
1062+ A2CE
1063+ A2CE 1D               dec e
1064+ A2CF
1065+ A2CF 18 06            jr 1F
1066+ A2D1
1067+ A2D1 ED 7B 53 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1068+ A2D5 18 DF            jr 3B
1069+ A2D7 10 F8        1 djnz 2B
1070+ A2D9 ED 7B 47 8C      ld sp,(Stack)
1071+ A2DD C9               ret
1072+ A2DE
1073+ A2DE              ; --------------------------------------------------------------------------------------
1074+ A2DE              ;
1075+ A2DE              ;   13/10/24
1076+ A2DE              ;
1077+ A2DE              ;   Modifica: HL,BC y DE.
1078+ A2DE
1079+ A2DE
1080+ A2DE              Genera_datos_de_impresion_disparos_Amadeus
1081+ A2DE
1082+ A2DE ED 73 47 8C      ld (Stack),sp
1083+ A2E2 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1084+ A2E5 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1085+ A2E6
1086+ A2E6 14               inc d                                                     ;? Salimos si no hay disparo.
1087+ A2E7 15               dec d
1088+ A2E8
1089+ A2E8 28 0E            jr z,Salida
1090+ A2EA
1091+ A2EA              Genera_scanlines_de_disparo_Amadeus
1092+ A2EA
1093+ A2EA E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1094+ A2EB              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1095+ A2EB ED 7B 53 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1096+ A2EF
1097+ A2EF C1               pop bc
1098+ A2F0 C1               pop bc
1099+ A2F1 C1               pop bc
1100+ A2F2
1101+ A2F2 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1102+ A2F3 CD 46 9A         call PreviousScan
1103+ A2F6 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1104+ A2F7 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1105+ A2F8
1106+ A2F8              Salida
1107+ A2F8
1108+ A2F8 ED 7B 47 8C      ld sp,(Stack)
1109+ A2FC
1110+ A2FC C9               ret
1111+ A2FD
1112+ A2FD              ; --------------------------------------------------------------------------------------
1113+ A2FD              ;
1114+ A2FD              ;   12/09/24
1115+ A2FD              ;
1116+ A2FD
1117+ A2FD              Genera_disparo_Amadeus
1118+ A2FD
1119+ A2FD              ;*  Exclusiones.
1120+ A2FD
1121+ A2FD 3A 60 8C         ld a,(Permiso_de_disparo_Amadeus)
1122+ A300 A7               and a
1123+ A301 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1124+ A302
1125+ A302 3D               dec a
1126+ A303 32 60 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1127+ A306
1128+ A306              Define_puntero_objeto_disparo
1129+ A306
1130+ A306              ;   Inicializamos contador.
1131+ A306
1132+ A306 06 00            ld b,0
1133+ A308
1134+ A308 2A B3 89         ld hl,(p.imp.amadeus)
1135+ A30B 2C               inc l
1136+ A30C
1137+ A30C 3E 80            ld a,$80
1138+ A30E BE               cp (hl)
1139+ A30F 28 0D            jr z,1F
1140+ A311
1141+ A311 04               inc b
1142+ A312
1143+ A312 3E 60            ld a,$60
1144+ A314 BE               cp (hl)
1145+ A315 28 07            jr z,1F
1146+ A317
1147+ A317
1148+ A317 04               inc b
1149+ A318
1150+ A318 3E 18            ld a,$18
1151+ A31A BE               cp (hl)
1152+ A31B 28 01            jr z,1F
1153+ A31D
1154+ A31D 04               inc b
1155+ A31E
1156+ A31E              ;   Calcula el Puntero_de_impresión del disparo.
1157+ A31E
1158+ A31E              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1159+ A31E
1160+ A31E CD 46 9A     1 call PreviousScan
1161+ A321
1162+ A321 78               ld a,b
1163+ A322 CB 3F            srl a
1164+ A324 28 03            jr z,4F
1165+ A326
1166+ A326              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1167+ A326 E5               push hl
1168+ A327 18 02            jr 5F
1169+ A329 2D           4 dec l
1170+ A32A E5               push hl
1171+ A32B              ; ---
1172+ A32B
1173+ A32B              ;   Calcula el Puntero_objeto del disparo.
1174+ A32B
1175+ A32B 21 76 83     5 ld hl,Indice_disparo_Amadeus
1176+ A32E 04               inc b
1177+ A32F 05               dec b
1178+ A330 28 04            jr z,2F
1179+ A332
1180+ A332              ;   Nos desplazamos por el índice de disparos.
1181+ A332
1182+ A332 2C           3 inc l
1183+ A333 2C               inc l
1184+ A334 10 FC            djnz 3B
1185+ A336
1186+ A336              ; --- Guarda el Puntero_objeto del disparo en la pila.
1187+ A336 CD 2E 91     2 call Extrae_address
1188+ A339 E5               push hl
1189+ A33A              ; ---
1190+ A33A
1191+ A33A              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1192+ A33A              ; HL en el 1er .db de la caja.
1193+ A33A
1194+ A33A 21 1C 89         ld hl,Disparo_Amad
1195+ A33D
1196+ A33D 06 02            ld b,2
1197+ A33F
1198+ A33F D1           6 pop de
1199+ A340 73               ld (hl),e
1200+ A341 23               inc hl
1201+ A342 72               ld (hl),d
1202+ A343 23               inc hl
1203+ A344
1204+ A344 10 F9            djnz 6B
1205+ A346
1206+ A346 C9               ret
1207+ A347
1208+ A347              Genera_coordenadas_de_disparo_Amadeus
1209+ A347
1210+ A347              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1211+ A347              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1212+ A347              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1213+ A347
1214+ A347 CD 2E 91         call Extrae_address
1215+ A34A CD 42 95         call Genera_coordenadas
1216+ A34D
1217+ A34D 3D               dec a
1218+ A34E
1219+ A34E 21 79 8C         ld hl,Coordenadas_disparo_certero
1220+ A351 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1221+ A352 23               inc hl
1222+ A353 3A F9 8B         ld a,(Coordenada_X)
1223+ A356 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1224+ A357
1225+ A357 AF               xor a
1226+ A358 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1227+ A359
1228+ A359 C9               ret
1229+ A35A
1230+ A35A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1231+ A35A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1232+ A35A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A35A
1234+ A35A              ; ----------------------------------------------
1235+ A35A              ;
1236+ A35A              ;   27/08/24
1237+ A35A              ;
1238+ A35A              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1239+ A35A              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1240+ A35A
1241+ A35A              Detecta_impacto_en_disparo_de_Amadeus
1242+ A35A
1243+ A35A              Extraccion_de_datos
1244+ A35A
1245+ A35A 13               inc de
1246+ A35B 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1247+ A35C
1248+ A35C 5E               ld e,(hl)
1249+ A35D 23               inc hl
1250+ A35E 56               ld d,(hl)
1251+ A35F
1252+ A35F 23               inc hl
1253+ A360
1254+ A360 4E               ld c,(hl)
1255+ A361 23               inc hl
1256+ A362 46               ld b,(hl)
1257+ A363
1258+ A363 C5               push bc
1259+ A364 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1260+ A365
1261+ A365              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1262+ A365
1263+ A365 CD 46 9A         call PreviousScan
1264+ A368 CD 46 9A         call PreviousScan
1265+ A36B
1266+ A36B              Detecta_impacto_
1267+ A36B
1268+ A36B 1A               ld a,(de)
1269+ A36C A6               and (hl)
1270+ A36D C0               ret nz
1271+ A36E
1272+ A36E 13               inc de
1273+ A36F 23               inc hl
1274+ A370
1275+ A370 1A               ld a,(de)
1276+ A371 A6               and (hl)
1277+ A372 C9               ret
1278+ A373
1279+ A373              ; -------------------------------------------------------------------------------------------------------------
1280+ A373              ;
1281+ A373              ;   25/11//24
1282+ A373              ;
1283+ A373              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1284+ A373              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1285+ A373              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1286+ A373              ;
1287+ A373              ;   MODIFICA: HL,DE,BC y A.
1288+ A373              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1289+ A373              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1290+ A373
1291+ A373              Colision_Entidad_Amadeus
1292+ A373
1293+ A373              ; Posible contacto de entidad con Amadeus. ?????
1294+ A373
1295+ A373              ; Exclusiones:
1296+ A373
1297+ A373 3A 99 8C         ld a,(Shield)
1298+ A376 A7               and a
1299+ A377 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1300+ A378
1301+ A378 21 6F 8C         ld hl,Ctrl_3
1302+ A37B CB 76            bit 6,(hl)
1303+ A37D C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1304+ A37E
1305+ A37E 21 76 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1306+ A381 CB 56            bit 2,(hl)
1307+ A383 C0               ret nz
1308+ A384
1309+ A384 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1310+ A387 FE 14        	cp $14
1311+ A389 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1312+ A38A
1313+ A38A 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1314+ A38D A7               and a
1315+ A38E C0               ret nz
1316+ A38F
1317+ A38F              Genera_coordenadas_X
1318+ A38F
1319+ A38F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1320+ A38F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1321+ A38F
1322+ A38F              ;   Limpiamos almacenes.
1323+ A38F
1324+ A38F              ;    call Limpia_Coordenadas_X
1325+ A38F
1326+ A38F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1327+ A38F
1328+ A38F 21 7B 8C         ld hl,Coordenadas_X_Entidad
1329+ A392 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1330+ A395 CD BB A3         call Guarda_coordenadas_X
1331+ A398
1332+ A398              ;   Almacenamos las coordenadas X de Amadeus.
1333+ A398
1334+ A398 3A AF 89         ld a,(CX_Amadeus)
1335+ A39B CD BB A3         call Guarda_coordenadas_X
1336+ A39E
1337+ A39E DD E5            push ix
1338+ A3A0 CD CF A3         call Compara_coordenadas_X
1339+ A3A3 DD E1            pop ix
1340+ A3A5
1341+ A3A5 C0               ret nz
1342+ A3A6
1343+ A3A6 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1344+ A3A8 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1345+ A3AB
1346+ A3AB DD 7D            ld a,ixl
1347+ A3AD C6 04            add 4
1348+ A3AF DD 6F            ld ixl,a
1349+ A3B1
1350+ A3B1 DD 22 77 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1351+ A3B5
1352+ A3B5 21 76 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1353+ A3B8 CB D6            set 2,(hl)
1354+ A3BA
1355+ A3BA C9               ret
1356+ A3BB
1357+ A3BB               ; ----- ----- ----- ----- -----
1358+ A3BB
1359+ A3BB 77           Guarda_coordenadas_X ld (hl),a
1360+ A3BC 3C               inc a
1361+ A3BD 2C               inc l
1362+ A3BE 77               ld (hl),a
1363+ A3BF 3C               inc a
1364+ A3C0 2C               inc l
1365+ A3C1 77               ld (hl),a
1366+ A3C2 2C               inc l
1367+ A3C3 C9               ret
1368+ A3C4
1369+ A3C4 AF           Limpia_Coordenadas_X xor a
1370+ A3C5 06 06            ld b,6
1371+ A3C7 21 7E 8C         ld hl,Coordenadas_X_Amadeus
1372+ A3CA 77           1 ld (hl),a
1373+ A3CB 23               inc hl
1374+ A3CC 10 FC            djnz 1B
1375+ A3CE C9               ret
1376+ A3CF
1377+ A3CF              ; ----- ----- ----- ----- -----
1378+ A3CF
1379+ A3CF              Compara_coordenadas_X
1380+ A3CF
1381+ A3CF DD 21 7B 8C      ld ix,Coordenadas_X_Entidad
1382+ A3D3 DD 7E 00         ld a,(ix+0)
1383+ A3D6 CD E4 A3         call Comparando
1384+ A3D9 C8               ret z
1385+ A3DA
1386+ A3DA 3C               inc a
1387+ A3DB CD F3 A3         call Comparando_1
1388+ A3DE C8               ret z
1389+ A3DF
1390+ A3DF 3C               inc a
1391+ A3E0 CD F3 A3         call Comparando_1
1392+ A3E3 C9               ret
1393+ A3E4
1394+ A3E4              ; ----- ----- ----- ----- -----
1395+ A3E4              ;
1396+ A3E4              ;   4/12/23
1397+ A3E4              ;
1398+ A3E4              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1399+ A3E4
1400+ A3E4              Comparando
1401+ A3E4
1402+ A3E4 DD 2C            inc ixl
1403+ A3E6 DD 2C            inc ixl
1404+ A3E8 DD 2C            inc ixl
1405+ A3EA
1406+ A3EA DD 46 00         ld b,(ix+0)
1407+ A3ED DD 4E 01         ld c,(ix+1)
1408+ A3F0 DD 56 02         ld d,(ix+2)
1409+ A3F3
1410+ A3F3 B8           Comparando_1 cp b
1411+ A3F4 C8               ret z
1412+ A3F5 B9               cp c
1413+ A3F6 C8               ret z
1414+ A3F7 BA               cp d
1415+ A3F8 C9               ret
1416+ A3F9
1417+ A3F9              ; -----------------------------------------------------------------------
1418+ A3F9              ;
1419+ A3F9              ;   04/7/24
1420+ A3F9              ;
1421+ A3F9
1422+ A3F9              Detecta_colision_nave_entidad
1423+ A3F9
1424+ A3F9              ; Exclusiones:
1425+ A3F9
1426+ A3F9              ; Salimos de la rutina si no hay advertencia de posible colisión.
1427+ A3F9
1428+ A3F9 21 76 8C     	ld hl,Impacto2
1429+ A3FC CB 56        	bit 2,(hl)
1430+ A3FE C8           	ret z
1431+ A3FF
1432+ A3FF              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1433+ A3FF
1434+ A3FF 2A B5 89         ld hl,(Pamm_Amadeus)
1435+ A402 CD 2E 91         call Extrae_address
1436+ A405 54               ld d,h
1437+ A406 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1438+ A407
1439+ A407 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1440+ A40A 06 10            ld b,16                                        ; Contador de scanlines en B.
1441+ A40C FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1442+ A40F
1443+ A40F C5           1 push bc
1444+ A410 06 03            ld b,3
1445+ A412 E5               push hl
1446+ A413
1447+ A413              ; .db
1448+ A413
1449+ A413 1A           3 ld a,(de)
1450+ A414 A7               and a
1451+ A415 20 03            jr nz,4F
1452+ A417
1453+ A417 2C               inc l
1454+ A418 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1455+ A41A
1456+ A41A ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1457+ A41C 28 04            jr z,2F
1458+ A41E
1459+ A41E              ; Impacto.
1460+ A41E FD 2D            dec iyl
1461+ A420 28 22            jr z,5F
1462+ A422
1463+ A422 1C           2 inc e
1464+ A423 10 EE            djnz 3B
1465+ A425
1466+ A425 E1               pop hl
1467+ A426
1468+ A426              ; Hay salto de línea en el puntero de impresión ???
1469+ A426
1470+ A426 7C               ld a,h
1471+ A427 D6 57            sub $57
1472+ A429 20 0A            jr nz,6F
1473+ A42B
1474+ A42B              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1475+ A42B
1476+ A42B 2A B3 89         ld hl,(p.imp.amadeus)
1477+ A42E 3E 20            ld a,$20
1478+ A430 A7               and a
1479+ A431 85               add l
1480+ A432 6F               ld l,a
1481+ A433 18 01            jr 7F
1482+ A435
1483+ A435 24           6 inc h
1484+ A436
1485+ A436 C1           7 pop bc
1486+ A437 10 D6            djnz 1B
1487+ A439
1488+ A439              ;   Fin de la comparativa.
1489+ A439
1490+ A439              ;   NO HAY COLISIÓN !!!!!.
1491+ A439              ;
1492+ A439              ;   .db (Impacto) de Amadeus a "0".
1493+ A439              ;   RES el bit2 de (Impacto2).
1494+ A439              ;
1495+ A439              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1496+ A439              ;   Lo colocamos a "0".
1497+ A439
1498+ A439 21 76 8C         ld hl,Impacto2
1499+ A43C CB 96            res 2,(hl)
1500+ A43E 2A 77 8C         ld hl,(Entidad_sospechosa_de_colision)
1501+ A441 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1502+ A443 C9               ret
1503+ A444
1504+ A444              ;   COLISIÓN !!!!!.
1505+ A444              ;
1506+ A444              ;   .db (Impacto) de Amadeus a "1".
1507+ A444              ;   SET el bit3 de (Impacto2).
1508+ A444              ;
1509+ A444              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1510+ A444
1511+ A444 E1           5 pop hl
1512+ A445 C1               pop bc
1513+ A446
1514+ A446 21 B2 89         ld hl,Impacto_Amadeus
1515+ A449 36 01            ld (hl),1
1516+ A44B 21 76 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1517+ A44E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1518+ A450
1519+ A450 11 C0 87         ld de,Indice_Explosion_entidades
1520+ A453 2A 77 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1521+ A456
1522+ A456 23               inc hl
1523+ A457 23               inc hl
1524+ A458 23               inc hl
1525+ A459
1526+ A459 73               ld (hl),e
1527+ A45A 23               inc hl
1528+ A45B 72               ld (hl),d
1529+ A45C
1530+ A45C              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1531+ A45C
1532+ A45C 11 60 88         ld de,Indice_Explosion_Amadeus
1533+ A45F 21 B5 89         ld hl,Pamm_Amadeus
1534+ A462
1535+ A462 73               ld (hl),e
1536+ A463 23               inc hl
1537+ A464 72               ld (hl),d
1538+ A465
1539+ A465 C9               ret
1540+ A466
1541+ A466
1542+ A466
# file closed: Disparo.asm
2191  A466
2192  A466              	SAVESNA "Pruebas.sna", START
2193  A466
2194  A466
2195  A466
2196  A466
# file closed: Banco_de_pruebas.asm
