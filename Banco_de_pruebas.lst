# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 43 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 1E 47        	defw $471e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 B2 95 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
216+  851B
217+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
218+  851E
219+  851E 00           	db 0 											; (Columnas).
220+  851F 00 00        	defw 0											; (Limite_horizontal).
221+  8521 00           	db 0											; (Limite_vertical).
222+  8522
223+  8522              ; ---------- ---------- ---------- ---------- ----------
224+  8522
225+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
226+  8524 00 00        	defw 0                                          ; (Posicion_actual).
227+  8526 00 00        	defw 0											; (Puntero_objeto).
228+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
229+  852B
230+  852B 04           	db %00000100									; (Attr).
231+  852C
232+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
233+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
234+  8530
235+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
236+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
237+  8534
238+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
239+  8536 01           	db 1											; (Cuad_objeto).
240+  8537
241+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
242+  853B
243+  853B 00 00        	db 0,0											; Variables_de_borrado
244+  853D 00 00        	defw 0										 	;	" " " " " " "
245+  853F 00 00        	defw 0											;	" " " " " " "
246+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
247+  8545
248+  8545 00 00        	db 0,0											; Variables_de_pintado
249+  8547 00 00        	defw 0											;	" " " " " " "
250+  8549 00 00        	defw 0											;	" " " " " " "
251+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
252+  854F
253+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
254+  8551
255+  8551 B4 95 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
256+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
257+  8558
258+  8558 00           	db 0 											; (Columnas).
259+  8559 00 00        	defw 0											; (Limite_horizontal).
260+  855B 00           	db 0											; (Limite_vertical).
261+  855C
262+  855C              ; ---------- ---------- ---------- ---------- ----------
263+  855C
264+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
265+  855E 00 00        	defw 0                                          ; (Posicion_actual).
266+  8560 00 00        	defw 0 											; (Puntero_objeto).
267+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
268+  8565
269+  8565 01           	db %00000001									; (Attr).
270+  8566
271+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
272+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
273+  856A
274+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
275+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
276+  856E
277+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
278+  8570 00           	db 0											; (Cuad_objeto).
279+  8571
280+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
281+  8575
282+  8575 00 00        	db 0,0											; Variables_de_borrado
283+  8577 00 00        	defw 0										 	;	" " " " " " "
284+  8579 00 00        	defw 0											;	" " " " " " "
285+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
286+  857F
287+  857F 00 00        	db 0,0											; Variables_de_pintado
288+  8581 00 00        	defw 0											;	" " " " " " "
289+  8583 00 00        	defw 0											;	" " " " " " "
290+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
291+  8589
292+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
293+  858B
294+  858B A4 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
295+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
296+  8592
297+  8592 00           	db 0 											; (Columnas).
298+  8593 00 00        	defw 0											; (Limite_horizontal).
299+  8595 00           	db 0											; (Limite_vertical).
300+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 B4 95        Puntero_indice_mov defw Indice_mov_Onda_senoidal
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1 00           Numero_de_disparotes db 0
194   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
195   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
196   85E6 00           Impacto db 0											; Este byte indica que se ha producido impacto:
197   85E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
198   85E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
199   85E7 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
200   85EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
201   85EA              ; Gestión de FRAMES.
202   85EA
203   85EA 00           Switch db 0
204   85EB
205   85EB              ; Variables de Raster y localización en pantalla.
206   85EB
207   85EB 00 FF        Temp_Raster defw $ff00
208   85ED
209   85ED              ; Rutina principal *************************************************************************************************************************************************************************
210   85ED              ;
211   85ED              ;	14/11/22
212   85ED
213   85ED 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
214   85F0
215   85F0 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
216   85F2 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
217   85F4 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
218   85F6 F3           	DI
219   85F7
220   85F7 3E 01        	ld a,1
221   85F9 D3 FE        	out ($fe),a
222   85FB
223   85FB 3E 07        	ld a,%00000111
224   85FD CD C8 91     	call Cls
225   8600
226   8600              ;	call Pinta_FILAS
227   8600
228   8600 CD 59 88     	call Pulsa_ENTER
229   8603
230   8603 21 D7 85     	ld hl,Numero_de_entidades
231   8606 46           	ld b,(hl)
232   8607 04           	inc b
233   8608 05           	dec b
234   8609 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
235   860B
236   860B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
237   860B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
238   860B              ;	Pintamos el resto de entidades:
239   860B
240   860B CD 52 87     	call Inicia_punteros_de_entidades
241   860E
242   860E              ;	INICIA ENTIDADES!!!!!
243   860E
244   860E C5           1 push bc  												; Guardo el contador de entidades.
245   860F CD AC 87      	call Inicia_Puntero_objeto
246   8612 CD 18 8C     	call Draw
247   8615 CD A0 7F     	call Guarda_foto_registros
248   8618 CD F4 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
249   861B C1           	pop bc
250   861C 10 F0        	djnz 1B  											; Decremento el contador de entidades.
251   861E
252   861E              ; 	INICIA AMADEUS!!!!!
253   861E
254   861E CD 35 88     3 call Restore_Amadeus
255   8621 CD AC 87     	call Inicia_Puntero_objeto
256   8624 CD 18 8C     	call Draw
257   8627 CD A0 7F     	call Guarda_foto_registros
258   862A CD 47 88     	call Store_Amadeus
259   862D
260   862D              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
261   862D
262   862D CD 68 87     	call Inicia_Puntero_Disparo_Entidades
263   8630 CD 6F 87     	call Inicia_Puntero_Disparo_Amadeus
264   8633
265   8633              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
266   8633
267   8633 CD 52 87     	call Inicia_punteros_de_entidades
268   8636 CD 23 88     	call Restore_Primera_entidad
269   8639
270   8639 3A D7 85     	ld a,(Numero_de_entidades)
271   863C 3C           	inc a
272   863D 32 D8 85     	ld (Numero_de_malotes),a
273   8640
274   8640 FB           2 ei
275   8641 18 FD        	jr 2B
276   8643
277   8643              ; -----------------------------------------------------------------------------------
278   8643
279   8643              Frame
280   8643
281   8643              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
282   8643              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
283   8643
284   8643 3E 02            ld a,2
285   8645 D3 FE            out ($fe),a
286   8647 CD 1C 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
287   864A CD 55 8F     	call Extrae_foto_disparos
288   864D 3E 01            ld a,1
289   864F D3 FE            out ($fe),a
290   8651
291   8651              ; ----------------------------------------------------------------------
292   8651
293   8651              ;	Existe colisión?????
294   8651
295   8651 3A E6 85     	ld a,(Impacto)
296   8654 A7           	and a
297   8655 28 02        	jr z,5F
298   8657
299   8657              ; A="1" Impacto en entidad por disparo de Amadeus.
300   8657              ; A="2"	Impacto en Amadeus por disparo en entidad.
301   8657
302   8657 18 FE        	jr $
303   8659
304   8659 AF           5 xor a
305   865A 32 E6 85     	ld (Impacto),a										; Flag (Impacto) a "0".
306   865D
307   865D CD AA 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
308   8660 CD C8 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
309   8663
310   8663 21 00 70     	ld hl,Album_de_fotos
311   8666 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
312   8669              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
313   8669 3A D7 85         ld a,(Numero_de_entidades)
314   866C 47               ld b,a
315   866D A7           	and a
316   866E 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
317   8670
318   8670 C5           2 push bc
319   8671 CD BD 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
320   8674
321   8674 3A C3 85     	ld a,(Ctrl_0)
322   8677 CB 67        	bit 4,a
323   8679 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
324   867B
325   867B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
326   867B              ; Las entidades sólo generan disparo cuando se mueven.
327   867B              ; 16/02/23.
328   867B              ; [[[
329   867B CD 90 88     	call Detecta_disparo_entidad
330   867E              ; ]]]
331   867E CD 19 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
332   8681
333   8681 21 C3 85     1 ld hl,Ctrl_0
334   8684 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
335   8686 AF           	xor a
336   8687 32 C4 85     	ld (Obj_dibujado),a
337   868A
338   868A CD F4 87     6 call Store_Restore_entidades
339   868D C1           	pop bc
340   868E 10 E0        	djnz 2B
341   8690
342   8690              ; Tras la gestión de las entidades, ... AMADEUS.
343   8690
344   8690 CD 35 88     4 call Restore_Amadeus
345   8693 CD EA 86     	call Mov_Amadeus
346   8696 3A C3 85     	ld a,(Ctrl_0)
347   8699 CB 67        	bit 4,a
348   869B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
349   869D CD 19 87     	call Guarda_foto_entidad_a_pintar
350   86A0
351   86A0 21 C3 85     3 ld hl,Ctrl_0
352   86A3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
353   86A5 AF           	xor a
354   86A6 32 C4 85     	ld (Obj_dibujado),a
355   86A9 CD 47 88     	call Store_Amadeus
356   86AC
357   86AC              ; -----
358   86AC
359   86AC CD 52 87     	call Inicia_punteros_de_entidades
360   86AF CD 23 88     	call Restore_Primera_entidad
361   86B2
362   86B2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
363   86B2
364   86B2 CD 76 87     	call Calcula_numero_de_malotes
365   86B5 CD 8E 87     	call Calcula_numero_de_disparotes
366   86B8
367   86B8 3E 04        	ld a,4
368   86BA D3 FE        	out ($fe),a
369   86BC C9           	ret
370   86BD
371   86BD              ; --------------------------------------------------------------------------------------------------------------
372   86BD              ;
373   86BD              ;	27/03/23
374   86BD
375   86BD              Mov_obj
376   86BD
377   86BD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
378   86BD
379   86BD AF           	xor a
380   86BE 32 C4 85     	ld (Obj_dibujado),a
381   86C1 CD 23 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
382   86C4              ;														; Obj_dibujado="0".
383   86C4              ; Movemos Entidades malignas.
384   86C4
385   86C4 2A C5 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
386   86C7 24           	inc h                                               ; Salimos de la rutina.
387   86C8 25           	dec h
388   86C9 C8           	ret z
389   86CA
390   86CA CD B6 95     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
391   86CD
392   86CD 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
393   86D0 CB 67        	bit 4,a
394   86D2 C8           	ret z
395   86D3
396   86D3              ; Ha habido desplazamiento de la entidad maligna. :-).
397   86D3              ; Ha llegado a zona de AMADEUS ???
398   86D3
399   86D3 3A 9D 85     	ld a,(Coordenada_y)
400   86D6 FE 14        	cp $14
401   86D8 D4 4C 8A     	call nc, Detecta_colision_nave_entidad
402   86DB
403   86DB              ; ---------
404   86DB
405   86DB 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
406   86DD 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
407   86E0 CD 23 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
408   86E3 CD 3A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
409   86E6 CD 09 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
410   86E9 C9           	ret													; _de la misma.
411   86EA
412   86EA              ; --------------------------------------------------------------------------------------------------------------
413   86EA              ;
414   86EA              ;	29/1/23
415   86EA
416   86EA              Mov_Amadeus
417   86EA
418   86EA AF           	xor a
419   86EB 32 C4 85     	ld (Obj_dibujado),a
420   86EE CD 23 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
421   86F1              ;														; Obj_dibujado="0".
422   86F1              ; Movemos Amadeus.
423   86F1
424   86F1 CD 6D 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
425   86F4 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
426   86F7 CB 67        	bit 4,a
427   86F9 C8           	ret z
428   86FA
429   86FA              ; ---------
430   86FA
431   86FA 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
432   86FC 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
433   86FF CD 23 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
434   8702 CD 3A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
435   8705 CD 09 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
436   8708 C9           	ret													; _de la nave.
437   8709
438   8709              ; --------------------------------------------------------------------------------------------------------------
439   8709              ;
440   8709              ;	31/01/23
441   8709              ;
442   8709              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
443   8709
444   8709              Guarda_foto_entidad_a_borrar
445   8709
446   8709 CD F2 8E     	call Prepara_draw
447   870C CD 2C 8E     	call calcula_CColumnass
448   870F CD 63 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
449   8712 CD B8 8E     	call Define_rutina_de_impresion
450   8715 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
451   8718 C9           	ret
452   8719
453   8719              ; --------------------------------------------------------------------------------------------------------------
454   8719              ;
455   8719              ;	31/01/23
456   8719              ;
457   8719              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
458   8719              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
459   8719
460   8719              Guarda_foto_entidad_a_pintar
461   8719
462   8719 CD 46 87     	call Repone_pintar
463   871C CD 18 8C     	call Draw
464   871F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
465   8722 C9           	ret
466   8723
467   8723              ; --------------------------------------------------------------------------------------------------------------
468   8723              ;
469   8723              ;
470   8723
471   8723 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
472   8726 3A C4 85     	ld a,(Obj_dibujado)
473   8729 A7           	and a
474   872A 28 05        	jr z,1F
475   872C 11 B9 85     	ld de,Variables_de_pintado
476   872F 18 03        	jr 2F
477   8731 11 AF 85     1 ld de,Variables_de_borrado
478   8734 01 08 00     2 ld bc,8
479   8737 ED B0        	ldir
480   8739 C9           	ret
481   873A
482   873A              ; --------------------------------------------------------------------------------------------------------------
483   873A
484   873A 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
485   873D 11 96 85     	ld de,Filas
486   8740 01 08 00     	ld bc,8
487   8743 ED B0        	ldir
488   8745 C9           	ret
489   8746
490   8746 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
491   8749 11 96 85     	ld de,Filas
492   874C 01 08 00     	ld bc,8
493   874F ED B0        	ldir
494   8751 C9           	ret
495   8752
496   8752              ; *************************************************************************************************************************************************************
497   8752              ;
498   8752              ; 8/1/23
499   8752              ;
500   8752              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
501   8752              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
502   8752              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
503   8752
504   8752              ; Destruye HL y DE !!!!!
505   8752
506   8752              Inicia_punteros_de_entidades
507   8752
508   8752 21 68 84     	ld hl,Indice_de_entidades
509   8755 CD A6 87         call Extrae_address
510   8758 22 D1 85         ld (Puntero_store_entidades),hl
511   875B 21 6A 84     	ld hl,Indice_de_entidades+2
512   875E 22 D5 85     	ld (Indice_restore),hl
513   8761 CD A6 87     	call Extrae_address
514   8764 22 D3 85     	ld (Puntero_restore_entidades),hl
515   8767 C9               ret
516   8768
517   8768              ; *************************************************************************************************************************************************************
518   8768              ;
519   8768              ; 8/1/23
520   8768              ;
521   8768              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
522   8768
523   8768 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
524   876B 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
525   876E C9           	ret
526   876F 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
527   8772 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
528   8775 C9           	ret
529   8776
530   8776              ; -------------------------------------------------------------------------------------------------------------
531   8776              ;
532   8776              ; 28/2/23
533   8776              ;
534   8776
535   8776              Calcula_numero_de_malotes
536   8776
537   8776 21 00 70     	ld hl,Album_de_fotos
538   8779 EB           	ex de,hl
539   877A 2A DD 85     	ld hl,(Stack_snapshot)
540   877D
541   877D 06 00        	ld b,0
542   877F 7D           	ld a,l
543   8780 93           	sub e
544   8781 28 07        	jr z,1F
545   8783
546   8783              ; Nº de malotes no es "0".
547   8783
548   8783 D6 06        2 sub 6
549   8785 04           	inc b
550   8786 A7           	and a
551   8787 20 FA        	jr nz,2B
552   8789 78           	ld a,b
553   878A
554   878A 32 D8 85     1 ld (Numero_de_malotes),a
555   878D C9           	ret
556   878E
557   878E              ; -------------------------------------------------------------------------------------------------------------
558   878E              ;
559   878E              ; 28/2/23
560   878E              ;
561   878E
562   878E              Calcula_numero_de_disparotes
563   878E
564   878E 21 60 70     	ld hl,Album_de_fotos_disparos
565   8791 EB           	ex de,hl
566   8792 2A DF 85     	ld hl,(Stack_snapshot_disparos)
567   8795
568   8795 06 00        	ld b,0
569   8797 7D           	ld a,l
570   8798 93           	sub e
571   8799 28 07        	jr z,1F
572   879B
573   879B              ; Nº de malotes no es "0".
574   879B
575   879B D6 06        2 sub 6
576   879D 04           	inc b
577   879E A7           	and a
578   879F 20 FA        	jr nz,2B
579   87A1 78           	ld a,b
580   87A2
581   87A2 32 E1 85     1 ld (Numero_de_disparotes),a
582   87A5 C9           	ret
583   87A6              ; *************************************************************************************************************************************************************
584   87A6              ;
585   87A6              ; 20/10/22
586   87A6              ;
587   87A6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
588   87A6              ;
589   87A6              ; Destruye el puntero y DE !!!!!
590   87A6
591   87A6 5E           Extrae_address ld e,(hl)
592   87A7 23           	inc hl
593   87A8 56           	ld d,(hl)
594   87A9 2B           	dec hl
595   87AA EB           	ex de,hl
596   87AB C9           	ret
597   87AC
598   87AC              ; *************************************************************************************************************************************************************
599   87AC              ;
600   87AC              ;	7/2/23
601   87AC              ;
602   87AC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
603   87AC              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
604   87AC              ;
605   87AC              ;   Destruye HL y BC !!!!!,
606   87AC              ;
607   87AC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
608   87AC              ;					"0" ..... Izquierda.
609   87AC
610   87AC              Inicia_Puntero_objeto
611   87AC
612   87AC 3A AA 85     	ld a,(Cuad_objeto)
613   87AF E6 01        	and 1
614   87B1 F5           	push af
615   87B2 CC D0 87     	call z,Inicia_puntero_objeto_izq
616   87B5 F1           	pop af
617   87B6 28 2B        	jr z,1F
618   87B8 CD BD 87     	call Inicia_puntero_objeto_der
619   87BB 18 26        	jr 1F
620   87BD
621   87BD              ; Arrancamos desde la parte izquierda de la pantalla.
622   87BD              ; Iniciamos (Indice_Sprite_der).
623   87BD
624   87BD 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
625   87C0 22 A4 85     	ld (Puntero_DESPLZ_der),hl
626   87C3 CD A6 87     	call Extrae_address
627   87C6 22 9A 85     	ld (Puntero_objeto),hl
628   87C9
629   87C9 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
630   87CC              ;	call Extrae_address
631   87CC 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
632   87CF C9           	ret
633   87D0
634   87D0              ; Arrancamos desde la parte derecha de la pantalla.
635   87D0              ; Iniciamos (Indice_Sprite_izq).
636   87D0
637   87D0 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
638   87D3 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
639   87D6 CD A6 87     	call Extrae_address
640   87D9 22 9A 85     	ld (Puntero_objeto),hl
641   87DC
642   87DC 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
643   87DF              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
644   87DF 22 A4 85     	ld (Puntero_DESPLZ_der),hl
645   87E2 C9           	ret
646   87E3
647   87E3              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
648   87E3
649   87E3 21 38 83     1 ld hl,Amadeus
650   87E6 ED 4B 9A 85  	ld bc,(Puntero_objeto)
651   87EA B7 ED 42     	sub hl,bc
652   87ED C0           	ret nz
653   87EE 21 C3 85     	ld hl,Ctrl_0
654   87F1 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
655   87F3 C9           	ret 												; _de nuestra nave en los extremos.
656   87F4
657   87F4              ; *************************************************************************************************************************************************************
658   87F4              ;
659   87F4              ;	8/1/23
660   87F4              ;
661   87F4              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
662   87F4              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
663   87F4
664   87F4              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
665   87F4              ;	_de la 2ª y 3ª entidad respectivamente.
666   87F4
667   87F4              Store_Restore_entidades
668   87F4
669   87F4 E5           	push hl
670   87F5 D5           	push de
671   87F6 C5            	push bc
672   87F7
673   87F7              ;	STORE !!!!!
674   87F7              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
675   87F7
676   87F7 21 96 85     	ld hl,Filas
677   87FA ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
678   87FE 01 3A 00     	ld bc,58
679   8801 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
680   8803
681   8803              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
682   8803
683   8803 2A D3 85     	ld hl,(Puntero_restore_entidades)
684   8806 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
685   8809 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
686   880C 01 3A 00     	ld bc,58
687   880F ED B0        	ldir
688   8811
689   8811              ;	Incrementa RESTORE !!!!!
690   8811
691   8811 2A D5 85         ld hl,(Indice_restore)
692   8814 23           	inc hl
693   8815 23           	inc hl
694   8816 22 D5 85     	ld (Indice_restore),hl
695   8819 CD A6 87         call Extrae_address
696   881C 22 D3 85         ld (Puntero_restore_entidades),hl
697   881F C1           	pop bc
698   8820 D1           	pop de
699   8821 E1           	pop hl
700   8822 C9           	ret
701   8823
702   8823              ; **************************************************************************************************
703   8823              ;
704   8823              ;	29/10/22
705   8823              ;
706   8823              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
707   8823
708   8823 E5           Restore_Primera_entidad push hl
709   8824 D5           	push de
710   8825 C5            	push bc
711   8826 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
712   8829 11 96 85     	ld de,Filas
713   882C 01 3A 00     	ld bc,58
714   882F ED B0        	ldir
715   8831 C1           	pop bc
716   8832 D1           	pop de
717   8833 E1           	pop hl
718   8834 C9           	ret
719   8835
720   8835              ; **************************************************************************************************
721   8835              ;
722   8835              ;	25/01/23
723   8835              ;
724   8835              ;	Restore_Amadeus
725   8835              ;
726   8835              ;	Cargamos en DRAW los parámetros de Amadeus.
727   8835              ;
728   8835
729   8835 E5           Restore_Amadeus	push hl
730   8836 D5           	push de
731   8837 C5            	push bc
732   8838 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
733   883B 11 96 85     	ld de,Filas
734   883E 01 3A 00     	ld bc,58
735   8841 ED B0        	ldir
736   8843 C1           	pop bc
737   8844 D1           	pop de
738   8845 E1           	pop hl
739   8846 C9           	ret
740   8847
741   8847              ; *************************************************************************************************************************************************************
742   8847              ;
743   8847              ;	29/01/23
744   8847              ;
745   8847              ;	Store_Amadeus
746   8847              ;
747   8847              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
748   8847              ;
749   8847
750   8847 E5           Store_Amadeus push hl
751   8848 D5           	push de
752   8849 C5            	push bc
753   884A 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
754   884D 11 74 84     	ld de,Amadeus_db
755   8850 01 3A 00     	ld bc,58
756   8853 ED B0        	ldir
757   8855 C1           	pop bc
758   8856 D1           	pop de
759   8857 E1           	pop hl
760   8858 C9           	ret
761   8859
762   8859              ; **************************************************************************************************
763   8859
764   8859              ; Teclado.
765   8859
766   8859 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
767   885B DB FE        	in a,($fe)
768   885D E6 01        	and $01
769   885F 28 02        	jr z,1f
770   8861 18 F6        	jr Pulsa_ENTER
771   8863 C9           1 ret
772   8864
773   8864              ; **************************************************************************************************
774   8864              ;
775   8864              ; Temporización.
776   8864
777   8864              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
778   8864              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
779   8864              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
780   8864              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
781   8864
782   8864              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
783   8864              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
784   8864              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
785   8864
786   8864              ; A partir de $4f61 no hace falta DELAY.
787   8864
788   8864              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
789   8864
790   8864 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
791   8867 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
792   8868 78           	LD A,B
793   8869 A7           	AND A
794   886A 20 FB        	JR NZ,wait
795   886C C9           	RET
796   886D
797   886D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
798   886D              ;
799   886D              ;	5/3/23
800   886D              ;
801   886D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
802   886D
803   886D              Movimiento_Amadeus
804   886D
805   886D              ; Disparo.
806   886D
807   886D 3E F7        	ld a,$f7												; "5" para disparar.
808   886F DB FE        	in a,($fe)
809   8871 E6 10        	and $10
810   8873 CC CD 88     	call z,Genera_disparo
811   8876
812   8876 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
813   8878 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
814   887A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
815   887C CC 56 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
816   887F 3E F7        	ld a,$f7
817   8881 DB FE        	in a,($fe)
818   8883 E6 01        	and $01
819   8885 C8           	ret z
820   8886
821   8886 3E F7        	ld a,$f7
822   8888 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
823   888A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
824   888C CC 38 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
825   888F C9           	ret
826   8890
827   8890              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
828   8890              ;
829   8890              ;	Rutina provisional para que los malotes cagen balas.
830   8890
831   8890 3E 7F        Detecta_disparo_entidad ld a,$7f
832   8892 DB FE        	in a,($fe)
833   8894 E6 01        	and 1
834   8896 C0           	ret nz
835   8897 CD CD 88     	call Genera_disparo
836   889A C9           	ret
837   889B
838   889B              ; Pinta indicadores de FILAS. ------------------------------------------------------
839   889B
840   889B 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
841   889E
842   889E              ; ----------
843   889E 06 20        	ld b,32
844   88A0 E5           2 push hl
845   88A1 C5           	push bc
846   88A2              ; ----------
847   88A2
848   88A2 06 BF        	ld b,$bf
849   88A4 36 80        1 ld (hl),%10000000
850   88A6 CD FE 8E     	call NextScan
851   88A9 10 F9        	djnz 1B
852   88AB
853   88AB              ; ----------
854   88AB C1           	pop bc
855   88AC E1           	pop hl
856   88AD 2C           	inc l
857   88AE 10 F0        	djnz 2B
858   88B0              ; ----------
859   88B0
860   88B0 06 03        	ld b,3
861   88B2 21 00 47         ld hl,$4700
862   88B5 CD BB 88     3 call Bucle_1
863   88B8 10 FB            djnz 3B
864   88BA C9               ret
865   88BB
866   88BB C5           Bucle_1 push bc
867   88BC E5                   push hl
868   88BD D1                   pop de
869   88BE 13                   inc de
870   88BF 01 FF 00             ld bc,255
871   88C2 36 FF                ld (hl),255
872   88C4 ED B0                ldir
873   88C6 23                   inc hl
874   88C7 3E 07                ld a,7
875   88C9 84                   add a,h
876   88CA 67                   ld h,a
877   88CB C1                   pop bc
878   88CC C9                   ret
879   88CD
880   88CD              ; ---------------------------------------------------------------
881   88CD
882   88CD              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88CD              ; ******************************************************************************************************************************************************************************************
  2+  88CD              ;
  3+  88CD              ;   27/03/23
  4+  88CD              ;
  5+  88CD              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88CD              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88CD              ;
  8+  88CD              ;
  9+  88CD              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88CD              ;
 11+  88CD              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88CD              ;               _ hacen las entidades hacia abajo.
 13+  88CD              ;
 14+  88CD              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88CD              ;
 16+  88CD              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88CD              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88CD              ;
 19+  88CD              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88CD              ;           _ la bala.
 21+  88CD              ;
 22+  88CD              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88CD              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88CD              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88CD              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88CD              ;           _ en el momento de generarse la bala)).
 27+  88CD
 28+  88CD              Genera_disparo
 29+  88CD
 30+  88CD              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88CD              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88CD              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88CD              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88CD              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88CD              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88CD              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88CD
 38+  88CD              ; Exclusiones:
 39+  88CD
 40+  88CD 3A CC 85         ld a,(Columnas)
 41+  88D0 47               ld b,a
 42+  88D1 3A 97 85         ld a,(Columns)
 43+  88D4 B8               cp b
 44+  88D5 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88D6
 46+  88D6              ; ----- ----- -----
 47+  88D6
 48+  88D6 3A C3 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88D9 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88DB 20 06            jr nz,16F
 51+  88DD
 52+  88DD 3A 9D 85         ld a,(Coordenada_y)
 53+  88E0 FE 14            cp $14
 54+  88E2 D0               ret nc
 55+  88E3
 56+  88E3              ; ----- ----- -----
 57+  88E3
 58+  88E3              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88E3
 60+  88E3 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88E6 CD A6 87         call Extrae_address
 62+  88E9 24               inc h
 63+  88EA 25               dec h
 64+  88EB 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88ED
 66+  88ED 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88F0 A7               and a
 68+  88F1 ED 52            sbc hl,de
 69+  88F3 D0               ret nc
 70+  88F4
 71+  88F4              ; ----- ----- -----
 72+  88F4
 73+  88F4 21 00 80     14 ld hl,Indice_disparo
 74+  88F7 3A 9E 85         ld a,(CTRL_DESPLZ)
 75+  88FA 4F               ld c,a
 76+  88FB 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  88FD              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  88FD              ;                                            ""        ""       "f9", B="1"
 79+  88FD              ;                                            ""        ""       "fb", B="2"
 80+  88FD              ;                                            ""        ""       "fb", B="3"
 81+  88FD A7               and a
 82+  88FE 28 10            jr z,1F
 83+  8900 E6 01            and 1
 84+  8902 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  8903
 86+  8903 79               ld a,c
 87+  8904 16 F9            ld d,$f9
 88+  8906 23           2 inc hl
 89+  8907 23               inc hl
 90+  8908 04               inc b
 91+  8909 BA               cp d
 92+  890A 28 04            jr z,1F
 93+  890C 14               inc d
 94+  890D 14               inc d
 95+  890E 18 F6            jr 2B
 96+  8910
 97+  8910 CD A6 87     1 call Extrae_address
 98+  8913 E5               push hl
 99+  8914 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  8916 DD 21 91 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  891A
102+  891A              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  891A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  891A
105+  891A 3A AA 85     	ld a,(Cuad_objeto)
106+  891D FE 02            cp 2
107+  891F 38 60            jr c,3F
108+  8921 28 5E            jr z,3F
109+  8923
110+  8923              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  8923
112+  8923 E6 01            and 1
113+  8925 28 2D            jr z,4F
114+  8927
115+  8927              ; 	Estamos en el 3er cuadrante de pantalla.
116+  8927              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  8927              ;
118+  8927              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  8927              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  8927              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  8927
122+  8927 2A 98 85     	ld hl,(Posicion_actual)
123+  892A
124+  892A              ;   Amadeus o entidad ???.
125+  892A
126+  892A 3A C3 85         ld a,(Ctrl_0)
127+  892D CB 77            bit 6,a
128+  892F 28 0D            jr z,8F
129+  8931
130+  8931              ; 	Dispara Amadeus.
131+  8931
132+  8931 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  8933 CD 0D 8F         call PreviousScan
134+  8936 CD 0D 8F         call PreviousScan
135+  8939
136+  8939              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  8939              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  8939              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  8939              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  8939
141+  8939 CD AB 89         call Ajusta_disparo_parte_izquierda
142+  893C 18 0E            jr 10F
143+  893E
144+  893E              ; 	Dispara Entidad.
145+  893E
146+  893E 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  8940
148+  8940              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  8940              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  8940
151+  8940 C5               push bc
152+  8941 06 10            ld b,16
153+  8943 CD FE 8E     9 call NextScan
154+  8946 10 FB            djnz 9B
155+  8948 C1               pop bc
156+  8949
157+  8949              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  8949              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  8949              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  8949              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  8949
162+  8949 CD AB 89         call Ajusta_disparo_parte_izquierda
163+  894C
164+  894C CD 20 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  894F              ;                                                   ; _al generar el disparo.
166+  894F
167+  894F              ; 	LLegados a este punto tendremos:
168+  894F              ;
169+  894F              ;       Puntero_objeto_disparo en IY.
170+  894F              ;       Rutinas_de_impresion en IX.
171+  894F              ;       Puntero_de_impresion en HL.
172+  894F              ;       Impacto/Dirección en BC.
173+  894F
174+  894F CD B3 89         call Almacena_disparo
175+  8952 18 4F            jr 6F                                           ; RET.
176+  8954
177+  8954
178+  8954              ; 	Estamos en el 4º cuadrante de pantalla.
179+  8954              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  8954              ;
181+  8954              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  8954              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  8954              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  8954
185+  8954 2A 98 85     4 ld hl,(Posicion_actual)
186+  8957
187+  8957              ;   Amadeus o entidad ???.
188+  8957
189+  8957 3A C3 85         ld a,(Ctrl_0)
190+  895A CB 77            bit 6,a
191+  895C 28 0D            jr z,11F
192+  895E
193+  895E              ; 	Dispara Amadeus.
194+  895E
195+  895E 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  8960 CD 0D 8F         call PreviousScan
197+  8963 CD 0D 8F         call PreviousScan
198+  8966
199+  8966              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  8966              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  8966              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  8966              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  8966
204+  8966 CD A4 89         call Ajusta_disparo_parte_derecha
205+  8969 18 0E            jr 13F
206+  896B
207+  896B              ; 	Dispara Entidad.
208+  896B
209+  896B 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  896D
211+  896D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  896D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  896D
214+  896D C5               push bc
215+  896E
216+  896E 06 10            ld b,16
217+  8970 CD FE 8E     12 call NextScan
218+  8973 10 FB            djnz 12B
219+  8975
220+  8975 C1               pop bc
221+  8976
222+  8976              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  8976              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  8976              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  8976              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  8976
227+  8976 CD A4 89         call Ajusta_disparo_parte_derecha
228+  8979
229+  8979 CD 20 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  897C              ;                                                     ; _al generar el disparo.
231+  897C
232+  897C              ; LLegados a este punto tendremos:
233+  897C              ;
234+  897C              ;       Puntero_objeto_disparo en IY.
235+  897C              ;       Rutinas_de_impresion en IX.
236+  897C              ;       Puntero_de_impresion en HL.
237+  897C              ;       Impacto/Dirección en BC.
238+  897C
239+  897C CD B3 89         call Almacena_disparo
240+  897F 18 22            jr 6F                                           ; RET.
241+  8981
242+  8981              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  8981
244+  8981 28 11        3 jr z,5F
245+  8983
246+  8983              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  8983              ;
248+  8983              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  8983              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  8983              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  8983              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  8983
253+  8983              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  8983              ;	   ""        ""       "f9", B="1"
255+  8983              ;	   ""        ""       "fb", B="2"
256+  8983              ; 	   ""        ""       "fb", B="3"
257+  8983
258+  8983 2A 98 85     	ld hl,(Posicion_actual)
259+  8986 CD FE 8E     	call NextScan
260+  8989
261+  8989              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  8989              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  8989              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  8989              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  8989
266+  8989 CD AB 89         call Ajusta_disparo_parte_izquierda
267+  898C
268+  898C              ; 	No se produce impacto. B="$80"
269+  898C              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  898C
271+  898C 01 80 80         ld bc,$8080
272+  898F
273+  898F              ; 	LLegados a este punto tendremos:
274+  898F              ;
275+  898F              ;       Puntero_objeto_disparo en IY.
276+  898F              ;       Rutinas_de_impresion en IX.
277+  898F              ;       Puntero_de_impresion en HL.
278+  898F              ;       Impacto/Dirección en BC.
279+  898F
280+  898F CD B3 89         call Almacena_disparo
281+  8992 18 0F            jr 6F                                           ; RET.
282+  8994
283+  8994              ; 	Estamos en el 2º cuadrante de pantalla.
284+  8994              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  8994              ;
286+  8994              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  8994              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  8994              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  8994              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  8994
291+  8994 2A 98 85     5 ld hl,(Posicion_actual)
292+  8997 CD FE 8E     	call NextScan
293+  899A
294+  899A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  899A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  899A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  899A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  899A
299+  899A CD A4 89         call Ajusta_disparo_parte_derecha
300+  899D
301+  899D              ; 	No se produce impacto. B="$80"
302+  899D              ; 	Dirección del proyectil hacia abajo. C="80"
303+  899D
304+  899D 01 80 80     15 ld bc,$8080
305+  89A0
306+  89A0              ; 	LLegados a este punto tendremos:
307+  89A0              ;
308+  89A0              ;       Puntero_objeto_disparo en IY.
309+  89A0              ;       Rutinas_de_impresion en IX.
310+  89A0              ;       Puntero_de_impresion en HL.
311+  89A0              ;       Impacto/Dirección en BC.
312+  89A0
313+  89A0 CD B3 89         call Almacena_disparo
314+  89A3
315+  89A3 C9           6 ret
316+  89A4
317+  89A4              ; ----------------------------------------------------------------
318+  89A4              ;
319+  89A4              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  89A4              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  89A4              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  89A4
323+  89A4 78           Ajusta_disparo_parte_derecha ld a,b
324+  89A5 FE 02            cp 2
325+  89A7 38 01            jr c,1F
326+  89A9 23               inc hl
327+  89AA C9           1 ret
328+  89AB
329+  89AB 78           Ajusta_disparo_parte_izquierda ld a,b
330+  89AC FE 01        	cp 1
331+  89AE 20 01        	jr nz,1F
332+  89B0 2B           	dec hl
333+  89B1 2B           1 dec hl
334+  89B2 C9               ret
335+  89B3
336+  89B3              ; ----------------------------------------------------------------
337+  89B3              ;
338+  89B3              ;   25/02/23
339+  89B3              ;
340+  89B3              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  89B3              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  89B3
343+  89B3              Almacena_disparo
344+  89B3
345+  89B3 E5               push hl  										; HL contiene el puntero de impresión.
346+  89B4 F1               pop af
347+  89B5 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89B6
349+  89B6 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89B7 E6 01            and 1
351+  89B9 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89BB              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89BB              ; 	Dispara AMADEUS.
354+  89BB
355+  89BB              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89BB              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89BB              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89BB              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89BB
360+  89BB C5               push bc
361+  89BC 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89BF 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89C2 A7               and a
364+  89C3 ED 42            sbc hl,bc
365+  89C5 CC 6F 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89C8 C1               pop bc
367+  89C9 28 54            jr z,4F
368+  89CB
369+  89CB 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89CE 23               inc hl
371+  89CF 23               inc hl
372+  89D0 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89D3              ;                                                   ; _ Disparo_(+1).
374+  89D3 18 18            jr 2F
375+  89D5
376+  89D5              ; Dispara una entidad.
377+  89D5
378+  89D5 C5           1 push bc
379+  89D6 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89D9 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89DC A7               and a
382+  89DD ED 42            sbc hl,bc
383+  89DF CC 68 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89E2 C1               pop bc
385+  89E3 28 3A            jr z,4F
386+  89E5
387+  89E5 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89E8 23               inc hl
389+  89E9 23               inc hl
390+  89EA 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89ED              ;                                                   ; _ Disparo_(+1).
392+  89ED CD A6 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89F0              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89F0              ;
395+  89F0              ;                                                     Puntero_objeto_disparo en IY.
396+  89F0              ;                                                     Rutinas_de_impresion en IX.
397+  89F0              ;                                                     Puntero_de_impresion en HL.
398+  89F0              ;                                                     Impacto/Dirección en BC.
399+  89F0
400+  89F0 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  89F1 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  89F2 23               inc hl                                          ; _ al siguiente.
403+  89F3 A7               and a
404+  89F4 20 C0            jr nz,3B
405+  89F6
406+  89F6 08               ex af,af
407+  89F7 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  89FB F9               ld sp,hl
409+  89FC
410+  89FC DD E5            push ix                                         ; Rutina de impresión.
411+  89FE F5               push af                                         ; Puntero de impresión.
412+  89FF FD E5            push iy                                         ; Puntero objeto.
413+  8A01 C5               push bc                                         ; Control.
414+  8A02
415+  8A02 ED 7B D9 85      ld sp,(Stack)
416+  8A06
417+  8A06              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  8A06
419+  8A06 21 D0 85     	ld hl,Ctrl_1
420+  8A09 CB C6        	set 0,(hl)
421+  8A0B
422+  8A0B DD E5        	push ix
423+  8A0D E1               pop hl
424+  8A0E F5               push af
425+  8A0F DD E1            pop ix
426+  8A11
427+  8A11 CD A0 7F     	call Guarda_foto_registros
428+  8A14
429+  8A14 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A17 CB 86        	res 0,(hl)
431+  8A19
432+  8A19              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A19              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A19
435+  8A19 CD 6F 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A1C CD 68 87         call Inicia_Puntero_Disparo_Entidades
437+  8A1F
438+  8A1F C9           4 ret
439+  8A20
440+  8A20              ; ----------------------------------------------------------------
441+  8A20              ;
442+  8A20              ;   4/3/23
443+  8A20              ;
444+  8A20              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A20              ;   _ al generarse el disparo.
446+  8A20              ;
447+  8A20              ;       "$80" ..... No se produce colisión.
448+  8A20              ;       "$81" ..... Se produce colisión.
449+  8A20
450+  8A20              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A20              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A20
453+  8A20
454+  8A20 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A22 E5               push hl                                        ; Puntero de impresión.
456+  8A23 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A25 CD 3C 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A28 E1               pop hl
459+  8A29 E5               push hl
460+  8A2A CD FE 8E         call NextScan
461+  8A2D
462+  8A2D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
463+  8A2E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
464+  8A30 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
465+  8A32              ;                                                  ; _ 2º scanline si esto es así.
466+  8A32 1E 80            ld e,$80                                       ; ----- ( ) -----
467+  8A34 CD 3C 8A         call Bucle_2
468+  8A37
469+  8A37 43           2 ld b,e
470+  8A38 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
471+  8A39 FD E1            pop iy
472+  8A3B C9               ret
473+  8A3C
474+  8A3C               ; ---------- ----------
475+  8A3C
476+  8A3C 06 02        Bucle_2 ld b,2
477+  8A3E FD 7E 00     2 ld a,(iy)
478+  8A41 A6               and (hl)
479+  8A42 28 02            jr z,1F
480+  8A44 1E 81            ld e,$81
481+  8A46 23           1 inc hl
482+  8A47 FD 23            inc iy
483+  8A49 10 F3            djnz 2B
484+  8A4B C9               ret
485+  8A4C
486+  8A4C              ; -------------------------------------------------------------------------------------------------------------
487+  8A4C              ;
488+  8A4C              ;   01/04/23
489+  8A4C              ;
490+  8A4C              ;
491+  8A4C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
492+  8A4C              ;   Vamos a comprobar si existe colisión con Amadeus. Consideramos que se produce colisión_
493+  8A4C              ;   _ si hay contacto de los dos scanlines inferiores que forman la entidad con la nave.
494+  8A4C              ;
495+  8A4C              ;   INPUTS: IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
496+  8A4C              ;           IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
497+  8A4C
498+  8A4C              Detecta_colision_nave_entidad
499+  8A4C
500+  8A4C              ; Antes de nada llamaremos a la rutina [Calcula_puntero_de_impresion]. Nos proporcionara:
501+  8A4C              ; Puntero_de_impresión de la entidad en IX y puntero_objeto en IY.
502+  8A4C
503+  8A4C 2A 98 85         ld hl,(Posicion_actual)
504+  8A4F CD 63 8E         call Calcula_puntero_de_impresion
505+  8A52
506+  8A52              ; Con estos datos podremos situar HL en el penúltimo scanline del puntero_de_impresión de la entidad y_
507+  8A52              ; _ y IY en el 1er dato del penúltimo scanline que forma la entidad, (Puntero_objeto).
508+  8A52
509+  8A52 06 0E            ld b,14
510+  8A54 DD E5            push ix
511+  8A56 E1               pop hl
512+  8A57 CD FE 8E     1 call NextScan
513+  8A5A 10 FB            djnz 1B
514+  8A5C E5               push hl
515+  8A5D DD E1            pop ix
516+  8A5F
517+  8A5F FD E5            push iy
518+  8A61 E1               pop hl
519+  8A62
520+  8A62              ; Sumaremos 28/42 bytes en función de las (Columns) que formen la entidad.
521+  8A62
522+  8A62 3A 97 85         ld a,(Columns)
523+  8A65 E6 01            and 1
524+  8A67 20 05            jr nz,2F
525+  8A69 01 1C 00         ld bc,28
526+  8A6C 18 03            jr 3F
527+  8A6E 01 2A 00     2 ld bc,42
528+  8A71 A7           3 and a
529+  8A72 ED 4A            adc hl,bc
530+  8A74 E5               push hl
531+  8A75 FD E1            pop iy
532+  8A77
533+  8A77 DD E5            push ix
534+  8A79 E1               pop hl
535+  8A7A
536+  8A7A E5               push hl
537+  8A7B
538+  8A7B              ; Llegados a este punto, HL apunta al puntero de impresión del penúltimo scanline de pantalla de la entidad.
539+  8A7B              ; IY apunta a los "datos" del penúltimo scanline que forman la entidad.
540+  8A7B
541+  8A7B 18 FE            jr $
542+  8A7D
543+  8A7D 1E 00            ld e,0                                         ; E,(Impacto)="0".
544+  8A7F CD 98 8A         call Bucle_3                                   ; Comprobamos el 1er scanline.
545+  8A82
546+  8A82 7B               ld a,e
547+  8A83 E6 01            and 1
548+  8A85 28 0F            jr z,4F
549+  8A87 E1               pop hl
550+  8A88
551+  8A88 E5               push hl
552+  8A89 CD FE 8E         call NextScan
553+  8A8C
554+  8A8C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
555+  8A8D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
556+  8A8F 28 05            jr z,4F                                        ; _ de atributos. Evitamos comprobar colisión en el _
557+  8A91              ;                                                  ; _ 2º scanline si esto es así.
558+  8A91 1E 00            ld e,0                                         ; ----- ( ) -----
559+  8A93 CD 98 8A         call Bucle_3
560+  8A96
561+  8A96 E1           4 pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
562+  8A97              ;    pop iy
563+  8A97 C9               ret
564+  8A98
565+  8A98               ; ---------- ----------
566+  8A98
567+  8A98 3A CC 85     Bucle_3 ld a,(Columnas)
568+  8A9B 47               ld b,a
569+  8A9C FD 7E 00     2 ld a,(iy)
570+  8A9F A6               and (hl)
571+  8AA0 28 02            jr z,1F
572+  8AA2
573+  8AA2 1E 01            ld e,1
574+  8AA4
575+  8AA4 23           1 inc hl
576+  8AA5 FD 23            inc iy
577+  8AA7 10 F3            djnz 2B
578+  8AA9 C9               ret
579+  8AAA
580+  8AAA              ; -------------------------------------------------------------------------------------------------------------
581+  8AAA              ;
582+  8AAA              ;   13/03/23
583+  8AAA              ;
584+  8AAA              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
585+  8AAA              ;
586+  8AAA              ;   DESTRUYE: HL,BC,DE y A.
587+  8AAA
588+  8AAA 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
589+  8AAD 7E               ld a,(hl)
590+  8AAE A7               and a
591+  8AAF C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
592+  8AB0
593+  8AB0 44               ld b,h
594+  8AB1 4D               ld c,l
595+  8AB2 2A DF 85         ld hl,(Stack_snapshot_disparos)
596+  8AB5 E5               push hl
597+  8AB6 A7               and a
598+  8AB7 ED 42            sbc hl,bc
599+  8AB9 E5               push hl
600+  8ABA C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
601+  8ABB
602+  8ABB E1               pop hl
603+  8ABC 54               ld d,h
604+  8ABD 5D               ld e,l
605+  8ABE 1B               dec de
606+  8ABF ED B8            lddr                                                ; Limpiamos.
607+  8AC1
608+  8AC1 21 60 70         ld hl,Album_de_fotos_disparos
609+  8AC4 22 DF 85         ld (Stack_snapshot_disparos),hl
610+  8AC7
611+  8AC7 C9               ret
612+  8AC8
613+  8AC8              ; -------------------------------------------------------------------------------------------------------------
614+  8AC8              ;
615+  8AC8              ;   28/03/23
616+  8AC8              ;
617+  8AC8
618+  8AC8 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
619+  8ACB 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
620+  8ACE
621+  8ACE CD A6 87     2 call Extrae_address
622+  8AD1 7E               ld a,(hl)
623+  8AD2 A7               and a
624+  8AD3 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
625+  8AD5
626+  8AD5              ; ----- ----- ----- ----- ----- -----
627+  8AD5
628+  8AD5 C5               push bc
629+  8AD6 CD 72 8B         call foto_disparo_a_borrar
630+  8AD9
631+  8AD9              ; Existe colisión con este disparo???
632+  8AD9
633+  8AD9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
634+  8ADA 7E               ld a,(hl)
635+  8ADB 2B               dec hl
636+  8ADC E6 01            and 1
637+  8ADE 28 0C            jr z,9F
638+  8AE0
639+  8AE0              ; Elimino el disparo de la base de datos.
640+  8AE0
641+  8AE0 E5               push hl
642+  8AE1 CD EC 8B         call Elimina_disparo_de_base_de_datos
643+  8AE4 E1               pop hl
644+  8AE5 3E 01            ld a,1
645+  8AE7 32 E6 85         ld (Impacto),a                                       ; Indicamos que se ha producido Impacto en una entidad.
646+  8AEA 18 06            jr 11F
647+  8AEC
648+  8AEC CD 9B 8B     9 call Mueve_disparo
649+  8AEF CD 72 8B         call foto_disparo_a_borrar
650+  8AF2
651+  8AF2 C1           11 pop bc
652+  8AF3
653+  8AF3 18 04            jr 7F
654+  8AF5
655+  8AF5              ; ----- ----- ----- ----- ----- -----
656+  8AF5
657+  8AF5 ED 42        1 sbc hl,bc
658+  8AF7 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
659+  8AF9
660+  8AF9 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
661+  8AFC 23               inc hl
662+  8AFD 23               inc hl
663+  8AFE 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
664+  8B01 18 CB            jr 2B
665+  8B03
666+  8B03 CD 6F 87     3 call Inicia_Puntero_Disparo_Amadeus
667+  8B06
668+  8B06 01 66 84         ld bc,Disparo_11
669+  8B09 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
670+  8B0C
671+  8B0C CD A6 87     5 call Extrae_address
672+  8B0F 7E               ld a,(hl)
673+  8B10 A7               and a
674+  8B11 28 4D            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
675+  8B13
676+  8B13              ; ----- ----- ----- ----- ----- -----
677+  8B13
678+  8B13 C5               push bc
679+  8B14 CD 72 8B         call foto_disparo_a_borrar
680+  8B17
681+  8B17              ; Existe colisión con este disparo???
682+  8B17
683+  8B17 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
684+  8B18 7E               ld a,(hl)
685+  8B19 2B               dec hl
686+  8B1A E6 01            and 1
687+  8B1C 28 39            jr z,10F
688+  8B1E
689+  8B1E              ; La colisión se produce con Amadeus???
690+  8B1E              ; Amadeus siempre tiene (Coordenada_y)="$16".
691+  8B1E
692+  8B1E E5               push hl
693+  8B1F
694+  8B1F 06 04            ld b,4
695+  8B21 23           16 inc hl
696+  8B22 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
697+  8B24
698+  8B24 CD A6 87         call Extrae_address
699+  8B27 CD 15 95         call Genera_coordenadas_disparo
700+  8B2A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
701+  8B2B FE 16            cp $16
702+  8B2D 38 16            jr c,15F
703+  8B2F
704+  8B2F              ; (Colisiones en filas 16 y 17).
705+  8B2F
706+  8B2F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
707+  8B30 CD F7 8B         call Guarda_coordenadas_X_de_Amadeus
708+  8B33 D1               pop de                                               ; Coordenadas del disparo en DE. D Coordenada_X.
709+  8B34
710+  8B34 21 E7 85         ld hl,Coordenadas_X_Amadeus
711+  8B37 7E               ld a,(hl)
712+  8B38 BA           18 cp d
713+  8B39 20 03            jr nz,17F
714+  8B3B
715+  8B3B              ; Colisión Amadeus !!!!!!!!!!
716+  8B3B
717+  8B3B E1               pop hl
718+  8B3C 18 0D            jr 14F
719+  8B3E
720+  8B3E 23           17 inc hl
721+  8B3F 7E               ld a,(hl)
722+  8B40 A7               and a
723+  8B41 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
724+  8B43 18 F3            jr 18B
725+  8B45
726+  8B45              ; No hay colisión. Amadeus se encuentra en una línea inferior.
727+  8B45              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
728+  8B45
729+  8B45 E1           15  pop hl
730+  8B46 23               inc hl
731+  8B47 35               dec (hl)
732+  8B48 2B               dec hl
733+  8B49 18 0C            jr 10F
734+  8B4B
735+  8B4B              ; -----------------------debug
736+  8B4B
737+  8B4B              ; Elimino el disparo de la base de datos.
738+  8B4B
739+  8B4B E5           14 push hl
740+  8B4C CD EC 8B         call Elimina_disparo_de_base_de_datos
741+  8B4F E1               pop hl
742+  8B50
743+  8B50 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
744+  8B52 32 E6 85         ld (Impacto),a
745+  8B55 18 06            jr 12F
746+  8B57
747+  8B57 CD 9B 8B     10 call Mueve_disparo
748+  8B5A CD 72 8B         call foto_disparo_a_borrar
749+  8B5D C1           12 pop bc
750+  8B5E
751+  8B5E 18 04            jr 8F
752+  8B60
753+  8B60              ; ----- ----- ----- ----- ----- -----
754+  8B60
755+  8B60 ED 42        4 sbc hl,bc
756+  8B62 28 0A            jr z,6F
757+  8B64
758+  8B64 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
759+  8B67 23               inc hl
760+  8B68 23               inc hl
761+  8B69 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
762+  8B6C 18 9E            jr 5B
763+  8B6E
764+  8B6E CD 68 87     6 call Inicia_Puntero_Disparo_Entidades
765+  8B71 C9               ret
766+  8B72
767+  8B72              ; ------------------------------------------------------------------
768+  8B72
769+  8B72              foto_disparo_a_borrar
770+  8B72
771+  8B72 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
772+  8B73 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
773+  8B74 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
774+  8B75
775+  8B75 E5               push hl
776+  8B76 23               inc hl
777+  8B77 23               inc hl
778+  8B78 ED 73 D9 85      ld (Stack),sp
779+  8B7C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
780+  8B7D FD E1            pop iy
781+  8B7F DD E1            pop ix
782+  8B81 E1               pop hl
783+  8B82 ED 7B D9 85      ld sp,(Stack)
784+  8B86 3A D0 85         ld a,(Ctrl_1)
785+  8B89 CB C7            set 0,a
786+  8B8B 32 D0 85         ld (Ctrl_1),a
787+  8B8E CD A0 7F         call Guarda_foto_registros
788+  8B91 3A D0 85         ld a,(Ctrl_1)
789+  8B94 CB 87            res 0,a
790+  8B96 32 D0 85         ld (Ctrl_1),a
791+  8B99 E1               pop hl
792+  8B9A C9               ret
793+  8B9B
794+  8B9B E5           Mueve_disparo push hl
795+  8B9C 7E               ld a,(hl)
796+  8B9D 06 04            ld b,4
797+  8B9F 23           1 inc hl
798+  8BA0 10 FD            djnz 1B
799+  8BA2
800+  8BA2              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
801+  8BA2
802+  8BA2 CD A6 87         call Extrae_address
803+  8BA5
804+  8BA5 E6 01            and 1
805+  8BA7 28 2A            jr z,2F
806+  8BA9
807+  8BA9              ; Disparo hacia arriba, (Amadeus).
808+  8BA9
809+  8BA9              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
810+  8BA9              ; _ de la dificultad.
811+  8BA9
812+  8BA9 CD 0D 8F         call PreviousScan
813+  8BAC CD 0D 8F         call PreviousScan
814+  8BAF CD 0D 8F         call PreviousScan
815+  8BB2
816+  8BB2              ; Detecta si el disparo de Amadeus sale de pantalla:
817+  8BB2
818+  8BB2 7C               ld a,h
819+  8BB3 FE 40            cp $40
820+  8BB5 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
821+  8BB7
822+  8BB7              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
823+  8BB7
824+  8BB7 EB               ex de,hl
825+  8BB8 06 04            ld b,4
826+  8BBA 2B           6 dec hl
827+  8BBB 10 FD            djnz 6B
828+  8BBD
829+  8BBD CD EC 8B         call Elimina_disparo_de_base_de_datos
830+  8BC0
831+  8BC0 18 0C            jr 4F
832+  8BC2
833+  8BC2              ; Se ha desplazado la bala, compruebo colisión.
834+  8BC2
835+  8BC2 D5           3 push de
836+  8BC3 C5               push bc
837+  8BC4 CD 20 8A         call Comprueba_Colision
838+  8BC7 78               ld a,b
839+  8BC8 C1               pop bc
840+  8BC9 D1               pop de
841+  8BCA
842+  8BCA EB               ex de,hl
843+  8BCB
844+  8BCB 73               ld (hl),e
845+  8BCC 23               inc hl
846+  8BCD 72               ld (hl),d
847+  8BCE
848+  8BCE E1           4 pop hl
849+  8BCF 23               inc hl
850+  8BD0 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
851+  8BD1 2B               dec hl
852+  8BD2 C9               ret
853+  8BD3
854+  8BD3              ; Disparo hacia abajo, (Entidad).
855+  8BD3
856+  8BD3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
857+  8BD3              ; _ de la dificultad.
858+  8BD3
859+  8BD3 CD FE 8E     2 call NextScan
860+  8BD6 CD FE 8E         call NextScan
861+  8BD9 CD FE 8E         call NextScan
862+  8BDC
863+  8BDC              ; Detecta si el disparo de la entidad sale de la pantalla.
864+  8BDC
865+  8BDC 7C               ld a,h
866+  8BDD FE 58            cp $58
867+  8BDF 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
868+  8BE1
869+  8BE1 EB               ex de,hl
870+  8BE2 06 04            ld b,4
871+  8BE4 2B           5 dec hl
872+  8BE5 10 FD            djnz 5B
873+  8BE7
874+  8BE7 CD EC 8B         call Elimina_disparo_de_base_de_datos
875+  8BEA
876+  8BEA 18 E2            jr 4B
877+  8BEC
878+  8BEC              ; HL apunta al primer byte de la base de datos del disparo.
879+  8BEC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
880+  8BEF AF               xor a
881+  8BF0 77               ld (hl),a
882+  8BF1 54               ld d,h
883+  8BF2 5D               ld e,l
884+  8BF3 13               inc de
885+  8BF4 ED B0            ldir
886+  8BF6 C9               ret
887+  8BF7
888+  8BF7              ; -----------------------------------------------------------------
889+  8BF7              ;
890+  8BF7              ;   Guarda las Coordenadas_X que ocupa Amadeus en la pantalla.
891+  8BF7              ;
892+  8BF7              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
893+  8BF7              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
894+  8BF7              ;
895+  8BF7              ;   En función de si el cuadrante de pantalla en el que se encuentra la nave, es par o impar,_
896+  8BF7              ;   _ las columnas guardadas irán en orden creciente o decreciente.
897+  8BF7              ;
898+  8BF7              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus.
899+  8BF7              ;
900+  8BF7              ;   MODIFICA: A, HL, DE y C
901+  8BF7
902+  8BF7 21 7A 84     Guarda_coordenadas_X_de_Amadeus ld hl,Amadeus_db+6
903+  8BFA 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
904+  8BFB 23               inc hl
905+  8BFC 23               inc hl
906+  8BFD 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
907+  8BFE
908+  8BFE 21 88 84         ld hl,Amadeus_db+20
909+  8C01 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
910+  8C02
911+  8C02
912+  8C02 21 E7 85         ld hl,Coordenadas_X_Amadeus
913+  8C05 72               ld (hl),d
914+  8C06
915+  8C06 79           3 ld a,c
916+  8C07 E6 01            and 1
917+  8C09 20 03            jr nz,1F
918+  8C0B 14               inc d
919+  8C0C 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
920+  8C0E
921+  8C0E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
922+  8C0E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
923+  8C0E
924+  8C0E 15           1 dec d
925+  8C0F 23           2 inc hl
926+  8C10 72               ld (hl),d
927+  8C11
928+  8C11 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
929+  8C12 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
930+  8C13 C8               ret z
931+  8C14
932+  8C14 AF               xor a
933+  8C15 5F               ld e,a
934+  8C16 18 EE            jr 3B
# file closed: Disparo.asm
883   8C18              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8C18              ; ******************************************************************************************************************************************************************************************
  2+  8C18              ;
  3+  8C18              ; 01/23
  4+  8C18              ;
  5+  8C18              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8C18
  7+  8C18 CD F2 8E     Draw call Prepara_draw
  8+  8C1B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8C1C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8C1D 28 05        	jr z,2F
 11+  8C1F
 12+  8C1F 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8C22 18 0C        	jr 1F
 14+  8C24 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8C27 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8C2A CD B9 8D     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8C2D              ;													; _la esquina superior izquierda de la pantalla.
 18+  8C2D CD 38 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8C30 3A C3 85     1 ld a,(Ctrl_0)
 20+  8C33 CB 6F        	bit 5,a
 21+  8C35 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8C37
 23+  8C37 CD 4F 8C     	call Comprueba_limite_horizontal
 24+  8C3A CD DF 8C     	call Comprueba_limite_vertical
 25+  8C3D
 26+  8C3D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8C3D
 28+  8C3D CD 2C 8E     3 call calcula_CColumnass
 29+  8C40 CD 63 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8C43 CD B8 8E     	call Define_rutina_de_impresion
 31+  8C46
 32+  8C46 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8C49 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8C4B 32 C3 85     	ld (Ctrl_0),a
 35+  8C4E
 36+  8C4E C9           	ret
 37+  8C4F
 38+  8C4F              ; *******************************************************************************************************************************************************************************************
 39+  8C4F              ;	21/01/23
 40+  8C4F              ;
 41+  8C4F              ; 	Comprueba_limite_horizontal.
 42+  8C4F              ;
 43+  8C4F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8C4F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8C4F              ;
 46+  8C4F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8C4F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8C4F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8C4F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8C4F
 51+  8C4F
 52+  8C4F
 53+  8C4F 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8C52 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8C54 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8C56 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8C58 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8C5B 18 09            jr 6F
 59+  8C5D CB 5F        1 bit 3,a
 60+  8C5F 28 0A            jr z,2F
 61+  8C61 E6 F7            and $f7
 62+  8C63 32 C3 85         ld (Ctrl_0),a
 63+  8C66 CD B9 8D     6 call Inicializacion
 64+  8C69 18 5B            jr 5F
 65+  8C6B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8C6C
 67+  8C6C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8C6C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8C6C
 70+  8C6C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8C6D 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8C70 CD BE 91     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8C73 67           	ld h,a
 74+  8C74 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8C75 CD BE 91     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8C78 67           	ld h,a
 77+  8C79 A7           	and a
 78+  8C7A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8C7C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8C7D 3A AA 85     	ld a,(Cuad_objeto)
 81+  8C80 FE 02        	cp 2
 82+  8C82 38 1E        	jr c,3F
 83+  8C84 28 1C        	jr z,3F
 84+  8C86 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8C87 28 23            jr z,7F
 86+  8C89 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8C8B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8C8D E1           	pop hl
 89+  8C8E
 90+  8C8E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8C8E              ; _para indicar con E="2" en caso necesario.
 92+  8C8E
 93+  8C8E E5               push hl
 94+  8C8F C5               push bc
 95+  8C90 CD BE 91     	call calcula_tercio
 96+  8C93 FE 01        	cp 1
 97+  8C95 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8C97 CD C7 8C         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8C9A 28 26            jr z,9F
100+  8C9C 38 24            jr c,9F
101+  8C9E 1E 00        11 ld e,0
102+  8CA0 18 22            jr 8F
103+  8CA2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8CA3 28 07        	jr z, 7F
105+  8CA5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8CA7 1E 00         	ld e,0
107+  8CA9 E1           	pop hl
108+  8CAA 18 04        	jr 4F
109+  8CAC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8CAE 18 15            jr 10F
111+  8CB0
112+  8CB0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8CB0              ; _para indicar con E="2" en caso necesario.
114+  8CB0
115+  8CB0 E5           4 push hl
116+  8CB1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8CB2 CD BE 91     	call calcula_tercio
118+  8CB5 FE 01        	cp 1
119+  8CB7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8CB9 CD C7 8C         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8CBC 28 04            jr z,9F
122+  8CBE 30 02            jr nc,9F
123+  8CC0 18 02        	jr 8F
124+  8CC2 1E 02        9 ld e,2
125+  8CC4 C1           8 pop bc
126+  8CC5 E1           10 pop hl
127+  8CC6 C9           5 ret
128+  8CC7
129+  8CC7              ; --------------------
130+  8CC7              ;
131+  8CC7              ; 25/08/22
132+  8CC7
133+  8CC7 CD BE 91     Comprueba_centro call calcula_tercio
134+  8CCA 67               ld h,a
135+  8CCB 08           	ex af,af
136+  8CCC FE 02        	cp 2
137+  8CCE 38 07        	jr c,1F
138+  8CD0 28 05        	jr z,1F
139+  8CD2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8CD5 18 03        	jr 2F
141+  8CD7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8CDA 08           2 ex af,af
143+  8CDB A7               and a
144+  8CDC ED 42            sbc hl,bc
145+  8CDE C9               ret
146+  8CDF
147+  8CDF              ; *********************************************************************************************************************************************************************************************
148+  8CDF              ;
149+  8CDF              ;   16/8/22
150+  8CDF              ;
151+  8CDF              ;	Comprueba_limite_vertical
152+  8CDF              ;
153+  8CDF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8CDF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8CDF              ;
156+  8CDF
157+  8CDF 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8CE2 7D           	ld a,l
159+  8CE3 E6 1F        	and $1F
160+  8CE5 57           	ld d,a
161+  8CE6 3A CF 85     	ld a,(Limite_vertical)
162+  8CE9 BA           	cp d 											; Límite - Posición.
163+  8CEA 08           	ex af,af 										; Resultado de CP d en F'.
164+  8CEB 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8CEE CB 47        	bit 0,a
166+  8CF0 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8CF2
168+  8CF2              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8CF2
170+  8CF2 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8CF3 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8CF5
173+  8CF5              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8CF5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8CF5
176+  8CF5 3A 9C 85         ld a,(Coordenada_X)
177+  8CF8 16 0F            ld d,Centro_izquierda
178+  8CFA A7               and a
179+  8CFB 92               sub d 											 ; Posición - Centro_izquierda.
180+  8CFC 28 1E            jr z,3F
181+  8CFE 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8D00              ;                                                    ; _salimos sin modificar nada.
183+  8D00 18 0E            jr 2F
184+  8D02 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8D03 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8D05
187+  8D05              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8D05              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8D05
190+  8D05 3A 9C 85         ld a,(Coordenada_X)
191+  8D08 16 10            ld d,Centro_derecha
192+  8D0A A7               and a
193+  8D0B 92               sub d
194+  8D0C 28 0E            jr z,3F
195+  8D0E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8D10              ;                                                    ; _salimos sin modificar nada.
197+  8D10 CB 43        2 bit 0,e
198+  8D12 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8D14 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8D15 CD A9 8D         call Modificaccionne
201+  8D18 C1           	pop bc
202+  8D19 CD B9 8D         call Inicializacion
203+  8D1C C9           3 ret 				 								 ; Salimos de la rutina.
204+  8D1D
205+  8D1D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8D1D
207+  8D1D C5           4 push bc
208+  8D1E 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8D21 0A           	ld a,(bc)
210+  8D22 3D           	dec a
211+  8D23 47           	ld b,a 											 ; Columnas-1 en B.
212+  8D24 7D           	ld a,l
213+  8D25 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8D26 CB 47        	bit 0,a
215+  8D28 28 03        	jr z,5F
216+  8D2A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8D2B 18 2E        	jr 7F
218+  8D2D
219+  8D2D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8D2D
221+  8D2D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8D2E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8D2F 3A C3 85     	ld a,(Ctrl_0)
224+  8D32 CB 4F        	bit 1,a
225+  8D34 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8D36 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8D37
228+  8D37              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8D37
230+  8D37 1C               inc e
231+  8D38 1D               dec e
232+  8D39 20 07            jr nz,12F
233+  8D3B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8D3C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8D3D 22 98 85     	ld (Posicion_actual),hl
236+  8D40 18 44        13 jr 9F
237+  8D42 CB 43        12 bit 0,e
238+  8D44 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8D46              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8D46 C1           	pop bc
241+  8D47 18 D3        	jr 3B
242+  8D49 80           14 add b
243+  8D4A 6F               ld l,a
244+  8D4B 22 98 85     	ld (Posicion_actual),hl
245+  8D4E CD A9 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8D51 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8D53 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8D55 32 C3 85         ld (Ctrl_0),a
249+  8D58 F1           	pop af
250+  8D59 18 2B        	jr 9F
251+  8D5B
252+  8D5B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8D5B
254+  8D5B F5           7 push af
255+  8D5C 3A C3 85     	ld a,(Ctrl_0)
256+  8D5F CB 47        	bit 0,a
257+  8D61 20 1D        	jr nz,8F
258+  8D63 F1           	pop af
259+  8D64
260+  8D64              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8D64
262+  8D64 1C           	inc e
263+  8D65 1D               dec e
264+  8D66 20 07            jr nz,10F
265+  8D68 90           	sub b
266+  8D69 6F               ld l,a
267+  8D6A 22 98 85     	ld (Posicion_actual),hl
268+  8D6D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8D6F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8D6F CB 43        10 bit 0,e
271+  8D71 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8D73              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8D73 C1           	pop bc
274+  8D74 18 A6        	jr 3B
275+  8D76 90           16 sub b
276+  8D77 6F               ld l,a
277+  8D78 22 98 85     	ld (Posicion_actual),hl
278+  8D7B CD A9 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8D7E 18 06            jr 9F
280+  8D80 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8D82 32 C3 85         ld (Ctrl_0),a
282+  8D85 F1           	pop af
283+  8D86 C1           9 pop bc
284+  8D87 1E 00        	ld e,0
285+  8D89 CD B9 8D         call Inicializacion
286+  8D8C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8D8D 08           	ex af,af
288+  8D8E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8D8F 18 8B            jr 3B
290+  8D91
291+  8D91              ; --------------------
292+  8D91
293+  8D91 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8D93 CD 0D 8F     1 call PreviousScan
295+  8D96 10 FB            djnz 1B
296+  8D98 22 98 85     	ld (Posicion_actual),hl
297+  8D9B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8D9C C9           	ret
299+  8D9D
300+  8D9D              ; --------------------
301+  8D9D
302+  8D9D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8D9F CD FE 8E     1 call NextScan
304+  8DA2 10 FB            djnz 1B
305+  8DA4 22 98 85     	ld (Posicion_actual),hl
306+  8DA7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8DA8 C9           	ret
308+  8DA9
309+  8DA9              ; --------------------
310+  8DA9              ;
311+  8DA9              ;	22/01/23
312+  8DA9              ;
313+  8DA9              ;	E="1". Hemos cambiado de cuadrante.
314+  8DA9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8DA9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8DA9
317+  8DA9
318+  8DA9              Modificaccionne
319+  8DA9
320+  8DA9 3A AA 85     	ld a,(Cuad_objeto)
321+  8DAC FE 02        	cp 2
322+  8DAE CC 91 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8DB1 DC 91 8D         call c,Modifica_Pos_actual
324+  8DB4 C8           	ret z
325+  8DB5 CD 9D 8D         call Modifica_Pos_actual2
326+  8DB8 C9               ret
327+  8DB9
328+  8DB9              ; *************************************************************************************************************************************************************************************************
329+  8DB9              ;
330+  8DB9              ;	13/8/22
331+  8DB9              ;
332+  8DB9              ;	Inicializacion
333+  8DB9              ;
334+  8DB9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8DB9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8DB9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8DB9              ;
338+  8DB9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8DB9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8DB9              ;	_ desaparece/aparece.
341+  8DB9
342+  8DB9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8DB9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8DB9              ;
345+  8DB9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8DB9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8DB9              ; 		   [E] ="0"
348+  8DB9
349+  8DB9              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8DB9
351+  8DB9 CD BE 91     Inicializacion call calcula_tercio
352+  8DBC 28 36        	jr z,primit
353+  8DBE E6 02        	and 2
354+  8DC0 20 07        	jr nz,segmit
355+  8DC2 7D           	ld a,l
356+  8DC3 FE 7F        	cp $7f
357+  8DC5 38 2D        	jr c,primit
358+  8DC7 28 2B        	jr z,primit
359+  8DC9 CD 26 8E     segmit call column
360+  8DCC 38 13        	jr c,tercuad
361+  8DCE 3E 04        cuarcuad ld a,4
362+  8DD0 32 AA 85     	ld (Cuad_objeto),a
363+  8DD3 21 20 48     	ld hl,$4820
364+  8DD6 22 CD 85     	ld (Limite_horizontal),hl
365+  8DD9 21 CF 85     	ld hl,Limite_vertical
366+  8DDC 36 0D        	ld (hl),$0d
367+  8DDE 08           	ex af,af
368+  8DDF 18 3C        	jr 1F
369+  8DE1              tercuad
370+  8DE1 3E 03        	ld a,3
371+  8DE3 32 AA 85     	ld (Cuad_objeto),a
372+  8DE6 21 20 48     	ld hl,$4820
373+  8DE9 22 CD 85     	ld (Limite_horizontal),hl
374+  8DEC 21 CF 85     	ld hl,Limite_vertical
375+  8DEF 36 12        	ld (hl),$12
376+  8DF1 08           	ex af,af
377+  8DF2 18 29        	jr 1F
378+  8DF4 CD 26 8E     primit call column
379+  8DF7 38 13        	jr c, primcuad
380+  8DF9              segcuad
381+  8DF9 3E 02        	ld a,2
382+  8DFB 32 AA 85     	ld (Cuad_objeto),a
383+  8DFE 21 C0 4F     	ld hl,$4fc0
384+  8E01 22 CD 85     	ld (Limite_horizontal),hl
385+  8E04 21 CF 85     	ld hl,Limite_vertical
386+  8E07 36 0D        	ld (hl),$0d
387+  8E09 08           	ex af,af
388+  8E0A 18 11        	jr 1F
389+  8E0C              primcuad
390+  8E0C 3E 01        	ld a,1
391+  8E0E 32 AA 85     	ld (Cuad_objeto),a
392+  8E11 21 C0 4F     	ld hl,$4fc0
393+  8E14 22 CD 85     	ld (Limite_horizontal),hl
394+  8E17 21 CF 85     	ld hl,Limite_vertical
395+  8E1A 36 12        	ld (hl),$12
396+  8E1C 08           	ex af,af
397+  8E1D CD EA 94     1 call Genera_coordenadas
398+  8E20 21 C3 85     	ld hl,Ctrl_0
399+  8E23 CB EE        	set 5,(hl)
400+  8E25 C9           	ret
401+  8E26
402+  8E26              ; ------------------------------------------------------------------------------------------------------------------
403+  8E26
404+  8E26              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8E26              ;
406+  8E26              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8E26
408+  8E26 7D           column ld a,l
409+  8E27 E6 1F        	and $1f
410+  8E29 FE 10         	cp $10
411+  8E2B C9            	ret
412+  8E2C
413+  8E2C              ; --------------------------------------------------------------------------------------------------------------------
414+  8E2C              ;
415+  8E2C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8E2C              ;
417+  8E2C              ; 14/12/22
418+  8E2C              ;
419+  8E2C              ;	Modifica: A y BC.
420+  8E2C
421+  8E2C 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8E2F E6 01        	and 1
423+  8E31 28 17        	jr z,1F
424+  8E33
425+  8E33              ; Nos encontramos en la parte izquierda de la pantalla
426+  8E33
427+  8E33 3A 9C 85     	ld a,(Coordenada_X)
428+  8E36 47           	ld b,a
429+  8E37 04           	inc b											; (Coordenada_X)+1 en B.
430+  8E38 79           	ld a,c
431+  8E39 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8E3A 38 08        	jr c,2F
433+  8E3C 47           	ld b,a
434+  8E3D 79           	ld a,c
435+  8E3E 90           	sub b
436+  8E3F 32 CC 85     	ld (Columnas),a
437+  8E42 18 1B        	jr 4F
438+  8E44 79           2 ld a,c
439+  8E45 32 CC 85     	ld (Columnas),a
440+  8E48 18 15        	jr 4F
441+  8E4A
442+  8E4A              ; Nos encontramos en la parte derecha de la pantalla.
443+  8E4A
444+  8E4A 3A 9C 85     1 ld a,(Coordenada_X)
445+  8E4D 81           	add c
446+  8E4E 3D           	dec a
447+  8E4F D6 1F        	sub $1f
448+  8E51 38 08        	jr c,3F
449+  8E53 47           	ld b,a
450+  8E54 79           	ld a,c
451+  8E55 90           	sub b
452+  8E56 32 CC 85     	ld (Columnas),a
453+  8E59 18 04        	jr 4F
454+  8E5B 79           3 ld a,c
455+  8E5C 32 CC 85     	ld (Columnas),a
456+  8E5F D9           4 exx
457+  8E60 4F           	ld c,a
458+  8E61 D9           	exx
459+  8E62 C9            ret
460+  8E63
461+  8E63              ; --------------------------------------------------------------------------------------------------------------------
462+  8E63              ;
463+  8E63              ; 7/1/23
464+  8E63              ;
465+  8E63              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8E63              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8E63              ;
468+  8E63              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8E63              ;	DESTRUYE: HL,B Y A.
470+  8E63
471+  8E63 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8E66 FE 02        	cp 2
473+  8E68 38 18        	jr c,1F
474+  8E6A 28 16        	jr z,1F
475+  8E6C E6 01        	and 1
476+  8E6E 28 0D        	jr z,3F
477+  8E70
478+  8E70              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8E70
480+  8E70 CD AC 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8E73
482+  8E73 7D           9 ld a,l
483+  8E74 E6 1F        	and $1f
484+  8E76 28 2A        	jr z,7F
485+  8E78 2B           	dec hl
486+  8E79 10 F8        	djnz 9B
487+  8E7B 18 25        	jr 7F
488+  8E7D
489+  8E7D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8E7D
491+  8E7D 2A 98 85     3 ld hl,(Posicion_actual)
492+  8E80 18 20        	jr 7F
493+  8E82
494+  8E82 28 14        1 jr z,2F
495+  8E84
496+  8E84              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8E84
498+  8E84 CD AC 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8E87 7D           4 ld a,l
500+  8E88 E6 1F        	and $1f
501+  8E8A 28 03        	jr z,6F
502+  8E8C 2B           	dec hl
503+  8E8D 10 F8        	djnz 4B
504+  8E8F 06 0F        6 ld b,15
505+  8E91 CD 0D 8F     5 call PreviousScan
506+  8E94 10 FB        	djnz 5B
507+  8E96 18 0A        	jr 7F
508+  8E98
509+  8E98              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8E98
511+  8E98 CD AC 8E     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8E9B 06 0F        	ld b,15
513+  8E9D CD 0D 8F     8 call PreviousScan
514+  8EA0 10 FB        	djnz 8B
515+  8EA2
516+  8EA2 E5           7 push hl
517+  8EA3 DD E1        	pop ix
518+  8EA5
519+  8EA5 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8EA8 E5           	push hl
521+  8EA9 FD E1        	pop iy
522+  8EAB
523+  8EAB C9           	ret
524+  8EAC
525+  8EAC              ; --------------------------------------------------------------------------------------------------------------------
526+  8EAC              ;
527+  8EAC              ;	2/1/23
528+  8EAC              ;
529+  8EAC              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8EAC              ;
531+  8EAC              ;	Tras esta rutina tenemos:
532+  8EAC              ;
533+  8EAC              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8EAC              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8EAC              ;
536+  8EAC              ;	DESTRUYE!!!!! HL,B y A.
537+  8EAC
538+  8EAC 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8EAF 3A CC 85     	ld a,(Columnas)
540+  8EB2 3D           	dec a
541+  8EB3 20 01        	jr nz,1F
542+  8EB5 3C           	inc a
543+  8EB6 47           1 ld b,a
544+  8EB7 C9           	ret
545+  8EB8
546+  8EB8              ; --------------------------------------------------------------------------------------------------------------------
547+  8EB8              ;
548+  8EB8              ;	3/1/23
549+  8EB8              ;
550+  8EB8              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8EB8              ;
552+  8EB8              ;	Destruye: A,B,HL y DE.
553+  8EB8
554+  8EB8              Define_rutina_de_impresion
555+  8EB8
556+  8EB8 3A 97 85     	ld a,(Columns)
557+  8EBB 47           	ld b,a
558+  8EBC 3A CC 85     	ld a,(Columnas)
559+  8EBF B8           	cp b
560+  8EC0 20 0D        	jr nz,2f
561+  8EC2
562+  8EC2              ;	La entidad se imprime entera.
563+  8EC2
564+  8EC2 21 8E 8F     	ld hl, Indice_entidades_completas
565+  8EC5 E6 01        	and 1
566+  8EC7 28 02        	jr z,1F
567+  8EC9
568+  8EC9 23           	inc hl
569+  8ECA 23           	inc hl
570+  8ECB
571+  8ECB CD A6 87     1 call Extrae_address
572+  8ECE C9           	ret		;	ret
573+  8ECF
574+  8ECF              ;	La entidad no se imprime entera en pantalla.
575+  8ECF
576+  8ECF 3A AA 85     2 ld a,(Cuad_objeto)
577+  8ED2 E6 01        	and 1
578+  8ED4 28 17        	jr z,3F
579+  8ED6
580+  8ED6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8ED6
582+  8ED6 21 92 8F     	ld hl, Indice_entidades_incompletas_izquierda
583+  8ED9 3A 97 85     4 ld a,(Columns)
584+  8EDC E6 01        	and 1
585+  8EDE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8EE0
587+  8EE0 23           	inc hl
588+  8EE1 23           	inc hl
589+  8EE2
590+  8EE2 3A CC 85     	ld a,(Columnas)
591+  8EE5 E6 01        	and 1
592+  8EE7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8EE9
594+  8EE9 23           	inc hl
595+  8EEA 23           	inc hl
596+  8EEB
597+  8EEB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8EED
599+  8EED 21 98 8F     3 ld hl, Indice_entidades_incompletas_derecha
600+  8EF0 18 E7        	jr 4B
601+  8EF2
602+  8EF2              ; --------------------------------------------------------------------------------------------------------------------
603+  8EF2              ;
604+  8EF2              ;	Prepara_draw
605+  8EF2              ;
606+  8EF2              ;	Es una rutina de carga.
607+  8EF2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8EF2              ;
609+  8EF2              ;	FUNCIONAMIENTO:
610+  8EF2              ;
611+  8EF2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8EF2              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8EF2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8EF2              ;
615+  8EF2              ;	DESTRUYE:
616+  8EF2              ;
617+  8EF2              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8EF2
619+  8EF2 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8EF5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8EF6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8EF7 4E           	ld c,(hl)
623+  8EF8 2A 98 85     	ld hl,(Posicion_actual)
624+  8EFB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8EFD C9           	ret
626+  8EFE
627+  8EFE              ;----------------------------------------------------------------------------------------------------------------
628+  8EFE              ;
629+  8EFE              ;	5/08/22
630+  8EFE              ;
631+  8EFE              ;   NextScan.
632+  8EFE              ;
633+  8EFE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8EFE              ;
635+  8EFE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8EFE              ;
637+  8EFE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8EFE              ;
639+  8EFE              ;       DESTRUIDOS: AF y HL !!!
640+  8EFE              ;
641+  8EFE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8EFE              ;
643+  8EFE
644+  8EFE 24           NextScan inc h          ; Incrementamos el scanline.
645+  8EFF 7C               ld a,h
646+  8F00 E6 07            and 7
647+  8F02 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8F03
649+  8F03 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8F04 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8F06 6F               ld l,a
652+  8F07 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8F08
654+  8F08 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8F09 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8F0B 67               ld h,a
657+  8F0C C9               ret
658+  8F0D
659+  8F0D              ;----------------------------------------------------------------------------------------------------------------
660+  8F0D              ;
661+  8F0D              ;	5/08/22
662+  8F0D              ;
663+  8F0D              ;   PreviousScan.
664+  8F0D              ;
665+  8F0D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8F0D              ;
667+  8F0D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8F0D              ;
669+  8F0D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8F0D              ;
671+  8F0D              ;       DESTRUIDOS: AF y HL !!!
672+  8F0D              ;
673+  8F0D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8F0D              ;
675+  8F0D
676+  8F0D 7C           PreviousScan ld a,h
677+  8F0E 25               dec h               ; Dec H.
678+  8F0F E6 07            and 7
679+  8F11 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8F12
681+  8F12 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8F13 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8F15 6F               ld l,a
684+  8F16 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8F17
686+  8F17 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8F18 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8F1A 67               ld h,a
689+  8F1B C9               ret
690+  8F1C
691+  8F1C              ; -----------------------------------------------------------------------------------
692+  8F1C              ;
693+  8F1C              ;	28/2/23
694+  8F1C              ;
695+  8F1C              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8F1C              ;	Extrae fotos de Album_de_fotos.
697+  8F1C
698+  8F1C 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8F1F A7           	and a
700+  8F20 C8           	ret z
701+  8F21 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8F25 31 00 70     	ld sp,Album_de_fotos
703+  8F28
704+  8F28 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8F2A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8F2B D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8F2C
708+  8F2C ED 73 DB 85  	ld (Stack_2),sp
709+  8F30 ED 7B D9 85  	ld sp,(Stack)
710+  8F34
711+  8F34              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8F34
713+  8F34 3E CD        	ld a,$cd
714+  8F36 32 3E 8F     	ld (Imprime),a
715+  8F39 EB           	ex de,hl
716+  8F3A 22 3F 8F     	ld (Imprime+1),hl
717+  8F3D EB           	ex de,hl
718+  8F3E
719+  8F3E              ; Ejecuta la llamada:	CALL $xx,xx
720+  8F3E
721+  8F3E 00 00 00     Imprime db 0,0,0
722+  8F41
723+  8F41 3A D8 85     	ld a,(Numero_de_malotes)
724+  8F44 3D           	dec a
725+  8F45 28 09        	jr z,1F
726+  8F47 32 D8 85      	ld (Numero_de_malotes),a
727+  8F4A
728+  8F4A ED 7B DB 85   	ld sp,(Stack_2)
729+  8F4E 18 D8        	jr 2B
730+  8F50
731+  8F50 AF           1 xor a
732+  8F51 32 DB 85     	ld (Stack_2),a
733+  8F54 C9           	ret
734+  8F55
735+  8F55              ; -----------------------------------------------------------------------------------
736+  8F55              ;
737+  8F55              ;	28/2/23
738+  8F55              ;
739+  8F55              ;	Pinta los disparos generados.
740+  8F55
741+  8F55              Extrae_foto_disparos
742+  8F55
743+  8F55 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8F58 A7           	and a
745+  8F59 C8           	ret z
746+  8F5A ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8F5E 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8F61
749+  8F61 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8F63 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8F64 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8F65
753+  8F65 ED 73 DB 85  	ld (Stack_2),sp
754+  8F69 ED 7B D9 85  	ld sp,(Stack)
755+  8F6D
756+  8F6D              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8F6D
758+  8F6D 3E CD        	ld a,$cd
759+  8F6F 32 77 8F     	ld (Imprime2),a
760+  8F72 EB           	ex de,hl
761+  8F73 22 78 8F     	ld (Imprime2+1),hl
762+  8F76 EB           	ex de,hl
763+  8F77
764+  8F77              ; Ejecuta la llamada:	CALL $xx,xx
765+  8F77
766+  8F77 00 00 00     Imprime2 db 0,0,0
767+  8F7A
768+  8F7A 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8F7D 3D           	dec a
770+  8F7E 28 09        	jr z,1F
771+  8F80 32 E1 85      	ld (Numero_de_disparotes),a
772+  8F83
773+  8F83 ED 7B DB 85  	ld sp,(Stack_2)
774+  8F87 18 D8        	jr 2B
775+  8F89
776+  8F89 AF           1 xor a
777+  8F8A 32 DB 85     	ld (Stack_2),a
778+  8F8D C9           	ret
779+  8F8E
# file closed: Draw_XOR.asm
884   8F8E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8F8E              ;   índices de Rutinas de impresión.
  2+  8F8E
  3+  8F8E 9E 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8F90 CB 8F            defw Pinta_Amadeus_3x2
  5+  8F92
  6+  8F92 21 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8F94 C1 90            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8F96 75 90            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8F98
 10+  8F98 4B 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8F9A 4F 91            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8F9C 03 91            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8F9E
 14+  8F9E
 15+  8F9E              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8F9E              ;
 17+  8F9E              ;   12/12/22
 18+  8F9E              ;
 19+  8F9E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8F9E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8F9E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8F9E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8F9E              ;
 24+  8F9E              ;   Modifica: DE y HL.
 25+  8F9E
 26+  8F9E ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8FA2 FD F9        	ld sp,iy
 28+  8FA4 06 10            ld b,16
 29+  8FA6 D1           1 pop de
 30+  8FA7 7B               ld a,e
 31+  8FA8 AE               xor (hl)
 32+  8FA9 77           	ld (hl),a
 33+  8FAA 23           	inc hl
 34+  8FAB 7A               ld a,d
 35+  8FAC AE               xor (hl)
 36+  8FAD 77           	ld (hl),a
 37+  8FAE 2B           	dec hl
 38+  8FAF 24           	inc h
 39+  8FB0 7C               ld a,h
 40+  8FB1 E6 07            and 7
 41+  8FB3 20 0A            jr nz,2F
 42+  8FB5 7D               ld a,l
 43+  8FB6 C6 20            add a,$20
 44+  8FB8 6F               ld l,a
 45+  8FB9 38 04            jr c,2F
 46+  8FBB 7C               ld a,h
 47+  8FBC D6 08            sub 8
 48+  8FBE 67               ld h,a
 49+  8FBF 7C           2 ld a,h
 50+  8FC0 FE 58            cp $58
 51+  8FC2 28 02            jr z,3F
 52+  8FC4 10 E0            djnz 1B
 53+  8FC6 ED 7B D9 85  3 ld sp,(Stack)
 54+  8FCA C9           	ret
 55+  8FCB
 56+  8FCB ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8FCF FD F9        	ld sp,iy
 58+  8FD1 06 08            ld b,8
 59+  8FD3 D1           1 pop de
 60+  8FD4 7B               ld a,e
 61+  8FD5 AE               xor (hl)
 62+  8FD6 77           	ld (hl),a
 63+  8FD7 23           	inc hl
 64+  8FD8 7A               ld a,d
 65+  8FD9 AE               xor (hl)
 66+  8FDA 77           	ld (hl),a
 67+  8FDB 23           	inc hl
 68+  8FDC D1           	pop de
 69+  8FDD 7B               ld a,e
 70+  8FDE AE               xor (hl)
 71+  8FDF 77           	ld (hl),a
 72+  8FE0 2B           	dec hl
 73+  8FE1 2B           	dec hl
 74+  8FE2 24           	inc h
 75+  8FE3 7C               ld a,h
 76+  8FE4 E6 07            and 7
 77+  8FE6 20 0A            jr nz,2F
 78+  8FE8 7D               ld a,l
 79+  8FE9 C6 20            add a,$20
 80+  8FEB 6F               ld l,a
 81+  8FEC 38 04            jr c,2F
 82+  8FEE 7C               ld a,h
 83+  8FEF D6 08            sub 8
 84+  8FF1 67               ld h,a
 85+  8FF2 7C           2 ld a,h
 86+  8FF3 FE 58            cp $58
 87+  8FF5 28 25            jr z,4F
 88+  8FF7 7A               ld a,d
 89+  8FF8 AE               xor (hl)
 90+  8FF9 77               ld (hl),a
 91+  8FFA D1           	pop de
 92+  8FFB 23           	inc hl
 93+  8FFC 7B               ld a,e
 94+  8FFD AE               xor (hl)
 95+  8FFE 77           	ld (hl),a
 96+  8FFF 23           	inc hl
 97+  9000 7A               ld a,d
 98+  9001 AE               xor (hl)
 99+  9002 77           	ld (hl),a
100+  9003 2B           	dec hl
101+  9004 2B           	dec hl
102+  9005 24           	inc h
103+  9006 7C               ld a,h
104+  9007 E6 07            and 7
105+  9009 20 0A            jr nz,3F
106+  900B 7D               ld a,l
107+  900C C6 20            add a,$20
108+  900E 6F               ld l,a
109+  900F 38 04            jr c,3F
110+  9011 7C               ld a,h
111+  9012 D6 08            sub 8
112+  9014 67               ld h,a
113+  9015 7C           3 ld a,h
114+  9016 FE 58            cp $58
115+  9018 28 02            jr z,4F
116+  901A 10 B7            djnz 1B
117+  901C ED 7B D9 85  4 ld sp,(Stack)
118+  9020 C9           	ret
119+  9021
120+  9021              ; ---------------------------------------------------
121+  9021
122+  9021 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  9025 FD F9        	ld sp,iy
124+  9027
125+  9027              ; >>>
126+  9027
127+  9027 06 10            ld b,16
128+  9029 D1           1 pop de
129+  902A 7A           	ld a,d
130+  902B AE           	xor (hl)
131+  902C 77           	ld (hl),a
132+  902D 24           	inc h
133+  902E 7C               ld a,h
134+  902F E6 07            and 7
135+  9031 20 0C            jr nz,2F
136+  9033 7D               ld a,l
137+  9034 C6 20            add a,$20
138+  9036 6F               ld l,a
139+  9037 38 06            jr c,2F
140+  9039 7C               ld a,h
141+  903A D6 08            sub 8
142+  903C 67               ld h,a
143+  903D 18 00            jr 2F
144+  903F 7C           2 ld a,h
145+  9040 FE 58            cp $58
146+  9042 28 02            jr z,3F
147+  9044 10 E3            djnz 1B
148+  9046 ED 7B D9 85  3 ld sp,(Stack)
149+  904A C9           	ret
150+  904B
151+  904B ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  904F FD F9        	ld sp,iy
153+  9051
154+  9051              ; >>>
155+  9051
156+  9051 06 10            ld b,16
157+  9053 D1           1 pop de
158+  9054 7B           	ld a,e
159+  9055 AE           	xor (hl)
160+  9056 77           	ld (hl),a
161+  9057 24           	inc h
162+  9058 7C               ld a,h
163+  9059 E6 07            and 7
164+  905B 20 0C            jr nz,2F
165+  905D 7D               ld a,l
166+  905E C6 20            add a,$20
167+  9060 6F               ld l,a
168+  9061 38 06            jr c,2F
169+  9063 7C               ld a,h
170+  9064 D6 08            sub 8
171+  9066 67               ld h,a
172+  9067 18 00            jr 2F
173+  9069 7C           2 ld a,h
174+  906A FE 58            cp $58
175+  906C 28 02            jr z,3F
176+  906E 10 E3            djnz 1B
177+  9070 ED 7B D9 85  3 ld sp,(Stack)
178+  9074 C9           	ret
179+  9075
180+  9075              ; ---------------------------------------------------
181+  9075
182+  9075 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  9079 FD F9        	ld sp,iy
184+  907B 06 08            ld b,8
185+  907D D1           1 pop de
186+  907E 7A           	ld a,d
187+  907F AE           	xor (hl)
188+  9080 77           	ld (hl),a
189+  9081 23           	inc hl
190+  9082 D1           	pop de
191+  9083 7B           	ld a,e
192+  9084 AE           	xor (hl)
193+  9085 77           	ld (hl),a
194+  9086 2B           	dec hl
195+  9087 24            	inc h
196+  9088 7C               ld a,h
197+  9089 E6 07            and 7
198+  908B 20 0A            jr nz,2F
199+  908D 7D               ld a,l
200+  908E C6 20            add a,$20
201+  9090 6F               ld l,a
202+  9091 38 04            jr c,2F
203+  9093 7C               ld a,h
204+  9094 D6 08            sub 8
205+  9096 67               ld h,a
206+  9097 7C           2 ld a,h
207+  9098 FE 58            cp $58
208+  909A 28 20            jr z,4F
209+  909C D1               pop de
210+  909D 7B           	ld a,e
211+  909E AE           	xor (hl)
212+  909F 77           	ld (hl),a
213+  90A0 23           	inc hl
214+  90A1 7A           	ld a,d
215+  90A2 AE           	xor (hl)
216+  90A3 77           	ld (hl),a
217+  90A4 2B           	dec hl
218+  90A5 24           	inc h
219+  90A6 7C               ld a,h
220+  90A7 E6 07            and 7
221+  90A9 20 0A            jr nz,3F
222+  90AB 7D               ld a,l
223+  90AC C6 20            add a,$20
224+  90AE 6F               ld l,a
225+  90AF 38 04            jr c,3F
226+  90B1 7C               ld a,h
227+  90B2 D6 08            sub 8
228+  90B4 67               ld h,a
229+  90B5 7C           3 ld a,h
230+  90B6 FE 58            cp $58
231+  90B8 28 02            jr z,4F
232+  90BA 10 C1            djnz 1B
233+  90BC ED 7B D9 85  4 ld sp,(Stack)
234+  90C0 C9           	ret
235+  90C1
236+  90C1 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  90C5 FD F9        	ld sp,iy
238+  90C7 06 08            ld b,8
239+  90C9 D1           1 pop de
240+  90CA D1           	pop de
241+  90CB 7B           	ld a,e
242+  90CC AE           	xor (hl)
243+  90CD 77           	ld (hl),a
244+  90CE 24            	inc h
245+  90CF 7C               ld a,h
246+  90D0 E6 07            and 7
247+  90D2 20 0A            jr nz,2F
248+  90D4 7D               ld a,l
249+  90D5 C6 20            add a,$20
250+  90D7 6F               ld l,a
251+  90D8 38 04            jr c,2F
252+  90DA 7C               ld a,h
253+  90DB D6 08            sub 8
254+  90DD 67               ld h,a
255+  90DE 7C           2 ld a,h
256+  90DF FE 58            cp $58
257+  90E1 28 1B            jr z,4F
258+  90E3 D1               pop de
259+  90E4 7A           	ld a,d
260+  90E5 AE           	xor (hl)
261+  90E6 77           	ld (hl),a
262+  90E7 24           	inc h
263+  90E8 7C               ld a,h
264+  90E9 E6 07            and 7
265+  90EB 20 0A            jr nz,3F
266+  90ED 7D               ld a,l
267+  90EE C6 20            add a,$20
268+  90F0 6F               ld l,a
269+  90F1 38 04            jr c,3F
270+  90F3 7C               ld a,h
271+  90F4 D6 08            sub 8
272+  90F6 67               ld h,a
273+  90F7 7C           3 ld a,h
274+  90F8 FE 58            cp $58
275+  90FA 28 02            jr z,4F
276+  90FC 10 CB            djnz 1B
277+  90FE ED 7B D9 85  4 ld sp,(Stack)
278+  9102 C9           	ret
279+  9103
280+  9103 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9107 FD F9        	ld sp,iy
282+  9109 06 08            ld b,8
283+  910B D1           1 pop de
284+  910C 7B           	ld a,e
285+  910D AE           	xor (hl)
286+  910E 77           	ld (hl),a
287+  910F 23           	inc hl
288+  9110 7A           	ld a,d
289+  9111 AE           	xor (hl)
290+  9112 77           	ld (hl),a
291+  9113 2B           	dec hl
292+  9114 24             	inc h
293+  9115 7C               ld a,h
294+  9116 E6 07            and 7
295+  9118 20 0A            jr nz,2F
296+  911A 7D               ld a,l
297+  911B C6 20            add a,$20
298+  911D 6F               ld l,a
299+  911E 38 04            jr c,2F
300+  9120 7C               ld a,h
301+  9121 D6 08            sub 8
302+  9123 67               ld h,a
303+  9124 7C           2 ld a,h
304+  9125 FE 58            cp $58
305+  9127 28 21            jr z,4F
306+  9129 D1               pop de
307+  912A 7A           	ld a,d
308+  912B AE           	xor (hl)
309+  912C 77           	ld (hl),a
310+  912D 23           	inc hl
311+  912E D1               pop de
312+  912F 7B           	ld a,e
313+  9130 AE           	xor (hl)
314+  9131 77           	ld (hl),a
315+  9132 2B           	dec hl
316+  9133 24           	inc h
317+  9134 7C               ld a,h
318+  9135 E6 07            and 7
319+  9137 20 0A            jr nz,3F
320+  9139 7D               ld a,l
321+  913A C6 20            add a,$20
322+  913C 6F               ld l,a
323+  913D 38 04            jr c,3F
324+  913F 7C               ld a,h
325+  9140 D6 08            sub 8
326+  9142 67               ld h,a
327+  9143 7C           3 ld a,h
328+  9144 FE 58            cp $58
329+  9146 28 02            jr z,4F
330+  9148 10 C1            djnz 1B
331+  914A ED 7B D9 85  4 ld sp,(Stack)
332+  914E C9           	ret
333+  914F
334+  914F ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9153 FD F9        	ld sp,iy
336+  9155 06 08            ld b,8
337+  9157 D1           1 pop de
338+  9158 7B           	ld a,e
339+  9159 AE           	xor (hl)
340+  915A 77           	ld (hl),a
341+  915B 24            	inc h
342+  915C 7C               ld a,h
343+  915D E6 07            and 7
344+  915F 20 0A            jr nz,2F
345+  9161 7D               ld a,l
346+  9162 C6 20            add a,$20
347+  9164 6F               ld l,a
348+  9165 38 04            jr c,2F
349+  9167 7C               ld a,h
350+  9168 D6 08            sub 8
351+  916A 67               ld h,a
352+  916B 7C           2 ld a,h
353+  916C FE 58            cp $58
354+  916E 28 1C            jr z,4F
355+  9170 D1               pop de
356+  9171 7A           	ld a,d
357+  9172 AE           	xor (hl)
358+  9173 77           	ld (hl),a
359+  9174 24           	inc h
360+  9175 7C               ld a,h
361+  9176 E6 07            and 7
362+  9178 20 0A            jr nz,3F
363+  917A 7D               ld a,l
364+  917B C6 20            add a,$20
365+  917D 6F               ld l,a
366+  917E 38 04            jr c,3F
367+  9180 7C               ld a,h
368+  9181 D6 08            sub 8
369+  9183 67               ld h,a
370+  9184 7C           3 ld a,h
371+  9185 FE 58            cp $58
372+  9187 28 03            jr z,4F
373+  9189 D1               pop de
374+  918A 10 CB            djnz 1B
375+  918C ED 7B D9 85  4 ld sp,(Stack)
376+  9190 C9           	ret
377+  9191
378+  9191              ; ---------------------------------------------------
379+  9191              ;
380+  9191              ;   27/02/23
381+  9191              ;
382+  9191              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  9191              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  9191              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  9191
386+  9191 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  9195 FD F9            ld sp,iy
388+  9197 06 02            ld b,2
389+  9199 D1           1 pop de
390+  919A 7B               ld a,e
391+  919B AE               xor (hl)
392+  919C 77               ld (hl),a
393+  919D 23               inc hl
394+  919E 7A               ld a,d
395+  919F AE               xor (hl)
396+  91A0 77               ld (hl),a
397+  91A1 2B               dec hl
398+  91A2
399+  91A2 24               inc h
400+  91A3 7C               ld a,h
401+  91A4 E6 07            and 7
402+  91A6 20 0A            jr nz,2F
403+  91A8 7D               ld a,l
404+  91A9 C6 20            add a,$20
405+  91AB 6F               ld l,a
406+  91AC 38 04            jr c,2F
407+  91AE 7C               ld a,h
408+  91AF D6 08            sub 8
409+  91B1 67               ld h,a
410+  91B2 7C           2 ld a,h
411+  91B3 FE 58            cp $58
412+  91B5 28 02            jr z,3F
413+  91B7
414+  91B7 10 E0            djnz 1B
415+  91B9 ED 7B D9 85  3 ld sp,(Stack)
416+  91BD C9               ret
417+  91BE
# file closed: Rutinas_de_impresion_sprites.asm
885   91BE              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  91BE              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  91BE              ;
  3+  91BE              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  91BE              ;
  5+  91BE              ; *****************************************************************************************************************************************************************************************
  6+  91BE              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  91BE
  8+  91BE 7C           calcula_tercio ld a,h
  9+  91BF E6 18        	and $18
 10+  91C1 CB 2F        	sra a
 11+  91C3 CB 2F        	sra a
 12+  91C5 CB 2F        	sra a
 13+  91C7 C9           	ret
 14+  91C8
# file closed: calcula_tercio.asm
886   91C8              	include "Cls.asm"
# file opened: Cls.asm
  1+  91C8              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  91C8              ;
  3+  91C8              ;
  4+  91C8              ;	CLS.
  5+  91C8              ;
  6+  91C8              ;	Limpia la pantalla y define sus atributos.
  7+  91C8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  91C8              ;
  9+  91C8              ;	COLORES: 0 ..... NEGRO
 10+  91C8              ;    		 1 ..... AZUL
 11+  91C8              ; 			 2 ..... ROJO
 12+  91C8              ;			 3 ..... MAGENTA
 13+  91C8              ; 			 4 ..... VERDE
 14+  91C8              ; 			 5 ..... CIAN
 15+  91C8              ;			 6 ..... AMARILLO
 16+  91C8              ; 			 7 ..... BLANCO
 17+  91C8              ;
 18+  91C8              ;	INPUT: A contiene los atributos de pantalla.
 19+  91C8              ;
 20+  91C8              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  91C8
 22+  91C8
 23+  91C8 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  91CB 11 01 40     	LD DE,$4001
 25+  91CE 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  91D1 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  91D3 ED B0        	LDIR
 28+  91D5 01 FF 02     	LD BC,767
 29+  91D8 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  91D9 ED B0        	LDIR
 31+  91DB C9           	ret
 32+  91DC
# file closed: Cls.asm
887   91DC              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  91DC              ; ******************************************************************************************************************************************************************************************
  2+  91DC              ;
  3+  91DC              ;   22/01/23
  4+  91DC              ;
  5+  91DC              ;	Mov_down
  6+  91DC              ;
  7+  91DC              ; 	Mueve el Sprite X px hacia abajo.
  8+  91DC              ;
  9+  91DC              ;
 10+  91DC 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  91DF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  91E1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  91E1              ; 																	; _ en el caso de que no lo haya.
 14+  91E1 3A AE 85     	ld a,(Vel_down)
 15+  91E4 47           	ld b,a
 16+  91E5 2A 98 85         ld hl,(Posicion_actual)
 17+  91E8 CD BE 91     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  91EB E6 02        	and 2
 19+  91ED 28 0F        	jr z,1F
 20+  91EF
 21+  91EF              ; Nos encontramos en el último tercio de pantalla.
 22+  91EF              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  91EF
 24+  91EF 7C           	ld a,h
 25+  91F0 FE 57        	cp $57
 26+  91F2 20 0A        	jr nz,1F
 27+  91F4 7D           	ld a,l
 28+  91F5 C6 20        	add $20
 29+  91F7 30 05        	jr nc,1F
 30+  91F9
 31+  91F9              ; ------------------------------
 32+  91F9 CD D4 94     	call Reaparece_arriba
 33+  91FC              ;	call Reinicio
 34+  91FC              ; ------------------------------
 35+  91FC
 36+  91FC 18 08        	jr 3F
 37+  91FE CD FE 8E     1 call NextScan
 38+  9201 22 98 85     	ld (Posicion_actual),hl
 39+  9204 10 E2            djnz 2B
 40+  9206 CD EA 94     3 call Genera_coordenadas
 41+  9209 C9           	ret
 42+  920A
 43+  920A              ; ******************************************************************************************************************************************************************************************
 44+  920A              ;
 45+  920A              ;   22/01/23
 46+  920A              ;
 47+  920A              ;	Mov_up
 48+  920A              ;
 49+  920A              ; 	Mueve el Sprite hacia arriba.
 50+  920A              ;
 51+  920A              ;
 52+  920A 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  920D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  920F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  920F              ; 																		; _ en el caso de que no lo haya.
 56+  920F 3A AD 85     	ld a,(Vel_up)
 57+  9212 47           	ld b,a
 58+  9213 2A 98 85     	ld hl,(Posicion_actual)
 59+  9216 CD BE 91     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  9219 A7           	and a
 61+  921A 20 10        	jr nz,1F
 62+  921C
 63+  921C              ; Nos encontramos en el 1er tercio de pantalla.
 64+  921C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  921C
 66+  921C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  921D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  921F 20 0B            jr nz,1F
 69+  9221 7D               ld a,l
 70+  9222 D6 20            sub $20
 71+  9224 30 06            jr nc,1F
 72+  9226 25               dec h
 73+  9227
 74+  9227              ; -----------------------------
 75+  9227 CD C4 94         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  922A              ;	call Reinicio
 77+  922A              ; -----------------------------
 78+  922A
 79+  922A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  922C CD 0D 8F     1 call PreviousScan
 81+  922F 22 98 85     	ld (Posicion_actual),hl
 82+  9232 10 E2            djnz 3B
 83+  9234 CD EA 94     2 call Genera_coordenadas
 84+  9237 C9           	ret
 85+  9238
 86+  9238              ; ******************************************************************************************************************************************************************************************
 87+  9238              ;
 88+  9238              ;	19/10/22
 89+  9238              ;
 90+  9238              ;	Mov_right.
 91+  9238              ;
 92+  9238              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9238              ;
 94+  9238
 95+  9238 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  923B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  923D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  923D              ; 																	; _ en el caso de que no lo haya.
 99+  923D 3A C3 85     	ld a,(Ctrl_0)
100+  9240 CB 77        	bit 6,a
101+  9242 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9244
103+  9244 CD 72 94     	call Stop_Amadeus_right
104+  9247 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9248 18 4D        	jr 8F
106+  924A
107+  924A 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  924D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  924F 20 46        	jr nz,8F
110+  9251
111+  9251 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9254 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9255 28 40        	jr z,8F
114+  9257
115+  9257              ; ---------- ---------- ----------
116+  9257              ;
117+  9257              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9257
119+  9257 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  925A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  925C 28 11        	jr z,1F
122+  925E 38 06        	jr c,6F
123+  9260 FE 04        	cp 4
124+  9262 28 14        	jr z,7F
125+  9264 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9266
127+  9266              ; ---------- ---------- ----------
128+  9266              ;
129+  9266              ; Perfiles de velocidad
130+  9266              ;
131+  9266
132+  9266 3A 9E 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
133+  9269 FE FE        	cp $fe
134+  926B 20 2A        	jr nz,8F
135+  926D 18 10        	jr 3F
136+  926F 3A 9E 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
137+  9272 FE FD        	cp $fd
138+  9274 20 21        	jr nz,8F
139+  9276 18 07        	jr 3F
140+  9278 3A 9E 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
141+  927B FE FB        	cp $fb
142+  927D 20 18        	jr nz,8F
143+  927F
144+  927F              ; ---------- ---------- ----------
145+  927F
146+  927F              3
147+  927F CD B2 94     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9282              ;	call Reinicio
149+  9282
150+  9282              ; ---------- ---------- ----------
151+  9282              ;
152+  9282              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9282
154+  9282 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9284 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9285 CD 9E 92     	call DESPLZ_DER
157+  9288 C1           	pop bc
158+  9289 10 F9        	djnz 5B
159+  928B 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  928E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  928F 22 98 85     	ld (Posicion_actual),hl
162+  9292 CD EA 94     	call Genera_coordenadas
163+  9295 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9297
165+  9297              ; ---------- ---------- ----------
166+  9297
167+  9297 2A 98 85     8 ld hl,(Posicion_actual)
168+  929A CD 9E 92     	call DESPLZ_DER
169+  929D C9           2 ret
170+  929E
171+  929E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  929E              ;
173+  929E              ;	22/9/22
174+  929E              ;
175+  929E
176+  929E CD AD 92     DESPLZ_DER call Desplaza_derecha
177+  92A1 CD F9 92         call modifica_parametros_1er_DESPLZ_2
178+  92A4 CD 22 93         call Ciclo_completo
179+  92A7 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  92AA CB FE        	set 7,(hl)
181+  92AC C9           	ret
182+  92AD
183+  92AD              ; ******************************************************************************************************************************************************************************************
184+  92AD              ;	15/02/23
185+  92AD              ;
186+  92AD
187+  92AD 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  92B0 47           	ld b,a
189+  92B1 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  92B4 23           1 inc hl
191+  92B5 23           	inc hl
192+  92B6 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  92B8 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  92BB CD A6 87     	call Extrae_address
195+  92BE 22 9A 85     	ld (Puntero_objeto),hl
196+  92C1
197+  92C1              ; Modifica (Puntero_DESPLZ_izq).
198+  92C1
199+  92C1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  92C1              ; Cuántos movimientos hemos hecho ??
201+  92C1              ; DE contiene (Puntero_DESPLZ_der).
202+  92C1
203+  92C1 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  92C4 EB           	ex de,hl
205+  92C5 A7           	and a
206+  92C6 ED 52        	sbc hl,de
207+  92C8 CB 3D        	srl l
208+  92CA 3E 08        6 ld a,8
209+  92CC 95           	sub l
210+  92CD 30 1E        	jr nc,3F
211+  92CF
212+  92CF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  92CF              ; B="0".
214+  92CF
215+  92CF 04           4 inc b
216+  92D0 3C           	inc a
217+  92D1 20 FC        	jr nz,4B
218+  92D3 78           	ld a,b
219+  92D4 08           	ex af,af
220+  92D5 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  92D8 23           5 inc hl
222+  92D9 23           	inc hl
223+  92DA 10 FC        	djnz 5B
224+  92DC 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  92DF CD A6 87     	call Extrae_address
226+  92E2 22 9A 85     	ld (Puntero_objeto),hl
227+  92E5
228+  92E5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  92E5              ; _(Posicion_actual).
230+  92E5
231+  92E5 21 98 85     	ld hl,Posicion_actual
232+  92E8 34           	inc (hl)
233+  92E9 08               ex af,af
234+  92EA 6F           	ld l,a
235+  92EB 18 DD        	jr 6B
236+  92ED
237+  92ED              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  92ED
239+  92ED 47           3 ld b,a
240+  92EE 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  92F1 23           2 inc hl
242+  92F2 23           	inc hl
243+  92F3 10 FC        	djnz 2B
244+  92F5 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  92F8 C9           8 ret
246+  92F9
247+  92F9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  92F9              ;
249+  92F9              ;	24/7/22
250+  92F9              ;
251+  92F9              ;	modifica_parametros_1er_DESPLZ_2
252+  92F9              ;
253+  92F9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  92F9              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  92F9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  92F9
257+  92F9 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  92FC A7           	and a
259+  92FD 20 1F        	jr nz,1F
260+  92FF D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  9301 32 9E 85         ld (CTRL_DESPLZ),a
262+  9304
263+  9304 21 97 85     	ld hl,Columns
264+  9307 34           	inc (hl)
265+  9308 3A AA 85     	ld a,(Cuad_objeto)
266+  930B E6 01        	and 1
267+  930D 28 0F        	jr z,1F
268+  930F 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  9312 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9313 22 98 85     	ld (Posicion_actual),hl
271+  9316 CD EA 94     	call Genera_coordenadas
272+  9319 CD 7E 94     	call Inc_CTRL_DESPLZ
273+  931C 18 03        	jr 2F
274+  931E CD 7E 94     1 call Inc_CTRL_DESPLZ
275+  9321 C9           2 ret
276+  9322
277+  9322              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9322              ;
279+  9322              ;	24/7/22
280+  9322              ;
281+  9322              ;	Ciclo_completo.
282+  9322              ;
283+  9322              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9322              ;
285+  9322              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9322              ; 	Decrementamos (Columns).
287+  9322              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9322              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9322
290+  9322
291+  9322 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9325 FE FF        	cp $ff
293+  9327 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  9329 E6 F0        	and $f0
295+  932B 20 28        	jr nz,3F
296+  932D
297+  932D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  932D
299+  932D 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9330 47           	ld b,a
301+  9331 3E F8        	ld a,$f8
302+  9333 80           	add b
303+  9334 32 9E 85     	ld (CTRL_DESPLZ),a
304+  9337 18 1C        	jr 3F
305+  9339 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  933C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  933D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  933E 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9341 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9344 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9346 20 0A        	jr nz,2F
312+  9348 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  934B 23           	inc hl
314+  934C 22 98 85     	ld (Posicion_actual),hl
315+  934F CD EA 94     	call Genera_coordenadas
316+  9352
317+  9352              ; Inicia el puntero de Sprite.
318+  9352
319+  9352 CD BD 87     2 call Inicia_puntero_objeto_der
320+  9355 C9           3 ret
321+  9356
322+  9356              ; ******************************************************************************************************************************************************************************************
323+  9356              ;
324+  9356              ;	15/02/23
325+  9356              ;
326+  9356              ;	Mov_left.
327+  9356              ;
328+  9356              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9356              ;
330+  9356              Mov_left
331+  9356
332+  9356 21 C3 85     	ld hl,Ctrl_0
333+  9359 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  935B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  935B              ; 																	; _ en el caso de que no lo haya.
336+  935B 3A C3 85     	ld a,(Ctrl_0)
337+  935E CB 77        	bit 6,a
338+  9360 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9362
340+  9362 CD 78 94     	call Stop_Amadeus_left
341+  9365 C8           	ret z
342+  9366 20 4A        	jr nz,8F
343+  9368
344+  9368 3A 9C 85     11 ld a,(Coordenada_X)
345+  936B A7           	and a
346+  936C 20 44        	jr nz,8F
347+  936E
348+  936E 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9371 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9372 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9374
352+  9374              ; ---------- ---------- ----------
353+  9374
354+  9374 3A AB 85     	ld a,(Vel_left)
355+  9377 FE 02        	cp 2
356+  9379 28 0F        	jr z,1F
357+  937B 38 04        	jr c,6F
358+  937D FE 04        	cp 4
359+  937F 28 12        	jr z,7F
360+  9381
361+  9381              ; ---------- ---------- ----------
362+  9381
363+  9381 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9384 FE F9        	cp $f9
365+  9386 20 2A        	jr nz,8F
366+  9388 18 10        	jr 4F
367+  938A 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  938D FE FA        	cp $fa
369+  938F 20 21        	jr nz,8F
370+  9391 18 07        	jr 4F
371+  9393 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9396 FE FC        	cp $fc
373+  9398 20 18        	jr nz,8F
374+  939A
375+  939A              ; ---------- ---------- ----------
376+  939A
377+  939A              4
378+  939A CD A0 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  939D              ;	call Reinicio
380+  939D
381+  939D              ; ---------- ---------- ----------
382+  939D
383+  939D 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  939F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  93A0
386+  93A0              ;	ld hl,(Indice_Sprite_izq)
387+  93A0              ;	ld (Puntero_DESPLZ_izq),hl
388+  93A0
389+  93A0 CD B9 93     	call DESPLZ_IZQ
390+  93A3 C1           	pop bc
391+  93A4 10 F9        	djnz 5B
392+  93A6 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  93A9 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  93AA 22 98 85     	ld (Posicion_actual),hl
395+  93AD CD EA 94     	call Genera_coordenadas
396+  93B0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  93B2
398+  93B2              ; ---------- ---------- ----------
399+  93B2
400+  93B2              ; Movemos, no hay recolocación.
401+  93B2
402+  93B2 2A 98 85     8 ld hl,(Posicion_actual)
403+  93B5 CD B9 93     	call DESPLZ_IZQ
404+  93B8 C9           2 ret
405+  93B9
406+  93B9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  93B9              ;
408+  93B9              ;	22/9/22
409+  93B9
410+  93B9              DESPLZ_IZQ
411+  93B9
412+  93B9 CD C8 93     	call Desplaza_izquierda
413+  93BC CD 14 94         call modifica_parametros_1er_DESPLZ
414+  93BF CD 3C 94     	call Ciclo_completo_2
415+  93C2 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  93C5 CB BE        	res 7,(hl)
417+  93C7 C9           	ret
418+  93C8
419+  93C8              Desplaza_izquierda
420+  93C8
421+  93C8 3A AB 85     	ld a,(Vel_left)
422+  93CB 47           	ld b,a
423+  93CC 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
424+  93CF 23           1 inc hl
425+  93D0 23           	inc hl
426+  93D1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  93D3 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
428+  93D6 CD A6 87     	call Extrae_address
429+  93D9 22 9A 85     	ld (Puntero_objeto),hl
430+  93DC
431+  93DC              ; Modifica (Puntero_DESPLZ_der).
432+  93DC
433+  93DC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  93DC              ; Cuántos movimientos hemos hecho ??
435+  93DC              ; DE contiene (Puntero_DESPLZ_izq).
436+  93DC
437+  93DC 2A A2 85     7 ld hl,(Indice_Sprite_izq)
438+  93DF EB           	ex de,hl
439+  93E0 A7           	and a
440+  93E1 ED 52        	sbc hl,de
441+  93E3 CB 3D        	srl l
442+  93E5 3E 08        6 ld a,8
443+  93E7 95           	sub l
444+  93E8 30 1E        	jr nc,3F
445+  93EA
446+  93EA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  93EA              ; B="0".
448+  93EA
449+  93EA 04           4 inc b
450+  93EB 3C           	inc a
451+  93EC 20 FC        	jr nz,4B
452+  93EE 78           	ld a,b
453+  93EF 08           	ex af,af
454+  93F0 2A A2 85     	ld hl,(Indice_Sprite_izq)
455+  93F3 23           5 inc hl
456+  93F4 23           	inc hl
457+  93F5 10 FC        	djnz 5B
458+  93F7 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
459+  93FA CD A6 87     	call Extrae_address
460+  93FD 22 9A 85     	ld (Puntero_objeto),hl
461+  9400
462+  9400              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  9400              ; _(Posicion_actual).
464+  9400
465+  9400 21 98 85     	ld hl,Posicion_actual
466+  9403 35           	dec (hl)
467+  9404 08           	ex af,af
468+  9405 6F           	ld l,a
469+  9406 18 DD        	jr 6B
470+  9408
471+  9408              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  9408
473+  9408 47           3 ld b,a
474+  9409 2A A0 85     	ld hl,(Indice_Sprite_der)
475+  940C 23           2 inc hl
476+  940D 23           	inc hl
477+  940E 10 FC        	djnz 2B
478+  9410 22 A4 85     	ld (Puntero_DESPLZ_der),hl
479+  9413 C9           8 ret
480+  9414
481+  9414              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  9414              ;
483+  9414              ;	modifica_parametros_1er_DESPLZ
484+  9414              ;
485+  9414              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  9414              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  9414              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  9414
489+  9414 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  9417 A7           	and a
491+  9418 20 1E        	jr nz,1F
492+  941A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  941B 32 9E 85         ld (CTRL_DESPLZ),a
494+  941E 21 97 85     	ld hl,Columns
495+  9421 34           	inc (hl)
496+  9422 3A AA 85     	ld a,(Cuad_objeto)
497+  9425 E6 01        	and 1
498+  9427 20 0F        	jr nz,1F
499+  9429 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  942C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  942D 22 98 85     	ld (Posicion_actual),hl
502+  9430 CD EA 94     	call Genera_coordenadas
503+  9433 CD 8F 94     	call Dec_CTRL_DESPLZ
504+  9436 18 03        	jr 2F
505+  9438 CD 8F 94     1 call Dec_CTRL_DESPLZ
506+  943B C9           2 ret
507+  943C
508+  943C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  943C
510+  943C 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  943F FE F7        	cp $f7
512+  9441 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  9443 30 2C        	jr nc,3F
514+  9445
515+  9445              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  9445
517+  9445 06 00        	ld b,0
518+  9447 04           4 inc b
519+  9448 3C           	inc a
520+  9449 FE F7        	cp $f7
521+  944B 20 FA        	jr nz,4B
522+  944D 3E FF        	ld a,$ff
523+  944F 90           	sub b
524+  9450 32 9E 85     	ld (CTRL_DESPLZ),a
525+  9453 18 1C        	jr 3F
526+  9455
527+  9455              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  9455
529+  9455 21 97 85     1 ld hl,Columns
530+  9458 35           	dec (hl)
531+  9459 AF           	xor a
532+  945A 32 9E 85     	ld (CTRL_DESPLZ),a
533+  945D 3A AA 85     	ld a,(Cuad_objeto)
534+  9460 E6 01        	and 1
535+  9462 28 0A        	jr z,2F
536+  9464 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  9467 2B           	dec hl
538+  9468 22 98 85     	ld (Posicion_actual),hl
539+  946B CD EA 94     	call Genera_coordenadas
540+  946E
541+  946E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  946E
543+  946E CD D0 87     2 call Inicia_puntero_objeto_izq
544+  9471 C9           3 ret
545+  9472
546+  9472              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  9472              ;
548+  9472              ;	19/10/22
549+  9472              ;
550+  9472              ;	(cp 29) para un Amadeus de 3 Columns.
551+  9472              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  9472
553+  9472 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  9475 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  9477 C9           	ret
556+  9478
557+  9478              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  9478              ;
559+  9478              ;	19/10/22
560+  9478              ;
561+  9478              ;	(cp 2) para un Amadeus de 3 Columns.
562+  9478              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  9478
564+  9478 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  947B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  947D C9           	ret
567+  947E
568+  947E              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  947E              ;
570+  947E              ;	24/7/22
571+  947E              ;
572+  947E              ;	Inc_CTRL_DESPLZ
573+  947E              ;
574+  947E              ;
575+  947E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  947E
577+  947E 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  9481 3A AC 85     	ld a,(Vel_right)
579+  9484 A7           	and a
580+  9485 28 06        	jr z,1F
581+  9487 47           	ld b,a
582+  9488 34           3 inc (hl)
583+  9489 10 FD        	djnz 3B
584+  948B 18 01        	jr 2F
585+  948D 34           1 inc (hl)
586+  948E C9           2 ret
587+  948F
588+  948F              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  948F              ;
590+  948F              ;	5/2/23
591+  948F              ;
592+  948F              ;	Dec_CTRL_DESPLZ
593+  948F              ;
594+  948F              ;
595+  948F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  948F
597+  948F 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  9492 3A AB 85     	ld a,(Vel_left)
599+  9495 A7           	and a
600+  9496 28 06        	jr z,1F
601+  9498 47           	ld b,a
602+  9499 35           3 dec (hl)
603+  949A 10 FD        	djnz 3B
604+  949C 18 01        	jr 2F
605+  949E 35           1 dec (hl)
606+  949F C9           2 ret
607+  94A0
608+  94A0              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  94A0
610+  94A0 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  94A3 01 1F 00     	ld bc,31
612+  94A6 A7           	and a
613+  94A7 ED 4A        	adc hl,bc
614+  94A9 22 98 85     	ld (Posicion_actual),hl
615+  94AC 21 C3 85     	ld hl,Ctrl_0														; $xxx1
616+  94AF CB C6        	set 0,(hl)
617+  94B1 C9           	ret
618+  94B2
619+  94B2              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  94B2
621+  94B2 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  94B5 01 1F 00     	ld bc,31
623+  94B8 A7           	and a
624+  94B9 ED 42        	sbc hl,bc
625+  94BB 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
626+  94BE 21 C3 85     	ld hl,Ctrl_0
627+  94C1 CB CE        	set 1,(hl)
628+  94C3 C9           	ret
629+  94C4
630+  94C4              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  94C4
632+  94C4 24           Reaparece_abajo inc h
633+  94C5 01 E0 17     	ld bc,$17e0
634+  94C8 A7           	and a
635+  94C9 ED 4A        	adc hl,bc
636+  94CB 22 98 85     	ld (Posicion_actual),hl
637+  94CE 21 C3 85     	ld hl,Ctrl_0
638+  94D1 CB D6        	set 2,(hl)
639+  94D3 C9           	ret
640+  94D4
641+  94D4              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  94D4
643+  94D4 01 E0 17     Reaparece_arriba ld bc,$17e0
644+  94D7 A7           	and a
645+  94D8 ED 42        	sbc hl,bc
646+  94DA 22 98 85     	ld (Posicion_actual),hl
647+  94DD 21 C3 85     	ld hl,Ctrl_0
648+  94E0 CB DE        	set 3,(hl)
649+  94E2 C9           	ret
650+  94E3
651+  94E3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
652+  94E3
653+  94E3 2A A8 85     Reinicio ld hl,(Posicion_inicio)
654+  94E6 22 98 85     	ld (Posicion_actual),hl
655+  94E9 C9           	ret
# file closed: Direcciones.asm
888   94EA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  94EA              ; ------------------------------------------------------------------------
  2+  94EA              ;
  3+  94EA              ;	02/04/23
  4+  94EA              ;
  5+  94EA              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  94EA              ;	Fila superior "0", Columna izquierda "0".
  7+  94EA              ;
  8+  94EA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  94EA              ;
 10+  94EA              ;	Modifica: A,BC y DE.
 11+  94EA
 12+  94EA C5           Genera_coordenadas push bc
 13+  94EB E5           	push hl
 14+  94EC D5           	push de
 15+  94ED
 16+  94ED 2A 98 85     	ld hl,(Posicion_actual)
 17+  94F0
 18+  94F0 7D           	ld a,l
 19+  94F1 E6 1F        	and $1f
 20+  94F3 32 9C 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 21+  94F6
 22+  94F6 CD BE 91     	call calcula_tercio
 23+  94F9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
 24+  94FA
 25+  94FA 1E 00        	ld e,0
 26+  94FC 7D           	ld a,l
 27+  94FD E6 E0        	and $e0
 28+  94FF 28 01        	jr z,1F
 29+  9501 04           	inc b
 30+  9502
 31+  9502 04           1 inc b
 32+  9503 05           	dec b
 33+  9504 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
 34+  9506              ;														; _ , salimos.
 35+  9506 1C           3 inc e
 36+  9507 D6 20        	sub 32
 37+  9509 20 FB        	jr nz,3B
 38+  950B 10 F5        	djnz 1B
 39+  950D
 40+  950D 7B           2 ld a,e
 41+  950E 32 9D 85     	ld (Coordenada_y),a
 42+  9511
 43+  9511 D1           	pop de
 44+  9512 E1           	pop hl
 45+  9513 C1           	pop bc
 46+  9514
 47+  9514 C9           	ret
 48+  9515
 49+  9515              ; ------------------------------------------------------------------------
 50+  9515              ;	28/03/23
 51+  9515              ;
 52+  9515              ;	Proporciona las coordenadas del disparo a imprimir.
 53+  9515              ;	Fila superior "0", Columna izquierda "0".
 54+  9515              ;
 55+  9515              ;	Input: HL contendrá la posición del proyectil en pantalla.
 56+  9515              ;	Output: DE contendrá las coordenadas del disparo:
 57+  9515              ;
 58+  9515              ;		DE="$120d"
 59+  9515              ;
 60+  9515              ;		D, (Coordenada_X), Columnas, $12
 61+  9515              ;		E, (Coordenada_y), Filas, $0d
 62+  9515              ;
 63+  9515              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 64+  9515
 65+  9515              ;	Modifica: A,BC y DE.
 66+  9515
 67+  9515
 68+  9515              Genera_coordenadas_disparo
 69+  9515
 70+  9515              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 71+  9515
 72+  9515 7D           	ld a,l
 73+  9516 E6 1F        	and $1f
 74+  9518 57           	ld d,a 												; Columnas en D. Coordenada_X.
 75+  9519 CD BE 91     	call calcula_tercio
 76+  951C 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 77+  951D 1E 00        	ld e,0
 78+  951F 7D           	ld a,l
 79+  9520 E6 E0        	and $e0
 80+  9522 28 01        	jr z,1F
 81+  9524 04           	inc b
 82+  9525 1C           1 inc e
 83+  9526 D6 20        	sub 32
 84+  9528 20 FB        	jr nz,1B
 85+  952A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
 86+  952C C9           	ret
 87+  952D
# file closed: Genera_coordenadas.asm
889   952D              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  952D
  2+  952D
  3+  952D              ;   11/8/22
  4+  952D              ;
  5+  952D              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  952D              ;
  7+  952D              ;   Mov_obj.asm
  8+  952D              ;
  9+  952D              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  952D              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  952D              ;
 12+  952D              ;   Codificación:
 13+  952D              ;
 14+  952D              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  952D
 16+  952D              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  952D
 18+  952D 02 40 00     Arriba db 2,%01000000,0
 19+  9530 02 80 00     Abajo db 2,%10000000,0
 20+  9533 02 20 00     Derecha db 2,%00100000,0
 21+  9536 02 10 00     Izquierda db 2,%00010000,0
 22+  9539 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  953D 60 42 60 40
 22+  9541 63
 23+  9542 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9546 22 A3 80 A0
 24+  954A 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  954E 84 A0 83 A0
 25+  9552 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9556 80 A3 22 A0
 26+  955A 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  955E 40 60 42 60
 27+  9562 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9566
 29+  9566 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  956A 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  956E 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  9572 84 00
 32+  9574 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  9578 84 00
 33+  957A 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  957E 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9582 1F 1F 1F 1F
 35+  9586 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  958A 1F 1F 1F 1F
 35+  958E 1F
 36+  958F 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  9593 2F 2F 2F 2F
 36+  9597 2F 2F
 37+  9599 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  959D 2F 2F 00
 38+  95A0
 39+  95A0              ; ----- ----- ----- ----- -----
 40+  95A0
 41+  95A0 7E 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  95A2 7A 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  95A4 36 95        Indice_mov_Izquierda defw Izquierda
 44+  95A6 33 95        Indice_mov_Derecha defw Derecha
 45+  95A8 30 95        Indice_mov_Abajo defw Abajo
 46+  95AA 2D 95        Indice_mov_Arriba defw Arriba
 47+  95AC 6A 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  95AE 6E 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  95B0 66 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  95B2 74 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  95B4 39 95        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  95B6              ; ----- ----- ----- ----- -----
 53+  95B6
 54+  95B6 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  95B9 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  95BA 28 02            jr z,1F
 57+  95BC 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  95BE 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  95C1 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  95C3 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  95C6              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  95C6 2A C7 85         ld hl,(Puntero_mov)
 63+  95C9 7E               ld a,(hl)
 64+  95CA 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  95CD 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  95CE 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  95D1
 68+  95D1 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  95D4 A7               and a
 70+  95D5 20 0C            jr nz,12F
 71+  95D7 2A C7 85         ld hl,(Puntero_mov)
 72+  95DA 7E               ld a,(hl)
 73+  95DB A7               and a
 74+  95DC 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  95DE E6 0F            and $0f
 76+  95E0 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  95E3              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  95E3 2A C7 85     12 ld hl,(Puntero_mov)
 79+  95E6 CB 7E            bit 7,(hl)
 80+  95E8 28 03            jr z,2F
 81+  95EA CD DC 91         call Mov_down
 82+  95ED 2A C7 85     2 ld hl, (Puntero_mov)
 83+  95F0 CB 76            bit 6,(hl)
 84+  95F2 28 03            jr z,3F
 85+  95F4 CD 0A 92         call Mov_up
 86+  95F7 2A C7 85     3 ld hl, (Puntero_mov)
 87+  95FA CB 6E            bit 5,(hl)
 88+  95FC 28 03            jr z,4F
 89+  95FE CD 38 92         call Mov_right
 90+  9601 2A C7 85     4 ld hl, (Puntero_mov)
 91+  9604 CB 66            bit 4,(hl)
 92+  9606 28 03            jr z,5F
 93+  9608 CD 56 93         call Mov_left
 94+  960B
 95+  960B              ; ---------- --------- --------- ---------- ----------
 96+  960B
 97+  960B 3A CB 85     5 ld a,(Repetimos_db)
 98+  960E A7               and a
 99+  960F 28 07            jr z,6F
100+  9611 3D               dec a
101+  9612 32 CB 85         ld (Repetimos_db),a
102+  9615 28 01            jr z,6f
103+  9617 C9           11 ret
104+  9618 21 C9 85     6 ld hl,Contador_db_mov
105+  961B 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  961C 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  961F 23               inc hl
108+  9620 22 C7 85         ld (Puntero_mov),hl
109+  9623 18 F2            jr 11B
110+  9625 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9628 3A CA 85         ld a,(Incrementa_puntero)
112+  962B 47               ld b,a
113+  962C 23           8 inc hl
114+  962D 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  962F 5E               ld e,(hl)
116+  9630 23               inc hl
117+  9631 56               ld d,(hl)
118+  9632 EB               ex de,hl
119+  9633 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9636 18 DF            jr 11B
121+  9638
122+  9638              ; ---------- --------- --------- ---------- ----------
123+  9638              ;
124+  9638              ;   11/8/22
125+  9638              ;
126+  9638              ;   Prepara_Puntero_mov
127+  9638
128+  9638 E5           Prepara_Puntero_mov push hl
129+  9639 D5               push de
130+  963A 2A C5 85         ld hl,(Puntero_indice_mov)
131+  963D 5E               ld e,(hl)
132+  963E 23               inc hl
133+  963F 56               ld d,(hl)
134+  9640 EB               ex de,hl
135+  9641 22 C7 85         ld (Puntero_mov),hl
136+  9644 D1               pop de
137+  9645 E1               pop hl
138+  9646 C9               ret
139+  9647
140+  9647              ; ---------- --------- --------- ---------- ----------
141+  9647              ;
142+  9647              ;   11/8/22
143+  9647              ;
144+  9647              ;   Reinicia_el_movimiento
145+  9647
146+  9647 CD 38 96     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  964A AF               xor a
148+  964B 32 C9 85         ld (Contador_db_mov),a
149+  964E 32 CA 85         ld (Incrementa_puntero),a
150+  9651 C3 B6 95         jp Movimiento
151+  9654 C9               ret
152+  9655              ; ---------- --------- --------- ---------- ----------
153+  9655
154+  9655
155+  9655
156+  9655
157+  9655
158+  9655
159+  9655
160+  9655
161+  9655
162+  9655
163+  9655
164+  9655
165+  9655
166+  9655
167+  9655
168+  9655
169+  9655
170+  9655
# file closed: Patrones_de_mov.asm
890   9655              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9655              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9655              ;
  3+  9655              ;	3/1/23
  4+  9655              ;
  5+  9655              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9655
  7+  9655              ;	ADC HL,SP	LD (addr),SP
  8+  9655              ;	ADD HL,SP	LD SP,(addr)
  9+  9655              ;	ADD IX,SP	LD SP,nn
 10+  9655              ; 	ADD IY,SP	LD SP,HL
 11+  9655              ;				LD SP,IX
 12+  9655              ;	DEC SP		LD SP,IY
 13+  9655
 14+  9655              ;	EX (SP),HL
 15+  9655              ;	EX (SP),IX
 16+  9655              ;	EX (SP),IY
 17+  9655
 18+  9655              ;	INC SP
 19+  9655
 20+  9655
 21+  9655                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
891   7FD4
892   7FD4              	SAVESNA "Pruebas.sna", START
893   7FD4
894   7FD4
895   7FD4
# file closed: Banco_de_pruebas.asm
