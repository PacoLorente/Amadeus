# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1A 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD 6E 8E     	call Pinta_entidades
  44  AA1C CD 60 8E     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD 90 8E     	call Guarda_parametros_DRAW
  49  AA26 CD B0 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 2A 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD B3 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD E5 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD C2 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD 9C 8E     	call Recupera_parametros_DRAW
  66  AA3F CD 7E 8E     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 24 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 1A 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	12/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 65 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 145+ 85AC
 146+ 85AC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 147+ 85AE
 148+ 85AE 00           	db 0											; (Autoriza_movimiento).
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 190+ 85EF
 191+ 85EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 192+ 85F1
 193+ 85F1 00           	db 0											; (Autoriza_movimiento).
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 235+ 8632
 236+ 8632 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 237+ 8634
 238+ 8634 00           	db 0											; (Autoriza_movimiento).
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 280+ 8675
 281+ 8675 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 282+ 8677
 283+ 8677 00           	db 0											; (Autoriza_movimiento).
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 325+ 86B8
 326+ 86B8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 327+ 86BA
 328+ 86BA 00           	db 0											; (Autoriza_movimiento).
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 370+ 86FB
 371+ 86FB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 372+ 86FD
 373+ 86FD 00           	db 0											; (Autoriza_movimiento).
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 415+ 873E
 416+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 417+ 8740
 418+ 8740 00           	db 0											; (Autoriza_movimiento).
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 460+ 8781
 461+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 462+ 8783
 463+ 8783 00           	db 0											; (Autoriza_movimiento).
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AA 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 80 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA
 501+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 502+ 87AC 02           	db %00000010									; (Attr).
 503+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 504+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 505+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 506+ 87B3 01           	db 1											; (Cuad_objeto).
 507+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 508+ 87B8 80 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 509+ 87BA
# file closed: Cajas_y_disparos.asm
  97  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 42 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD 00 8D     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0E 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 44 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD 00 8D     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 44 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 14 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0C 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD 00 8D     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 44 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 44 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD 00 8D     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 08 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0C 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 08 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 16 00     	ld bc,22
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0E 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0E 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 07        	cp 7
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 07        	ld a,7
 209+ 88B9 32 0F 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0F 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  98  88C4
  99  88C4              ; ******************************************************************************************************************************************************************************************
 100  88C4              ; Constantes.
 101  88C4              ; ******************************************************************************************************************************************************************************************
 102  88C4              ;
 103  88C4              ; 10/11/23
 104  88C4
 105  88C4              ;
 106  88C4              ; Constantes generales.
 107  88C4              ;
 108  88C4
 109  88C4              Sprite_vacio equ $f000
 110  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88C4
 115  88C4              Almacen_de_movimientos_masticados equ $5cd0				; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88C4              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 117  88C4              ;														; 4799 bytes, 4,8Kb.
 118  88C4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 119  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 120  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 121  88C4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 122  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 123  88C4
 124  88C4              ;														; 55 Bytes.
 125  88C4
 126  88C4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 127  88C4              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 65 bytes.
 128  88C4
 129  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 130  88C4
 131  88C4              ; ******************************************************************************************************************************************************************************************
 132  88C4              ; Variables.
 133  88C4              ; ******************************************************************************************************************************************************************************************
 134  88C4              ;
 135  88C4              ; 20/12//23
 136  88C4              ;
 137  88C4              ; Variables de DRAW. (Motor principal).
 138  88C4              ;
 139  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 140  88C4
 141  88C4 00           Filas db 0												; Filas. [DRAW]
 142  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
 143  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 144  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 145  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 146  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 147  88CC
 148  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 149  88CC
 150  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 151  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 152  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 153  88CD 00           Attr db 0												; Atributos de la entidad:
 154  88CE
 155  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 156  88CE              ;
 157  88CE              ;	COLORES: 0 ..... NEGRO
 158  88CE              ;    		 1 ..... AZUL
 159  88CE              ; 			 2 ..... ROJO
 160  88CE              ;			 3 ..... MAGENTA
 161  88CE              ; 			 4 ..... VERDE
 162  88CE              ; 			 5 ..... CIAN
 163  88CE              ;			 6 ..... AMARILLO
 164  88CE              ; 			 7 ..... BLANCO
 165  88CE
 166  88CE 00 00        Indice_Sprite_der defw 0
 167  88D0 00 00        Indice_Sprite_izq defw 0
 168  88D2 00 00        Puntero_DESPLZ_der defw 0
 169  88D4 00 00        Puntero_DESPLZ_izq defw 0
 170  88D6
 171  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 172  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 173  88D9
 174  88D9              ; Variables de objeto. (Características).
 175  88D9
 176  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 177  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 178  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 179  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 180  88DD
 181  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 182  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 183  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 184  88DE 00 00 00...  Variables_de_borrado ds 6
 185  88E4
 186  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 187  88E6 00 00        	defw 0
 188  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 189  88EA 00 00 00 00  	db 0,0,0,0
 190  88EE
 191  88EE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 192  88F0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 193  88F0
 194  88F0 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados
 195  88F2
 196  88F2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 197  88F2              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 198  88F2
 199  88F2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 200  88F2
 201  88F2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 202  88F3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 203  88F3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 204  88F3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 205  88F3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 206  88F3              ;
 207  88F3              ; 														DESCRIPCIÖN:
 208  88F3              ;
 209  88F3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 210  88F3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 211  88F3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 212  88F3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 213  88F3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 214  88F3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 215  88F3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 216  88F3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 217  88F3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 218  88F3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 219  88F3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 220  88F3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 221  88F3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 222  88F3              ;
 223  88F3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 224  88F3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 225  88F3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 226  88F3
 227  88F3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 228  88F3
 229  88F3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 230  88F5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 231  88F7 00 00        Puntero_indice_mov_bucle defw 0							;
 232  88F9              ;
 233  88F9              ;
 234  88F9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 235  88FA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 236  88FA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 237  88FA 00           Incrementa_puntero_backup db 0
 238  88FB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 239  88FC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 240  88FC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 241  88FD 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 242  88FE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 243  88FF              ;
 244  88FF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 245  88FF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 246  88FF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 247  88FF              ;
 248  88FF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 249  88FF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 250  88FF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 251  88FF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 252  88FF              ;
 253  88FF              ;														;	"$ff" ..... Bucle infinito de repetición.
 254  88FF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 255  88FF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 256  88FF
 257  88FF
 258  88FF              ; Variables de funcionamiento. [DRAW].
 259  88FF
 260  88FF 00           Columnas db 0
 261  8900 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 262  8902              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  8902 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 264  8903
 265  8903              ; variables de control general.
 266  8903
 267  8903 00           Ctrl_2 db 0
 268  8904              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 269  8904              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 270  8904              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 271  8904              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 272  8904              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 273  8904              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 274  8904              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 275  8904              ;
 276  8904              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 277  8904              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 278  8904              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 279  8904              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 280  8904              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 281  8904              ;														BIT 4, ???
 282  8904              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 283  8904
 284  8904 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 285  8905
 286  8905              ;! 65 Bytes por entidad.
 287  8905
 288  8905              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 289  8905              ;					         		---------;      ;---------
 290  8905
 291  8905
 292  8905              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 293  8905
 294  8905 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 295  8906
 296  8906              ;														DESCRIPCIÓN:
 297  8906              ;
 298  8906              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 299  8906              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 300  8906              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 301  8906              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 302  8906              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 303  8906              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 304  8906
 305  8906              ;														BIT 3, Recarga de nueva oleada.
 306  8906              ;														BIT 4, Recarga de nueva oleada.
 307  8906              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 308  8906              ;														BIT 6, **** Frame completo.
 309  8906              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 310  8906
 311  8906 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 312  8908              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 313  8908              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 314  8908              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 315  8908
 316  8908              ; Gestión de ENTIDADES y CAJAS.
 317  8908
 318  8908 00 00        Puntero_store_caja defw 0
 319  890A 00 00        Puntero_restore_caja defw 0
 320  890C 00 00        Indice_restore_caja defw 0
 321  890E 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 322  890F 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 323  8910 00           Entidades_en_curso db 0									; ..... ..... .....
 324  8911 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 325  8912              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 326  8912              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 327  8912              ;														; _ (Numero_de_malotes)="0".
 328  8912 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 329  8914 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 330  8916              ;														; _ puntero (Indice_entidades).
 331  8916
 332  8916
 333  8916              ;---------------------------------------------------------------------------------------------------------------
 334  8916              ;
 335  8916              ;	18/11/23
 336  8916              ;
 337  8916              ;	Álbumes.
 338  8916
 339  8916 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 340  8918              ;														; _variable para almacenar lo posición del puntero_
 341  8918              ; 														; _de pila, SP.
 342  8918 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 343  891A              ;														; La utiliza la rutina [Extrae_foto_registros].
 344  891A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 345  891C 00 70        Stack_snapshot defw Album_de_fotos
 346  891E 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 347  8920
 348  8920              ;End_Snapshot defw Album_de_fotos
 349  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 350  8920 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 351  8922              ;														; _el snapshot de los registros del siguiente disparo.
 352  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 353  8922 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 354  8924
 355  8924 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 356  8925              ;
 357  8925              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 358  8925              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 359  8925              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados} está completo. Cuando esto ocurre_
 360  8925              ;																_ no se inicia una nueva "Entidad_guía".
 361  8925              ; Gestión de Disparos.
 362  8925
 363  8925 00           Numero_de_disparotes db 0
 364  8926 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 365  8928 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 366  892A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 367  892B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 368  892B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 369  892B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 370  892D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 371  892D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 372  892D              ;														; _produzca colisión.
 373  892D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 374  892F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 375  892F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 376  8932              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 377  8932 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 378  8935              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 379  8935 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 380  8936
 381  8936              ;---------------------------------------------------------------------------------------------------------------
 382  8936
 383  8936              ; Relojes y temporizaciones.
 384  8936
 385  8936 00           Contador_de_frames db 0
 386  8937 00           Contador_de_frames_2 db 0
 387  8938
 388  8938 04           Clock_explosion db 4
 389  8939 1E           Clock_Entidades_en_curso db 30
 390  893A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 391  893B              ;														; Repite la oleada de entidades.
 392  893B 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 393  893C 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 394  893D 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 395  893E
 396  893E 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 397  893F 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 398  8940 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 399  8941
 400  8941              ;---------------------------------------------------------------------------------------------------------------
 401  8941
 402  8941              ; Gestión de NIVELES.
 403  8941
 404  8941 00           Nivel db 0												; Nivel actual del juego.
 405  8942 00 00        Puntero_indice_NIVELES defw 0
 406  8944 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 407  8946              ; 														; _ que definen el NIVEL.
 408  8946              ; Y todo comienza aquí .....
 409  8946              ;
 410  8946              ; Rutina principal *************************************************************************************************************************************************************************
 411  8946              ;
 412  8946              ;	16/11/22
 413  8946
 414  8946              START
 415  8946
 416  8946 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 417  8949 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 418  894B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 419  894D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 420  894F F3           	DI
 421  8950
 422  8950 3E 07        	ld a,%00000111
 423  8952 CD 89 99     	call Cls
 424  8955
 425  8955 CD D9 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 426  8958
 427  8958              ; INICIALIZACIÓN.
 428  8958
 429  8958 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 430  895B CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 431  895E CD 68 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 432  8961              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 433  8961
 434  8961 CD 89 8D     	call Restore_entidad								 ; Vuelca en DRAW los parámetros de la 1º entidad, (Caja_1).
 435  8964
 436  8964 21 0F 89     	ld hl,Numero_parcial_de_entidades
 437  8967 46           	ld b,(hl)
 438  8968 04           	inc b
 439  8969 05           	dec b
 440  896A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 441  896C
 442  896C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 443  896C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 444  896C              ;	Pintamos el resto de entidades:
 445  896C
 446  896C              ;	INICIA ENTIDADES !!!!!
 447  896C
 448  896C C5           1 push bc  												; Guardo el contador de entidades.
 449  896D CD 8B 8B     	call Inicia_entidad
 450  8970 C1           	pop bc
 451  8971 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 452  8973
 453  8973              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 454  8973              ; (Esto se dá cuando se inicia una nueva oleada).
 455  8973
 456  8973 3A 05 89     	ld a,(Ctrl_1)
 457  8976 CB 5F        	bit 3,a
 458  8978 20 1B        	jr nz,5F											; Loop
 459  897A
 460  897A              ; 	INICIA AMADEUS !!!!!
 461  897A
 462  897A CD B0 8D     3 call Restore_Amadeus
 463  897D CD 06 8D     	call Inicia_Puntero_objeto
 464  8980 CD 7C 93     	call Draw
 465  8983 CD A0 7F     	call Guarda_foto_registros
 466  8986 CD 2D 8E     	call Guarda_datos_de_borrado_Amadeus
 467  8989
 468  8989 11 7E 85     	ld de,Amadeus_db
 469  898C CD C2 8D     	call Store_Amadeus
 470  898F
 471  898F              ; 	INICIA DISPAROS !!!!!
 472  898F
 473  898F CD 7E 8C     	call Inicia_Puntero_Disparo_Entidades
 474  8992 CD 85 8C     	call Inicia_Puntero_Disparo_Amadeus
 475  8995
 476  8995              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 477  8995
 478  8995 CD 68 8C     5 call Inicia_punteros_de_cajas
 479  8998 CD 89 8D     	call Restore_entidad
 480  899B
 481  899B 3A 05 89     	ld a,(Ctrl_1)
 482  899E CB 5F        	bit 3,a
 483  89A0 28 07        	jr z,6F
 484  89A2
 485  89A2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 486  89A2
 487  89A2 21 05 89     	ld hl,Ctrl_1
 488  89A5 CB 9E        	res 3,(hl)
 489  89A7 18 07        	jr Main
 490  89A9
 491  89A9              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 492  89A9
 493  89A9 21 24 89     6 ld hl,Ctrl_3
 494  89AC CB C6        	set 0,(hl)											; Frame completo.
 495  89AE FB           	ei
 496  89AF 76           	halt
 497  89B0
 498  89B0              ; ------------------------------------
 499  89B0
 500  89B0              Main
 501  89B0              ;
 502  89B0              ;	11/12/23
 503  89B0
 504  89B0              ; Aparece nueva entidad ???
 505  89B0
 506  89B0              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 507  89B0              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 508  89B0              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 509  89B0              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 510  89B0              ;														; _un 2º bloque.
 511  89B0
 512  89B0 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 513  89B3 47           	ld b,a
 514  89B4 3A 36 89     	ld a,(Contador_de_frames)
 515  89B7 B8           	cp b
 516  89B8 20 18        	jr nz,13F
 517  89BA
 518  89BA              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 519  89BA              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 520  89BA              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 521  89BA              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 522  89BA
 523  89BA              ;	inc a
 524  89BA              ;	cp b
 525  89BA              ;	jr nz,13F
 526  89BA
 527  89BA
 528  89BA              ;23 ld (Contador_de_frames),a
 529  89BA
 530  89BA              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 531  89BA              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 532  89BA
 533  89BA 3A 0F 89     21 ld a,(Numero_parcial_de_entidades)
 534  89BD 47           	ld b,a
 535  89BE 3A 10 89     	ld a,(Entidades_en_curso)
 536  89C1 B8           	cp b
 537  89C2 28 0E        	jr z,13F
 538  89C4 30 0C        	jr nc,13F
 539  89C6
 540  89C6              ; --- --- --- --- ---
 541  89C6
 542  89C6 3C           	inc a
 543  89C7 32 10 89     	ld (Entidades_en_curso),a
 544  89CA
 545  89CA              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 546  89CA
 547  89CA 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 548  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 549  89CD              ;! _ IMPREDECIBLE !!!!
 550  89CD C6 32        	add 50
 551  89CF 32 39 89     	ld (Clock_Entidades_en_curso),a
 552  89D2
 553  89D2              ; -------------------------------------------------------------------------------------------------------------
 554  89D2
 555  89D2              ; Habilita disparos.
 556  89D2
 557  89D2 21 3B 89     13 ld hl,Disparo_Amadeus
 558  89D5 11 3D 89     	ld de,CLOCK_repone_disparo_Amadeus
 559  89D8 CD 71 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 560  89DB
 561  89DB 21 3E 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 562  89DE 11 40 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 563  89E1 CD 71 9D     	call Habilita_disparos
 564  89E4
 565  89E4              ; COLISIONES.
 566  89E4
 567  89E4 CD 7C 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 568  89E7
 569  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 570  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 571  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 572  89E7
 573  89E7 AF           	xor a
 574  89E8 32 2A 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 575  89EB
 576  89EB CD 68 8C     	call Inicia_punteros_de_cajas
 577  89EE CD 89 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 578  89F1              ; 														; _ en DRAW.
 579  89F1 3A C4 88     	ld a,(Filas)
 580  89F4 A7           	and a
 581  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 582  89F7 CD 9B 8D     	call Incrementa_punteros_de_cajas
 583  89FA 18 F2        	jr 12B
 584  89FC
 585  89FC              ; ---------------------------------------------------------------------------------------
 586  89FC
 587  89FC 3A 0F 89     10 ld a,(Numero_parcial_de_entidades)
 588  89FF 47               ld b,a
 589  8A00 A7           	and a
 590  8A01 20 14        	jr nz,11F
 591  8A03
 592  8A03 21 05 89     	ld hl,Ctrl_1
 593  8A06 CB 66        	bit 4,(hl)
 594  8A08 C2 B0 8A     	jp nz,16F
 595  8A0B
 596  8A0B              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 597  8A0B
 598  8A0B 21 05 89     	ld hl,Ctrl_1
 599  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 600  8A10
 601  8A10 3A 36 89     	ld a,(Contador_de_frames)
 602  8A13 3C           	inc a
 603  8A14 32 3A 89     	ld (Activa_recarga_cajas),a
 604  8A17
 605  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 606  8A17
 607  8A17 3A 10 89     11 ld a,(Entidades_en_curso)
 608  8A1A A7           	and a
 609  8A1B CA B0 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 610  8A1E 47           	ld b,a												; No hay entidades que gestionar.
 611  8A1F
 612  8A1F              ; ( Código que ejecutamos con cada entidad: ).
 613  8A1F
 614  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 615  8A1F
 616  8A1F C5           15 push bc 												; Nº de entidades en curso.
 617  8A20
 618  8A20              ; Existe "Entidad_guía" ???.
 619  8A20              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 620  8A20
 621  8A20 3A 24 89     	ld a,(Ctrl_3)
 622  8A23 CB 4F        	bit 1,a
 623  8A25 20 11        	jr nz,22F
 624  8A27
 625  8A27              ; Almacén de "Movimientos_masticados" lleno ???
 626  8A27              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 627  8A27              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 628  8A27
 629  8A27 3A 24 89     	ld a,(Ctrl_3)
 630  8A2A CB 57        	bit 2,a
 631  8A2C 20 0A        	jr nz,22F
 632  8A2E
 633  8A2E              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 634  8A2E
 635  8A2E 21 03 89     	ld hl,Ctrl_2
 636  8A31 CB EE        	set 5,(hl)
 637  8A33 21 24 89     	ld hl,Ctrl_3
 638  8A36 CB CE        	set 1,(hl)
 639  8A38
 640  8A38              ; Impacto ???
 641  8A38
 642  8A38 3A DD 88     22 ld a,(Impacto)
 643  8A3B A7           	and a
 644  8A3C 28 31        	jr z,8F
 645  8A3E
 646  8A3E              ; Hay Impacto en esta entidad.
 647  8A3E
 648  8A3E 21 38 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 649  8A41 35           	dec (hl)
 650  8A42 C2 A3 8A     	jp nz,17F
 651  8A45
 652  8A45              ;! Velocidad de la animación de la explosión.
 653  8A45
 654  8A45 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 655  8A47              ;														; _,(velocidad de la explosión).
 656  8A47
 657  8A47              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 658  8A47
 659  8A47 CD 4D 8E     	call Repone_datos_de_borrado
 660  8A4A CD A6 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 661  8A4D
 662  8A4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 663  8A4D
 664  8A4D 3A 03 89     	ld a,(Ctrl_2)
 665  8A50 CB 4F        	bit 1,a
 666  8A52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 667  8A54
 668  8A54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 669  8A54
 670  8A54 3A CC 88     	ld a,(CTRL_DESPLZ)
 671  8A57 A7           	and a
 672  8A58 20 08        	jr nz,18F
 673  8A5A
 674  8A5A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 675  8A5D 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 676  8A60 18 06        	jr 19F
 677  8A62
 678  8A62 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 679  8A65 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 680  8A68
 681  8A68 21 03 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 682  8A6B CB CE        	set 1,(hl)
 683  8A6D 18 22        	jr 7F
 684  8A6F
 685  8A6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 686  8A6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 687  8A6F
 688  8A6F 3A 05 89     8 ld a,(Ctrl_1)
 689  8A72 CB 57        	bit 2,a
 690  8A74 28 1B        	jr z,7F
 691  8A76
 692  8A76 2A 2D 89     	ld hl,(Coordenadas_disparo_certero)
 693  8A79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 694  8A7A              ;														; E contiene la coordenada_X del disparo.
 695  8A7A 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 696  8A7D              ;														; H FILA, (Coordenada_y de la entidad).
 697  8A7D A7           	and a
 698  8A7E ED 52        	sbc hl,de
 699  8A80
 700  8A80 CD 95 92     	call Determina_resultado_comparativa
 701  8A83
 702  8A83 78           	ld a,b
 703  8A84 A7           	and a
 704  8A85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 705  8A87
 706  8A87              ; ----- ----- -----
 707  8A87
 708  8A87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 709  8A89 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 710  8A8C
 711  8A8C 21 05 89     	ld hl,Ctrl_1
 712  8A8F CB 96        	res 2,(hl)
 713  8A91
 714  8A91 CD 01 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 715  8A94
 716  8A94 3A F2 88     	ld a,(Ctrl_0)
 717  8A97 CB 67        	bit 4,a
 718  8A99 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 719  8A9B
 720  8A9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 721  8A9B              ; [[[
 722  8A9B              ;	call Detecta_disparo_entidad
 723  8A9B              ; ]]]
 724  8A9B
 725  8A9B CD EB 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 726  8A9E
 727  8A9E 21 F2 88     	ld hl,Ctrl_0
 728  8AA1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 729  8AA3
 730  8AA3 CD 4E 8D     17 call Store_Restore_cajas
 731  8AA6
 732  8AA6 C1           	pop bc
 733  8AA7
 734  8AA7 05           	dec b
 735  8AA8 C2 1F 8A     	jp nz,15B
 736  8AAB
 737  8AAB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 738  8AAB              ; Hemos gestionado todas las unidades.
 739  8AAB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 740  8AAB
 741  8AAB 21 05 89     	ld hl,Ctrl_1
 742  8AAE CB 96        	res 2,(hl)
 743  8AB0
 744  8AB0 21 24 89     16 ld hl,Ctrl_3
 745  8AB3 CB C6        	set 0,(hl)											; Frame completo.
 746  8AB5 AF           	xor a
 747  8AB6 D3 FE        	out ($fe),a
 748  8AB8 FB           	ei
 749  8AB9 76           	halt
 750  8ABA
 751  8ABA              ; ----------------------------------------
 752  8ABA
 753  8ABA 3A 05 89     	ld a,(Ctrl_1) 										; Existe Loop?
 754  8ABD CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 755  8ABF CA B0 89     	jp z,Main
 756  8AC2
 757  8AC2              ; RECARGA DE NUEVA OLEADA.
 758  8AC2
 759  8AC2 3A 36 89     	ld a,(Contador_de_frames)
 760  8AC5 47           	ld b,a
 761  8AC6 3A 3A 89     	ld a,(Activa_recarga_cajas)
 762  8AC9 B8           	cp b
 763  8ACA 28 08        	jr z,20F
 764  8ACC
 765  8ACC 21 05 89     	ld hl,Ctrl_1
 766  8ACF CB E6        	set 4,(hl)
 767  8AD1 C3 B0 89     	jp Main
 768  8AD4
 769  8AD4 21 05 89     20 ld hl,Ctrl_1
 770  8AD7 CB A6        	res 4,(hl)
 771  8AD9
 772  8AD9 3A 36 89     	ld a,(Contador_de_frames)
 773  8ADC
 774  8ADC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 775  8ADC              ;! _ IMPREDECIBLE !!!!
 776  8ADC
 777  8ADC C6 0A        	add 10
 778  8ADE 32 39 89     	ld (Clock_Entidades_en_curso),a
 779  8AE1
 780  8AE1 C3 5B 89     	jp 4B
 781  8AE4
 782  8AE4 C9           	ret
 783  8AE5
 784  8AE5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 785  8AE5              ;
 786  8AE5              ;	16/11/23
 787  8AE5
 788  8AE5              Gestiona_Amadeus
 789  8AE5
 790  8AE5              ;! Activa/desactiva impacto con Amadeus.
 791  8AE5
 792  8AE5              ;	ld a,(Impacto)
 793  8AE5              ;	and a
 794  8AE5              ;	jr nz,2F
 795  8AE5
 796  8AE5 CD 78 8B     	call Mov_Amadeus
 797  8AE8
 798  8AE8 3A F2 88     2 ld a,(Ctrl_0)
 799  8AEB CB 67        	bit 4,a
 800  8AED 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 801  8AEF
 802  8AEF CD EB 8B     	call Guarda_foto_entidad_a_pintar
 803  8AF2 CD 2D 8E     	call Guarda_datos_de_borrado_Amadeus
 804  8AF5
 805  8AF5 21 F2 88     1 ld hl,Ctrl_0
 806  8AF8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 807  8AFA
 808  8AFA CD 20 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 809  8AFD
 810  8AFD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 811  8AFD
 812  8AFD CD E8 8C     	call Calcula_numero_de_disparotes
 813  8B00
 814  8B00 C9           	ret
 815  8B01
 816  8B01              ; --------------------------------------------------------------------------------------------------------------
 817  8B01              ;
 818  8B01              ;	15/12/23
 819  8B01
 820  8B01              Mov_obj
 821  8B01
 822  8B01 3A 03 89     	ld a,(Ctrl_2)
 823  8B04 CB 4F        	bit 1,a
 824  8B06 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 825  8B08
 826  8B08              ; Explosión:
 827  8B08
 828  8B08 3A 04 89     	ld a,(Frames_explosion)
 829  8B0B A7           	and a
 830  8B0C 20 1D        	jr nz,4F
 831  8B0E
 832  8B0E              ; Una alimaña menos!!!!!!!!!1
 833  8B0E
 834  8B0E              ; Se trataba de una Entidad_guía ???
 835  8B0E
 836  8B0E 3A 03 89     	ld a,(Ctrl_2)
 837  8B11 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 838  8B13 28 05        	jr z,5F
 839  8B15
 840  8B15 21 24 89     	ld hl,Ctrl_3
 841  8B18 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 842  8B1A
 843  8B1A CD CB 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 844  8B1D 21 0F 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 845  8B20 35           	dec (hl)
 846  8B21 21 10 89     	ld hl,Entidades_en_curso
 847  8B24 35           	dec (hl)
 848  8B25 21 0E 89     	ld hl,Numero_de_entidades
 849  8B28 35           	dec (hl)
 850  8B29 18 4C        	jr 3F
 851  8B2B
 852  8B2B              ; -----
 853  8B2B
 854  8B2B              ;	`Movemos´ la explosión.
 855  8B2B
 856  8B2B 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 857  8B2E 23           	inc hl
 858  8B2F 23           	inc hl
 859  8B30 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 860  8B33 CD 00 8D     	call Extrae_address
 861  8B36 22 C8 88     	ld (Puntero_objeto),hl
 862  8B39
 863  8B39 21 04 89     	ld hl,Frames_explosion
 864  8B3C 35           	dec (hl)
 865  8B3D
 866  8B3D 21 F2 88     	ld hl,Ctrl_0
 867  8B40 CB E6        	set 4,(hl)
 868  8B42
 869  8B42 18 33        	jr 3F
 870  8B44
 871  8B44              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 872  8B44
 873  8B44 AF           2 xor a
 874  8B45 32 F2 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 875  8B48
 876  8B48              ; Movemos Entidades malignas.
 877  8B48              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 878  8B48
 879  8B48 3A 03 89     	ld a,(Ctrl_2)
 880  8B4B CB 6F        	bit 5,a
 881  8B4D 20 07        	jr nz,8F
 882  8B4F
 883  8B4F 21 F2 88     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 884  8B52 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 885  8B54 18 09        	jr 7F
 886  8B56
 887  8B56 CD 1C 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 888  8B59
 889  8B59 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 890  8B5C CB 67        	bit 4,a
 891  8B5E C8           	ret z
 892  8B5F
 893  8B5F              ; Ha habido desplazamiento de la entidad maligna.
 894  8B5F              ; Ha llegado a zona de AMADEUS ???
 895  8B5F
 896  8B5F 3A CB 88     7 ld a,(Coordenada_y)
 897  8B62 FE 14        	cp $14
 898  8B64 38 08        	jr c,1F
 899  8B66
 900  8B66              ; ---------
 901  8B66
 902  8B66              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 903  8B66              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 904  8B66
 905  8B66 F3           	di
 906  8B67 CD 45 90     	call Genera_coordenadas_X
 907  8B6A CD 81 90     	call Compara_coordenadas_X
 908  8B6D FB           	ei
 909  8B6E
 910  8B6E              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 911  8B6E
 912  8B6E              ; ---------
 913  8B6E
 914  8B6E CD 50 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 915  8B71 CD 4D 8E     	call Repone_datos_de_borrado 							; BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 916  8B74 CD A6 8C     	call Limpia_Variables_de_borrado
 917  8B77
 918  8B77 C9           3 ret
 919  8B78
 920  8B78              ; --------------------------------------------------------------------------------------------------------------
 921  8B78              ;
 922  8B78              ;	29/1/23
 923  8B78
 924  8B78              Mov_Amadeus
 925  8B78
 926  8B78 CD ED 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 927  8B7B
 928  8B7B 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 929  8B7E CB 67        	bit 4,a
 930  8B80 C8           	ret z
 931  8B81
 932  8B81              ; ---------
 933  8B81
 934  8B81 CD 50 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 935  8B84 CD 3D 8E     	call Repone_datos_de_borrado_Amadeus
 936  8B87 CD A6 8C     	call Limpia_Variables_de_borrado
 937  8B8A
 938  8B8A C9           	ret
 939  8B8B
 940  8B8B              ; -----------------------------------------------------------------------------------
 941  8B8B              ;
 942  8B8B              ;	12/12/23
 943  8B8B              ;
 944  8B8B              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 945  8B8B
 946  8B8B              Inicia_entidad
 947  8B8B
 948  8B8B CD BD 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 949  8B8E CD 06 8D     	call Inicia_Puntero_objeto
 950  8B91 CD 9D 99     	call Recompone_posicion_inicio
 951  8B94 CD 7C 93     	call Draw
 952  8B97 CD A2 8B     	call Guarda_movimiento_masticado
 953  8B9A CD A0 7F     	call Guarda_foto_registros
 954  8B9D F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 955  8B9E              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 956  8B9E              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 957  8B9E CD 4E 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 958  8BA1 C9           	ret
 959  8BA2
 960  8BA2
 961  8BA2              ; -----------------------------------------------------------------------------------
 962  8BA2              ;
 963  8BA2              ;	15/12/23
 964  8BA2              ;
 965  8BA2              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} si se trata de una "entidad_guía".
 966  8BA2              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 967  8BA2
 968  8BA2 3A 03 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 969  8BA5 CB 6F        	bit 5,a
 970  8BA7 C8           	ret z 												; Salimos si se trata de una entidad guía.
 971  8BA8
 972  8BA8 ED 73 16 89  	ld (Stack),sp
 973  8BAC ED 7B F0 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)		; Guardamos el movimiento masticado en el almacén.
 974  8BB0
 975  8BB0 E5           	push hl
 976  8BB1 DD E5            push ix
 977  8BB3 FD E5            push iy
 978  8BB5
 979  8BB5 ED 7B 16 89      ld sp,(Stack)
 980  8BB9
 981  8BB9 CD D4 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados ; Actualizamos (Puntero_de_almacen_de_mov_masticados).
 982  8BBC
 983  8BBC C9               ret
 984  8BBD
 985  8BBD              ; --------------------------------------------------------------------------------------------------------------
 986  8BBD              ;
 987  8BBD              ;	12/12/23
 988  8BBD              ;
 989  8BBD
 990  8BBD              Inicia_entidad_guia
 991  8BBD
 992  8BBD              ; Existe "Entidad_guía" ???
 993  8BBD
 994  8BBD 3A 24 89     	ld a,(Ctrl_3)
 995  8BC0 CB 4F        	bit 1,a
 996  8BC2 C0           	ret nz
 997  8BC3
 998  8BC3              ; Inicia Entidad_guía:
 999  8BC3
1000  8BC3 21 03 89     	ld hl,Ctrl_2
1001  8BC6 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1002  8BC8 21 24 89     	ld hl,Ctrl_3
1003  8BCB CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1004  8BCD
1005  8BCD 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados+6
1006  8BD0 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8BD3
1008  8BD3 C9           	ret
1009  8BD4
1010  8BD4              ; --------------------------------------------------------------------------------------------------------------
1011  8BD4              ;
1012  8BD4              ;	13/12/23
1013  8BD4              ;
1014  8BD4
1015  8BD4              Actualiza_Puntero_de_almacen_de_mov_masticados
1016  8BD4
1017  8BD4              ;	Entidad_guía ???
1018  8BD4
1019  8BD4 3A 03 89     	ld a,(Ctrl_2)
1020  8BD7 CB 6F        	bit 5,a
1021  8BD9 C8           	ret z												; Salimos si se trata de una entidad guía.
1022  8BDA
1023  8BDA E5           	push hl
1024  8BDB C5           	push bc
1025  8BDC
1026  8BDC 2A F0 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1027  8BDF 01 06 00     	ld bc,6
1028  8BE2 A7           	and a
1029  8BE3 ED 4A        	adc hl,bc
1030  8BE5 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1031  8BE8
1032  8BE8 C1           	pop bc
1033  8BE9 E1           	pop hl
1034  8BEA
1035  8BEA C9           	ret
1036  8BEB
1037  8BEB              ; --------------------------------------------------------------------------------------------------------------
1038  8BEB              ;
1039  8BEB              ;	31/08/23
1040  8BEB              ;
1041  8BEB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1042  8BEB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1043  8BEB
1044  8BEB              Guarda_foto_entidad_a_pintar
1045  8BEB
1046  8BEB              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1047  8BEB
1048  8BEB 3A F2 88     	ld a,(Ctrl_0)
1049  8BEE CB 77        	bit 6,a
1050  8BF0 28 07        	jr z,5F
1051  8BF2
1052  8BF2 CD 7C 93     	call Draw
1053  8BF5 CD A0 7F     	call Guarda_foto_registros
1054  8BF8
1055  8BF8 C9           	ret
1056  8BF9
1057  8BF9              ; Está lleno el {Almacen_de_movimientos_masticados}. ?
1058  8BF9
1059  8BF9 3A 24 89     5 ld a,(Ctrl_3)
1060  8BFC CB 5F        	bit 3,a
1061  8BFE 28 04        	jr z,1F
1062  8C00
1063  8C00              ; {Almacen_de_movimientos_masticados} lleno. Se trata de una "ENTIDAD_FANTASMA".
1064  8C00
1065  8C00 CD 25 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1066  8C03
1067  8C03 C9           	ret
1068  8C04
1069  8C04              ; Entidad_guía o fantasma ???
1070  8C04
1071  8C04 3A 03 89     1 ld a,(Ctrl_2)
1072  8C07 CB 6F        	bit 5,a
1073  8C09 20 02        	jr nz,2F
1074  8C0B
1075  8C0B              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1076  8C0B
1077  8C0B 18 F3        	jr 4B
1078  8C0D
1079  8C0D              ; ENTIDAD_GUÍA:
1080  8C0D              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1081  8C0D              ; _guardando "movimientos_masticados".
1082  8C0D
1083  8C0D 3A 24 89     2 ld a,(Ctrl_3)
1084  8C10 CB 57        	bit 2,a
1085  8C12 28 07        	jr z,3F
1086  8C14
1087  8C14              ; Hemos completado todos los movimientos masticados.
1088  8C14
1089  8C14 CB 97        	res 2,a
1090  8C16 CB DF        	set 3,a
1091  8C18 32 24 89     	ld (Ctrl_3),a
1092  8C1B
1093  8C1B CD 7C 93     3 call Draw
1094  8C1E CD A2 8B     	call Guarda_movimiento_masticado
1095  8C21 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1096  8C24
1097  8C24 C9           	ret
1098  8C25
1099  8C25              ; --------------------------------------------------------------------------------------------------------------
1100  8C25              ;
1101  8C25              ;	17/12/23
1102  8C25
1103  8C25 ED 73 16 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1104  8C29 ED 7B F0 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1105  8C2D
1106  8C2D FD E1        	pop iy
1107  8C2F DD E1        	pop ix
1108  8C31 E1           	pop hl
1109  8C32
1110  8C32 ED 73 F0 88  	ld (Puntero_de_almacen_de_mov_masticados),sp
1111  8C36 ED 7B 16 89  	ld sp,(Stack)
1112  8C3A
1113  8C3A CD A0 7F     	call Guarda_foto_registros
1114  8C3D
1115  8C3D E5           	push hl
1116  8C3E C5           	push bc
1117  8C3F
1118  8C3F 21 90 6F     	ld hl,$6f90
1119  8C42 ED 4B F0 88  	ld bc,(Puntero_de_almacen_de_mov_masticados)
1120  8C46 A7           	and a
1121  8C47 ED 42        	sbc hl,bc
1122  8C49
1123  8C49 F3           	di
1124  8C4A 28 FE        	jr z,$
1125  8C4C FB           	ei
1126  8C4D
1127  8C4D              ;	ld hl,Almacen_de_movimientos_masticados
1128  8C4D              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1129  8C4D
1130  8C4D C1           	pop bc
1131  8C4E E1           	pop hl
1132  8C4F
1133  8C4F
1134  8C4F C9           	ret
1135  8C50
1136  8C50              ; --------------------------------------------------------------------------------------------------------------
1137  8C50              ;
1138  8C50              ;	19/9/23
1139  8C50
1140  8C50 21 C4 88     Prepara_var_pintado ld hl,Filas
1141  8C53 11 E4 88     	ld de,Variables_de_pintado
1142  8C56 01 08 00     	ld bc,8
1143  8C59 ED B0        	ldir
1144  8C5B C9           	ret
1145  8C5C
1146  8C5C              ; --------------------------------------------------------------------------------------------------------------
1147  8C5C
1148  8C5C 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
1149  8C5F 11 C4 88     	ld de,Filas
1150  8C62 01 08 00     	ld bc,8
1151  8C65 ED B0        	ldir
1152  8C67 C9           	ret
1153  8C68
1154  8C68              ; *************************************************************************************************************************************************************
1155  8C68              ;
1156  8C68              ; 8/1/23
1157  8C68              ;
1158  8C68              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1159  8C68              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1160  8C68              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1161  8C68
1162  8C68              ; Destruye HL y DE !!!!!
1163  8C68
1164  8C68              Inicia_punteros_de_cajas
1165  8C68
1166  8C68 21 6C 85     	ld hl,Indice_de_cajas
1167  8C6B CD 00 8D         call Extrae_address
1168  8C6E 22 08 89         ld (Puntero_store_caja),hl
1169  8C71 21 6E 85     	ld hl,Indice_de_cajas+2
1170  8C74 22 0C 89     	ld (Indice_restore_caja),hl
1171  8C77 CD 00 8D     	call Extrae_address
1172  8C7A 22 0A 89     	ld (Puntero_restore_caja),hl
1173  8C7D C9               ret
1174  8C7E
1175  8C7E              ; *************************************************************************************************************************************************************
1176  8C7E              ;
1177  8C7E              ; 8/1/23
1178  8C7E              ;
1179  8C7E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1180  8C7E
1181  8C7E 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1182  8C81 22 26 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1183  8C84 C9           	ret
1184  8C85 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1185  8C88 22 28 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1186  8C8B C9           	ret
1187  8C8C
1188  8C8C              ; -------------------------------------------------------------------------------------------------------------
1189  8C8C              ;
1190  8C8C              ; 21/9/23
1191  8C8C              ;
1192  8C8C
1193  8C8C              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1194  8C8C
1195  8C8C              Limpia_album_Amadeus
1196  8C8C
1197  8C8C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1198  8C8F 7E           	ld a,(hl)
1199  8C90 A7           	and a
1200  8C91 C8           	ret z
1201  8C92
1202  8C92 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1203  8C95 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1204  8C98 01 0B 00     	ld bc,11
1205  8C9B AF           	xor a
1206  8C9C 77           	ld (hl),a
1207  8C9D ED B0        	ldir
1208  8C9F
1209  8C9F 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1210  8CA2 22 22 89     	ld (End_Snapshot_Amadeus),hl
1211  8CA5
1212  8CA5 C9           	ret
1213  8CA6
1214  8CA6 21 DE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1215  8CA9 11 DF 88     	ld de,Variables_de_borrado+1
1216  8CAC 01 05 00     	ld bc,5
1217  8CAF AF           	xor a
1218  8CB0 77           	ld (hl),a
1219  8CB1 ED B0        	ldir
1220  8CB3 C9           	ret
1221  8CB4
1222  8CB4              ; -------------------------------------------------------------------------------------------------------------
1223  8CB4              ;
1224  8CB4              ; 8/9/23
1225  8CB4              ;
1226  8CB4
1227  8CB4              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1228  8CB4              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1229  8CB4
1230  8CB4              Calcula_numero_de_malotes
1231  8CB4
1232  8CB4 21 00 70     	ld hl,Album_de_fotos
1233  8CB7 EB           	ex de,hl
1234  8CB8 2A 1C 89     	ld hl,(Stack_snapshot)
1235  8CBB
1236  8CBB 06 00        	ld b,0
1237  8CBD 7D           	ld a,l
1238  8CBE 93           	sub e
1239  8CBF 28 07        	jr z,1F
1240  8CC1
1241  8CC1              ; Nº de malotes no es "0".
1242  8CC1
1243  8CC1 D6 06        2 sub 6
1244  8CC3 04           	inc b
1245  8CC4 A7           	and a
1246  8CC5 20 FA        	jr nz,2B
1247  8CC7 78           	ld a,b
1248  8CC8
1249  8CC8 32 11 89     1 ld (Numero_de_malotes),a
1250  8CCB C9           	ret
1251  8CCC
1252  8CCC              ; -------------------------------------------------------------------------------------------------------------
1253  8CCC              ;
1254  8CCC              ; 8/9/23
1255  8CCC              ;
1256  8CCC
1257  8CCC              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1258  8CCC              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1259  8CCC
1260  8CCC              Calcula_malotes_Amadeus
1261  8CCC
1262  8CCC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1263  8CCF EB           	ex de,hl
1264  8CD0 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1265  8CD3
1266  8CD3 7C           	ld a,h
1267  8CD4 A7           	and a
1268  8CD5 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1269  8CD7
1270  8CD7 06 00        	ld b,0
1271  8CD9 7D           	ld a,l
1272  8CDA 93           	sub e
1273  8CDB 28 07        	jr z,1F
1274  8CDD
1275  8CDD              ; Nº de malotes no es "0".
1276  8CDD
1277  8CDD D6 06        2 sub 6
1278  8CDF 04           	inc b
1279  8CE0 A7           	and a
1280  8CE1 20 FA        	jr nz,2B
1281  8CE3 78           	ld a,b
1282  8CE4
1283  8CE4 32 11 89     1 ld (Numero_de_malotes),a
1284  8CE7 C9           	ret
1285  8CE8
1286  8CE8              ; -------------------------------------------------------------------------------------------------------------
1287  8CE8              ;
1288  8CE8              ; 28/2/23
1289  8CE8              ;
1290  8CE8
1291  8CE8              Calcula_numero_de_disparotes
1292  8CE8
1293  8CE8 21 56 70     	ld hl,Album_de_fotos_disparos
1294  8CEB EB           	ex de,hl
1295  8CEC 2A 20 89     	ld hl,(End_Snapshot_disparos)
1296  8CEF
1297  8CEF 06 00        	ld b,0
1298  8CF1 7D           	ld a,l
1299  8CF2 93           	sub e
1300  8CF3 28 07        	jr z,1F
1301  8CF5
1302  8CF5              ; Nº de malotes no es "0".
1303  8CF5
1304  8CF5 D6 06        2 sub 6
1305  8CF7 04           	inc b
1306  8CF8 A7           	and a
1307  8CF9 20 FA        	jr nz,2B
1308  8CFB 78           	ld a,b
1309  8CFC
1310  8CFC 32 25 89     1 ld (Numero_de_disparotes),a
1311  8CFF C9           	ret
1312  8D00
1313  8D00              ; *************************************************************************************************************************************************************
1314  8D00              ;
1315  8D00              ; 20/10/22
1316  8D00              ;
1317  8D00              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1318  8D00              ;
1319  8D00              ; Destruye el puntero y DE !!!!!
1320  8D00
1321  8D00 5E           Extrae_address ld e,(hl)
1322  8D01 23           	inc hl
1323  8D02 56           	ld d,(hl)
1324  8D03 2B           	dec hl
1325  8D04 EB           	ex de,hl
1326  8D05 C9           	ret
1327  8D06
1328  8D06              ; *************************************************************************************************************************************************************
1329  8D06              ;
1330  8D06              ;	7/2/23
1331  8D06              ;
1332  8D06              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1333  8D06              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1334  8D06              ;
1335  8D06              ;   Destruye HL y BC !!!!!,
1336  8D06              ;
1337  8D06              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1338  8D06              ;					"0" ..... Izquierda.
1339  8D06
1340  8D06              Inicia_Puntero_objeto
1341  8D06
1342  8D06 3A D8 88     	ld a,(Cuad_objeto)
1343  8D09 E6 01        	and 1
1344  8D0B F5           	push af
1345  8D0C CC 2A 8D     	call z,Inicia_puntero_objeto_izq
1346  8D0F F1           	pop af
1347  8D10 28 2B        	jr z,1F
1348  8D12 CD 17 8D     	call Inicia_puntero_objeto_der
1349  8D15 18 26        	jr 1F
1350  8D17
1351  8D17              ; Arrancamos desde la parte izquierda de la pantalla.
1352  8D17              ; Iniciamos (Indice_Sprite_der).
1353  8D17
1354  8D17 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1355  8D1A 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1356  8D1D CD 00 8D     	call Extrae_address
1357  8D20 22 C8 88     	ld (Puntero_objeto),hl
1358  8D23
1359  8D23 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1360  8D26 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1361  8D29 C9           	ret
1362  8D2A
1363  8D2A              ; Arrancamos desde la parte derecha de la pantalla.
1364  8D2A              ; Iniciamos (Indice_Sprite_izq).
1365  8D2A
1366  8D2A 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1367  8D2D 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1368  8D30 CD 00 8D     	call Extrae_address
1369  8D33 22 C8 88     	ld (Puntero_objeto),hl
1370  8D36
1371  8D36 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1372  8D39 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1373  8D3C C9           	ret
1374  8D3D
1375  8D3D              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1376  8D3D
1377  8D3D 21 40 83     1 ld hl,Amadeus
1378  8D40 ED 4B C8 88  	ld bc,(Puntero_objeto)
1379  8D44 B7 ED 42     	sub hl,bc
1380  8D47 C0           	ret nz
1381  8D48 21 F2 88     	ld hl,Ctrl_0
1382  8D4B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1383  8D4D C9           	ret 												; _de nuestra nave en los extremos.
1384  8D4E
1385  8D4E              ; *************************************************************************************************************************************************************
1386  8D4E              ;
1387  8D4E              ;	14/5/23
1388  8D4E              ;
1389  8D4E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1390  8D4E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1391  8D4E
1392  8D4E              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1393  8D4E              ;	_de la 2ª y 3ª entidad respectivamente.
1394  8D4E
1395  8D4E              Store_Restore_cajas
1396  8D4E
1397  8D4E E5           	push hl
1398  8D4F D5           	push de
1399  8D50 C5            	push bc
1400  8D51
1401  8D51              ;	STORE !!!!!
1402  8D51              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1403  8D51
1404  8D51 21 C4 88     	ld hl,Filas
1405  8D54 ED 5B 08 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1406  8D58 01 41 00     	ld bc,65
1407  8D5B ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1408  8D5D
1409  8D5D              ; 	Entidad_sospechosa. 20/4/23
1410  8D5D
1411  8D5D 3A DD 88     	ld a,(Impacto)
1412  8D60 A7           	and a
1413  8D61 28 0C        	jr z,1F
1414  8D63
1415  8D63 2A 08 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1416  8D66 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1417  8D69 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1418  8D6A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1419  8D6C 22 2B 89     	ld (Entidad_sospechosa_de_colision),hl
1420  8D6F
1421  8D6F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1422  8D6F
1423  8D6F 2A 0A 89     1 ld hl,(Puntero_restore_caja)
1424  8D72 7E           	ld a,(hl)
1425  8D73 A7           	and a
1426  8D74 F5           	push af
1427  8D75 28 08        	jr z,2F
1428  8D77
1429  8D77 11 C4 88     	ld de,Filas
1430  8D7A 01 41 00     	ld bc,65
1431  8D7D ED B0        	ldir
1432  8D7F
1433  8D7F CD 9B 8D     2 call Incrementa_punteros_de_cajas
1434  8D82
1435  8D82 F1           	pop af
1436  8D83 28 EA        	jr z,1B
1437  8D85
1438  8D85 C1           	pop bc
1439  8D86 D1           	pop de
1440  8D87 E1           	pop hl
1441  8D88
1442  8D88 C9           	ret
1443  8D89
1444  8D89              ; **************************************************************************************************
1445  8D89              ;
1446  8D89              ;	12/05/23
1447  8D89              ;
1448  8D89              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1449  8D89
1450  8D89 E5           Restore_entidad push hl
1451  8D8A D5           	push de
1452  8D8B C5            	push bc
1453  8D8C
1454  8D8C 2A 08 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1455  8D8F 11 C4 88     	ld de,Filas
1456  8D92 01 41 00     	ld bc,65
1457  8D95 ED B0        	ldir
1458  8D97
1459  8D97 C1           	pop bc
1460  8D98 D1           	pop de
1461  8D99 E1           	pop hl
1462  8D9A C9           	ret
1463  8D9B
1464  8D9B              ; **************************************************************************************************
1465  8D9B              ;
1466  8D9B              ;	08/05/23
1467  8D9B              ;
1468  8D9B              ;	Incrementamos los dos punteros de entidades. (+1).
1469  8D9B
1470  8D9B              Incrementa_punteros_de_cajas
1471  8D9B
1472  8D9B 2A 0A 89     	ld hl,(Puntero_restore_caja)
1473  8D9E 22 08 89     	ld (Puntero_store_caja),hl
1474  8DA1 2A 0C 89     	ld hl,(Indice_restore_caja)
1475  8DA4 23           	inc hl
1476  8DA5 23           	inc hl
1477  8DA6 22 0C 89     	ld (Indice_restore_caja),hl
1478  8DA9 CD 00 8D         call Extrae_address
1479  8DAC 22 0A 89         ld (Puntero_restore_caja),hl
1480  8DAF C9               ret
1481  8DB0
1482  8DB0              ; **************************************************************************************************
1483  8DB0              ;
1484  8DB0              ;	25/01/23
1485  8DB0              ;
1486  8DB0              ;	Restore_Amadeus
1487  8DB0              ;
1488  8DB0              ;	Cargamos en DRAW los parámetros de Amadeus.
1489  8DB0              ;
1490  8DB0
1491  8DB0 E5           Restore_Amadeus	push hl
1492  8DB1 D5           	push de
1493  8DB2 C5            	push bc
1494  8DB3 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1495  8DB6 11 C4 88     	ld de,Filas
1496  8DB9 01 41 00     	ld bc,65
1497  8DBC ED B0        	ldir
1498  8DBE C1           	pop bc
1499  8DBF D1           	pop de
1500  8DC0 E1           	pop hl
1501  8DC1 C9           	ret
1502  8DC2
1503  8DC2              ; *************************************************************************************************************************************************************
1504  8DC2              ;
1505  8DC2              ;	29/04/23
1506  8DC2              ;
1507  8DC2              ;	Store_Amadeus
1508  8DC2              ;
1509  8DC2              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1510  8DC2              ;
1511  8DC2              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1512  8DC2              ;
1513  8DC2              ;	DESTRUYE: HL y BC y DE.
1514  8DC2
1515  8DC2 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1516  8DC5 01 41 00     	ld bc,65
1517  8DC8 ED B0        	ldir
1518  8DCA C9           	ret
1519  8DCB
1520  8DCB              ; -----------------------------------------------------------
1521  8DCB              ;
1522  8DCB              ;	27/04/23
1523  8DCB              ;
1524  8DCB              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1525  8DCB              ;
1526  8DCB              ;	Destruye: HL,BC,DE,A
1527  8DCB
1528  8DCB 21 C4 88     Borra_datos_entidad ld hl,Filas
1529  8DCE 01 40 00     	ld bc,64
1530  8DD1 AF           	xor a
1531  8DD2 77           	ld (hl),a
1532  8DD3 11 C5 88     	ld de,Filas+1
1533  8DD6 ED B0        	ldir
1534  8DD8 C9           	ret
1535  8DD9
1536  8DD9              ; -----------------------------------------------------------
1537  8DD9
1538  8DD9              ; Teclado.
1539  8DD9
1540  8DD9 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1541  8DDB DB FE        	in a,($fe)
1542  8DDD E6 01        	and $01
1543  8DDF 28 02        	jr z,1f
1544  8DE1 18 F6        	jr Pulsa_ENTER
1545  8DE3 C9           1 ret
1546  8DE4
1547  8DE4              ; **************************************************************************************************
1548  8DE4              ;
1549  8DE4              ; Temporización.
1550  8DE4
1551  8DE4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1552  8DE4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1553  8DE4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1554  8DE4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1555  8DE4
1556  8DE4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1557  8DE4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1558  8DE4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1559  8DE4
1560  8DE4              ; A partir de $4f61 no hace falta DELAY.
1561  8DE4
1562  8DE4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1563  8DE4
1564  8DE4 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1565  8DE7 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1566  8DE8 78           	LD A,B
1567  8DE9 A7           	AND A
1568  8DEA 20 FB        	JR NZ,wait
1569  8DEC C9           	RET
1570  8DED
1571  8DED              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1572  8DED              ;
1573  8DED              ;	5/3/23
1574  8DED              ;
1575  8DED              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1576  8DED
1577  8DED              Movimiento_Amadeus
1578  8DED
1579  8DED              ; Disparo.
1580  8DED
1581  8DED 3A 3B 89     	ld a,(Disparo_Amadeus)
1582  8DF0 A7           	and a
1583  8DF1 20 02        	jr nz,1F
1584  8DF3 18 15        	jr 2F
1585  8DF5
1586  8DF5 3E F7        1 ld a,$f7													; "5" para disparar.
1587  8DF7 DB FE        	in a,($fe)
1588  8DF9 E6 10        	and $10
1589  8DFB
1590  8DFB F5           	push af
1591  8DFC CC A8 8E     	call z,Genera_disparo
1592  8DFF F1           	pop af
1593  8E00 20 08        	jr nz,2F
1594  8E02
1595  8E02 3A 3B 89     	ld a,(Disparo_Amadeus)
1596  8E05 EE 01        	xor 1
1597  8E07 32 3B 89     	ld (Disparo_Amadeus),a
1598  8E0A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1599  8E0C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1600  8E0E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1601  8E10 CC 7B 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1602  8E13
1603  8E13 3E F7        	ld a,$f7
1604  8E15 DB FE        	in a,($fe)
1605  8E17 E6 01        	and $01
1606  8E19 C8           	ret z
1607  8E1A
1608  8E1A 3E F7        	ld a,$f7
1609  8E1C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1610  8E1E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1611  8E20 CC 5D 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1612  8E23 C9           	ret
1613  8E24
1614  8E24              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1615  8E24              ;
1616  8E24              ;	Rutina provisional para que los malotes cagen balas.
1617  8E24
1618  8E24              Detecta_disparo_entidad
1619  8E24
1620  8E24 3A 3E 89     	ld a,(Disparo_entidad)
1621  8E27 A7           	and a
1622  8E28 C8           	ret z
1623  8E29
1624  8E29              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1625  8E29
1626  8E29              ;	ld a,$7f				; Detecta SPACE.
1627  8E29              ;	in a,($fe)
1628  8E29              ;	and 1
1629  8E29              ;	ret nz
1630  8E29
1631  8E29 CD A8 8E     	call Genera_disparo
1632  8E2C C9           	ret
1633  8E2D
1634  8E2D              ; ----------------------------------------------------------------------
1635  8E2D              ;
1636  8E2D              ;	8/9/23
1637  8E2D
1638  8E2D 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1639  8E30 2B            	dec hl
1640  8E31 7E           	ld a,(hl)
1641  8E32 A7           	and a
1642  8E33 C8           	ret z										; Salimos si es álbum está vacío.
1643  8E34
1644  8E34 11 E3 88     	ld de,Variables_de_borrado+5
1645  8E37 01 06 00     	ld bc,6
1646  8E3A ED B8        	lddr
1647  8E3C C9           	ret
1648  8E3D
1649  8E3D              ; ----------------------------------------------------------------------
1650  8E3D              ;
1651  8E3D              ;	9/9/23
1652  8E3D
1653  8E3D              Repone_datos_de_borrado_Amadeus
1654  8E3D
1655  8E3D 21 DE 88     	ld hl,Variables_de_borrado
1656  8E40 11 AC 70     	ld de,Album_de_fotos_Amadeus
1657  8E43 01 06 00     	ld bc,6
1658  8E46 ED B0        	ldir
1659  8E48
1660  8E48 EB           	ex de,hl
1661  8E49 22 22 89     	ld (End_Snapshot_Amadeus),hl
1662  8E4C
1663  8E4C C9           	ret
1664  8E4D
1665  8E4D              ; ----------------------------------------------------------------------
1666  8E4D              ;
1667  8E4D              ;	27/10/23
1668  8E4D              ;
1669  8E4D
1670  8E4D              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1671  8E4D              ;	_ Album_de_fotos correspondiente.
1672  8E4D
1673  8E4D              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1674  8E4D              ;	_ durante el proceso de escritura.
1675  8E4D
1676  8E4D              Repone_datos_de_borrado
1677  8E4D
1678  8E4D F3           	di
1679  8E4E ED 5B 1C 89  	ld de,(Stack_snapshot)
1680  8E52 21 DE 88     	ld hl,Variables_de_borrado
1681  8E55 01 06 00     	ld bc,6
1682  8E58 ED B0        	ldir
1683  8E5A FB           	ei
1684  8E5B
1685  8E5B EB           	ex de,hl
1686  8E5C 22 1C 89     	ld (Stack_snapshot),hl
1687  8E5F
1688  8E5F C9           	ret
1689  8E60
1690  8E60              ; --------------------------------------------------------------------------------------
1691  8E60
1692  8E60              Pinta_Amadeus
1693  8E60
1694  8E60 3E 06        	ld a,6
1695  8E62 D3 FE            out ($fe),a										; Amarillo
1696  8E64
1697  8E64 CD CC 8C        	call Calcula_malotes_Amadeus
1698  8E67 CD 0C 97     	call Extrae_foto_Amadeus
1699  8E6A CD 8C 8C     	call Limpia_album_Amadeus
1700  8E6D
1701  8E6D C9           	ret
1702  8E6E
1703  8E6E              Pinta_entidades
1704  8E6E
1705  8E6E              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1706  8E6E
1707  8E6E 3A 24 89     	ld a,(Ctrl_3)
1708  8E71 CB 47        	bit 0,a
1709  8E73 C8           	ret z
1710  8E74
1711  8E74 CD B4 8C     	call Calcula_numero_de_malotes
1712  8E77 CD 8A 96     	call Extrae_foto_entidades
1713  8E7A CD 01 80     	call Limpia_y_reinicia_Stack_Snapshot
1714  8E7D
1715  8E7D C9           	ret
1716  8E7E
1717  8E7E              ; -----------------------------------------------------------------------------------
1718  8E7E              ;
1719  8E7E              ;	10/12/23
1720  8E7E              ;
1721  8E7E              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1722  8E7E
1723  8E7E              Actualiza_relojes
1724  8E7E
1725  8E7E 3A 24 89     	ld a,(Ctrl_3)
1726  8E81 CB 47        	bit 0,a
1727  8E83 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1728  8E84
1729  8E84 21 36 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1730  8E87 34           	inc (hl)
1731  8E88
1732  8E88 34           	inc (hl)
1733  8E89 35           	dec (hl)
1734  8E8A C0           	ret nz
1735  8E8B
1736  8E8B 21 37 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1737  8E8E 34           	inc (hl)
1738  8E8F C9           	ret
1739  8E90
1740  8E90              ; ---------------------------------------------------------------
1741  8E90              ;
1742  8E90              ;	27/9/23
1743  8E90
1744  8E90              Guarda_parametros_DRAW
1745  8E90
1746  8E90 21 C4 88     	ld hl,Filas
1747  8E93 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1748  8E96 01 41 00     	ld bc,65
1749  8E99 ED B0        	ldir
1750  8E9B C9           	ret
1751  8E9C
1752  8E9C              Recupera_parametros_DRAW
1753  8E9C
1754  8E9C 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1755  8E9F 11 C4 88     	ld de,Filas
1756  8EA2 01 41 00     	ld bc,65
1757  8EA5 ED B0        	ldir
1758  8EA7 C9           	ret
1759  8EA8
1760  8EA8              ; ---------------------------------------------------------------
1761  8EA8
1762  8EA8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EA8              ; ******************************************************************************************************************************************************************************************
   2+ 8EA8              ;
   3+ 8EA8              ;   21/07/23
   4+ 8EA8              ;
   5+ 8EA8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EA8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EA8              ;
   8+ 8EA8              ;
   9+ 8EA8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EA8              ;
  11+ 8EA8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EA8              ;               _ hacen las entidades hacia abajo.
  13+ 8EA8              ;
  14+ 8EA8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EA8              ;
  16+ 8EA8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EA8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EA8              ;
  19+ 8EA8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EA8              ;           _ la bala.
  21+ 8EA8              ;
  22+ 8EA8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EA8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EA8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EA8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EA8              ;           _ en el momento de generarse la bala)).
  27+ 8EA8
  28+ 8EA8              Genera_disparo
  29+ 8EA8
  30+ 8EA8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EA8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EA8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EA8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EA8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EA8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EA8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EA8
  38+ 8EA8              ; Exclusiones:
  39+ 8EA8
  40+ 8EA8 3A DC 88         ld a,(Vel_down)
  41+ 8EAB 47               ld b,a
  42+ 8EAC 3A 35 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EAF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EB0 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EB1 3A FF 88         ld a,(Columnas)
  46+ 8EB4 47               ld b,a
  47+ 8EB5 3A C5 88         ld a,(Columns)
  48+ 8EB8 B8               cp b
  49+ 8EB9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EBA
  51+ 8EBA              ; ----- ----- -----
  52+ 8EBA
  53+ 8EBA 3A F2 88         ld a,(Ctrl_0)
  54+ 8EBD CB 77            bit 6,a
  55+ 8EBF 20 06            jr nz,14F
  56+ 8EC1
  57+ 8EC1 3A CB 88         ld a,(Coordenada_y)
  58+ 8EC4 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EC6 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EC7
  61+ 8EC7 21 00 80     14 ld hl,Indice_disparo
  62+ 8ECA 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8ECD 4F               ld c,a
  64+ 8ECE 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8ED0              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8ED0              ;                                            ""        ""       "f9", B="1"
  67+ 8ED0              ;                                            ""        ""       "fb", B="2"
  68+ 8ED0              ;                                            ""        ""       "fb", B="3"
  69+ 8ED0 A7               and a
  70+ 8ED1 28 10            jr z,1F
  71+ 8ED3 E6 01            and 1
  72+ 8ED5 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8ED6
  74+ 8ED6 79               ld a,c
  75+ 8ED7 16 F9            ld d,$f9
  76+ 8ED9 23           2 inc hl
  77+ 8EDA 23               inc hl
  78+ 8EDB 04               inc b
  79+ 8EDC BA               cp d
  80+ 8EDD 28 04            jr z,1F
  81+ 8EDF 14               inc d
  82+ 8EE0 14               inc d
  83+ 8EE1 18 F6            jr 2B
  84+ 8EE3
  85+ 8EE3 CD 00 8D     1 call Extrae_address
  86+ 8EE6 E5               push hl
  87+ 8EE7 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EE9 DD 21 52 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EED
  90+ 8EED              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EED              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EED
  93+ 8EED 3A F2 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EF0 CB 77            bit 6,a
  95+ 8EF2 20 04            jr nz,19F
  96+ 8EF4
  97+ 8EF4 AF               xor a
  98+ 8EF5 32 3E 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EF8
 100+ 8EF8 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8EFB FE 02            cp 2
 102+ 8EFD 38 66            jr c,3F
 103+ 8EFF 28 64            jr z,3F
 104+ 8F01
 105+ 8F01              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F01
 107+ 8F01 E6 01            and 1
 108+ 8F03 28 30            jr z,4F
 109+ 8F05
 110+ 8F05              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F05              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F05              ;
 113+ 8F05              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F05              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F05              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F05
 117+ 8F05 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8F08
 119+ 8F08              ;   Amadeus o entidad ???.
 120+ 8F08
 121+ 8F08 3A F2 88         ld a,(Ctrl_0)
 122+ 8F0B CB 77            bit 6,a
 123+ 8F0D 28 0A            jr z,8F
 124+ 8F0F
 125+ 8F0F              ; 	Dispara Amadeus.
 126+ 8F0F
 127+ 8F0F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F11 CD 7B 96         call PreviousScan
 129+ 8F14 CD 7B 96         call PreviousScan
 130+ 8F17
 131+ 8F17              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F17              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F17              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F17
 136+ 8F17 18 11            jr 10F
 137+ 8F19
 138+ 8F19              ; 	Dispara Entidad.
 139+ 8F19
 140+ 8F19 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F1C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F1C
 143+ 8F1C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F1C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F1C
 146+ 8F1C C5               push bc
 147+ 8F1D 06 10            ld b,16
 148+ 8F1F CD 6C 96     9 call NextScan
 149+ 8F22 10 FB            djnz 9B
 150+ 8F24 C1               pop bc
 151+ 8F25 CD 8F 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F28 18 06            jr 17F
 153+ 8F2A
 154+ 8F2A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F2A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F2A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F2A
 159+ 8F2A CD 8F 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F2D CD 04 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F30              ;                                                      ; _al generar el disparo.
 162+ 8F30
 163+ 8F30              ; 	LLegados a este punto tendremos:
 164+ 8F30              ;
 165+ 8F30              ;       Puntero_objeto_disparo en IY.
 166+ 8F30              ;       Rutinas_de_impresion en IX.
 167+ 8F30              ;       Puntero_de_impresion en HL.
 168+ 8F30              ;       Impacto/Dirección en BC.
 169+ 8F30
 170+ 8F30 CD 97 8F     17 call Almacena_disparo
 171+ 8F33 18 52            jr 6F                                             ; RET.
 172+ 8F35
 173+ 8F35              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F35              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F35              ;
 176+ 8F35              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F35              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F35              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F35
 180+ 8F35 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8F38
 182+ 8F38              ;   Amadeus o entidad ???.
 183+ 8F38
 184+ 8F38 3A F2 88         ld a,(Ctrl_0)
 185+ 8F3B CB 77            bit 6,a
 186+ 8F3D 28 0A            jr z,11F
 187+ 8F3F
 188+ 8F3F              ; 	Dispara Amadeus.
 189+ 8F3F
 190+ 8F3F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F41 CD 7B 96         call PreviousScan
 192+ 8F44 CD 7B 96         call PreviousScan
 193+ 8F47
 194+ 8F47              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F47              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F47              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F47              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F47
 199+ 8F47 18 11            jr 13F
 200+ 8F49
 201+ 8F49              ; 	Dispara Entidad.
 202+ 8F49
 203+ 8F49 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F4C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F4C
 206+ 8F4C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F4C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F4C
 209+ 8F4C C5               push bc
 210+ 8F4D 06 10            ld b,16
 211+ 8F4F CD 6C 96     12 call NextScan
 212+ 8F52 10 FB            djnz 12B
 213+ 8F54 C1               pop bc
 214+ 8F55
 215+ 8F55 CD 88 8F         call Ajusta_disparo_parte_derecha
 216+ 8F58 18 06            jr 18F
 217+ 8F5A
 218+ 8F5A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F5A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F5A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F5A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F5A
 223+ 8F5A CD 88 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F5D CD 04 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F60              ;                                                       ; _al generar el disparo.
 226+ 8F60
 227+ 8F60              ; LLegados a este punto tendremos:
 228+ 8F60              ;
 229+ 8F60              ;       Puntero_objeto_disparo en IY.
 230+ 8F60              ;       Rutinas_de_impresion en IX.
 231+ 8F60              ;       Puntero_de_impresion en HL.
 232+ 8F60              ;       Impacto/Dirección en BC.
 233+ 8F60
 234+ 8F60 CD 97 8F     18 call Almacena_disparo
 235+ 8F63 18 22            jr 6F                                               ; RET.
 236+ 8F65
 237+ 8F65              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F65
 239+ 8F65 28 11        3 jr z,5F
 240+ 8F67
 241+ 8F67              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F67              ;
 243+ 8F67              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F67              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F67              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F67              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F67
 248+ 8F67              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F67              ;	   ""        ""       "f9", B="1"
 250+ 8F67              ;	   ""        ""       "fb", B="2"
 251+ 8F67              ; 	   ""        ""       "fb", B="3"
 252+ 8F67
 253+ 8F67 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8F6A CD 6C 96     	call NextScan
 255+ 8F6D
 256+ 8F6D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F6D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F6D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F6D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F6D
 261+ 8F6D CD 8F 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F70
 263+ 8F70              ; 	No se produce impacto. B="$80"
 264+ 8F70              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F70
 266+ 8F70 01 80 80         ld bc,$8080
 267+ 8F73
 268+ 8F73              ; 	LLegados a este punto tendremos:
 269+ 8F73              ;
 270+ 8F73              ;       Puntero_objeto_disparo en IY.
 271+ 8F73              ;       Rutinas_de_impresion en IX.
 272+ 8F73              ;       Puntero_de_impresion en HL.
 273+ 8F73              ;       Impacto/Dirección en BC.
 274+ 8F73
 275+ 8F73 CD 97 8F         call Almacena_disparo
 276+ 8F76 18 0F            jr 6F                                           ; RET.
 277+ 8F78
 278+ 8F78              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F78              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F78              ;
 281+ 8F78              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F78              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F78              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F78              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F78
 286+ 8F78 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F7B CD 6C 96     	call NextScan
 288+ 8F7E
 289+ 8F7E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F7E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F7E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F7E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F7E
 294+ 8F7E CD 88 8F         call Ajusta_disparo_parte_derecha
 295+ 8F81
 296+ 8F81              ; 	No se produce impacto. B="$80"
 297+ 8F81              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F81
 299+ 8F81 01 80 80     15 ld bc,$8080
 300+ 8F84
 301+ 8F84              ; 	LLegados a este punto tendremos:
 302+ 8F84              ;
 303+ 8F84              ;       Puntero_objeto_disparo en IY.
 304+ 8F84              ;       Rutinas_de_impresion en IX.
 305+ 8F84              ;       Puntero_de_impresion en HL.
 306+ 8F84              ;       Impacto/Dirección en BC.
 307+ 8F84
 308+ 8F84 CD 97 8F         call Almacena_disparo
 309+ 8F87
 310+ 8F87 C9           6 ret
 311+ 8F88
 312+ 8F88              ; ----------------------------------------------------------------
 313+ 8F88              ;
 314+ 8F88              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F88              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F88              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F88
 318+ 8F88 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F89 FE 02            cp 2
 320+ 8F8B 38 01            jr c,1F
 321+ 8F8D 23               inc hl
 322+ 8F8E C9           1 ret
 323+ 8F8F
 324+ 8F8F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F90 FE 01        	cp 1
 326+ 8F92 20 01        	jr nz,1F
 327+ 8F94 2B           	dec hl
 328+ 8F95 2B           1 dec hl
 329+ 8F96 C9               ret
 330+ 8F97
 331+ 8F97              ; ----------------------------------------------------------------
 332+ 8F97              ;
 333+ 8F97              ;   25/02/23
 334+ 8F97              ;
 335+ 8F97              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F97              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F97              ;
 338+ 8F97              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F97              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F97
 341+ 8F97              Almacena_disparo
 342+ 8F97
 343+ 8F97 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F98 F1               pop af
 345+ 8F99 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F9A
 347+ 8F9A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F9B E6 01            and 1
 349+ 8F9D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F9F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F9F              ; 	Dispara AMADEUS.
 352+ 8F9F
 353+ 8F9F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F9F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F9F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F9F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F9F
 358+ 8F9F C5               push bc
 359+ 8FA0 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FA3 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FA6 A7               and a
 362+ 8FA7 ED 42            sbc hl,bc
 363+ 8FA9 CC 85 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FAC C1               pop bc
 365+ 8FAD 28 54            jr z,4F
 366+ 8FAF
 367+ 8FAF 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FB2 23               inc hl
 369+ 8FB3 23               inc hl
 370+ 8FB4 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FB7              ;                                                   ; _ Disparo_(+1).
 372+ 8FB7 18 18            jr 2F
 373+ 8FB9
 374+ 8FB9              ; Dispara una entidad.
 375+ 8FB9
 376+ 8FB9 C5           1 push bc
 377+ 8FBA 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FBD 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FC0 A7               and a
 380+ 8FC1 ED 42            sbc hl,bc
 381+ 8FC3 CC 7E 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FC6 C1               pop bc
 383+ 8FC7 28 3A            jr z,4F
 384+ 8FC9
 385+ 8FC9 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FCC 23               inc hl
 387+ 8FCD 23               inc hl
 388+ 8FCE 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FD1              ;                                                   ; _ Disparo_(+1).
 390+ 8FD1 CD 00 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FD4              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FD4              ;
 393+ 8FD4              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FD4              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FD4              ;                                                     Puntero_de_impresion en HL.
 396+ 8FD4              ;                                                     Impacto/Dirección en BC.
 397+ 8FD4
 398+ 8FD4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FD5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FD6 23               inc hl                                          ; _ al siguiente.
 401+ 8FD7 A7               and a
 402+ 8FD8 20 C0            jr nz,3B
 403+ 8FDA
 404+ 8FDA 08               ex af,af
 405+ 8FDB ED 73 16 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FDF F9               ld sp,hl
 407+ 8FE0
 408+ 8FE0 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FE2 F5               push af                                         ; Puntero de impresión.
 410+ 8FE3 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FE5 C5               push bc                                         ; Control.
 412+ 8FE6
 413+ 8FE6 ED 7B 16 89      ld sp,(Stack)
 414+ 8FEA
 415+ 8FEA              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FEA
 417+ 8FEA 21 05 89     	ld hl,Ctrl_1
 418+ 8FED CB C6        	set 0,(hl)
 419+ 8FEF
 420+ 8FEF DD E5        	push ix
 421+ 8FF1 E1               pop hl
 422+ 8FF2 F5               push af
 423+ 8FF3 DD E1            pop ix
 424+ 8FF5
 425+ 8FF5 CD A0 7F     	call Guarda_foto_registros
 426+ 8FF8
 427+ 8FF8 21 05 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FFB CB 86        	res 0,(hl)
 429+ 8FFD
 430+ 8FFD              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FFD              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FFD
 433+ 8FFD CD 85 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9000 CD 7E 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9003
 436+ 9003 C9           4 ret
 437+ 9004
 438+ 9004              ; ----------------------------------------------------------------
 439+ 9004              ;
 440+ 9004              ;   4/3/23
 441+ 9004              ;
 442+ 9004              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9004              ;   _ al generarse el disparo.
 444+ 9004              ;
 445+ 9004              ;       "$80" ..... No se produce colisión.
 446+ 9004              ;       "$81" ..... Se produce colisión.
 447+ 9004              ;
 448+ 9004              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9004              ;         _ que forman el disparo.
 450+ 9004
 451+ 9004
 452+ 9004              Comprueba_Colision
 453+ 9004
 454+ 9004              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9004
 456+ 9004 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9006 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9007
 459+ 9007 CD 3D 90         call Modifica_H_Velocidad_disparo
 460+ 900A
 461+ 900A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 900B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 900D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 900F
 465+ 900F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9011 CD 2D 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9014
 468+ 9014 7B               ld a,e
 469+ 9015 E6 01            and 1
 470+ 9017 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9019              ;                                                  ; _ para activar IMPACTO.
 472+ 9019 E1               pop hl
 473+ 901A E5               push hl
 474+ 901B CD 6C 96         call NextScan
 475+ 901E
 476+ 901E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 901F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9021 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9023              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9023 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9025 CD 2D 90         call Bucle_2
 482+ 9028
 483+ 9028 43           1 ld b,e
 484+ 9029 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 902A FD E1            pop iy
 486+ 902C C9               ret
 487+ 902D
 488+ 902D              ; ---------- ----------
 489+ 902D
 490+ 902D 06 02        Bucle_2 ld b,2
 491+ 902F FD 7E 00     2 ld a,(iy)
 492+ 9032 A6               and (hl)
 493+ 9033 28 02            jr z,1F
 494+ 9035 1E 81            ld e,$81
 495+ 9037 23           1 inc hl
 496+ 9038 FD 23            inc iy
 497+ 903A 10 F3            djnz 2B
 498+ 903C C9               ret
 499+ 903D
 500+ 903D              ; ---------- ----------
 501+ 903D              ;
 502+ 903D              ;   21/7/23
 503+ 903D
 504+ 903D              Modifica_H_Velocidad_disparo
 505+ 903D
 506+ 903D 3A 35 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9040 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9042 D0               ret nc                                         ; _ incrementamos H.
 509+ 9043 24               inc h
 510+ 9044
 511+ 9044 C9               ret
 512+ 9045
 513+ 9045              ; -------------------------------------------------------------------------------------------------------------
 514+ 9045              ;
 515+ 9045              ;   04/12/23
 516+ 9045              ;
 517+ 9045              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9045              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9045              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9045              ;
 521+ 9045              ;   MODIFICA: HL,DE,B y A.
 522+ 9045
 523+ 9045              Genera_coordenadas_X
 524+ 9045
 525+ 9045              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9045              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9045
 528+ 9045              ;   Limpiamos almacenes.
 529+ 9045
 530+ 9045 CD 76 90         call Limpia_Coordenadas_X
 531+ 9048
 532+ 9048              ;   Almacenamos coordenadas X.
 533+ 9048
 534+ 9048              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9048
 536+ 9048 2A EE 88         ld hl,(Puntero_de_impresion)
 537+ 904B 11 32 89         ld de,Coordenadas_X_Entidad
 538+ 904E 06 02            ld b,2
 539+ 9050
 540+ 9050 3A CC 88         ld a,(CTRL_DESPLZ)
 541+ 9053 A7               and a
 542+ 9054 28 01            jr z,1F
 543+ 9056 04               inc b
 544+ 9057
 545+ 9057 CD 6D 90     1 call Guarda_coordenadas_X
 546+ 905A
 547+ 905A              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 905A
 549+ 905A 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 905D 11 2F 89         ld de,Coordenadas_X_Amadeus
 551+ 9060 06 02            ld b,2
 552+ 9062
 553+ 9062 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 9065 A7               and a
 555+ 9066 28 01            jr z,2F
 556+ 9068 04               inc b
 557+ 9069
 558+ 9069 CD 6D 90     2 call Guarda_coordenadas_X
 559+ 906C
 560+ 906C              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 906C
 562+ 906C C9               ret
 563+ 906D
 564+ 906D              ; ----- ----- ----- ----- -----
 565+ 906D
 566+ 906D 7D           Guarda_coordenadas_X  ld a,l
 567+ 906E E6 1F            and $1f
 568+ 9070 12           1 ld (de),a
 569+ 9071 3C               inc a
 570+ 9072 13               inc de
 571+ 9073 10 FB            djnz 1B
 572+ 9075 C9               ret
 573+ 9076
 574+ 9076 AF           Limpia_Coordenadas_X xor a
 575+ 9077 06 06            ld b,6
 576+ 9079 21 2F 89         ld hl,Coordenadas_X_Amadeus
 577+ 907C 77           1 ld (hl),a
 578+ 907D 23               inc hl
 579+ 907E 10 FC            djnz 1B
 580+ 9080 C9               ret
 581+ 9081
 582+ 9081              ; ----- ----- ----- ----- -----
 583+ 9081
 584+ 9081              Compara_coordenadas_X
 585+ 9081
 586+ 9081 06 03            ld b,3
 587+ 9083 11 34 89         ld de,Coordenadas_X_Entidad+2
 588+ 9086
 589+ 9086 1A               ld a,(de)
 590+ 9087 A7               and a
 591+ 9088 20 01            jr nz,2F
 592+ 908A 05               dec b
 593+ 908B
 594+ 908B 1B           2 dec de
 595+ 908C 1B               dec de
 596+ 908D 21 2F 89         ld hl,Coordenadas_X_Amadeus
 597+ 9090
 598+ 9090 D5           1 push de
 599+ 9091 E5               push hl
 600+ 9092 C5               push bc
 601+ 9093
 602+ 9093 CD 9D 90         call Comparando
 603+ 9096
 604+ 9096 C1               pop bc
 605+ 9097 E1               pop hl
 606+ 9098 D1               pop de
 607+ 9099
 608+ 9099 13               inc de
 609+ 909A 10 F4            djnz 1B
 610+ 909C
 611+ 909C C9               ret
 612+ 909D
 613+ 909D              ; ----- ----- ----- ----- -----
 614+ 909D              ;
 615+ 909D              ;   4/12/23
 616+ 909D              ;
 617+ 909D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 909D
 619+ 909D 06 03        Comparando ld b,3
 620+ 909F 1A               ld a,(de)
 621+ 90A0 4E           2 ld c,(hl)
 622+ 90A1 B9               cp c
 623+ 90A2 28 04            jr z,1F
 624+ 90A4 23               inc hl
 625+ 90A5 10 F9            djnz 2B
 626+ 90A7 C9               ret
 627+ 90A8
 628+ 90A8 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90AA 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90AD 21 2A 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90B0 CB D6            set 2,(hl)
 632+ 90B2 C9               ret
 633+ 90B3
 634+ 90B3              ; -----------------------------------------------------------------------
 635+ 90B3              ;
 636+ 90B3              ;   7/12/23
 637+ 90B3              ;
 638+ 90B3
 639+ 90B3              Detecta_colision_nave_entidad
 640+ 90B3
 641+ 90B3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90B3
 643+ 90B3 FD 2A C8 88      ld iy,(Puntero_objeto)
 644+ 90B7 2A EE 88         ld hl,(Puntero_de_impresion)
 645+ 90BA
 646+ 90BA E5               push hl
 647+ 90BB
 648+ 90BB              ; ----- ----- -----
 649+ 90BB 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90BD 06 0A            ld b,10
 651+ 90BF CD EF 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90C2 7B               ld a,e
 653+ 90C3 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90C5 38 0E            jr c,3F
 655+ 90C7
 656+ 90C7              ; LLegados a este punto:
 657+ 90C7              ;
 658+ 90C7              ;   HAY COLISIÓN !!!!!.
 659+ 90C7              ;
 660+ 90C7              ;   .db (Impacto) de Amadeus a "1".
 661+ 90C7              ;   SET el bit3 de (Impacto2).
 662+ 90C7              ;
 663+ 90C7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90C7
 665+ 90C7 21 DD 88         ld hl,Impacto
 666+ 90CA 36 01            ld (hl),1
 667+ 90CC 21 2A 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90CF CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90D1 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90D3
 671+ 90D3 18 18            jr 1F
 672+ 90D5
 673+ 90D5              ; -----
 674+ 90D5
 675+ 90D5 E1           3 pop hl
 676+ 90D6 CD 6C 96         call NextScan
 677+ 90D9 E5               push hl
 678+ 90DA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 90DB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 90DD 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 90DF 30 0C            jr nc,1F
 682+ 90E1              ;                                                  ; _ 2º scanline si esto es así.
 683+ 90E1 10 DC            djnz 2B
 684+ 90E3
 685+ 90E3              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 90E3
 687+ 90E3              ; LLegados a este punto:
 688+ 90E3              ;
 689+ 90E3              ;   NO HAY COLISIÓN !!!!!.
 690+ 90E3              ;
 691+ 90E3              ;   .db (Impacto) de Amadeus a "0".
 692+ 90E3              ;   RES el bit2 de (Impacto2).
 693+ 90E3              ;
 694+ 90E3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 90E3              ;   Lo colocamos a "0".
 696+ 90E3
 697+ 90E3 21 2A 89         ld hl,Impacto2
 698+ 90E6 CB 96            res 2,(hl)
 699+ 90E8 2A 2B 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 90EB 36 00            ld (hl),0
 701+ 90ED
 702+ 90ED E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 90EE C9               ret
 704+ 90EF
 705+ 90EF               ; ---------- ----------
 706+ 90EF
 707+ 90EF C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 90F0 3A C5 88         ld a,(Columns)
 709+ 90F3 47               ld b,a
 710+ 90F4 FD 7E 00     2 ld a,(iy)
 711+ 90F7 BE               cp (hl)
 712+ 90F8 28 01            jr z,1F
 713+ 90FA
 714+ 90FA 1C               inc e
 715+ 90FB
 716+ 90FB 23           1 inc hl
 717+ 90FC FD 23            inc iy
 718+ 90FE 10 F4            djnz 2B
 719+ 9100 C1               pop bc
 720+ 9101 C9               ret
 721+ 9102
 722+ 9102              ; -------------------------------------------------------------------------------------------------------------
 723+ 9102              ;
 724+ 9102              ;   13/03/23
 725+ 9102              ;
 726+ 9102              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9102              ;
 728+ 9102              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9102
 730+ 9102 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9105 7E               ld a,(hl)
 732+ 9106 A7               and a
 733+ 9107 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9108
 735+ 9108 44               ld b,h
 736+ 9109 4D               ld c,l
 737+ 910A 2A 1E 89         ld hl,(Stack_snapshot_disparos)
 738+ 910D E5               push hl
 739+ 910E A7               and a
 740+ 910F ED 42            sbc hl,bc
 741+ 9111 E5               push hl
 742+ 9112 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9113
 744+ 9113 E1               pop hl
 745+ 9114 54               ld d,h
 746+ 9115 5D               ld e,l
 747+ 9116 1B               dec de
 748+ 9117 ED B8            lddr                                                ; Limpiamos.
 749+ 9119
 750+ 9119 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 911C 22 1E 89         ld (Stack_snapshot_disparos),hl
 752+ 911F
 753+ 911F C9               ret
 754+ 9120
 755+ 9120              ; -------------------------------------------------------------------------------------------------------------
 756+ 9120              ;
 757+ 9120              ;   18/07/23
 758+ 9120              ;
 759+ 9120
 760+ 9120              Motor_de_disparos
 761+ 9120
 762+ 9120              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9120
 764+ 9120 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9123 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9126
 767+ 9126 CD 00 8D     2 call Extrae_address
 768+ 9129 7E               ld a,(hl)
 769+ 912A A7               and a
 770+ 912B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 912D
 772+ 912D              ; ----- ----- ----- ----- ----- -----
 773+ 912D
 774+ 912D C5               push bc
 775+ 912E CD F2 91         call foto_disparo_a_borrar
 776+ 9131
 777+ 9131              ; Existe colisión con este disparo???
 778+ 9131
 779+ 9131 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9132 7E               ld a,(hl)
 781+ 9133 2B               dec hl
 782+ 9134 E6 01            and 1
 783+ 9136 28 1D            jr z,9F
 784+ 9138
 785+ 9138              ;   En este punto:
 786+ 9138              ;
 787+ 9138              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9138              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9138              ;   _con la entidad).
 790+ 9138              ;
 791+ 9138              ;   Disparo_2A defw 0                                ; Control.
 792+ 9138              ;    defw 0                                          ; Puntero objeto.
 793+ 9138              ;    defw 0                                          ; Puntero de impresión.
 794+ 9138              ;    defw 0                                          ; Rutina de impresión.
 795+ 9138
 796+ 9138 E5               push hl
 797+ 9139
 798+ 9139 06 04            ld b,4
 799+ 913B 23           19 inc hl
 800+ 913C 10 FD            djnz 19B
 801+ 913E
 802+ 913E CD 00 8D         call Extrae_address
 803+ 9141 CD 59 9D         call Genera_coordenadas_disparo
 804+ 9144
 805+ 9144              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9144
 807+ 9144 21 2D 89         ld hl,Coordenadas_disparo_certero
 808+ 9147 72               ld (hl),d
 809+ 9148 23               inc hl
 810+ 9149 73               ld (hl),e
 811+ 914A
 812+ 914A              ; Elimino el disparo de la base de datos.
 813+ 914A
 814+ 914A E1               pop hl
 815+ 914B CD 71 92         call Elimina_disparo_de_base_de_datos
 816+ 914E 21 2A 89         ld hl,Impacto2
 817+ 9151 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9153
 819+ 9153 18 06            jr 11F
 820+ 9155
 821+ 9155 CD 1B 92     9 call Mueve_disparo
 822+ 9158 CD F2 91         call foto_disparo_a_borrar
 823+ 915B
 824+ 915B C1           11 pop bc
 825+ 915C 18 04            jr 7F
 826+ 915E
 827+ 915E              ; ----- ----- ----- ----- ----- -----
 828+ 915E
 829+ 915E ED 42        1 sbc hl,bc
 830+ 9160 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9162
 832+ 9162 2A 28 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9165 23               inc hl
 834+ 9166 23               inc hl
 835+ 9167 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 916A 18 BA            jr 2B
 837+ 916C
 838+ 916C CD 85 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 916F              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 916F
 841+ 916F              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 916F
 843+ 916F 01 6A 85         ld bc,Disparo_11
 844+ 9172 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9175
 846+ 9175 CD 00 8D     5 call Extrae_address
 847+ 9178 7E               ld a,(hl)
 848+ 9179 A7               and a
 849+ 917A 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 917C
 851+ 917C              ; ----- ----- ----- ----- ----- -----
 852+ 917C
 853+ 917C C5               push bc
 854+ 917D CD F2 91         call foto_disparo_a_borrar
 855+ 9180
 856+ 9180              ; Existe colisión con este disparo???
 857+ 9180
 858+ 9180 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9181 7E               ld a,(hl)
 860+ 9182 2B               dec hl
 861+ 9183 E6 01            and 1
 862+ 9185 28 4D            jr z,10F
 863+ 9187
 864+ 9187              ;! La colisión se produce con Amadeus???
 865+ 9187              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9187
 867+ 9187 E5               push hl
 868+ 9188
 869+ 9188 06 04            ld b,4
 870+ 918A 23           16 inc hl
 871+ 918B 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 918D
 873+ 918D CD 00 8D         call Extrae_address
 874+ 9190 CD 59 9D         call Genera_coordenadas_disparo
 875+ 9193
 876+ 9193 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9194 FE 16            cp $16
 878+ 9196 38 2A            jr c,15F
 879+ 9198
 880+ 9198
 881+ 9198              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9198
 883+ 9198 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9199
 885+ 9199              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9199
 887+ 9199 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 919C
 889+ 919C              ; Coordenada X de Amadeus en D.
 890+ 919C
 891+ 919C 7D               ld a,l
 892+ 919D E6 1F            and $1F
 893+ 919F 57               ld d,a
 894+ 91A0
 895+ 91A0 21 86 85         ld hl,Amadeus_db+8
 896+ 91A3 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91A4
 898+ 91A4 21 2F 89         ld hl,Coordenadas_X_Amadeus
 899+ 91A7 CD 6D 90         call Guarda_coordenadas_X
 900+ 91AA
 901+ 91AA D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91AB
 903+ 91AB              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91AB
 905+ 91AB 06 02            ld b,2
 906+ 91AD C5           20 push bc
 907+ 91AE
 908+ 91AE 06 03            ld b,3
 909+ 91B0 21 2F 89         ld hl,Coordenadas_X_Amadeus
 910+ 91B3 7E           18 ld a,(hl)
 911+ 91B4 BA               cp d
 912+ 91B5 20 04            jr nz,17F
 913+ 91B7
 914+ 91B7              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91B7
 916+ 91B7 C1               pop bc
 917+ 91B8 E1               pop hl
 918+ 91B9 18 0D            jr 14F
 919+ 91BB
 920+ 91BB 23           17 inc hl
 921+ 91BC 10 F5            djnz 18B
 922+ 91BE
 923+ 91BE 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91BF
 925+ 91BF C1               pop bc
 926+ 91C0 10 EB            djnz 20B
 927+ 91C2
 928+ 91C2
 929+ 91C2              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91C2              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91C2
 932+ 91C2 E1           15 pop hl
 933+ 91C3 23               inc hl
 934+ 91C4 35               dec (hl)
 935+ 91C5 2B               dec hl
 936+ 91C6 18 0C            jr 10F
 937+ 91C8
 938+ 91C8              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91C8              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91C8
 941+ 91C8 E5           14 push hl
 942+ 91C9 CD 71 92         call Elimina_disparo_de_base_de_datos
 943+ 91CC 21 2A 89         ld hl,Impacto2
 944+ 91CF CB CE            set 1,(hl)
 945+ 91D1 E1               pop hl
 946+ 91D2 18 06            jr 12F
 947+ 91D4
 948+ 91D4              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91D4
 950+ 91D4 CD 1B 92     10 call Mueve_disparo
 951+ 91D7 CD F2 91         call foto_disparo_a_borrar
 952+ 91DA C1           12 pop bc
 953+ 91DB
 954+ 91DB 18 04            jr 8F
 955+ 91DD
 956+ 91DD              ; ----- ----- ----- ----- ----- -----
 957+ 91DD
 958+ 91DD ED 42        4 sbc hl,bc
 959+ 91DF 28 0A            jr z,6F
 960+ 91E1
 961+ 91E1 2A 26 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 91E4 23               inc hl
 963+ 91E5 23               inc hl
 964+ 91E6 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 91E9 18 8A            jr 5B
 966+ 91EB
 967+ 91EB CD 7E 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 91EE CD 76 90         call Limpia_Coordenadas_X
 969+ 91F1 C9               ret
 970+ 91F2
 971+ 91F2              ; ------------------------------------------------------------------
 972+ 91F2
 973+ 91F2              foto_disparo_a_borrar
 974+ 91F2
 975+ 91F2 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 91F3 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 91F4 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 91F5
 979+ 91F5 E5               push hl
 980+ 91F6 23               inc hl
 981+ 91F7 23               inc hl
 982+ 91F8 ED 73 16 89      ld (Stack),sp
 983+ 91FC F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 91FD FD E1            pop iy
 985+ 91FF DD E1            pop ix
 986+ 9201 E1               pop hl
 987+ 9202 ED 7B 16 89      ld sp,(Stack)
 988+ 9206 3A 05 89         ld a,(Ctrl_1)
 989+ 9209 CB C7            set 0,a
 990+ 920B 32 05 89         ld (Ctrl_1),a
 991+ 920E CD A0 7F         call Guarda_foto_registros
 992+ 9211 3A 05 89         ld a,(Ctrl_1)
 993+ 9214 CB 87            res 0,a
 994+ 9216 32 05 89         ld (Ctrl_1),a
 995+ 9219 E1               pop hl
 996+ 921A C9               ret
 997+ 921B
 998+ 921B              ;---------------------------------------------------
 999+ 921B              ;
1000+ 921B              ;   18/07/23
1001+ 921B              ;
1002+ 921B
1003+ 921B              Mueve_disparo
1004+ 921B
1005+ 921B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 921B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 921B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 921B
1009+ 921B E5               push hl
1010+ 921C
1011+ 921C 7E               ld a,(hl)
1012+ 921D
1013+ 921D 06 04            ld b,4
1014+ 921F 23           1 inc hl
1015+ 9220 10 FD            djnz 1B
1016+ 9222
1017+ 9222              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9222
1019+ 9222 CD 00 8D         call Extrae_address
1020+ 9225
1021+ 9225 E6 01            and 1
1022+ 9227 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9229
1024+ 9229              ; Disparo hacia arriba, (Amadeus).
1025+ 9229
1026+ 9229              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9229              ; _ de la dificultad.
1028+ 9229
1029+ 9229 CD 7B 96         call PreviousScan
1030+ 922C CD 7B 96         call PreviousScan
1031+ 922F CD 7B 96         call PreviousScan
1032+ 9232 CD 7B 96         call PreviousScan
1033+ 9235
1034+ 9235              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9235
1036+ 9235 7C               ld a,h
1037+ 9236 FE 40            cp $40
1038+ 9238 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 923A
1040+ 923A              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 923A
1042+ 923A EB               ex de,hl
1043+ 923B 06 04            ld b,4
1044+ 923D 2B           6 dec hl
1045+ 923E 10 FD            djnz 6B
1046+ 9240
1047+ 9240 CD 71 92         call Elimina_disparo_de_base_de_datos
1048+ 9243 E1               pop hl
1049+ 9244 18 10            jr 7F
1050+ 9246
1051+ 9246              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9246              ; HL contiene el puntero de impresión del disparo.
1053+ 9246              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9246
1055+ 9246 D5           3 push de
1056+ 9247 C5               push bc
1057+ 9248
1058+ 9248 CD 04 90         call Comprueba_Colision
1059+ 924B
1060+ 924B              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 924B
1062+ 924B 78               ld a,b
1063+ 924C
1064+ 924C C1               pop bc
1065+ 924D D1               pop de
1066+ 924E
1067+ 924E EB               ex de,hl
1068+ 924F
1069+ 924F 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9250 23               inc hl                                      ; _ movimiento.
1071+ 9251 72               ld (hl),d
1072+ 9252
1073+ 9252 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9253
1075+ 9253 23               inc hl                                      ; _ en curso.
1076+ 9254 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9255 2B               dec hl
1078+ 9256
1079+ 9256 C9           7 ret
1080+ 9257
1081+ 9257              ; Disparo hacia abajo, (Entidad).
1082+ 9257
1083+ 9257 3A 35 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 925A 47               ld b,a
1085+ 925B
1086+ 925B CD 6C 96     4 call NextScan
1087+ 925E 10 FB            djnz 4B
1088+ 9260
1089+ 9260              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9260
1091+ 9260 7C               ld a,h
1092+ 9261 FE 58            cp $58
1093+ 9263 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9265
1095+ 9265 EB               ex de,hl
1096+ 9266 06 04            ld b,4
1097+ 9268 2B           5 dec hl
1098+ 9269 10 FD            djnz 5B
1099+ 926B
1100+ 926B CD 71 92         call Elimina_disparo_de_base_de_datos
1101+ 926E E1               pop hl
1102+ 926F 18 E5            jr 7B
1103+ 9271
1104+ 9271              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9271
1106+ 9271 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9274 AF               xor a
1108+ 9275 77               ld (hl),a
1109+ 9276 54               ld d,h
1110+ 9277 5D               ld e,l
1111+ 9278 13               inc de
1112+ 9279 ED B0            ldir
1113+ 927B C9               ret
1114+ 927C
1115+ 927C              ; -----------------------------------------------------------------
1116+ 927C              ;
1117+ 927C              ;   7/12/23
1118+ 927C              ;
1119+ 927C
1120+ 927C 3A 2A 89     Selector_de_impactos ld a,(Impacto2)
1121+ 927F A7               and a
1122+ 9280 C8               ret z
1123+ 9281
1124+ 9281              ; Analizamos si hay impacto por disparos.
1125+ 9281
1126+ 9281              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9281
1128+ 9281 CB 4F            bit 1,a
1129+ 9283 28 07            jr z,1F
1130+ 9285
1131+ 9285 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9288 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 928A 18 08            jr 2F
1134+ 928C
1135+ 928C CB 47        1 bit 0,a
1136+ 928E C8               ret z
1137+ 928F
1138+ 928F              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 928F
1140+ 928F 21 05 89         ld hl,Ctrl_1
1141+ 9292 CB D6            set 2,(hl)
1142+ 9294
1143+ 9294 C9           2 ret
1144+ 9295
1145+ 9295              ; -----------------------------------------------------------------
1146+ 9295              ;
1147+ 9295              ;   25/04/23
1148+ 9295              ;
1149+ 9295
1150+ 9295              Determina_resultado_comparativa
1151+ 9295
1152+ 9295              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9295              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9295              ;
1155+ 9295              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9295              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9295              ;
1158+ 9295              ;   SBC HL,DE
1159+ 9295
1160+ 9295              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9295              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9295
1163+ 9295              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9295              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9295
1166+ 9295
1167+ 9295 3A D8 88         ld a,(Cuad_objeto)
1168+ 9298 FE 02            cp 2
1169+ 929A 28 26            jr z,2F
1170+ 929C 38 24            jr c,2F
1171+ 929E
1172+ 929E              ; Cuadrantes 3º y 4º
1173+ 929E
1174+ 929E E6 01            and 1
1175+ 92A0 28 10            jr z,4F
1176+ 92A2
1177+ 92A2              ; Cuadrante 3º
1178+ 92A2
1179+ 92A2 7C               ld a,h
1180+ 92A3 06 00            ld b,0
1181+ 92A5
1182+ 92A5 CD 30 93         call Compara_cositas_H3
1183+ 92A8
1184+ 92A8 04               inc b
1185+ 92A9 05               dec b
1186+ 92AA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92AB
1188+ 92AB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92AC 06 00            ld b,0
1190+ 92AE
1191+ 92AE CD 42 93         call Compara_cositas_L3
1192+ 92B1 C9               ret
1193+ 92B2
1194+ 92B2              ; Cuadrante 4º
1195+ 92B2
1196+ 92B2 7C           4 ld a,h
1197+ 92B3 06 00            ld b,0
1198+ 92B5
1199+ 92B5 CD 54 93         call Compara_cositas_H4
1200+ 92B8
1201+ 92B8 04               inc b
1202+ 92B9 05               dec b
1203+ 92BA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92BB
1205+ 92BB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92BC 06 00            ld b,0
1207+ 92BE
1208+ 92BE CD 6A 93         call Compara_cositas_L4
1209+ 92C1 C9               ret
1210+ 92C2
1211+ 92C2              ; Cuadrantes 1º y 2º.
1212+ 92C2
1213+ 92C2 28 10        2 jr z,3F
1214+ 92C4
1215+ 92C4              ; 1er Cuadrante
1216+ 92C4
1217+ 92C4 7C               ld a,h
1218+ 92C5 06 00            ld b,0
1219+ 92C7
1220+ 92C7 CD 08 93         call Compara_cositas_H1
1221+ 92CA
1222+ 92CA 04               inc b
1223+ 92CB 05               dec b
1224+ 92CC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92CD
1226+ 92CD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92CE 06 00            ld b,0
1228+ 92D0
1229+ 92D0 CD 1E 93         call Compara_cositas_L1
1230+ 92D3 C9               ret
1231+ 92D4
1232+ 92D4
1233+ 92D4              ; 2º Cuadrante
1234+ 92D4
1235+ 92D4 7C           3 ld a,h
1236+ 92D5 06 00            ld b,0
1237+ 92D7
1238+ 92D7 CD E4 92         call Compara_cositas_H2
1239+ 92DA
1240+ 92DA 04               inc b
1241+ 92DB 05               dec b
1242+ 92DC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 92DD
1244+ 92DD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 92DE 06 00            ld b,0
1246+ 92E0
1247+ 92E0 CD F6 92         call Compara_cositas_L2
1248+ 92E3 C9               ret
1249+ 92E4
1250+ 92E4 A7           Compara_cositas_H2 and a
1251+ 92E5 28 0D            jr z,1F
1252+ 92E7              ;    cp $fd
1253+ 92E7              ;    jr z,1F
1254+ 92E7              ;    cp $fe
1255+ 92E7              ;    jr z,1F
1256+ 92E7 FE FF            cp $ff
1257+ 92E9 28 09            jr z,1F
1258+ 92EB FE 01            cp $01
1259+ 92ED 28 05            jr z,1F
1260+ 92EF FE 02            cp $02
1261+ 92F1 28 01            jr z,1F
1262+ 92F3 C0               ret nz
1263+ 92F4 04           1 inc b
1264+ 92F5 C9               ret
1265+ 92F6
1266+ 92F6 A7           Compara_cositas_L2 and a
1267+ 92F7 28 0D            jr z,1F
1268+ 92F9              ;    cp $fd
1269+ 92F9              ;    jr z,1F
1270+ 92F9 FE FE            cp $fe
1271+ 92FB 28 09            jr z,1F
1272+ 92FD FE FF            cp $ff
1273+ 92FF 28 05            jr z,1F
1274+ 9301 FE 01            cp $01
1275+ 9303 28 01            jr z,1F
1276+ 9305              ;    cp $02
1277+ 9305              ;    jr z,1F
1278+ 9305 C0               ret nz
1279+ 9306 04           1 inc b
1280+ 9307 C9               ret
1281+ 9308
1282+ 9308 A7           Compara_cositas_H1 and a
1283+ 9309 28 11            jr z,1F
1284+ 930B              ;    cp $fd
1285+ 930B              ;    jr z,1F
1286+ 930B              ;    cp $fe
1287+ 930B              ;    jr z,1F
1288+ 930B FE FF            cp $ff
1289+ 930D 28 0D            jr z,1F
1290+ 930F FE 01            cp $01
1291+ 9311 28 09            jr z,1F
1292+ 9313 FE 02            cp $02
1293+ 9315 28 05            jr z,1F
1294+ 9317 FE 03            cp $03
1295+ 9319 28 01            jr z,1F
1296+ 931B C0               ret nz
1297+ 931C 04           1 inc b
1298+ 931D C9               ret
1299+ 931E
1300+ 931E A7           Compara_cositas_L1 and a
1301+ 931F 28 0D            jr z,1F
1302+ 9321              ;    cp $fd
1303+ 9321              ;    jr z,1F
1304+ 9321              ;    cp $fe
1305+ 9321              ;    jr z,1F
1306+ 9321              ;    cp $ff
1307+ 9321              ;    jr z,1F
1308+ 9321 FE 01            cp $01
1309+ 9323 28 09            jr z,1F
1310+ 9325 FE 02            cp $02
1311+ 9327 28 05            jr z,1F
1312+ 9329 FE 03            cp $03
1313+ 932B 28 01            jr z,1F
1314+ 932D C0               ret nz
1315+ 932E 04           1 inc b
1316+ 932F C9               ret
1317+ 9330
1318+ 9330 A7           Compara_cositas_H3 and a
1319+ 9331 28 0D            jr z,1F
1320+ 9333              ;    cp $fd
1321+ 9333              ;    jr z,1F
1322+ 9333 FE FE            cp $fe
1323+ 9335 28 09            jr z,1F
1324+ 9337 FE FF            cp $ff
1325+ 9339 28 05            jr z,1F
1326+ 933B FE 01            cp $01
1327+ 933D 28 01            jr z,1F
1328+ 933F              ;    cp $02
1329+ 933F              ;    jr z,1F
1330+ 933F              ;    cp $03
1331+ 933F              ;    jr z,1F
1332+ 933F C0               ret nz
1333+ 9340 04           1 inc b
1334+ 9341 C9               ret
1335+ 9342
1336+ 9342 A7           Compara_cositas_L3 and a
1337+ 9343 28 0D            jr z,1F
1338+ 9345              ;    cp $fd
1339+ 9345              ;    jr z,1F
1340+ 9345              ;    cp $fe
1341+ 9345              ;    jr z,1F
1342+ 9345              ;    cp $ff
1343+ 9345              ;    jr z,1F
1344+ 9345 FE 01            cp $01
1345+ 9347 28 09            jr z,1F
1346+ 9349 FE 02            cp $02
1347+ 934B 28 05            jr z,1F
1348+ 934D FE 03            cp $03
1349+ 934F 28 01            jr z,1F
1350+ 9351 C0               ret nz
1351+ 9352 04           1 inc b
1352+ 9353 C9               ret
1353+ 9354
1354+ 9354 A7           Compara_cositas_H4 and a
1355+ 9355 28 11            jr z,1F
1356+ 9357 FE FD            cp $fd
1357+ 9359 28 0D            jr z,1F
1358+ 935B FE FE            cp $fe
1359+ 935D 28 09            jr z,1F
1360+ 935F FE FF            cp $ff
1361+ 9361 28 05            jr z,1F
1362+ 9363 FE 01            cp $01
1363+ 9365 28 01            jr z,1F
1364+ 9367              ;    cp $02
1365+ 9367              ;    jr z,1F
1366+ 9367              ;    cp $03
1367+ 9367              ;    jr z,1F
1368+ 9367 C0               ret nz
1369+ 9368 04           1 inc b
1370+ 9369 C9               ret
1371+ 936A
1372+ 936A A7           Compara_cositas_L4 and a
1373+ 936B 28 0D            jr z,1F
1374+ 936D              ;    cp $fd
1375+ 936D              ;    jr z,1F
1376+ 936D FE FE            cp $fe
1377+ 936F 28 09            jr z,1F
1378+ 9371 FE FF            cp $ff
1379+ 9373 28 05            jr z,1F
1380+ 9375 FE 01            cp $01
1381+ 9377 28 01            jr z,1F
1382+ 9379              ;    cp $02
1383+ 9379              ;    jr z,1F
1384+ 9379              ;    cp $03
1385+ 9379              ;    jr z,1F
1386+ 9379 C0               ret nz
1387+ 937A 04           1 inc b
1388+ 937B C9               ret
# file closed: Disparo.asm
1763  937C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 937C              ; ******************************************************************************************************************************************************************************************
   2+ 937C              ;
   3+ 937C              ; 26/06/23
   4+ 937C              ;
   5+ 937C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 937C
   7+ 937C              Draw
   8+ 937C
   9+ 937C CD 60 96     	call Prepara_draw
  10+ 937F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9380 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9381 28 05        	jr z,2F
  13+ 9383
  14+ 9383 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9386 18 0C        	jr 1F
  16+ 9388
  17+ 9388 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 938B 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 938E CD 1D 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9391              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9391 CD E4 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 9394
  23+ 9394 3A F2 88     1 ld a,(Ctrl_0)
  24+ 9397 CB 6F        	bit 5,a
  25+ 9399 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 939B
  27+ 939B CD B3 93     	call Comprueba_limite_horizontal
  28+ 939E CD 43 94     	call Comprueba_limite_vertical
  29+ 93A1
  30+ 93A1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93A1              ; -----------------------
  32+ 93A1              ; -----------------------
  33+ 93A1              ; -----------------------
  34+ 93A1
  35+ 93A1 CD 90 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93A4 CD C7 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93A7 CD 26 96     	call Define_rutina_de_impresion
  38+ 93AA
  39+ 93AA 3A F2 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93AD CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93AF 32 F2 88     	ld (Ctrl_0),a
  42+ 93B2
  43+ 93B2 C9           	ret
  44+ 93B3
  45+ 93B3              ; *******************************************************************************************************************************************************************************************
  46+ 93B3              ;	21/01/23
  47+ 93B3              ;
  48+ 93B3              ; 	Comprueba_limite_horizontal.
  49+ 93B3              ;
  50+ 93B3              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93B3              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93B3              ;
  53+ 93B3              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93B3              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93B3              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93B3              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93B3
  58+ 93B3
  59+ 93B3
  60+ 93B3 3A F2 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93B6 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93B8 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93BA E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93BC 32 F2 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93BF 18 09            jr 6F
  66+ 93C1 CB 5F        1 bit 3,a
  67+ 93C3 28 0A            jr z,2F
  68+ 93C5 E6 F7            and $f7
  69+ 93C7 32 F2 88         ld (Ctrl_0),a
  70+ 93CA CD 1D 95     6 call Inicializacion
  71+ 93CD 18 5B            jr 5F
  72+ 93CF E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 93D0
  74+ 93D0              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 93D0              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 93D0
  77+ 93D0 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 93D1 2A 00 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 93D4 CD 7F 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 93D7 67           	ld h,a
  81+ 93D8 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 93D9 CD 7F 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 93DC 67           	ld h,a
  84+ 93DD A7           	and a
  85+ 93DE ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 93E0 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 93E1 3A D8 88     	ld a,(Cuad_objeto)
  88+ 93E4 FE 02        	cp 2
  89+ 93E6 38 1E        	jr c,3F
  90+ 93E8 28 1C        	jr z,3F
  91+ 93EA 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 93EB 28 23            jr z,7F
  93+ 93ED 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 93EF 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 93F1 E1           	pop hl
  96+ 93F2
  97+ 93F2              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 93F2              ; _para indicar con E="2" en caso necesario.
  99+ 93F2
 100+ 93F2 E5               push hl
 101+ 93F3 C5               push bc
 102+ 93F4 CD 7F 99     	call calcula_tercio
 103+ 93F7 FE 01        	cp 1
 104+ 93F9 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 93FB CD 2B 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 93FE 28 26            jr z,9F
 107+ 9400 38 24            jr c,9F
 108+ 9402 1E 00        11 ld e,0
 109+ 9404 18 22            jr 8F
 110+ 9406 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9407 28 07        	jr z, 7F
 112+ 9409 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 940B 1E 00         	ld e,0
 114+ 940D E1           	pop hl
 115+ 940E 18 04        	jr 4F
 116+ 9410 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9412 18 15            jr 10F
 118+ 9414
 119+ 9414              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9414              ; _para indicar con E="2" en caso necesario.
 121+ 9414
 122+ 9414 E5           4 push hl
 123+ 9415 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9416 CD 7F 99     	call calcula_tercio
 125+ 9419 FE 01        	cp 1
 126+ 941B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 941D CD 2B 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9420 28 04            jr z,9F
 129+ 9422 30 02            jr nc,9F
 130+ 9424 18 02        	jr 8F
 131+ 9426 1E 02        9 ld e,2
 132+ 9428 C1           8 pop bc
 133+ 9429 E1           10 pop hl
 134+ 942A C9           5 ret
 135+ 942B
 136+ 942B              ; --------------------
 137+ 942B              ;
 138+ 942B              ; 25/08/22
 139+ 942B
 140+ 942B CD 7F 99     Comprueba_centro call calcula_tercio
 141+ 942E 67               ld h,a
 142+ 942F 08           	ex af,af
 143+ 9430 FE 02        	cp 2
 144+ 9432 38 07        	jr c,1F
 145+ 9434 28 05        	jr z,1F
 146+ 9436 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9439 18 03        	jr 2F
 148+ 943B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 943E 08           2 ex af,af
 150+ 943F A7               and a
 151+ 9440 ED 42            sbc hl,bc
 152+ 9442 C9               ret
 153+ 9443
 154+ 9443              ; *********************************************************************************************************************************************************************************************
 155+ 9443              ;
 156+ 9443              ;   16/8/22
 157+ 9443              ;
 158+ 9443              ;	Comprueba_limite_vertical
 159+ 9443              ;
 160+ 9443              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9443              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9443              ;
 163+ 9443
 164+ 9443 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9446 7D           	ld a,l
 166+ 9447 E6 1F        	and $1F
 167+ 9449 57           	ld d,a
 168+ 944A 3A 02 89     	ld a,(Limite_vertical)
 169+ 944D BA           	cp d 											; Límite - Posición.
 170+ 944E 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 944F 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9452 CB 47        	bit 0,a
 173+ 9454 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9456
 175+ 9456              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9456
 177+ 9456 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9457 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9459
 180+ 9459              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9459              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9459
 183+ 9459 3A CA 88         ld a,(Coordenada_X)
 184+ 945C 16 0F            ld d,Centro_izquierda
 185+ 945E A7               and a
 186+ 945F 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9460 28 1E            jr z,3F
 188+ 9462 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9464              ;                                                    ; _salimos sin modificar nada.
 190+ 9464 18 0E            jr 2F
 191+ 9466 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9467 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9469
 194+ 9469              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9469              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9469
 197+ 9469 3A CA 88         ld a,(Coordenada_X)
 198+ 946C 16 10            ld d,Centro_derecha
 199+ 946E A7               and a
 200+ 946F 92               sub d
 201+ 9470 28 0E            jr z,3F
 202+ 9472 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9474              ;                                                    ; _salimos sin modificar nada.
 204+ 9474 CB 43        2 bit 0,e
 205+ 9476 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9478 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9479 CD 0D 95         call Modificaccionne
 208+ 947C C1           	pop bc
 209+ 947D CD 1D 95         call Inicializacion
 210+ 9480 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9481
 212+ 9481              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9481
 214+ 9481 C5           4 push bc
 215+ 9482 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9485 0A           	ld a,(bc)
 217+ 9486 3D           	dec a
 218+ 9487 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9488 7D           	ld a,l
 220+ 9489 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 948A CB 47        	bit 0,a
 222+ 948C 28 03        	jr z,5F
 223+ 948E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 948F 18 2E        	jr 7F
 225+ 9491
 226+ 9491              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9491
 228+ 9491 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9492 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9493 3A F2 88     	ld a,(Ctrl_0)
 231+ 9496 CB 4F        	bit 1,a
 232+ 9498 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 949A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 949B
 235+ 949B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 949B
 237+ 949B 1C               inc e
 238+ 949C 1D               dec e
 239+ 949D 20 07            jr nz,12F
 240+ 949F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94A0 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94A1 22 C6 88     	ld (Posicion_actual),hl
 243+ 94A4 18 44        13 jr 9F
 244+ 94A6 CB 43        12 bit 0,e
 245+ 94A8 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94AA              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94AA C1           	pop bc
 248+ 94AB 18 D3        	jr 3B
 249+ 94AD 80           14 add b
 250+ 94AE 6F               ld l,a
 251+ 94AF 22 C6 88     	ld (Posicion_actual),hl
 252+ 94B2 CD 0D 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94B5 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94B7 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94B9 32 F2 88         ld (Ctrl_0),a
 256+ 94BC F1           	pop af
 257+ 94BD 18 2B        	jr 9F
 258+ 94BF
 259+ 94BF              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94BF
 261+ 94BF F5           7 push af
 262+ 94C0 3A F2 88     	ld a,(Ctrl_0)
 263+ 94C3 CB 47        	bit 0,a
 264+ 94C5 20 1D        	jr nz,8F
 265+ 94C7 F1           	pop af
 266+ 94C8
 267+ 94C8              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94C8
 269+ 94C8 1C           	inc e
 270+ 94C9 1D               dec e
 271+ 94CA 20 07            jr nz,10F
 272+ 94CC 90           	sub b
 273+ 94CD 6F               ld l,a
 274+ 94CE 22 C6 88     	ld (Posicion_actual),hl
 275+ 94D1 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94D3              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94D3 CB 43        10 bit 0,e
 278+ 94D5 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 94D7              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 94D7 C1           	pop bc
 281+ 94D8 18 A6        	jr 3B
 282+ 94DA 90           16 sub b
 283+ 94DB 6F               ld l,a
 284+ 94DC 22 C6 88     	ld (Posicion_actual),hl
 285+ 94DF CD 0D 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 94E2 18 06            jr 9F
 287+ 94E4 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 94E6 32 F2 88         ld (Ctrl_0),a
 289+ 94E9 F1           	pop af
 290+ 94EA C1           9 pop bc
 291+ 94EB 1E 00        	ld e,0
 292+ 94ED CD 1D 95         call Inicializacion
 293+ 94F0 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 94F1 08           	ex af,af
 295+ 94F2 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 94F3 18 8B            jr 3B
 297+ 94F5
 298+ 94F5              ; --------------------
 299+ 94F5
 300+ 94F5 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 94F7 CD 7B 96     1 call PreviousScan
 302+ 94FA 10 FB            djnz 1B
 303+ 94FC 22 C6 88     	ld (Posicion_actual),hl
 304+ 94FF AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9500 C9           	ret
 306+ 9501
 307+ 9501              ; --------------------
 308+ 9501
 309+ 9501 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9503 CD 6C 96     1 call NextScan
 311+ 9506 10 FB            djnz 1B
 312+ 9508 22 C6 88     	ld (Posicion_actual),hl
 313+ 950B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 950C C9           	ret
 315+ 950D
 316+ 950D              ; --------------------
 317+ 950D              ;
 318+ 950D              ;	22/01/23
 319+ 950D              ;
 320+ 950D              ;	E="1". Hemos cambiado de cuadrante.
 321+ 950D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 950D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 950D
 324+ 950D
 325+ 950D              Modificaccionne
 326+ 950D
 327+ 950D 3A D8 88     	ld a,(Cuad_objeto)
 328+ 9510 FE 02        	cp 2
 329+ 9512 CC F5 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9515 DC F5 94         call c,Modifica_Pos_actual
 331+ 9518 C8           	ret z
 332+ 9519 CD 01 95         call Modifica_Pos_actual2
 333+ 951C C9               ret
 334+ 951D
 335+ 951D              ; *************************************************************************************************************************************************************************************************
 336+ 951D              ;
 337+ 951D              ;	13/8/22
 338+ 951D              ;
 339+ 951D              ;	Inicializacion
 340+ 951D              ;
 341+ 951D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 951D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 951D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 951D              ;
 345+ 951D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 951D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 951D              ;	_ desaparece/aparece.
 348+ 951D
 349+ 951D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 951D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 951D              ;
 352+ 951D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 951D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 951D              ; 		   [E] ="0"
 355+ 951D
 356+ 951D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 951D
 358+ 951D CD 7F 99     Inicializacion call calcula_tercio
 359+ 9520 28 36        	jr z,primit
 360+ 9522 E6 02        	and 2
 361+ 9524 20 07        	jr nz,segmit
 362+ 9526 7D           	ld a,l
 363+ 9527 FE 7F        	cp $7f
 364+ 9529 38 2D        	jr c,primit
 365+ 952B 28 2B        	jr z,primit
 366+ 952D CD 8A 95     segmit call column
 367+ 9530 38 13        	jr c,tercuad
 368+ 9532 3E 04        cuarcuad ld a,4
 369+ 9534 32 D8 88     	ld (Cuad_objeto),a
 370+ 9537 21 20 48     	ld hl,$4820
 371+ 953A 22 00 89     	ld (Limite_horizontal),hl
 372+ 953D 21 02 89     	ld hl,Limite_vertical
 373+ 9540 36 0D        	ld (hl),$0d
 374+ 9542 08           	ex af,af
 375+ 9543 18 3C        	jr 1F
 376+ 9545              tercuad
 377+ 9545 3E 03        	ld a,3
 378+ 9547 32 D8 88     	ld (Cuad_objeto),a
 379+ 954A 21 20 48     	ld hl,$4820
 380+ 954D 22 00 89     	ld (Limite_horizontal),hl
 381+ 9550 21 02 89     	ld hl,Limite_vertical
 382+ 9553 36 12        	ld (hl),$12
 383+ 9555 08           	ex af,af
 384+ 9556 18 29        	jr 1F
 385+ 9558 CD 8A 95     primit call column
 386+ 955B 38 13        	jr c, primcuad
 387+ 955D              segcuad
 388+ 955D 3E 02        	ld a,2
 389+ 955F 32 D8 88     	ld (Cuad_objeto),a
 390+ 9562 21 C0 4F     	ld hl,$4fc0
 391+ 9565 22 00 89     	ld (Limite_horizontal),hl
 392+ 9568 21 02 89     	ld hl,Limite_vertical
 393+ 956B 36 0D        	ld (hl),$0d
 394+ 956D 08           	ex af,af
 395+ 956E 18 11        	jr 1F
 396+ 9570              primcuad
 397+ 9570 3E 01        	ld a,1
 398+ 9572 32 D8 88     	ld (Cuad_objeto),a
 399+ 9575 21 C0 4F     	ld hl,$4fc0
 400+ 9578 22 00 89     	ld (Limite_horizontal),hl
 401+ 957B 21 02 89     	ld hl,Limite_vertical
 402+ 957E 36 12        	ld (hl),$12
 403+ 9580 08           	ex af,af
 404+ 9581 CD 2E 9D     1 call Genera_coordenadas
 405+ 9584 21 F2 88     	ld hl,Ctrl_0
 406+ 9587 CB EE        	set 5,(hl)
 407+ 9589 C9           	ret
 408+ 958A
 409+ 958A              ; ------------------------------------------------------------------------------------------------------------------
 410+ 958A
 411+ 958A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 958A              ;
 413+ 958A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 958A
 415+ 958A 7D           column ld a,l
 416+ 958B E6 1F        	and $1f
 417+ 958D FE 10         	cp $10
 418+ 958F C9            	ret
 419+ 9590
 420+ 9590              ; --------------------------------------------------------------------------------------------------------------------
 421+ 9590              ;
 422+ 9590              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 9590              ;
 424+ 9590              ; 14/12/22
 425+ 9590              ;
 426+ 9590              ;	Modifica: A y BC.
 427+ 9590
 428+ 9590 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 9593 E6 01        	and 1
 430+ 9595 28 17        	jr z,1F
 431+ 9597
 432+ 9597              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 9597
 434+ 9597 3A CA 88     	ld a,(Coordenada_X)
 435+ 959A 47           	ld b,a
 436+ 959B 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 959C 79           	ld a,c
 438+ 959D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 959E 38 08        	jr c,2F
 440+ 95A0 47           	ld b,a
 441+ 95A1 79           	ld a,c
 442+ 95A2 90           	sub b
 443+ 95A3 32 FF 88     	ld (Columnas),a
 444+ 95A6 18 1B        	jr 4F
 445+ 95A8 79           2 ld a,c
 446+ 95A9 32 FF 88     	ld (Columnas),a
 447+ 95AC 18 15        	jr 4F
 448+ 95AE
 449+ 95AE              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95AE
 451+ 95AE 3A CA 88     1 ld a,(Coordenada_X)
 452+ 95B1 81           	add c
 453+ 95B2 3D           	dec a
 454+ 95B3 D6 1F        	sub $1f
 455+ 95B5 38 08        	jr c,3F
 456+ 95B7 47           	ld b,a
 457+ 95B8 79           	ld a,c
 458+ 95B9 90           	sub b
 459+ 95BA 32 FF 88     	ld (Columnas),a
 460+ 95BD 18 04        	jr 4F
 461+ 95BF 79           3 ld a,c
 462+ 95C0 32 FF 88     	ld (Columnas),a
 463+ 95C3 D9           4 exx
 464+ 95C4 4F           	ld c,a
 465+ 95C5 D9           	exx
 466+ 95C6 C9            ret
 467+ 95C7
 468+ 95C7              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95C7              ;
 470+ 95C7              ;   19/7/23
 471+ 95C7              ;
 472+ 95C7              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95C7              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95C7              ;
 475+ 95C7              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95C7              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95C7              ;
 478+ 95C7              ;	DESTRUYE: HL,B Y A.
 479+ 95C7
 480+ 95C7 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 95CA FE 02        	cp 2
 482+ 95CC 38 18        	jr c,1F
 483+ 95CE 28 16        	jr z,1F
 484+ 95D0 E6 01        	and 1
 485+ 95D2 28 0D        	jr z,3F
 486+ 95D4
 487+ 95D4              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 95D4
 489+ 95D4 CD 1A 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 95D7
 491+ 95D7 7D           9 ld a,l
 492+ 95D8 E6 1F        	and $1f
 493+ 95DA 28 2A        	jr z,7F
 494+ 95DC 2B           	dec hl
 495+ 95DD 10 F8        	djnz 9B
 496+ 95DF 18 25        	jr 7F
 497+ 95E1
 498+ 95E1              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 95E1
 500+ 95E1 2A C6 88     3 ld hl,(Posicion_actual)
 501+ 95E4 18 20        	jr 7F
 502+ 95E6
 503+ 95E6 28 14        1 jr z,2F
 504+ 95E8
 505+ 95E8              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 95E8
 507+ 95E8 CD 1A 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 95EB
 509+ 95EB 7D           4 ld a,l
 510+ 95EC E6 1F        	and $1f
 511+ 95EE 28 03        	jr z,6F
 512+ 95F0 2B           	dec hl
 513+ 95F1 10 F8        	djnz 4B
 514+ 95F3 06 0F        6 ld b,15
 515+ 95F5 CD 7B 96     5 call PreviousScan
 516+ 95F8 10 FB        	djnz 5B
 517+ 95FA 18 0A        	jr 7F
 518+ 95FC
 519+ 95FC              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 95FC
 521+ 95FC CD 1A 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 95FF 06 0F        	ld b,15
 523+ 9601 CD 7B 96     8 call PreviousScan
 524+ 9604 10 FB        	djnz 8B
 525+ 9606
 526+ 9606 E5           7 push hl
 527+ 9607 DD E1        	pop ix
 528+ 9609
 529+ 9609 2A C8 88     	ld hl,(Puntero_objeto)
 530+ 960C E5           	push hl
 531+ 960D FD E1        	pop iy
 532+ 960F
 533+ 960F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 960F
 535+ 960F 3A F2 88     	ld a,(Ctrl_0)
 536+ 9612 CB 77        	bit 6,a
 537+ 9614 C8           	ret z
 538+ 9615
 539+ 9615              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9615              ; _ entidad / Amadeus´.
 541+ 9615
 542+ 9615 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9619
 544+ 9619 C9           	ret
 545+ 961A
 546+ 961A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 961A              ;
 548+ 961A              ;	2/1/23
 549+ 961A              ;
 550+ 961A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 961A              ;
 552+ 961A              ;	Tras esta rutina tenemos:
 553+ 961A              ;
 554+ 961A              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 961A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 961A              ;
 557+ 961A              ;	DESTRUYE!!!!! HL,B y A.
 558+ 961A
 559+ 961A 2A C6 88     Operandos ld hl,(Posicion_actual)
 560+ 961D 3A FF 88     	ld a,(Columnas)
 561+ 9620 3D           	dec a
 562+ 9621 20 01        	jr nz,1F
 563+ 9623 3C           	inc a
 564+ 9624 47           1 ld b,a
 565+ 9625 C9           	ret
 566+ 9626
 567+ 9626              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9626              ;
 569+ 9626              ;	3/1/23
 570+ 9626              ;
 571+ 9626              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9626              ;
 573+ 9626              ;	Destruye: A,B,HL y DE.
 574+ 9626
 575+ 9626              Define_rutina_de_impresion
 576+ 9626
 577+ 9626 3A C5 88     	ld a,(Columns)
 578+ 9629 47           	ld b,a
 579+ 962A 3A FF 88     	ld a,(Columnas)
 580+ 962D B8           	cp b
 581+ 962E 20 0D        	jr nz,2f
 582+ 9630
 583+ 9630              ;	La entidad se imprime entera.
 584+ 9630
 585+ 9630 21 4F 97     	ld hl, Indice_entidades_completas
 586+ 9633 E6 01        	and 1
 587+ 9635 28 02        	jr z,1F
 588+ 9637
 589+ 9637 23           	inc hl
 590+ 9638 23           	inc hl
 591+ 9639
 592+ 9639 CD 00 8D     1 call Extrae_address
 593+ 963C C9           	ret		;	ret
 594+ 963D
 595+ 963D              ;	La entidad no se imprime entera en pantalla.
 596+ 963D
 597+ 963D 3A D8 88     2 ld a,(Cuad_objeto)
 598+ 9640 E6 01        	and 1
 599+ 9642 28 17        	jr z,3F
 600+ 9644
 601+ 9644              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9644
 603+ 9644 21 53 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9647 3A C5 88     4 ld a,(Columns)
 605+ 964A E6 01        	and 1
 606+ 964C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 964E
 608+ 964E 23           	inc hl
 609+ 964F 23           	inc hl
 610+ 9650
 611+ 9650 3A FF 88     	ld a,(Columnas)
 612+ 9653 E6 01        	and 1
 613+ 9655 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9657
 615+ 9657 23           	inc hl
 616+ 9658 23           	inc hl
 617+ 9659
 618+ 9659 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 965B
 620+ 965B 21 59 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 965E 18 E7        	jr 4B
 622+ 9660
 623+ 9660              ; --------------------------------------------------------------------------------------------------------------------
 624+ 9660              ;
 625+ 9660              ;	Prepara_draw
 626+ 9660              ;
 627+ 9660              ;	Es una rutina de carga.
 628+ 9660              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 9660              ;
 630+ 9660              ;	FUNCIONAMIENTO:
 631+ 9660              ;
 632+ 9660              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 9660              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 9660              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 9660              ;
 636+ 9660              ;	DESTRUYE:
 637+ 9660              ;
 638+ 9660              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 9660
 640+ 9660 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9663 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9664 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9665 4E           	ld c,(hl)
 644+ 9666 2A C6 88     	ld hl,(Posicion_actual)
 645+ 9669 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 966B C9           	ret
 647+ 966C
 648+ 966C              ;----------------------------------------------------------------------------------------------------------------
 649+ 966C              ;
 650+ 966C              ;	5/08/22
 651+ 966C              ;
 652+ 966C              ;   NextScan.
 653+ 966C              ;
 654+ 966C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 966C              ;
 656+ 966C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 966C              ;
 658+ 966C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 966C              ;
 660+ 966C              ;       DESTRUIDOS: AF y HL !!!
 661+ 966C              ;
 662+ 966C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 966C              ;
 664+ 966C
 665+ 966C 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 966D 7C               ld a,h
 667+ 966E E6 07            and 7
 668+ 9670 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 9671
 670+ 9671 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 9672 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 9674 6F               ld l,a
 673+ 9675 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9676
 675+ 9676 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9677 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 9679 67               ld h,a
 678+ 967A C9               ret
 679+ 967B
 680+ 967B              ;----------------------------------------------------------------------------------------------------------------
 681+ 967B              ;
 682+ 967B              ;	5/08/22
 683+ 967B              ;
 684+ 967B              ;   PreviousScan.
 685+ 967B              ;
 686+ 967B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 967B              ;
 688+ 967B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 967B              ;
 690+ 967B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 967B              ;
 692+ 967B              ;       DESTRUIDOS: AF y HL !!!
 693+ 967B              ;
 694+ 967B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 967B              ;
 696+ 967B
 697+ 967B 7C           PreviousScan ld a,h
 698+ 967C 25               dec h               ; Dec H.
 699+ 967D E6 07            and 7
 700+ 967F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 9680
 702+ 9680 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 9681 D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 9683 6F               ld l,a
 705+ 9684 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 9685
 707+ 9685 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 9686 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 9688 67               ld h,a
 710+ 9689 C9               ret
 711+ 968A
 712+ 968A              ; -----------------------------------------------------------------------------------
 713+ 968A              ;
 714+ 968A              ;	31/7/23
 715+ 968A              ;
 716+ 968A              ;	Rutina principal de pintado de entidades.
 717+ 968A              ;	Extrae la foto del frame, (entidades).
 718+ 968A
 719+ 968A              Extrae_foto_entidades
 720+ 968A
 721+ 968A 21 01 70     	ld hl,Album_de_fotos+1
 722+ 968D 7E           	ld a,(hl)
 723+ 968E A7           	and a
 724+ 968F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 9690
 726+ 9690              ;	No hay datos, (entidades para pintar en este frame).
 727+ 9690
 728+ 9690 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9693 A7           	and a
 730+ 9694 C8           	ret z
 731+ 9695
 732+ 9695              ; -----------------------------------
 733+ 9695
 734+ 9695 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9699 31 00 70     	ld sp,Album_de_fotos
 736+ 969C
 737+ 969C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 969E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 969F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96A0
 741+ 96A0 ED 73 18 89  	ld (Stack_2),sp
 742+ 96A4 ED 7B 16 89  	ld sp,(Stack)
 743+ 96A8
 744+ 96A8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96A8
 746+ 96A8 3E CD        	ld a,$cd
 747+ 96AA 32 B2 96     	ld (Imprime),a
 748+ 96AD EB           	ex de,hl
 749+ 96AE 22 B3 96     	ld (Imprime+1),hl
 750+ 96B1 EB           	ex de,hl
 751+ 96B2
 752+ 96B2              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96B2
 754+ 96B2 00 00 00     Imprime db 0,0,0
 755+ 96B5
 756+ 96B5 ED 73 16 89  	ld (Stack),sp
 757+ 96B9
 758+ 96B9 3A 11 89     	ld a,(Numero_de_malotes)
 759+ 96BC 3D           	dec a
 760+ 96BD 28 09        	jr z,1F
 761+ 96BF 32 11 89      	ld (Numero_de_malotes),a
 762+ 96C2
 763+ 96C2 ED 7B 18 89  	ld sp,(Stack_2)
 764+ 96C6 18 D4        	jr 2B
 765+ 96C8
 766+ 96C8 AF           1 xor a
 767+ 96C9 32 18 89     	ld (Stack_2),a
 768+ 96CC
 769+ 96CC C9           	ret
 770+ 96CD
 771+ 96CD              ; -----------------------------------------------------------------------------------
 772+ 96CD              ;
 773+ 96CD              ;	28/2/23
 774+ 96CD              ;
 775+ 96CD              ;	Pinta los disparos generados.
 776+ 96CD
 777+ 96CD              Extrae_foto_disparos
 778+ 96CD
 779+ 96CD 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 96D0 7E               ld a,(hl)
 781+ 96D1 A7               and a
 782+ 96D2 C8               ret z
 783+ 96D3
 784+ 96D3 3A 25 89     	ld a,(Numero_de_disparotes)
 785+ 96D6 A7           	and a
 786+ 96D7 C8           	ret z
 787+ 96D8 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 96DC 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 96DF
 790+ 96DF FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 96E1 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 96E2 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 96E3
 794+ 96E3 ED 73 18 89  	ld (Stack_2),sp
 795+ 96E7 ED 7B 16 89  	ld sp,(Stack)
 796+ 96EB
 797+ 96EB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 96EB
 799+ 96EB 3E CD        	ld a,$cd
 800+ 96ED 32 F5 96     	ld (Imprime2),a
 801+ 96F0 EB           	ex de,hl
 802+ 96F1 22 F6 96     	ld (Imprime2+1),hl
 803+ 96F4 EB           	ex de,hl
 804+ 96F5
 805+ 96F5              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 96F5
 807+ 96F5 00 00 00     Imprime2 db 0,0,0
 808+ 96F8
 809+ 96F8 3A 25 89     	ld a,(Numero_de_disparotes)
 810+ 96FB 3D           	dec a
 811+ 96FC 28 09        	jr z,1F
 812+ 96FE 32 25 89      	ld (Numero_de_disparotes),a
 813+ 9701
 814+ 9701 ED 7B 18 89  	ld sp,(Stack_2)
 815+ 9705 18 D8        	jr 2B
 816+ 9707
 817+ 9707 AF           1 xor a
 818+ 9708 32 18 89     	ld (Stack_2),a
 819+ 970B C9           	ret
 820+ 970C
 821+ 970C              ; -----------------------------------------------------------------------------------
 822+ 970C              ;
 823+ 970C              ;	4/9/23
 824+ 970C              ;
 825+ 970C              ;	Rutina principal de pintado de Amadeus.
 826+ 970C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 970C
 828+ 970C 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 970F 7E           	ld a,(hl)
 830+ 9710 A7           	and a
 831+ 9711 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9712
 833+ 9712 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9715 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9716 C8           	ret z
 836+ 9717
 837+ 9717              ; -----------------------------------
 838+ 9717
 839+ 9717 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 971B 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 971E
 842+ 971E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 9720 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 9721 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9722
 846+ 9722 ED 73 18 89  	ld (Stack_2),sp
 847+ 9726 ED 7B 16 89  	ld sp,(Stack)
 848+ 972A
 849+ 972A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 972A
 851+ 972A 3E CD        	ld a,$cd
 852+ 972C 32 34 97     	ld (Imprime_Amadeus),a
 853+ 972F EB           	ex de,hl
 854+ 9730 22 35 97     	ld (Imprime_Amadeus+1),hl
 855+ 9733 EB           	ex de,hl
 856+ 9734
 857+ 9734              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9734
 859+ 9734 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9737
 861+ 9737 ED 73 16 89  	ld (Stack),sp
 862+ 973B
 863+ 973B 3A 11 89     	ld a,(Numero_de_malotes)
 864+ 973E 3D           	dec a
 865+ 973F 28 09        	jr z,1F
 866+ 9741 32 11 89      	ld (Numero_de_malotes),a
 867+ 9744
 868+ 9744 ED 7B 18 89  	ld sp,(Stack_2)
 869+ 9748 18 D4        	jr 2B
 870+ 974A
 871+ 974A AF           1 xor a
 872+ 974B 32 18 89     	ld (Stack_2),a
 873+ 974E
 874+ 974E C9           	ret
# file closed: Draw_XOR.asm
1764  974F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 974F              ;   índices de Rutinas de impresión.
   2+ 974F
   3+ 974F 5F 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9751 8C 97            defw Pinta_Amadeus_3x2
   5+ 9753
   6+ 9753 E2 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9755 82 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9757 36 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9759
  10+ 9759 0C 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 975B 10 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 975D C4 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 975F
  14+ 975F
  15+ 975F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 975F              ;
  17+ 975F              ;   12/12/22
  18+ 975F              ;
  19+ 975F              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 975F              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 975F              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 975F              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 975F              ;
  24+ 975F              ;   Modifica: DE y HL.
  25+ 975F
  26+ 975F ED 73 16 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9763 FD F9        	ld sp,iy
  28+ 9765 06 10            ld b,16
  29+ 9767 D1           1 pop de
  30+ 9768 7B               ld a,e
  31+ 9769 AE               xor (hl)
  32+ 976A 77           	ld (hl),a
  33+ 976B 23           	inc hl
  34+ 976C 7A               ld a,d
  35+ 976D AE               xor (hl)
  36+ 976E 77           	ld (hl),a
  37+ 976F 2B           	dec hl
  38+ 9770 24           	inc h
  39+ 9771 7C               ld a,h
  40+ 9772 E6 07            and 7
  41+ 9774 20 0A            jr nz,2F
  42+ 9776 7D               ld a,l
  43+ 9777 C6 20            add a,$20
  44+ 9779 6F               ld l,a
  45+ 977A 38 04            jr c,2F
  46+ 977C 7C               ld a,h
  47+ 977D D6 08            sub 8
  48+ 977F 67               ld h,a
  49+ 9780 7C           2 ld a,h
  50+ 9781 FE 58            cp $58
  51+ 9783 28 02            jr z,3F
  52+ 9785 10 E0            djnz 1B
  53+ 9787 ED 7B 16 89  3 ld sp,(Stack)
  54+ 978B C9           	ret
  55+ 978C
  56+ 978C ED 73 16 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9790 FD F9        	ld sp,iy
  58+ 9792 06 08            ld b,8
  59+ 9794 D1           1 pop de
  60+ 9795 7B               ld a,e
  61+ 9796 AE               xor (hl)
  62+ 9797 77           	ld (hl),a
  63+ 9798 23           	inc hl
  64+ 9799 7A               ld a,d
  65+ 979A AE               xor (hl)
  66+ 979B 77           	ld (hl),a
  67+ 979C 23           	inc hl
  68+ 979D D1           	pop de
  69+ 979E 7B               ld a,e
  70+ 979F AE               xor (hl)
  71+ 97A0 77           	ld (hl),a
  72+ 97A1 2B           	dec hl
  73+ 97A2 2B           	dec hl
  74+ 97A3 24           	inc h
  75+ 97A4 7C               ld a,h
  76+ 97A5 E6 07            and 7
  77+ 97A7 20 0A            jr nz,2F
  78+ 97A9 7D               ld a,l
  79+ 97AA C6 20            add a,$20
  80+ 97AC 6F               ld l,a
  81+ 97AD 38 04            jr c,2F
  82+ 97AF 7C               ld a,h
  83+ 97B0 D6 08            sub 8
  84+ 97B2 67               ld h,a
  85+ 97B3 7C           2 ld a,h
  86+ 97B4 FE 58            cp $58
  87+ 97B6 28 25            jr z,4F
  88+ 97B8 7A               ld a,d
  89+ 97B9 AE               xor (hl)
  90+ 97BA 77               ld (hl),a
  91+ 97BB D1           	pop de
  92+ 97BC 23           	inc hl
  93+ 97BD 7B               ld a,e
  94+ 97BE AE               xor (hl)
  95+ 97BF 77           	ld (hl),a
  96+ 97C0 23           	inc hl
  97+ 97C1 7A               ld a,d
  98+ 97C2 AE               xor (hl)
  99+ 97C3 77           	ld (hl),a
 100+ 97C4 2B           	dec hl
 101+ 97C5 2B           	dec hl
 102+ 97C6 24           	inc h
 103+ 97C7 7C               ld a,h
 104+ 97C8 E6 07            and 7
 105+ 97CA 20 0A            jr nz,3F
 106+ 97CC 7D               ld a,l
 107+ 97CD C6 20            add a,$20
 108+ 97CF 6F               ld l,a
 109+ 97D0 38 04            jr c,3F
 110+ 97D2 7C               ld a,h
 111+ 97D3 D6 08            sub 8
 112+ 97D5 67               ld h,a
 113+ 97D6 7C           3 ld a,h
 114+ 97D7 FE 58            cp $58
 115+ 97D9 28 02            jr z,4F
 116+ 97DB 10 B7            djnz 1B
 117+ 97DD ED 7B 16 89  4 ld sp,(Stack)
 118+ 97E1 C9           	ret
 119+ 97E2
 120+ 97E2              ; ---------------------------------------------------
 121+ 97E2
 122+ 97E2 ED 73 16 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97E6 FD F9        	ld sp,iy
 124+ 97E8
 125+ 97E8              ; >>>
 126+ 97E8
 127+ 97E8 06 10            ld b,16
 128+ 97EA D1           1 pop de
 129+ 97EB 7A           	ld a,d
 130+ 97EC AE           	xor (hl)
 131+ 97ED 77           	ld (hl),a
 132+ 97EE 24           	inc h
 133+ 97EF 7C               ld a,h
 134+ 97F0 E6 07            and 7
 135+ 97F2 20 0C            jr nz,2F
 136+ 97F4 7D               ld a,l
 137+ 97F5 C6 20            add a,$20
 138+ 97F7 6F               ld l,a
 139+ 97F8 38 06            jr c,2F
 140+ 97FA 7C               ld a,h
 141+ 97FB D6 08            sub 8
 142+ 97FD 67               ld h,a
 143+ 97FE 18 00            jr 2F
 144+ 9800 7C           2 ld a,h
 145+ 9801 FE 58            cp $58
 146+ 9803 28 02            jr z,3F
 147+ 9805 10 E3            djnz 1B
 148+ 9807 ED 7B 16 89  3 ld sp,(Stack)
 149+ 980B C9           	ret
 150+ 980C
 151+ 980C ED 73 16 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9810 FD F9        	ld sp,iy
 153+ 9812
 154+ 9812              ; >>>
 155+ 9812
 156+ 9812 06 10            ld b,16
 157+ 9814 D1           1 pop de
 158+ 9815 7B           	ld a,e
 159+ 9816 AE           	xor (hl)
 160+ 9817 77           	ld (hl),a
 161+ 9818 24           	inc h
 162+ 9819 7C               ld a,h
 163+ 981A E6 07            and 7
 164+ 981C 20 0C            jr nz,2F
 165+ 981E 7D               ld a,l
 166+ 981F C6 20            add a,$20
 167+ 9821 6F               ld l,a
 168+ 9822 38 06            jr c,2F
 169+ 9824 7C               ld a,h
 170+ 9825 D6 08            sub 8
 171+ 9827 67               ld h,a
 172+ 9828 18 00            jr 2F
 173+ 982A 7C           2 ld a,h
 174+ 982B FE 58            cp $58
 175+ 982D 28 02            jr z,3F
 176+ 982F 10 E3            djnz 1B
 177+ 9831 ED 7B 16 89  3 ld sp,(Stack)
 178+ 9835 C9           	ret
 179+ 9836
 180+ 9836              ; ---------------------------------------------------
 181+ 9836
 182+ 9836 ED 73 16 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 983A FD F9        	ld sp,iy
 184+ 983C 06 08            ld b,8
 185+ 983E D1           1 pop de
 186+ 983F 7A           	ld a,d
 187+ 9840 AE           	xor (hl)
 188+ 9841 77           	ld (hl),a
 189+ 9842 23           	inc hl
 190+ 9843 D1           	pop de
 191+ 9844 7B           	ld a,e
 192+ 9845 AE           	xor (hl)
 193+ 9846 77           	ld (hl),a
 194+ 9847 2B           	dec hl
 195+ 9848 24            	inc h
 196+ 9849 7C               ld a,h
 197+ 984A E6 07            and 7
 198+ 984C 20 0A            jr nz,2F
 199+ 984E 7D               ld a,l
 200+ 984F C6 20            add a,$20
 201+ 9851 6F               ld l,a
 202+ 9852 38 04            jr c,2F
 203+ 9854 7C               ld a,h
 204+ 9855 D6 08            sub 8
 205+ 9857 67               ld h,a
 206+ 9858 7C           2 ld a,h
 207+ 9859 FE 58            cp $58
 208+ 985B 28 20            jr z,4F
 209+ 985D D1               pop de
 210+ 985E 7B           	ld a,e
 211+ 985F AE           	xor (hl)
 212+ 9860 77           	ld (hl),a
 213+ 9861 23           	inc hl
 214+ 9862 7A           	ld a,d
 215+ 9863 AE           	xor (hl)
 216+ 9864 77           	ld (hl),a
 217+ 9865 2B           	dec hl
 218+ 9866 24           	inc h
 219+ 9867 7C               ld a,h
 220+ 9868 E6 07            and 7
 221+ 986A 20 0A            jr nz,3F
 222+ 986C 7D               ld a,l
 223+ 986D C6 20            add a,$20
 224+ 986F 6F               ld l,a
 225+ 9870 38 04            jr c,3F
 226+ 9872 7C               ld a,h
 227+ 9873 D6 08            sub 8
 228+ 9875 67               ld h,a
 229+ 9876 7C           3 ld a,h
 230+ 9877 FE 58            cp $58
 231+ 9879 28 02            jr z,4F
 232+ 987B 10 C1            djnz 1B
 233+ 987D ED 7B 16 89  4 ld sp,(Stack)
 234+ 9881 C9           	ret
 235+ 9882
 236+ 9882 ED 73 16 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9886 FD F9        	ld sp,iy
 238+ 9888 06 08            ld b,8
 239+ 988A D1           1 pop de
 240+ 988B D1           	pop de
 241+ 988C 7B           	ld a,e
 242+ 988D AE           	xor (hl)
 243+ 988E 77           	ld (hl),a
 244+ 988F 24            	inc h
 245+ 9890 7C               ld a,h
 246+ 9891 E6 07            and 7
 247+ 9893 20 0A            jr nz,2F
 248+ 9895 7D               ld a,l
 249+ 9896 C6 20            add a,$20
 250+ 9898 6F               ld l,a
 251+ 9899 38 04            jr c,2F
 252+ 989B 7C               ld a,h
 253+ 989C D6 08            sub 8
 254+ 989E 67               ld h,a
 255+ 989F 7C           2 ld a,h
 256+ 98A0 FE 58            cp $58
 257+ 98A2 28 1B            jr z,4F
 258+ 98A4 D1               pop de
 259+ 98A5 7A           	ld a,d
 260+ 98A6 AE           	xor (hl)
 261+ 98A7 77           	ld (hl),a
 262+ 98A8 24           	inc h
 263+ 98A9 7C               ld a,h
 264+ 98AA E6 07            and 7
 265+ 98AC 20 0A            jr nz,3F
 266+ 98AE 7D               ld a,l
 267+ 98AF C6 20            add a,$20
 268+ 98B1 6F               ld l,a
 269+ 98B2 38 04            jr c,3F
 270+ 98B4 7C               ld a,h
 271+ 98B5 D6 08            sub 8
 272+ 98B7 67               ld h,a
 273+ 98B8 7C           3 ld a,h
 274+ 98B9 FE 58            cp $58
 275+ 98BB 28 02            jr z,4F
 276+ 98BD 10 CB            djnz 1B
 277+ 98BF ED 7B 16 89  4 ld sp,(Stack)
 278+ 98C3 C9           	ret
 279+ 98C4
 280+ 98C4 ED 73 16 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98C8 FD F9        	ld sp,iy
 282+ 98CA 06 08            ld b,8
 283+ 98CC D1           1 pop de
 284+ 98CD 7B           	ld a,e
 285+ 98CE AE           	xor (hl)
 286+ 98CF 77           	ld (hl),a
 287+ 98D0 23           	inc hl
 288+ 98D1 7A           	ld a,d
 289+ 98D2 AE           	xor (hl)
 290+ 98D3 77           	ld (hl),a
 291+ 98D4 2B           	dec hl
 292+ 98D5 24             	inc h
 293+ 98D6 7C               ld a,h
 294+ 98D7 E6 07            and 7
 295+ 98D9 20 0A            jr nz,2F
 296+ 98DB 7D               ld a,l
 297+ 98DC C6 20            add a,$20
 298+ 98DE 6F               ld l,a
 299+ 98DF 38 04            jr c,2F
 300+ 98E1 7C               ld a,h
 301+ 98E2 D6 08            sub 8
 302+ 98E4 67               ld h,a
 303+ 98E5 7C           2 ld a,h
 304+ 98E6 FE 58            cp $58
 305+ 98E8 28 21            jr z,4F
 306+ 98EA D1               pop de
 307+ 98EB 7A           	ld a,d
 308+ 98EC AE           	xor (hl)
 309+ 98ED 77           	ld (hl),a
 310+ 98EE 23           	inc hl
 311+ 98EF D1               pop de
 312+ 98F0 7B           	ld a,e
 313+ 98F1 AE           	xor (hl)
 314+ 98F2 77           	ld (hl),a
 315+ 98F3 2B           	dec hl
 316+ 98F4 24           	inc h
 317+ 98F5 7C               ld a,h
 318+ 98F6 E6 07            and 7
 319+ 98F8 20 0A            jr nz,3F
 320+ 98FA 7D               ld a,l
 321+ 98FB C6 20            add a,$20
 322+ 98FD 6F               ld l,a
 323+ 98FE 38 04            jr c,3F
 324+ 9900 7C               ld a,h
 325+ 9901 D6 08            sub 8
 326+ 9903 67               ld h,a
 327+ 9904 7C           3 ld a,h
 328+ 9905 FE 58            cp $58
 329+ 9907 28 02            jr z,4F
 330+ 9909 10 C1            djnz 1B
 331+ 990B ED 7B 16 89  4 ld sp,(Stack)
 332+ 990F C9           	ret
 333+ 9910
 334+ 9910 ED 73 16 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9914 FD F9        	ld sp,iy
 336+ 9916 06 08            ld b,8
 337+ 9918 D1           1 pop de
 338+ 9919 7B           	ld a,e
 339+ 991A AE           	xor (hl)
 340+ 991B 77           	ld (hl),a
 341+ 991C 24            	inc h
 342+ 991D 7C               ld a,h
 343+ 991E E6 07            and 7
 344+ 9920 20 0A            jr nz,2F
 345+ 9922 7D               ld a,l
 346+ 9923 C6 20            add a,$20
 347+ 9925 6F               ld l,a
 348+ 9926 38 04            jr c,2F
 349+ 9928 7C               ld a,h
 350+ 9929 D6 08            sub 8
 351+ 992B 67               ld h,a
 352+ 992C 7C           2 ld a,h
 353+ 992D FE 58            cp $58
 354+ 992F 28 1C            jr z,4F
 355+ 9931 D1               pop de
 356+ 9932 7A           	ld a,d
 357+ 9933 AE           	xor (hl)
 358+ 9934 77           	ld (hl),a
 359+ 9935 24           	inc h
 360+ 9936 7C               ld a,h
 361+ 9937 E6 07            and 7
 362+ 9939 20 0A            jr nz,3F
 363+ 993B 7D               ld a,l
 364+ 993C C6 20            add a,$20
 365+ 993E 6F               ld l,a
 366+ 993F 38 04            jr c,3F
 367+ 9941 7C               ld a,h
 368+ 9942 D6 08            sub 8
 369+ 9944 67               ld h,a
 370+ 9945 7C           3 ld a,h
 371+ 9946 FE 58            cp $58
 372+ 9948 28 03            jr z,4F
 373+ 994A D1               pop de
 374+ 994B 10 CB            djnz 1B
 375+ 994D ED 7B 16 89  4 ld sp,(Stack)
 376+ 9951 C9           	ret
 377+ 9952
 378+ 9952              ; ---------------------------------------------------
 379+ 9952              ;
 380+ 9952              ;   27/02/23
 381+ 9952              ;
 382+ 9952              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9952              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9952              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9952
 386+ 9952 ED 73 16 89  Pinta_Disparo ld (Stack),sp
 387+ 9956 FD F9            ld sp,iy
 388+ 9958 06 03            ld b,3
 389+ 995A D1           1 pop de
 390+ 995B 7B               ld a,e
 391+ 995C AE               xor (hl)
 392+ 995D 77               ld (hl),a
 393+ 995E 23               inc hl
 394+ 995F 7A               ld a,d
 395+ 9960 AE               xor (hl)
 396+ 9961 77               ld (hl),a
 397+ 9962 2B               dec hl
 398+ 9963
 399+ 9963 24               inc h
 400+ 9964 7C               ld a,h
 401+ 9965 E6 07            and 7
 402+ 9967 20 0A            jr nz,2F
 403+ 9969 7D               ld a,l
 404+ 996A C6 20            add a,$20
 405+ 996C 6F               ld l,a
 406+ 996D 38 04            jr c,2F
 407+ 996F 7C               ld a,h
 408+ 9970 D6 08            sub 8
 409+ 9972 67               ld h,a
 410+ 9973 7C           2 ld a,h
 411+ 9974 FE 58            cp $58
 412+ 9976 28 02            jr z,3F
 413+ 9978
 414+ 9978 10 E0            djnz 1B
 415+ 997A ED 7B 16 89  3 ld sp,(Stack)
 416+ 997E C9               ret
 417+ 997F
# file closed: Rutinas_de_impresion_sprites.asm
1765  997F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 997F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 997F              ;
   3+ 997F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 997F              ;
   5+ 997F              ; *****************************************************************************************************************************************************************************************
   6+ 997F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 997F
   8+ 997F 7C           calcula_tercio ld a,h
   9+ 9980 E6 18        	and $18
  10+ 9982 CB 2F        	sra a
  11+ 9984 CB 2F        	sra a
  12+ 9986 CB 2F        	sra a
  13+ 9988 C9           	ret
  14+ 9989
# file closed: calcula_tercio.asm
1766  9989              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9989              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9989              ;
   3+ 9989              ;
   4+ 9989              ;	CLS.
   5+ 9989              ;
   6+ 9989              ;	Limpia la pantalla y define sus atributos.
   7+ 9989              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9989              ;
   9+ 9989              ;	COLORES: 0 ..... NEGRO
  10+ 9989              ;    		 1 ..... AZUL
  11+ 9989              ; 			 2 ..... ROJO
  12+ 9989              ;			 3 ..... MAGENTA
  13+ 9989              ; 			 4 ..... VERDE
  14+ 9989              ; 			 5 ..... CIAN
  15+ 9989              ;			 6 ..... AMARILLO
  16+ 9989              ; 			 7 ..... BLANCO
  17+ 9989              ;
  18+ 9989              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9989              ;
  20+ 9989              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9989
  22+ 9989
  23+ 9989 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 998C 11 01 40     	LD DE,$4001
  25+ 998F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9992 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9994 ED B0        	LDIR
  28+ 9996 01 FF 02     	LD BC,767
  29+ 9999 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 999A ED B0        	LDIR
  31+ 999C C9           	ret
  32+ 999D
# file closed: Cls.asm
1767  999D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 999D              ; ******************************************************************************************************************************************************************************************
   2+ 999D              ;
   3+ 999D              ;   20/05/23
   4+ 999D              ;
   5+ 999D              ;	Recompone_posicion_inicio
   6+ 999D              ;
   7+ 999D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 999D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 999D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 999D              ;	_ a una u otra rutina.
  11+ 999D
  12+ 999D              Recompone_posicion_inicio
  13+ 999D
  14+ 999D 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 99A0 7D           	ld a,l
  16+ 99A1 E6 1F        	and $1f
  17+ 99A3 28 16        	jr z,1F
  18+ 99A5
  19+ 99A5 FE 1F        	cp $1f
  20+ 99A7 28 0D        	jr z,3F
  21+ 99A9
  22+ 99A9 21 03 89     	ld hl,Ctrl_2
  23+ 99AC CB C6        	set 0,(hl)
  24+ 99AE 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 99B1 22 06 89     	ld (Repone_puntero_objeto),hl
  26+ 99B4 18 08        	jr 2F
  27+ 99B6
  28+ 99B6 CD 7B 9B     3 call Mov_left
  29+ 99B9 18 03        	jr 2F
  30+ 99BB
  31+ 99BB CD 5D 9A     1 call Mov_right
  32+ 99BE 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99C1 22 C8 88     	ld (Puntero_objeto),hl
  34+ 99C4 C9           	ret
  35+ 99C5
  36+ 99C5              ; ******************************************************************************************************************************************************************************************
  37+ 99C5              ;
  38+ 99C5              ;   27/05/23
  39+ 99C5              ;
  40+ 99C5              ;	Mov_down
  41+ 99C5              ;
  42+ 99C5              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99C5              ;
  44+ 99C5              ;
  45+ 99C5              Mov_down
  46+ 99C5
  47+ 99C5 CD 4B 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99C8              ;																	; _ repone (Puntero_objeto).
  49+ 99C8 21 F2 88     	ld hl,Ctrl_0
  50+ 99CB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99CD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99CD              ; 																	; _ en el caso de que no lo haya.
  53+ 99CD 3A DC 88     	ld a,(Vel_down)
  54+ 99D0 47           	ld b,a
  55+ 99D1 2A C6 88         ld hl,(Posicion_actual)
  56+ 99D4 CD 7F 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99D7 E6 02        	and 2
  58+ 99D9 28 33        	jr z,1F
  59+ 99DB
  60+ 99DB              ; Nos encontramos en el último tercio de pantalla.
  61+ 99DB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99DB
  63+ 99DB 7C           	ld a,h
  64+ 99DC FE 57        	cp $57
  65+ 99DE 20 2E        	jr nz,1F
  66+ 99E0
  67+ 99E0 7D           	ld a,l
  68+ 99E1 C6 20        	add $20
  69+ 99E3 30 29        	jr nc,1F
  70+ 99E5
  71+ 99E5              ; ------------------------------
  72+ 99E5              ;
  73+ 99E5              ;	17/12/15
  74+ 99E5
  75+ 99E5              ;	call Reaparece_arriba
  76+ 99E5 CD 08 9D     	call Reinicio
  77+ 99E8
  78+ 99E8              ;	Homos generado todos los movimientos posibles de esta entidad.
  79+ 99E8              ;	Si se trata de una Entidad_guía dejará de serlo.
  80+ 99E8
  81+ 99E8 3A 24 89     	ld a,(Ctrl_3)
  82+ 99EB CB 5F        	bit 3,a
  83+ 99ED 20 27        	jr nz,3F
  84+ 99EF CB 57        	bit 2,a
  85+ 99F1 20 23        	jr nz,3F
  86+ 99F3
  87+ 99F3 3A 03 89     	ld a,(Ctrl_2)
  88+ 99F6 CB 6F        	bit 5,a
  89+ 99F8 28 1C        	jr z,3F
  90+ 99FA
  91+ 99FA CB AF        	res 5,a
  92+ 99FC 32 03 89     	ld (Ctrl_2),a
  93+ 99FF 21 24 89     	ld hl,Ctrl_3
  94+ 9A02 CB 8E        	res 1,(hl)
  95+ 9A04 CB D6        	set 2,(hl)												; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  96+ 9A06              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  97+ 9A06              ;															; _a la siguiente entidad como "Entidad_guía".
  98+ 9A06              ;	Reinicializa (Puntero_de_almacen_de_mov_masticados).
  99+ 9A06
 100+ 9A06
 101+ 9A06 21 D0 5C     4 ld hl,Almacen_de_movimientos_masticados
 102+ 9A09 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl 			; Reinicializa (Puntero_de_almacen_de_mov_masticados). Sitúa el puntero_
 103+ 9A0C
 104+ 9A0C 18 08        	jr 3F
 105+ 9A0E              ;															; _ al principio del almacén, (a partir de ahora ejecutaremos "movimientos masticados").
 106+ 9A0E              ;															; Ya no somos "Entidad_guía".
 107+ 9A0E              ; ------------------------------
 108+ 9A0E
 109+ 9A0E
 110+ 9A0E CD 6C 96     1 call NextScan
 111+ 9A11 22 C6 88     	ld (Posicion_actual),hl
 112+ 9A14 10 BE            djnz 2B
 113+ 9A16 CD 2E 9D     3 call Genera_coordenadas
 114+ 9A19 C9           	ret
 115+ 9A1A
 116+ 9A1A              ; ******************************************************************************************************************************************************************************************
 117+ 9A1A              ;
 118+ 9A1A              ;   27/05/23
 119+ 9A1A              ;
 120+ 9A1A              ;	Mov_up
 121+ 9A1A              ;
 122+ 9A1A              ; 	Mueve el Sprite hacia arriba.
 123+ 9A1A              ;
 124+ 9A1A              ;
 125+ 9A1A              Mov_up
 126+ 9A1A
 127+ 9A1A CD 4B 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 128+ 9A1D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 129+ 9A1D 21 F2 88     	ld hl,Ctrl_0
 130+ 9A20 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 131+ 9A22              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 132+ 9A22              ; 																		; _ en el caso de que no lo haya.
 133+ 9A22 3A DB 88     	ld a,(Vel_up)
 134+ 9A25 47           	ld b,a
 135+ 9A26 2A C6 88     	ld hl,(Posicion_actual)
 136+ 9A29 CD 7F 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 137+ 9A2C A7           	and a
 138+ 9A2D 20 10        	jr nz,1F
 139+ 9A2F
 140+ 9A2F              ; Nos encontramos en el 1er tercio de pantalla.
 141+ 9A2F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 142+ 9A2F
 143+ 9A2F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 144+ 9A30 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 145+ 9A32 20 0B            jr nz,1F
 146+ 9A34 7D               ld a,l
 147+ 9A35 D6 20            sub $20
 148+ 9A37 30 06            jr nc,1F
 149+ 9A39 25               dec h
 150+ 9A3A
 151+ 9A3A              ; -----------------------------
 152+ 9A3A CD E9 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 153+ 9A3D              ;	call Reinicio
 154+ 9A3D              ; -----------------------------
 155+ 9A3D
 156+ 9A3D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 157+ 9A3F CD 7B 96     1 call PreviousScan
 158+ 9A42 22 C6 88     	ld (Posicion_actual),hl
 159+ 9A45 10 E2            djnz 3B
 160+ 9A47 CD 2E 9D     2 call Genera_coordenadas
 161+ 9A4A C9           	ret
 162+ 9A4B
 163+ 9A4B              ; -----------------------------
 164+ 9A4B              ;
 165+ 9A4B              ;	27/5/23
 166+ 9A4B              ;
 167+ 9A4B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 168+ 9A4B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 169+ 9A4B              ;
 170+ 9A4B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 171+ 9A4B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 172+ 9A4B              ;
 173+ 9A4B              ;	Modifica: A y (Puntero_objeto).
 174+ 9A4B
 175+ 9A4B 3A 03 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 176+ 9A4E CB 47        	bit 0,a
 177+ 9A50 C8           	ret z
 178+ 9A51 CB 87        	res 0,a
 179+ 9A53 32 03 89     	ld (Ctrl_2),a
 180+ 9A56 2A 06 89     	ld hl,(Repone_puntero_objeto)
 181+ 9A59 22 C8 88     	ld (Puntero_objeto),hl
 182+ 9A5C C9           	ret
 183+ 9A5D
 184+ 9A5D              ; ******************************************************************************************************************************************************************************************
 185+ 9A5D              ;
 186+ 9A5D              ;	19/10/22
 187+ 9A5D              ;
 188+ 9A5D              ;	Mov_right.
 189+ 9A5D              ;
 190+ 9A5D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 191+ 9A5D              ;
 192+ 9A5D
 193+ 9A5D 21 F2 88     Mov_right ld hl,Ctrl_0
 194+ 9A60 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 195+ 9A62              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 196+ 9A62              ; 																	; _ en el caso de que no lo haya.
 197+ 9A62 3A F2 88     	ld a,(Ctrl_0)
 198+ 9A65 CB 77        	bit 6,a
 199+ 9A67 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 200+ 9A69
 201+ 9A69 CD 97 9C     	call Stop_Amadeus_right
 202+ 9A6C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 203+ 9A6D 18 4D        	jr 8F
 204+ 9A6F
 205+ 9A6F 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 206+ 9A72 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 207+ 9A74 20 46        	jr nz,8F
 208+ 9A76
 209+ 9A76 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 210+ 9A79 A7           	and a 															; _[3] para continuar con el DESPLZ.
 211+ 9A7A 28 40        	jr z,8F
 212+ 9A7C
 213+ 9A7C              ; ---------- ---------- ----------
 214+ 9A7C              ;
 215+ 9A7C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 216+ 9A7C
 217+ 9A7C 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 218+ 9A7F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 219+ 9A81 28 11        	jr z,1F
 220+ 9A83 38 06        	jr c,6F
 221+ 9A85 FE 04        	cp 4
 222+ 9A87 28 14        	jr z,7F
 223+ 9A89 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 224+ 9A8B
 225+ 9A8B              ; ---------- ---------- ----------
 226+ 9A8B              ;
 227+ 9A8B              ; Perfiles de velocidad
 228+ 9A8B              ;
 229+ 9A8B
 230+ 9A8B 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 231+ 9A8E FE FE        	cp $fe
 232+ 9A90 20 2A        	jr nz,8F
 233+ 9A92 18 10        	jr 3F
 234+ 9A94 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 235+ 9A97 FE FD        	cp $fd
 236+ 9A99 20 21        	jr nz,8F
 237+ 9A9B 18 07        	jr 3F
 238+ 9A9D 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 239+ 9AA0 FE FB        	cp $fb
 240+ 9AA2 20 18        	jr nz,8F
 241+ 9AA4
 242+ 9AA4              ; ---------- ---------- ----------
 243+ 9AA4
 244+ 9AA4              3
 245+ 9AA4 CD D7 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 246+ 9AA7              ;	call Reinicio
 247+ 9AA7
 248+ 9AA7              ; ---------- ---------- ----------
 249+ 9AA7              ;
 250+ 9AA7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 251+ 9AA7
 252+ 9AA7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 253+ 9AA9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 254+ 9AAA CD C3 9A     	call DESPLZ_DER
 255+ 9AAD C1           	pop bc
 256+ 9AAE 10 F9        	djnz 5B
 257+ 9AB0 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 258+ 9AB3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 259+ 9AB4 22 C6 88     	ld (Posicion_actual),hl
 260+ 9AB7 CD 2E 9D     	call Genera_coordenadas
 261+ 9ABA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 262+ 9ABC
 263+ 9ABC              ; ---------- ---------- ----------
 264+ 9ABC
 265+ 9ABC 2A C6 88     8 ld hl,(Posicion_actual)
 266+ 9ABF CD C3 9A     	call DESPLZ_DER
 267+ 9AC2 C9           2 ret
 268+ 9AC3
 269+ 9AC3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 270+ 9AC3              ;
 271+ 9AC3              ;	22/9/22
 272+ 9AC3              ;
 273+ 9AC3
 274+ 9AC3 CD D2 9A     DESPLZ_DER call Desplaza_derecha
 275+ 9AC6 CD 1E 9B         call modifica_parametros_1er_DESPLZ_2
 276+ 9AC9 CD 47 9B         call Ciclo_completo
 277+ 9ACC 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 278+ 9ACF CB FE        	set 7,(hl)
 279+ 9AD1 C9           	ret
 280+ 9AD2
 281+ 9AD2              ; ******************************************************************************************************************************************************************************************
 282+ 9AD2              ;	15/02/23
 283+ 9AD2              ;
 284+ 9AD2
 285+ 9AD2 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 286+ 9AD5 47           	ld b,a
 287+ 9AD6 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 288+ 9AD9 23           1 inc hl
 289+ 9ADA 23           	inc hl
 290+ 9ADB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 291+ 9ADD 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 292+ 9AE0 CD 00 8D     	call Extrae_address
 293+ 9AE3 22 C8 88     	ld (Puntero_objeto),hl
 294+ 9AE6
 295+ 9AE6              ; Modifica (Puntero_DESPLZ_izq).
 296+ 9AE6
 297+ 9AE6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 298+ 9AE6              ; Cuántos movimientos hemos hecho ??
 299+ 9AE6              ; DE contiene (Puntero_DESPLZ_der).
 300+ 9AE6
 301+ 9AE6 2A CE 88     7 ld hl,(Indice_Sprite_der)
 302+ 9AE9 EB           	ex de,hl
 303+ 9AEA A7           	and a
 304+ 9AEB ED 52        	sbc hl,de
 305+ 9AED CB 3D        	srl l
 306+ 9AEF 3E 08        6 ld a,8
 307+ 9AF1 95           	sub l
 308+ 9AF2 30 1E        	jr nc,3F
 309+ 9AF4
 310+ 9AF4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 311+ 9AF4              ; B="0".
 312+ 9AF4
 313+ 9AF4 04           4 inc b
 314+ 9AF5 3C           	inc a
 315+ 9AF6 20 FC        	jr nz,4B
 316+ 9AF8 78           	ld a,b
 317+ 9AF9 08           	ex af,af
 318+ 9AFA 2A CE 88     	ld hl,(Indice_Sprite_der)
 319+ 9AFD 23           5 inc hl
 320+ 9AFE 23           	inc hl
 321+ 9AFF 10 FC        	djnz 5B
 322+ 9B01 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 323+ 9B04 CD 00 8D     	call Extrae_address
 324+ 9B07 22 C8 88     	ld (Puntero_objeto),hl
 325+ 9B0A
 326+ 9B0A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 327+ 9B0A              ; _(Posicion_actual).
 328+ 9B0A
 329+ 9B0A 21 C6 88     	ld hl,Posicion_actual
 330+ 9B0D 34           	inc (hl)
 331+ 9B0E 08               ex af,af
 332+ 9B0F 6F           	ld l,a
 333+ 9B10 18 DD        	jr 6B
 334+ 9B12
 335+ 9B12              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 336+ 9B12
 337+ 9B12 47           3 ld b,a
 338+ 9B13 2A D0 88     	ld hl,(Indice_Sprite_izq)
 339+ 9B16 23           2 inc hl
 340+ 9B17 23           	inc hl
 341+ 9B18 10 FC        	djnz 2B
 342+ 9B1A 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 343+ 9B1D C9           8 ret
 344+ 9B1E
 345+ 9B1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 346+ 9B1E              ;
 347+ 9B1E              ;	24/7/22
 348+ 9B1E              ;
 349+ 9B1E              ;	modifica_parametros_1er_DESPLZ_2
 350+ 9B1E              ;
 351+ 9B1E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 352+ 9B1E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 353+ 9B1E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 354+ 9B1E
 355+ 9B1E 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 356+ 9B21 A7           	and a
 357+ 9B22 20 1F        	jr nz,1F
 358+ 9B24 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 359+ 9B26 32 CC 88         ld (CTRL_DESPLZ),a
 360+ 9B29
 361+ 9B29 21 C5 88     	ld hl,Columns
 362+ 9B2C 34           	inc (hl)
 363+ 9B2D 3A D8 88     	ld a,(Cuad_objeto)
 364+ 9B30 E6 01        	and 1
 365+ 9B32 28 0F        	jr z,1F
 366+ 9B34 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 367+ 9B37 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 368+ 9B38 22 C6 88     	ld (Posicion_actual),hl
 369+ 9B3B CD 2E 9D     	call Genera_coordenadas
 370+ 9B3E CD A3 9C     	call Inc_CTRL_DESPLZ
 371+ 9B41 18 03        	jr 2F
 372+ 9B43 CD A3 9C     1 call Inc_CTRL_DESPLZ
 373+ 9B46 C9           2 ret
 374+ 9B47
 375+ 9B47              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 376+ 9B47              ;
 377+ 9B47              ;	24/7/22
 378+ 9B47              ;
 379+ 9B47              ;	Ciclo_completo.
 380+ 9B47              ;
 381+ 9B47              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 382+ 9B47              ;
 383+ 9B47              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 384+ 9B47              ; 	Decrementamos (Columns).
 385+ 9B47              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 386+ 9B47              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 387+ 9B47
 388+ 9B47
 389+ 9B47 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 390+ 9B4A FE FF        	cp $ff
 391+ 9B4C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 392+ 9B4E E6 F0        	and $f0
 393+ 9B50 20 28        	jr nz,3F
 394+ 9B52
 395+ 9B52              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 396+ 9B52
 397+ 9B52 3A CC 88     	ld a,(CTRL_DESPLZ)
 398+ 9B55 47           	ld b,a
 399+ 9B56 3E F8        	ld a,$f8
 400+ 9B58 80           	add b
 401+ 9B59 32 CC 88     	ld (CTRL_DESPLZ),a
 402+ 9B5C 18 1C        	jr 3F
 403+ 9B5E 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 404+ 9B61 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 405+ 9B62 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 406+ 9B63 32 CC 88     	ld (CTRL_DESPLZ),a
 407+ 9B66 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 408+ 9B69 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 409+ 9B6B 20 0A        	jr nz,2F
 410+ 9B6D 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 411+ 9B70 23           	inc hl
 412+ 9B71 22 C6 88     	ld (Posicion_actual),hl
 413+ 9B74 CD 2E 9D     	call Genera_coordenadas
 414+ 9B77
 415+ 9B77              ; Inicia el puntero de Sprite.
 416+ 9B77
 417+ 9B77 CD 17 8D     2 call Inicia_puntero_objeto_der
 418+ 9B7A C9           3 ret
 419+ 9B7B
 420+ 9B7B              ; ******************************************************************************************************************************************************************************************
 421+ 9B7B              ;
 422+ 9B7B              ;	15/02/23
 423+ 9B7B              ;
 424+ 9B7B              ;	Mov_left.
 425+ 9B7B              ;
 426+ 9B7B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 427+ 9B7B              ;
 428+ 9B7B              Mov_left
 429+ 9B7B
 430+ 9B7B 21 F2 88     	ld hl,Ctrl_0
 431+ 9B7E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 432+ 9B80              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 433+ 9B80              ; 																	; _ en el caso de que no lo haya.
 434+ 9B80 3A F2 88     	ld a,(Ctrl_0)
 435+ 9B83 CB 77        	bit 6,a
 436+ 9B85 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 437+ 9B87
 438+ 9B87 CD 9D 9C     	call Stop_Amadeus_left
 439+ 9B8A C8           	ret z
 440+ 9B8B 20 4A        	jr nz,8F
 441+ 9B8D
 442+ 9B8D 3A CA 88     11 ld a,(Coordenada_X)
 443+ 9B90 A7           	and a
 444+ 9B91 20 44        	jr nz,8F
 445+ 9B93
 446+ 9B93 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 447+ 9B96 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 448+ 9B97 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 449+ 9B99
 450+ 9B99              ; ---------- ---------- ----------
 451+ 9B99
 452+ 9B99 3A D9 88     	ld a,(Vel_left)
 453+ 9B9C FE 02        	cp 2
 454+ 9B9E 28 0F        	jr z,1F
 455+ 9BA0 38 04        	jr c,6F
 456+ 9BA2 FE 04        	cp 4
 457+ 9BA4 28 12        	jr z,7F
 458+ 9BA6
 459+ 9BA6              ; ---------- ---------- ----------
 460+ 9BA6
 461+ 9BA6 3A CC 88     6 ld a,(CTRL_DESPLZ)
 462+ 9BA9 FE F8        	cp $f8
 463+ 9BAB 20 2A        	jr nz,8F
 464+ 9BAD 18 10        	jr 4F
 465+ 9BAF 3A CC 88     1 ld a,(CTRL_DESPLZ)
 466+ 9BB2 FE F9        	cp $f9
 467+ 9BB4 20 21        	jr nz,8F
 468+ 9BB6 18 07        	jr 4F
 469+ 9BB8 3A CC 88     7 ld a,(CTRL_DESPLZ)
 470+ 9BBB FE FB        	cp $fb
 471+ 9BBD 20 18        	jr nz,8F
 472+ 9BBF
 473+ 9BBF              ; ---------- ---------- ----------
 474+ 9BBF
 475+ 9BBF              4
 476+ 9BBF CD C5 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 477+ 9BC2              ;	call Reinicio
 478+ 9BC2
 479+ 9BC2              ; ---------- ---------- ----------
 480+ 9BC2
 481+ 9BC2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 482+ 9BC4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 483+ 9BC5
 484+ 9BC5              ;	ld hl,(Indice_Sprite_izq)
 485+ 9BC5              ;	ld (Puntero_DESPLZ_izq),hl
 486+ 9BC5
 487+ 9BC5 CD DE 9B     	call DESPLZ_IZQ
 488+ 9BC8 C1           	pop bc
 489+ 9BC9 10 F9        	djnz 5B
 490+ 9BCB 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 491+ 9BCE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 492+ 9BCF 22 C6 88     	ld (Posicion_actual),hl
 493+ 9BD2 CD 2E 9D     	call Genera_coordenadas
 494+ 9BD5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 495+ 9BD7
 496+ 9BD7              ; ---------- ---------- ----------
 497+ 9BD7
 498+ 9BD7              ; Movemos, no hay recolocación.
 499+ 9BD7
 500+ 9BD7 2A C6 88     8 ld hl,(Posicion_actual)
 501+ 9BDA CD DE 9B     	call DESPLZ_IZQ
 502+ 9BDD C9           2 ret
 503+ 9BDE
 504+ 9BDE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 505+ 9BDE              ;
 506+ 9BDE              ;	22/9/22
 507+ 9BDE
 508+ 9BDE              DESPLZ_IZQ
 509+ 9BDE
 510+ 9BDE CD ED 9B     	call Desplaza_izquierda
 511+ 9BE1 CD 39 9C         call modifica_parametros_1er_DESPLZ
 512+ 9BE4 CD 61 9C     	call Ciclo_completo_2
 513+ 9BE7 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 514+ 9BEA CB BE        	res 7,(hl)
 515+ 9BEC C9           	ret
 516+ 9BED
 517+ 9BED              Desplaza_izquierda
 518+ 9BED
 519+ 9BED 3A D9 88     	ld a,(Vel_left)
 520+ 9BF0 47           	ld b,a
 521+ 9BF1 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 522+ 9BF4 23           1 inc hl
 523+ 9BF5 23           	inc hl
 524+ 9BF6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 525+ 9BF8 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 526+ 9BFB CD 00 8D     	call Extrae_address
 527+ 9BFE 22 C8 88     	ld (Puntero_objeto),hl
 528+ 9C01
 529+ 9C01              ; Modifica (Puntero_DESPLZ_der).
 530+ 9C01
 531+ 9C01              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 532+ 9C01              ; Cuántos movimientos hemos hecho ??
 533+ 9C01              ; DE contiene (Puntero_DESPLZ_izq).
 534+ 9C01
 535+ 9C01 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 536+ 9C04 EB           	ex de,hl
 537+ 9C05 A7           	and a
 538+ 9C06 ED 52        	sbc hl,de
 539+ 9C08 CB 3D        	srl l
 540+ 9C0A 3E 08        6 ld a,8
 541+ 9C0C 95           	sub l
 542+ 9C0D 30 1E        	jr nc,3F
 543+ 9C0F
 544+ 9C0F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 545+ 9C0F              ; B="0".
 546+ 9C0F
 547+ 9C0F 04           4 inc b
 548+ 9C10 3C           	inc a
 549+ 9C11 20 FC        	jr nz,4B
 550+ 9C13 78           	ld a,b
 551+ 9C14 08           	ex af,af
 552+ 9C15 2A D0 88     	ld hl,(Indice_Sprite_izq)
 553+ 9C18 23           5 inc hl
 554+ 9C19 23           	inc hl
 555+ 9C1A 10 FC        	djnz 5B
 556+ 9C1C 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 557+ 9C1F CD 00 8D     	call Extrae_address
 558+ 9C22 22 C8 88     	ld (Puntero_objeto),hl
 559+ 9C25
 560+ 9C25              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 561+ 9C25              ; _(Posicion_actual).
 562+ 9C25
 563+ 9C25 21 C6 88     	ld hl,Posicion_actual
 564+ 9C28 35           	dec (hl)
 565+ 9C29 08           	ex af,af
 566+ 9C2A 6F           	ld l,a
 567+ 9C2B 18 DD        	jr 6B
 568+ 9C2D
 569+ 9C2D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 570+ 9C2D
 571+ 9C2D 47           3 ld b,a
 572+ 9C2E 2A CE 88     	ld hl,(Indice_Sprite_der)
 573+ 9C31 23           2 inc hl
 574+ 9C32 23           	inc hl
 575+ 9C33 10 FC        	djnz 2B
 576+ 9C35 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 577+ 9C38 C9           8 ret
 578+ 9C39
 579+ 9C39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 580+ 9C39              ;
 581+ 9C39              ;	modifica_parametros_1er_DESPLZ
 582+ 9C39              ;
 583+ 9C39              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 584+ 9C39              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 585+ 9C39              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 586+ 9C39
 587+ 9C39 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 588+ 9C3C A7           	and a
 589+ 9C3D 20 1E        	jr nz,1F
 590+ 9C3F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 591+ 9C40 32 CC 88         ld (CTRL_DESPLZ),a
 592+ 9C43 21 C5 88     	ld hl,Columns
 593+ 9C46 34           	inc (hl)
 594+ 9C47 3A D8 88     	ld a,(Cuad_objeto)
 595+ 9C4A E6 01        	and 1
 596+ 9C4C 20 0F        	jr nz,1F
 597+ 9C4E 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 598+ 9C51 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 599+ 9C52 22 C6 88     	ld (Posicion_actual),hl
 600+ 9C55 CD 2E 9D     	call Genera_coordenadas
 601+ 9C58 CD B4 9C     	call Dec_CTRL_DESPLZ
 602+ 9C5B 18 03        	jr 2F
 603+ 9C5D CD B4 9C     1 call Dec_CTRL_DESPLZ
 604+ 9C60 C9           2 ret
 605+ 9C61
 606+ 9C61              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 607+ 9C61
 608+ 9C61 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 609+ 9C64 FE F7        	cp $f7
 610+ 9C66 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 611+ 9C68 30 2C        	jr nc,3F
 612+ 9C6A
 613+ 9C6A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 614+ 9C6A
 615+ 9C6A 06 00        	ld b,0
 616+ 9C6C 04           4 inc b
 617+ 9C6D 3C           	inc a
 618+ 9C6E FE F7        	cp $f7
 619+ 9C70 20 FA        	jr nz,4B
 620+ 9C72 3E FF        	ld a,$ff
 621+ 9C74 90           	sub b
 622+ 9C75 32 CC 88     	ld (CTRL_DESPLZ),a
 623+ 9C78 18 1C        	jr 3F
 624+ 9C7A
 625+ 9C7A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 626+ 9C7A
 627+ 9C7A 21 C5 88     1 ld hl,Columns
 628+ 9C7D 35           	dec (hl)
 629+ 9C7E AF           	xor a
 630+ 9C7F 32 CC 88     	ld (CTRL_DESPLZ),a
 631+ 9C82 3A D8 88     	ld a,(Cuad_objeto)
 632+ 9C85 E6 01        	and 1
 633+ 9C87 28 0A        	jr z,2F
 634+ 9C89 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 635+ 9C8C 2B           	dec hl
 636+ 9C8D 22 C6 88     	ld (Posicion_actual),hl
 637+ 9C90 CD 2E 9D     	call Genera_coordenadas
 638+ 9C93
 639+ 9C93              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 640+ 9C93
 641+ 9C93 CD 2A 8D     2 call Inicia_puntero_objeto_izq
 642+ 9C96 C9           3 ret
 643+ 9C97
 644+ 9C97              ; ---------- ---------- ---------- ---------- ---------- ----------
 645+ 9C97              ;
 646+ 9C97              ;	19/10/22
 647+ 9C97              ;
 648+ 9C97              ;	(cp 29) para un Amadeus de 3 Columns.
 649+ 9C97              ;	(cp 30)   ""  ""    ""     2 Columns.
 650+ 9C97
 651+ 9C97 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 652+ 9C9A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 653+ 9C9C C9           	ret
 654+ 9C9D
 655+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 656+ 9C9D              ;
 657+ 9C9D              ;	19/10/22
 658+ 9C9D              ;
 659+ 9C9D              ;	(cp 2) para un Amadeus de 3 Columns.
 660+ 9C9D              ;	(cp 1)   ""  ""    ""     2 Columns.
 661+ 9C9D
 662+ 9C9D 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 663+ 9CA0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 664+ 9CA2 C9           	ret
 665+ 9CA3
 666+ 9CA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 667+ 9CA3              ;
 668+ 9CA3              ;	24/7/22
 669+ 9CA3              ;
 670+ 9CA3              ;	Inc_CTRL_DESPLZ
 671+ 9CA3              ;
 672+ 9CA3              ;
 673+ 9CA3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 674+ 9CA3
 675+ 9CA3 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 676+ 9CA6 3A DA 88     	ld a,(Vel_right)
 677+ 9CA9 A7           	and a
 678+ 9CAA 28 06        	jr z,1F
 679+ 9CAC 47           	ld b,a
 680+ 9CAD 34           3 inc (hl)
 681+ 9CAE 10 FD        	djnz 3B
 682+ 9CB0 18 01        	jr 2F
 683+ 9CB2 34           1 inc (hl)
 684+ 9CB3 C9           2 ret
 685+ 9CB4
 686+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 687+ 9CB4              ;
 688+ 9CB4              ;	5/2/23
 689+ 9CB4              ;
 690+ 9CB4              ;	Dec_CTRL_DESPLZ
 691+ 9CB4              ;
 692+ 9CB4              ;
 693+ 9CB4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 694+ 9CB4
 695+ 9CB4 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 696+ 9CB7 3A D9 88     	ld a,(Vel_left)
 697+ 9CBA A7           	and a
 698+ 9CBB 28 06        	jr z,1F
 699+ 9CBD 47           	ld b,a
 700+ 9CBE 35           3 dec (hl)
 701+ 9CBF 10 FD        	djnz 3B
 702+ 9CC1 18 01        	jr 2F
 703+ 9CC3 35           1 dec (hl)
 704+ 9CC4 C9           2 ret
 705+ 9CC5
 706+ 9CC5              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CC5
 708+ 9CC5 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 709+ 9CC8 01 1F 00     	ld bc,31
 710+ 9CCB A7           	and a
 711+ 9CCC ED 4A        	adc hl,bc
 712+ 9CCE 22 C6 88     	ld (Posicion_actual),hl
 713+ 9CD1 21 F2 88     	ld hl,Ctrl_0														; $xxx1
 714+ 9CD4 CB C6        	set 0,(hl)
 715+ 9CD6 C9           	ret
 716+ 9CD7
 717+ 9CD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 718+ 9CD7
 719+ 9CD7 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 720+ 9CDA 01 1F 00     	ld bc,31
 721+ 9CDD A7           	and a
 722+ 9CDE ED 42        	sbc hl,bc
 723+ 9CE0 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 724+ 9CE3 21 F2 88     	ld hl,Ctrl_0
 725+ 9CE6 CB CE        	set 1,(hl)
 726+ 9CE8 C9           	ret
 727+ 9CE9
 728+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 729+ 9CE9
 730+ 9CE9 24           Reaparece_abajo inc h
 731+ 9CEA 01 E0 17     	ld bc,$17e0
 732+ 9CED A7           	and a
 733+ 9CEE ED 4A        	adc hl,bc
 734+ 9CF0 22 C6 88     	ld (Posicion_actual),hl
 735+ 9CF3 21 F2 88     	ld hl,Ctrl_0
 736+ 9CF6 CB D6        	set 2,(hl)
 737+ 9CF8 C9           	ret
 738+ 9CF9
 739+ 9CF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 740+ 9CF9
 741+ 9CF9 01 E0 17     Reaparece_arriba ld bc,$17e0
 742+ 9CFC A7           	and a
 743+ 9CFD ED 42        	sbc hl,bc
 744+ 9CFF 22 C6 88     	ld (Posicion_actual),hl
 745+ 9D02 21 F2 88     	ld hl,Ctrl_0
 746+ 9D05 CB DE        	set 3,(hl)
 747+ 9D07 C9           	ret
 748+ 9D08
 749+ 9D08              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 750+ 9D08              ;
 751+ 9D08              ;	15/07/23
 752+ 9D08
 753+ 9D08              Reinicio
 754+ 9D08
 755+ 9D08              ; Vamos a reiniciar los punteros y variables de movimiento.
 756+ 9D08
 757+ 9D08 AF           	xor a
 758+ 9D09 21 F7 88     	ld hl,Puntero_indice_mov_bucle
 759+ 9D0C CD 2A 9D     	call Limpia_contenido_hl
 760+ 9D0F
 761+ 9D0F 21 C6 88     	ld hl,Posicion_actual
 762+ 9D12 CD 2A 9D     	call Limpia_contenido_hl
 763+ 9D15
 764+ 9D15 CD 5A A0     	call Inicializa_Puntero_indice_mov
 765+ 9D18 CD E4 9F     	call Inicia_Puntero_mov
 766+ 9D1B
 767+ 9D1B 21 F9 88     	ld hl,Incrementa_puntero
 768+ 9D1E 06 05        	ld b,5
 769+ 9D20 77           1 ld (hl),a
 770+ 9D21 23           	inc hl
 771+ 9D22 10 FC        	djnz 1B
 772+ 9D24
 773+ 9D24 21 03 89     	ld hl,Ctrl_2
 774+ 9D27 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 775+ 9D29
 776+ 9D29 C9           	ret
 777+ 9D2A
 778+ 9D2A 77           Limpia_contenido_hl	ld (hl),a
 779+ 9D2B 23           	inc hl
 780+ 9D2C 77           	ld (hl),a
 781+ 9D2D C9           	ret
 782+ 9D2E
 783+ 9D2E
# file closed: Direcciones.asm
1768  9D2E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D2E              ; ------------------------------------------------------------------------
   2+ 9D2E              ;
   3+ 9D2E              ;	02/04/23
   4+ 9D2E              ;
   5+ 9D2E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D2E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D2E              ;
   8+ 9D2E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D2E              ;
  10+ 9D2E              ;	Modifica: A,BC y DE.
  11+ 9D2E
  12+ 9D2E C5           Genera_coordenadas push bc
  13+ 9D2F E5           	push hl
  14+ 9D30 D5           	push de
  15+ 9D31
  16+ 9D31 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9D34
  18+ 9D34 7D           	ld a,l
  19+ 9D35 E6 1F        	and $1f
  20+ 9D37 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D3A
  22+ 9D3A CD 7F 99     	call calcula_tercio
  23+ 9D3D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D3E
  25+ 9D3E 1E 00        	ld e,0
  26+ 9D40 7D           	ld a,l
  27+ 9D41 E6 E0        	and $e0
  28+ 9D43 28 01        	jr z,1F
  29+ 9D45 04           	inc b
  30+ 9D46
  31+ 9D46 04           1 inc b
  32+ 9D47 05           	dec b
  33+ 9D48 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D4A              ;														; _ , salimos.
  35+ 9D4A 1C           3 inc e
  36+ 9D4B D6 20        	sub 32
  37+ 9D4D 20 FB        	jr nz,3B
  38+ 9D4F 10 F5        	djnz 1B
  39+ 9D51
  40+ 9D51 7B           2 ld a,e
  41+ 9D52 32 CB 88     	ld (Coordenada_y),a
  42+ 9D55
  43+ 9D55 D1           	pop de
  44+ 9D56 E1           	pop hl
  45+ 9D57 C1           	pop bc
  46+ 9D58
  47+ 9D58 C9           	ret
  48+ 9D59
  49+ 9D59              ; ------------------------------------------------------------------------
  50+ 9D59              ;	28/05/23
  51+ 9D59              ;
  52+ 9D59              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D59              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D59              ;
  55+ 9D59              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D59              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D59              ;
  58+ 9D59              ;		DE="$120d"
  59+ 9D59              ;
  60+ 9D59              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D59              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D59              ;
  63+ 9D59              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D59
  65+ 9D59              ;	Modifica: A,BC y DE.
  66+ 9D59
  67+ 9D59
  68+ 9D59              Genera_coordenadas_disparo
  69+ 9D59
  70+ 9D59              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D59
  72+ 9D59 7D           	ld a,l
  73+ 9D5A E6 1F        	and $1f
  74+ 9D5C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D5D CD 7F 99     	call calcula_tercio
  76+ 9D60 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D61 1E 00        	ld e,0
  78+ 9D63 7D           	ld a,l
  79+ 9D64 E6 E0        	and $e0
  80+ 9D66 28 01        	jr z,1F
  81+ 9D68 04           	inc b
  82+ 9D69 1C           1 inc e
  83+ 9D6A D6 20        	sub 32
  84+ 9D6C 20 FB        	jr nz,1B
  85+ 9D6E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D70 C9           	ret
  87+ 9D71
# file closed: Genera_coordenadas.asm
1769  9D71              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D71              ; Relojes y temporizaciones.
   2+ 9D71
   3+ 9D71              ; ------------------------------------------------------
   4+ 9D71              ;
   5+ 9D71              ;	16/7/23
   6+ 9D71              ;
   7+ 9D71              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D71              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D71              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D71              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D71              ;
  12+ 9D71              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D71              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D71
  15+ 9D71              ; Disparo_entidad db 1
  16+ 9D71              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D71              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D71
  19+ 9D71              Habilita_disparos
  20+ 9D71
  21+ 9D71 7E           	ld a,(hl)
  22+ 9D72 A7           	and a
  23+ 9D73 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D74
  25+ 9D74 EB           	ex de,hl
  26+ 9D75
  27+ 9D75 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D76 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D77
  30+ 9D77              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D77
  32+ 9D77 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D78 7E           	ld a,(hl)
  34+ 9D79 23           	inc hl
  35+ 9D7A 77           	ld (hl),a
  36+ 9D7B
  37+ 9D7B EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D7C 3E 01        	ld a,1
  39+ 9D7E 77           	ld (hl),a
  40+ 9D7F C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1770  9D80              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D80
   2+ 9D80
   3+ 9D80              ;   07/07/23
   4+ 9D80              ;
   5+ 9D80              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D80              ;
   7+ 9D80              ;   Codificación:
   8+ 9D80              ;
   9+ 9D80              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D80              ;
  11+ 9D80              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D80              ;
  13+ 9D80              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D80              ;
  15+ 9D80              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D80              ;
  17+ 9D80              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D80              ;                               ..... %01000010 Vel_up 4
  19+ 9D80              ;                                               Vel_down 2
  20+ 9D80              ;                               ..... $42
  21+ 9D80              ;
  22+ 9D80              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D80              ;
  24+ 9D80              ;                               ..... %01000010 Vel_left 4
  25+ 9D80              ;                                               Vel_right 2
  26+ 9D80              ;                               ..... $42
  27+ 9D80              ;
  28+ 9D80              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D80              ;
  30+ 9D80              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D80              ;
  32+ 9D80              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D80              ;
  34+ 9D80              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D80              ;                                     $53
  36+ 9D80              ;
  37+ 9D80              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D80              ;
  39+ 9D80              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D80              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D80              ;
  42+ 9D80              ;                       Arriba ..... $81
  43+ 9D80              ;                       Arriba - izquierda ..... $a1
  44+ 9D80              ;                       Arriba - derecha ..... $91
  45+ 9D80              ;
  46+ 9D80              ;                       Abajo ..... $41
  47+ 9D80              ;                       Abajo - izquierda ..... $61
  48+ 9D80              ;                       Abajo - derecha ..... $51
  49+ 9D80              ;
  50+ 9D80              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D80              ;
  52+ 9D80              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D80              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D80              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D80              ;
  56+ 9D80              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D80              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D80              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D80              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D80              ;
  61+ 9D80              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D80              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D80              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D80              ;
  65+ 9D80              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D80              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D80              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D80              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D80
  70+ 9D80              ; ----- ----- ----- ----- -----
  71+ 9D80
  72+ 9D80 AC 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D82 B4 9D            defw F_1
  74+ 9D84 BE 9D            defw F_2
  75+ 9D86 C8 9D            defw Codo_abajo_derecha
  76+ 9D88 FC 9D            defw Derecha_y_subiendo
  77+ 9D8A 06 9E            defw Derecha_y_subiendo_1
  78+ 9D8C 10 9E            defw F_3
  79+ 9D8E 1A 9E            defw F_4
  80+ 9D90 24 9E            defw Derecha_y_bajando
  81+ 9D92 2E 9E            defw Derecha_y_bajando_1
  82+ 9D94 38 9E            defw Derecha_y_bajando_2
  83+ 9D96 42 9E            defw Codo_derecha_abajo
  84+ 9D98 72 9E            defw Codo_abajo_izq.
  85+ 9D9A A6 9E            defw Izquierda_y_subiendo
  86+ 9D9C B0 9E            defw Izquierda_y_subiendo_1
  87+ 9D9E BA 9E            defw F_5
  88+ 9DA0 C4 9E            defw F_6
  89+ 9DA2 CE 9E            defw Izquierda_y_bajando
  90+ 9DA4 D8 9E            defw Izquierda_y_bajando_1
  91+ 9DA6 E2 9E            defw Izquierda_y_bajando_2
  92+ 9DA8 EC 9E            defw Codo_izquierda_abajo
  93+ 9DAA 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DAC
  95+ 9DAC 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DB0 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DB4
  98+ 9DB4 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DB8 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DBC 08 00
 100+ 9DBE 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DC2 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DC6 0F FE
 102+ 9DC8
 103+ 9DC8 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DCC 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DD0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DD4 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DD8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DDC 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DE0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DE4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DE8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DEC 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DF0 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DF4 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DF8 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DFC
 117+ 9DFC 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E00 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E04 06 00
 119+ 9E06
 120+ 9E06 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E0A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E0E 02 00
 122+ 9E10
 123+ 9E10 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E14 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E18 04 00
 125+ 9E1A 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E1E 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E22 08 00
 127+ 9E24
 128+ 9E24 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E28 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E2C 02 00
 130+ 9E2E
 131+ 9E2E 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E32 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E36 06 00
 133+ 9E38
 134+ 9E38 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E3C 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E40 06 00
 136+ 9E42
 137+ 9E42              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E42
 139+ 9E42 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E46 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E4A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E4E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E52 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E56 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E5A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E5E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E62 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E66 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E6A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E6E 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E72
 152+ 9E72 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E76 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E7A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E7E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E82 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E86 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E8A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E8E 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E92 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E96 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E9A 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E9E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EA2 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EA6
 166+ 9EA6 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EAA 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EAE 06 00
 168+ 9EB0
 169+ 9EB0 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EB4 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EB8 02 00
 171+ 9EBA
 172+ 9EBA 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EBE 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EC2 04 00
 174+ 9EC4 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EC8 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ECC 08 00
 176+ 9ECE
 177+ 9ECE 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9ED2 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9ED6 02 00
 179+ 9ED8
 180+ 9ED8 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EDC 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EE0 06 00
 182+ 9EE2
 183+ 9EE2 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EE6 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EEA 06 00
 185+ 9EEC
 186+ 9EEC 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EF0 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EF4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EF8 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EFC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F00 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F04 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F08 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F0C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F10 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F14 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F18 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F1C
 199+ 9F1C              ; ----- ----- ----- ----- -----
 200+ 9F1C              ;
 201+ 9F1C              ;   27/06/23
 202+ 9F1C
 203+ 9F1C              Movimiento
 204+ 9F1C
 205+ 9F1C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F1C
 207+ 9F1C              ;    ld hl,(Posicion_actual)
 208+ 9F1C
 209+ 9F1C 3A 03 89         ld a,(Ctrl_2)
 210+ 9F1F CB 57            bit 2,a
 211+ 9F21 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F23
 213+ 9F23 2A F5 88         ld hl,(Puntero_mov)
 214+ 9F26 7E               ld a,(hl)
 215+ 9F27
 216+ 9F27              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F27
 218+ 9F27              Inicia_desplazamiento.
 219+ 9F27
 220+ 9F27              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F27
 222+ 9F27 CD 1B A0         call Ajusta_velocidad_desplazamiento
 223+ 9F2A
 224+ 9F2A              ; Iniciamos (Repetimos_mov).
 225+ 9F2A
 226+ 9F2A 7E               ld a,(hl)
 227+ 9F2B E6 0F            and $0f
 228+ 9F2D 32 FB 88         ld (Repetimos_desplazamiento),a
 229+ 9F30 32 FC 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9F33
 231+ 9F33              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F33
 233+ 9F33 23               inc hl
 234+ 9F34 7E               ld a,(hl)
 235+ 9F35 32 FE 88         ld (Cola_de_desplazamiento),a
 236+ 9F38 2B               dec hl
 237+ 9F39
 238+ 9F39 21 03 89         ld hl,Ctrl_2
 239+ 9F3C CB D6            set 2,(hl)
 240+ 9F3E
 241+ 9F3E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F3E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F3E
 244+ 9F3E              Desplazamiento_iniciado
 245+ 9F3E
 246+ 9F3E CD EF 9F         call Aplica_desplazamiento
 247+ 9F41
 248+ 9F41 3A 03 89         ld a,(Ctrl_2)
 249+ 9F44 CB 67            bit 4,a
 250+ 9F46 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F47
 252+ 9F47 21 FB 88     3 ld hl,Repetimos_desplazamiento
 253+ 9F4A 35               dec (hl)
 254+ 9F4B C0               ret nz
 255+ 9F4C
 256+ 9F4C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F4C              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F4C              ; Analiza (Cola_de_desplazamiento).
 259+ 9F4C
 260+ 9F4C 3A FE 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F4F A7               and a
 262+ 9F50 CC 44 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F53 28 30            jr z,Reinicia_el_movimiento
 264+ 9F55
 265+ 9F55 FE FF            cp $ff
 266+ 9F57 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F59
 268+ 9F59 FE FE            cp $fe
 269+ 9F5B CC C8 9F         call z,Fijamos_bucle
 270+ 9F5E 28 25            jr z,Reinicia_el_movimiento
 271+ 9F60
 272+ 9F60 FE FD            cp $fd
 273+ 9F62 20 11            jr nz,1F
 274+ 9F64
 275+ 9F64              ; ---
 276+ 9F64              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F64
 278+ 9F64 3A 03 89         ld a,(Ctrl_2)
 279+ 9F67 CB 5F            bit 3,a
 280+ 9F69 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F6B
 282+ 9F6B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F6B
 284+ 9F6B 21 03 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F6E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F70
 287+ 9F70 CD D9 9F         call Inicia_Repetimos_movimiento
 288+ 9F73 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F75              ; ---
 290+ 9F75
 291+ 9F75 FE 01        1 cp 1
 292+ 9F77 CA B2 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F7A
 294+ 9F7A 3D               dec a
 295+ 9F7B 32 FE 88         ld (Cola_de_desplazamiento),a
 296+ 9F7E
 297+ 9F7E 3A FC 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F81 32 FB 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F84              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F84 C9               ret
 301+ 9F85
 302+ 9F85              Reinicia_el_movimiento
 303+ 9F85
 304+ 9F85 3A 03 89         ld a,(Ctrl_2)
 305+ 9F88 CB 5F            bit 3,a
 306+ 9F8A 28 1B            jr z,2F
 307+ 9F8C
 308+ 9F8C              ; (Cola_de_desplazamiento)="254".
 309+ 9F8C
 310+ 9F8C 21 FD 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F8F 35               dec (hl)
 312+ 9F90 20 15            jr nz,2F
 313+ 9F92
 314+ 9F92              ; Fin de las repeticiones del último movimiento.
 315+ 9F92
 316+ 9F92 21 03 89         ld hl,Ctrl_2
 317+ 9F95 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F97
 319+ 9F97 2A F5 88         ld hl,(Puntero_mov)
 320+ 9F9A 23               inc hl
 321+ 9F9B 23               inc hl
 322+ 9F9C 23               inc hl
 323+ 9F9D 22 F5 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FA0              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FA0 7E               ld a,(hl)
 326+ 9FA1 32 FE 88         ld (Cola_de_desplazamiento),a
 327+ 9FA4
 328+ 9FA4 C3 4C 9F         jp Cola
 329+ 9FA7
 330+ 9FA7 CD E4 9F     2 call Inicia_Puntero_mov
 331+ 9FAA
 332+ 9FAA 21 03 89         ld hl,Ctrl_2
 333+ 9FAD CB 96            res 2,(hl)
 334+ 9FAF
 335+ 9FAF C3 1C 9F         jp Movimiento
 336+ 9FB2
 337+ 9FB2              Siguiente_desplazamiento
 338+ 9FB2
 339+ 9FB2              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9FB2              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9FB2
 342+ 9FB2 21 03 89         ld hl,Ctrl_2
 343+ 9FB5 CB 96            res 2,(hl)
 344+ 9FB7
 345+ 9FB7 2A F5 88         ld hl,(Puntero_mov)
 346+ 9FBA 23               inc hl
 347+ 9FBB 23               inc hl
 348+ 9FBC 22 F5 88         ld (Puntero_mov),hl
 349+ 9FBF
 350+ 9FBF 7E               ld a,(hl)
 351+ 9FC0 A7               and a
 352+ 9FC1 CC 44 A0         call z,Incrementa_Puntero_indice_mov
 353+ 9FC4 CA 85 9F         jp z,Reinicia_el_movimiento
 354+ 9FC7
 355+ 9FC7 C9               ret
 356+ 9FC8
 357+ 9FC8              ; Subrutinas -----------------------------------------
 358+ 9FC8              ; ---------- --------- --------- ---------- ----------
 359+ 9FC8              ;
 360+ 9FC8              ;   24/07/23
 361+ 9FC8              ;
 362+ 9FC8              ;   Fijamos_bucle
 363+ 9FC8              ;
 364+ 9FC8              ;
 365+ 9FC8
 366+ 9FC8              Fijamos_bucle
 367+ 9FC8
 368+ 9FC8 3A F9 88         ld a,(Incrementa_puntero)
 369+ 9FCB 3C               inc a
 370+ 9FCC 32 FA 88         ld (Incrementa_puntero_backup),a
 371+ 9FCF
 372+ 9FCF CD 44 A0         call Incrementa_Puntero_indice_mov
 373+ 9FD2 2A F3 88         ld hl,(Puntero_indice_mov)
 374+ 9FD5 22 F7 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9FD8 C9               ret
 376+ 9FD9
 377+ 9FD9              ; ---------- --------- --------- ---------- ----------
 378+ 9FD9              ;
 379+ 9FD9              ;   07/7/23
 380+ 9FD9              ;
 381+ 9FD9              ;   Inicia_Repetimos_movimiento
 382+ 9FD9              ;
 383+ 9FD9              ;
 384+ 9FD9
 385+ 9FD9              Inicia_Repetimos_movimiento
 386+ 9FD9
 387+ 9FD9              ; Iniciamos (Repetimos_movimiento).
 388+ 9FD9
 389+ 9FD9 DD 2A F5 88      ld ix,(Puntero_mov)
 390+ 9FDD DD 7E 02         ld a,(ix+2)
 391+ 9FE0 32 FD 88         ld (Repetimos_movimiento),a
 392+ 9FE3
 393+ 9FE3 C9               ret
 394+ 9FE4
 395+ 9FE4              ; ---------- --------- --------- ---------- ----------
 396+ 9FE4              ;
 397+ 9FE4              ;   26/6/23
 398+ 9FE4              ;
 399+ 9FE4              ;   Inicia_Puntero_mov
 400+ 9FE4              ;
 401+ 9FE4              ;
 402+ 9FE4
 403+ 9FE4 2A F3 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FE7 5E               ld e,(hl)
 405+ 9FE8 23               inc hl
 406+ 9FE9 56               ld d,(hl)
 407+ 9FEA EB               ex de,hl
 408+ 9FEB 22 F5 88         ld (Puntero_mov),hl
 409+ 9FEE C9               ret
 410+ 9FEF
 411+ 9FEF              ; ---------- --------- --------- ---------- ----------
 412+ 9FEF              ;
 413+ 9FEF              ;   27/06/23
 414+ 9FEF              ;
 415+ 9FEF              ;   Aplica_movimiento.
 416+ 9FEF
 417+ 9FEF              Aplica_desplazamiento
 418+ 9FEF
 419+ 9FEF              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FEF
 421+ 9FEF 2A F5 88         ld hl, (Puntero_mov)
 422+ 9FF2
 423+ 9FF2 7E               ld a,(hl)
 424+ 9FF3 E6 F0            and $f0
 425+ 9FF5 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9FF6
 427+ 9FF6 CB 7E            bit 7,(hl)
 428+ 9FF8 28 03            jr z,1F
 429+ 9FFA CD 1A 9A         call Mov_up
 430+ 9FFD 2A F5 88     1 ld hl, (Puntero_mov)
 431+ A000 CB 76            bit 6,(hl)
 432+ A002 28 03            jr z,2F
 433+ A004 CD C5 99         call Mov_down
 434+ A007 2A F5 88     2 ld hl, (Puntero_mov)
 435+ A00A CB 6E            bit 5,(hl)
 436+ A00C 28 03            jr z,3F
 437+ A00E CD 7B 9B         call Mov_left
 438+ A011 2A F5 88     3 ld hl, (Puntero_mov)
 439+ A014 CB 66            bit 4,(hl)
 440+ A016 C8               ret z
 441+ A017 CD 5D 9A         call Mov_right
 442+ A01A C9               ret
 443+ A01B
 444+ A01B              ; ---------- --------- --------- ---------- ----------
 445+ A01B              ;
 446+ A01B              ;   26/06/23
 447+ A01B              ;
 448+ A01B              ;   Ajusta_velocidad_desplazamiento.
 449+ A01B
 450+ A01B              Ajusta_velocidad_desplazamiento
 451+ A01B
 452+ A01B              ; 1er byte de la cadena de movimiento.
 453+ A01B              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A01B
 455+ A01B CD 39 A0         call Extrae_nibble_alto
 456+ A01E
 457+ A01E 32 DB 88         ld (Vel_up),a
 458+ A021 79               ld a,c
 459+ A022 E6 0F            and $0f
 460+ A024 32 DC 88         ld (Vel_down),a
 461+ A027
 462+ A027              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A027              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A027
 465+ A027 23               inc hl
 466+ A028 CD 39 A0         call Extrae_nibble_alto
 467+ A02B
 468+ A02B 32 D9 88         ld (Vel_left),a
 469+ A02E 79               ld a,c
 470+ A02F E6 0F            and $0f
 471+ A031 32 DA 88         ld (Vel_right),a
 472+ A034
 473+ A034              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A034
 475+ A034 23               inc hl
 476+ A035 22 F5 88         ld (Puntero_mov),hl
 477+ A038 C9               ret
 478+ A039
 479+ A039 06 04        Extrae_nibble_alto ld b,4
 480+ A03B 7E               ld a,(hl)
 481+ A03C 4F               ld c,a
 482+ A03D E6 F0            and $f0
 483+ A03F CB 3F        1 srl a
 484+ A041 10 FC            djnz 1B
 485+ A043 C9               ret
 486+ A044
 487+ A044              ; ---------- --------- --------- ---------- ----------
 488+ A044              ;
 489+ A044              ;   5/7/23
 490+ A044              ;
 491+ A044              ;   Incrementa_Puntero_indice_mov
 492+ A044
 493+ A044              Incrementa_Puntero_indice_mov
 494+ A044
 495+ A044 21 F9 88         ld hl,Incrementa_puntero
 496+ A047 34               inc (hl)
 497+ A048
 498+ A048 2A F3 88         ld hl,(Puntero_indice_mov)
 499+ A04B 01 02 00         ld bc,2
 500+ A04E A7               and a
 501+ A04F 09               add hl,bc
 502+ A050 22 F3 88         ld (Puntero_indice_mov),hl
 503+ A053
 504+ A053 7E               ld a,(hl)
 505+ A054 A7               and a
 506+ A055
 507+ A055              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A055
 509+ A055              ;    jr z,$
 510+ A055
 511+ A055              ;! Reinicia el Patrón de movimiento.
 512+ A055
 513+ A055 CC 5A A0         call z,Inicializa_Puntero_indice_mov
 514+ A058
 515+ A058 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A059
 517+ A059 C9               ret
 518+ A05A
 519+ A05A
 520+ A05A              ; ---------- --------- --------- ---------- ----------
 521+ A05A              ;
 522+ A05A              ;   24/07/23
 523+ A05A              ;
 524+ A05A              ;   Inicializa_Puntero_indice_mov
 525+ A05A
 526+ A05A              Inicializa_Puntero_indice_mov
 527+ A05A
 528+ A05A              ; Existe etiqueta de bucle principal???
 529+ A05A
 530+ A05A 2A F7 88         ld hl,(Puntero_indice_mov_bucle)
 531+ A05D 24               inc h
 532+ A05E 25               dec h
 533+ A05F 28 05            jr z,2F
 534+ A061
 535+ A061 22 F3 88         ld (Puntero_indice_mov),hl
 536+ A064 18 14            jr 3F
 537+ A066
 538+ A066              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A066
 540+ A066 3A F9 88     2 ld a,(Incrementa_puntero)
 541+ A069 47               ld b,a
 542+ A06A
 543+ A06A 2A F3 88         ld hl,(Puntero_indice_mov)
 544+ A06D 2B           1 dec hl
 545+ A06E 2B               dec hl
 546+ A06F 10 FC            djnz 1B
 547+ A071 22 F3 88         ld (Puntero_indice_mov),hl
 548+ A074
 549+ A074 AF               xor a
 550+ A075 32 F9 88         ld (Incrementa_puntero),a
 551+ A078 18 06            jr 4F
 552+ A07A
 553+ A07A 3A FA 88     3 ld a,(Incrementa_puntero_backup)
 554+ A07D 32 F9 88         ld (Incrementa_puntero),a
 555+ A080 C9           4 ret
 556+ A081
 557+ A081
 558+ A081
# file closed: Patrones_de_mov.asm
1771  A081              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A081              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A081              ;
   3+ A081              ;	12/12/23
   4+ A081              ;
   5+ A081              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A081
   7+ A081              ;	ADC HL,SP	LD (addr),SP
   8+ A081              ;	ADD HL,SP	LD SP,(addr)
   9+ A081              ;	ADD IX,SP	LD SP,nn
  10+ A081              ; 	ADD IY,SP	LD SP,HL
  11+ A081              ;				LD SP,IX
  12+ A081              ;	DEC SP		LD SP,IY
  13+ A081
  14+ A081              ;	EX (SP),HL
  15+ A081              ;	EX (SP),IX
  16+ A081              ;	EX (SP),IY
  17+ A081
  18+ A081              ;	INC SP
  19+ A081
  20+ A081                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 ED 73 16 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 7FA4
  36+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 7FA4
  38+ 7FA4 31 E4 88         ld sp,Variables_de_borrado+6
  39+ 7FA7
  40+ 7FA7 E5               push hl
  41+ 7FA8 DD E5            push ix
  42+ 7FAA FD E5            push iy
  43+ 7FAC
  44+ 7FAC 31 F0 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 7FAF DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 7FB1              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 7FB1
  48+ 7FB1 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 7FB4
  50+ 7FB4 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 7FB5 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 7FB7 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 7FB9
  54+ 7FB9              ; Disparo o entidad?
  55+ 7FB9
  56+ 7FB9 3A 05 89         ld a,(Ctrl_1)
  57+ 7FBC CB 47            bit 0,a
  58+ 7FBE 28 05            jr z,2F
  59+ 7FC0
  60+ 7FC0 2A 1E 89         ld hl,(Stack_snapshot_disparos)
  61+ 7FC3 18 0F            jr 4F
  62+ 7FC5
  63+ 7FC5              ; No es disparo. Entidad/Amadeus ????
  64+ 7FC5
  65+ 7FC5 3A F2 88     2 ld a,(Ctrl_0)
  66+ 7FC8 CB 77            bit 6,a
  67+ 7FCA 28 05            jr z,7F
  68+ 7FCC
  69+ 7FCC              ; Guardamos foto de Amadeus.
  70+ 7FCC
  71+ 7FCC 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  72+ 7FCF 18 03            jr 4F
  73+ 7FD1
  74+ 7FD1 2A 1C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 7FD4
  76+ 7FD4 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 7FD6
  78+ 7FD6 D1           1 pop de
  79+ 7FD7 73               ld (hl),e
  80+ 7FD8 23               inc hl
  81+ 7FD9 72               ld (hl),d
  82+ 7FDA 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 7FDB 10 F9            djnz 1B
  84+ 7FDD
  85+ 7FDD              ; Disparo o entidad ?
  86+ 7FDD
  87+ 7FDD 3A 05 89         ld a,(Ctrl_1)
  88+ 7FE0 CB 47            bit 0,a
  89+ 7FE2 28 05            jr z,5F
  90+ 7FE4
  91+ 7FE4 22 1E 89         ld (Stack_snapshot_disparos),hl
  92+ 7FE7 18 13            jr 6F
  93+ 7FE9
  94+ 7FE9              ; Entidad o Amadeus ?
  95+ 7FE9
  96+ 7FE9 3A F2 88     5 ld a,(Ctrl_0)
  97+ 7FEC CB 77            bit 6,a
  98+ 7FEE 28 09            jr z,8F
  99+ 7FF0
 100+ 7FF0 22 22 89         ld (End_Snapshot_Amadeus),hl
 101+ 7FF3 ED 7B 16 89      ld sp,(Stack)
 102+ 7FF7 FB               ei
 103+ 7FF8 C9               ret
 104+ 7FF9
 105+ 7FF9 22 1C 89     8 ld (Stack_snapshot),hl
 106+ 7FFC ED 7B 16 89  6 ld sp,(Stack)
 107+ 8000
 108+ 8000 C9               ret
 109+ 8001
 110+ 8001              ; -----------------------------------------------------------------------------
 111+ 8001              ;
 112+ 8001              ;   21/11/23
 113+ 8001
 114+ 8001              Limpia_y_reinicia_Stack_Snapshot
 115+ 8001
 116+ 8001              ;   Limpia Album_de_fotos.
 117+ 8001
 118+ 8001 2A 1C 89         ld hl,(Stack_snapshot)
 119+ 8004 7D               ld a,l
 120+ 8005 A7               and a
 121+ 8006 C8               ret z   ;   Salimos si el álbum está vacío.
 122+ 8007
 123+ 8007 47               ld b,a
 124+ 8008 04               inc b
 125+ 8009
 126+ 8009 36 00        1 ld (hl),0
 127+ 800B 2D               dec l
 128+ 800C 10 FB            djnz 1B
 129+ 800E
 130+ 800E              ;   Reinicializa (Stack_snapshot).
 131+ 800E
 132+ 800E AF               xor a
 133+ 800F 32 1C 89         ld (Stack_snapshot),a
 134+ 8012
 135+ 8012 C9               ret
# file closed: Guarda_foto_registros.asm
1772  8013
1773  8013              	SAVESNA "Pruebas.sna", START
1774  8013
1775  8013
1776  8013
1777  8013
# file closed: Banco_de_pruebas.asm
