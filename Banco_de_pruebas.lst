# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 9F 87     	call Frame
  15  A104              ; Debugggggg
  16  A104              ;	ld a,(Ctrl_1)
  17  A104              ;	bit 3,a
  18  A104              ;	jr nz,$
  19  A104              ; Debugggggg
  20  A104 ED 4D        	reti
  21  A106
  22  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  23  A106
  24  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  25  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 8484
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 848F
 128+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8490
 130+ 8490 00 00        	db 0,0											; Variables_de_borrado
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00        	defw 0											;	" " " " " " "
 133+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 849A
 135+ 849A 00 00        	db 0,0											; Variables_de_pintado
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00        	defw 0											;	" " " " " " "
 138+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 139+ 84A4
 140+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 141+ 84A7
 142+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 143+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 144+ 84AE
 145+ 84AE 00           	db 0 											; (Columnas).
 146+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 147+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 148+ 84B3
 149+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 150+ 84B3
 151+ 84B3 02 02        Caja_1 db 2,2										; (Filas) / (Columns).
 152+ 84B5 00 00        	defw 0											; (Posicion_actual).
 153+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 154+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 155+ 84BC
 156+ 84BC 04           	db %00000100 									; (Attr).
 157+ 84BD
 158+ 84BD 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 159+ 84BF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 160+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 161+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 162+ 84C5
 163+ 84C5 81 47        	defw $4781										; (Posicion_inicio).
 164+ 84C7 01           	db 1											; (Cuad_objeto).
 165+ 84C8
 166+ 84C8 01 02 01 02  	db 1,2,1,2										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 167+ 84CC
 168+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 169+ 84CD
 170+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 171+ 84CF 00 00        	defw 0											;	" " " " " " "
 172+ 84D1 00 00        	defw 0											;	" " " " " " "
 173+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 174+ 84D7
 175+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 176+ 84D9 00 00        	defw 0											;	" " " " " " "
 177+ 84DB 00 00        	defw 0											;	" " " " " " "
 178+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 84E1
 180+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 181+ 84E4
 182+ 84E4 85 98 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 183+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 184+ 84EB
 185+ 84EB 00           	db 0 											; (Columnas).
 186+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 187+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 188+ 84F0
 189+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 190+ 84F0
 191+ 84F0 02 02        Caja_2 db 2,2		                     		    ; (Filas) / (Columns).
 192+ 84F2 00 00        	defw 0                                          ; (Posicion_actual).
 193+ 84F4 00 00        	defw 0											; (Puntero_objeto).
 194+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 84F9
 196+ 84F9 02           	db %00000010									; (Attr).
 197+ 84FA
 198+ 84FA 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 199+ 84FC 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 200+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 8502
 203+ 8502 5E 48        	defw $485e                                      ; (Posicion_inicio).
 204+ 8504 02           	db 2											; (Cuad_objeto).
 205+ 8505
 206+ 8505 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8509
 208+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 850A
 210+ 850A 00 00        	db 0,0											; Variables_de_borrado
 211+ 850C 00 00        	defw 0										 	;	" " " " " " "
 212+ 850E 00 00        	defw 0											;	" " " " " " "
 213+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 214+ 8514
 215+ 8514 00 00        	db 0,0											; Variables_de_pintado
 216+ 8516 00 00        	defw 0											;	" " " " " " "
 217+ 8518 00 00        	defw 0											;	" " " " " " "
 218+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 219+ 851E
 220+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 221+ 8521
 222+ 8521 83 98 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
 223+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8528
 225+ 8528 00           	db 0 											; (Columnas).
 226+ 8529 00 00        	defw 0											; (Limite_horizontal).
 227+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 228+ 852D
 229+ 852D              ; ---------- ---------- ---------- ---------- ----------
 230+ 852D
 231+ 852D 02 02        Caja_3 db 2,2	                                 	; (Filas) / (Columns).
 232+ 852F 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8531 00 00        	defw 0											; (Puntero_objeto).
 234+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 8536
 236+ 8536 04           	db %00000100									; (Attr).
 237+ 8537
 238+ 8537 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8539 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 853B
 241+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 853F
 244+ 853F A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8541 01           	db 1											; (Cuad_objeto).
 246+ 8542
 247+ 8542 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8546
 249+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8547
 251+ 8547 00 00        	db 0,0											; Variables_de_borrado
 252+ 8549 00 00        	defw 0										 	;	" " " " " " "
 253+ 854B 00 00        	defw 0											;	" " " " " " "
 254+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8551
 256+ 8551 00 00        	db 0,0											; Variables_de_pintado
 257+ 8553 00 00        	defw 0											;	" " " " " " "
 258+ 8555 00 00        	defw 0											;	" " " " " " "
 259+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 855B
 261+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 262+ 855E
 263+ 855E 77 98 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 8565
 266+ 8565 00           	db 0 											; (Columnas).
 267+ 8566 00 00        	defw 0											; (Limite_horizontal).
 268+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 269+ 856A
 270+ 856A              ; ---------- ---------- ---------- ---------- ----------
 271+ 856A
 272+ 856A 02 02        Caja_4 db 2,2	                                  	; (Filas) / (Columns).
 273+ 856C 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8573
 277+ 8573 01           	db %00000001									; (Attr).
 278+ 8574
 279+ 8574 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 8576 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 8578
 282+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 857C
 285+ 857C BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 857E 00           	db 0											; (Cuad_objeto).
 287+ 857F
 288+ 857F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8583
 290+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 8584
 292+ 8584 00 00        	db 0,0											; Variables_de_borrado
 293+ 8586 00 00        	defw 0										 	;	" " " " " " "
 294+ 8588 00 00        	defw 0											;	" " " " " " "
 295+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 858E
 297+ 858E 00 00        	db 0,0											; Variables_de_pintado
 298+ 8590 00 00        	defw 0											;	" " " " " " "
 299+ 8592 00 00        	defw 0											;	" " " " " " "
 300+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 8598
 302+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 303+ 859B
 304+ 859B 83 98 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 85A2
 307+ 85A2 00           	db 0 											; (Columnas).
 308+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 309+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 310+ 85A7
 311+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 312+ 85A7
 313+ 85A7 02 02        Caja_5 db 2,2      	                            	; (Filas) / (Columns).
 314+ 85A9 00 00        	defw 0                                          ; (Posicion_actual).
 315+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 316+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 317+ 85B0
 318+ 85B0 01           	db %00000001									; (Attr).
 319+ 85B1
 320+ 85B1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 321+ 85B3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 322+ 85B5
 323+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 85B9
 326+ 85B9 0A 40        	defw $400a                                      ; (Posicion_inicio).
 327+ 85BB 01           	db 1											; (Cuad_objeto).
 328+ 85BC
 329+ 85BC 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 85C0
 331+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 85C1
 333+ 85C1 00 00        	db 0,0											; Variables_de_borrado
 334+ 85C3 00 00        	defw 0										 	;	" " " " " " "
 335+ 85C5 00 00        	defw 0											;	" " " " " " "
 336+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 85CB
 338+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 339+ 85CD 00 00        	defw 0											;	" " " " " " "
 340+ 85CF 00 00        	defw 0											;	" " " " " " "
 341+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 85D5
 343+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 85D8
 345+ 85D8 79 98 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 346+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 85DF
 348+ 85DF 00           	db 0 											; (Columnas).
 349+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 350+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 351+ 85E4
 352+ 85E4              ; -------------------------------------------------------------------------------------
 353+ 85E4              ;
 354+ 85E4              ;	13/05/23
 355+ 85E4              ;
 356+ 85E4              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 357+ 85E4
 358+ 85E4              Indice_de_entidades
 359+ 85E4
 360+ 85E4 EE 85        	defw Entidad_1
 361+ 85E6 FE 85        	defw Entidad_2
 362+ 85E8 0E 86        	defw Entidad_3
 363+ 85EA 1E 86        	defw Entidad_4
 364+ 85EC 2E 86        	defw Entidad_5
 365+ 85EE
 366+ 85EE              ;	BADSAT, (Satélite malvado).
 367+ 85EE
 368+ 85EE 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 369+ 85F0 04           	db %00000100									; (Attr).
 370+ 85F1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 371+ 85F3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 372+ 85F5 81 47        	defw $4781                                      ; (Posicion_inicio).
 373+ 85F7 01           	db 1											; (Cuad_objeto).
 374+ 85F8 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 375+ 85FC 85 98        	defw Indice_mov_Onda_senoidal  		            ; (Puntero_indice_mov)
 376+ 85FE
 377+ 85FE 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 378+ 8600 02           	db %00000010									; (Attr).
 379+ 8601 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 380+ 8603 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 381+ 8605 5E 48        	defw $485e                                      ; (Posicion_inicio).
 382+ 8607 02           	db 2											; (Cuad_objeto).
 383+ 8608 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 384+ 860C 83 98        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 385+ 860E
 386+ 860E 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 387+ 8610 04           	db %00000100									; (Attr).
 388+ 8611 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 389+ 8613 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 390+ 8615 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 391+ 8617 01           	db 1											; (Cuad_objeto).
 392+ 8618 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 393+ 861C 77 98        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 394+ 861E
 395+ 861E 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 396+ 8620 01           	db %00000001									; (Attr).
 397+ 8621 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 398+ 8623 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 399+ 8625 BE 47        	defw $47be                                      ; (Posicion_inicio).
 400+ 8627 02           	db 2											; (Cuad_objeto).
 401+ 8628 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 862C 83 98        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 403+ 862E
 404+ 862E 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 405+ 8630 01           	db %00000001									; (Attr).
 406+ 8631 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 407+ 8633 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 408+ 8635 0A 40        	defw $400a                                      ; (Posicion_inicio).
 409+ 8637 01           	db 1											; (Cuad_objeto).
 410+ 8638 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 411+ 863C 79 98        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  26  863E              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 863E              ; 13/05/23
   2+ 863E
   3+ 863E              Indice_de_niveles
   4+ 863E
   5+ 863E 4C 86        	defw Nivel_1
   6+ 8640 51 86        	defw Nivel_2
   7+ 8642 56 86        	defw Nivel_3
   8+ 8644 5B 86        	defw Nivel_4
   9+ 8646 60 86        	defw Nivel_5
  10+ 8648
  11+ 8648              ;	...
  12+ 8648              ;	...
  13+ 8648              ;	+ Niveles ...
  14+ 8648
  15+ 8648 00 00        	defw 0
  16+ 864A 00 00        	defw 0
  17+ 864C
  18+ 864C 01 01 01 01  Nivel_1 db 1,1,1,1,1 							; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  18+ 8650 01
  19+ 8651
  20+ 8651 02 01 01 01  Nivel_2 db 2,1,1,1,1
  20+ 8655 01
  21+ 8656
  22+ 8656 03 01 01 01  Nivel_3 db 3,1,1,1,1
  22+ 865A 01
  23+ 865B
  24+ 865B 04 01 01 01  Nivel_4 db 4,1,1,1,1
  24+ 865F 01
  25+ 8660
  26+ 8660 05 01 01 01  Nivel_5 db 5,1,1,1,1
  26+ 8664 01
  27+ 8665
  28+ 8665
  29+ 8665              ;---------------------------------------------------------------------------------------------------------------
  30+ 8665              ;
  31+ 8665              ;   13/5/23
  32+ 8665
  33+ 8665              ;   Destruye HL y DE
  34+ 8665
  35+ 8665 21 3E 86     Inicia_punteros_de_nivel_y_entidades ld hl,Indice_de_niveles
  36+ 8668 22 43 87         ld (Puntero_indice_NIVELES),hl
  37+ 866B CD 61 89         call Extrae_address
  38+ 866E 22 45 87         ld (Datos_de_nivel),hl
  39+ 8671 21 E4 85     	ld hl,Indice_de_entidades
  40+ 8674 22 1D 87     	ld (Puntero_indice_ENTIDADES),hl
  41+ 8677 CD 61 89         call Extrae_address
  42+ 867A 22 1F 87         ld (Datos_de_entidad),hl
  43+ 867D C9           	ret
  44+ 867E
  45+ 867E              ;---------------------------------------------------------------------------------------------------------------
  46+ 867E              ;
  47+ 867E              ;   13/5/23
  48+ 867E              ;
  49+ 867E              ;	Destruye A,BC,HL,DE
  50+ 867E
  51+ 867E              Prepara_cajas
  52+ 867E
  53+ 867E 3A 42 87     	ld a,(Nivel)
  54+ 8681 CD A0 86     	call PreparaBC
  55+ 8684
  56+ 8684 21 3E 86     	ld hl,Indice_de_niveles
  57+ 8687 CD A8 86     	call SBC_HL_con_BC_y_Extrae
  58+ 868A 22 45 87     	ld (Datos_de_nivel),hl						; HL está en los datos del nivel correspondiente.
  59+ 868D
  60+ 868D 06 05        	ld b,5										; B actuará como contador de cajas.
  61+ 868F
  62+ 868F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  63+ 8690 CD A0 86     	call PreparaBC
  64+ 8693
  65+ 8693 21 E4 85     	ld hl,Indice_de_entidades
  66+ 8696 CD A8 86     	call SBC_HL_con_BC_y_Extrae
  67+ 8699 22 1F 87         ld (Datos_de_entidad),hl
  68+ 869C
  69+ 869C CD AF 86     	call Datos_de_entidad_a_caja
  70+ 869F
  71+ 869F C9           	ret
  72+ 86A0
  73+ 86A0 CB 27        PreparaBC sla a
  74+ 86A2 D6 02        	sub 2										; [(Nivel)*2]-2.
  75+ 86A4 4F           	ld c,a
  76+ 86A5 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
  77+ 86A7 C9           	ret
  78+ 86A8
  79+ 86A8 A7           SBC_HL_con_BC_y_Extrae and a
  80+ 86A9 ED 4A        	adc hl,bc
  81+ 86AB CD 61 89     	call Extrae_address
  82+ 86AE C9           	ret
  83+ 86AF
  84+ 86AF              Datos_de_entidad_a_caja
  85+ 86AF
  86+ 86AF              ;		; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar Entidad_
  87+ 86AF              ;		; _ la 1ª caja.
  88+ 86AF
  89+ 86AF C5           	push bc										; Preservo B como contador de cajas.
  90+ 86B0 E5           	push hl										; Preservo HL como (Datos_de_entidad).
  91+ 86B1
  92+ 86B1 21 68 84     	ld hl,Indice_de_cajas
  93+ 86B4 CD 61 89     	call Extrae_address
  94+ 86B7 22 15 87     	ld (Puntero_store_caja),hl
  95+ 86BA 13           	inc de
  96+ 86BB 13           	inc de
  97+ 86BC EB           	ex de,hl
  98+ 86BD 22 19 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
  99+ 86C0
 100+ 86C0 E1           	pop hl
 101+ 86C1
 102+ 86C1 ED 5B 15 87  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 103+ 86C5
 104+ 86C5 06 02        	ld b,2
 105+ 86C7 7E           1 ld a,(hl)
 106+ 86C8 23           	inc hl
 107+ 86C9 12           	ld (de),a
 108+ 86CA 13           	inc de
 109+ 86CB 10 FA        	djnz 1B										; Hemos trasbasado:  (Filas) / (Columns).
 110+ 86CD
 111+ 86CD EB           	ex de,hl
 112+ 86CE 01 07 00     	ld bc,7
 113+ 86D1 A7           	and a
 114+ 86D2 ED 4A        	adc hl,bc
 115+ 86D4 EB           	ex de,hl									; HL apunta al dato (Attr) de la entidad y DE apunta al mismo_
 116+ 86D5              ; 												; _ dato en la caja.
 117+ 86D5              ;	jr $
 118+ 86D5
 119+ 86D5 C1           	pop bc
 120+ 86D6 C9           	ret
# file closed: Niveles.asm
  27  86D7
  28  86D7              ; ******************************************************************************************************************************************************************************************
  29  86D7              ; Constantes.
  30  86D7              ; ******************************************************************************************************************************************************************************************
  31  86D7              ;
  32  86D7              ; 8/11/22
  33  86D7              ;
  34  86D7              ; Constantes generales.
  35  86D7              ;
  36  86D7
  37  86D7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  38  86D7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  39  86D7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  40  86D7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  41  86D7
  42  86D7              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  43  86D7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  44  86D7              ;                               				        ; De momento situamos este almacén en $7000.
  45  86D7              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  46  86D7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  47  86D7              ;                               				        ; De momento situamos este almacén en $7060.
  48  86D7
  49  86D7              ; ******************************************************************************************************************************************************************************************
  50  86D7              ; Variables.
  51  86D7              ; ******************************************************************************************************************************************************************************************
  52  86D7              ;
  53  86D7              ; 10/11/22
  54  86D7              ;
  55  86D7              ; Variables de DRAW. (Motor principal).
  56  86D7              ;
  57  86D7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  58  86D7
  59  86D7 02           Filas db 2												; Filas. [DRAW]
  60  86D8 02           Columns db 2  											; Nº de columnas. [DRAW]
  61  86D9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  62  86DB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  63  86DD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  64  86DE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  65  86DF
  66  86DF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  67  86DF
  68  86DF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  69  86E0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  70  86E0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  71  86E0 04           Attr db %00000100										; Atributos de la entidad:
  72  86E1
  73  86E1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  74  86E1              ;
  75  86E1              ;	COLORES: 0 ..... NEGRO
  76  86E1              ;    		 1 ..... AZUL
  77  86E1              ; 			 2 ..... ROJO
  78  86E1              ;			 3 ..... MAGENTA
  79  86E1              ; 			 4 ..... VERDE
  80  86E1              ; 			 5 ..... CIAN
  81  86E1              ;			 6 ..... AMARILLO
  82  86E1              ; 			 7 ..... BLANCO
  83  86E1
  84  86E1 98 81        Indice_Sprite_der defw Indice_Badsat_der
  85  86E3 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  86  86E5 00 00        Puntero_DESPLZ_der defw 0
  87  86E7 00 00        Puntero_DESPLZ_izq defw 0
  88  86E9
  89  86E9 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  90  86EB 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  91  86EC
  92  86EC              ; Variables de objeto. (Características).
  93  86EC
  94  86EC 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  95  86ED 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  96  86EE 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  97  86EF 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  98  86F0
  99  86F0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 100  86F1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 101  86F1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 102  86F1 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  86F3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  86F5 00 00        	defw 0
 105  86F7 00 00 00 00  	db 0,0,0,0
 106  86FB
 107  86FB 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  86FD 00 00        	defw 0
 109  86FF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  8701 00 00 00 00  	db 0,0,0,0
 111  8705
 112  8705              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  8705
 114  8705 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  8706              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  8706              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  8706              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  8706              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  8706              ;
 120  8706              ; 														DESCRIPCIÖN:
 121  8706              ;
 122  8706              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  8706              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  8706              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  8706              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  8706              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  8706              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  8706              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  8706              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  8706              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  8706              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  8706              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  8706              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  8706              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  8706              ;
 136  8706              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  8706              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  8706              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  8706
 140  8706 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  8707
 142  8707              ; Movimiento.
 143  8707
 144  8707 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  8708 85 98        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  870A 00 00        Puntero_mov defw 0
 147  870C 00           Contador_db_mov db 0
 148  870D 00           Incrementa_puntero db 0
 149  870E 00           Repetimos_db db 0
 150  870F
 151  870F              ; Variables de funcionamiento. [DRAW].
 152  870F
 153  870F 00           Columnas db 0
 154  8710 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  8712              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8712 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  8713
 158  8713              ; variables de control general.
 159  8713
 160  8713 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 161  8714
 162  8714              ; 61 Bytes por entidad.
 163  8714              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 164  8714              ;					         		---------;      ;---------
 165  8714
 166  8714
 167  8714              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 168  8714
 169  8714 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 170  8715
 171  8715              ;														DESCRIPCIÓN:
 172  8715              ;
 173  8715              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 174  8715              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 175  8715              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 176  8715              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 177  8715              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 178  8715              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 179  8715
 180  8715              ; Gestión de ENTIDADES y CAJAS.
 181  8715
 182  8715              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  8715 00 00        Puntero_store_caja defw 0
 184  8717 00 00        Puntero_restore_caja defw 0
 185  8719 00 00        Indice_restore_caja defw 0
 186  871B 01           Numero_de_entidades db 1								; Nº de entidades en pantalla, (contando con Amadeus).
 187  871C 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 188  871D              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 189  871D              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 190  871D              ;														; _ (Numero_de_malotes)="0".
 191  871D 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 192  871F 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 193  8721              ;														; _ puntero (Indice_entidades).
 194  8721
 195  8721
 196  8721              ;---------------------------------------------------------------------------------------------------------------
 197  8721              ;
 198  8721              ; Sirven para PINTAR.
 199  8721
 200  8721 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 201  8723              ;														; _variable para almacenar lo posición del puntero_
 202  8723              ; 														; _de pila, SP.
 203  8723 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 204  8725              ;														; La utiliza la rutina [Extrae_foto_registros].
 205  8725 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 206  8727              ;														; _el snapshot de los registros de la siguiente entidad.
 207  8727              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 208  8727 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 209  8729              ;														; _el snapshot de los registros del siguiente disparo.
 210  8729              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 211  8729
 212  8729              ;---------------------------------------------------------------------------------------------------------------
 213  8729
 214  8729              ; Gestión de Disparos.
 215  8729
 216  8729 00           Numero_de_disparotes db 0
 217  872A 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 218  872C 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 219  872E 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 220  872F              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 221  872F              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 222  872F 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 223  8731              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 224  8731              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 225  8731              ;														; _produzca colisión.
 226  8731 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 227  8733              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 228  8733 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 229  8736              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 230  8736 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 231  8739              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 232  8739
 233  8739              ;---------------------------------------------------------------------------------------------------------------
 234  8739
 235  8739              ; Relojes y temporizaciones.
 236  8739
 237  8739 01           Habilita_disparo_Amadeus db 1
 238  873A 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 239  873B 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 240  873C
 241  873C 01           Habilita_disparo_entidad db 1
 242  873D 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 243  873E 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 244  873F
 245  873F              ;---------------------------------------------------------------------------------------------------------------
 246  873F
 247  873F              ; Gestión de FRAMES.
 248  873F
 249  873F 00           Switch db 0
 250  8740
 251  8740              ; Variables de Raster y localización en pantalla.
 252  8740
 253  8740 00 FF        Temp_Raster defw $ff00
 254  8742
 255  8742              ;---------------------------------------------------------------------------------------------------------------
 256  8742
 257  8742              ; Gestión de NIVELES.
 258  8742
 259  8742 01           Nivel db 1												 ; Nivel actual del juego.
 260  8743 00 00        Puntero_indice_NIVELES defw 0
 261  8745 00 00        Datos_de_nivel defw 0
 262  8747
 263  8747
 264  8747              ; Y todo comienza aquí .....
 265  8747              ;
 266  8747              ; Rutina principal *************************************************************************************************************************************************************************
 267  8747              ;
 268  8747              ;	14/11/22
 269  8747
 270  8747              START
 271  8747
 272  8747 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 273  874A 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 274  874C ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 275  874E ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 276  8750 F3           	DI
 277  8751
 278  8751 3E 07        	ld a,%00000111
 279  8753 CD 99 94     	call Cls
 280  8756
 281  8756              ;	call Inicia_punteros_de_nivel_y_entidades
 282  8756 CD 7E 86     	call Prepara_cajas
 283  8759
 284  8759              ;	call Pinta_FILAS
 285  8759
 286  8759 CD 3F 8A     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 287  875C
 288  875C
 289  875C CD 0D 89     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 290  875F              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 291  875F 21 1B 87     	ld hl,Numero_de_entidades
 292  8762 46           	ld b,(hl)
 293  8763 04           	inc b
 294  8764 05           	dec b
 295  8765 28 10        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 296  8767
 297  8767              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 298  8767              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 299  8767              ;	Pintamos el resto de entidades:
 300  8767
 301  8767              ;	INICIA ENTIDADES !!!!!
 302  8767
 303  8767 C5           1 push bc  												; Guardo el contador de entidades.
 304  8768 CD 67 89      	call Inicia_Puntero_objeto
 305  876B CD E9 8E     	call Draw
 306  876E CD A0 7F     	call Guarda_foto_registros
 307  8771 CD AF 89     	call Store_Restore_cajas	 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 308  8774 C1           	pop bc
 309  8775 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 310  8777
 311  8777              ; 	INICIA AMADEUS !!!!!
 312  8777
 313  8777 CD 16 8A     3 call Restore_Amadeus
 314  877A CD 67 89     	call Inicia_Puntero_objeto
 315  877D CD E9 8E     	call Draw
 316  8780 CD A0 7F     	call Guarda_foto_registros
 317  8783
 318  8783 11 76 84     	ld de,Amadeus_db
 319  8786 CD 28 8A     	call Store_Amadeus
 320  8789
 321  8789              ; 	INICIA DISPAROS !!!!!
 322  8789
 323  8789 CD 23 89     	call Inicia_Puntero_Disparo_Entidades
 324  878C CD 2A 89     	call Inicia_Puntero_Disparo_Amadeus
 325  878F
 326  878F              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 327  878F
 328  878F CD 0D 89     	call Inicia_punteros_de_cajas
 329  8792 CD EF 89     	call Restore_entidad
 330  8795
 331  8795 3A 1B 87     	ld a,(Numero_de_entidades)
 332  8798 3C           	inc a
 333  8799 32 1C 87     	ld (Numero_de_malotes),a
 334  879C
 335  879C              ;	xor a
 336  879C
 337  879C FB           2 ei
 338  879D 18 FD        	jr 2B
 339  879F
 340  879F              ;	ld hl,Ctrl_1
 341  879F              ;	res 3,(hl)
 342  879F              ;	jr START
 343  879F
 344  879F              ;	ret
 345  879F              ; -----------------------------------------------------------------------------------
 346  879F
 347  879F              Frame
 348  879F
 349  879F              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 350  879F              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 351  879F
 352  879F              ; PINTAMOS.
 353  879F
 354  879F 3E 02            ld a,2
 355  87A1 D3 FE            out ($fe),a
 356  87A3 CD ED 91     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 357  87A6 CD 26 92     	call Extrae_foto_disparos
 358  87A9 3E 01            ld a,1
 359  87AB D3 FE            out ($fe),a
 360  87AD
 361  87AD              ; ----------------------------------------------------------------------
 362  87AD
 363  87AD              ; Debugggg para bucle!!!!!
 364  87AD              ;	ld a,(Numero_de_entidades)
 365  87AD              ;	and a
 366  87AD              ;	jr nz,13F
 367  87AD
 368  87AD              ;	ld a,1
 369  87AD              ;	ld (Numero_de_entidades),a
 370  87AD
 371  87AD              ;	ld a,(Ctrl_1)
 372  87AD              ;	set 3,a
 373  87AD              ;	ld (Ctrl_1),a
 374  87AD
 375  87AD              ;	ret
 376  87AD              ; Debugggg para bucle!!!!!
 377  87AD
 378  87AD
 379  87AD              ; RELOJES.
 380  87AD
 381  87AD 21 39 87     	ld hl,Habilita_disparo_Amadeus
 382  87B0 11 3B 87     	ld de,Temporiza_disparo_Amadeus
 383  87B3 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 384  87B6
 385  87B6 21 3C 87     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 386  87B9 11 3E 87     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 387  87BC CD D5 7F     	call Habilita_disparos
 388  87BF
 389  87BF              ; COLISIONES.
 390  87BF
 391  87BF CD 83 8E     	call Selector_de_impactos
 392  87C2
 393  87C2              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 394  87C2              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 395  87C2              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 396  87C2
 397  87C2 AF           	xor a
 398  87C3 32 2E 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 399  87C6
 400  87C6 CD 0D 89     	call Inicia_punteros_de_cajas
 401  87C9 CD EF 89     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 402  87CC              ; 														; _ en DRAW.
 403  87CC 3A D7 86     	ld a,(Filas)
 404  87CF A7           	and a
 405  87D0 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 406  87D2 CD 01 8A     	call Incrementa_punteros_de_cajas
 407  87D5 18 F2        	jr 12B
 408  87D7
 409  87D7              ; ---------------------------------------------------------------------------------------
 410  87D7
 411  87D7 CD 01 8D     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 412  87DA 21 00 70     	ld hl,Album_de_fotos
 413  87DD 22 25 87         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 414  87E0              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 415  87E0 3A 1B 87     	ld a,(Numero_de_entidades)
 416  87E3 47               ld b,a
 417  87E4 A7           	and a
 418  87E5 28 5B        	jr z,4F
 419  87E7
 420  87E7              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 421  87E7
 422  87E7              ; Código que ejecutamos con cada entidad:
 423  87E7
 424  87E7              ; Impacto ???
 425  87E7
 426  87E7 C5           2 push bc 												; Nº de entidades.
 427  87E8
 428  87E8 3A F0 86     	ld a,(Impacto)
 429  87EB A7           	and a
 430  87EC 28 0C        	jr z,8F
 431  87EE
 432  87EE              ; Hay Impacto en esta entidad.
 433  87EE
 434  87EE CD C4 88     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 435  87F1 CD 31 8A     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 436  87F4 21 1B 87     	ld hl,Numero_de_entidades							; Una alimaña menos.
 437  87F7 35           	dec (hl)
 438  87F8
 439  87F8 18 42        	jr 6F
 440  87FA
 441  87FA              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 442  87FA              ; _con las coordenadas de la entidad almacenada en DRAW.
 443  87FA
 444  87FA 3A 14 87     8 ld a,(Ctrl_1)
 445  87FD CB 57        	bit 2,a
 446  87FF 28 22        	jr z,7F
 447  8801
 448  8801 2A 31 87     	ld hl,(Coordenadas_disparo_certero)
 449  8804 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 450  8805              ;														; E contiene la coordenada_X del disparo.
 451  8805 2A DD 86     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 452  8808              ;														; H Coordenado_y de la entidad.
 453  8808 A7           	and a
 454  8809 ED 52        	sbc hl,de
 455  880B
 456  880B CD BA 8E     	call Determina_resultado_comparativa
 457  880E 04           	inc b
 458  880F 05           	dec b
 459  8810
 460  8810              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 461  8810 28 FE        	jr z,$
 462  8812
 463  8812 28 0F        	jr z,7F
 464  8814
 465  8814              ; ----- ----- -----
 466  8814
 467  8814 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 468  8816 32 F0 86     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 469  8819 21 14 87     	ld hl,Ctrl_1
 470  881C CB 96        	res 2,(hl)
 471  881E 21 31 87     	ld hl,Coordenadas_disparo_certero
 472  8821 36 00        	ld (hl),0
 473  8823
 474  8823
 475  8823 CD 75 88     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 476  8826
 477  8826 3A 05 87     	ld a,(Ctrl_0)
 478  8829 CB 67        	bit 4,a
 479  882B 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 480  882D
 481  882D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 482  882D              ; [[[
 483  882D CD 8A 8A     	call Detecta_disparo_entidad
 484  8830              ; ]]]
 485  8830 CD D4 88     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 486  8833
 487  8833 21 05 87     	ld hl,Ctrl_0
 488  8836 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 489  8838 AF           	xor a
 490  8839 32 06 87     	ld (Obj_dibujado),a
 491  883C
 492  883C CD AF 89     6 call Store_Restore_cajas
 493  883F
 494  883F C1           	pop bc
 495  8840 10 A5        	djnz 2B
 496  8842
 497  8842              ; Tras la gestión de las entidades, ... AMADEUS.
 498  8842
 499  8842 CD 16 8A     4 call Restore_Amadeus
 500  8845
 501  8845 3A F0 86     	ld a,(Impacto)
 502  8848 A7           	and a
 503  8849 20 FE        	jr nz,$
 504  884B
 505  884B              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 506  884B
 507  884B CD A5 88     	call Mov_Amadeus
 508  884E
 509  884E 3A 05 87     	ld a,(Ctrl_0)
 510  8851 CB 67        	bit 4,a
 511  8853 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 512  8855
 513  8855 CD D4 88     	call Guarda_foto_entidad_a_pintar
 514  8858
 515  8858 21 05 87     3 ld hl,Ctrl_0
 516  885B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 517  885D AF           	xor a
 518  885E 32 06 87     	ld (Obj_dibujado),a
 519  8861
 520  8861 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 521  8864 CD 28 8A     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 522  8867
 523  8867 CD 1F 8D     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 524  886A
 525  886A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 526  886A
 527  886A CD 49 89     	call Calcula_numero_de_disparotes
 528  886D CD 31 89     9 call Calcula_numero_de_malotes
 529  8870
 530  8870 3E 04        	ld a,4
 531  8872 D3 FE        	out ($fe),a
 532  8874
 533  8874 C9           	ret
 534  8875
 535  8875              ; --------------------------------------------------------------------------------------------------------------
 536  8875              ;
 537  8875              ;	27/03/23
 538  8875
 539  8875              Mov_obj
 540  8875
 541  8875              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 542  8875
 543  8875 AF           	xor a
 544  8876 32 06 87     	ld (Obj_dibujado),a
 545  8879 32 05 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 546  887C              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 547  887C              ; 														; _de la entidad.
 548  887C CD DE 88         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 549  887F              ;														; Obj_dibujado="0".
 550  887F              ; Movemos Entidades malignas.
 551  887F
 552  887F 21 08 87     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 553  8882 34           	inc (hl)
 554  8883 35           	dec (hl)                                            ; Salimos de la rutina.
 555  8884 C8           	ret z
 556  8885
 557  8885 CD 87 98     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 558  8888
 559  8888 3A 05 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 560  888B CB 67        	bit 4,a
 561  888D C8           	ret z
 562  888E
 563  888E              ; Ha habido desplazamiento de la entidad maligna.
 564  888E              ; Ha llegado a zona de AMADEUS ???
 565  888E
 566  888E 3A DE 86     	ld a,(Coordenada_y)
 567  8891 FE 14        	cp $14
 568  8893 D4 50 8C     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 569  8896              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 570  8896              ; ---------
 571  8896
 572  8896 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 573  8898 32 06 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 574  889B CD DE 88         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 575  889E CD F5 88         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 576  88A1 CD C4 88     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 577  88A4 C9           	ret													; _de la misma.
 578  88A5
 579  88A5              ; --------------------------------------------------------------------------------------------------------------
 580  88A5              ;
 581  88A5              ;	29/1/23
 582  88A5
 583  88A5              Mov_Amadeus
 584  88A5
 585  88A5 AF           	xor a
 586  88A6 32 06 87     	ld (Obj_dibujado),a
 587  88A9 CD DE 88         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 588  88AC              ;														; Obj_dibujado="0".
 589  88AC              ; Movemos Amadeus.
 590  88AC
 591  88AC CD 53 8A     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 592  88AF 3A 05 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 593  88B2 CB 67        	bit 4,a
 594  88B4 C8           	ret z
 595  88B5
 596  88B5              ; ---------
 597  88B5
 598  88B5 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 599  88B7 32 06 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 600  88BA CD DE 88         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 601  88BD CD F5 88         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 602  88C0 CD C4 88     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 603  88C3 C9           	ret													; _de la nave.
 604  88C4
 605  88C4              ; --------------------------------------------------------------------------------------------------------------
 606  88C4              ;
 607  88C4              ;	31/01/23
 608  88C4              ;
 609  88C4              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 610  88C4
 611  88C4              Guarda_foto_entidad_a_borrar
 612  88C4
 613  88C4 CD C3 91     	call Prepara_draw
 614  88C7 CD FD 90     	call calcula_CColumnass
 615  88CA CD 34 91     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 616  88CD CD 89 91     	call Define_rutina_de_impresion
 617  88D0 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 618  88D3 C9           	ret
 619  88D4
 620  88D4              ; --------------------------------------------------------------------------------------------------------------
 621  88D4              ;
 622  88D4              ;	31/01/23
 623  88D4              ;
 624  88D4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 625  88D4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 626  88D4
 627  88D4              Guarda_foto_entidad_a_pintar
 628  88D4
 629  88D4 CD 01 89     	call Repone_pintar
 630  88D7 CD E9 8E     	call Draw
 631  88DA CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 632  88DD C9           	ret
 633  88DE
 634  88DE              ; --------------------------------------------------------------------------------------------------------------
 635  88DE              ;
 636  88DE              ;
 637  88DE
 638  88DE 21 D7 86     Prepara_var_pintado_borrado	ld hl,Filas
 639  88E1 3A 06 87     	ld a,(Obj_dibujado)
 640  88E4 A7           	and a
 641  88E5 28 05        	jr z,1F
 642  88E7 11 FB 86     	ld de,Variables_de_pintado
 643  88EA 18 03        	jr 2F
 644  88EC 11 F1 86     1 ld de,Variables_de_borrado
 645  88EF 01 08 00     2 ld bc,8
 646  88F2 ED B0        	ldir
 647  88F4 C9           	ret
 648  88F5
 649  88F5              ; --------------------------------------------------------------------------------------------------------------
 650  88F5
 651  88F5 21 F1 86     Repone_borrar ld hl,Variables_de_borrado
 652  88F8 11 D7 86     	ld de,Filas
 653  88FB 01 08 00     	ld bc,8
 654  88FE ED B0        	ldir
 655  8900 C9           	ret
 656  8901
 657  8901 21 FB 86     Repone_pintar ld hl,Variables_de_pintado
 658  8904 11 D7 86     	ld de,Filas
 659  8907 01 08 00     	ld bc,8
 660  890A ED B0        	ldir
 661  890C C9           	ret
 662  890D
 663  890D              ; *************************************************************************************************************************************************************
 664  890D              ;
 665  890D              ; 8/1/23
 666  890D              ;
 667  890D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 668  890D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 669  890D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 670  890D
 671  890D              ; Destruye HL y DE !!!!!
 672  890D
 673  890D              Inicia_punteros_de_cajas
 674  890D
 675  890D 21 68 84     	ld hl,Indice_de_cajas
 676  8910 CD 61 89         call Extrae_address
 677  8913 22 15 87         ld (Puntero_store_caja),hl
 678  8916 21 6A 84     	ld hl,Indice_de_cajas+2
 679  8919 22 19 87     	ld (Indice_restore_caja),hl
 680  891C CD 61 89     	call Extrae_address
 681  891F 22 17 87     	ld (Puntero_restore_caja),hl
 682  8922 C9               ret
 683  8923
 684  8923              ; *************************************************************************************************************************************************************
 685  8923              ;
 686  8923              ; 8/1/23
 687  8923              ;
 688  8923              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 689  8923
 690  8923 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 691  8926 22 2A 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 692  8929 C9           	ret
 693  892A 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 694  892D 22 2C 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 695  8930 C9           	ret
 696  8931
 697  8931              ; -------------------------------------------------------------------------------------------------------------
 698  8931              ;
 699  8931              ; 28/2/23
 700  8931              ;
 701  8931
 702  8931              Calcula_numero_de_malotes
 703  8931
 704  8931 21 00 70     	ld hl,Album_de_fotos
 705  8934 EB           	ex de,hl
 706  8935 2A 25 87     	ld hl,(Stack_snapshot)
 707  8938
 708  8938 06 00        	ld b,0
 709  893A 7D           	ld a,l
 710  893B 93           	sub e
 711  893C 28 07        	jr z,1F
 712  893E
 713  893E              ; Nº de malotes no es "0".
 714  893E
 715  893E D6 06        2 sub 6
 716  8940 04           	inc b
 717  8941 A7           	and a
 718  8942 20 FA        	jr nz,2B
 719  8944 78           	ld a,b
 720  8945
 721  8945 32 1C 87     1 ld (Numero_de_malotes),a
 722  8948 C9           	ret
 723  8949
 724  8949              ; -------------------------------------------------------------------------------------------------------------
 725  8949              ;
 726  8949              ; 28/2/23
 727  8949              ;
 728  8949
 729  8949              Calcula_numero_de_disparotes
 730  8949
 731  8949 21 60 70     	ld hl,Album_de_fotos_disparos
 732  894C EB           	ex de,hl
 733  894D 2A 27 87     	ld hl,(Stack_snapshot_disparos)
 734  8950
 735  8950 06 00        	ld b,0
 736  8952 7D           	ld a,l
 737  8953 93           	sub e
 738  8954 28 07        	jr z,1F
 739  8956
 740  8956              ; Nº de malotes no es "0".
 741  8956
 742  8956 D6 06        2 sub 6
 743  8958 04           	inc b
 744  8959 A7           	and a
 745  895A 20 FA        	jr nz,2B
 746  895C 78           	ld a,b
 747  895D
 748  895D 32 29 87     1 ld (Numero_de_disparotes),a
 749  8960 C9           	ret
 750  8961              ; *************************************************************************************************************************************************************
 751  8961              ;
 752  8961              ; 20/10/22
 753  8961              ;
 754  8961              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 755  8961              ;
 756  8961              ; Destruye el puntero y DE !!!!!
 757  8961
 758  8961 5E           Extrae_address ld e,(hl)
 759  8962 23           	inc hl
 760  8963 56           	ld d,(hl)
 761  8964 2B           	dec hl
 762  8965 EB           	ex de,hl
 763  8966 C9           	ret
 764  8967
 765  8967              ; *************************************************************************************************************************************************************
 766  8967              ;
 767  8967              ;	7/2/23
 768  8967              ;
 769  8967              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 770  8967              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 771  8967              ;
 772  8967              ;   Destruye HL y BC !!!!!,
 773  8967              ;
 774  8967              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 775  8967              ;					"0" ..... Izquierda.
 776  8967
 777  8967              Inicia_Puntero_objeto
 778  8967
 779  8967 3A EB 86     	ld a,(Cuad_objeto)
 780  896A E6 01        	and 1
 781  896C F5           	push af
 782  896D CC 8B 89     	call z,Inicia_puntero_objeto_izq
 783  8970 F1           	pop af
 784  8971 28 2B        	jr z,1F
 785  8973 CD 78 89     	call Inicia_puntero_objeto_der
 786  8976 18 26        	jr 1F
 787  8978
 788  8978              ; Arrancamos desde la parte izquierda de la pantalla.
 789  8978              ; Iniciamos (Indice_Sprite_der).
 790  8978
 791  8978 2A E1 86     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 792  897B 22 E5 86     	ld (Puntero_DESPLZ_der),hl
 793  897E CD 61 89     	call Extrae_address
 794  8981 22 DB 86     	ld (Puntero_objeto),hl
 795  8984
 796  8984 2A E3 86     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 797  8987 22 E7 86     	ld (Puntero_DESPLZ_izq),hl
 798  898A C9           	ret
 799  898B
 800  898B              ; Arrancamos desde la parte derecha de la pantalla.
 801  898B              ; Iniciamos (Indice_Sprite_izq).
 802  898B
 803  898B 2A E3 86     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 804  898E 22 E7 86     	ld (Puntero_DESPLZ_izq),hl
 805  8991 CD 61 89     	call Extrae_address
 806  8994 22 DB 86     	ld (Puntero_objeto),hl
 807  8997
 808  8997 2A E1 86     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 809  899A 22 E5 86     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 810  899D C9           	ret
 811  899E
 812  899E              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 813  899E
 814  899E 21 38 83     1 ld hl,Amadeus
 815  89A1 ED 4B DB 86  	ld bc,(Puntero_objeto)
 816  89A5 B7 ED 42     	sub hl,bc
 817  89A8 C0           	ret nz
 818  89A9 21 05 87     	ld hl,Ctrl_0
 819  89AC CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 820  89AE C9           	ret 												; _de nuestra nave en los extremos.
 821  89AF
 822  89AF              ; *************************************************************************************************************************************************************
 823  89AF              ;
 824  89AF              ;	8/1/23
 825  89AF              ;
 826  89AF              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 827  89AF              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 828  89AF
 829  89AF              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 830  89AF              ;	_de la 2ª y 3ª entidad respectivamente.
 831  89AF
 832  89AF              Store_Restore_cajas
 833  89AF
 834  89AF 3A 1B 87     	ld a,(Numero_de_entidades)
 835  89B2 A7           	and a
 836  89B3 C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 837  89B4
 838  89B4 E5           	push hl
 839  89B5 D5           	push de
 840  89B6 C5            	push bc
 841  89B7
 842  89B7              ;	STORE !!!!!
 843  89B7              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 844  89B7
 845  89B7 21 D7 86     	ld hl,Filas
 846  89BA ED 5B 15 87  	ld de,(Puntero_store_caja) 					; Puntero que se desplaza por las distintas entidades.
 847  89BE 01 3D 00     	ld bc,61
 848  89C1 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 849  89C3
 850  89C3              ; 	Entidad_sospechosa. 20/4/23
 851  89C3
 852  89C3 3A F0 86     	ld a,(Impacto)
 853  89C6 A7           	and a
 854  89C7 28 0C        	jr z,1F
 855  89C9
 856  89C9 2A 15 87     	ld hl,(Puntero_store_caja) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 857  89CC 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 858  89CF A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 859  89D0 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 860  89D2 22 2F 87     	ld (Entidad_sospechosa_de_colision),hl
 861  89D5
 862  89D5              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 863  89D5
 864  89D5 2A 17 87     1 ld hl,(Puntero_restore_caja)
 865  89D8 7E           	ld a,(hl)
 866  89D9 A7           	and a
 867  89DA F5           	push af
 868  89DB 28 08        	jr z,2F
 869  89DD
 870  89DD 11 D7 86     	ld de,Filas
 871  89E0 01 3D 00     	ld bc,61
 872  89E3 ED B0        	ldir
 873  89E5
 874  89E5 CD 01 8A     2 call Incrementa_punteros_de_cajas
 875  89E8 F1           	pop af
 876  89E9 28 EA        	jr z,1B
 877  89EB
 878  89EB C1           	pop bc
 879  89EC D1           	pop de
 880  89ED E1           	pop hl
 881  89EE
 882  89EE C9           	ret
 883  89EF
 884  89EF              ; **************************************************************************************************
 885  89EF              ;
 886  89EF              ;	12/05/23
 887  89EF              ;
 888  89EF              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 889  89EF
 890  89EF E5           Restore_entidad push hl
 891  89F0 D5           	push de
 892  89F1 C5            	push bc
 893  89F2
 894  89F2 2A 15 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 895  89F5 11 D7 86     	ld de,Filas
 896  89F8 01 3D 00     	ld bc,61
 897  89FB ED B0        	ldir
 898  89FD
 899  89FD C1           	pop bc
 900  89FE D1           	pop de
 901  89FF E1           	pop hl
 902  8A00 C9           	ret
 903  8A01
 904  8A01
 905  8A01              ; **************************************************************************************************
 906  8A01              ;
 907  8A01              ;	08/05/23
 908  8A01              ;
 909  8A01              ;	Incrementamos los dos punteros de entidades. (+1).
 910  8A01
 911  8A01 2A 17 87     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 912  8A04 22 15 87     	ld (Puntero_store_caja),hl
 913  8A07 2A 19 87     	ld hl,(Indice_restore_caja)
 914  8A0A 23           	inc hl
 915  8A0B 23           	inc hl
 916  8A0C 22 19 87     	ld (Indice_restore_caja),hl
 917  8A0F CD 61 89         call Extrae_address
 918  8A12 22 17 87         ld (Puntero_restore_caja),hl
 919  8A15 C9               ret
 920  8A16
 921  8A16              ; **************************************************************************************************
 922  8A16              ;
 923  8A16              ;	25/01/23
 924  8A16              ;
 925  8A16              ;	Restore_Amadeus
 926  8A16              ;
 927  8A16              ;	Cargamos en DRAW los parámetros de Amadeus.
 928  8A16              ;
 929  8A16
 930  8A16 E5           Restore_Amadeus	push hl
 931  8A17 D5           	push de
 932  8A18 C5            	push bc
 933  8A19 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 934  8A1C 11 D7 86     	ld de,Filas
 935  8A1F 01 3D 00     	ld bc,61
 936  8A22 ED B0        	ldir
 937  8A24 C1           	pop bc
 938  8A25 D1           	pop de
 939  8A26 E1           	pop hl
 940  8A27 C9           	ret
 941  8A28
 942  8A28              ; *************************************************************************************************************************************************************
 943  8A28              ;
 944  8A28              ;	29/04/23
 945  8A28              ;
 946  8A28              ;	Store_Amadeus
 947  8A28              ;
 948  8A28              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 949  8A28              ;
 950  8A28              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 951  8A28              ;
 952  8A28              ;	DESTRUYE: HL y BC y DE.
 953  8A28
 954  8A28 21 D7 86     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 955  8A2B 01 3D 00     	ld bc,61
 956  8A2E ED B0        	ldir
 957  8A30 C9           	ret
 958  8A31
 959  8A31              ; -----------------------------------------------------------
 960  8A31              ;
 961  8A31              ;	27/04/23
 962  8A31              ;
 963  8A31              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 964  8A31              ;
 965  8A31              ;	Destruye: HL,BC,DE,A
 966  8A31
 967  8A31 21 D7 86     Borra_datos_entidad ld hl,Filas
 968  8A34 01 3C 00     	ld bc,60
 969  8A37 AF           	xor a
 970  8A38 77           	ld (hl),a
 971  8A39 11 D8 86     	ld de,Filas+1
 972  8A3C ED B0        	ldir
 973  8A3E C9           	ret
 974  8A3F
 975  8A3F              ; -----------------------------------------------------------
 976  8A3F
 977  8A3F              ; Teclado.
 978  8A3F
 979  8A3F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 980  8A41 DB FE        	in a,($fe)
 981  8A43 E6 01        	and $01
 982  8A45 28 02        	jr z,1f
 983  8A47 18 F6        	jr Pulsa_ENTER
 984  8A49 C9           1 ret
 985  8A4A
 986  8A4A              ; **************************************************************************************************
 987  8A4A              ;
 988  8A4A              ; Temporización.
 989  8A4A
 990  8A4A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 991  8A4A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 992  8A4A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 993  8A4A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 994  8A4A
 995  8A4A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 996  8A4A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 997  8A4A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 998  8A4A
 999  8A4A              ; A partir de $4f61 no hace falta DELAY.
1000  8A4A
1001  8A4A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1002  8A4A
1003  8A4A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1004  8A4D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1005  8A4E 78           	LD A,B
1006  8A4F A7           	AND A
1007  8A50 20 FB        	JR NZ,wait
1008  8A52 C9           	RET
1009  8A53
1010  8A53              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1011  8A53              ;
1012  8A53              ;	5/3/23
1013  8A53              ;
1014  8A53              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1015  8A53
1016  8A53              Movimiento_Amadeus
1017  8A53
1018  8A53              ; Disparo.
1019  8A53
1020  8A53 3A 39 87     	ld a,(Habilita_disparo_Amadeus)
1021  8A56 A7           	and a
1022  8A57 20 02        	jr nz,1F
1023  8A59 18 15        	jr 2F
1024  8A5B
1025  8A5B 3E F7        1 ld a,$f7													; "5" para disparar.
1026  8A5D DB FE        	in a,($fe)
1027  8A5F E6 10        	and $10
1028  8A61
1029  8A61 F5           	push af
1030  8A62 CC CC 8A     	call z,Genera_disparo
1031  8A65 F1           	pop af
1032  8A66 20 08        	jr nz,2F
1033  8A68
1034  8A68 3A 39 87     	ld a,(Habilita_disparo_Amadeus)
1035  8A6B EE 01        	xor 1
1036  8A6D 32 39 87     	ld (Habilita_disparo_Amadeus),a
1037  8A70
1038  8A70 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1039  8A72 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1040  8A74 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1041  8A76 CC 27 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1042  8A79 3E F7        	ld a,$f7
1043  8A7B DB FE        	in a,($fe)
1044  8A7D E6 01        	and $01
1045  8A7F C8           	ret z
1046  8A80
1047  8A80 3E F7        	ld a,$f7
1048  8A82 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1049  8A84 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1050  8A86 CC 09 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1051  8A89 C9           	ret
1052  8A8A
1053  8A8A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1054  8A8A              ;
1055  8A8A              ;	Rutina provisional para que los malotes cagen balas.
1056  8A8A
1057  8A8A              Detecta_disparo_entidad
1058  8A8A
1059  8A8A 3A 3C 87     	ld a,(Habilita_disparo_entidad)
1060  8A8D A7           	and a
1061  8A8E C8           	ret z
1062  8A8F 3E 7F        	ld a,$7f
1063  8A91 DB FE        	in a,($fe)
1064  8A93 E6 01        	and 1
1065  8A95 C0           	ret nz
1066  8A96 CD CC 8A     	call Genera_disparo
1067  8A99 C9           	ret
1068  8A9A
1069  8A9A              ; Pinta indicadores de FILAS. ------------------------------------------------------
1070  8A9A
1071  8A9A 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1072  8A9D
1073  8A9D              ; ----------
1074  8A9D 06 20        	ld b,32
1075  8A9F E5           2 push hl
1076  8AA0 C5           	push bc
1077  8AA1              ; ----------
1078  8AA1
1079  8AA1 06 BF        	ld b,$bf
1080  8AA3 36 80        1 ld (hl),%10000000
1081  8AA5 CD CF 91     	call NextScan
1082  8AA8 10 F9        	djnz 1B
1083  8AAA
1084  8AAA              ; ----------
1085  8AAA C1           	pop bc
1086  8AAB E1           	pop hl
1087  8AAC 2C           	inc l
1088  8AAD 10 F0        	djnz 2B
1089  8AAF              ; ----------
1090  8AAF
1091  8AAF 06 03        	ld b,3
1092  8AB1 21 00 47         ld hl,$4700
1093  8AB4 CD BA 8A     3 call Bucle_1
1094  8AB7 10 FB            djnz 3B
1095  8AB9 C9               ret
1096  8ABA
1097  8ABA C5           Bucle_1 push bc
1098  8ABB E5                   push hl
1099  8ABC D1                   pop de
1100  8ABD 13                   inc de
1101  8ABE 01 FF 00             ld bc,255
1102  8AC1 36 FF                ld (hl),255
1103  8AC3 ED B0                ldir
1104  8AC5 23                   inc hl
1105  8AC6 3E 07                ld a,7
1106  8AC8 84                   add a,h
1107  8AC9 67                   ld h,a
1108  8ACA C1                   pop bc
1109  8ACB C9                   ret
1110  8ACC
1111  8ACC              ; ---------------------------------------------------------------
1112  8ACC
1113  8ACC              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8ACC              ; ******************************************************************************************************************************************************************************************
   2+ 8ACC              ;
   3+ 8ACC              ;   17/04/23
   4+ 8ACC              ;
   5+ 8ACC              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8ACC              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8ACC              ;
   8+ 8ACC              ;
   9+ 8ACC              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8ACC              ;
  11+ 8ACC              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8ACC              ;               _ hacen las entidades hacia abajo.
  13+ 8ACC              ;
  14+ 8ACC              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8ACC              ;
  16+ 8ACC              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8ACC              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8ACC              ;
  19+ 8ACC              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8ACC              ;           _ la bala.
  21+ 8ACC              ;
  22+ 8ACC              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8ACC              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8ACC              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8ACC              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8ACC              ;           _ en el momento de generarse la bala)).
  27+ 8ACC
  28+ 8ACC              Genera_disparo
  29+ 8ACC
  30+ 8ACC              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8ACC              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8ACC              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8ACC              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8ACC              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8ACC              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8ACC              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8ACC
  38+ 8ACC              ; Exclusiones:
  39+ 8ACC
  40+ 8ACC 3A 0F 87         ld a,(Columnas)
  41+ 8ACF 47               ld b,a
  42+ 8AD0 3A D8 86         ld a,(Columns)
  43+ 8AD3 B8               cp b
  44+ 8AD4 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8AD5
  46+ 8AD5              ; ----- ----- -----
  47+ 8AD5
  48+ 8AD5 3A 05 87         ld a,(Ctrl_0)
  49+ 8AD8 CB 77            bit 6,a
  50+ 8ADA 20 06            jr nz,14F
  51+ 8ADC
  52+ 8ADC 3A DE 86         ld a,(Coordenada_y)
  53+ 8ADF FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8AE1 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8AE2
  56+ 8AE2 21 00 80     14 ld hl,Indice_disparo
  57+ 8AE5 3A DF 86         ld a,(CTRL_DESPLZ)
  58+ 8AE8 4F               ld c,a
  59+ 8AE9 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8AEB              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8AEB              ;                                            ""        ""       "f9", B="1"
  62+ 8AEB              ;                                            ""        ""       "fb", B="2"
  63+ 8AEB              ;                                            ""        ""       "fb", B="3"
  64+ 8AEB A7               and a
  65+ 8AEC 28 10            jr z,1F
  66+ 8AEE E6 01            and 1
  67+ 8AF0 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8AF1
  69+ 8AF1 79               ld a,c
  70+ 8AF2 16 F9            ld d,$f9
  71+ 8AF4 23           2 inc hl
  72+ 8AF5 23               inc hl
  73+ 8AF6 04               inc b
  74+ 8AF7 BA               cp d
  75+ 8AF8 28 04            jr z,1F
  76+ 8AFA 14               inc d
  77+ 8AFB 14               inc d
  78+ 8AFC 18 F6            jr 2B
  79+ 8AFE
  80+ 8AFE CD 61 89     1 call Extrae_address
  81+ 8B01 E5               push hl
  82+ 8B02 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8B04 DD 21 62 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8B08
  85+ 8B08              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8B08              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8B08
  88+ 8B08 3A 05 87         ld a,(Ctrl_0)
  89+ 8B0B CB 77            bit 6,a
  90+ 8B0D 20 04            jr nz,19F
  91+ 8B0F
  92+ 8B0F AF               xor a
  93+ 8B10 32 3C 87         ld (Habilita_disparo_entidad),a
  94+ 8B13
  95+ 8B13 3A EB 86     19 ld a,(Cuad_objeto)
  96+ 8B16 FE 02            cp 2
  97+ 8B18 38 66            jr c,3F
  98+ 8B1A 28 64            jr z,3F
  99+ 8B1C
 100+ 8B1C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8B1C
 102+ 8B1C E6 01            and 1
 103+ 8B1E 28 30            jr z,4F
 104+ 8B20
 105+ 8B20              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8B20              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8B20              ;
 108+ 8B20              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8B20              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8B20              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8B20
 112+ 8B20 2A D9 86     	ld hl,(Posicion_actual)
 113+ 8B23
 114+ 8B23              ;   Amadeus o entidad ???.
 115+ 8B23
 116+ 8B23 3A 05 87         ld a,(Ctrl_0)
 117+ 8B26 CB 77            bit 6,a
 118+ 8B28 28 0A            jr z,8F
 119+ 8B2A
 120+ 8B2A              ; 	Dispara Amadeus.
 121+ 8B2A
 122+ 8B2A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8B2C CD DE 91         call PreviousScan
 124+ 8B2F CD DE 91         call PreviousScan
 125+ 8B32
 126+ 8B32              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8B32              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8B32              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8B32              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8B32
 131+ 8B32 18 11            jr 10F
 132+ 8B34
 133+ 8B34              ; 	Dispara Entidad.
 134+ 8B34
 135+ 8B34 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8B37              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8B37
 138+ 8B37              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8B37              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8B37
 141+ 8B37 C5               push bc
 142+ 8B38 06 10            ld b,16
 143+ 8B3A CD CF 91     9 call NextScan
 144+ 8B3D 10 FB            djnz 9B
 145+ 8B3F C1               pop bc
 146+ 8B40 CD AA 8B         call Ajusta_disparo_parte_izquierda
 147+ 8B43 18 06            jr 17F
 148+ 8B45
 149+ 8B45              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8B45              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8B45              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8B45              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8B45
 154+ 8B45 CD AA 8B     10 call Ajusta_disparo_parte_izquierda
 155+ 8B48 CD 1F 8C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8B4B              ;                                                      ; _al generar el disparo.
 157+ 8B4B
 158+ 8B4B              ; 	LLegados a este punto tendremos:
 159+ 8B4B              ;
 160+ 8B4B              ;       Puntero_objeto_disparo en IY.
 161+ 8B4B              ;       Rutinas_de_impresion en IX.
 162+ 8B4B              ;       Puntero_de_impresion en HL.
 163+ 8B4B              ;       Impacto/Dirección en BC.
 164+ 8B4B
 165+ 8B4B CD B2 8B     17 call Almacena_disparo
 166+ 8B4E 18 52            jr 6F                                             ; RET.
 167+ 8B50
 168+ 8B50              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8B50              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8B50              ;
 171+ 8B50              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8B50              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8B50              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8B50
 175+ 8B50 2A D9 86     4 ld hl,(Posicion_actual)
 176+ 8B53
 177+ 8B53              ;   Amadeus o entidad ???.
 178+ 8B53
 179+ 8B53 3A 05 87         ld a,(Ctrl_0)
 180+ 8B56 CB 77            bit 6,a
 181+ 8B58 28 0A            jr z,11F
 182+ 8B5A
 183+ 8B5A              ; 	Dispara Amadeus.
 184+ 8B5A
 185+ 8B5A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8B5C CD DE 91         call PreviousScan
 187+ 8B5F CD DE 91         call PreviousScan
 188+ 8B62
 189+ 8B62              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8B62              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8B62              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8B62              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8B62
 194+ 8B62 18 11            jr 13F
 195+ 8B64
 196+ 8B64              ; 	Dispara Entidad.
 197+ 8B64
 198+ 8B64 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8B67              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8B67
 201+ 8B67              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8B67              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8B67
 204+ 8B67 C5               push bc
 205+ 8B68 06 10            ld b,16
 206+ 8B6A CD CF 91     12 call NextScan
 207+ 8B6D 10 FB            djnz 12B
 208+ 8B6F C1               pop bc
 209+ 8B70
 210+ 8B70 CD A3 8B         call Ajusta_disparo_parte_derecha
 211+ 8B73 18 06            jr 18F
 212+ 8B75
 213+ 8B75              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8B75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8B75              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8B75              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8B75
 218+ 8B75 CD A3 8B     13 call Ajusta_disparo_parte_derecha
 219+ 8B78 CD 1F 8C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8B7B              ;                                                       ; _al generar el disparo.
 221+ 8B7B
 222+ 8B7B              ; LLegados a este punto tendremos:
 223+ 8B7B              ;
 224+ 8B7B              ;       Puntero_objeto_disparo en IY.
 225+ 8B7B              ;       Rutinas_de_impresion en IX.
 226+ 8B7B              ;       Puntero_de_impresion en HL.
 227+ 8B7B              ;       Impacto/Dirección en BC.
 228+ 8B7B
 229+ 8B7B CD B2 8B     18 call Almacena_disparo
 230+ 8B7E 18 22            jr 6F                                               ; RET.
 231+ 8B80
 232+ 8B80              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8B80
 234+ 8B80 28 11        3 jr z,5F
 235+ 8B82
 236+ 8B82              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8B82              ;
 238+ 8B82              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8B82              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8B82              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8B82              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8B82
 243+ 8B82              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8B82              ;	   ""        ""       "f9", B="1"
 245+ 8B82              ;	   ""        ""       "fb", B="2"
 246+ 8B82              ; 	   ""        ""       "fb", B="3"
 247+ 8B82
 248+ 8B82 2A D9 86     	ld hl,(Posicion_actual)
 249+ 8B85 CD CF 91     	call NextScan
 250+ 8B88
 251+ 8B88              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8B88              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8B88              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8B88              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8B88
 256+ 8B88 CD AA 8B         call Ajusta_disparo_parte_izquierda
 257+ 8B8B
 258+ 8B8B              ; 	No se produce impacto. B="$80"
 259+ 8B8B              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8B8B
 261+ 8B8B 01 80 80         ld bc,$8080
 262+ 8B8E
 263+ 8B8E              ; 	LLegados a este punto tendremos:
 264+ 8B8E              ;
 265+ 8B8E              ;       Puntero_objeto_disparo en IY.
 266+ 8B8E              ;       Rutinas_de_impresion en IX.
 267+ 8B8E              ;       Puntero_de_impresion en HL.
 268+ 8B8E              ;       Impacto/Dirección en BC.
 269+ 8B8E
 270+ 8B8E CD B2 8B         call Almacena_disparo
 271+ 8B91 18 0F            jr 6F                                           ; RET.
 272+ 8B93
 273+ 8B93              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8B93              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8B93              ;
 276+ 8B93              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8B93              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8B93              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8B93              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8B93
 281+ 8B93 2A D9 86     5 ld hl,(Posicion_actual)
 282+ 8B96 CD CF 91     	call NextScan
 283+ 8B99
 284+ 8B99              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8B99              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8B99              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8B99              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8B99
 289+ 8B99 CD A3 8B         call Ajusta_disparo_parte_derecha
 290+ 8B9C
 291+ 8B9C              ; 	No se produce impacto. B="$80"
 292+ 8B9C              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8B9C
 294+ 8B9C 01 80 80     15 ld bc,$8080
 295+ 8B9F
 296+ 8B9F              ; 	LLegados a este punto tendremos:
 297+ 8B9F              ;
 298+ 8B9F              ;       Puntero_objeto_disparo en IY.
 299+ 8B9F              ;       Rutinas_de_impresion en IX.
 300+ 8B9F              ;       Puntero_de_impresion en HL.
 301+ 8B9F              ;       Impacto/Dirección en BC.
 302+ 8B9F
 303+ 8B9F CD B2 8B         call Almacena_disparo
 304+ 8BA2
 305+ 8BA2 C9           6 ret
 306+ 8BA3
 307+ 8BA3              ; ----------------------------------------------------------------
 308+ 8BA3              ;
 309+ 8BA3              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8BA3              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8BA3              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8BA3
 313+ 8BA3 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8BA4 FE 02            cp 2
 315+ 8BA6 38 01            jr c,1F
 316+ 8BA8 23               inc hl
 317+ 8BA9 C9           1 ret
 318+ 8BAA
 319+ 8BAA 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8BAB FE 01        	cp 1
 321+ 8BAD 20 01        	jr nz,1F
 322+ 8BAF 2B           	dec hl
 323+ 8BB0 2B           1 dec hl
 324+ 8BB1 C9               ret
 325+ 8BB2
 326+ 8BB2              ; ----------------------------------------------------------------
 327+ 8BB2              ;
 328+ 8BB2              ;   25/02/23
 329+ 8BB2              ;
 330+ 8BB2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8BB2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8BB2              ;
 333+ 8BB2              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8BB2              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8BB2
 336+ 8BB2              Almacena_disparo
 337+ 8BB2
 338+ 8BB2 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8BB3 F1               pop af
 340+ 8BB4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8BB5
 342+ 8BB5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8BB6 E6 01            and 1
 344+ 8BB8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8BBA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8BBA              ; 	Dispara AMADEUS.
 347+ 8BBA
 348+ 8BBA              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8BBA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8BBA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8BBA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8BBA
 353+ 8BBA C5               push bc
 354+ 8BBB 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8BBE 2A 2C 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8BC1 A7               and a
 357+ 8BC2 ED 42            sbc hl,bc
 358+ 8BC4 CC 2A 89         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8BC7 C1               pop bc
 360+ 8BC8 28 54            jr z,4F
 361+ 8BCA
 362+ 8BCA 2A 2C 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8BCD 23               inc hl
 364+ 8BCE 23               inc hl
 365+ 8BCF 22 2C 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8BD2              ;                                                   ; _ Disparo_(+1).
 367+ 8BD2 18 18            jr 2F
 368+ 8BD4
 369+ 8BD4              ; Dispara una entidad.
 370+ 8BD4
 371+ 8BD4 C5           1 push bc
 372+ 8BD5 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8BD8 2A 2A 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8BDB A7               and a
 375+ 8BDC ED 42            sbc hl,bc
 376+ 8BDE CC 23 89         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8BE1 C1               pop bc
 378+ 8BE2 28 3A            jr z,4F
 379+ 8BE4
 380+ 8BE4 2A 2A 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8BE7 23               inc hl
 382+ 8BE8 23               inc hl
 383+ 8BE9 22 2A 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8BEC              ;                                                   ; _ Disparo_(+1).
 385+ 8BEC CD 61 89     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8BEF              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8BEF              ;
 388+ 8BEF              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8BEF              ;                                                     Rutinas_de_impresion en IX.
 390+ 8BEF              ;                                                     Puntero_de_impresion en HL.
 391+ 8BEF              ;                                                     Impacto/Dirección en BC.
 392+ 8BEF
 393+ 8BEF 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8BF0 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8BF1 23               inc hl                                          ; _ al siguiente.
 396+ 8BF2 A7               and a
 397+ 8BF3 20 C0            jr nz,3B
 398+ 8BF5
 399+ 8BF5 08               ex af,af
 400+ 8BF6 ED 73 21 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8BFA F9               ld sp,hl
 402+ 8BFB
 403+ 8BFB DD E5            push ix                                         ; Rutina de impresión.
 404+ 8BFD F5               push af                                         ; Puntero de impresión.
 405+ 8BFE FD E5            push iy                                         ; Puntero objeto.
 406+ 8C00 C5               push bc                                         ; Control.
 407+ 8C01
 408+ 8C01 ED 7B 21 87      ld sp,(Stack)
 409+ 8C05
 410+ 8C05              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8C05
 412+ 8C05 21 14 87     	ld hl,Ctrl_1
 413+ 8C08 CB C6        	set 0,(hl)
 414+ 8C0A
 415+ 8C0A DD E5        	push ix
 416+ 8C0C E1               pop hl
 417+ 8C0D F5               push af
 418+ 8C0E DD E1            pop ix
 419+ 8C10
 420+ 8C10 CD A0 7F     	call Guarda_foto_registros
 421+ 8C13
 422+ 8C13 21 14 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8C16 CB 86        	res 0,(hl)
 424+ 8C18
 425+ 8C18              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8C18              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8C18
 428+ 8C18 CD 2A 89         call Inicia_Puntero_Disparo_Amadeus
 429+ 8C1B CD 23 89         call Inicia_Puntero_Disparo_Entidades
 430+ 8C1E
 431+ 8C1E C9           4 ret
 432+ 8C1F
 433+ 8C1F              ; ----------------------------------------------------------------
 434+ 8C1F              ;
 435+ 8C1F              ;   4/3/23
 436+ 8C1F              ;
 437+ 8C1F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8C1F              ;   _ al generarse el disparo.
 439+ 8C1F              ;
 440+ 8C1F              ;       "$80" ..... No se produce colisión.
 441+ 8C1F              ;       "$81" ..... Se produce colisión.
 442+ 8C1F
 443+ 8C1F              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8C1F              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8C1F
 446+ 8C1F
 447+ 8C1F FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8C21 E5               push hl                                        ; Puntero de impresión.
 449+ 8C22
 450+ 8C22 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8C24 CD 40 8C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8C27
 453+ 8C27 7B               ld a,e
 454+ 8C28 E6 01            and 1
 455+ 8C2A 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8C2C
 457+ 8C2C E1               pop hl
 458+ 8C2D E5               push hl
 459+ 8C2E CD CF 91         call NextScan
 460+ 8C31
 461+ 8C31 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8C32 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8C34 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8C36              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8C36 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8C38 CD 40 8C         call Bucle_2
 467+ 8C3B
 468+ 8C3B 43           2 ld b,e
 469+ 8C3C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8C3D FD E1            pop iy
 471+ 8C3F C9               ret
 472+ 8C40
 473+ 8C40               ; ---------- ----------
 474+ 8C40
 475+ 8C40 06 02        Bucle_2 ld b,2
 476+ 8C42 FD 7E 00     2 ld a,(iy)
 477+ 8C45 A6               and (hl)
 478+ 8C46 28 02            jr z,1F
 479+ 8C48 1E 81            ld e,$81
 480+ 8C4A 23           1 inc hl
 481+ 8C4B FD 23            inc iy
 482+ 8C4D 10 F3            djnz 2B
 483+ 8C4F C9               ret
 484+ 8C50
 485+ 8C50              ; -------------------------------------------------------------------------------------------------------------
 486+ 8C50              ;
 487+ 8C50              ;   11/04/23
 488+ 8C50              ;
 489+ 8C50              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8C50              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8C50              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8C50              ;
 493+ 8C50              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8C50
 495+ 8C50              Compara_coordenadas_X
 496+ 8C50
 497+ 8C50              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8C50              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8C50
 500+ 8C50              ; Preparamos registros:
 501+ 8C50
 502+ 8C50 21 DD 86         ld hl,Filas+6
 503+ 8C53 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8C54 23               inc hl
 505+ 8C55 23               inc hl
 506+ 8C56 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8C57 43               ld b,e
 508+ 8C58 21 EB 86         ld hl,Filas+20
 509+ 8C5B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8C5C 21 36 87         ld hl,Coordenadas_X_Entidad
 511+ 8C5F CD 70 8E         call Guarda_coordenadas_X
 512+ 8C62
 513+ 8C62              ; Preparamos registros:
 514+ 8C62
 515+ 8C62 21 7C 84         ld hl,Amadeus_db+6
 516+ 8C65 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8C66 23               inc hl
 518+ 8C67 23               inc hl
 519+ 8C68 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8C69 7B               ld a,e
 521+ 8C6A 08               ex af,af'
 522+ 8C6B 21 8A 84         ld hl,Amadeus_db+20
 523+ 8C6E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8C6F 21 33 87         ld hl,Coordenadas_X_Amadeus
 525+ 8C72 CD 70 8E         call Guarda_coordenadas_X
 526+ 8C75
 527+ 8C75              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8C75              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8C75
 530+ 8C75 04               inc b
 531+ 8C76 05               dec b
 532+ 8C77 28 04            jr z,1F
 533+ 8C79 06 03            ld b,3
 534+ 8C7B 18 02            jr 2F
 535+ 8C7D 06 02        1 ld b,2
 536+ 8C7F 08           2 ex af,af'
 537+ 8C80 3C               inc a
 538+ 8C81 3D               dec a
 539+ 8C82 28 04            jr z,5F
 540+ 8C84 0E 03            ld c,3
 541+ 8C86 18 02            jr 6F
 542+ 8C88 0E 02        5 ld c,2
 543+ 8C8A 79           6 ld a,c
 544+ 8C8B 08               ex af,af'
 545+ 8C8C 11 36 87         ld de,Coordenadas_X_Entidad
 546+ 8C8F 1A           4 ld a,(de)
 547+ 8C90 21 33 87         ld hl,Coordenadas_X_Amadeus
 548+ 8C93 BE           3 cp (hl)
 549+ 8C94 28 0E            jr z,7F
 550+ 8C96 23               inc hl
 551+ 8C97 0D               dec c
 552+ 8C98 20 F9            jr nz,3B
 553+ 8C9A 13               inc de
 554+ 8C9B 08               ex af,af'
 555+ 8C9C 4F               ld c,a
 556+ 8C9D 08               ex af,af'
 557+ 8C9E 10 EF            djnz 4B
 558+ 8CA0
 559+ 8CA0              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8CA0
 561+ 8CA0 CD AF 8E     8 call Limpia_Coordenadas_X
 562+ 8CA3 C9               ret
 563+ 8CA4
 564+ 8CA4              7
 565+ 8CA4 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8CA6 32 F0 86         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8CA9 21 2E 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8CAC CB D6            set 2,(hl)
 569+ 8CAE 18 F0            jr 8B
 570+ 8CB0
 571+ 8CB0              ; -----------------------------------------------------------------------
 572+ 8CB0              ;
 573+ 8CB0              ;   17/04/23
 574+ 8CB0              ;
 575+ 8CB0
 576+ 8CB0              Detecta_colision_nave_entidad
 577+ 8CB0
 578+ 8CB0              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8CB0
 580+ 8CB0 2A D9 86         ld hl,(Posicion_actual)
 581+ 8CB3 CD 34 91         call Calcula_puntero_de_impresion
 582+ 8CB6
 583+ 8CB6              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8CB6              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8CB6
 586+ 8CB6 DD E5            push ix
 587+ 8CB8 E1               pop hl
 588+ 8CB9 E5               push hl
 589+ 8CBA
 590+ 8CBA              ; ----- ----- -----
 591+ 8CBA 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8CBC 06 0A            ld b,10
 593+ 8CBE CD EE 8C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8CC1 7B               ld a,e
 595+ 8CC2 FE 05            cp 5
 596+ 8CC4 38 0E            jr c,3F
 597+ 8CC6
 598+ 8CC6              ; LLegados a este punto:
 599+ 8CC6              ;
 600+ 8CC6              ;   HAY COLISIÓN !!!!!.
 601+ 8CC6              ;
 602+ 8CC6              ;   .db (Impacto) de Amadeus a "1".
 603+ 8CC6              ;   SET el bit3 de (Impacto2).
 604+ 8CC6              ;
 605+ 8CC6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8CC6
 607+ 8CC6 21 8F 84         ld hl,Amadeus_db+25
 608+ 8CC9 36 01            ld (hl),1
 609+ 8CCB 21 2E 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8CCE CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8CD0 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8CD2 18 18            jr 1F
 613+ 8CD4
 614+ 8CD4              ; -----
 615+ 8CD4
 616+ 8CD4 E1           3 pop hl
 617+ 8CD5 CD CF 91         call NextScan
 618+ 8CD8 E5               push hl
 619+ 8CD9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8CDA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8CDC 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8CDE 30 0C            jr nc,1F
 623+ 8CE0              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8CE0 10 DC            djnz 2B
 625+ 8CE2
 626+ 8CE2              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8CE2
 628+ 8CE2              ; LLegados a este punto:
 629+ 8CE2              ;
 630+ 8CE2              ;   NO HAY COLISIÓN !!!!!.
 631+ 8CE2              ;
 632+ 8CE2              ;   .db (Impacto) de Amadeus a "0".
 633+ 8CE2              ;   RES el bit2 de (Impacto2).
 634+ 8CE2              ;
 635+ 8CE2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8CE2              ;   Lo colocamos a "0".
 637+ 8CE2
 638+ 8CE2 21 2E 87         ld hl,Impacto2
 639+ 8CE5 CB 96            res 2,(hl)
 640+ 8CE7 2A 2F 87         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8CEA 36 00            ld (hl),0
 642+ 8CEC
 643+ 8CEC E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8CED C9               ret
 645+ 8CEE
 646+ 8CEE               ; ---------- ----------
 647+ 8CEE
 648+ 8CEE C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8CEF 3A D8 86         ld a,(Columns)
 650+ 8CF2 47               ld b,a
 651+ 8CF3 FD 7E 00     2 ld a,(iy)
 652+ 8CF6 BE               cp (hl)
 653+ 8CF7 28 01            jr z,1F
 654+ 8CF9
 655+ 8CF9 1C               inc e
 656+ 8CFA
 657+ 8CFA 23           1 inc hl
 658+ 8CFB FD 23            inc iy
 659+ 8CFD 10 F4            djnz 2B
 660+ 8CFF C1               pop bc
 661+ 8D00 C9               ret
 662+ 8D01
 663+ 8D01              ; -------------------------------------------------------------------------------------------------------------
 664+ 8D01              ;
 665+ 8D01              ;   13/03/23
 666+ 8D01              ;
 667+ 8D01              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8D01              ;
 669+ 8D01              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8D01
 671+ 8D01 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8D04 7E               ld a,(hl)
 673+ 8D05 A7               and a
 674+ 8D06 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8D07
 676+ 8D07 44               ld b,h
 677+ 8D08 4D               ld c,l
 678+ 8D09 2A 27 87         ld hl,(Stack_snapshot_disparos)
 679+ 8D0C E5               push hl
 680+ 8D0D A7               and a
 681+ 8D0E ED 42            sbc hl,bc
 682+ 8D10 E5               push hl
 683+ 8D11 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8D12
 685+ 8D12 E1               pop hl
 686+ 8D13 54               ld d,h
 687+ 8D14 5D               ld e,l
 688+ 8D15 1B               dec de
 689+ 8D16 ED B8            lddr                                                ; Limpiamos.
 690+ 8D18
 691+ 8D18 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8D1B 22 27 87         ld (Stack_snapshot_disparos),hl
 693+ 8D1E
 694+ 8D1E C9               ret
 695+ 8D1F
 696+ 8D1F              ; -------------------------------------------------------------------------------------------------------------
 697+ 8D1F              ;
 698+ 8D1F              ;   28/03/23
 699+ 8D1F              ;
 700+ 8D1F
 701+ 8D1F 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8D22 2A 2C 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8D25
 704+ 8D25 CD 61 89     2 call Extrae_address
 705+ 8D28 7E               ld a,(hl)
 706+ 8D29 A7               and a
 707+ 8D2A 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8D2C
 709+ 8D2C              ; ----- ----- ----- ----- ----- -----
 710+ 8D2C
 711+ 8D2C C5               push bc
 712+ 8D2D CD E9 8D         call foto_disparo_a_borrar
 713+ 8D30
 714+ 8D30              ; Existe colisión con este disparo???
 715+ 8D30
 716+ 8D30 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8D31 7E               ld a,(hl)
 718+ 8D32 2B               dec hl
 719+ 8D33 E6 01            and 1
 720+ 8D35 28 1D            jr z,9F
 721+ 8D37
 722+ 8D37              ;   En este punto:
 723+ 8D37              ;
 724+ 8D37              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8D37              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8D37              ;   _con la entidad).
 727+ 8D37              ;
 728+ 8D37              ;   Disparo_2A defw 0                                ; Control.
 729+ 8D37              ;    defw 0                                          ; Puntero objeto.
 730+ 8D37              ;    defw 0                                          ; Puntero de impresión.
 731+ 8D37              ;    defw 0                                          ; Rutina de impresión.
 732+ 8D37
 733+ 8D37 E5               push hl
 734+ 8D38
 735+ 8D38 06 04            ld b,4
 736+ 8D3A 23           19 inc hl
 737+ 8D3B 10 FD            djnz 19B
 738+ 8D3D
 739+ 8D3D CD 61 89         call Extrae_address
 740+ 8D40 CD E6 97         call Genera_coordenadas_disparo
 741+ 8D43
 742+ 8D43              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8D43
 744+ 8D43 21 31 87         ld hl,Coordenadas_disparo_certero
 745+ 8D46 72               ld (hl),d
 746+ 8D47 23               inc hl
 747+ 8D48 73               ld (hl),e
 748+ 8D49
 749+ 8D49              ; Elimino el disparo de la base de datos.
 750+ 8D49
 751+ 8D49 E1               pop hl
 752+ 8D4A CD 65 8E         call Elimina_disparo_de_base_de_datos
 753+ 8D4D 21 2E 87         ld hl,Impacto2
 754+ 8D50 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8D52
 756+ 8D52 18 06            jr 11F
 757+ 8D54
 758+ 8D54 CD 12 8E     9 call Mueve_disparo
 759+ 8D57 CD E9 8D         call foto_disparo_a_borrar
 760+ 8D5A
 761+ 8D5A C1           11 pop bc
 762+ 8D5B 18 04            jr 7F
 763+ 8D5D
 764+ 8D5D              ; ----- ----- ----- ----- ----- -----
 765+ 8D5D
 766+ 8D5D ED 42        1 sbc hl,bc
 767+ 8D5F 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8D61 2A 2C 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8D64 23               inc hl
 770+ 8D65 23               inc hl
 771+ 8D66 22 2C 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8D69 18 BA            jr 2B
 773+ 8D6B CD 2A 89     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8D6E
 775+ 8D6E 01 66 84         ld bc,Disparo_11
 776+ 8D71 2A 2A 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8D74
 778+ 8D74 CD 61 89     5 call Extrae_address
 779+ 8D77 7E               ld a,(hl)
 780+ 8D78 A7               and a
 781+ 8D79 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8D7B
 783+ 8D7B              ; ----- ----- ----- ----- ----- -----
 784+ 8D7B
 785+ 8D7B C5               push bc
 786+ 8D7C CD E9 8D         call foto_disparo_a_borrar
 787+ 8D7F
 788+ 8D7F              ; Existe colisión con este disparo???
 789+ 8D7F
 790+ 8D7F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8D80 7E               ld a,(hl)
 792+ 8D81 2B               dec hl
 793+ 8D82 E6 01            and 1
 794+ 8D84 28 48            jr z,10F
 795+ 8D86
 796+ 8D86              ; La colisión se produce con Amadeus???
 797+ 8D86              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8D86
 799+ 8D86 E5               push hl
 800+ 8D87
 801+ 8D87 06 04            ld b,4
 802+ 8D89 23           16 inc hl
 803+ 8D8A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8D8C CD 61 89         call Extrae_address
 805+ 8D8F CD E6 97         call Genera_coordenadas_disparo
 806+ 8D92
 807+ 8D92 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8D93 FE 16            cp $16
 809+ 8D95 38 22            jr c,15F
 810+ 8D97
 811+ 8D97              ; (Colisiones en filas 16 y 17).
 812+ 8D97
 813+ 8D97 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8D98
 815+ 8D98              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8D98
 817+ 8D98 21 7C 84         ld hl,Amadeus_db+6
 818+ 8D9B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8D9C 23               inc hl
 820+ 8D9D 23               inc hl
 821+ 8D9E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8D9F 21 8A 84         ld hl,Amadeus_db+20
 823+ 8DA2 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8DA3 21 33 87         ld hl,Coordenadas_X_Amadeus
 825+ 8DA6 CD 70 8E         call Guarda_coordenadas_X
 826+ 8DA9
 827+ 8DA9 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8DAA
 829+ 8DAA              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8DAA
 831+ 8DAA 06 03            ld b,3
 832+ 8DAC 21 33 87         ld hl,Coordenadas_X_Amadeus
 833+ 8DAF 7E           18 ld a,(hl)
 834+ 8DB0 BA               cp d
 835+ 8DB1 20 03            jr nz,17F
 836+ 8DB3
 837+ 8DB3              ; Colisión Amadeus !!!!!!!!!!
 838+ 8DB3
 839+ 8DB3 E1               pop hl
 840+ 8DB4 18 09            jr 14F
 841+ 8DB6
 842+ 8DB6 23           17 inc hl
 843+ 8DB7 10 F6            djnz 18B
 844+ 8DB9
 845+ 8DB9              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8DB9              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8DB9
 848+ 8DB9 E1           15 pop hl
 849+ 8DBA 23               inc hl
 850+ 8DBB 35               dec (hl)
 851+ 8DBC 2B               dec hl
 852+ 8DBD 18 0F            jr 10F
 853+ 8DBF
 854+ 8DBF              ; -----------------------debug
 855+ 8DBF
 856+ 8DBF              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8DBF              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8DBF
 859+ 8DBF E5           14 push hl
 860+ 8DC0 CD 65 8E         call Elimina_disparo_de_base_de_datos
 861+ 8DC3 21 2E 87         ld hl,Impacto2
 862+ 8DC6 CB CE            set 1,(hl)
 863+ 8DC8 CD AF 8E         call Limpia_Coordenadas_X
 864+ 8DCB
 865+ 8DCB E1               pop hl
 866+ 8DCC 18 06            jr 12F
 867+ 8DCE
 868+ 8DCE CD 12 8E     10 call Mueve_disparo
 869+ 8DD1 CD E9 8D         call foto_disparo_a_borrar
 870+ 8DD4 C1           12 pop bc
 871+ 8DD5
 872+ 8DD5 18 04            jr 8F
 873+ 8DD7
 874+ 8DD7              ; ----- ----- ----- ----- ----- -----
 875+ 8DD7
 876+ 8DD7 ED 42        4 sbc hl,bc
 877+ 8DD9 28 0A            jr z,6F
 878+ 8DDB
 879+ 8DDB 2A 2A 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8DDE 23               inc hl
 881+ 8DDF 23               inc hl
 882+ 8DE0 22 2A 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8DE3 18 8F            jr 5B
 884+ 8DE5
 885+ 8DE5 CD 23 89     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8DE8 C9               ret
 887+ 8DE9
 888+ 8DE9              ; ------------------------------------------------------------------
 889+ 8DE9
 890+ 8DE9              foto_disparo_a_borrar
 891+ 8DE9
 892+ 8DE9 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8DEA A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8DEB C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8DEC
 896+ 8DEC E5               push hl
 897+ 8DED 23               inc hl
 898+ 8DEE 23               inc hl
 899+ 8DEF ED 73 21 87      ld (Stack),sp
 900+ 8DF3 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8DF4 FD E1            pop iy
 902+ 8DF6 DD E1            pop ix
 903+ 8DF8 E1               pop hl
 904+ 8DF9 ED 7B 21 87      ld sp,(Stack)
 905+ 8DFD 3A 14 87         ld a,(Ctrl_1)
 906+ 8E00 CB C7            set 0,a
 907+ 8E02 32 14 87         ld (Ctrl_1),a
 908+ 8E05 CD A0 7F         call Guarda_foto_registros
 909+ 8E08 3A 14 87         ld a,(Ctrl_1)
 910+ 8E0B CB 87            res 0,a
 911+ 8E0D 32 14 87         ld (Ctrl_1),a
 912+ 8E10 E1               pop hl
 913+ 8E11 C9               ret
 914+ 8E12
 915+ 8E12 E5           Mueve_disparo push hl
 916+ 8E13 7E               ld a,(hl)
 917+ 8E14 06 04            ld b,4
 918+ 8E16 23           1 inc hl
 919+ 8E17 10 FD            djnz 1B
 920+ 8E19
 921+ 8E19              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8E19
 923+ 8E19 CD 61 89         call Extrae_address
 924+ 8E1C
 925+ 8E1C E6 01            and 1
 926+ 8E1E 28 2B            jr z,2F
 927+ 8E20
 928+ 8E20              ; Disparo hacia arriba, (Amadeus).
 929+ 8E20
 930+ 8E20              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8E20              ; _ de la dificultad.
 932+ 8E20
 933+ 8E20 CD DE 91         call PreviousScan
 934+ 8E23 CD DE 91         call PreviousScan
 935+ 8E26 CD DE 91         call PreviousScan
 936+ 8E29
 937+ 8E29              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8E29
 939+ 8E29 7C               ld a,h
 940+ 8E2A FE 40            cp $40
 941+ 8E2C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8E2E
 943+ 8E2E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8E2E
 945+ 8E2E EB               ex de,hl
 946+ 8E2F 06 04            ld b,4
 947+ 8E31 2B           6 dec hl
 948+ 8E32 10 FD            djnz 6B
 949+ 8E34
 950+ 8E34 CD 65 8E         call Elimina_disparo_de_base_de_datos
 951+ 8E37 E1               pop hl
 952+ 8E38 18 10            jr 7F
 953+ 8E3A
 954+ 8E3A              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8E3A
 956+ 8E3A D5           3 push de
 957+ 8E3B C5               push bc
 958+ 8E3C
 959+ 8E3C CD 1F 8C         call Comprueba_Colision
 960+ 8E3F
 961+ 8E3F              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8E3F
 963+ 8E3F 78               ld a,b
 964+ 8E40
 965+ 8E40 C1               pop bc
 966+ 8E41 D1               pop de
 967+ 8E42
 968+ 8E42 EB               ex de,hl
 969+ 8E43
 970+ 8E43 73               ld (hl),e
 971+ 8E44 23               inc hl
 972+ 8E45 72               ld (hl),d
 973+ 8E46
 974+ 8E46 E1           4 pop hl
 975+ 8E47 23               inc hl
 976+ 8E48 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8E49 2B               dec hl
 978+ 8E4A C9           7 ret
 979+ 8E4B
 980+ 8E4B              ; Disparo hacia abajo, (Entidad).
 981+ 8E4B
 982+ 8E4B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8E4B              ; _ de la dificultad.
 984+ 8E4B
 985+ 8E4B CD CF 91     2 call NextScan
 986+ 8E4E CD CF 91         call NextScan
 987+ 8E51 CD CF 91         call NextScan
 988+ 8E54
 989+ 8E54              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8E54
 991+ 8E54 7C               ld a,h
 992+ 8E55 FE 58            cp $58
 993+ 8E57 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8E59
 995+ 8E59 EB               ex de,hl
 996+ 8E5A 06 04            ld b,4
 997+ 8E5C 2B           5 dec hl
 998+ 8E5D 10 FD            djnz 5B
 999+ 8E5F
1000+ 8E5F CD 65 8E         call Elimina_disparo_de_base_de_datos
1001+ 8E62 E1               pop hl
1002+ 8E63 18 E5            jr 7B
1003+ 8E65
1004+ 8E65              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8E65
1006+ 8E65 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8E68 AF               xor a
1008+ 8E69 77               ld (hl),a
1009+ 8E6A 54               ld d,h
1010+ 8E6B 5D               ld e,l
1011+ 8E6C 13               inc de
1012+ 8E6D ED B0            ldir
1013+ 8E6F C9               ret
1014+ 8E70
1015+ 8E70              ; -----------------------------------------------------------------
1016+ 8E70              ;
1017+ 8E70              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8E70              ;
1019+ 8E70              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8E70              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8E70              ;
1022+ 8E70              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8E70              ;
1024+ 8E70              ;   INPUTS:
1025+ 8E70              ;
1026+ 8E70              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8E70              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8E70              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8E70
1030+ 8E70              ;   MODIFICA: A, HL, DE y C
1031+ 8E70
1032+ 8E70 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8E71 79               ld a,c
1034+ 8E72 E6 01            and 1
1035+ 8E74 20 03            jr nz,1F
1036+ 8E76 14               inc d
1037+ 8E77 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8E79
1039+ 8E79              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8E79              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8E79
1042+ 8E79 15           1 dec d
1043+ 8E7A 23           2 inc hl
1044+ 8E7B 72               ld (hl),d
1045+ 8E7C
1046+ 8E7C 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8E7D A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8E7E C8               ret z
1049+ 8E7F
1050+ 8E7F AF               xor a
1051+ 8E80 5F               ld e,a
1052+ 8E81 18 ED            jr Guarda_coordenadas_X
1053+ 8E83
1054+ 8E83              ; -----------------------------------------------------------------
1055+ 8E83              ;
1056+ 8E83              ;   12/04/23
1057+ 8E83              ;
1058+ 8E83
1059+ 8E83 3A 2E 87     Selector_de_impactos ld a,(Impacto2)
1060+ 8E86 A7               and a
1061+ 8E87 C8               ret z
1062+ 8E88
1063+ 8E88 FE 04            cp 4
1064+ 8E8A 20 09            jr nz,1F
1065+ 8E8C
1066+ 8E8C
1067+ 8E8C              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8E8C
1069+ 8E8C CD B0 8C         call Detecta_colision_nave_entidad
1070+ 8E8F
1071+ 8E8F 21 2E 87         ld hl,Impacto2
1072+ 8E92 CB 5E            bit 3,(hl)
1073+ 8E94 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8E95
1075+ 8E95              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8E95              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8E95
1078+ 8E95 21 2E 87     1 ld hl,Impacto2
1079+ 8E98 CB 4E            bit 1,(hl)
1080+ 8E9A 28 07            jr z,2F
1081+ 8E9C
1082+ 8E9C 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8E9F 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8EA1 18 0B            jr 3F
1085+ 8EA3
1086+ 8EA3 21 2E 87     2 ld hl,Impacto2
1087+ 8EA6 CB 46            bit 0,(hl)
1088+ 8EA8 C8               ret z
1089+ 8EA9
1090+ 8EA9              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8EA9
1092+ 8EA9 21 14 87         ld hl,Ctrl_1
1093+ 8EAC CB D6            set 2,(hl)
1094+ 8EAE
1095+ 8EAE C9           3 ret
1096+ 8EAF
1097+ 8EAF              ; -----------------------------------------------------------------
1098+ 8EAF              ;
1099+ 8EAF              ;   16/04/23
1100+ 8EAF              ;
1101+ 8EAF
1102+ 8EAF AF           Limpia_Coordenadas_X xor a
1103+ 8EB0 06 06            ld b,6
1104+ 8EB2 21 33 87         ld hl,Coordenadas_X_Amadeus
1105+ 8EB5 77           1 ld (hl),a
1106+ 8EB6 23               inc hl
1107+ 8EB7 10 FC            djnz 1B
1108+ 8EB9 C9               ret
1109+ 8EBA
1110+ 8EBA              ; -----------------------------------------------------------------
1111+ 8EBA              ;
1112+ 8EBA              ;   25/04/23
1113+ 8EBA              ;
1114+ 8EBA
1115+ 8EBA              Determina_resultado_comparativa
1116+ 8EBA
1117+ 8EBA              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8EBA              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8EBA              ;
1120+ 8EBA              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8EBA              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8EBA              ;
1123+ 8EBA              ;   SBC HL,DE
1124+ 8EBA
1125+ 8EBA 7C               ld a,h
1126+ 8EBB 06 00            ld b,0
1127+ 8EBD
1128+ 8EBD CD CD 8E         call Compara_cositas
1129+ 8EC0
1130+ 8EC0 04               inc b
1131+ 8EC1 05               dec b
1132+ 8EC2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8EC3
1134+ 8EC3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8EC4 06 00            ld b,0
1136+ 8EC6
1137+ 8EC6 CD CD 8E         call Compara_cositas
1138+ 8EC9 18 01            jr 2F
1139+ 8ECB
1140+ 8ECB 04           1 inc b
1141+ 8ECC C9           2 ret
1142+ 8ECD
1143+ 8ECD A7           Compara_cositas and a
1144+ 8ECE 28 17            jr z,1F
1145+ 8ED0
1146+ 8ED0 FE FD            cp $fd
1147+ 8ED2 28 13            jr z,1F
1148+ 8ED4 FE FE            cp $fe
1149+ 8ED6 28 0F            jr z,1F
1150+ 8ED8 FE FF            cp $ff
1151+ 8EDA 28 0B            jr z,1F
1152+ 8EDC FE 01            cp $01
1153+ 8EDE 28 07            jr z,1F
1154+ 8EE0 FE 02            cp $02
1155+ 8EE2 28 03            jr z,1F
1156+ 8EE4 FE 03            cp $03
1157+ 8EE6 C0               ret nz
1158+ 8EE7
1159+ 8EE7 04           1 inc b
1160+ 8EE8 C9               ret
1161+ 8EE9
# file closed: Disparo.asm
1114  8EE9              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8EE9              ; ******************************************************************************************************************************************************************************************
   2+ 8EE9              ;
   3+ 8EE9              ; 01/23
   4+ 8EE9              ;
   5+ 8EE9              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8EE9
   7+ 8EE9 CD C3 91     Draw call Prepara_draw
   8+ 8EEC 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8EED A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8EEE 28 05        	jr z,2F
  11+ 8EF0
  12+ 8EF0 3A EB 86     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8EF3 18 0C        	jr 1F
  14+ 8EF5 2A E9 86     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8EF8 22 D9 86     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8EFB CD 8A 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8EFE              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8EFE CD 09 99     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8F01 3A 05 87     1 ld a,(Ctrl_0)
  20+ 8F04 CB 6F        	bit 5,a
  21+ 8F06 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8F08
  23+ 8F08 CD 20 8F     	call Comprueba_limite_horizontal
  24+ 8F0B CD B0 8F     	call Comprueba_limite_vertical
  25+ 8F0E
  26+ 8F0E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8F0E
  28+ 8F0E CD FD 90     3 call calcula_CColumnass
  29+ 8F11 CD 34 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8F14 CD 89 91     	call Define_rutina_de_impresion
  31+ 8F17
  32+ 8F17 3A 05 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8F1A CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8F1C 32 05 87     	ld (Ctrl_0),a
  35+ 8F1F
  36+ 8F1F C9           	ret
  37+ 8F20
  38+ 8F20              ; *******************************************************************************************************************************************************************************************
  39+ 8F20              ;	21/01/23
  40+ 8F20              ;
  41+ 8F20              ; 	Comprueba_limite_horizontal.
  42+ 8F20              ;
  43+ 8F20              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8F20              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8F20              ;
  46+ 8F20              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8F20              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8F20              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8F20              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8F20
  51+ 8F20
  52+ 8F20
  53+ 8F20 3A 05 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8F23 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8F25 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8F27 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8F29 32 05 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8F2C 18 09            jr 6F
  59+ 8F2E CB 5F        1 bit 3,a
  60+ 8F30 28 0A            jr z,2F
  61+ 8F32 E6 F7            and $f7
  62+ 8F34 32 05 87         ld (Ctrl_0),a
  63+ 8F37 CD 8A 90     6 call Inicializacion
  64+ 8F3A 18 5B            jr 5F
  65+ 8F3C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8F3D
  67+ 8F3D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8F3D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8F3D
  70+ 8F3D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8F3E 2A 10 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8F41 CD 8F 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8F44 67           	ld h,a
  74+ 8F45 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8F46 CD 8F 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8F49 67           	ld h,a
  77+ 8F4A A7           	and a
  78+ 8F4B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8F4D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8F4E 3A EB 86     	ld a,(Cuad_objeto)
  81+ 8F51 FE 02        	cp 2
  82+ 8F53 38 1E        	jr c,3F
  83+ 8F55 28 1C        	jr z,3F
  84+ 8F57 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8F58 28 23            jr z,7F
  86+ 8F5A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8F5C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8F5E E1           	pop hl
  89+ 8F5F
  90+ 8F5F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8F5F              ; _para indicar con E="2" en caso necesario.
  92+ 8F5F
  93+ 8F5F E5               push hl
  94+ 8F60 C5               push bc
  95+ 8F61 CD 8F 94     	call calcula_tercio
  96+ 8F64 FE 01        	cp 1
  97+ 8F66 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8F68 CD 98 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8F6B 28 26            jr z,9F
 100+ 8F6D 38 24            jr c,9F
 101+ 8F6F 1E 00        11 ld e,0
 102+ 8F71 18 22            jr 8F
 103+ 8F73 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8F74 28 07        	jr z, 7F
 105+ 8F76 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8F78 1E 00         	ld e,0
 107+ 8F7A E1           	pop hl
 108+ 8F7B 18 04        	jr 4F
 109+ 8F7D 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8F7F 18 15            jr 10F
 111+ 8F81
 112+ 8F81              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8F81              ; _para indicar con E="2" en caso necesario.
 114+ 8F81
 115+ 8F81 E5           4 push hl
 116+ 8F82 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8F83 CD 8F 94     	call calcula_tercio
 118+ 8F86 FE 01        	cp 1
 119+ 8F88 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8F8A CD 98 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8F8D 28 04            jr z,9F
 122+ 8F8F 30 02            jr nc,9F
 123+ 8F91 18 02        	jr 8F
 124+ 8F93 1E 02        9 ld e,2
 125+ 8F95 C1           8 pop bc
 126+ 8F96 E1           10 pop hl
 127+ 8F97 C9           5 ret
 128+ 8F98
 129+ 8F98              ; --------------------
 130+ 8F98              ;
 131+ 8F98              ; 25/08/22
 132+ 8F98
 133+ 8F98 CD 8F 94     Comprueba_centro call calcula_tercio
 134+ 8F9B 67               ld h,a
 135+ 8F9C 08           	ex af,af
 136+ 8F9D FE 02        	cp 2
 137+ 8F9F 38 07        	jr c,1F
 138+ 8FA1 28 05        	jr z,1F
 139+ 8FA3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8FA6 18 03        	jr 2F
 141+ 8FA8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8FAB 08           2 ex af,af
 143+ 8FAC A7               and a
 144+ 8FAD ED 42            sbc hl,bc
 145+ 8FAF C9               ret
 146+ 8FB0
 147+ 8FB0              ; *********************************************************************************************************************************************************************************************
 148+ 8FB0              ;
 149+ 8FB0              ;   16/8/22
 150+ 8FB0              ;
 151+ 8FB0              ;	Comprueba_limite_vertical
 152+ 8FB0              ;
 153+ 8FB0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8FB0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8FB0              ;
 156+ 8FB0
 157+ 8FB0 2A D9 86     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8FB3 7D           	ld a,l
 159+ 8FB4 E6 1F        	and $1F
 160+ 8FB6 57           	ld d,a
 161+ 8FB7 3A 12 87     	ld a,(Limite_vertical)
 162+ 8FBA BA           	cp d 											; Límite - Posición.
 163+ 8FBB 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8FBC 3A EB 86     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8FBF CB 47        	bit 0,a
 166+ 8FC1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8FC3
 168+ 8FC3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8FC3
 170+ 8FC3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8FC4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8FC6
 173+ 8FC6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8FC6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8FC6
 176+ 8FC6 3A DD 86         ld a,(Coordenada_X)
 177+ 8FC9 16 0F            ld d,Centro_izquierda
 178+ 8FCB A7               and a
 179+ 8FCC 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8FCD 28 1E            jr z,3F
 181+ 8FCF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8FD1              ;                                                    ; _salimos sin modificar nada.
 183+ 8FD1 18 0E            jr 2F
 184+ 8FD3 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8FD4 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8FD6
 187+ 8FD6              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8FD6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8FD6
 190+ 8FD6 3A DD 86         ld a,(Coordenada_X)
 191+ 8FD9 16 10            ld d,Centro_derecha
 192+ 8FDB A7               and a
 193+ 8FDC 92               sub d
 194+ 8FDD 28 0E            jr z,3F
 195+ 8FDF 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8FE1              ;                                                    ; _salimos sin modificar nada.
 197+ 8FE1 CB 43        2 bit 0,e
 198+ 8FE3 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8FE5 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8FE6 CD 7A 90         call Modificaccionne
 201+ 8FE9 C1           	pop bc
 202+ 8FEA CD 8A 90         call Inicializacion
 203+ 8FED C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8FEE
 205+ 8FEE              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8FEE
 207+ 8FEE C5           4 push bc
 208+ 8FEF 01 D8 86     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8FF2 0A           	ld a,(bc)
 210+ 8FF3 3D           	dec a
 211+ 8FF4 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8FF5 7D           	ld a,l
 213+ 8FF6 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8FF7 CB 47        	bit 0,a
 215+ 8FF9 28 03        	jr z,5F
 216+ 8FFB 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8FFC 18 2E        	jr 7F
 218+ 8FFE
 219+ 8FFE              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8FFE
 221+ 8FFE 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8FFF F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9000 3A 05 87     	ld a,(Ctrl_0)
 224+ 9003 CB 4F        	bit 1,a
 225+ 9005 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9007 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9008
 228+ 9008              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9008
 230+ 9008 1C               inc e
 231+ 9009 1D               dec e
 232+ 900A 20 07            jr nz,12F
 233+ 900C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 900D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 900E 22 D9 86     	ld (Posicion_actual),hl
 236+ 9011 18 44        13 jr 9F
 237+ 9013 CB 43        12 bit 0,e
 238+ 9015 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9017              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9017 C1           	pop bc
 241+ 9018 18 D3        	jr 3B
 242+ 901A 80           14 add b
 243+ 901B 6F               ld l,a
 244+ 901C 22 D9 86     	ld (Posicion_actual),hl
 245+ 901F CD 7A 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9022 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9024 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9026 32 05 87         ld (Ctrl_0),a
 249+ 9029 F1           	pop af
 250+ 902A 18 2B        	jr 9F
 251+ 902C
 252+ 902C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 902C
 254+ 902C F5           7 push af
 255+ 902D 3A 05 87     	ld a,(Ctrl_0)
 256+ 9030 CB 47        	bit 0,a
 257+ 9032 20 1D        	jr nz,8F
 258+ 9034 F1           	pop af
 259+ 9035
 260+ 9035              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9035
 262+ 9035 1C           	inc e
 263+ 9036 1D               dec e
 264+ 9037 20 07            jr nz,10F
 265+ 9039 90           	sub b
 266+ 903A 6F               ld l,a
 267+ 903B 22 D9 86     	ld (Posicion_actual),hl
 268+ 903E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9040              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9040 CB 43        10 bit 0,e
 271+ 9042 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9044              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9044 C1           	pop bc
 274+ 9045 18 A6        	jr 3B
 275+ 9047 90           16 sub b
 276+ 9048 6F               ld l,a
 277+ 9049 22 D9 86     	ld (Posicion_actual),hl
 278+ 904C CD 7A 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 904F 18 06            jr 9F
 280+ 9051 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9053 32 05 87         ld (Ctrl_0),a
 282+ 9056 F1           	pop af
 283+ 9057 C1           9 pop bc
 284+ 9058 1E 00        	ld e,0
 285+ 905A CD 8A 90         call Inicializacion
 286+ 905D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 905E 08           	ex af,af
 288+ 905F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9060 18 8B            jr 3B
 290+ 9062
 291+ 9062              ; --------------------
 292+ 9062
 293+ 9062 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9064 CD DE 91     1 call PreviousScan
 295+ 9067 10 FB            djnz 1B
 296+ 9069 22 D9 86     	ld (Posicion_actual),hl
 297+ 906C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 906D C9           	ret
 299+ 906E
 300+ 906E              ; --------------------
 301+ 906E
 302+ 906E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9070 CD CF 91     1 call NextScan
 304+ 9073 10 FB            djnz 1B
 305+ 9075 22 D9 86     	ld (Posicion_actual),hl
 306+ 9078 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9079 C9           	ret
 308+ 907A
 309+ 907A              ; --------------------
 310+ 907A              ;
 311+ 907A              ;	22/01/23
 312+ 907A              ;
 313+ 907A              ;	E="1". Hemos cambiado de cuadrante.
 314+ 907A              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 907A              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 907A
 317+ 907A
 318+ 907A              Modificaccionne
 319+ 907A
 320+ 907A 3A EB 86     	ld a,(Cuad_objeto)
 321+ 907D FE 02        	cp 2
 322+ 907F CC 62 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9082 DC 62 90         call c,Modifica_Pos_actual
 324+ 9085 C8           	ret z
 325+ 9086 CD 6E 90         call Modifica_Pos_actual2
 326+ 9089 C9               ret
 327+ 908A
 328+ 908A              ; *************************************************************************************************************************************************************************************************
 329+ 908A              ;
 330+ 908A              ;	13/8/22
 331+ 908A              ;
 332+ 908A              ;	Inicializacion
 333+ 908A              ;
 334+ 908A              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 908A              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 908A              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 908A              ;
 338+ 908A              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 908A              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 908A              ;	_ desaparece/aparece.
 341+ 908A
 342+ 908A              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 908A              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 908A              ;
 345+ 908A              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 908A              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 908A              ; 		   [E] ="0"
 348+ 908A
 349+ 908A              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 908A
 351+ 908A CD 8F 94     Inicializacion call calcula_tercio
 352+ 908D 28 36        	jr z,primit
 353+ 908F E6 02        	and 2
 354+ 9091 20 07        	jr nz,segmit
 355+ 9093 7D           	ld a,l
 356+ 9094 FE 7F        	cp $7f
 357+ 9096 38 2D        	jr c,primit
 358+ 9098 28 2B        	jr z,primit
 359+ 909A CD F7 90     segmit call column
 360+ 909D 38 13        	jr c,tercuad
 361+ 909F 3E 04        cuarcuad ld a,4
 362+ 90A1 32 EB 86     	ld (Cuad_objeto),a
 363+ 90A4 21 20 48     	ld hl,$4820
 364+ 90A7 22 10 87     	ld (Limite_horizontal),hl
 365+ 90AA 21 12 87     	ld hl,Limite_vertical
 366+ 90AD 36 0D        	ld (hl),$0d
 367+ 90AF 08           	ex af,af
 368+ 90B0 18 3C        	jr 1F
 369+ 90B2              tercuad
 370+ 90B2 3E 03        	ld a,3
 371+ 90B4 32 EB 86     	ld (Cuad_objeto),a
 372+ 90B7 21 20 48     	ld hl,$4820
 373+ 90BA 22 10 87     	ld (Limite_horizontal),hl
 374+ 90BD 21 12 87     	ld hl,Limite_vertical
 375+ 90C0 36 12        	ld (hl),$12
 376+ 90C2 08           	ex af,af
 377+ 90C3 18 29        	jr 1F
 378+ 90C5 CD F7 90     primit call column
 379+ 90C8 38 13        	jr c, primcuad
 380+ 90CA              segcuad
 381+ 90CA 3E 02        	ld a,2
 382+ 90CC 32 EB 86     	ld (Cuad_objeto),a
 383+ 90CF 21 C0 4F     	ld hl,$4fc0
 384+ 90D2 22 10 87     	ld (Limite_horizontal),hl
 385+ 90D5 21 12 87     	ld hl,Limite_vertical
 386+ 90D8 36 0D        	ld (hl),$0d
 387+ 90DA 08           	ex af,af
 388+ 90DB 18 11        	jr 1F
 389+ 90DD              primcuad
 390+ 90DD 3E 01        	ld a,1
 391+ 90DF 32 EB 86     	ld (Cuad_objeto),a
 392+ 90E2 21 C0 4F     	ld hl,$4fc0
 393+ 90E5 22 10 87     	ld (Limite_horizontal),hl
 394+ 90E8 21 12 87     	ld hl,Limite_vertical
 395+ 90EB 36 12        	ld (hl),$12
 396+ 90ED 08           	ex af,af
 397+ 90EE CD BB 97     1 call Genera_coordenadas
 398+ 90F1 21 05 87     	ld hl,Ctrl_0
 399+ 90F4 CB EE        	set 5,(hl)
 400+ 90F6 C9           	ret
 401+ 90F7
 402+ 90F7              ; ------------------------------------------------------------------------------------------------------------------
 403+ 90F7
 404+ 90F7              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 90F7              ;
 406+ 90F7              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 90F7
 408+ 90F7 7D           column ld a,l
 409+ 90F8 E6 1F        	and $1f
 410+ 90FA FE 10         	cp $10
 411+ 90FC C9            	ret
 412+ 90FD
 413+ 90FD              ; --------------------------------------------------------------------------------------------------------------------
 414+ 90FD              ;
 415+ 90FD              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 90FD              ;
 417+ 90FD              ; 14/12/22
 418+ 90FD              ;
 419+ 90FD              ;	Modifica: A y BC.
 420+ 90FD
 421+ 90FD 3A EB 86     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9100 E6 01        	and 1
 423+ 9102 28 17        	jr z,1F
 424+ 9104
 425+ 9104              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9104
 427+ 9104 3A DD 86     	ld a,(Coordenada_X)
 428+ 9107 47           	ld b,a
 429+ 9108 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9109 79           	ld a,c
 431+ 910A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 910B 38 08        	jr c,2F
 433+ 910D 47           	ld b,a
 434+ 910E 79           	ld a,c
 435+ 910F 90           	sub b
 436+ 9110 32 0F 87     	ld (Columnas),a
 437+ 9113 18 1B        	jr 4F
 438+ 9115 79           2 ld a,c
 439+ 9116 32 0F 87     	ld (Columnas),a
 440+ 9119 18 15        	jr 4F
 441+ 911B
 442+ 911B              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 911B
 444+ 911B 3A DD 86     1 ld a,(Coordenada_X)
 445+ 911E 81           	add c
 446+ 911F 3D           	dec a
 447+ 9120 D6 1F        	sub $1f
 448+ 9122 38 08        	jr c,3F
 449+ 9124 47           	ld b,a
 450+ 9125 79           	ld a,c
 451+ 9126 90           	sub b
 452+ 9127 32 0F 87     	ld (Columnas),a
 453+ 912A 18 04        	jr 4F
 454+ 912C 79           3 ld a,c
 455+ 912D 32 0F 87     	ld (Columnas),a
 456+ 9130 D9           4 exx
 457+ 9131 4F           	ld c,a
 458+ 9132 D9           	exx
 459+ 9133 C9            ret
 460+ 9134
 461+ 9134              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9134              ;
 463+ 9134              ; 7/1/23
 464+ 9134              ;
 465+ 9134              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9134              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9134              ;
 468+ 9134              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9134              ;	DESTRUYE: HL,B Y A.
 470+ 9134
 471+ 9134 3A EB 86     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9137 FE 02        	cp 2
 473+ 9139 38 18        	jr c,1F
 474+ 913B 28 16        	jr z,1F
 475+ 913D E6 01        	and 1
 476+ 913F 28 0D        	jr z,3F
 477+ 9141
 478+ 9141              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9141
 480+ 9141 CD 7D 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9144
 482+ 9144 7D           9 ld a,l
 483+ 9145 E6 1F        	and $1f
 484+ 9147 28 2A        	jr z,7F
 485+ 9149 2B           	dec hl
 486+ 914A 10 F8        	djnz 9B
 487+ 914C 18 25        	jr 7F
 488+ 914E
 489+ 914E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 914E
 491+ 914E 2A D9 86     3 ld hl,(Posicion_actual)
 492+ 9151 18 20        	jr 7F
 493+ 9153
 494+ 9153 28 14        1 jr z,2F
 495+ 9155
 496+ 9155              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9155
 498+ 9155 CD 7D 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9158 7D           4 ld a,l
 500+ 9159 E6 1F        	and $1f
 501+ 915B 28 03        	jr z,6F
 502+ 915D 2B           	dec hl
 503+ 915E 10 F8        	djnz 4B
 504+ 9160 06 0F        6 ld b,15
 505+ 9162 CD DE 91     5 call PreviousScan
 506+ 9165 10 FB        	djnz 5B
 507+ 9167 18 0A        	jr 7F
 508+ 9169
 509+ 9169              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9169
 511+ 9169 CD 7D 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 916C 06 0F        	ld b,15
 513+ 916E CD DE 91     8 call PreviousScan
 514+ 9171 10 FB        	djnz 8B
 515+ 9173
 516+ 9173 E5           7 push hl
 517+ 9174 DD E1        	pop ix
 518+ 9176
 519+ 9176 2A DB 86     	ld hl,(Puntero_objeto)
 520+ 9179 E5           	push hl
 521+ 917A FD E1        	pop iy
 522+ 917C
 523+ 917C C9           	ret
 524+ 917D
 525+ 917D              ; --------------------------------------------------------------------------------------------------------------------
 526+ 917D              ;
 527+ 917D              ;	2/1/23
 528+ 917D              ;
 529+ 917D              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 917D              ;
 531+ 917D              ;	Tras esta rutina tenemos:
 532+ 917D              ;
 533+ 917D              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 917D              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 917D              ;
 536+ 917D              ;	DESTRUYE!!!!! HL,B y A.
 537+ 917D
 538+ 917D 2A D9 86     Operandos ld hl,(Posicion_actual)
 539+ 9180 3A 0F 87     	ld a,(Columnas)
 540+ 9183 3D           	dec a
 541+ 9184 20 01        	jr nz,1F
 542+ 9186 3C           	inc a
 543+ 9187 47           1 ld b,a
 544+ 9188 C9           	ret
 545+ 9189
 546+ 9189              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9189              ;
 548+ 9189              ;	3/1/23
 549+ 9189              ;
 550+ 9189              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9189              ;
 552+ 9189              ;	Destruye: A,B,HL y DE.
 553+ 9189
 554+ 9189              Define_rutina_de_impresion
 555+ 9189
 556+ 9189 3A D8 86     	ld a,(Columns)
 557+ 918C 47           	ld b,a
 558+ 918D 3A 0F 87     	ld a,(Columnas)
 559+ 9190 B8           	cp b
 560+ 9191 20 0D        	jr nz,2f
 561+ 9193
 562+ 9193              ;	La entidad se imprime entera.
 563+ 9193
 564+ 9193 21 5F 92     	ld hl, Indice_entidades_completas
 565+ 9196 E6 01        	and 1
 566+ 9198 28 02        	jr z,1F
 567+ 919A
 568+ 919A 23           	inc hl
 569+ 919B 23           	inc hl
 570+ 919C
 571+ 919C CD 61 89     1 call Extrae_address
 572+ 919F C9           	ret		;	ret
 573+ 91A0
 574+ 91A0              ;	La entidad no se imprime entera en pantalla.
 575+ 91A0
 576+ 91A0 3A EB 86     2 ld a,(Cuad_objeto)
 577+ 91A3 E6 01        	and 1
 578+ 91A5 28 17        	jr z,3F
 579+ 91A7
 580+ 91A7              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 91A7
 582+ 91A7 21 63 92     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 91AA 3A D8 86     4 ld a,(Columns)
 584+ 91AD E6 01        	and 1
 585+ 91AF 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 91B1
 587+ 91B1 23           	inc hl
 588+ 91B2 23           	inc hl
 589+ 91B3
 590+ 91B3 3A 0F 87     	ld a,(Columnas)
 591+ 91B6 E6 01        	and 1
 592+ 91B8 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 91BA
 594+ 91BA 23           	inc hl
 595+ 91BB 23           	inc hl
 596+ 91BC
 597+ 91BC 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 91BE
 599+ 91BE 21 69 92     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 91C1 18 E7        	jr 4B
 601+ 91C3
 602+ 91C3              ; --------------------------------------------------------------------------------------------------------------------
 603+ 91C3              ;
 604+ 91C3              ;	Prepara_draw
 605+ 91C3              ;
 606+ 91C3              ;	Es una rutina de carga.
 607+ 91C3              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 91C3              ;
 609+ 91C3              ;	FUNCIONAMIENTO:
 610+ 91C3              ;
 611+ 91C3              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 91C3              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 91C3              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 91C3              ;
 615+ 91C3              ;	DESTRUYE:
 616+ 91C3              ;
 617+ 91C3              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 91C3
 619+ 91C3 21 D7 86     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 91C6 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 91C7 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 91C8 4E           	ld c,(hl)
 623+ 91C9 2A D9 86     	ld hl,(Posicion_actual)
 624+ 91CC 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 91CE C9           	ret
 626+ 91CF
 627+ 91CF              ;----------------------------------------------------------------------------------------------------------------
 628+ 91CF              ;
 629+ 91CF              ;	5/08/22
 630+ 91CF              ;
 631+ 91CF              ;   NextScan.
 632+ 91CF              ;
 633+ 91CF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 91CF              ;
 635+ 91CF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 91CF              ;
 637+ 91CF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 91CF              ;
 639+ 91CF              ;       DESTRUIDOS: AF y HL !!!
 640+ 91CF              ;
 641+ 91CF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 91CF              ;
 643+ 91CF
 644+ 91CF 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 91D0 7C               ld a,h
 646+ 91D1 E6 07            and 7
 647+ 91D3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 91D4
 649+ 91D4 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 91D5 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 91D7 6F               ld l,a
 652+ 91D8 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 91D9
 654+ 91D9 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 91DA D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 91DC 67               ld h,a
 657+ 91DD C9               ret
 658+ 91DE
 659+ 91DE              ;----------------------------------------------------------------------------------------------------------------
 660+ 91DE              ;
 661+ 91DE              ;	5/08/22
 662+ 91DE              ;
 663+ 91DE              ;   PreviousScan.
 664+ 91DE              ;
 665+ 91DE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 91DE              ;
 667+ 91DE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 91DE              ;
 669+ 91DE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 91DE              ;
 671+ 91DE              ;       DESTRUIDOS: AF y HL !!!
 672+ 91DE              ;
 673+ 91DE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 91DE              ;
 675+ 91DE
 676+ 91DE 7C           PreviousScan ld a,h
 677+ 91DF 25               dec h               ; Dec H.
 678+ 91E0 E6 07            and 7
 679+ 91E2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 91E3
 681+ 91E3 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 91E4 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 91E6 6F               ld l,a
 684+ 91E7 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 91E8
 686+ 91E8 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 91E9 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 91EB 67               ld h,a
 689+ 91EC C9               ret
 690+ 91ED
 691+ 91ED              ; -----------------------------------------------------------------------------------
 692+ 91ED              ;
 693+ 91ED              ;	28/2/23
 694+ 91ED              ;
 695+ 91ED              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 91ED              ;	Extrae fotos de Album_de_fotos.
 697+ 91ED
 698+ 91ED              Extrae_foto_entidades
 699+ 91ED
 700+ 91ED 3A 1C 87     	ld a,(Numero_de_malotes)
 701+ 91F0 A7           	and a
 702+ 91F1 C8           	ret z
 703+ 91F2 ED 73 21 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 91F6 31 00 70     	ld sp,Album_de_fotos
 705+ 91F9
 706+ 91F9 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 91FB E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 91FC D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 91FD
 710+ 91FD ED 73 23 87  	ld (Stack_2),sp
 711+ 9201 ED 7B 21 87  	ld sp,(Stack)
 712+ 9205
 713+ 9205              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9205
 715+ 9205 3E CD        	ld a,$cd
 716+ 9207 32 0F 92     	ld (Imprime),a
 717+ 920A EB           	ex de,hl
 718+ 920B 22 10 92     	ld (Imprime+1),hl
 719+ 920E EB           	ex de,hl
 720+ 920F
 721+ 920F              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 920F
 723+ 920F 00 00 00     Imprime db 0,0,0
 724+ 9212
 725+ 9212 3A 1C 87     	ld a,(Numero_de_malotes)
 726+ 9215 3D           	dec a
 727+ 9216 28 09        	jr z,1F
 728+ 9218 32 1C 87      	ld (Numero_de_malotes),a
 729+ 921B
 730+ 921B ED 7B 23 87   	ld sp,(Stack_2)
 731+ 921F 18 D8        	jr 2B
 732+ 9221
 733+ 9221 AF           1 xor a
 734+ 9222 32 23 87     	ld (Stack_2),a
 735+ 9225 C9           	ret
 736+ 9226
 737+ 9226              ; -----------------------------------------------------------------------------------
 738+ 9226              ;
 739+ 9226              ;	28/2/23
 740+ 9226              ;
 741+ 9226              ;	Pinta los disparos generados.
 742+ 9226
 743+ 9226              Extrae_foto_disparos
 744+ 9226
 745+ 9226 3A 29 87     	ld a,(Numero_de_disparotes)
 746+ 9229 A7           	and a
 747+ 922A C8           	ret z
 748+ 922B ED 73 21 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 922F 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 9232
 751+ 9232 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9234 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9235 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9236
 755+ 9236 ED 73 23 87  	ld (Stack_2),sp
 756+ 923A ED 7B 21 87  	ld sp,(Stack)
 757+ 923E
 758+ 923E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 923E
 760+ 923E 3E CD        	ld a,$cd
 761+ 9240 32 48 92     	ld (Imprime2),a
 762+ 9243 EB           	ex de,hl
 763+ 9244 22 49 92     	ld (Imprime2+1),hl
 764+ 9247 EB           	ex de,hl
 765+ 9248
 766+ 9248              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9248
 768+ 9248 00 00 00     Imprime2 db 0,0,0
 769+ 924B
 770+ 924B 3A 29 87     	ld a,(Numero_de_disparotes)
 771+ 924E 3D           	dec a
 772+ 924F 28 09        	jr z,1F
 773+ 9251 32 29 87      	ld (Numero_de_disparotes),a
 774+ 9254
 775+ 9254 ED 7B 23 87  	ld sp,(Stack_2)
 776+ 9258 18 D8        	jr 2B
 777+ 925A
 778+ 925A AF           1 xor a
 779+ 925B 32 23 87     	ld (Stack_2),a
 780+ 925E C9           	ret
 781+ 925F
# file closed: Draw_XOR.asm
1115  925F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 925F              ;   índices de Rutinas de impresión.
   2+ 925F
   3+ 925F 6F 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9261 9C 92            defw Pinta_Amadeus_3x2
   5+ 9263
   6+ 9263 F2 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9265 92 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9267 46 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9269
  10+ 9269 1C 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 926B 20 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 926D D4 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 926F
  14+ 926F
  15+ 926F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 926F              ;
  17+ 926F              ;   12/12/22
  18+ 926F              ;
  19+ 926F              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 926F              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 926F              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 926F              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 926F              ;
  24+ 926F              ;   Modifica: DE y HL.
  25+ 926F
  26+ 926F ED 73 21 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9273 FD F9        	ld sp,iy
  28+ 9275 06 10            ld b,16
  29+ 9277 D1           1 pop de
  30+ 9278 7B               ld a,e
  31+ 9279 AE               xor (hl)
  32+ 927A 77           	ld (hl),a
  33+ 927B 23           	inc hl
  34+ 927C 7A               ld a,d
  35+ 927D AE               xor (hl)
  36+ 927E 77           	ld (hl),a
  37+ 927F 2B           	dec hl
  38+ 9280 24           	inc h
  39+ 9281 7C               ld a,h
  40+ 9282 E6 07            and 7
  41+ 9284 20 0A            jr nz,2F
  42+ 9286 7D               ld a,l
  43+ 9287 C6 20            add a,$20
  44+ 9289 6F               ld l,a
  45+ 928A 38 04            jr c,2F
  46+ 928C 7C               ld a,h
  47+ 928D D6 08            sub 8
  48+ 928F 67               ld h,a
  49+ 9290 7C           2 ld a,h
  50+ 9291 FE 58            cp $58
  51+ 9293 28 02            jr z,3F
  52+ 9295 10 E0            djnz 1B
  53+ 9297 ED 7B 21 87  3 ld sp,(Stack)
  54+ 929B C9           	ret
  55+ 929C
  56+ 929C ED 73 21 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 92A0 FD F9        	ld sp,iy
  58+ 92A2 06 08            ld b,8
  59+ 92A4 D1           1 pop de
  60+ 92A5 7B               ld a,e
  61+ 92A6 AE               xor (hl)
  62+ 92A7 77           	ld (hl),a
  63+ 92A8 23           	inc hl
  64+ 92A9 7A               ld a,d
  65+ 92AA AE               xor (hl)
  66+ 92AB 77           	ld (hl),a
  67+ 92AC 23           	inc hl
  68+ 92AD D1           	pop de
  69+ 92AE 7B               ld a,e
  70+ 92AF AE               xor (hl)
  71+ 92B0 77           	ld (hl),a
  72+ 92B1 2B           	dec hl
  73+ 92B2 2B           	dec hl
  74+ 92B3 24           	inc h
  75+ 92B4 7C               ld a,h
  76+ 92B5 E6 07            and 7
  77+ 92B7 20 0A            jr nz,2F
  78+ 92B9 7D               ld a,l
  79+ 92BA C6 20            add a,$20
  80+ 92BC 6F               ld l,a
  81+ 92BD 38 04            jr c,2F
  82+ 92BF 7C               ld a,h
  83+ 92C0 D6 08            sub 8
  84+ 92C2 67               ld h,a
  85+ 92C3 7C           2 ld a,h
  86+ 92C4 FE 58            cp $58
  87+ 92C6 28 25            jr z,4F
  88+ 92C8 7A               ld a,d
  89+ 92C9 AE               xor (hl)
  90+ 92CA 77               ld (hl),a
  91+ 92CB D1           	pop de
  92+ 92CC 23           	inc hl
  93+ 92CD 7B               ld a,e
  94+ 92CE AE               xor (hl)
  95+ 92CF 77           	ld (hl),a
  96+ 92D0 23           	inc hl
  97+ 92D1 7A               ld a,d
  98+ 92D2 AE               xor (hl)
  99+ 92D3 77           	ld (hl),a
 100+ 92D4 2B           	dec hl
 101+ 92D5 2B           	dec hl
 102+ 92D6 24           	inc h
 103+ 92D7 7C               ld a,h
 104+ 92D8 E6 07            and 7
 105+ 92DA 20 0A            jr nz,3F
 106+ 92DC 7D               ld a,l
 107+ 92DD C6 20            add a,$20
 108+ 92DF 6F               ld l,a
 109+ 92E0 38 04            jr c,3F
 110+ 92E2 7C               ld a,h
 111+ 92E3 D6 08            sub 8
 112+ 92E5 67               ld h,a
 113+ 92E6 7C           3 ld a,h
 114+ 92E7 FE 58            cp $58
 115+ 92E9 28 02            jr z,4F
 116+ 92EB 10 B7            djnz 1B
 117+ 92ED ED 7B 21 87  4 ld sp,(Stack)
 118+ 92F1 C9           	ret
 119+ 92F2
 120+ 92F2              ; ---------------------------------------------------
 121+ 92F2
 122+ 92F2 ED 73 21 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 92F6 FD F9        	ld sp,iy
 124+ 92F8
 125+ 92F8              ; >>>
 126+ 92F8
 127+ 92F8 06 10            ld b,16
 128+ 92FA D1           1 pop de
 129+ 92FB 7A           	ld a,d
 130+ 92FC AE           	xor (hl)
 131+ 92FD 77           	ld (hl),a
 132+ 92FE 24           	inc h
 133+ 92FF 7C               ld a,h
 134+ 9300 E6 07            and 7
 135+ 9302 20 0C            jr nz,2F
 136+ 9304 7D               ld a,l
 137+ 9305 C6 20            add a,$20
 138+ 9307 6F               ld l,a
 139+ 9308 38 06            jr c,2F
 140+ 930A 7C               ld a,h
 141+ 930B D6 08            sub 8
 142+ 930D 67               ld h,a
 143+ 930E 18 00            jr 2F
 144+ 9310 7C           2 ld a,h
 145+ 9311 FE 58            cp $58
 146+ 9313 28 02            jr z,3F
 147+ 9315 10 E3            djnz 1B
 148+ 9317 ED 7B 21 87  3 ld sp,(Stack)
 149+ 931B C9           	ret
 150+ 931C
 151+ 931C ED 73 21 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9320 FD F9        	ld sp,iy
 153+ 9322
 154+ 9322              ; >>>
 155+ 9322
 156+ 9322 06 10            ld b,16
 157+ 9324 D1           1 pop de
 158+ 9325 7B           	ld a,e
 159+ 9326 AE           	xor (hl)
 160+ 9327 77           	ld (hl),a
 161+ 9328 24           	inc h
 162+ 9329 7C               ld a,h
 163+ 932A E6 07            and 7
 164+ 932C 20 0C            jr nz,2F
 165+ 932E 7D               ld a,l
 166+ 932F C6 20            add a,$20
 167+ 9331 6F               ld l,a
 168+ 9332 38 06            jr c,2F
 169+ 9334 7C               ld a,h
 170+ 9335 D6 08            sub 8
 171+ 9337 67               ld h,a
 172+ 9338 18 00            jr 2F
 173+ 933A 7C           2 ld a,h
 174+ 933B FE 58            cp $58
 175+ 933D 28 02            jr z,3F
 176+ 933F 10 E3            djnz 1B
 177+ 9341 ED 7B 21 87  3 ld sp,(Stack)
 178+ 9345 C9           	ret
 179+ 9346
 180+ 9346              ; ---------------------------------------------------
 181+ 9346
 182+ 9346 ED 73 21 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 934A FD F9        	ld sp,iy
 184+ 934C 06 08            ld b,8
 185+ 934E D1           1 pop de
 186+ 934F 7A           	ld a,d
 187+ 9350 AE           	xor (hl)
 188+ 9351 77           	ld (hl),a
 189+ 9352 23           	inc hl
 190+ 9353 D1           	pop de
 191+ 9354 7B           	ld a,e
 192+ 9355 AE           	xor (hl)
 193+ 9356 77           	ld (hl),a
 194+ 9357 2B           	dec hl
 195+ 9358 24            	inc h
 196+ 9359 7C               ld a,h
 197+ 935A E6 07            and 7
 198+ 935C 20 0A            jr nz,2F
 199+ 935E 7D               ld a,l
 200+ 935F C6 20            add a,$20
 201+ 9361 6F               ld l,a
 202+ 9362 38 04            jr c,2F
 203+ 9364 7C               ld a,h
 204+ 9365 D6 08            sub 8
 205+ 9367 67               ld h,a
 206+ 9368 7C           2 ld a,h
 207+ 9369 FE 58            cp $58
 208+ 936B 28 20            jr z,4F
 209+ 936D D1               pop de
 210+ 936E 7B           	ld a,e
 211+ 936F AE           	xor (hl)
 212+ 9370 77           	ld (hl),a
 213+ 9371 23           	inc hl
 214+ 9372 7A           	ld a,d
 215+ 9373 AE           	xor (hl)
 216+ 9374 77           	ld (hl),a
 217+ 9375 2B           	dec hl
 218+ 9376 24           	inc h
 219+ 9377 7C               ld a,h
 220+ 9378 E6 07            and 7
 221+ 937A 20 0A            jr nz,3F
 222+ 937C 7D               ld a,l
 223+ 937D C6 20            add a,$20
 224+ 937F 6F               ld l,a
 225+ 9380 38 04            jr c,3F
 226+ 9382 7C               ld a,h
 227+ 9383 D6 08            sub 8
 228+ 9385 67               ld h,a
 229+ 9386 7C           3 ld a,h
 230+ 9387 FE 58            cp $58
 231+ 9389 28 02            jr z,4F
 232+ 938B 10 C1            djnz 1B
 233+ 938D ED 7B 21 87  4 ld sp,(Stack)
 234+ 9391 C9           	ret
 235+ 9392
 236+ 9392 ED 73 21 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9396 FD F9        	ld sp,iy
 238+ 9398 06 08            ld b,8
 239+ 939A D1           1 pop de
 240+ 939B D1           	pop de
 241+ 939C 7B           	ld a,e
 242+ 939D AE           	xor (hl)
 243+ 939E 77           	ld (hl),a
 244+ 939F 24            	inc h
 245+ 93A0 7C               ld a,h
 246+ 93A1 E6 07            and 7
 247+ 93A3 20 0A            jr nz,2F
 248+ 93A5 7D               ld a,l
 249+ 93A6 C6 20            add a,$20
 250+ 93A8 6F               ld l,a
 251+ 93A9 38 04            jr c,2F
 252+ 93AB 7C               ld a,h
 253+ 93AC D6 08            sub 8
 254+ 93AE 67               ld h,a
 255+ 93AF 7C           2 ld a,h
 256+ 93B0 FE 58            cp $58
 257+ 93B2 28 1B            jr z,4F
 258+ 93B4 D1               pop de
 259+ 93B5 7A           	ld a,d
 260+ 93B6 AE           	xor (hl)
 261+ 93B7 77           	ld (hl),a
 262+ 93B8 24           	inc h
 263+ 93B9 7C               ld a,h
 264+ 93BA E6 07            and 7
 265+ 93BC 20 0A            jr nz,3F
 266+ 93BE 7D               ld a,l
 267+ 93BF C6 20            add a,$20
 268+ 93C1 6F               ld l,a
 269+ 93C2 38 04            jr c,3F
 270+ 93C4 7C               ld a,h
 271+ 93C5 D6 08            sub 8
 272+ 93C7 67               ld h,a
 273+ 93C8 7C           3 ld a,h
 274+ 93C9 FE 58            cp $58
 275+ 93CB 28 02            jr z,4F
 276+ 93CD 10 CB            djnz 1B
 277+ 93CF ED 7B 21 87  4 ld sp,(Stack)
 278+ 93D3 C9           	ret
 279+ 93D4
 280+ 93D4 ED 73 21 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 93D8 FD F9        	ld sp,iy
 282+ 93DA 06 08            ld b,8
 283+ 93DC D1           1 pop de
 284+ 93DD 7B           	ld a,e
 285+ 93DE AE           	xor (hl)
 286+ 93DF 77           	ld (hl),a
 287+ 93E0 23           	inc hl
 288+ 93E1 7A           	ld a,d
 289+ 93E2 AE           	xor (hl)
 290+ 93E3 77           	ld (hl),a
 291+ 93E4 2B           	dec hl
 292+ 93E5 24             	inc h
 293+ 93E6 7C               ld a,h
 294+ 93E7 E6 07            and 7
 295+ 93E9 20 0A            jr nz,2F
 296+ 93EB 7D               ld a,l
 297+ 93EC C6 20            add a,$20
 298+ 93EE 6F               ld l,a
 299+ 93EF 38 04            jr c,2F
 300+ 93F1 7C               ld a,h
 301+ 93F2 D6 08            sub 8
 302+ 93F4 67               ld h,a
 303+ 93F5 7C           2 ld a,h
 304+ 93F6 FE 58            cp $58
 305+ 93F8 28 21            jr z,4F
 306+ 93FA D1               pop de
 307+ 93FB 7A           	ld a,d
 308+ 93FC AE           	xor (hl)
 309+ 93FD 77           	ld (hl),a
 310+ 93FE 23           	inc hl
 311+ 93FF D1               pop de
 312+ 9400 7B           	ld a,e
 313+ 9401 AE           	xor (hl)
 314+ 9402 77           	ld (hl),a
 315+ 9403 2B           	dec hl
 316+ 9404 24           	inc h
 317+ 9405 7C               ld a,h
 318+ 9406 E6 07            and 7
 319+ 9408 20 0A            jr nz,3F
 320+ 940A 7D               ld a,l
 321+ 940B C6 20            add a,$20
 322+ 940D 6F               ld l,a
 323+ 940E 38 04            jr c,3F
 324+ 9410 7C               ld a,h
 325+ 9411 D6 08            sub 8
 326+ 9413 67               ld h,a
 327+ 9414 7C           3 ld a,h
 328+ 9415 FE 58            cp $58
 329+ 9417 28 02            jr z,4F
 330+ 9419 10 C1            djnz 1B
 331+ 941B ED 7B 21 87  4 ld sp,(Stack)
 332+ 941F C9           	ret
 333+ 9420
 334+ 9420 ED 73 21 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9424 FD F9        	ld sp,iy
 336+ 9426 06 08            ld b,8
 337+ 9428 D1           1 pop de
 338+ 9429 7B           	ld a,e
 339+ 942A AE           	xor (hl)
 340+ 942B 77           	ld (hl),a
 341+ 942C 24            	inc h
 342+ 942D 7C               ld a,h
 343+ 942E E6 07            and 7
 344+ 9430 20 0A            jr nz,2F
 345+ 9432 7D               ld a,l
 346+ 9433 C6 20            add a,$20
 347+ 9435 6F               ld l,a
 348+ 9436 38 04            jr c,2F
 349+ 9438 7C               ld a,h
 350+ 9439 D6 08            sub 8
 351+ 943B 67               ld h,a
 352+ 943C 7C           2 ld a,h
 353+ 943D FE 58            cp $58
 354+ 943F 28 1C            jr z,4F
 355+ 9441 D1               pop de
 356+ 9442 7A           	ld a,d
 357+ 9443 AE           	xor (hl)
 358+ 9444 77           	ld (hl),a
 359+ 9445 24           	inc h
 360+ 9446 7C               ld a,h
 361+ 9447 E6 07            and 7
 362+ 9449 20 0A            jr nz,3F
 363+ 944B 7D               ld a,l
 364+ 944C C6 20            add a,$20
 365+ 944E 6F               ld l,a
 366+ 944F 38 04            jr c,3F
 367+ 9451 7C               ld a,h
 368+ 9452 D6 08            sub 8
 369+ 9454 67               ld h,a
 370+ 9455 7C           3 ld a,h
 371+ 9456 FE 58            cp $58
 372+ 9458 28 03            jr z,4F
 373+ 945A D1               pop de
 374+ 945B 10 CB            djnz 1B
 375+ 945D ED 7B 21 87  4 ld sp,(Stack)
 376+ 9461 C9           	ret
 377+ 9462
 378+ 9462              ; ---------------------------------------------------
 379+ 9462              ;
 380+ 9462              ;   27/02/23
 381+ 9462              ;
 382+ 9462              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9462              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9462              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9462
 386+ 9462 ED 73 21 87  Pinta_Disparo ld (Stack),sp
 387+ 9466 FD F9            ld sp,iy
 388+ 9468 06 02            ld b,2
 389+ 946A D1           1 pop de
 390+ 946B 7B               ld a,e
 391+ 946C AE               xor (hl)
 392+ 946D 77               ld (hl),a
 393+ 946E 23               inc hl
 394+ 946F 7A               ld a,d
 395+ 9470 AE               xor (hl)
 396+ 9471 77               ld (hl),a
 397+ 9472 2B               dec hl
 398+ 9473
 399+ 9473 24               inc h
 400+ 9474 7C               ld a,h
 401+ 9475 E6 07            and 7
 402+ 9477 20 0A            jr nz,2F
 403+ 9479 7D               ld a,l
 404+ 947A C6 20            add a,$20
 405+ 947C 6F               ld l,a
 406+ 947D 38 04            jr c,2F
 407+ 947F 7C               ld a,h
 408+ 9480 D6 08            sub 8
 409+ 9482 67               ld h,a
 410+ 9483 7C           2 ld a,h
 411+ 9484 FE 58            cp $58
 412+ 9486 28 02            jr z,3F
 413+ 9488
 414+ 9488 10 E0            djnz 1B
 415+ 948A ED 7B 21 87  3 ld sp,(Stack)
 416+ 948E C9               ret
 417+ 948F
# file closed: Rutinas_de_impresion_sprites.asm
1116  948F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 948F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 948F              ;
   3+ 948F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 948F              ;
   5+ 948F              ; *****************************************************************************************************************************************************************************************
   6+ 948F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 948F
   8+ 948F 7C           calcula_tercio ld a,h
   9+ 9490 E6 18        	and $18
  10+ 9492 CB 2F        	sra a
  11+ 9494 CB 2F        	sra a
  12+ 9496 CB 2F        	sra a
  13+ 9498 C9           	ret
  14+ 9499
# file closed: calcula_tercio.asm
1117  9499              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9499              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9499              ;
   3+ 9499              ;
   4+ 9499              ;	CLS.
   5+ 9499              ;
   6+ 9499              ;	Limpia la pantalla y define sus atributos.
   7+ 9499              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9499              ;
   9+ 9499              ;	COLORES: 0 ..... NEGRO
  10+ 9499              ;    		 1 ..... AZUL
  11+ 9499              ; 			 2 ..... ROJO
  12+ 9499              ;			 3 ..... MAGENTA
  13+ 9499              ; 			 4 ..... VERDE
  14+ 9499              ; 			 5 ..... CIAN
  15+ 9499              ;			 6 ..... AMARILLO
  16+ 9499              ; 			 7 ..... BLANCO
  17+ 9499              ;
  18+ 9499              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9499              ;
  20+ 9499              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9499
  22+ 9499
  23+ 9499 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 949C 11 01 40     	LD DE,$4001
  25+ 949F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94A2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94A4 ED B0        	LDIR
  28+ 94A6 01 FF 02     	LD BC,767
  29+ 94A9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94AA ED B0        	LDIR
  31+ 94AC C9           	ret
  32+ 94AD
# file closed: Cls.asm
1118  94AD              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94AD              ; ******************************************************************************************************************************************************************************************
   2+ 94AD              ;
   3+ 94AD              ;   22/01/23
   4+ 94AD              ;
   5+ 94AD              ;	Mov_down
   6+ 94AD              ;
   7+ 94AD              ; 	Mueve el Sprite X px hacia abajo.
   8+ 94AD              ;
   9+ 94AD              ;
  10+ 94AD 21 05 87     Mov_down ld hl,Ctrl_0
  11+ 94B0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 94B2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 94B2              ; 																	; _ en el caso de que no lo haya.
  14+ 94B2 3A EF 86     	ld a,(Vel_down)
  15+ 94B5 47           	ld b,a
  16+ 94B6 2A D9 86         ld hl,(Posicion_actual)
  17+ 94B9 CD 8F 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 94BC E6 02        	and 2
  19+ 94BE 28 0F        	jr z,1F
  20+ 94C0
  21+ 94C0              ; Nos encontramos en el último tercio de pantalla.
  22+ 94C0              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 94C0
  24+ 94C0 7C           	ld a,h
  25+ 94C1 FE 57        	cp $57
  26+ 94C3 20 0A        	jr nz,1F
  27+ 94C5 7D           	ld a,l
  28+ 94C6 C6 20        	add $20
  29+ 94C8 30 05        	jr nc,1F
  30+ 94CA
  31+ 94CA              ; ------------------------------
  32+ 94CA CD A5 97     	call Reaparece_arriba
  33+ 94CD              ;	call Reinicio
  34+ 94CD              ; ------------------------------
  35+ 94CD
  36+ 94CD 18 08        	jr 3F
  37+ 94CF CD CF 91     1 call NextScan
  38+ 94D2 22 D9 86     	ld (Posicion_actual),hl
  39+ 94D5 10 E2            djnz 2B
  40+ 94D7 CD BB 97     3 call Genera_coordenadas
  41+ 94DA C9           	ret
  42+ 94DB
  43+ 94DB              ; ******************************************************************************************************************************************************************************************
  44+ 94DB              ;
  45+ 94DB              ;   22/01/23
  46+ 94DB              ;
  47+ 94DB              ;	Mov_up
  48+ 94DB              ;
  49+ 94DB              ; 	Mueve el Sprite hacia arriba.
  50+ 94DB              ;
  51+ 94DB              ;
  52+ 94DB 21 05 87     Mov_up ld hl,Ctrl_0
  53+ 94DE CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 94E0              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 94E0              ; 																		; _ en el caso de que no lo haya.
  56+ 94E0 3A EE 86     	ld a,(Vel_up)
  57+ 94E3 47           	ld b,a
  58+ 94E4 2A D9 86     	ld hl,(Posicion_actual)
  59+ 94E7 CD 8F 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 94EA A7           	and a
  61+ 94EB 20 10        	jr nz,1F
  62+ 94ED
  63+ 94ED              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 94ED              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 94ED
  66+ 94ED 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 94EE FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 94F0 20 0B            jr nz,1F
  69+ 94F2 7D               ld a,l
  70+ 94F3 D6 20            sub $20
  71+ 94F5 30 06            jr nc,1F
  72+ 94F7 25               dec h
  73+ 94F8
  74+ 94F8              ; -----------------------------
  75+ 94F8 CD 95 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 94FB              ;	call Reinicio
  77+ 94FB              ; -----------------------------
  78+ 94FB
  79+ 94FB 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 94FD CD DE 91     1 call PreviousScan
  81+ 9500 22 D9 86     	ld (Posicion_actual),hl
  82+ 9503 10 E2            djnz 3B
  83+ 9505 CD BB 97     2 call Genera_coordenadas
  84+ 9508 C9           	ret
  85+ 9509
  86+ 9509              ; ******************************************************************************************************************************************************************************************
  87+ 9509              ;
  88+ 9509              ;	19/10/22
  89+ 9509              ;
  90+ 9509              ;	Mov_right.
  91+ 9509              ;
  92+ 9509              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9509              ;
  94+ 9509
  95+ 9509 21 05 87     Mov_right ld hl,Ctrl_0
  96+ 950C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 950E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 950E              ; 																	; _ en el caso de que no lo haya.
  99+ 950E 3A 05 87     	ld a,(Ctrl_0)
 100+ 9511 CB 77        	bit 6,a
 101+ 9513 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9515
 103+ 9515 CD 43 97     	call Stop_Amadeus_right
 104+ 9518 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9519 18 4D        	jr 8F
 106+ 951B
 107+ 951B 3A DD 86     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 951E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9520 20 46        	jr nz,8F
 110+ 9522
 111+ 9522 3A DF 86     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9525 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9526 28 40        	jr z,8F
 114+ 9528
 115+ 9528              ; ---------- ---------- ----------
 116+ 9528              ;
 117+ 9528              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9528
 119+ 9528 3A ED 86     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 952B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 952D 28 11        	jr z,1F
 122+ 952F 38 06        	jr c,6F
 123+ 9531 FE 04        	cp 4
 124+ 9533 28 14        	jr z,7F
 125+ 9535 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9537
 127+ 9537              ; ---------- ---------- ----------
 128+ 9537              ;
 129+ 9537              ; Perfiles de velocidad
 130+ 9537              ;
 131+ 9537
 132+ 9537 3A DF 86     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 953A FE FE        	cp $fe
 134+ 953C 20 2A        	jr nz,8F
 135+ 953E 18 10        	jr 3F
 136+ 9540 3A DF 86     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9543 FE FD        	cp $fd
 138+ 9545 20 21        	jr nz,8F
 139+ 9547 18 07        	jr 3F
 140+ 9549 3A DF 86     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 954C FE FB        	cp $fb
 142+ 954E 20 18        	jr nz,8F
 143+ 9550
 144+ 9550              ; ---------- ---------- ----------
 145+ 9550
 146+ 9550              3
 147+ 9550 CD 83 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9553              ;	call Reinicio
 149+ 9553
 150+ 9553              ; ---------- ---------- ----------
 151+ 9553              ;
 152+ 9553              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9553
 154+ 9553 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9555 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9556 CD 6F 95     	call DESPLZ_DER
 157+ 9559 C1           	pop bc
 158+ 955A 10 F9        	djnz 5B
 159+ 955C 2A D9 86     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 955F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9560 22 D9 86     	ld (Posicion_actual),hl
 162+ 9563 CD BB 97     	call Genera_coordenadas
 163+ 9566 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9568
 165+ 9568              ; ---------- ---------- ----------
 166+ 9568
 167+ 9568 2A D9 86     8 ld hl,(Posicion_actual)
 168+ 956B CD 6F 95     	call DESPLZ_DER
 169+ 956E C9           2 ret
 170+ 956F
 171+ 956F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 956F              ;
 173+ 956F              ;	22/9/22
 174+ 956F              ;
 175+ 956F
 176+ 956F CD 7E 95     DESPLZ_DER call Desplaza_derecha
 177+ 9572 CD CA 95         call modifica_parametros_1er_DESPLZ_2
 178+ 9575 CD F3 95         call Ciclo_completo
 179+ 9578 21 05 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 957B CB FE        	set 7,(hl)
 181+ 957D C9           	ret
 182+ 957E
 183+ 957E              ; ******************************************************************************************************************************************************************************************
 184+ 957E              ;	15/02/23
 185+ 957E              ;
 186+ 957E
 187+ 957E 3A ED 86     Desplaza_derecha ld a,(Vel_right)
 188+ 9581 47           	ld b,a
 189+ 9582 2A E5 86     	ld hl,(Puntero_DESPLZ_der)
 190+ 9585 23           1 inc hl
 191+ 9586 23           	inc hl
 192+ 9587 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9589 22 E5 86     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 958C CD 61 89     	call Extrae_address
 195+ 958F 22 DB 86     	ld (Puntero_objeto),hl
 196+ 9592
 197+ 9592              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9592
 199+ 9592              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9592              ; Cuántos movimientos hemos hecho ??
 201+ 9592              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9592
 203+ 9592 2A E1 86     7 ld hl,(Indice_Sprite_der)
 204+ 9595 EB           	ex de,hl
 205+ 9596 A7           	and a
 206+ 9597 ED 52        	sbc hl,de
 207+ 9599 CB 3D        	srl l
 208+ 959B 3E 08        6 ld a,8
 209+ 959D 95           	sub l
 210+ 959E 30 1E        	jr nc,3F
 211+ 95A0
 212+ 95A0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 95A0              ; B="0".
 214+ 95A0
 215+ 95A0 04           4 inc b
 216+ 95A1 3C           	inc a
 217+ 95A2 20 FC        	jr nz,4B
 218+ 95A4 78           	ld a,b
 219+ 95A5 08           	ex af,af
 220+ 95A6 2A E1 86     	ld hl,(Indice_Sprite_der)
 221+ 95A9 23           5 inc hl
 222+ 95AA 23           	inc hl
 223+ 95AB 10 FC        	djnz 5B
 224+ 95AD 22 E5 86     	ld (Puntero_DESPLZ_der),hl
 225+ 95B0 CD 61 89     	call Extrae_address
 226+ 95B3 22 DB 86     	ld (Puntero_objeto),hl
 227+ 95B6
 228+ 95B6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 95B6              ; _(Posicion_actual).
 230+ 95B6
 231+ 95B6 21 D9 86     	ld hl,Posicion_actual
 232+ 95B9 34           	inc (hl)
 233+ 95BA 08               ex af,af
 234+ 95BB 6F           	ld l,a
 235+ 95BC 18 DD        	jr 6B
 236+ 95BE
 237+ 95BE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 95BE
 239+ 95BE 47           3 ld b,a
 240+ 95BF 2A E3 86     	ld hl,(Indice_Sprite_izq)
 241+ 95C2 23           2 inc hl
 242+ 95C3 23           	inc hl
 243+ 95C4 10 FC        	djnz 2B
 244+ 95C6 22 E7 86     	ld (Puntero_DESPLZ_izq),hl
 245+ 95C9 C9           8 ret
 246+ 95CA
 247+ 95CA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 95CA              ;
 249+ 95CA              ;	24/7/22
 250+ 95CA              ;
 251+ 95CA              ;	modifica_parametros_1er_DESPLZ_2
 252+ 95CA              ;
 253+ 95CA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 95CA              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 95CA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 95CA
 257+ 95CA 3A DF 86     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 95CD A7           	and a
 259+ 95CE 20 1F        	jr nz,1F
 260+ 95D0 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 95D2 32 DF 86         ld (CTRL_DESPLZ),a
 262+ 95D5
 263+ 95D5 21 D8 86     	ld hl,Columns
 264+ 95D8 34           	inc (hl)
 265+ 95D9 3A EB 86     	ld a,(Cuad_objeto)
 266+ 95DC E6 01        	and 1
 267+ 95DE 28 0F        	jr z,1F
 268+ 95E0 2A D9 86     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 95E3 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 95E4 22 D9 86     	ld (Posicion_actual),hl
 271+ 95E7 CD BB 97     	call Genera_coordenadas
 272+ 95EA CD 4F 97     	call Inc_CTRL_DESPLZ
 273+ 95ED 18 03        	jr 2F
 274+ 95EF CD 4F 97     1 call Inc_CTRL_DESPLZ
 275+ 95F2 C9           2 ret
 276+ 95F3
 277+ 95F3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 95F3              ;
 279+ 95F3              ;	24/7/22
 280+ 95F3              ;
 281+ 95F3              ;	Ciclo_completo.
 282+ 95F3              ;
 283+ 95F3              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 95F3              ;
 285+ 95F3              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 95F3              ; 	Decrementamos (Columns).
 287+ 95F3              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 95F3              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 95F3
 290+ 95F3
 291+ 95F3 3A DF 86     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 95F6 FE FF        	cp $ff
 293+ 95F8 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 95FA E6 F0        	and $f0
 295+ 95FC 20 28        	jr nz,3F
 296+ 95FE
 297+ 95FE              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 95FE
 299+ 95FE 3A DF 86     	ld a,(CTRL_DESPLZ)
 300+ 9601 47           	ld b,a
 301+ 9602 3E F8        	ld a,$f8
 302+ 9604 80           	add b
 303+ 9605 32 DF 86     	ld (CTRL_DESPLZ),a
 304+ 9608 18 1C        	jr 3F
 305+ 960A 21 D8 86     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 960D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 960E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 960F 32 DF 86     	ld (CTRL_DESPLZ),a
 309+ 9612 3A EB 86     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9615 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9617 20 0A        	jr nz,2F
 312+ 9619 2A D9 86     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 961C 23           	inc hl
 314+ 961D 22 D9 86     	ld (Posicion_actual),hl
 315+ 9620 CD BB 97     	call Genera_coordenadas
 316+ 9623
 317+ 9623              ; Inicia el puntero de Sprite.
 318+ 9623
 319+ 9623 CD 78 89     2 call Inicia_puntero_objeto_der
 320+ 9626 C9           3 ret
 321+ 9627
 322+ 9627              ; ******************************************************************************************************************************************************************************************
 323+ 9627              ;
 324+ 9627              ;	15/02/23
 325+ 9627              ;
 326+ 9627              ;	Mov_left.
 327+ 9627              ;
 328+ 9627              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9627              ;
 330+ 9627              Mov_left
 331+ 9627
 332+ 9627 21 05 87     	ld hl,Ctrl_0
 333+ 962A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 962C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 962C              ; 																	; _ en el caso de que no lo haya.
 336+ 962C 3A 05 87     	ld a,(Ctrl_0)
 337+ 962F CB 77        	bit 6,a
 338+ 9631 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9633
 340+ 9633 CD 49 97     	call Stop_Amadeus_left
 341+ 9636 C8           	ret z
 342+ 9637 20 4A        	jr nz,8F
 343+ 9639
 344+ 9639 3A DD 86     11 ld a,(Coordenada_X)
 345+ 963C A7           	and a
 346+ 963D 20 44        	jr nz,8F
 347+ 963F
 348+ 963F 3A DF 86     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9642 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9643 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9645
 352+ 9645              ; ---------- ---------- ----------
 353+ 9645
 354+ 9645 3A EC 86     	ld a,(Vel_left)
 355+ 9648 FE 02        	cp 2
 356+ 964A 28 0F        	jr z,1F
 357+ 964C 38 04        	jr c,6F
 358+ 964E FE 04        	cp 4
 359+ 9650 28 12        	jr z,7F
 360+ 9652
 361+ 9652              ; ---------- ---------- ----------
 362+ 9652
 363+ 9652 3A DF 86     6 ld a,(CTRL_DESPLZ)
 364+ 9655 FE F8        	cp $f8
 365+ 9657 20 2A        	jr nz,8F
 366+ 9659 18 10        	jr 4F
 367+ 965B 3A DF 86     1 ld a,(CTRL_DESPLZ)
 368+ 965E FE F9        	cp $f9
 369+ 9660 20 21        	jr nz,8F
 370+ 9662 18 07        	jr 4F
 371+ 9664 3A DF 86     7 ld a,(CTRL_DESPLZ)
 372+ 9667 FE FB        	cp $fb
 373+ 9669 20 18        	jr nz,8F
 374+ 966B
 375+ 966B              ; ---------- ---------- ----------
 376+ 966B
 377+ 966B              4
 378+ 966B CD 71 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 966E              ;	call Reinicio
 380+ 966E
 381+ 966E              ; ---------- ---------- ----------
 382+ 966E
 383+ 966E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9670 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9671
 386+ 9671              ;	ld hl,(Indice_Sprite_izq)
 387+ 9671              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9671
 389+ 9671 CD 8A 96     	call DESPLZ_IZQ
 390+ 9674 C1           	pop bc
 391+ 9675 10 F9        	djnz 5B
 392+ 9677 2A D9 86     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 967A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 967B 22 D9 86     	ld (Posicion_actual),hl
 395+ 967E CD BB 97     	call Genera_coordenadas
 396+ 9681 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9683
 398+ 9683              ; ---------- ---------- ----------
 399+ 9683
 400+ 9683              ; Movemos, no hay recolocación.
 401+ 9683
 402+ 9683 2A D9 86     8 ld hl,(Posicion_actual)
 403+ 9686 CD 8A 96     	call DESPLZ_IZQ
 404+ 9689 C9           2 ret
 405+ 968A
 406+ 968A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 968A              ;
 408+ 968A              ;	22/9/22
 409+ 968A
 410+ 968A              DESPLZ_IZQ
 411+ 968A
 412+ 968A CD 99 96     	call Desplaza_izquierda
 413+ 968D CD E5 96         call modifica_parametros_1er_DESPLZ
 414+ 9690 CD 0D 97     	call Ciclo_completo_2
 415+ 9693 21 05 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9696 CB BE        	res 7,(hl)
 417+ 9698 C9           	ret
 418+ 9699
 419+ 9699              Desplaza_izquierda
 420+ 9699
 421+ 9699 3A EC 86     	ld a,(Vel_left)
 422+ 969C 47           	ld b,a
 423+ 969D 2A E7 86     	ld hl,(Puntero_DESPLZ_izq)
 424+ 96A0 23           1 inc hl
 425+ 96A1 23           	inc hl
 426+ 96A2 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 96A4 22 E7 86     	ld (Puntero_DESPLZ_izq),hl
 428+ 96A7 CD 61 89     	call Extrae_address
 429+ 96AA 22 DB 86     	ld (Puntero_objeto),hl
 430+ 96AD
 431+ 96AD              ; Modifica (Puntero_DESPLZ_der).
 432+ 96AD
 433+ 96AD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 96AD              ; Cuántos movimientos hemos hecho ??
 435+ 96AD              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 96AD
 437+ 96AD 2A E3 86     7 ld hl,(Indice_Sprite_izq)
 438+ 96B0 EB           	ex de,hl
 439+ 96B1 A7           	and a
 440+ 96B2 ED 52        	sbc hl,de
 441+ 96B4 CB 3D        	srl l
 442+ 96B6 3E 08        6 ld a,8
 443+ 96B8 95           	sub l
 444+ 96B9 30 1E        	jr nc,3F
 445+ 96BB
 446+ 96BB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 96BB              ; B="0".
 448+ 96BB
 449+ 96BB 04           4 inc b
 450+ 96BC 3C           	inc a
 451+ 96BD 20 FC        	jr nz,4B
 452+ 96BF 78           	ld a,b
 453+ 96C0 08           	ex af,af
 454+ 96C1 2A E3 86     	ld hl,(Indice_Sprite_izq)
 455+ 96C4 23           5 inc hl
 456+ 96C5 23           	inc hl
 457+ 96C6 10 FC        	djnz 5B
 458+ 96C8 22 E7 86     	ld (Puntero_DESPLZ_izq),hl
 459+ 96CB CD 61 89     	call Extrae_address
 460+ 96CE 22 DB 86     	ld (Puntero_objeto),hl
 461+ 96D1
 462+ 96D1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 96D1              ; _(Posicion_actual).
 464+ 96D1
 465+ 96D1 21 D9 86     	ld hl,Posicion_actual
 466+ 96D4 35           	dec (hl)
 467+ 96D5 08           	ex af,af
 468+ 96D6 6F           	ld l,a
 469+ 96D7 18 DD        	jr 6B
 470+ 96D9
 471+ 96D9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 96D9
 473+ 96D9 47           3 ld b,a
 474+ 96DA 2A E1 86     	ld hl,(Indice_Sprite_der)
 475+ 96DD 23           2 inc hl
 476+ 96DE 23           	inc hl
 477+ 96DF 10 FC        	djnz 2B
 478+ 96E1 22 E5 86     	ld (Puntero_DESPLZ_der),hl
 479+ 96E4 C9           8 ret
 480+ 96E5
 481+ 96E5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 96E5              ;
 483+ 96E5              ;	modifica_parametros_1er_DESPLZ
 484+ 96E5              ;
 485+ 96E5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 96E5              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 96E5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 96E5
 489+ 96E5 3A DF 86     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 96E8 A7           	and a
 491+ 96E9 20 1E        	jr nz,1F
 492+ 96EB 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 96EC 32 DF 86         ld (CTRL_DESPLZ),a
 494+ 96EF 21 D8 86     	ld hl,Columns
 495+ 96F2 34           	inc (hl)
 496+ 96F3 3A EB 86     	ld a,(Cuad_objeto)
 497+ 96F6 E6 01        	and 1
 498+ 96F8 20 0F        	jr nz,1F
 499+ 96FA 2A D9 86     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 96FD 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 96FE 22 D9 86     	ld (Posicion_actual),hl
 502+ 9701 CD BB 97     	call Genera_coordenadas
 503+ 9704 CD 60 97     	call Dec_CTRL_DESPLZ
 504+ 9707 18 03        	jr 2F
 505+ 9709 CD 60 97     1 call Dec_CTRL_DESPLZ
 506+ 970C C9           2 ret
 507+ 970D
 508+ 970D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 970D
 510+ 970D 3A DF 86     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9710 FE F7        	cp $f7
 512+ 9712 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9714 30 2C        	jr nc,3F
 514+ 9716
 515+ 9716              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9716
 517+ 9716 06 00        	ld b,0
 518+ 9718 04           4 inc b
 519+ 9719 3C           	inc a
 520+ 971A FE F7        	cp $f7
 521+ 971C 20 FA        	jr nz,4B
 522+ 971E 3E FF        	ld a,$ff
 523+ 9720 90           	sub b
 524+ 9721 32 DF 86     	ld (CTRL_DESPLZ),a
 525+ 9724 18 1C        	jr 3F
 526+ 9726
 527+ 9726              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9726
 529+ 9726 21 D8 86     1 ld hl,Columns
 530+ 9729 35           	dec (hl)
 531+ 972A AF           	xor a
 532+ 972B 32 DF 86     	ld (CTRL_DESPLZ),a
 533+ 972E 3A EB 86     	ld a,(Cuad_objeto)
 534+ 9731 E6 01        	and 1
 535+ 9733 28 0A        	jr z,2F
 536+ 9735 2A D9 86     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9738 2B           	dec hl
 538+ 9739 22 D9 86     	ld (Posicion_actual),hl
 539+ 973C CD BB 97     	call Genera_coordenadas
 540+ 973F
 541+ 973F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 973F
 543+ 973F CD 8B 89     2 call Inicia_puntero_objeto_izq
 544+ 9742 C9           3 ret
 545+ 9743
 546+ 9743              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9743              ;
 548+ 9743              ;	19/10/22
 549+ 9743              ;
 550+ 9743              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9743              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9743
 553+ 9743 3A DD 86     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9746 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9748 C9           	ret
 556+ 9749
 557+ 9749              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9749              ;
 559+ 9749              ;	19/10/22
 560+ 9749              ;
 561+ 9749              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9749              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9749
 564+ 9749 3A DD 86     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 974C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 974E C9           	ret
 567+ 974F
 568+ 974F              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 974F              ;
 570+ 974F              ;	24/7/22
 571+ 974F              ;
 572+ 974F              ;	Inc_CTRL_DESPLZ
 573+ 974F              ;
 574+ 974F              ;
 575+ 974F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 974F
 577+ 974F 21 DF 86     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9752 3A ED 86     	ld a,(Vel_right)
 579+ 9755 A7           	and a
 580+ 9756 28 06        	jr z,1F
 581+ 9758 47           	ld b,a
 582+ 9759 34           3 inc (hl)
 583+ 975A 10 FD        	djnz 3B
 584+ 975C 18 01        	jr 2F
 585+ 975E 34           1 inc (hl)
 586+ 975F C9           2 ret
 587+ 9760
 588+ 9760              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9760              ;
 590+ 9760              ;	5/2/23
 591+ 9760              ;
 592+ 9760              ;	Dec_CTRL_DESPLZ
 593+ 9760              ;
 594+ 9760              ;
 595+ 9760              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9760
 597+ 9760 21 DF 86     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9763 3A EC 86     	ld a,(Vel_left)
 599+ 9766 A7           	and a
 600+ 9767 28 06        	jr z,1F
 601+ 9769 47           	ld b,a
 602+ 976A 35           3 dec (hl)
 603+ 976B 10 FD        	djnz 3B
 604+ 976D 18 01        	jr 2F
 605+ 976F 35           1 dec (hl)
 606+ 9770 C9           2 ret
 607+ 9771
 608+ 9771              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9771
 610+ 9771 2A D9 86     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9774 01 1F 00     	ld bc,31
 612+ 9777 A7           	and a
 613+ 9778 ED 4A        	adc hl,bc
 614+ 977A 22 D9 86     	ld (Posicion_actual),hl
 615+ 977D 21 05 87     	ld hl,Ctrl_0														; $xxx1
 616+ 9780 CB C6        	set 0,(hl)
 617+ 9782 C9           	ret
 618+ 9783
 619+ 9783              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9783
 621+ 9783 2A D9 86     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9786 01 1F 00     	ld bc,31
 623+ 9789 A7           	and a
 624+ 978A ED 42        	sbc hl,bc
 625+ 978C 22 D9 86     	ld (Posicion_actual),hl 											; $xx1x
 626+ 978F 21 05 87     	ld hl,Ctrl_0
 627+ 9792 CB CE        	set 1,(hl)
 628+ 9794 C9           	ret
 629+ 9795
 630+ 9795              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9795
 632+ 9795 24           Reaparece_abajo inc h
 633+ 9796 01 E0 17     	ld bc,$17e0
 634+ 9799 A7           	and a
 635+ 979A ED 4A        	adc hl,bc
 636+ 979C 22 D9 86     	ld (Posicion_actual),hl
 637+ 979F 21 05 87     	ld hl,Ctrl_0
 638+ 97A2 CB D6        	set 2,(hl)
 639+ 97A4 C9           	ret
 640+ 97A5
 641+ 97A5              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 97A5
 643+ 97A5 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 97A8 A7           	and a
 645+ 97A9 ED 42        	sbc hl,bc
 646+ 97AB 22 D9 86     	ld (Posicion_actual),hl
 647+ 97AE 21 05 87     	ld hl,Ctrl_0
 648+ 97B1 CB DE        	set 3,(hl)
 649+ 97B3 C9           	ret
 650+ 97B4
 651+ 97B4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 97B4
 653+ 97B4 2A E9 86     Reinicio ld hl,(Posicion_inicio)
 654+ 97B7 22 D9 86     	ld (Posicion_actual),hl
 655+ 97BA C9           	ret
# file closed: Direcciones.asm
1119  97BB              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 97BB              ; ------------------------------------------------------------------------
   2+ 97BB              ;
   3+ 97BB              ;	02/04/23
   4+ 97BB              ;
   5+ 97BB              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 97BB              ;	Fila superior "0", Columna izquierda "0".
   7+ 97BB              ;
   8+ 97BB              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 97BB              ;
  10+ 97BB              ;	Modifica: A,BC y DE.
  11+ 97BB
  12+ 97BB C5           Genera_coordenadas push bc
  13+ 97BC E5           	push hl
  14+ 97BD D5           	push de
  15+ 97BE
  16+ 97BE 2A D9 86     	ld hl,(Posicion_actual)
  17+ 97C1
  18+ 97C1 7D           	ld a,l
  19+ 97C2 E6 1F        	and $1f
  20+ 97C4 32 DD 86     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 97C7
  22+ 97C7 CD 8F 94     	call calcula_tercio
  23+ 97CA 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 97CB
  25+ 97CB 1E 00        	ld e,0
  26+ 97CD 7D           	ld a,l
  27+ 97CE E6 E0        	and $e0
  28+ 97D0 28 01        	jr z,1F
  29+ 97D2 04           	inc b
  30+ 97D3
  31+ 97D3 04           1 inc b
  32+ 97D4 05           	dec b
  33+ 97D5 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 97D7              ;														; _ , salimos.
  35+ 97D7 1C           3 inc e
  36+ 97D8 D6 20        	sub 32
  37+ 97DA 20 FB        	jr nz,3B
  38+ 97DC 10 F5        	djnz 1B
  39+ 97DE
  40+ 97DE 7B           2 ld a,e
  41+ 97DF 32 DE 86     	ld (Coordenada_y),a
  42+ 97E2
  43+ 97E2 D1           	pop de
  44+ 97E3 E1           	pop hl
  45+ 97E4 C1           	pop bc
  46+ 97E5
  47+ 97E5 C9           	ret
  48+ 97E6
  49+ 97E6              ; ------------------------------------------------------------------------
  50+ 97E6              ;	28/03/23
  51+ 97E6              ;
  52+ 97E6              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 97E6              ;	Fila superior "0", Columna izquierda "0".
  54+ 97E6              ;
  55+ 97E6              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 97E6              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 97E6              ;
  58+ 97E6              ;		DE="$120d"
  59+ 97E6              ;
  60+ 97E6              ;		D, (Coordenada_X), Columnas, $12
  61+ 97E6              ;		E, (Coordenada_y), Filas, $0d
  62+ 97E6              ;
  63+ 97E6              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 97E6
  65+ 97E6              ;	Modifica: A,BC y DE.
  66+ 97E6
  67+ 97E6
  68+ 97E6              Genera_coordenadas_disparo
  69+ 97E6
  70+ 97E6              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 97E6
  72+ 97E6 7D           	ld a,l
  73+ 97E7 E6 1F        	and $1f
  74+ 97E9 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 97EA CD 8F 94     	call calcula_tercio
  76+ 97ED 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 97EE 1E 00        	ld e,0
  78+ 97F0 7D           	ld a,l
  79+ 97F1 E6 E0        	and $e0
  80+ 97F3 28 01        	jr z,1F
  81+ 97F5 04           	inc b
  82+ 97F6 1C           1 inc e
  83+ 97F7 D6 20        	sub 32
  84+ 97F9 20 FB        	jr nz,1B
  85+ 97FB 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 97FD C9           	ret
  87+ 97FE
# file closed: Genera_coordenadas.asm
1120  97FE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 97FE
   2+ 97FE
   3+ 97FE              ;   11/8/22
   4+ 97FE              ;
   5+ 97FE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 97FE              ;
   7+ 97FE              ;   Mov_obj.asm
   8+ 97FE              ;
   9+ 97FE              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 97FE              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 97FE              ;
  12+ 97FE              ;   Codificación:
  13+ 97FE              ;
  14+ 97FE              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 97FE
  16+ 97FE              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 97FE
  18+ 97FE 02 40 00     Arriba db 2,%01000000,0
  19+ 9801 02 80 00     Abajo db 2,%10000000,0
  20+ 9804 02 20 00     Derecha db 2,%00100000,0
  21+ 9807 02 10 00     Izquierda db 2,%00010000,0
  22+ 980A 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 980E 60 42 60 40
  22+ 9812 63
  23+ 9813 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9817 22 A3 80 A0
  24+ 981B 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 981F 84 A0 83 A0
  25+ 9823 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9827 80 A3 22 A0
  26+ 982B 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 982F 40 60 42 60
  27+ 9833 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9837
  29+ 9837 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 983B 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 983F 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9843 84 00
  32+ 9845 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9849 84 00
  33+ 984B 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 984F 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9853 1F 1F 1F 1F
  35+ 9857 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 985B 1F 1F 1F 1F
  35+ 985F 1F
  36+ 9860 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9864 2F 2F 2F 2F
  36+ 9868 2F 2F
  37+ 986A 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 986E 2F 2F 00
  38+ 9871
  39+ 9871              ; ----- ----- ----- ----- -----
  40+ 9871
  41+ 9871 4F 98        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9873 4B 98        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9875 07 98        Indice_mov_Izquierda defw Izquierda
  44+ 9877 04 98        Indice_mov_Derecha defw Derecha
  45+ 9879 01 98        Indice_mov_Abajo defw Abajo
  46+ 987B FE 97        Indice_mov_Arriba defw Arriba
  47+ 987D 3B 98        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 987F 3F 98        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9881 37 98        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9883 45 98        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9885 0A 98        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9887              ; ----- ----- ----- ----- -----
  53+ 9887
  54+ 9887 3A 0C 87     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 988A A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 988B 28 02            jr z,1F
  57+ 988D 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 988F 3A 0D 87     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9892 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9894 32 0D 87         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9897              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9897 2A 0A 87         ld hl,(Puntero_mov)
  63+ 989A 7E               ld a,(hl)
  64+ 989B 32 0C 87         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 989E 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 989F 22 0A 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 98A2
  68+ 98A2 3A 0E 87     Decoder ld a,(Repetimos_db)
  69+ 98A5 A7               and a
  70+ 98A6 20 0C            jr nz,12F
  71+ 98A8 2A 0A 87         ld hl,(Puntero_mov)
  72+ 98AB 7E               ld a,(hl)
  73+ 98AC A7               and a
  74+ 98AD 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 98AF E6 0F            and $0f
  76+ 98B1 32 0E 87         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 98B4              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 98B4 2A 0A 87     12 ld hl,(Puntero_mov)
  79+ 98B7 CB 7E            bit 7,(hl)
  80+ 98B9 28 03            jr z,2F
  81+ 98BB CD AD 94         call Mov_down
  82+ 98BE 2A 0A 87     2 ld hl, (Puntero_mov)
  83+ 98C1 CB 76            bit 6,(hl)
  84+ 98C3 28 03            jr z,3F
  85+ 98C5 CD DB 94         call Mov_up
  86+ 98C8 2A 0A 87     3 ld hl, (Puntero_mov)
  87+ 98CB CB 6E            bit 5,(hl)
  88+ 98CD 28 03            jr z,4F
  89+ 98CF CD 09 95         call Mov_right
  90+ 98D2 2A 0A 87     4 ld hl, (Puntero_mov)
  91+ 98D5 CB 66            bit 4,(hl)
  92+ 98D7 28 03            jr z,5F
  93+ 98D9 CD 27 96         call Mov_left
  94+ 98DC
  95+ 98DC              ; ---------- --------- --------- ---------- ----------
  96+ 98DC
  97+ 98DC 3A 0E 87     5 ld a,(Repetimos_db)
  98+ 98DF A7               and a
  99+ 98E0 28 07            jr z,6F
 100+ 98E2 3D               dec a
 101+ 98E3 32 0E 87         ld (Repetimos_db),a
 102+ 98E6 28 01            jr z,6f
 103+ 98E8 C9           11 ret
 104+ 98E9 21 0C 87     6 ld hl,Contador_db_mov
 105+ 98EC 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 98ED 2A 0A 87         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 98F0 23               inc hl
 108+ 98F1 22 0A 87         ld (Puntero_mov),hl
 109+ 98F4 18 F2            jr 11B
 110+ 98F6 2A 08 87     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 98F9 3A 0D 87         ld a,(Incrementa_puntero)
 112+ 98FC 47               ld b,a
 113+ 98FD 23           8 inc hl
 114+ 98FE 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9900 5E               ld e,(hl)
 116+ 9901 23               inc hl
 117+ 9902 56               ld d,(hl)
 118+ 9903 EB               ex de,hl
 119+ 9904 22 0A 87         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9907 18 DF            jr 11B
 121+ 9909
 122+ 9909              ; ---------- --------- --------- ---------- ----------
 123+ 9909              ;
 124+ 9909              ;   11/8/22
 125+ 9909              ;
 126+ 9909              ;   Prepara_Puntero_mov
 127+ 9909
 128+ 9909 E5           Prepara_Puntero_mov push hl
 129+ 990A D5               push de
 130+ 990B 2A 08 87         ld hl,(Puntero_indice_mov)
 131+ 990E 5E               ld e,(hl)
 132+ 990F 23               inc hl
 133+ 9910 56               ld d,(hl)
 134+ 9911 EB               ex de,hl
 135+ 9912 22 0A 87         ld (Puntero_mov),hl
 136+ 9915 D1               pop de
 137+ 9916 E1               pop hl
 138+ 9917 C9               ret
 139+ 9918
 140+ 9918              ; ---------- --------- --------- ---------- ----------
 141+ 9918              ;
 142+ 9918              ;   11/8/22
 143+ 9918              ;
 144+ 9918              ;   Reinicia_el_movimiento
 145+ 9918
 146+ 9918 CD 09 99     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 991B AF               xor a
 148+ 991C 32 0C 87         ld (Contador_db_mov),a
 149+ 991F 32 0D 87         ld (Incrementa_puntero),a
 150+ 9922 C3 87 98         jp Movimiento
 151+ 9925 C9               ret
 152+ 9926              ; ---------- --------- --------- ---------- ----------
 153+ 9926
 154+ 9926
 155+ 9926
 156+ 9926
 157+ 9926
 158+ 9926
 159+ 9926
 160+ 9926
 161+ 9926
 162+ 9926
 163+ 9926
 164+ 9926
 165+ 9926
 166+ 9926
 167+ 9926
 168+ 9926
 169+ 9926
 170+ 9926
# file closed: Patrones_de_mov.asm
1121  9926              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9926              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9926              ;
   3+ 9926              ;	3/1/23
   4+ 9926              ;
   5+ 9926              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9926
   7+ 9926              ;	ADC HL,SP	LD (addr),SP
   8+ 9926              ;	ADD HL,SP	LD SP,(addr)
   9+ 9926              ;	ADD IX,SP	LD SP,nn
  10+ 9926              ; 	ADD IY,SP	LD SP,HL
  11+ 9926              ;				LD SP,IX
  12+ 9926              ;	DEC SP		LD SP,IY
  13+ 9926
  14+ 9926              ;	EX (SP),HL
  15+ 9926              ;	EX (SP),IX
  16+ 9926              ;	EX (SP),IY
  17+ 9926
  18+ 9926              ;	INC SP
  19+ 9926
  20+ 9926
  21+ 9926                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 21 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 14 87         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 27 87         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 25 87     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 27 87         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 25 87     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 21 87  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1122  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1123  7FE6
1124  7FE6              	SAVESNA "Pruebas.sna", START
1125  7FE6
1126  7FE6
1127  7FE6
# file closed: Banco_de_pruebas.asm
