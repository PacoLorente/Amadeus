# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 55 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC 5E 48        	defw $485e                                      ; (Posicion_inicio).
 203+ 84FE 02           	db 2											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 0E 97 00 00  	defw Indice_mov_Izquierda_y_derecha,0			; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 14 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 12 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 22 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 167  85D7              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 168  85D7
 169  85D7              ; Gestión de ENTIDADES.
 170  85D7
 171  85D7 00 00        Puntero_store_entidades defw 0
 172  85D9 00 00        Puntero_restore_entidades defw 0
 173  85DB 00 00        Indice_restore defw 0
 174  85DD 03           Numero_de_entidades db 3								; Nº de entidades en pantalla, (contando con Amadeus).
 175  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 176  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 177  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 178  85DF              ;														; _ (Numero_de_malotes)="0".
 179  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 180  85E1              ;														; _variable para almacenar lo posición del puntero_
 181  85E1              ; 														; _de pila, SP.
 182  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 183  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 184  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 185  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 186  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 187  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 189  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 190  85E7
 191  85E7              ;---------------------------------------------------------------------------------------------------------------
 192  85E7
 193  85E7              ; Gestión de Disparos.
 194  85E7
 195  85E7 00           Numero_de_disparotes db 0
 196  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 197  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 198  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 199  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 200  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 201  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 202  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 203  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 204  85EF              ;														; _produzca colisión.
 205  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 206  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 207  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 208  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 209  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 210  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 211  85F7
 212  85F7              ;---------------------------------------------------------------------------------------------------------------
 213  85F7
 214  85F7              ; Relojes y temporizaciones.
 215  85F7
 216  85F7 01           Habilita_disparo_Amadeus db 1
 217  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 218  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 219  85FA
 220  85FA 01           Habilita_disparo_entidad db 1
 221  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 222  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 223  85FD
 224  85FD              ;---------------------------------------------------------------------------------------------------------------
 225  85FD
 226  85FD              ; Gestión de FRAMES.
 227  85FD
 228  85FD 00           Switch db 0
 229  85FE
 230  85FE              ; Variables de Raster y localización en pantalla.
 231  85FE
 232  85FE 00 FF        Temp_Raster defw $ff00
 233  8600
 234  8600              ; Rutina principal *************************************************************************************************************************************************************************
 235  8600              ;
 236  8600              ;	14/11/22
 237  8600
 238  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 239  8603
 240  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 241  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 242  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 243  8609 F3           	DI
 244  860A
 245  860A 3E 07        	ld a,%00000111
 246  860C CD 36 93     	call Cls
 247  860F
 248  860F              ;	call Pinta_FILAS
 249  860F
 250  860F CD E6 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 251  8612
 252  8612 21 DD 85     	ld hl,Numero_de_entidades
 253  8615 46           	ld b,(hl)
 254  8616 04           	inc b
 255  8617 05           	dec b
 256  8618 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 257  861A
 258  861A CD C2 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 259  861D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 260  861D
 261  861D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 262  861D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 263  861D              ;	Pintamos el resto de entidades:
 264  861D
 265  861D              ;	INICIA ENTIDADES !!!!!
 266  861D
 267  861D C5           1 push bc  												; Guardo el contador de entidades.
 268  861E CD 1C 88      	call Inicia_Puntero_objeto
 269  8621 CD 86 8D     	call Draw
 270  8624 CD A0 7F     	call Guarda_foto_registros
 271  8627 CD 64 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 272  862A C1           	pop bc
 273  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 274  862D
 275  862D              ; 	INICIA AMADEUS !!!!!
 276  862D
 277  862D CD BD 88     3 call Restore_Amadeus
 278  8630 CD 1C 88     	call Inicia_Puntero_objeto
 279  8633 CD 86 8D     	call Draw
 280  8636 CD A0 7F     	call Guarda_foto_registros
 281  8639
 282  8639 11 74 84     	ld de,Amadeus_db
 283  863C CD CF 88     	call Store_Amadeus
 284  863F
 285  863F              ; 	INICIA DISPAROS !!!!!
 286  863F
 287  863F CD D8 87     	call Inicia_Puntero_Disparo_Entidades
 288  8642 CD DF 87     	call Inicia_Puntero_Disparo_Amadeus
 289  8645
 290  8645              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 291  8645
 292  8645 CD C2 87     	call Inicia_punteros_de_entidades
 293  8648 CD AB 88     	call Restore_Primera_entidad
 294  864B
 295  864B 3A DD 85     	ld a,(Numero_de_entidades)
 296  864E 3C           	inc a
 297  864F 32 DE 85     	ld (Numero_de_malotes),a
 298  8652
 299  8652 FB           2 ei
 300  8653 18 FD        	jr 2B
 301  8655
 302  8655              ; -----------------------------------------------------------------------------------
 303  8655
 304  8655              Frame
 305  8655
 306  8655              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 307  8655              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 308  8655
 309  8655              ; PINTAMOS.
 310  8655
 311  8655 3E 02            ld a,2
 312  8657 D3 FE            out ($fe),a
 313  8659 CD 8A 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 314  865C CD C3 90     	call Extrae_foto_disparos
 315  865F 3E 01            ld a,1
 316  8661 D3 FE            out ($fe),a
 317  8663
 318  8663              ; ----------------------------------------------------------------------
 319  8663
 320  8663              ; RELOJES.
 321  8663
 322  8663 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 323  8666 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 324  8669 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 325  866C
 326  866C 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 327  866F 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 328  8672 CD D5 7F     	call Habilita_disparos
 329  8675
 330  8675              ; COLISIONES.
 331  8675
 332  8675 CD 28 8D     	call Selector_de_impactos
 333  8678
 334  8678              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 335  8678              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 336  8678              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 337  8678
 338  8678 AF           	xor a
 339  8679 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 340  867C
 341  867C CD C2 87     	call Inicia_punteros_de_entidades
 342  867F CD AB 88     	call Restore_Primera_entidad
 343  8682
 344  8682 3A 9B 85     	ld a,(Filas)
 345  8685 A7           	and a
 346  8686 20 03        	jr nz,10F 											; Si la 1ª entidad está vacía, saltamos a la siguiente.
 347  8688
 348  8688 CD 64 88     	call Store_Restore_entidades
 349  868B
 350  868B              ; ---------------------------------------------------------------------------------------
 351  868B
 352  868B CD A8 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 353  868E 21 00 70     	ld hl,Album_de_fotos
 354  8691 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 355  8694              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 356  8694 3A DD 85         ld a,(Numero_de_entidades)
 357  8697 47               ld b,a
 358  8698 A7           	and a
 359  8699 28 5C        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 360  869B
 361  869B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 362  869B
 363  869B              ; Código que ejecutamos con cada entidad:
 364  869B
 365  869B              ; Impacto ???
 366  869B
 367  869B 3A B4 85     2 ld a,(Impacto)
 368  869E A7           	and a
 369  869F 28 14        	jr z,8F
 370  86A1
 371  86A1              ; Hay Impacto en esta entidad.
 372  86A1
 373  86A1 CD 79 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 374  86A4 CD D8 88     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 375  86A7
 376  86A7 2A D7 85     	ld hl,(Puntero_store_entidades)
 377  86AA 54           	ld d,h
 378  86AB 5D           	ld e,l
 379  86AC CD CF 88     	call Store_Amadeus									; Limpiamos `su base de datos´.
 380  86AF
 381  86AF 21 DD 85     	ld hl,Numero_de_entidades							; Una alimaña menos.
 382  86B2 35           	dec (hl)
 383  86B3
 384  86B3 18 6D        	jr 9F
 385  86B5
 386  86B5              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 387  86B5              ; _con las coordenadas de la entidad almacenada en DRAW.
 388  86B5
 389  86B5 3A D6 85     8 ld a,(Ctrl_1)
 390  86B8 CB 57        	bit 2,a
 391  86BA 28 1B        	jr z,7F
 392  86BC 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 393  86BF EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 394  86C0              ;														; E contiene la coordenada_X del disparo.
 395  86C0 2A A1 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 396  86C3              ;														; H Coordenado_y de la entidad.
 397  86C3 A7           	and a
 398  86C4 ED 52        	sbc hl,de
 399  86C6 CD 5F 8D     	call Determina_resultado_comparativa
 400  86C9 04           	inc b
 401  86CA 05           	dec b
 402  86CB 28 0A        	jr z,7F
 403  86CD
 404  86CD              ; ----- ----- -----
 405  86CD
 406  86CD 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 407  86CF 32 B4 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 408  86D2 21 D6 85     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 409  86D5 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 410  86D7
 411  86D7 C5           7 push bc
 412  86D8
 413  86D8 CD 2A 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 414  86DB
 415  86DB 3A C9 85     	ld a,(Ctrl_0)
 416  86DE CB 67        	bit 4,a
 417  86E0 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 418  86E2
 419  86E2              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 420  86E2              ; [[[
 421  86E2 CD 31 89     	call Detecta_disparo_entidad
 422  86E5              ; ]]]
 423  86E5 CD 89 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 424  86E8
 425  86E8 21 C9 85     	ld hl,Ctrl_0
 426  86EB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 427  86ED AF           	xor a
 428  86EE 32 CA 85     	ld (Obj_dibujado),a
 429  86F1
 430  86F1 CD 64 88     6 call Store_Restore_entidades
 431  86F4 C1           	pop bc
 432  86F5 10 A4        	djnz 2B
 433  86F7
 434  86F7              ; Tras la gestión de las entidades, ... AMADEUS.
 435  86F7
 436  86F7 CD BD 88     4 call Restore_Amadeus
 437  86FA
 438  86FA 3A B4 85     	ld a,(Impacto)
 439  86FD A7           	and a
 440  86FE 20 FE        	jr nz,$
 441  8700
 442  8700              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 443  8700
 444  8700 CD 5A 87     	call Mov_Amadeus
 445  8703
 446  8703 3A C9 85     	ld a,(Ctrl_0)
 447  8706 CB 67        	bit 4,a
 448  8708 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 449  870A
 450  870A CD 89 87     	call Guarda_foto_entidad_a_pintar
 451  870D
 452  870D 21 C9 85     3 ld hl,Ctrl_0
 453  8710 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 454  8712 AF           	xor a
 455  8713 32 CA 85     	ld (Obj_dibujado),a
 456  8716
 457  8716 11 74 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 458  8719 CD CF 88     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 459  871C
 460  871C CD C6 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 461  871F
 462  871F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 463  871F
 464  871F CD FE 87     	call Calcula_numero_de_disparotes
 465  8722 CD E6 87     9 call Calcula_numero_de_malotes
 466  8725
 467  8725 3E 04        	ld a,4
 468  8727 D3 FE        	out ($fe),a
 469  8729
 470  8729 C9           	ret
 471  872A
 472  872A              ; --------------------------------------------------------------------------------------------------------------
 473  872A              ;
 474  872A              ;	27/03/23
 475  872A
 476  872A              Mov_obj
 477  872A
 478  872A              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 479  872A
 480  872A AF           	xor a
 481  872B 32 CA 85     	ld (Obj_dibujado),a
 482  872E 32 C9 85     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 483  8731              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 484  8731              ; 														; _de la entidad.
 485  8731 CD 93 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 486  8734              ;														; Obj_dibujado="0".
 487  8734              ; Movemos Entidades malignas.
 488  8734
 489  8734 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 490  8737 24           	inc h                                               ; Salimos de la rutina.
 491  8738 25           	dec h
 492  8739 C8           	ret z
 493  873A
 494  873A CD 24 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 495  873D
 496  873D 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 497  8740 CB 67        	bit 4,a
 498  8742 C8           	ret z
 499  8743
 500  8743              ; Ha habido desplazamiento de la entidad maligna.
 501  8743              ; Ha llegado a zona de AMADEUS ???
 502  8743
 503  8743 3A A2 85     	ld a,(Coordenada_y)
 504  8746 FE 14        	cp $14
 505  8748 D4 F7 8A     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 506  874B              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 507  874B              ; ---------
 508  874B
 509  874B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 510  874D 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 511  8750 CD 93 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 512  8753 CD AA 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 513  8756 CD 79 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 514  8759 C9           	ret													; _de la misma.
 515  875A
 516  875A              ; --------------------------------------------------------------------------------------------------------------
 517  875A              ;
 518  875A              ;	29/1/23
 519  875A
 520  875A              Mov_Amadeus
 521  875A
 522  875A AF           	xor a
 523  875B 32 CA 85     	ld (Obj_dibujado),a
 524  875E CD 93 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 525  8761              ;														; Obj_dibujado="0".
 526  8761              ; Movemos Amadeus.
 527  8761
 528  8761 CD FA 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 529  8764 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 530  8767 CB 67        	bit 4,a
 531  8769 C8           	ret z
 532  876A
 533  876A              ; ---------
 534  876A
 535  876A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 536  876C 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 537  876F CD 93 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 538  8772 CD AA 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 539  8775 CD 79 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 540  8778 C9           	ret													; _de la nave.
 541  8779
 542  8779              ; --------------------------------------------------------------------------------------------------------------
 543  8779              ;
 544  8779              ;	31/01/23
 545  8779              ;
 546  8779              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 547  8779
 548  8779              Guarda_foto_entidad_a_borrar
 549  8779
 550  8779 CD 60 90     	call Prepara_draw
 551  877C CD 9A 8F     	call calcula_CColumnass
 552  877F CD D1 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 553  8782 CD 26 90     	call Define_rutina_de_impresion
 554  8785 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 555  8788 C9           	ret
 556  8789
 557  8789              ; --------------------------------------------------------------------------------------------------------------
 558  8789              ;
 559  8789              ;	31/01/23
 560  8789              ;
 561  8789              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 562  8789              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 563  8789
 564  8789              Guarda_foto_entidad_a_pintar
 565  8789
 566  8789 CD B6 87     	call Repone_pintar
 567  878C CD 86 8D     	call Draw
 568  878F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 569  8792 C9           	ret
 570  8793
 571  8793              ; --------------------------------------------------------------------------------------------------------------
 572  8793              ;
 573  8793              ;
 574  8793
 575  8793 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 576  8796 3A CA 85     	ld a,(Obj_dibujado)
 577  8799 A7           	and a
 578  879A 28 05        	jr z,1F
 579  879C 11 BF 85     	ld de,Variables_de_pintado
 580  879F 18 03        	jr 2F
 581  87A1 11 B5 85     1 ld de,Variables_de_borrado
 582  87A4 01 08 00     2 ld bc,8
 583  87A7 ED B0        	ldir
 584  87A9 C9           	ret
 585  87AA
 586  87AA              ; --------------------------------------------------------------------------------------------------------------
 587  87AA
 588  87AA 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 589  87AD 11 9B 85     	ld de,Filas
 590  87B0 01 08 00     	ld bc,8
 591  87B3 ED B0        	ldir
 592  87B5 C9           	ret
 593  87B6
 594  87B6 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 595  87B9 11 9B 85     	ld de,Filas
 596  87BC 01 08 00     	ld bc,8
 597  87BF ED B0        	ldir
 598  87C1 C9           	ret
 599  87C2
 600  87C2              ; *************************************************************************************************************************************************************
 601  87C2              ;
 602  87C2              ; 8/1/23
 603  87C2              ;
 604  87C2              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 605  87C2              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 606  87C2              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 607  87C2
 608  87C2              ; Destruye HL y DE !!!!!
 609  87C2
 610  87C2              Inicia_punteros_de_entidades
 611  87C2
 612  87C2 21 68 84     	ld hl,Indice_de_entidades
 613  87C5 CD 16 88         call Extrae_address
 614  87C8 22 D7 85         ld (Puntero_store_entidades),hl
 615  87CB 21 6A 84     	ld hl,Indice_de_entidades+2
 616  87CE 22 DB 85     	ld (Indice_restore),hl
 617  87D1 CD 16 88     	call Extrae_address
 618  87D4 22 D9 85     	ld (Puntero_restore_entidades),hl
 619  87D7 C9               ret
 620  87D8
 621  87D8              ; *************************************************************************************************************************************************************
 622  87D8              ;
 623  87D8              ; 8/1/23
 624  87D8              ;
 625  87D8              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 626  87D8
 627  87D8 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 628  87DB 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 629  87DE C9           	ret
 630  87DF 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 631  87E2 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 632  87E5 C9           	ret
 633  87E6
 634  87E6              ; -------------------------------------------------------------------------------------------------------------
 635  87E6              ;
 636  87E6              ; 28/2/23
 637  87E6              ;
 638  87E6
 639  87E6              Calcula_numero_de_malotes
 640  87E6
 641  87E6 21 00 70     	ld hl,Album_de_fotos
 642  87E9 EB           	ex de,hl
 643  87EA 2A E3 85     	ld hl,(Stack_snapshot)
 644  87ED
 645  87ED 06 00        	ld b,0
 646  87EF 7D           	ld a,l
 647  87F0 93           	sub e
 648  87F1 28 07        	jr z,1F
 649  87F3
 650  87F3              ; Nº de malotes no es "0".
 651  87F3
 652  87F3 D6 06        2 sub 6
 653  87F5 04           	inc b
 654  87F6 A7           	and a
 655  87F7 20 FA        	jr nz,2B
 656  87F9 78           	ld a,b
 657  87FA
 658  87FA 32 DE 85     1 ld (Numero_de_malotes),a
 659  87FD C9           	ret
 660  87FE
 661  87FE              ; -------------------------------------------------------------------------------------------------------------
 662  87FE              ;
 663  87FE              ; 28/2/23
 664  87FE              ;
 665  87FE
 666  87FE              Calcula_numero_de_disparotes
 667  87FE
 668  87FE 21 60 70     	ld hl,Album_de_fotos_disparos
 669  8801 EB           	ex de,hl
 670  8802 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 671  8805
 672  8805 06 00        	ld b,0
 673  8807 7D           	ld a,l
 674  8808 93           	sub e
 675  8809 28 07        	jr z,1F
 676  880B
 677  880B              ; Nº de malotes no es "0".
 678  880B
 679  880B D6 06        2 sub 6
 680  880D 04           	inc b
 681  880E A7           	and a
 682  880F 20 FA        	jr nz,2B
 683  8811 78           	ld a,b
 684  8812
 685  8812 32 E7 85     1 ld (Numero_de_disparotes),a
 686  8815 C9           	ret
 687  8816              ; *************************************************************************************************************************************************************
 688  8816              ;
 689  8816              ; 20/10/22
 690  8816              ;
 691  8816              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 692  8816              ;
 693  8816              ; Destruye el puntero y DE !!!!!
 694  8816
 695  8816 5E           Extrae_address ld e,(hl)
 696  8817 23           	inc hl
 697  8818 56           	ld d,(hl)
 698  8819 2B           	dec hl
 699  881A EB           	ex de,hl
 700  881B C9           	ret
 701  881C
 702  881C              ; *************************************************************************************************************************************************************
 703  881C              ;
 704  881C              ;	7/2/23
 705  881C              ;
 706  881C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 707  881C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 708  881C              ;
 709  881C              ;   Destruye HL y BC !!!!!,
 710  881C              ;
 711  881C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 712  881C              ;					"0" ..... Izquierda.
 713  881C
 714  881C              Inicia_Puntero_objeto
 715  881C
 716  881C 3A AF 85     	ld a,(Cuad_objeto)
 717  881F E6 01        	and 1
 718  8821 F5           	push af
 719  8822 CC 40 88     	call z,Inicia_puntero_objeto_izq
 720  8825 F1           	pop af
 721  8826 28 2B        	jr z,1F
 722  8828 CD 2D 88     	call Inicia_puntero_objeto_der
 723  882B 18 26        	jr 1F
 724  882D
 725  882D              ; Arrancamos desde la parte izquierda de la pantalla.
 726  882D              ; Iniciamos (Indice_Sprite_der).
 727  882D
 728  882D 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 729  8830 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 730  8833 CD 16 88     	call Extrae_address
 731  8836 22 9F 85     	ld (Puntero_objeto),hl
 732  8839
 733  8839 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 734  883C 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 735  883F C9           	ret
 736  8840
 737  8840              ; Arrancamos desde la parte derecha de la pantalla.
 738  8840              ; Iniciamos (Indice_Sprite_izq).
 739  8840
 740  8840 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 741  8843 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 742  8846 CD 16 88     	call Extrae_address
 743  8849 22 9F 85     	ld (Puntero_objeto),hl
 744  884C
 745  884C 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 746  884F 22 A9 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 747  8852 C9           	ret
 748  8853
 749  8853              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 750  8853
 751  8853 21 38 83     1 ld hl,Amadeus
 752  8856 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 753  885A B7 ED 42     	sub hl,bc
 754  885D C0           	ret nz
 755  885E 21 C9 85     	ld hl,Ctrl_0
 756  8861 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 757  8863 C9           	ret 												; _de nuestra nave en los extremos.
 758  8864
 759  8864              ; *************************************************************************************************************************************************************
 760  8864              ;
 761  8864              ;	8/1/23
 762  8864              ;
 763  8864              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 764  8864              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 765  8864
 766  8864              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 767  8864              ;	_de la 2ª y 3ª entidad respectivamente.
 768  8864
 769  8864              Store_Restore_entidades
 770  8864
 771  8864 E5           	push hl
 772  8865 D5           	push de
 773  8866 C5            	push bc
 774  8867
 775  8867              ;	STORE !!!!!
 776  8867              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 777  8867
 778  8867 21 9B 85     2 ld hl,Filas
 779  886A ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 780  886E 01 3B 00     	ld bc,59
 781  8871 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 782  8873
 783  8873              ; 	Entidad_sospechosa. 20/4/23
 784  8873
 785  8873 3A B4 85     	ld a,(Impacto)
 786  8876 A7           	and a
 787  8877 28 0C        	jr z,1F
 788  8879
 789  8879 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 790  887C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 791  887F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 792  8880 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 793  8882 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 794  8885
 795  8885              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 796  8885
 797  8885 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 798  8888 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 799  888B
 800  888B E5           	push hl
 801  888C
 802  888C 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 803  888F 01 3B 00     	ld bc,59
 804  8892 ED B0        	ldir
 805  8894
 806  8894              ;	Incrementa RESTORE !!!!!
 807  8894
 808  8894 2A DB 85         ld hl,(Indice_restore)
 809  8897 23           	inc hl
 810  8898 23           	inc hl
 811  8899 22 DB 85     	ld (Indice_restore),hl
 812  889C CD 16 88         call Extrae_address
 813  889F 22 D9 85         ld (Puntero_restore_entidades),hl
 814  88A2
 815  88A2 E1               pop hl
 816  88A3
 817  88A3 7E            	ld a,(hl)
 818  88A4 A7            	and a
 819  88A5 28 C0         	jr z,2B												; Si el cajón está vacío, saltamos al siguiente.
 820  88A7
 821  88A7 C1           	pop bc
 822  88A8 D1           	pop de
 823  88A9 E1           	pop hl
 824  88AA C9           	ret
 825  88AB
 826  88AB              ; **************************************************************************************************
 827  88AB              ;
 828  88AB              ;	29/10/22
 829  88AB              ;
 830  88AB              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 831  88AB
 832  88AB E5           Restore_Primera_entidad push hl
 833  88AC D5           	push de
 834  88AD C5            	push bc
 835  88AE 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 836  88B1 11 9B 85     	ld de,Filas
 837  88B4 01 3B 00     	ld bc,59
 838  88B7 ED B0        	ldir
 839  88B9 C1           	pop bc
 840  88BA D1           	pop de
 841  88BB E1           	pop hl
 842  88BC C9           	ret
 843  88BD
 844  88BD              ; **************************************************************************************************
 845  88BD              ;
 846  88BD              ;	25/01/23
 847  88BD              ;
 848  88BD              ;	Restore_Amadeus
 849  88BD              ;
 850  88BD              ;	Cargamos en DRAW los parámetros de Amadeus.
 851  88BD              ;
 852  88BD
 853  88BD E5           Restore_Amadeus	push hl
 854  88BE D5           	push de
 855  88BF C5            	push bc
 856  88C0 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 857  88C3 11 9B 85     	ld de,Filas
 858  88C6 01 3B 00     	ld bc,59
 859  88C9 ED B0        	ldir
 860  88CB C1           	pop bc
 861  88CC D1           	pop de
 862  88CD E1           	pop hl
 863  88CE C9           	ret
 864  88CF
 865  88CF              ; *************************************************************************************************************************************************************
 866  88CF              ;
 867  88CF              ;	29/04/23
 868  88CF              ;
 869  88CF              ;	Store_Amadeus
 870  88CF              ;
 871  88CF              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 872  88CF              ;
 873  88CF              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 874  88CF              ;
 875  88CF              ;	DESTRUYE: HL y BC y DE.
 876  88CF
 877  88CF 21 9B 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 878  88D2 01 3B 00     	ld bc,59
 879  88D5 ED B0        	ldir
 880  88D7 C9           	ret
 881  88D8
 882  88D8              ; -----------------------------------------------------------
 883  88D8              ;
 884  88D8              ;	27/04/23
 885  88D8              ;
 886  88D8              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 887  88D8              ;
 888  88D8              ;	Destruye: HL,BC,DE,A
 889  88D8
 890  88D8 21 9B 85     Borra_datos_entidad ld hl,Filas
 891  88DB 01 3A 00     	ld bc,58
 892  88DE AF           	xor a
 893  88DF 77           	ld (hl),a
 894  88E0 11 9C 85     	ld de,Filas+1
 895  88E3 ED B0        	ldir
 896  88E5 C9           	ret
 897  88E6
 898  88E6              ; -----------------------------------------------------------
 899  88E6
 900  88E6              ; Teclado.
 901  88E6
 902  88E6 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 903  88E8 DB FE        	in a,($fe)
 904  88EA E6 01        	and $01
 905  88EC 28 02        	jr z,1f
 906  88EE 18 F6        	jr Pulsa_ENTER
 907  88F0 C9           1 ret
 908  88F1
 909  88F1              ; **************************************************************************************************
 910  88F1              ;
 911  88F1              ; Temporización.
 912  88F1
 913  88F1              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 914  88F1              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 915  88F1              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 916  88F1              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 917  88F1
 918  88F1              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 919  88F1              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 920  88F1              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 921  88F1
 922  88F1              ; A partir de $4f61 no hace falta DELAY.
 923  88F1
 924  88F1              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 925  88F1
 926  88F1 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 927  88F4 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 928  88F5 78           	LD A,B
 929  88F6 A7           	AND A
 930  88F7 20 FB        	JR NZ,wait
 931  88F9 C9           	RET
 932  88FA
 933  88FA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 934  88FA              ;
 935  88FA              ;	5/3/23
 936  88FA              ;
 937  88FA              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 938  88FA
 939  88FA              Movimiento_Amadeus
 940  88FA
 941  88FA              ; Disparo.
 942  88FA
 943  88FA 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 944  88FD A7           	and a
 945  88FE 20 02        	jr nz,1F
 946  8900 18 15        	jr 2F
 947  8902
 948  8902 3E F7        1 ld a,$f7													; "5" para disparar.
 949  8904 DB FE        	in a,($fe)
 950  8906 E6 10        	and $10
 951  8908
 952  8908 F5           	push af
 953  8909 CC 73 89     	call z,Genera_disparo
 954  890C F1           	pop af
 955  890D 20 08        	jr nz,2F
 956  890F
 957  890F 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 958  8912 EE 01        	xor 1
 959  8914 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 960  8917
 961  8917 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 962  8919 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 963  891B E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 964  891D CC C4 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 965  8920 3E F7        	ld a,$f7
 966  8922 DB FE        	in a,($fe)
 967  8924 E6 01        	and $01
 968  8926 C8           	ret z
 969  8927
 970  8927 3E F7        	ld a,$f7
 971  8929 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 972  892B E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 973  892D CC A6 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 974  8930 C9           	ret
 975  8931
 976  8931              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 977  8931              ;
 978  8931              ;	Rutina provisional para que los malotes cagen balas.
 979  8931
 980  8931              Detecta_disparo_entidad
 981  8931
 982  8931 3A FA 85     	ld a,(Habilita_disparo_entidad)
 983  8934 A7           	and a
 984  8935 C8           	ret z
 985  8936 3E 7F        	ld a,$7f
 986  8938 DB FE        	in a,($fe)
 987  893A E6 01        	and 1
 988  893C C0           	ret nz
 989  893D CD 73 89     	call Genera_disparo
 990  8940 C9           	ret
 991  8941
 992  8941              ; Pinta indicadores de FILAS. ------------------------------------------------------
 993  8941
 994  8941 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 995  8944
 996  8944              ; ----------
 997  8944 06 20        	ld b,32
 998  8946 E5           2 push hl
 999  8947 C5           	push bc
1000  8948              ; ----------
1001  8948
1002  8948 06 BF        	ld b,$bf
1003  894A 36 80        1 ld (hl),%10000000
1004  894C CD 6C 90     	call NextScan
1005  894F 10 F9        	djnz 1B
1006  8951
1007  8951              ; ----------
1008  8951 C1           	pop bc
1009  8952 E1           	pop hl
1010  8953 2C           	inc l
1011  8954 10 F0        	djnz 2B
1012  8956              ; ----------
1013  8956
1014  8956 06 03        	ld b,3
1015  8958 21 00 47         ld hl,$4700
1016  895B CD 61 89     3 call Bucle_1
1017  895E 10 FB            djnz 3B
1018  8960 C9               ret
1019  8961
1020  8961 C5           Bucle_1 push bc
1021  8962 E5                   push hl
1022  8963 D1                   pop de
1023  8964 13                   inc de
1024  8965 01 FF 00             ld bc,255
1025  8968 36 FF                ld (hl),255
1026  896A ED B0                ldir
1027  896C 23                   inc hl
1028  896D 3E 07                ld a,7
1029  896F 84                   add a,h
1030  8970 67                   ld h,a
1031  8971 C1                   pop bc
1032  8972 C9                   ret
1033  8973
1034  8973              ; ---------------------------------------------------------------
1035  8973
1036  8973              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8973              ; ******************************************************************************************************************************************************************************************
   2+ 8973              ;
   3+ 8973              ;   17/04/23
   4+ 8973              ;
   5+ 8973              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8973              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8973              ;
   8+ 8973              ;
   9+ 8973              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8973              ;
  11+ 8973              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8973              ;               _ hacen las entidades hacia abajo.
  13+ 8973              ;
  14+ 8973              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8973              ;
  16+ 8973              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8973              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8973              ;
  19+ 8973              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8973              ;           _ la bala.
  21+ 8973              ;
  22+ 8973              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8973              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8973              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8973              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8973              ;           _ en el momento de generarse la bala)).
  27+ 8973
  28+ 8973              Genera_disparo
  29+ 8973
  30+ 8973              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8973              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8973              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8973              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8973              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8973              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8973              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8973
  38+ 8973              ; Exclusiones:
  39+ 8973
  40+ 8973 3A D2 85         ld a,(Columnas)
  41+ 8976 47               ld b,a
  42+ 8977 3A 9C 85         ld a,(Columns)
  43+ 897A B8               cp b
  44+ 897B C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 897C
  46+ 897C              ; ----- ----- -----
  47+ 897C
  48+ 897C 3A C9 85         ld a,(Ctrl_0)
  49+ 897F CB 77            bit 6,a
  50+ 8981 20 06            jr nz,14F
  51+ 8983
  52+ 8983 3A A2 85         ld a,(Coordenada_y)
  53+ 8986 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8988 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8989
  56+ 8989 21 00 80     14 ld hl,Indice_disparo
  57+ 898C 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 898F 4F               ld c,a
  59+ 8990 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8992              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8992              ;                                            ""        ""       "f9", B="1"
  62+ 8992              ;                                            ""        ""       "fb", B="2"
  63+ 8992              ;                                            ""        ""       "fb", B="3"
  64+ 8992 A7               and a
  65+ 8993 28 10            jr z,1F
  66+ 8995 E6 01            and 1
  67+ 8997 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8998
  69+ 8998 79               ld a,c
  70+ 8999 16 F9            ld d,$f9
  71+ 899B 23           2 inc hl
  72+ 899C 23               inc hl
  73+ 899D 04               inc b
  74+ 899E BA               cp d
  75+ 899F 28 04            jr z,1F
  76+ 89A1 14               inc d
  77+ 89A2 14               inc d
  78+ 89A3 18 F6            jr 2B
  79+ 89A5
  80+ 89A5 CD 16 88     1 call Extrae_address
  81+ 89A8 E5               push hl
  82+ 89A9 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89AB DD 21 FF 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89AF
  85+ 89AF              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89AF              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89AF
  88+ 89AF 3A C9 85         ld a,(Ctrl_0)
  89+ 89B2 CB 77            bit 6,a
  90+ 89B4 20 04            jr nz,19F
  91+ 89B6
  92+ 89B6 AF               xor a
  93+ 89B7 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 89BA
  95+ 89BA 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 89BD FE 02            cp 2
  97+ 89BF 38 66            jr c,3F
  98+ 89C1 28 64            jr z,3F
  99+ 89C3
 100+ 89C3              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 89C3
 102+ 89C3 E6 01            and 1
 103+ 89C5 28 30            jr z,4F
 104+ 89C7
 105+ 89C7              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 89C7              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 89C7              ;
 108+ 89C7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 89C7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 89C7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 89C7
 112+ 89C7 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 89CA
 114+ 89CA              ;   Amadeus o entidad ???.
 115+ 89CA
 116+ 89CA 3A C9 85         ld a,(Ctrl_0)
 117+ 89CD CB 77            bit 6,a
 118+ 89CF 28 0A            jr z,8F
 119+ 89D1
 120+ 89D1              ; 	Dispara Amadeus.
 121+ 89D1
 122+ 89D1 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89D3 CD 7B 90         call PreviousScan
 124+ 89D6 CD 7B 90         call PreviousScan
 125+ 89D9
 126+ 89D9              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89D9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89D9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89D9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89D9
 131+ 89D9 18 11            jr 10F
 132+ 89DB
 133+ 89DB              ; 	Dispara Entidad.
 134+ 89DB
 135+ 89DB 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89DE              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89DE
 138+ 89DE              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89DE              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89DE
 141+ 89DE C5               push bc
 142+ 89DF 06 10            ld b,16
 143+ 89E1 CD 6C 90     9 call NextScan
 144+ 89E4 10 FB            djnz 9B
 145+ 89E6 C1               pop bc
 146+ 89E7 CD 51 8A         call Ajusta_disparo_parte_izquierda
 147+ 89EA 18 06            jr 17F
 148+ 89EC
 149+ 89EC              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89EC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89EC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89EC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89EC
 154+ 89EC CD 51 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89EF CD C6 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89F2              ;                                                      ; _al generar el disparo.
 157+ 89F2
 158+ 89F2              ; 	LLegados a este punto tendremos:
 159+ 89F2              ;
 160+ 89F2              ;       Puntero_objeto_disparo en IY.
 161+ 89F2              ;       Rutinas_de_impresion en IX.
 162+ 89F2              ;       Puntero_de_impresion en HL.
 163+ 89F2              ;       Impacto/Dirección en BC.
 164+ 89F2
 165+ 89F2 CD 59 8A     17 call Almacena_disparo
 166+ 89F5 18 52            jr 6F                                             ; RET.
 167+ 89F7
 168+ 89F7              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89F7              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89F7              ;
 171+ 89F7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89F7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89F7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89F7
 175+ 89F7 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 89FA
 177+ 89FA              ;   Amadeus o entidad ???.
 178+ 89FA
 179+ 89FA 3A C9 85         ld a,(Ctrl_0)
 180+ 89FD CB 77            bit 6,a
 181+ 89FF 28 0A            jr z,11F
 182+ 8A01
 183+ 8A01              ; 	Dispara Amadeus.
 184+ 8A01
 185+ 8A01 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A03 CD 7B 90         call PreviousScan
 187+ 8A06 CD 7B 90         call PreviousScan
 188+ 8A09
 189+ 8A09              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A09              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A09              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A09
 194+ 8A09 18 11            jr 13F
 195+ 8A0B
 196+ 8A0B              ; 	Dispara Entidad.
 197+ 8A0B
 198+ 8A0B 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A0E              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A0E
 201+ 8A0E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A0E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A0E
 204+ 8A0E C5               push bc
 205+ 8A0F 06 10            ld b,16
 206+ 8A11 CD 6C 90     12 call NextScan
 207+ 8A14 10 FB            djnz 12B
 208+ 8A16 C1               pop bc
 209+ 8A17
 210+ 8A17 CD 4A 8A         call Ajusta_disparo_parte_derecha
 211+ 8A1A 18 06            jr 18F
 212+ 8A1C
 213+ 8A1C              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A1C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A1C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A1C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A1C
 218+ 8A1C CD 4A 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A1F CD C6 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A22              ;                                                       ; _al generar el disparo.
 221+ 8A22
 222+ 8A22              ; LLegados a este punto tendremos:
 223+ 8A22              ;
 224+ 8A22              ;       Puntero_objeto_disparo en IY.
 225+ 8A22              ;       Rutinas_de_impresion en IX.
 226+ 8A22              ;       Puntero_de_impresion en HL.
 227+ 8A22              ;       Impacto/Dirección en BC.
 228+ 8A22
 229+ 8A22 CD 59 8A     18 call Almacena_disparo
 230+ 8A25 18 22            jr 6F                                               ; RET.
 231+ 8A27
 232+ 8A27              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A27
 234+ 8A27 28 11        3 jr z,5F
 235+ 8A29
 236+ 8A29              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A29              ;
 238+ 8A29              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A29              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A29              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A29              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A29
 243+ 8A29              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A29              ;	   ""        ""       "f9", B="1"
 245+ 8A29              ;	   ""        ""       "fb", B="2"
 246+ 8A29              ; 	   ""        ""       "fb", B="3"
 247+ 8A29
 248+ 8A29 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 8A2C CD 6C 90     	call NextScan
 250+ 8A2F
 251+ 8A2F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A2F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A2F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A2F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A2F
 256+ 8A2F CD 51 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A32
 258+ 8A32              ; 	No se produce impacto. B="$80"
 259+ 8A32              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A32
 261+ 8A32 01 80 80         ld bc,$8080
 262+ 8A35
 263+ 8A35              ; 	LLegados a este punto tendremos:
 264+ 8A35              ;
 265+ 8A35              ;       Puntero_objeto_disparo en IY.
 266+ 8A35              ;       Rutinas_de_impresion en IX.
 267+ 8A35              ;       Puntero_de_impresion en HL.
 268+ 8A35              ;       Impacto/Dirección en BC.
 269+ 8A35
 270+ 8A35 CD 59 8A         call Almacena_disparo
 271+ 8A38 18 0F            jr 6F                                           ; RET.
 272+ 8A3A
 273+ 8A3A              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A3A              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A3A              ;
 276+ 8A3A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A3A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A3A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A3A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A3A
 281+ 8A3A 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A3D CD 6C 90     	call NextScan
 283+ 8A40
 284+ 8A40              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A40              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A40              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A40              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A40
 289+ 8A40 CD 4A 8A         call Ajusta_disparo_parte_derecha
 290+ 8A43
 291+ 8A43              ; 	No se produce impacto. B="$80"
 292+ 8A43              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A43
 294+ 8A43 01 80 80     15 ld bc,$8080
 295+ 8A46
 296+ 8A46              ; 	LLegados a este punto tendremos:
 297+ 8A46              ;
 298+ 8A46              ;       Puntero_objeto_disparo en IY.
 299+ 8A46              ;       Rutinas_de_impresion en IX.
 300+ 8A46              ;       Puntero_de_impresion en HL.
 301+ 8A46              ;       Impacto/Dirección en BC.
 302+ 8A46
 303+ 8A46 CD 59 8A         call Almacena_disparo
 304+ 8A49
 305+ 8A49 C9           6 ret
 306+ 8A4A
 307+ 8A4A              ; ----------------------------------------------------------------
 308+ 8A4A              ;
 309+ 8A4A              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A4A              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A4A              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A4A
 313+ 8A4A 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A4B FE 02            cp 2
 315+ 8A4D 38 01            jr c,1F
 316+ 8A4F 23               inc hl
 317+ 8A50 C9           1 ret
 318+ 8A51
 319+ 8A51 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A52 FE 01        	cp 1
 321+ 8A54 20 01        	jr nz,1F
 322+ 8A56 2B           	dec hl
 323+ 8A57 2B           1 dec hl
 324+ 8A58 C9               ret
 325+ 8A59
 326+ 8A59              ; ----------------------------------------------------------------
 327+ 8A59              ;
 328+ 8A59              ;   25/02/23
 329+ 8A59              ;
 330+ 8A59              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A59              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A59              ;
 333+ 8A59              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A59              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A59
 336+ 8A59              Almacena_disparo
 337+ 8A59
 338+ 8A59 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A5A F1               pop af
 340+ 8A5B 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A5C
 342+ 8A5C 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A5D E6 01            and 1
 344+ 8A5F 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A61              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A61              ; 	Dispara AMADEUS.
 347+ 8A61
 348+ 8A61              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A61              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A61              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A61              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A61
 353+ 8A61 C5               push bc
 354+ 8A62 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A65 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A68 A7               and a
 357+ 8A69 ED 42            sbc hl,bc
 358+ 8A6B CC DF 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A6E C1               pop bc
 360+ 8A6F 28 54            jr z,4F
 361+ 8A71
 362+ 8A71 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A74 23               inc hl
 364+ 8A75 23               inc hl
 365+ 8A76 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A79              ;                                                   ; _ Disparo_(+1).
 367+ 8A79 18 18            jr 2F
 368+ 8A7B
 369+ 8A7B              ; Dispara una entidad.
 370+ 8A7B
 371+ 8A7B C5           1 push bc
 372+ 8A7C 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A7F 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A82 A7               and a
 375+ 8A83 ED 42            sbc hl,bc
 376+ 8A85 CC D8 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A88 C1               pop bc
 378+ 8A89 28 3A            jr z,4F
 379+ 8A8B
 380+ 8A8B 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A8E 23               inc hl
 382+ 8A8F 23               inc hl
 383+ 8A90 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A93              ;                                                   ; _ Disparo_(+1).
 385+ 8A93 CD 16 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A96              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A96              ;
 388+ 8A96              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A96              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A96              ;                                                     Puntero_de_impresion en HL.
 391+ 8A96              ;                                                     Impacto/Dirección en BC.
 392+ 8A96
 393+ 8A96 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A97 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A98 23               inc hl                                          ; _ al siguiente.
 396+ 8A99 A7               and a
 397+ 8A9A 20 C0            jr nz,3B
 398+ 8A9C
 399+ 8A9C 08               ex af,af
 400+ 8A9D ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AA1 F9               ld sp,hl
 402+ 8AA2
 403+ 8AA2 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AA4 F5               push af                                         ; Puntero de impresión.
 405+ 8AA5 FD E5            push iy                                         ; Puntero objeto.
 406+ 8AA7 C5               push bc                                         ; Control.
 407+ 8AA8
 408+ 8AA8 ED 7B DF 85      ld sp,(Stack)
 409+ 8AAC
 410+ 8AAC              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AAC
 412+ 8AAC 21 D6 85     	ld hl,Ctrl_1
 413+ 8AAF CB C6        	set 0,(hl)
 414+ 8AB1
 415+ 8AB1 DD E5        	push ix
 416+ 8AB3 E1               pop hl
 417+ 8AB4 F5               push af
 418+ 8AB5 DD E1            pop ix
 419+ 8AB7
 420+ 8AB7 CD A0 7F     	call Guarda_foto_registros
 421+ 8ABA
 422+ 8ABA 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8ABD CB 86        	res 0,(hl)
 424+ 8ABF
 425+ 8ABF              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8ABF              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8ABF
 428+ 8ABF CD DF 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8AC2 CD D8 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8AC5
 431+ 8AC5 C9           4 ret
 432+ 8AC6
 433+ 8AC6              ; ----------------------------------------------------------------
 434+ 8AC6              ;
 435+ 8AC6              ;   4/3/23
 436+ 8AC6              ;
 437+ 8AC6              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8AC6              ;   _ al generarse el disparo.
 439+ 8AC6              ;
 440+ 8AC6              ;       "$80" ..... No se produce colisión.
 441+ 8AC6              ;       "$81" ..... Se produce colisión.
 442+ 8AC6
 443+ 8AC6              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8AC6              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8AC6
 446+ 8AC6
 447+ 8AC6 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8AC8 E5               push hl                                        ; Puntero de impresión.
 449+ 8AC9 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8ACB CD E7 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8ACE
 452+ 8ACE 7B               ld a,e
 453+ 8ACF E6 01            and 1
 454+ 8AD1 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8AD3
 456+ 8AD3 E1               pop hl
 457+ 8AD4 E5               push hl
 458+ 8AD5 CD 6C 90         call NextScan
 459+ 8AD8
 460+ 8AD8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8AD9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8ADB 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8ADD              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8ADD 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8ADF CD E7 8A         call Bucle_2
 466+ 8AE2
 467+ 8AE2 43           2 ld b,e
 468+ 8AE3 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8AE4 FD E1            pop iy
 470+ 8AE6 C9               ret
 471+ 8AE7
 472+ 8AE7               ; ---------- ----------
 473+ 8AE7
 474+ 8AE7 06 02        Bucle_2 ld b,2
 475+ 8AE9 FD 7E 00     2 ld a,(iy)
 476+ 8AEC A6               and (hl)
 477+ 8AED 28 02            jr z,1F
 478+ 8AEF 1E 81            ld e,$81
 479+ 8AF1 23           1 inc hl
 480+ 8AF2 FD 23            inc iy
 481+ 8AF4 10 F3            djnz 2B
 482+ 8AF6 C9               ret
 483+ 8AF7
 484+ 8AF7              ; -------------------------------------------------------------------------------------------------------------
 485+ 8AF7              ;
 486+ 8AF7              ;   11/04/23
 487+ 8AF7              ;
 488+ 8AF7              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8AF7              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8AF7              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8AF7              ;
 492+ 8AF7              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8AF7
 494+ 8AF7              Compara_coordenadas_X
 495+ 8AF7
 496+ 8AF7              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8AF7              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8AF7
 499+ 8AF7              ; Preparamos registros:
 500+ 8AF7
 501+ 8AF7 21 A1 85         ld hl,Filas+6
 502+ 8AFA 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8AFB 23               inc hl
 504+ 8AFC 23               inc hl
 505+ 8AFD 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8AFE 43               ld b,e
 507+ 8AFF 21 AF 85         ld hl,Filas+20
 508+ 8B02 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B03 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8B06 CD 15 8D         call Guarda_coordenadas_X
 511+ 8B09
 512+ 8B09              ; Preparamos registros:
 513+ 8B09
 514+ 8B09 21 7A 84         ld hl,Amadeus_db+6
 515+ 8B0C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B0D 23               inc hl
 517+ 8B0E 23               inc hl
 518+ 8B0F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B10 7B               ld a,e
 520+ 8B11 08               ex af,af'
 521+ 8B12 21 88 84         ld hl,Amadeus_db+20
 522+ 8B15 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B16 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8B19 CD 15 8D         call Guarda_coordenadas_X
 525+ 8B1C
 526+ 8B1C              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B1C              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B1C
 529+ 8B1C 04               inc b
 530+ 8B1D 05               dec b
 531+ 8B1E 28 04            jr z,1F
 532+ 8B20 06 03            ld b,3
 533+ 8B22 18 02            jr 2F
 534+ 8B24 06 02        1 ld b,2
 535+ 8B26 08           2 ex af,af'
 536+ 8B27 3C               inc a
 537+ 8B28 3D               dec a
 538+ 8B29 28 04            jr z,5F
 539+ 8B2B 0E 03            ld c,3
 540+ 8B2D 18 02            jr 6F
 541+ 8B2F 0E 02        5 ld c,2
 542+ 8B31 79           6 ld a,c
 543+ 8B32 08               ex af,af'
 544+ 8B33 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B36 1A           4 ld a,(de)
 546+ 8B37 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B3A BE           3 cp (hl)
 548+ 8B3B 28 0E            jr z,7F
 549+ 8B3D 23               inc hl
 550+ 8B3E 0D               dec c
 551+ 8B3F 20 F9            jr nz,3B
 552+ 8B41 13               inc de
 553+ 8B42 08               ex af,af'
 554+ 8B43 4F               ld c,a
 555+ 8B44 08               ex af,af'
 556+ 8B45 10 EF            djnz 4B
 557+ 8B47
 558+ 8B47              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B47
 560+ 8B47 CD 54 8D     8 call Limpia_Coordenadas_X
 561+ 8B4A C9               ret
 562+ 8B4B
 563+ 8B4B              7
 564+ 8B4B 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B4D 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8B50 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8B53 CB D6            set 2,(hl)
 568+ 8B55 18 F0            jr 8B
 569+ 8B57
 570+ 8B57              ; -----------------------------------------------------------------------
 571+ 8B57              ;
 572+ 8B57              ;   17/04/23
 573+ 8B57              ;
 574+ 8B57
 575+ 8B57              Detecta_colision_nave_entidad
 576+ 8B57
 577+ 8B57              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8B57
 579+ 8B57 2A 9D 85         ld hl,(Posicion_actual)
 580+ 8B5A CD D1 8F         call Calcula_puntero_de_impresion
 581+ 8B5D
 582+ 8B5D              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8B5D              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8B5D
 585+ 8B5D DD E5            push ix
 586+ 8B5F E1               pop hl
 587+ 8B60 E5               push hl
 588+ 8B61
 589+ 8B61              ; ----- ----- -----
 590+ 8B61 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8B63 06 0A            ld b,10
 592+ 8B65 CD 95 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8B68 7B               ld a,e
 594+ 8B69 FE 05            cp 5
 595+ 8B6B 38 0E            jr c,3F
 596+ 8B6D
 597+ 8B6D              ; LLegados a este punto:
 598+ 8B6D              ;
 599+ 8B6D              ;   HAY COLISIÓN !!!!!.
 600+ 8B6D              ;
 601+ 8B6D              ;   .db (Impacto) de Amadeus a "1".
 602+ 8B6D              ;   SET el bit3 de (Impacto2).
 603+ 8B6D              ;
 604+ 8B6D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8B6D
 606+ 8B6D 21 8D 84         ld hl,Amadeus_db+25
 607+ 8B70 36 01            ld (hl),1
 608+ 8B72 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8B75 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8B77 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8B79 18 18            jr 1F
 612+ 8B7B
 613+ 8B7B              ; -----
 614+ 8B7B
 615+ 8B7B E1           3 pop hl
 616+ 8B7C CD 6C 90         call NextScan
 617+ 8B7F E5               push hl
 618+ 8B80 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8B81 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8B83 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8B85 30 0C            jr nc,1F
 622+ 8B87              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8B87 10 DC            djnz 2B
 624+ 8B89
 625+ 8B89              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8B89
 627+ 8B89              ; LLegados a este punto:
 628+ 8B89              ;
 629+ 8B89              ;   NO HAY COLISIÓN !!!!!.
 630+ 8B89              ;
 631+ 8B89              ;   .db (Impacto) de Amadeus a "0".
 632+ 8B89              ;   RES el bit2 de (Impacto2).
 633+ 8B89              ;
 634+ 8B89              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8B89              ;   Lo colocamos a "0".
 636+ 8B89
 637+ 8B89 21 EC 85         ld hl,Impacto2
 638+ 8B8C CB 96            res 2,(hl)
 639+ 8B8E 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8B91 36 00            ld (hl),0
 641+ 8B93
 642+ 8B93 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8B94 C9               ret
 644+ 8B95
 645+ 8B95               ; ---------- ----------
 646+ 8B95
 647+ 8B95 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8B96 3A 9C 85         ld a,(Columns)
 649+ 8B99 47               ld b,a
 650+ 8B9A FD 7E 00     2 ld a,(iy)
 651+ 8B9D BE               cp (hl)
 652+ 8B9E 28 01            jr z,1F
 653+ 8BA0
 654+ 8BA0 1C               inc e
 655+ 8BA1
 656+ 8BA1 23           1 inc hl
 657+ 8BA2 FD 23            inc iy
 658+ 8BA4 10 F4            djnz 2B
 659+ 8BA6 C1               pop bc
 660+ 8BA7 C9               ret
 661+ 8BA8
 662+ 8BA8              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BA8              ;
 664+ 8BA8              ;   13/03/23
 665+ 8BA8              ;
 666+ 8BA8              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BA8              ;
 668+ 8BA8              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BA8
 670+ 8BA8 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BAB 7E               ld a,(hl)
 672+ 8BAC A7               and a
 673+ 8BAD C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8BAE
 675+ 8BAE 44               ld b,h
 676+ 8BAF 4D               ld c,l
 677+ 8BB0 2A E5 85         ld hl,(Stack_snapshot_disparos)
 678+ 8BB3 E5               push hl
 679+ 8BB4 A7               and a
 680+ 8BB5 ED 42            sbc hl,bc
 681+ 8BB7 E5               push hl
 682+ 8BB8 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8BB9
 684+ 8BB9 E1               pop hl
 685+ 8BBA 54               ld d,h
 686+ 8BBB 5D               ld e,l
 687+ 8BBC 1B               dec de
 688+ 8BBD ED B8            lddr                                                ; Limpiamos.
 689+ 8BBF
 690+ 8BBF 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8BC2 22 E5 85         ld (Stack_snapshot_disparos),hl
 692+ 8BC5
 693+ 8BC5 C9               ret
 694+ 8BC6
 695+ 8BC6              ; -------------------------------------------------------------------------------------------------------------
 696+ 8BC6              ;
 697+ 8BC6              ;   28/03/23
 698+ 8BC6              ;
 699+ 8BC6
 700+ 8BC6 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8BC9 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8BCC
 703+ 8BCC CD 16 88     2 call Extrae_address
 704+ 8BCF 7E               ld a,(hl)
 705+ 8BD0 A7               and a
 706+ 8BD1 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8BD3
 708+ 8BD3              ; ----- ----- ----- ----- ----- -----
 709+ 8BD3
 710+ 8BD3 C5               push bc
 711+ 8BD4 CD 90 8C         call foto_disparo_a_borrar
 712+ 8BD7
 713+ 8BD7              ; Existe colisión con este disparo???
 714+ 8BD7
 715+ 8BD7 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8BD8 7E               ld a,(hl)
 717+ 8BD9 2B               dec hl
 718+ 8BDA E6 01            and 1
 719+ 8BDC 28 1D            jr z,9F
 720+ 8BDE
 721+ 8BDE              ;   En este punto:
 722+ 8BDE              ;
 723+ 8BDE              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8BDE              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8BDE              ;   _con la entidad).
 726+ 8BDE              ;
 727+ 8BDE              ;   Disparo_2A defw 0                                ; Control.
 728+ 8BDE              ;    defw 0                                          ; Puntero objeto.
 729+ 8BDE              ;    defw 0                                          ; Puntero de impresión.
 730+ 8BDE              ;    defw 0                                          ; Rutina de impresión.
 731+ 8BDE
 732+ 8BDE E5               push hl
 733+ 8BDF
 734+ 8BDF 06 04            ld b,4
 735+ 8BE1 23           19 inc hl
 736+ 8BE2 10 FD            djnz 19B
 737+ 8BE4
 738+ 8BE4 CD 16 88         call Extrae_address
 739+ 8BE7 CD 83 96         call Genera_coordenadas_disparo
 740+ 8BEA
 741+ 8BEA              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8BEA
 743+ 8BEA 21 EF 85         ld hl,Coordenadas_disparo_certero
 744+ 8BED 72               ld (hl),d
 745+ 8BEE 23               inc hl
 746+ 8BEF 73               ld (hl),e
 747+ 8BF0
 748+ 8BF0              ; Elimino el disparo de la base de datos.
 749+ 8BF0
 750+ 8BF0 E1               pop hl
 751+ 8BF1 CD 0A 8D         call Elimina_disparo_de_base_de_datos
 752+ 8BF4 21 EC 85         ld hl,Impacto2
 753+ 8BF7 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8BF9
 755+ 8BF9 18 06            jr 11F
 756+ 8BFB
 757+ 8BFB CD B9 8C     9 call Mueve_disparo
 758+ 8BFE CD 90 8C         call foto_disparo_a_borrar
 759+ 8C01
 760+ 8C01 C1           11 pop bc
 761+ 8C02 18 04            jr 7F
 762+ 8C04
 763+ 8C04              ; ----- ----- ----- ----- ----- -----
 764+ 8C04
 765+ 8C04 ED 42        1 sbc hl,bc
 766+ 8C06 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C08
 768+ 8C08 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C0B 23               inc hl
 770+ 8C0C 23               inc hl
 771+ 8C0D 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C10 18 BA            jr 2B
 773+ 8C12
 774+ 8C12 CD DF 87     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C15 01 66 84         ld bc,Disparo_11
 776+ 8C18 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C1B
 778+ 8C1B CD 16 88     5 call Extrae_address
 779+ 8C1E 7E               ld a,(hl)
 780+ 8C1F A7               and a
 781+ 8C20 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C22
 783+ 8C22              ; ----- ----- ----- ----- ----- -----
 784+ 8C22
 785+ 8C22 C5               push bc
 786+ 8C23 CD 90 8C         call foto_disparo_a_borrar
 787+ 8C26
 788+ 8C26              ; Existe colisión con este disparo???
 789+ 8C26
 790+ 8C26 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C27 7E               ld a,(hl)
 792+ 8C28 2B               dec hl
 793+ 8C29 E6 01            and 1
 794+ 8C2B 28 48            jr z,10F
 795+ 8C2D
 796+ 8C2D              ; La colisión se produce con Amadeus???
 797+ 8C2D              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C2D
 799+ 8C2D E5               push hl
 800+ 8C2E
 801+ 8C2E 06 04            ld b,4
 802+ 8C30 23           16 inc hl
 803+ 8C31 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C33 CD 16 88         call Extrae_address
 805+ 8C36 CD 83 96         call Genera_coordenadas_disparo
 806+ 8C39
 807+ 8C39 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C3A FE 16            cp $16
 809+ 8C3C 38 22            jr c,15F
 810+ 8C3E
 811+ 8C3E              ; (Colisiones en filas 16 y 17).
 812+ 8C3E
 813+ 8C3E D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C3F
 815+ 8C3F              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C3F
 817+ 8C3F 21 7A 84         ld hl,Amadeus_db+6
 818+ 8C42 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C43 23               inc hl
 820+ 8C44 23               inc hl
 821+ 8C45 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C46 21 88 84         ld hl,Amadeus_db+20
 823+ 8C49 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C4A 21 F1 85         ld hl,Coordenadas_X_Amadeus
 825+ 8C4D CD 15 8D         call Guarda_coordenadas_X
 826+ 8C50
 827+ 8C50 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8C51
 829+ 8C51              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8C51
 831+ 8C51 06 03            ld b,3
 832+ 8C53 21 F1 85         ld hl,Coordenadas_X_Amadeus
 833+ 8C56 7E           18 ld a,(hl)
 834+ 8C57 BA               cp d
 835+ 8C58 20 03            jr nz,17F
 836+ 8C5A
 837+ 8C5A              ; Colisión Amadeus !!!!!!!!!!
 838+ 8C5A
 839+ 8C5A E1               pop hl
 840+ 8C5B 18 09            jr 14F
 841+ 8C5D
 842+ 8C5D 23           17 inc hl
 843+ 8C5E 10 F6            djnz 18B
 844+ 8C60
 845+ 8C60              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8C60              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8C60
 848+ 8C60 E1           15 pop hl
 849+ 8C61 23               inc hl
 850+ 8C62 35               dec (hl)
 851+ 8C63 2B               dec hl
 852+ 8C64 18 0F            jr 10F
 853+ 8C66
 854+ 8C66              ; -----------------------debug
 855+ 8C66
 856+ 8C66              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8C66              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8C66
 859+ 8C66 E5           14 push hl
 860+ 8C67 CD 0A 8D         call Elimina_disparo_de_base_de_datos
 861+ 8C6A 21 EC 85         ld hl,Impacto2
 862+ 8C6D CB CE            set 1,(hl)
 863+ 8C6F CD 54 8D         call Limpia_Coordenadas_X
 864+ 8C72
 865+ 8C72 E1               pop hl
 866+ 8C73 18 06            jr 12F
 867+ 8C75
 868+ 8C75 CD B9 8C     10 call Mueve_disparo
 869+ 8C78 CD 90 8C         call foto_disparo_a_borrar
 870+ 8C7B C1           12 pop bc
 871+ 8C7C
 872+ 8C7C 18 04            jr 8F
 873+ 8C7E
 874+ 8C7E              ; ----- ----- ----- ----- ----- -----
 875+ 8C7E
 876+ 8C7E ED 42        4 sbc hl,bc
 877+ 8C80 28 0A            jr z,6F
 878+ 8C82
 879+ 8C82 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8C85 23               inc hl
 881+ 8C86 23               inc hl
 882+ 8C87 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8C8A 18 8F            jr 5B
 884+ 8C8C
 885+ 8C8C CD D8 87     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8C8F C9               ret
 887+ 8C90
 888+ 8C90              ; ------------------------------------------------------------------
 889+ 8C90
 890+ 8C90              foto_disparo_a_borrar
 891+ 8C90
 892+ 8C90 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8C91 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8C92 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8C93
 896+ 8C93 E5               push hl
 897+ 8C94 23               inc hl
 898+ 8C95 23               inc hl
 899+ 8C96 ED 73 DF 85      ld (Stack),sp
 900+ 8C9A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8C9B FD E1            pop iy
 902+ 8C9D DD E1            pop ix
 903+ 8C9F E1               pop hl
 904+ 8CA0 ED 7B DF 85      ld sp,(Stack)
 905+ 8CA4 3A D6 85         ld a,(Ctrl_1)
 906+ 8CA7 CB C7            set 0,a
 907+ 8CA9 32 D6 85         ld (Ctrl_1),a
 908+ 8CAC CD A0 7F         call Guarda_foto_registros
 909+ 8CAF 3A D6 85         ld a,(Ctrl_1)
 910+ 8CB2 CB 87            res 0,a
 911+ 8CB4 32 D6 85         ld (Ctrl_1),a
 912+ 8CB7 E1               pop hl
 913+ 8CB8 C9               ret
 914+ 8CB9
 915+ 8CB9 E5           Mueve_disparo push hl
 916+ 8CBA 7E               ld a,(hl)
 917+ 8CBB 06 04            ld b,4
 918+ 8CBD 23           1 inc hl
 919+ 8CBE 10 FD            djnz 1B
 920+ 8CC0
 921+ 8CC0              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8CC0
 923+ 8CC0 CD 16 88         call Extrae_address
 924+ 8CC3
 925+ 8CC3 E6 01            and 1
 926+ 8CC5 28 2A            jr z,2F
 927+ 8CC7
 928+ 8CC7              ; Disparo hacia arriba, (Amadeus).
 929+ 8CC7
 930+ 8CC7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8CC7              ; _ de la dificultad.
 932+ 8CC7
 933+ 8CC7 CD 7B 90         call PreviousScan
 934+ 8CCA CD 7B 90         call PreviousScan
 935+ 8CCD CD 7B 90         call PreviousScan
 936+ 8CD0
 937+ 8CD0              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8CD0
 939+ 8CD0 7C               ld a,h
 940+ 8CD1 FE 40            cp $40
 941+ 8CD3 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8CD5
 943+ 8CD5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8CD5
 945+ 8CD5 EB               ex de,hl
 946+ 8CD6 06 04            ld b,4
 947+ 8CD8 2B           6 dec hl
 948+ 8CD9 10 FD            djnz 6B
 949+ 8CDB
 950+ 8CDB CD 0A 8D         call Elimina_disparo_de_base_de_datos
 951+ 8CDE
 952+ 8CDE 18 0C            jr 4F
 953+ 8CE0
 954+ 8CE0              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8CE0
 956+ 8CE0 D5           3 push de
 957+ 8CE1 C5               push bc
 958+ 8CE2 CD C6 8A         call Comprueba_Colision
 959+ 8CE5 78               ld a,b
 960+ 8CE6 C1               pop bc
 961+ 8CE7 D1               pop de
 962+ 8CE8
 963+ 8CE8 EB               ex de,hl
 964+ 8CE9
 965+ 8CE9 73               ld (hl),e
 966+ 8CEA 23               inc hl
 967+ 8CEB 72               ld (hl),d
 968+ 8CEC
 969+ 8CEC E1           4 pop hl
 970+ 8CED 23               inc hl
 971+ 8CEE 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8CEF 2B               dec hl
 973+ 8CF0 C9               ret
 974+ 8CF1
 975+ 8CF1              ; Disparo hacia abajo, (Entidad).
 976+ 8CF1
 977+ 8CF1              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8CF1              ; _ de la dificultad.
 979+ 8CF1
 980+ 8CF1 CD 6C 90     2 call NextScan
 981+ 8CF4 CD 6C 90         call NextScan
 982+ 8CF7 CD 6C 90         call NextScan
 983+ 8CFA
 984+ 8CFA              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8CFA
 986+ 8CFA 7C               ld a,h
 987+ 8CFB FE 58            cp $58
 988+ 8CFD 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8CFF
 990+ 8CFF EB               ex de,hl
 991+ 8D00 06 04            ld b,4
 992+ 8D02 2B           5 dec hl
 993+ 8D03 10 FD            djnz 5B
 994+ 8D05
 995+ 8D05 CD 0A 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D08
 997+ 8D08 18 E2            jr 4B
 998+ 8D0A
 999+ 8D0A              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D0A
1001+ 8D0A 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D0D AF               xor a
1003+ 8D0E 77               ld (hl),a
1004+ 8D0F 54               ld d,h
1005+ 8D10 5D               ld e,l
1006+ 8D11 13               inc de
1007+ 8D12 ED B0            ldir
1008+ 8D14 C9               ret
1009+ 8D15
1010+ 8D15              ; -----------------------------------------------------------------
1011+ 8D15              ;
1012+ 8D15              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D15              ;
1014+ 8D15              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D15              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D15              ;
1017+ 8D15              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D15              ;
1019+ 8D15              ;   INPUTS:
1020+ 8D15              ;
1021+ 8D15              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D15              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D15              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D15
1025+ 8D15              ;   MODIFICA: A, HL, DE y C
1026+ 8D15
1027+ 8D15 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D16 79               ld a,c
1029+ 8D17 E6 01            and 1
1030+ 8D19 20 03            jr nz,1F
1031+ 8D1B 14               inc d
1032+ 8D1C 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D1E
1034+ 8D1E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D1E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D1E
1037+ 8D1E 15           1 dec d
1038+ 8D1F 23           2 inc hl
1039+ 8D20 72               ld (hl),d
1040+ 8D21
1041+ 8D21 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D22 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D23 C8               ret z
1044+ 8D24
1045+ 8D24 AF               xor a
1046+ 8D25 5F               ld e,a
1047+ 8D26 18 ED            jr Guarda_coordenadas_X
1048+ 8D28
1049+ 8D28              ; -----------------------------------------------------------------
1050+ 8D28              ;
1051+ 8D28              ;   12/04/23
1052+ 8D28              ;
1053+ 8D28
1054+ 8D28 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1055+ 8D2B A7               and a
1056+ 8D2C C8               ret z
1057+ 8D2D
1058+ 8D2D FE 04            cp 4
1059+ 8D2F 20 09            jr nz,1F
1060+ 8D31
1061+ 8D31
1062+ 8D31              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D31
1064+ 8D31 CD 57 8B         call Detecta_colision_nave_entidad
1065+ 8D34
1066+ 8D34 21 EC 85         ld hl,Impacto2
1067+ 8D37 CB 5E            bit 3,(hl)
1068+ 8D39 C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D3A
1070+ 8D3A              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D3A              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D3A
1073+ 8D3A 21 EC 85     1 ld hl,Impacto2
1074+ 8D3D CB 4E            bit 1,(hl)
1075+ 8D3F 28 07            jr z,2F
1076+ 8D41
1077+ 8D41 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D44 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D46 18 0B            jr 3F
1080+ 8D48
1081+ 8D48 21 EC 85     2 ld hl,Impacto2
1082+ 8D4B CB 46            bit 0,(hl)
1083+ 8D4D C8               ret z
1084+ 8D4E
1085+ 8D4E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8D4E
1087+ 8D4E 21 D6 85         ld hl,Ctrl_1
1088+ 8D51 CB D6            set 2,(hl)
1089+ 8D53
1090+ 8D53 C9           3 ret
1091+ 8D54
1092+ 8D54              ; -----------------------------------------------------------------
1093+ 8D54              ;
1094+ 8D54              ;   16/04/23
1095+ 8D54              ;
1096+ 8D54
1097+ 8D54 AF           Limpia_Coordenadas_X xor a
1098+ 8D55 06 06            ld b,6
1099+ 8D57 21 F1 85         ld hl,Coordenadas_X_Amadeus
1100+ 8D5A 77           1 ld (hl),a
1101+ 8D5B 23               inc hl
1102+ 8D5C 10 FC            djnz 1B
1103+ 8D5E C9               ret
1104+ 8D5F
1105+ 8D5F              ; -----------------------------------------------------------------
1106+ 8D5F              ;
1107+ 8D5F              ;   25/04/23
1108+ 8D5F              ;
1109+ 8D5F
1110+ 8D5F              Determina_resultado_comparativa
1111+ 8D5F
1112+ 8D5F 7C               ld a,h
1113+ 8D60 06 00            ld b,0
1114+ 8D62
1115+ 8D62 CD 7A 8D         call Compara_cositas
1116+ 8D65 04               inc b
1117+ 8D66 05               dec b
1118+ 8D67 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8D68
1120+ 8D68 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8D69 06 00            ld b,0
1122+ 8D6B FE 02            cp $02
1123+ 8D6D 28 09            jr z,1F
1124+ 8D6F FE FE            cp $fe
1125+ 8D71 28 05            jr z,1F
1126+ 8D73
1127+ 8D73 CD 7A 8D         call Compara_cositas
1128+ 8D76 18 01            jr 2F
1129+ 8D78
1130+ 8D78 04           1 inc b
1131+ 8D79 C9           2 ret
1132+ 8D7A
1133+ 8D7A A7           Compara_cositas and a
1134+ 8D7B 28 07            jr z,1F
1135+ 8D7D FE FF            cp $ff
1136+ 8D7F 28 03            jr z,1F
1137+ 8D81 FE 01            cp $01
1138+ 8D83 C0               ret nz
1139+ 8D84 04           1 inc b
1140+ 8D85 C9               ret
1141+ 8D86
# file closed: Disparo.asm
1037  8D86              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D86              ; ******************************************************************************************************************************************************************************************
   2+ 8D86              ;
   3+ 8D86              ; 01/23
   4+ 8D86              ;
   5+ 8D86              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D86
   7+ 8D86 CD 60 90     Draw call Prepara_draw
   8+ 8D89 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D8A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D8B 28 05        	jr z,2F
  11+ 8D8D
  12+ 8D8D 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D90 18 0C        	jr 1F
  14+ 8D92 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D95 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D98 CD 27 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D9B              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D9B CD A6 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D9E 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8DA1 CB 6F        	bit 5,a
  21+ 8DA3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DA5
  23+ 8DA5 CD BD 8D     	call Comprueba_limite_horizontal
  24+ 8DA8 CD 4D 8E     	call Comprueba_limite_vertical
  25+ 8DAB
  26+ 8DAB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DAB
  28+ 8DAB CD 9A 8F     3 call calcula_CColumnass
  29+ 8DAE CD D1 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8DB1 CD 26 90     	call Define_rutina_de_impresion
  31+ 8DB4
  32+ 8DB4 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8DB7 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8DB9 32 C9 85     	ld (Ctrl_0),a
  35+ 8DBC
  36+ 8DBC C9           	ret
  37+ 8DBD
  38+ 8DBD              ; *******************************************************************************************************************************************************************************************
  39+ 8DBD              ;	21/01/23
  40+ 8DBD              ;
  41+ 8DBD              ; 	Comprueba_limite_horizontal.
  42+ 8DBD              ;
  43+ 8DBD              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8DBD              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8DBD              ;
  46+ 8DBD              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8DBD              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8DBD              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8DBD              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8DBD
  51+ 8DBD
  52+ 8DBD
  53+ 8DBD 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8DC0 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8DC2 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8DC4 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8DC6 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8DC9 18 09            jr 6F
  59+ 8DCB CB 5F        1 bit 3,a
  60+ 8DCD 28 0A            jr z,2F
  61+ 8DCF E6 F7            and $f7
  62+ 8DD1 32 C9 85         ld (Ctrl_0),a
  63+ 8DD4 CD 27 8F     6 call Inicializacion
  64+ 8DD7 18 5B            jr 5F
  65+ 8DD9 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DDA
  67+ 8DDA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DDA              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DDA
  70+ 8DDA EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DDB 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DDE CD 2C 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DE1 67           	ld h,a
  74+ 8DE2 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DE3 CD 2C 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DE6 67           	ld h,a
  77+ 8DE7 A7           	and a
  78+ 8DE8 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DEA 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DEB 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DEE FE 02        	cp 2
  82+ 8DF0 38 1E        	jr c,3F
  83+ 8DF2 28 1C        	jr z,3F
  84+ 8DF4 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DF5 28 23            jr z,7F
  86+ 8DF7 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DF9 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DFB E1           	pop hl
  89+ 8DFC
  90+ 8DFC              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DFC              ; _para indicar con E="2" en caso necesario.
  92+ 8DFC
  93+ 8DFC E5               push hl
  94+ 8DFD C5               push bc
  95+ 8DFE CD 2C 93     	call calcula_tercio
  96+ 8E01 FE 01        	cp 1
  97+ 8E03 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E05 CD 35 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E08 28 26            jr z,9F
 100+ 8E0A 38 24            jr c,9F
 101+ 8E0C 1E 00        11 ld e,0
 102+ 8E0E 18 22            jr 8F
 103+ 8E10 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E11 28 07        	jr z, 7F
 105+ 8E13 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E15 1E 00         	ld e,0
 107+ 8E17 E1           	pop hl
 108+ 8E18 18 04        	jr 4F
 109+ 8E1A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E1C 18 15            jr 10F
 111+ 8E1E
 112+ 8E1E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E1E              ; _para indicar con E="2" en caso necesario.
 114+ 8E1E
 115+ 8E1E E5           4 push hl
 116+ 8E1F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E20 CD 2C 93     	call calcula_tercio
 118+ 8E23 FE 01        	cp 1
 119+ 8E25 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E27 CD 35 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E2A 28 04            jr z,9F
 122+ 8E2C 30 02            jr nc,9F
 123+ 8E2E 18 02        	jr 8F
 124+ 8E30 1E 02        9 ld e,2
 125+ 8E32 C1           8 pop bc
 126+ 8E33 E1           10 pop hl
 127+ 8E34 C9           5 ret
 128+ 8E35
 129+ 8E35              ; --------------------
 130+ 8E35              ;
 131+ 8E35              ; 25/08/22
 132+ 8E35
 133+ 8E35 CD 2C 93     Comprueba_centro call calcula_tercio
 134+ 8E38 67               ld h,a
 135+ 8E39 08           	ex af,af
 136+ 8E3A FE 02        	cp 2
 137+ 8E3C 38 07        	jr c,1F
 138+ 8E3E 28 05        	jr z,1F
 139+ 8E40 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E43 18 03        	jr 2F
 141+ 8E45 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E48 08           2 ex af,af
 143+ 8E49 A7               and a
 144+ 8E4A ED 42            sbc hl,bc
 145+ 8E4C C9               ret
 146+ 8E4D
 147+ 8E4D              ; *********************************************************************************************************************************************************************************************
 148+ 8E4D              ;
 149+ 8E4D              ;   16/8/22
 150+ 8E4D              ;
 151+ 8E4D              ;	Comprueba_limite_vertical
 152+ 8E4D              ;
 153+ 8E4D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E4D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E4D              ;
 156+ 8E4D
 157+ 8E4D 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E50 7D           	ld a,l
 159+ 8E51 E6 1F        	and $1F
 160+ 8E53 57           	ld d,a
 161+ 8E54 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E57 BA           	cp d 											; Límite - Posición.
 163+ 8E58 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E59 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E5C CB 47        	bit 0,a
 166+ 8E5E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E60
 168+ 8E60              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E60
 170+ 8E60 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E61 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E63
 173+ 8E63              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E63              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E63
 176+ 8E63 3A A1 85         ld a,(Coordenada_X)
 177+ 8E66 16 0F            ld d,Centro_izquierda
 178+ 8E68 A7               and a
 179+ 8E69 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E6A 28 1E            jr z,3F
 181+ 8E6C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E6E              ;                                                    ; _salimos sin modificar nada.
 183+ 8E6E 18 0E            jr 2F
 184+ 8E70 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E71 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E73
 187+ 8E73              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E73              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E73
 190+ 8E73 3A A1 85         ld a,(Coordenada_X)
 191+ 8E76 16 10            ld d,Centro_derecha
 192+ 8E78 A7               and a
 193+ 8E79 92               sub d
 194+ 8E7A 28 0E            jr z,3F
 195+ 8E7C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E7E              ;                                                    ; _salimos sin modificar nada.
 197+ 8E7E CB 43        2 bit 0,e
 198+ 8E80 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E82 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E83 CD 17 8F         call Modificaccionne
 201+ 8E86 C1           	pop bc
 202+ 8E87 CD 27 8F         call Inicializacion
 203+ 8E8A C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E8B
 205+ 8E8B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E8B
 207+ 8E8B C5           4 push bc
 208+ 8E8C 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E8F 0A           	ld a,(bc)
 210+ 8E90 3D           	dec a
 211+ 8E91 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E92 7D           	ld a,l
 213+ 8E93 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E94 CB 47        	bit 0,a
 215+ 8E96 28 03        	jr z,5F
 216+ 8E98 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E99 18 2E        	jr 7F
 218+ 8E9B
 219+ 8E9B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E9B
 221+ 8E9B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E9C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E9D 3A C9 85     	ld a,(Ctrl_0)
 224+ 8EA0 CB 4F        	bit 1,a
 225+ 8EA2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EA4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EA5
 228+ 8EA5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EA5
 230+ 8EA5 1C               inc e
 231+ 8EA6 1D               dec e
 232+ 8EA7 20 07            jr nz,12F
 233+ 8EA9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EAA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EAB 22 9D 85     	ld (Posicion_actual),hl
 236+ 8EAE 18 44        13 jr 9F
 237+ 8EB0 CB 43        12 bit 0,e
 238+ 8EB2 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8EB4              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8EB4 C1           	pop bc
 241+ 8EB5 18 D3        	jr 3B
 242+ 8EB7 80           14 add b
 243+ 8EB8 6F               ld l,a
 244+ 8EB9 22 9D 85     	ld (Posicion_actual),hl
 245+ 8EBC CD 17 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8EBF 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8EC1 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8EC3 32 C9 85         ld (Ctrl_0),a
 249+ 8EC6 F1           	pop af
 250+ 8EC7 18 2B        	jr 9F
 251+ 8EC9
 252+ 8EC9              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8EC9
 254+ 8EC9 F5           7 push af
 255+ 8ECA 3A C9 85     	ld a,(Ctrl_0)
 256+ 8ECD CB 47        	bit 0,a
 257+ 8ECF 20 1D        	jr nz,8F
 258+ 8ED1 F1           	pop af
 259+ 8ED2
 260+ 8ED2              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8ED2
 262+ 8ED2 1C           	inc e
 263+ 8ED3 1D               dec e
 264+ 8ED4 20 07            jr nz,10F
 265+ 8ED6 90           	sub b
 266+ 8ED7 6F               ld l,a
 267+ 8ED8 22 9D 85     	ld (Posicion_actual),hl
 268+ 8EDB 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8EDD              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8EDD CB 43        10 bit 0,e
 271+ 8EDF 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8EE1              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8EE1 C1           	pop bc
 274+ 8EE2 18 A6        	jr 3B
 275+ 8EE4 90           16 sub b
 276+ 8EE5 6F               ld l,a
 277+ 8EE6 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EE9 CD 17 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EEC 18 06            jr 9F
 280+ 8EEE E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EF0 32 C9 85         ld (Ctrl_0),a
 282+ 8EF3 F1           	pop af
 283+ 8EF4 C1           9 pop bc
 284+ 8EF5 1E 00        	ld e,0
 285+ 8EF7 CD 27 8F         call Inicializacion
 286+ 8EFA F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8EFB 08           	ex af,af
 288+ 8EFC F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8EFD 18 8B            jr 3B
 290+ 8EFF
 291+ 8EFF              ; --------------------
 292+ 8EFF
 293+ 8EFF 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F01 CD 7B 90     1 call PreviousScan
 295+ 8F04 10 FB            djnz 1B
 296+ 8F06 22 9D 85     	ld (Posicion_actual),hl
 297+ 8F09 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F0A C9           	ret
 299+ 8F0B
 300+ 8F0B              ; --------------------
 301+ 8F0B
 302+ 8F0B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F0D CD 6C 90     1 call NextScan
 304+ 8F10 10 FB            djnz 1B
 305+ 8F12 22 9D 85     	ld (Posicion_actual),hl
 306+ 8F15 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F16 C9           	ret
 308+ 8F17
 309+ 8F17              ; --------------------
 310+ 8F17              ;
 311+ 8F17              ;	22/01/23
 312+ 8F17              ;
 313+ 8F17              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F17              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F17              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F17
 317+ 8F17
 318+ 8F17              Modificaccionne
 319+ 8F17
 320+ 8F17 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8F1A FE 02        	cp 2
 322+ 8F1C CC FF 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F1F DC FF 8E         call c,Modifica_Pos_actual
 324+ 8F22 C8           	ret z
 325+ 8F23 CD 0B 8F         call Modifica_Pos_actual2
 326+ 8F26 C9               ret
 327+ 8F27
 328+ 8F27              ; *************************************************************************************************************************************************************************************************
 329+ 8F27              ;
 330+ 8F27              ;	13/8/22
 331+ 8F27              ;
 332+ 8F27              ;	Inicializacion
 333+ 8F27              ;
 334+ 8F27              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F27              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F27              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F27              ;
 338+ 8F27              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F27              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F27              ;	_ desaparece/aparece.
 341+ 8F27
 342+ 8F27              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F27              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F27              ;
 345+ 8F27              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F27              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F27              ; 		   [E] ="0"
 348+ 8F27
 349+ 8F27              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F27
 351+ 8F27 CD 2C 93     Inicializacion call calcula_tercio
 352+ 8F2A 28 36        	jr z,primit
 353+ 8F2C E6 02        	and 2
 354+ 8F2E 20 07        	jr nz,segmit
 355+ 8F30 7D           	ld a,l
 356+ 8F31 FE 7F        	cp $7f
 357+ 8F33 38 2D        	jr c,primit
 358+ 8F35 28 2B        	jr z,primit
 359+ 8F37 CD 94 8F     segmit call column
 360+ 8F3A 38 13        	jr c,tercuad
 361+ 8F3C 3E 04        cuarcuad ld a,4
 362+ 8F3E 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F41 21 20 48     	ld hl,$4820
 364+ 8F44 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F47 21 D5 85     	ld hl,Limite_vertical
 366+ 8F4A 36 0D        	ld (hl),$0d
 367+ 8F4C 08           	ex af,af
 368+ 8F4D 18 3C        	jr 1F
 369+ 8F4F              tercuad
 370+ 8F4F 3E 03        	ld a,3
 371+ 8F51 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F54 21 20 48     	ld hl,$4820
 373+ 8F57 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F5A 21 D5 85     	ld hl,Limite_vertical
 375+ 8F5D 36 12        	ld (hl),$12
 376+ 8F5F 08           	ex af,af
 377+ 8F60 18 29        	jr 1F
 378+ 8F62 CD 94 8F     primit call column
 379+ 8F65 38 13        	jr c, primcuad
 380+ 8F67              segcuad
 381+ 8F67 3E 02        	ld a,2
 382+ 8F69 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F6C 21 C0 4F     	ld hl,$4fc0
 384+ 8F6F 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F72 21 D5 85     	ld hl,Limite_vertical
 386+ 8F75 36 0D        	ld (hl),$0d
 387+ 8F77 08           	ex af,af
 388+ 8F78 18 11        	jr 1F
 389+ 8F7A              primcuad
 390+ 8F7A 3E 01        	ld a,1
 391+ 8F7C 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F7F 21 C0 4F     	ld hl,$4fc0
 393+ 8F82 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F85 21 D5 85     	ld hl,Limite_vertical
 395+ 8F88 36 12        	ld (hl),$12
 396+ 8F8A 08           	ex af,af
 397+ 8F8B CD 58 96     1 call Genera_coordenadas
 398+ 8F8E 21 C9 85     	ld hl,Ctrl_0
 399+ 8F91 CB EE        	set 5,(hl)
 400+ 8F93 C9           	ret
 401+ 8F94
 402+ 8F94              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F94
 404+ 8F94              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F94              ;
 406+ 8F94              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F94
 408+ 8F94 7D           column ld a,l
 409+ 8F95 E6 1F        	and $1f
 410+ 8F97 FE 10         	cp $10
 411+ 8F99 C9            	ret
 412+ 8F9A
 413+ 8F9A              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F9A              ;
 415+ 8F9A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F9A              ;
 417+ 8F9A              ; 14/12/22
 418+ 8F9A              ;
 419+ 8F9A              ;	Modifica: A y BC.
 420+ 8F9A
 421+ 8F9A 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F9D E6 01        	and 1
 423+ 8F9F 28 17        	jr z,1F
 424+ 8FA1
 425+ 8FA1              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FA1
 427+ 8FA1 3A A1 85     	ld a,(Coordenada_X)
 428+ 8FA4 47           	ld b,a
 429+ 8FA5 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FA6 79           	ld a,c
 431+ 8FA7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FA8 38 08        	jr c,2F
 433+ 8FAA 47           	ld b,a
 434+ 8FAB 79           	ld a,c
 435+ 8FAC 90           	sub b
 436+ 8FAD 32 D2 85     	ld (Columnas),a
 437+ 8FB0 18 1B        	jr 4F
 438+ 8FB2 79           2 ld a,c
 439+ 8FB3 32 D2 85     	ld (Columnas),a
 440+ 8FB6 18 15        	jr 4F
 441+ 8FB8
 442+ 8FB8              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8FB8
 444+ 8FB8 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8FBB 81           	add c
 446+ 8FBC 3D           	dec a
 447+ 8FBD D6 1F        	sub $1f
 448+ 8FBF 38 08        	jr c,3F
 449+ 8FC1 47           	ld b,a
 450+ 8FC2 79           	ld a,c
 451+ 8FC3 90           	sub b
 452+ 8FC4 32 D2 85     	ld (Columnas),a
 453+ 8FC7 18 04        	jr 4F
 454+ 8FC9 79           3 ld a,c
 455+ 8FCA 32 D2 85     	ld (Columnas),a
 456+ 8FCD D9           4 exx
 457+ 8FCE 4F           	ld c,a
 458+ 8FCF D9           	exx
 459+ 8FD0 C9            ret
 460+ 8FD1
 461+ 8FD1              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FD1              ;
 463+ 8FD1              ; 7/1/23
 464+ 8FD1              ;
 465+ 8FD1              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FD1              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FD1              ;
 468+ 8FD1              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FD1              ;	DESTRUYE: HL,B Y A.
 470+ 8FD1
 471+ 8FD1 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FD4 FE 02        	cp 2
 473+ 8FD6 38 18        	jr c,1F
 474+ 8FD8 28 16        	jr z,1F
 475+ 8FDA E6 01        	and 1
 476+ 8FDC 28 0D        	jr z,3F
 477+ 8FDE
 478+ 8FDE              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FDE
 480+ 8FDE CD 1A 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FE1
 482+ 8FE1 7D           9 ld a,l
 483+ 8FE2 E6 1F        	and $1f
 484+ 8FE4 28 2A        	jr z,7F
 485+ 8FE6 2B           	dec hl
 486+ 8FE7 10 F8        	djnz 9B
 487+ 8FE9 18 25        	jr 7F
 488+ 8FEB
 489+ 8FEB              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FEB
 491+ 8FEB 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FEE 18 20        	jr 7F
 493+ 8FF0
 494+ 8FF0 28 14        1 jr z,2F
 495+ 8FF2
 496+ 8FF2              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FF2
 498+ 8FF2 CD 1A 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FF5 7D           4 ld a,l
 500+ 8FF6 E6 1F        	and $1f
 501+ 8FF8 28 03        	jr z,6F
 502+ 8FFA 2B           	dec hl
 503+ 8FFB 10 F8        	djnz 4B
 504+ 8FFD 06 0F        6 ld b,15
 505+ 8FFF CD 7B 90     5 call PreviousScan
 506+ 9002 10 FB        	djnz 5B
 507+ 9004 18 0A        	jr 7F
 508+ 9006
 509+ 9006              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9006
 511+ 9006 CD 1A 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9009 06 0F        	ld b,15
 513+ 900B CD 7B 90     8 call PreviousScan
 514+ 900E 10 FB        	djnz 8B
 515+ 9010
 516+ 9010 E5           7 push hl
 517+ 9011 DD E1        	pop ix
 518+ 9013
 519+ 9013 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 9016 E5           	push hl
 521+ 9017 FD E1        	pop iy
 522+ 9019
 523+ 9019 C9           	ret
 524+ 901A
 525+ 901A              ; --------------------------------------------------------------------------------------------------------------------
 526+ 901A              ;
 527+ 901A              ;	2/1/23
 528+ 901A              ;
 529+ 901A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 901A              ;
 531+ 901A              ;	Tras esta rutina tenemos:
 532+ 901A              ;
 533+ 901A              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 901A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 901A              ;
 536+ 901A              ;	DESTRUYE!!!!! HL,B y A.
 537+ 901A
 538+ 901A 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 901D 3A D2 85     	ld a,(Columnas)
 540+ 9020 3D           	dec a
 541+ 9021 20 01        	jr nz,1F
 542+ 9023 3C           	inc a
 543+ 9024 47           1 ld b,a
 544+ 9025 C9           	ret
 545+ 9026
 546+ 9026              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9026              ;
 548+ 9026              ;	3/1/23
 549+ 9026              ;
 550+ 9026              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9026              ;
 552+ 9026              ;	Destruye: A,B,HL y DE.
 553+ 9026
 554+ 9026              Define_rutina_de_impresion
 555+ 9026
 556+ 9026 3A 9C 85     	ld a,(Columns)
 557+ 9029 47           	ld b,a
 558+ 902A 3A D2 85     	ld a,(Columnas)
 559+ 902D B8           	cp b
 560+ 902E 20 0D        	jr nz,2f
 561+ 9030
 562+ 9030              ;	La entidad se imprime entera.
 563+ 9030
 564+ 9030 21 FC 90     	ld hl, Indice_entidades_completas
 565+ 9033 E6 01        	and 1
 566+ 9035 28 02        	jr z,1F
 567+ 9037
 568+ 9037 23           	inc hl
 569+ 9038 23           	inc hl
 570+ 9039
 571+ 9039 CD 16 88     1 call Extrae_address
 572+ 903C C9           	ret		;	ret
 573+ 903D
 574+ 903D              ;	La entidad no se imprime entera en pantalla.
 575+ 903D
 576+ 903D 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9040 E6 01        	and 1
 578+ 9042 28 17        	jr z,3F
 579+ 9044
 580+ 9044              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9044
 582+ 9044 21 00 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9047 3A 9C 85     4 ld a,(Columns)
 584+ 904A E6 01        	and 1
 585+ 904C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 904E
 587+ 904E 23           	inc hl
 588+ 904F 23           	inc hl
 589+ 9050
 590+ 9050 3A D2 85     	ld a,(Columnas)
 591+ 9053 E6 01        	and 1
 592+ 9055 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 9057
 594+ 9057 23           	inc hl
 595+ 9058 23           	inc hl
 596+ 9059
 597+ 9059 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 905B
 599+ 905B 21 06 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 905E 18 E7        	jr 4B
 601+ 9060
 602+ 9060              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9060              ;
 604+ 9060              ;	Prepara_draw
 605+ 9060              ;
 606+ 9060              ;	Es una rutina de carga.
 607+ 9060              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9060              ;
 609+ 9060              ;	FUNCIONAMIENTO:
 610+ 9060              ;
 611+ 9060              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9060              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9060              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9060              ;
 615+ 9060              ;	DESTRUYE:
 616+ 9060              ;
 617+ 9060              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9060
 619+ 9060 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9063 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9064 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9065 4E           	ld c,(hl)
 623+ 9066 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 9069 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 906B C9           	ret
 626+ 906C
 627+ 906C              ;----------------------------------------------------------------------------------------------------------------
 628+ 906C              ;
 629+ 906C              ;	5/08/22
 630+ 906C              ;
 631+ 906C              ;   NextScan.
 632+ 906C              ;
 633+ 906C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 906C              ;
 635+ 906C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 906C              ;
 637+ 906C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 906C              ;
 639+ 906C              ;       DESTRUIDOS: AF y HL !!!
 640+ 906C              ;
 641+ 906C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 906C              ;
 643+ 906C
 644+ 906C 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 906D 7C               ld a,h
 646+ 906E E6 07            and 7
 647+ 9070 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9071
 649+ 9071 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9072 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9074 6F               ld l,a
 652+ 9075 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9076
 654+ 9076 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9077 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9079 67               ld h,a
 657+ 907A C9               ret
 658+ 907B
 659+ 907B              ;----------------------------------------------------------------------------------------------------------------
 660+ 907B              ;
 661+ 907B              ;	5/08/22
 662+ 907B              ;
 663+ 907B              ;   PreviousScan.
 664+ 907B              ;
 665+ 907B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 907B              ;
 667+ 907B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 907B              ;
 669+ 907B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 907B              ;
 671+ 907B              ;       DESTRUIDOS: AF y HL !!!
 672+ 907B              ;
 673+ 907B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 907B              ;
 675+ 907B
 676+ 907B 7C           PreviousScan ld a,h
 677+ 907C 25               dec h               ; Dec H.
 678+ 907D E6 07            and 7
 679+ 907F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9080
 681+ 9080 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9081 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9083 6F               ld l,a
 684+ 9084 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9085
 686+ 9085 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9086 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9088 67               ld h,a
 689+ 9089 C9               ret
 690+ 908A
 691+ 908A              ; -----------------------------------------------------------------------------------
 692+ 908A              ;
 693+ 908A              ;	28/2/23
 694+ 908A              ;
 695+ 908A              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 908A              ;	Extrae fotos de Album_de_fotos.
 697+ 908A
 698+ 908A              Extrae_foto_entidades
 699+ 908A
 700+ 908A 3A DE 85     	ld a,(Numero_de_malotes)
 701+ 908D A7           	and a
 702+ 908E C8           	ret z
 703+ 908F ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9093 31 00 70     	ld sp,Album_de_fotos
 705+ 9096
 706+ 9096 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 9098 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 9099 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 909A
 710+ 909A ED 73 E1 85  	ld (Stack_2),sp
 711+ 909E ED 7B DF 85  	ld sp,(Stack)
 712+ 90A2
 713+ 90A2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90A2
 715+ 90A2 3E CD        	ld a,$cd
 716+ 90A4 32 AC 90     	ld (Imprime),a
 717+ 90A7 EB           	ex de,hl
 718+ 90A8 22 AD 90     	ld (Imprime+1),hl
 719+ 90AB EB           	ex de,hl
 720+ 90AC
 721+ 90AC              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90AC
 723+ 90AC 00 00 00     Imprime db 0,0,0
 724+ 90AF
 725+ 90AF 3A DE 85     	ld a,(Numero_de_malotes)
 726+ 90B2 3D           	dec a
 727+ 90B3 28 09        	jr z,1F
 728+ 90B5 32 DE 85      	ld (Numero_de_malotes),a
 729+ 90B8
 730+ 90B8 ED 7B E1 85   	ld sp,(Stack_2)
 731+ 90BC 18 D8        	jr 2B
 732+ 90BE
 733+ 90BE AF           1 xor a
 734+ 90BF 32 E1 85     	ld (Stack_2),a
 735+ 90C2 C9           	ret
 736+ 90C3
 737+ 90C3              ; -----------------------------------------------------------------------------------
 738+ 90C3              ;
 739+ 90C3              ;	28/2/23
 740+ 90C3              ;
 741+ 90C3              ;	Pinta los disparos generados.
 742+ 90C3
 743+ 90C3              Extrae_foto_disparos
 744+ 90C3
 745+ 90C3 3A E7 85     	ld a,(Numero_de_disparotes)
 746+ 90C6 A7           	and a
 747+ 90C7 C8           	ret z
 748+ 90C8 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 90CC 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 90CF
 751+ 90CF FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 90D1 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 90D2 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 90D3
 755+ 90D3 ED 73 E1 85  	ld (Stack_2),sp
 756+ 90D7 ED 7B DF 85  	ld sp,(Stack)
 757+ 90DB
 758+ 90DB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 90DB
 760+ 90DB 3E CD        	ld a,$cd
 761+ 90DD 32 E5 90     	ld (Imprime2),a
 762+ 90E0 EB           	ex de,hl
 763+ 90E1 22 E6 90     	ld (Imprime2+1),hl
 764+ 90E4 EB           	ex de,hl
 765+ 90E5
 766+ 90E5              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 90E5
 768+ 90E5 00 00 00     Imprime2 db 0,0,0
 769+ 90E8
 770+ 90E8 3A E7 85     	ld a,(Numero_de_disparotes)
 771+ 90EB 3D           	dec a
 772+ 90EC 28 09        	jr z,1F
 773+ 90EE 32 E7 85      	ld (Numero_de_disparotes),a
 774+ 90F1
 775+ 90F1 ED 7B E1 85  	ld sp,(Stack_2)
 776+ 90F5 18 D8        	jr 2B
 777+ 90F7
 778+ 90F7 AF           1 xor a
 779+ 90F8 32 E1 85     	ld (Stack_2),a
 780+ 90FB C9           	ret
 781+ 90FC
# file closed: Draw_XOR.asm
1038  90FC              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90FC              ;   índices de Rutinas de impresión.
   2+ 90FC
   3+ 90FC 0C 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90FE 39 91            defw Pinta_Amadeus_3x2
   5+ 9100
   6+ 9100 8F 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9102 2F 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9104 E3 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9106
  10+ 9106 B9 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9108 BD 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 910A 71 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 910C
  14+ 910C
  15+ 910C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 910C              ;
  17+ 910C              ;   12/12/22
  18+ 910C              ;
  19+ 910C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 910C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 910C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 910C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 910C              ;
  24+ 910C              ;   Modifica: DE y HL.
  25+ 910C
  26+ 910C ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9110 FD F9        	ld sp,iy
  28+ 9112 06 10            ld b,16
  29+ 9114 D1           1 pop de
  30+ 9115 7B               ld a,e
  31+ 9116 AE               xor (hl)
  32+ 9117 77           	ld (hl),a
  33+ 9118 23           	inc hl
  34+ 9119 7A               ld a,d
  35+ 911A AE               xor (hl)
  36+ 911B 77           	ld (hl),a
  37+ 911C 2B           	dec hl
  38+ 911D 24           	inc h
  39+ 911E 7C               ld a,h
  40+ 911F E6 07            and 7
  41+ 9121 20 0A            jr nz,2F
  42+ 9123 7D               ld a,l
  43+ 9124 C6 20            add a,$20
  44+ 9126 6F               ld l,a
  45+ 9127 38 04            jr c,2F
  46+ 9129 7C               ld a,h
  47+ 912A D6 08            sub 8
  48+ 912C 67               ld h,a
  49+ 912D 7C           2 ld a,h
  50+ 912E FE 58            cp $58
  51+ 9130 28 02            jr z,3F
  52+ 9132 10 E0            djnz 1B
  53+ 9134 ED 7B DF 85  3 ld sp,(Stack)
  54+ 9138 C9           	ret
  55+ 9139
  56+ 9139 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 913D FD F9        	ld sp,iy
  58+ 913F 06 08            ld b,8
  59+ 9141 D1           1 pop de
  60+ 9142 7B               ld a,e
  61+ 9143 AE               xor (hl)
  62+ 9144 77           	ld (hl),a
  63+ 9145 23           	inc hl
  64+ 9146 7A               ld a,d
  65+ 9147 AE               xor (hl)
  66+ 9148 77           	ld (hl),a
  67+ 9149 23           	inc hl
  68+ 914A D1           	pop de
  69+ 914B 7B               ld a,e
  70+ 914C AE               xor (hl)
  71+ 914D 77           	ld (hl),a
  72+ 914E 2B           	dec hl
  73+ 914F 2B           	dec hl
  74+ 9150 24           	inc h
  75+ 9151 7C               ld a,h
  76+ 9152 E6 07            and 7
  77+ 9154 20 0A            jr nz,2F
  78+ 9156 7D               ld a,l
  79+ 9157 C6 20            add a,$20
  80+ 9159 6F               ld l,a
  81+ 915A 38 04            jr c,2F
  82+ 915C 7C               ld a,h
  83+ 915D D6 08            sub 8
  84+ 915F 67               ld h,a
  85+ 9160 7C           2 ld a,h
  86+ 9161 FE 58            cp $58
  87+ 9163 28 25            jr z,4F
  88+ 9165 7A               ld a,d
  89+ 9166 AE               xor (hl)
  90+ 9167 77               ld (hl),a
  91+ 9168 D1           	pop de
  92+ 9169 23           	inc hl
  93+ 916A 7B               ld a,e
  94+ 916B AE               xor (hl)
  95+ 916C 77           	ld (hl),a
  96+ 916D 23           	inc hl
  97+ 916E 7A               ld a,d
  98+ 916F AE               xor (hl)
  99+ 9170 77           	ld (hl),a
 100+ 9171 2B           	dec hl
 101+ 9172 2B           	dec hl
 102+ 9173 24           	inc h
 103+ 9174 7C               ld a,h
 104+ 9175 E6 07            and 7
 105+ 9177 20 0A            jr nz,3F
 106+ 9179 7D               ld a,l
 107+ 917A C6 20            add a,$20
 108+ 917C 6F               ld l,a
 109+ 917D 38 04            jr c,3F
 110+ 917F 7C               ld a,h
 111+ 9180 D6 08            sub 8
 112+ 9182 67               ld h,a
 113+ 9183 7C           3 ld a,h
 114+ 9184 FE 58            cp $58
 115+ 9186 28 02            jr z,4F
 116+ 9188 10 B7            djnz 1B
 117+ 918A ED 7B DF 85  4 ld sp,(Stack)
 118+ 918E C9           	ret
 119+ 918F
 120+ 918F              ; ---------------------------------------------------
 121+ 918F
 122+ 918F ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9193 FD F9        	ld sp,iy
 124+ 9195
 125+ 9195              ; >>>
 126+ 9195
 127+ 9195 06 10            ld b,16
 128+ 9197 D1           1 pop de
 129+ 9198 7A           	ld a,d
 130+ 9199 AE           	xor (hl)
 131+ 919A 77           	ld (hl),a
 132+ 919B 24           	inc h
 133+ 919C 7C               ld a,h
 134+ 919D E6 07            and 7
 135+ 919F 20 0C            jr nz,2F
 136+ 91A1 7D               ld a,l
 137+ 91A2 C6 20            add a,$20
 138+ 91A4 6F               ld l,a
 139+ 91A5 38 06            jr c,2F
 140+ 91A7 7C               ld a,h
 141+ 91A8 D6 08            sub 8
 142+ 91AA 67               ld h,a
 143+ 91AB 18 00            jr 2F
 144+ 91AD 7C           2 ld a,h
 145+ 91AE FE 58            cp $58
 146+ 91B0 28 02            jr z,3F
 147+ 91B2 10 E3            djnz 1B
 148+ 91B4 ED 7B DF 85  3 ld sp,(Stack)
 149+ 91B8 C9           	ret
 150+ 91B9
 151+ 91B9 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 91BD FD F9        	ld sp,iy
 153+ 91BF
 154+ 91BF              ; >>>
 155+ 91BF
 156+ 91BF 06 10            ld b,16
 157+ 91C1 D1           1 pop de
 158+ 91C2 7B           	ld a,e
 159+ 91C3 AE           	xor (hl)
 160+ 91C4 77           	ld (hl),a
 161+ 91C5 24           	inc h
 162+ 91C6 7C               ld a,h
 163+ 91C7 E6 07            and 7
 164+ 91C9 20 0C            jr nz,2F
 165+ 91CB 7D               ld a,l
 166+ 91CC C6 20            add a,$20
 167+ 91CE 6F               ld l,a
 168+ 91CF 38 06            jr c,2F
 169+ 91D1 7C               ld a,h
 170+ 91D2 D6 08            sub 8
 171+ 91D4 67               ld h,a
 172+ 91D5 18 00            jr 2F
 173+ 91D7 7C           2 ld a,h
 174+ 91D8 FE 58            cp $58
 175+ 91DA 28 02            jr z,3F
 176+ 91DC 10 E3            djnz 1B
 177+ 91DE ED 7B DF 85  3 ld sp,(Stack)
 178+ 91E2 C9           	ret
 179+ 91E3
 180+ 91E3              ; ---------------------------------------------------
 181+ 91E3
 182+ 91E3 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91E7 FD F9        	ld sp,iy
 184+ 91E9 06 08            ld b,8
 185+ 91EB D1           1 pop de
 186+ 91EC 7A           	ld a,d
 187+ 91ED AE           	xor (hl)
 188+ 91EE 77           	ld (hl),a
 189+ 91EF 23           	inc hl
 190+ 91F0 D1           	pop de
 191+ 91F1 7B           	ld a,e
 192+ 91F2 AE           	xor (hl)
 193+ 91F3 77           	ld (hl),a
 194+ 91F4 2B           	dec hl
 195+ 91F5 24            	inc h
 196+ 91F6 7C               ld a,h
 197+ 91F7 E6 07            and 7
 198+ 91F9 20 0A            jr nz,2F
 199+ 91FB 7D               ld a,l
 200+ 91FC C6 20            add a,$20
 201+ 91FE 6F               ld l,a
 202+ 91FF 38 04            jr c,2F
 203+ 9201 7C               ld a,h
 204+ 9202 D6 08            sub 8
 205+ 9204 67               ld h,a
 206+ 9205 7C           2 ld a,h
 207+ 9206 FE 58            cp $58
 208+ 9208 28 20            jr z,4F
 209+ 920A D1               pop de
 210+ 920B 7B           	ld a,e
 211+ 920C AE           	xor (hl)
 212+ 920D 77           	ld (hl),a
 213+ 920E 23           	inc hl
 214+ 920F 7A           	ld a,d
 215+ 9210 AE           	xor (hl)
 216+ 9211 77           	ld (hl),a
 217+ 9212 2B           	dec hl
 218+ 9213 24           	inc h
 219+ 9214 7C               ld a,h
 220+ 9215 E6 07            and 7
 221+ 9217 20 0A            jr nz,3F
 222+ 9219 7D               ld a,l
 223+ 921A C6 20            add a,$20
 224+ 921C 6F               ld l,a
 225+ 921D 38 04            jr c,3F
 226+ 921F 7C               ld a,h
 227+ 9220 D6 08            sub 8
 228+ 9222 67               ld h,a
 229+ 9223 7C           3 ld a,h
 230+ 9224 FE 58            cp $58
 231+ 9226 28 02            jr z,4F
 232+ 9228 10 C1            djnz 1B
 233+ 922A ED 7B DF 85  4 ld sp,(Stack)
 234+ 922E C9           	ret
 235+ 922F
 236+ 922F ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9233 FD F9        	ld sp,iy
 238+ 9235 06 08            ld b,8
 239+ 9237 D1           1 pop de
 240+ 9238 D1           	pop de
 241+ 9239 7B           	ld a,e
 242+ 923A AE           	xor (hl)
 243+ 923B 77           	ld (hl),a
 244+ 923C 24            	inc h
 245+ 923D 7C               ld a,h
 246+ 923E E6 07            and 7
 247+ 9240 20 0A            jr nz,2F
 248+ 9242 7D               ld a,l
 249+ 9243 C6 20            add a,$20
 250+ 9245 6F               ld l,a
 251+ 9246 38 04            jr c,2F
 252+ 9248 7C               ld a,h
 253+ 9249 D6 08            sub 8
 254+ 924B 67               ld h,a
 255+ 924C 7C           2 ld a,h
 256+ 924D FE 58            cp $58
 257+ 924F 28 1B            jr z,4F
 258+ 9251 D1               pop de
 259+ 9252 7A           	ld a,d
 260+ 9253 AE           	xor (hl)
 261+ 9254 77           	ld (hl),a
 262+ 9255 24           	inc h
 263+ 9256 7C               ld a,h
 264+ 9257 E6 07            and 7
 265+ 9259 20 0A            jr nz,3F
 266+ 925B 7D               ld a,l
 267+ 925C C6 20            add a,$20
 268+ 925E 6F               ld l,a
 269+ 925F 38 04            jr c,3F
 270+ 9261 7C               ld a,h
 271+ 9262 D6 08            sub 8
 272+ 9264 67               ld h,a
 273+ 9265 7C           3 ld a,h
 274+ 9266 FE 58            cp $58
 275+ 9268 28 02            jr z,4F
 276+ 926A 10 CB            djnz 1B
 277+ 926C ED 7B DF 85  4 ld sp,(Stack)
 278+ 9270 C9           	ret
 279+ 9271
 280+ 9271 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9275 FD F9        	ld sp,iy
 282+ 9277 06 08            ld b,8
 283+ 9279 D1           1 pop de
 284+ 927A 7B           	ld a,e
 285+ 927B AE           	xor (hl)
 286+ 927C 77           	ld (hl),a
 287+ 927D 23           	inc hl
 288+ 927E 7A           	ld a,d
 289+ 927F AE           	xor (hl)
 290+ 9280 77           	ld (hl),a
 291+ 9281 2B           	dec hl
 292+ 9282 24             	inc h
 293+ 9283 7C               ld a,h
 294+ 9284 E6 07            and 7
 295+ 9286 20 0A            jr nz,2F
 296+ 9288 7D               ld a,l
 297+ 9289 C6 20            add a,$20
 298+ 928B 6F               ld l,a
 299+ 928C 38 04            jr c,2F
 300+ 928E 7C               ld a,h
 301+ 928F D6 08            sub 8
 302+ 9291 67               ld h,a
 303+ 9292 7C           2 ld a,h
 304+ 9293 FE 58            cp $58
 305+ 9295 28 21            jr z,4F
 306+ 9297 D1               pop de
 307+ 9298 7A           	ld a,d
 308+ 9299 AE           	xor (hl)
 309+ 929A 77           	ld (hl),a
 310+ 929B 23           	inc hl
 311+ 929C D1               pop de
 312+ 929D 7B           	ld a,e
 313+ 929E AE           	xor (hl)
 314+ 929F 77           	ld (hl),a
 315+ 92A0 2B           	dec hl
 316+ 92A1 24           	inc h
 317+ 92A2 7C               ld a,h
 318+ 92A3 E6 07            and 7
 319+ 92A5 20 0A            jr nz,3F
 320+ 92A7 7D               ld a,l
 321+ 92A8 C6 20            add a,$20
 322+ 92AA 6F               ld l,a
 323+ 92AB 38 04            jr c,3F
 324+ 92AD 7C               ld a,h
 325+ 92AE D6 08            sub 8
 326+ 92B0 67               ld h,a
 327+ 92B1 7C           3 ld a,h
 328+ 92B2 FE 58            cp $58
 329+ 92B4 28 02            jr z,4F
 330+ 92B6 10 C1            djnz 1B
 331+ 92B8 ED 7B DF 85  4 ld sp,(Stack)
 332+ 92BC C9           	ret
 333+ 92BD
 334+ 92BD ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 92C1 FD F9        	ld sp,iy
 336+ 92C3 06 08            ld b,8
 337+ 92C5 D1           1 pop de
 338+ 92C6 7B           	ld a,e
 339+ 92C7 AE           	xor (hl)
 340+ 92C8 77           	ld (hl),a
 341+ 92C9 24            	inc h
 342+ 92CA 7C               ld a,h
 343+ 92CB E6 07            and 7
 344+ 92CD 20 0A            jr nz,2F
 345+ 92CF 7D               ld a,l
 346+ 92D0 C6 20            add a,$20
 347+ 92D2 6F               ld l,a
 348+ 92D3 38 04            jr c,2F
 349+ 92D5 7C               ld a,h
 350+ 92D6 D6 08            sub 8
 351+ 92D8 67               ld h,a
 352+ 92D9 7C           2 ld a,h
 353+ 92DA FE 58            cp $58
 354+ 92DC 28 1C            jr z,4F
 355+ 92DE D1               pop de
 356+ 92DF 7A           	ld a,d
 357+ 92E0 AE           	xor (hl)
 358+ 92E1 77           	ld (hl),a
 359+ 92E2 24           	inc h
 360+ 92E3 7C               ld a,h
 361+ 92E4 E6 07            and 7
 362+ 92E6 20 0A            jr nz,3F
 363+ 92E8 7D               ld a,l
 364+ 92E9 C6 20            add a,$20
 365+ 92EB 6F               ld l,a
 366+ 92EC 38 04            jr c,3F
 367+ 92EE 7C               ld a,h
 368+ 92EF D6 08            sub 8
 369+ 92F1 67               ld h,a
 370+ 92F2 7C           3 ld a,h
 371+ 92F3 FE 58            cp $58
 372+ 92F5 28 03            jr z,4F
 373+ 92F7 D1               pop de
 374+ 92F8 10 CB            djnz 1B
 375+ 92FA ED 7B DF 85  4 ld sp,(Stack)
 376+ 92FE C9           	ret
 377+ 92FF
 378+ 92FF              ; ---------------------------------------------------
 379+ 92FF              ;
 380+ 92FF              ;   27/02/23
 381+ 92FF              ;
 382+ 92FF              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92FF              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92FF              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92FF
 386+ 92FF ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 9303 FD F9            ld sp,iy
 388+ 9305 06 02            ld b,2
 389+ 9307 D1           1 pop de
 390+ 9308 7B               ld a,e
 391+ 9309 AE               xor (hl)
 392+ 930A 77               ld (hl),a
 393+ 930B 23               inc hl
 394+ 930C 7A               ld a,d
 395+ 930D AE               xor (hl)
 396+ 930E 77               ld (hl),a
 397+ 930F 2B               dec hl
 398+ 9310
 399+ 9310 24               inc h
 400+ 9311 7C               ld a,h
 401+ 9312 E6 07            and 7
 402+ 9314 20 0A            jr nz,2F
 403+ 9316 7D               ld a,l
 404+ 9317 C6 20            add a,$20
 405+ 9319 6F               ld l,a
 406+ 931A 38 04            jr c,2F
 407+ 931C 7C               ld a,h
 408+ 931D D6 08            sub 8
 409+ 931F 67               ld h,a
 410+ 9320 7C           2 ld a,h
 411+ 9321 FE 58            cp $58
 412+ 9323 28 02            jr z,3F
 413+ 9325
 414+ 9325 10 E0            djnz 1B
 415+ 9327 ED 7B DF 85  3 ld sp,(Stack)
 416+ 932B C9               ret
 417+ 932C
# file closed: Rutinas_de_impresion_sprites.asm
1039  932C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 932C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 932C              ;
   3+ 932C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 932C              ;
   5+ 932C              ; *****************************************************************************************************************************************************************************************
   6+ 932C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 932C
   8+ 932C 7C           calcula_tercio ld a,h
   9+ 932D E6 18        	and $18
  10+ 932F CB 2F        	sra a
  11+ 9331 CB 2F        	sra a
  12+ 9333 CB 2F        	sra a
  13+ 9335 C9           	ret
  14+ 9336
# file closed: calcula_tercio.asm
1040  9336              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9336              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9336              ;
   3+ 9336              ;
   4+ 9336              ;	CLS.
   5+ 9336              ;
   6+ 9336              ;	Limpia la pantalla y define sus atributos.
   7+ 9336              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9336              ;
   9+ 9336              ;	COLORES: 0 ..... NEGRO
  10+ 9336              ;    		 1 ..... AZUL
  11+ 9336              ; 			 2 ..... ROJO
  12+ 9336              ;			 3 ..... MAGENTA
  13+ 9336              ; 			 4 ..... VERDE
  14+ 9336              ; 			 5 ..... CIAN
  15+ 9336              ;			 6 ..... AMARILLO
  16+ 9336              ; 			 7 ..... BLANCO
  17+ 9336              ;
  18+ 9336              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9336              ;
  20+ 9336              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9336
  22+ 9336
  23+ 9336 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9339 11 01 40     	LD DE,$4001
  25+ 933C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 933F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9341 ED B0        	LDIR
  28+ 9343 01 FF 02     	LD BC,767
  29+ 9346 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9347 ED B0        	LDIR
  31+ 9349 C9           	ret
  32+ 934A
# file closed: Cls.asm
1041  934A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 934A              ; ******************************************************************************************************************************************************************************************
   2+ 934A              ;
   3+ 934A              ;   22/01/23
   4+ 934A              ;
   5+ 934A              ;	Mov_down
   6+ 934A              ;
   7+ 934A              ; 	Mueve el Sprite X px hacia abajo.
   8+ 934A              ;
   9+ 934A              ;
  10+ 934A 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 934D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 934F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 934F              ; 																	; _ en el caso de que no lo haya.
  14+ 934F 3A B3 85     	ld a,(Vel_down)
  15+ 9352 47           	ld b,a
  16+ 9353 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9356 CD 2C 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9359 E6 02        	and 2
  19+ 935B 28 0F        	jr z,1F
  20+ 935D
  21+ 935D              ; Nos encontramos en el último tercio de pantalla.
  22+ 935D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 935D
  24+ 935D 7C           	ld a,h
  25+ 935E FE 57        	cp $57
  26+ 9360 20 0A        	jr nz,1F
  27+ 9362 7D           	ld a,l
  28+ 9363 C6 20        	add $20
  29+ 9365 30 05        	jr nc,1F
  30+ 9367
  31+ 9367              ; ------------------------------
  32+ 9367 CD 42 96     	call Reaparece_arriba
  33+ 936A              ;	call Reinicio
  34+ 936A              ; ------------------------------
  35+ 936A
  36+ 936A 18 08        	jr 3F
  37+ 936C CD 6C 90     1 call NextScan
  38+ 936F 22 9D 85     	ld (Posicion_actual),hl
  39+ 9372 10 E2            djnz 2B
  40+ 9374 CD 58 96     3 call Genera_coordenadas
  41+ 9377 C9           	ret
  42+ 9378
  43+ 9378              ; ******************************************************************************************************************************************************************************************
  44+ 9378              ;
  45+ 9378              ;   22/01/23
  46+ 9378              ;
  47+ 9378              ;	Mov_up
  48+ 9378              ;
  49+ 9378              ; 	Mueve el Sprite hacia arriba.
  50+ 9378              ;
  51+ 9378              ;
  52+ 9378 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 937B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 937D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 937D              ; 																		; _ en el caso de que no lo haya.
  56+ 937D 3A B2 85     	ld a,(Vel_up)
  57+ 9380 47           	ld b,a
  58+ 9381 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9384 CD 2C 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9387 A7           	and a
  61+ 9388 20 10        	jr nz,1F
  62+ 938A
  63+ 938A              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 938A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 938A
  66+ 938A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 938B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 938D 20 0B            jr nz,1F
  69+ 938F 7D               ld a,l
  70+ 9390 D6 20            sub $20
  71+ 9392 30 06            jr nc,1F
  72+ 9394 25               dec h
  73+ 9395
  74+ 9395              ; -----------------------------
  75+ 9395 CD 32 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9398              ;	call Reinicio
  77+ 9398              ; -----------------------------
  78+ 9398
  79+ 9398 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 939A CD 7B 90     1 call PreviousScan
  81+ 939D 22 9D 85     	ld (Posicion_actual),hl
  82+ 93A0 10 E2            djnz 3B
  83+ 93A2 CD 58 96     2 call Genera_coordenadas
  84+ 93A5 C9           	ret
  85+ 93A6
  86+ 93A6              ; ******************************************************************************************************************************************************************************************
  87+ 93A6              ;
  88+ 93A6              ;	19/10/22
  89+ 93A6              ;
  90+ 93A6              ;	Mov_right.
  91+ 93A6              ;
  92+ 93A6              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93A6              ;
  94+ 93A6
  95+ 93A6 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 93A9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93AB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93AB              ; 																	; _ en el caso de que no lo haya.
  99+ 93AB 3A C9 85     	ld a,(Ctrl_0)
 100+ 93AE CB 77        	bit 6,a
 101+ 93B0 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 93B2
 103+ 93B2 CD E0 95     	call Stop_Amadeus_right
 104+ 93B5 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 93B6 18 4D        	jr 8F
 106+ 93B8
 107+ 93B8 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 93BB FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 93BD 20 46        	jr nz,8F
 110+ 93BF
 111+ 93BF 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 93C2 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 93C3 28 40        	jr z,8F
 114+ 93C5
 115+ 93C5              ; ---------- ---------- ----------
 116+ 93C5              ;
 117+ 93C5              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 93C5
 119+ 93C5 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 93C8 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 93CA 28 11        	jr z,1F
 122+ 93CC 38 06        	jr c,6F
 123+ 93CE FE 04        	cp 4
 124+ 93D0 28 14        	jr z,7F
 125+ 93D2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93D4
 127+ 93D4              ; ---------- ---------- ----------
 128+ 93D4              ;
 129+ 93D4              ; Perfiles de velocidad
 130+ 93D4              ;
 131+ 93D4
 132+ 93D4 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93D7 FE FE        	cp $fe
 134+ 93D9 20 2A        	jr nz,8F
 135+ 93DB 18 10        	jr 3F
 136+ 93DD 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93E0 FE FD        	cp $fd
 138+ 93E2 20 21        	jr nz,8F
 139+ 93E4 18 07        	jr 3F
 140+ 93E6 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93E9 FE FB        	cp $fb
 142+ 93EB 20 18        	jr nz,8F
 143+ 93ED
 144+ 93ED              ; ---------- ---------- ----------
 145+ 93ED
 146+ 93ED              3
 147+ 93ED CD 20 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93F0              ;	call Reinicio
 149+ 93F0
 150+ 93F0              ; ---------- ---------- ----------
 151+ 93F0              ;
 152+ 93F0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93F0
 154+ 93F0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93F2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93F3 CD 0C 94     	call DESPLZ_DER
 157+ 93F6 C1           	pop bc
 158+ 93F7 10 F9        	djnz 5B
 159+ 93F9 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93FC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93FD 22 9D 85     	ld (Posicion_actual),hl
 162+ 9400 CD 58 96     	call Genera_coordenadas
 163+ 9403 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9405
 165+ 9405              ; ---------- ---------- ----------
 166+ 9405
 167+ 9405 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 9408 CD 0C 94     	call DESPLZ_DER
 169+ 940B C9           2 ret
 170+ 940C
 171+ 940C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 940C              ;
 173+ 940C              ;	22/9/22
 174+ 940C              ;
 175+ 940C
 176+ 940C CD 1B 94     DESPLZ_DER call Desplaza_derecha
 177+ 940F CD 67 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9412 CD 90 94         call Ciclo_completo
 179+ 9415 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9418 CB FE        	set 7,(hl)
 181+ 941A C9           	ret
 182+ 941B
 183+ 941B              ; ******************************************************************************************************************************************************************************************
 184+ 941B              ;	15/02/23
 185+ 941B              ;
 186+ 941B
 187+ 941B 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 941E 47           	ld b,a
 189+ 941F 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9422 23           1 inc hl
 191+ 9423 23           	inc hl
 192+ 9424 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9426 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9429 CD 16 88     	call Extrae_address
 195+ 942C 22 9F 85     	ld (Puntero_objeto),hl
 196+ 942F
 197+ 942F              ; Modifica (Puntero_DESPLZ_izq).
 198+ 942F
 199+ 942F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 942F              ; Cuántos movimientos hemos hecho ??
 201+ 942F              ; DE contiene (Puntero_DESPLZ_der).
 202+ 942F
 203+ 942F 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9432 EB           	ex de,hl
 205+ 9433 A7           	and a
 206+ 9434 ED 52        	sbc hl,de
 207+ 9436 CB 3D        	srl l
 208+ 9438 3E 08        6 ld a,8
 209+ 943A 95           	sub l
 210+ 943B 30 1E        	jr nc,3F
 211+ 943D
 212+ 943D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 943D              ; B="0".
 214+ 943D
 215+ 943D 04           4 inc b
 216+ 943E 3C           	inc a
 217+ 943F 20 FC        	jr nz,4B
 218+ 9441 78           	ld a,b
 219+ 9442 08           	ex af,af
 220+ 9443 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9446 23           5 inc hl
 222+ 9447 23           	inc hl
 223+ 9448 10 FC        	djnz 5B
 224+ 944A 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 944D CD 16 88     	call Extrae_address
 226+ 9450 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9453
 228+ 9453              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9453              ; _(Posicion_actual).
 230+ 9453
 231+ 9453 21 9D 85     	ld hl,Posicion_actual
 232+ 9456 34           	inc (hl)
 233+ 9457 08               ex af,af
 234+ 9458 6F           	ld l,a
 235+ 9459 18 DD        	jr 6B
 236+ 945B
 237+ 945B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 945B
 239+ 945B 47           3 ld b,a
 240+ 945C 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 945F 23           2 inc hl
 242+ 9460 23           	inc hl
 243+ 9461 10 FC        	djnz 2B
 244+ 9463 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9466 C9           8 ret
 246+ 9467
 247+ 9467              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9467              ;
 249+ 9467              ;	24/7/22
 250+ 9467              ;
 251+ 9467              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9467              ;
 253+ 9467              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9467              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9467              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9467
 257+ 9467 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 946A A7           	and a
 259+ 946B 20 1F        	jr nz,1F
 260+ 946D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 946F 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9472
 263+ 9472 21 9C 85     	ld hl,Columns
 264+ 9475 34           	inc (hl)
 265+ 9476 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9479 E6 01        	and 1
 267+ 947B 28 0F        	jr z,1F
 268+ 947D 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9480 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9481 22 9D 85     	ld (Posicion_actual),hl
 271+ 9484 CD 58 96     	call Genera_coordenadas
 272+ 9487 CD EC 95     	call Inc_CTRL_DESPLZ
 273+ 948A 18 03        	jr 2F
 274+ 948C CD EC 95     1 call Inc_CTRL_DESPLZ
 275+ 948F C9           2 ret
 276+ 9490
 277+ 9490              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9490              ;
 279+ 9490              ;	24/7/22
 280+ 9490              ;
 281+ 9490              ;	Ciclo_completo.
 282+ 9490              ;
 283+ 9490              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9490              ;
 285+ 9490              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9490              ; 	Decrementamos (Columns).
 287+ 9490              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9490              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9490
 290+ 9490
 291+ 9490 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9493 FE FF        	cp $ff
 293+ 9495 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9497 E6 F0        	and $f0
 295+ 9499 20 28        	jr nz,3F
 296+ 949B
 297+ 949B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 949B
 299+ 949B 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 949E 47           	ld b,a
 301+ 949F 3E F8        	ld a,$f8
 302+ 94A1 80           	add b
 303+ 94A2 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 94A5 18 1C        	jr 3F
 305+ 94A7 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94AA 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94AB AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94AC 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 94AF 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 94B2 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 94B4 20 0A        	jr nz,2F
 312+ 94B6 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 94B9 23           	inc hl
 314+ 94BA 22 9D 85     	ld (Posicion_actual),hl
 315+ 94BD CD 58 96     	call Genera_coordenadas
 316+ 94C0
 317+ 94C0              ; Inicia el puntero de Sprite.
 318+ 94C0
 319+ 94C0 CD 2D 88     2 call Inicia_puntero_objeto_der
 320+ 94C3 C9           3 ret
 321+ 94C4
 322+ 94C4              ; ******************************************************************************************************************************************************************************************
 323+ 94C4              ;
 324+ 94C4              ;	15/02/23
 325+ 94C4              ;
 326+ 94C4              ;	Mov_left.
 327+ 94C4              ;
 328+ 94C4              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 94C4              ;
 330+ 94C4              Mov_left
 331+ 94C4
 332+ 94C4 21 C9 85     	ld hl,Ctrl_0
 333+ 94C7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 94C9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 94C9              ; 																	; _ en el caso de que no lo haya.
 336+ 94C9 3A C9 85     	ld a,(Ctrl_0)
 337+ 94CC CB 77        	bit 6,a
 338+ 94CE 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94D0
 340+ 94D0 CD E6 95     	call Stop_Amadeus_left
 341+ 94D3 C8           	ret z
 342+ 94D4 20 4A        	jr nz,8F
 343+ 94D6
 344+ 94D6 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94D9 A7           	and a
 346+ 94DA 20 44        	jr nz,8F
 347+ 94DC
 348+ 94DC 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94DF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94E0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94E2
 352+ 94E2              ; ---------- ---------- ----------
 353+ 94E2
 354+ 94E2 3A B0 85     	ld a,(Vel_left)
 355+ 94E5 FE 02        	cp 2
 356+ 94E7 28 0F        	jr z,1F
 357+ 94E9 38 04        	jr c,6F
 358+ 94EB FE 04        	cp 4
 359+ 94ED 28 12        	jr z,7F
 360+ 94EF
 361+ 94EF              ; ---------- ---------- ----------
 362+ 94EF
 363+ 94EF 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94F2 FE F8        	cp $f8
 365+ 94F4 20 2A        	jr nz,8F
 366+ 94F6 18 10        	jr 4F
 367+ 94F8 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94FB FE F9        	cp $f9
 369+ 94FD 20 21        	jr nz,8F
 370+ 94FF 18 07        	jr 4F
 371+ 9501 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 9504 FE FB        	cp $fb
 373+ 9506 20 18        	jr nz,8F
 374+ 9508
 375+ 9508              ; ---------- ---------- ----------
 376+ 9508
 377+ 9508              4
 378+ 9508 CD 0E 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 950B              ;	call Reinicio
 380+ 950B
 381+ 950B              ; ---------- ---------- ----------
 382+ 950B
 383+ 950B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 950D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 950E
 386+ 950E              ;	ld hl,(Indice_Sprite_izq)
 387+ 950E              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 950E
 389+ 950E CD 27 95     	call DESPLZ_IZQ
 390+ 9511 C1           	pop bc
 391+ 9512 10 F9        	djnz 5B
 392+ 9514 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9517 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9518 22 9D 85     	ld (Posicion_actual),hl
 395+ 951B CD 58 96     	call Genera_coordenadas
 396+ 951E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9520
 398+ 9520              ; ---------- ---------- ----------
 399+ 9520
 400+ 9520              ; Movemos, no hay recolocación.
 401+ 9520
 402+ 9520 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9523 CD 27 95     	call DESPLZ_IZQ
 404+ 9526 C9           2 ret
 405+ 9527
 406+ 9527              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9527              ;
 408+ 9527              ;	22/9/22
 409+ 9527
 410+ 9527              DESPLZ_IZQ
 411+ 9527
 412+ 9527 CD 36 95     	call Desplaza_izquierda
 413+ 952A CD 82 95         call modifica_parametros_1er_DESPLZ
 414+ 952D CD AA 95     	call Ciclo_completo_2
 415+ 9530 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9533 CB BE        	res 7,(hl)
 417+ 9535 C9           	ret
 418+ 9536
 419+ 9536              Desplaza_izquierda
 420+ 9536
 421+ 9536 3A B0 85     	ld a,(Vel_left)
 422+ 9539 47           	ld b,a
 423+ 953A 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 953D 23           1 inc hl
 425+ 953E 23           	inc hl
 426+ 953F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9541 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9544 CD 16 88     	call Extrae_address
 429+ 9547 22 9F 85     	ld (Puntero_objeto),hl
 430+ 954A
 431+ 954A              ; Modifica (Puntero_DESPLZ_der).
 432+ 954A
 433+ 954A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 954A              ; Cuántos movimientos hemos hecho ??
 435+ 954A              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 954A
 437+ 954A 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 954D EB           	ex de,hl
 439+ 954E A7           	and a
 440+ 954F ED 52        	sbc hl,de
 441+ 9551 CB 3D        	srl l
 442+ 9553 3E 08        6 ld a,8
 443+ 9555 95           	sub l
 444+ 9556 30 1E        	jr nc,3F
 445+ 9558
 446+ 9558              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9558              ; B="0".
 448+ 9558
 449+ 9558 04           4 inc b
 450+ 9559 3C           	inc a
 451+ 955A 20 FC        	jr nz,4B
 452+ 955C 78           	ld a,b
 453+ 955D 08           	ex af,af
 454+ 955E 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9561 23           5 inc hl
 456+ 9562 23           	inc hl
 457+ 9563 10 FC        	djnz 5B
 458+ 9565 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9568 CD 16 88     	call Extrae_address
 460+ 956B 22 9F 85     	ld (Puntero_objeto),hl
 461+ 956E
 462+ 956E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 956E              ; _(Posicion_actual).
 464+ 956E
 465+ 956E 21 9D 85     	ld hl,Posicion_actual
 466+ 9571 35           	dec (hl)
 467+ 9572 08           	ex af,af
 468+ 9573 6F           	ld l,a
 469+ 9574 18 DD        	jr 6B
 470+ 9576
 471+ 9576              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9576
 473+ 9576 47           3 ld b,a
 474+ 9577 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 957A 23           2 inc hl
 476+ 957B 23           	inc hl
 477+ 957C 10 FC        	djnz 2B
 478+ 957E 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9581 C9           8 ret
 480+ 9582
 481+ 9582              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9582              ;
 483+ 9582              ;	modifica_parametros_1er_DESPLZ
 484+ 9582              ;
 485+ 9582              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9582              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9582              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9582
 489+ 9582 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9585 A7           	and a
 491+ 9586 20 1E        	jr nz,1F
 492+ 9588 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9589 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 958C 21 9C 85     	ld hl,Columns
 495+ 958F 34           	inc (hl)
 496+ 9590 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9593 E6 01        	and 1
 498+ 9595 20 0F        	jr nz,1F
 499+ 9597 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 959A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 959B 22 9D 85     	ld (Posicion_actual),hl
 502+ 959E CD 58 96     	call Genera_coordenadas
 503+ 95A1 CD FD 95     	call Dec_CTRL_DESPLZ
 504+ 95A4 18 03        	jr 2F
 505+ 95A6 CD FD 95     1 call Dec_CTRL_DESPLZ
 506+ 95A9 C9           2 ret
 507+ 95AA
 508+ 95AA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95AA
 510+ 95AA 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95AD FE F7        	cp $f7
 512+ 95AF 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 95B1 30 2C        	jr nc,3F
 514+ 95B3
 515+ 95B3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 95B3
 517+ 95B3 06 00        	ld b,0
 518+ 95B5 04           4 inc b
 519+ 95B6 3C           	inc a
 520+ 95B7 FE F7        	cp $f7
 521+ 95B9 20 FA        	jr nz,4B
 522+ 95BB 3E FF        	ld a,$ff
 523+ 95BD 90           	sub b
 524+ 95BE 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 95C1 18 1C        	jr 3F
 526+ 95C3
 527+ 95C3              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 95C3
 529+ 95C3 21 9C 85     1 ld hl,Columns
 530+ 95C6 35           	dec (hl)
 531+ 95C7 AF           	xor a
 532+ 95C8 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 95CB 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95CE E6 01        	and 1
 535+ 95D0 28 0A        	jr z,2F
 536+ 95D2 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95D5 2B           	dec hl
 538+ 95D6 22 9D 85     	ld (Posicion_actual),hl
 539+ 95D9 CD 58 96     	call Genera_coordenadas
 540+ 95DC
 541+ 95DC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95DC
 543+ 95DC CD 40 88     2 call Inicia_puntero_objeto_izq
 544+ 95DF C9           3 ret
 545+ 95E0
 546+ 95E0              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95E0              ;
 548+ 95E0              ;	19/10/22
 549+ 95E0              ;
 550+ 95E0              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95E0              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95E0
 553+ 95E0 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95E3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95E5 C9           	ret
 556+ 95E6
 557+ 95E6              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95E6              ;
 559+ 95E6              ;	19/10/22
 560+ 95E6              ;
 561+ 95E6              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95E6              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95E6
 564+ 95E6 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95E9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95EB C9           	ret
 567+ 95EC
 568+ 95EC              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95EC              ;
 570+ 95EC              ;	24/7/22
 571+ 95EC              ;
 572+ 95EC              ;	Inc_CTRL_DESPLZ
 573+ 95EC              ;
 574+ 95EC              ;
 575+ 95EC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95EC
 577+ 95EC 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95EF 3A B1 85     	ld a,(Vel_right)
 579+ 95F2 A7           	and a
 580+ 95F3 28 06        	jr z,1F
 581+ 95F5 47           	ld b,a
 582+ 95F6 34           3 inc (hl)
 583+ 95F7 10 FD        	djnz 3B
 584+ 95F9 18 01        	jr 2F
 585+ 95FB 34           1 inc (hl)
 586+ 95FC C9           2 ret
 587+ 95FD
 588+ 95FD              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95FD              ;
 590+ 95FD              ;	5/2/23
 591+ 95FD              ;
 592+ 95FD              ;	Dec_CTRL_DESPLZ
 593+ 95FD              ;
 594+ 95FD              ;
 595+ 95FD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95FD
 597+ 95FD 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9600 3A B0 85     	ld a,(Vel_left)
 599+ 9603 A7           	and a
 600+ 9604 28 06        	jr z,1F
 601+ 9606 47           	ld b,a
 602+ 9607 35           3 dec (hl)
 603+ 9608 10 FD        	djnz 3B
 604+ 960A 18 01        	jr 2F
 605+ 960C 35           1 dec (hl)
 606+ 960D C9           2 ret
 607+ 960E
 608+ 960E              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 960E
 610+ 960E 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9611 01 1F 00     	ld bc,31
 612+ 9614 A7           	and a
 613+ 9615 ED 4A        	adc hl,bc
 614+ 9617 22 9D 85     	ld (Posicion_actual),hl
 615+ 961A 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 961D CB C6        	set 0,(hl)
 617+ 961F C9           	ret
 618+ 9620
 619+ 9620              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9620
 621+ 9620 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9623 01 1F 00     	ld bc,31
 623+ 9626 A7           	and a
 624+ 9627 ED 42        	sbc hl,bc
 625+ 9629 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 962C 21 C9 85     	ld hl,Ctrl_0
 627+ 962F CB CE        	set 1,(hl)
 628+ 9631 C9           	ret
 629+ 9632
 630+ 9632              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9632
 632+ 9632 24           Reaparece_abajo inc h
 633+ 9633 01 E0 17     	ld bc,$17e0
 634+ 9636 A7           	and a
 635+ 9637 ED 4A        	adc hl,bc
 636+ 9639 22 9D 85     	ld (Posicion_actual),hl
 637+ 963C 21 C9 85     	ld hl,Ctrl_0
 638+ 963F CB D6        	set 2,(hl)
 639+ 9641 C9           	ret
 640+ 9642
 641+ 9642              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9642
 643+ 9642 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9645 A7           	and a
 645+ 9646 ED 42        	sbc hl,bc
 646+ 9648 22 9D 85     	ld (Posicion_actual),hl
 647+ 964B 21 C9 85     	ld hl,Ctrl_0
 648+ 964E CB DE        	set 3,(hl)
 649+ 9650 C9           	ret
 650+ 9651
 651+ 9651              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9651
 653+ 9651 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9654 22 9D 85     	ld (Posicion_actual),hl
 655+ 9657 C9           	ret
# file closed: Direcciones.asm
1042  9658              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9658              ; ------------------------------------------------------------------------
   2+ 9658              ;
   3+ 9658              ;	02/04/23
   4+ 9658              ;
   5+ 9658              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9658              ;	Fila superior "0", Columna izquierda "0".
   7+ 9658              ;
   8+ 9658              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9658              ;
  10+ 9658              ;	Modifica: A,BC y DE.
  11+ 9658
  12+ 9658 C5           Genera_coordenadas push bc
  13+ 9659 E5           	push hl
  14+ 965A D5           	push de
  15+ 965B
  16+ 965B 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 965E
  18+ 965E 7D           	ld a,l
  19+ 965F E6 1F        	and $1f
  20+ 9661 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9664
  22+ 9664 CD 2C 93     	call calcula_tercio
  23+ 9667 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9668
  25+ 9668 1E 00        	ld e,0
  26+ 966A 7D           	ld a,l
  27+ 966B E6 E0        	and $e0
  28+ 966D 28 01        	jr z,1F
  29+ 966F 04           	inc b
  30+ 9670
  31+ 9670 04           1 inc b
  32+ 9671 05           	dec b
  33+ 9672 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9674              ;														; _ , salimos.
  35+ 9674 1C           3 inc e
  36+ 9675 D6 20        	sub 32
  37+ 9677 20 FB        	jr nz,3B
  38+ 9679 10 F5        	djnz 1B
  39+ 967B
  40+ 967B 7B           2 ld a,e
  41+ 967C 32 A2 85     	ld (Coordenada_y),a
  42+ 967F
  43+ 967F D1           	pop de
  44+ 9680 E1           	pop hl
  45+ 9681 C1           	pop bc
  46+ 9682
  47+ 9682 C9           	ret
  48+ 9683
  49+ 9683              ; ------------------------------------------------------------------------
  50+ 9683              ;	28/03/23
  51+ 9683              ;
  52+ 9683              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9683              ;	Fila superior "0", Columna izquierda "0".
  54+ 9683              ;
  55+ 9683              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9683              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9683              ;
  58+ 9683              ;		DE="$120d"
  59+ 9683              ;
  60+ 9683              ;		D, (Coordenada_X), Columnas, $12
  61+ 9683              ;		E, (Coordenada_y), Filas, $0d
  62+ 9683              ;
  63+ 9683              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9683
  65+ 9683              ;	Modifica: A,BC y DE.
  66+ 9683
  67+ 9683
  68+ 9683              Genera_coordenadas_disparo
  69+ 9683
  70+ 9683              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9683
  72+ 9683 7D           	ld a,l
  73+ 9684 E6 1F        	and $1f
  74+ 9686 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9687 CD 2C 93     	call calcula_tercio
  76+ 968A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 968B 1E 00        	ld e,0
  78+ 968D 7D           	ld a,l
  79+ 968E E6 E0        	and $e0
  80+ 9690 28 01        	jr z,1F
  81+ 9692 04           	inc b
  82+ 9693 1C           1 inc e
  83+ 9694 D6 20        	sub 32
  84+ 9696 20 FB        	jr nz,1B
  85+ 9698 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 969A C9           	ret
  87+ 969B
# file closed: Genera_coordenadas.asm
1043  969B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 969B
   2+ 969B
   3+ 969B              ;   11/8/22
   4+ 969B              ;
   5+ 969B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 969B              ;
   7+ 969B              ;   Mov_obj.asm
   8+ 969B              ;
   9+ 969B              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 969B              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 969B              ;
  12+ 969B              ;   Codificación:
  13+ 969B              ;
  14+ 969B              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 969B
  16+ 969B              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 969B
  18+ 969B 02 40 00     Arriba db 2,%01000000,0
  19+ 969E 02 80 00     Abajo db 2,%10000000,0
  20+ 96A1 02 20 00     Derecha db 2,%00100000,0
  21+ 96A4 02 10 00     Izquierda db 2,%00010000,0
  22+ 96A7 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96AB 60 42 60 40
  22+ 96AF 63
  23+ 96B0 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 96B4 22 A3 80 A0
  24+ 96B8 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 96BC 84 A0 83 A0
  25+ 96C0 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 96C4 80 A3 22 A0
  26+ 96C8 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 96CC 40 60 42 60
  27+ 96D0 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96D4
  29+ 96D4 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96D8 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96DC 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96E0 84 00
  32+ 96E2 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96E6 84 00
  33+ 96E8 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96EC 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96F0 1F 1F 1F 1F
  35+ 96F4 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96F8 1F 1F 1F 1F
  35+ 96FC 1F
  36+ 96FD 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9701 2F 2F 2F 2F
  36+ 9705 2F 2F
  37+ 9707 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 970B 2F 2F 00
  38+ 970E
  39+ 970E              ; ----- ----- ----- ----- -----
  40+ 970E
  41+ 970E EC 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9710 E8 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9712 A4 96        Indice_mov_Izquierda defw Izquierda
  44+ 9714 A1 96        Indice_mov_Derecha defw Derecha
  45+ 9716 9E 96        Indice_mov_Abajo defw Abajo
  46+ 9718 9B 96        Indice_mov_Arriba defw Arriba
  47+ 971A D8 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 971C DC 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 971E D4 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9720 E2 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9722 A7 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9724              ; ----- ----- ----- ----- -----
  53+ 9724
  54+ 9724 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9727 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9728 28 02            jr z,1F
  57+ 972A 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 972C 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 972F C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9731 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9734              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9734 2A CD 85         ld hl,(Puntero_mov)
  63+ 9737 7E               ld a,(hl)
  64+ 9738 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 973B 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 973C 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 973F
  68+ 973F 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9742 A7               and a
  70+ 9743 20 0C            jr nz,12F
  71+ 9745 2A CD 85         ld hl,(Puntero_mov)
  72+ 9748 7E               ld a,(hl)
  73+ 9749 A7               and a
  74+ 974A 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 974C E6 0F            and $0f
  76+ 974E 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9751              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9751 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9754 CB 7E            bit 7,(hl)
  80+ 9756 28 03            jr z,2F
  81+ 9758 CD 4A 93         call Mov_down
  82+ 975B 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 975E CB 76            bit 6,(hl)
  84+ 9760 28 03            jr z,3F
  85+ 9762 CD 78 93         call Mov_up
  86+ 9765 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9768 CB 6E            bit 5,(hl)
  88+ 976A 28 03            jr z,4F
  89+ 976C CD A6 93         call Mov_right
  90+ 976F 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9772 CB 66            bit 4,(hl)
  92+ 9774 28 03            jr z,5F
  93+ 9776 CD C4 94         call Mov_left
  94+ 9779
  95+ 9779              ; ---------- --------- --------- ---------- ----------
  96+ 9779
  97+ 9779 3A D1 85     5 ld a,(Repetimos_db)
  98+ 977C A7               and a
  99+ 977D 28 07            jr z,6F
 100+ 977F 3D               dec a
 101+ 9780 32 D1 85         ld (Repetimos_db),a
 102+ 9783 28 01            jr z,6f
 103+ 9785 C9           11 ret
 104+ 9786 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9789 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 978A 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 978D 23               inc hl
 108+ 978E 22 CD 85         ld (Puntero_mov),hl
 109+ 9791 18 F2            jr 11B
 110+ 9793 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9796 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9799 47               ld b,a
 113+ 979A 23           8 inc hl
 114+ 979B 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 979D 5E               ld e,(hl)
 116+ 979E 23               inc hl
 117+ 979F 56               ld d,(hl)
 118+ 97A0 EB               ex de,hl
 119+ 97A1 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97A4 18 DF            jr 11B
 121+ 97A6
 122+ 97A6              ; ---------- --------- --------- ---------- ----------
 123+ 97A6              ;
 124+ 97A6              ;   11/8/22
 125+ 97A6              ;
 126+ 97A6              ;   Prepara_Puntero_mov
 127+ 97A6
 128+ 97A6 E5           Prepara_Puntero_mov push hl
 129+ 97A7 D5               push de
 130+ 97A8 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 97AB 5E               ld e,(hl)
 132+ 97AC 23               inc hl
 133+ 97AD 56               ld d,(hl)
 134+ 97AE EB               ex de,hl
 135+ 97AF 22 CD 85         ld (Puntero_mov),hl
 136+ 97B2 D1               pop de
 137+ 97B3 E1               pop hl
 138+ 97B4 C9               ret
 139+ 97B5
 140+ 97B5              ; ---------- --------- --------- ---------- ----------
 141+ 97B5              ;
 142+ 97B5              ;   11/8/22
 143+ 97B5              ;
 144+ 97B5              ;   Reinicia_el_movimiento
 145+ 97B5
 146+ 97B5 CD A6 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 97B8 AF               xor a
 148+ 97B9 32 CF 85         ld (Contador_db_mov),a
 149+ 97BC 32 D0 85         ld (Incrementa_puntero),a
 150+ 97BF C3 24 97         jp Movimiento
 151+ 97C2 C9               ret
 152+ 97C3              ; ---------- --------- --------- ---------- ----------
 153+ 97C3
 154+ 97C3
 155+ 97C3
 156+ 97C3
 157+ 97C3
 158+ 97C3
 159+ 97C3
 160+ 97C3
 161+ 97C3
 162+ 97C3
 163+ 97C3
 164+ 97C3
 165+ 97C3
 166+ 97C3
 167+ 97C3
 168+ 97C3
 169+ 97C3
 170+ 97C3
# file closed: Patrones_de_mov.asm
1044  97C3              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 97C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 97C3              ;
   3+ 97C3              ;	3/1/23
   4+ 97C3              ;
   5+ 97C3              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 97C3
   7+ 97C3              ;	ADC HL,SP	LD (addr),SP
   8+ 97C3              ;	ADD HL,SP	LD SP,(addr)
   9+ 97C3              ;	ADD IX,SP	LD SP,nn
  10+ 97C3              ; 	ADD IY,SP	LD SP,HL
  11+ 97C3              ;				LD SP,IX
  12+ 97C3              ;	DEC SP		LD SP,IY
  13+ 97C3
  14+ 97C3              ;	EX (SP),HL
  15+ 97C3              ;	EX (SP),IX
  16+ 97C3              ;	EX (SP),IY
  17+ 97C3
  18+ 97C3              ;	INC SP
  19+ 97C3
  20+ 97C3
  21+ 97C3                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 DF 85      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E5 85         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E3 85     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B DF 85  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1045  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1046  7FE6
1047  7FE6              	SAVESNA "Pruebas.sna", START
1048  7FE6
1049  7FE6
1050  7FE6
# file closed: Banco_de_pruebas.asm
