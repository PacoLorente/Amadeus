# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E2 89     	call Frame
  15  A104
  16  A104 3A 13 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 BD 84        	defw Caja_1
  98+ 846A FA 84        	defw Caja_2
  99+ 846C 37 85        	defw Caja_3
 100+ 846E 74 85        	defw Caja_4
 101+ 8470 B1 85        	defw Caja_5
 102+ 8472 EE 85        	defw Caja_6
 103+ 8474 2B 86        	defw Caja_7
 104+ 8476 68 86        	defw Caja_8
 105+ 8478 A5 86        	defw Caja_9
 106+ 847A E2 86        	defw Caja_10
 107+ 847C              ;	...
 108+ 847C              ;	...
 109+ 847C              ;	+ entidades ...
 110+ 847C 00 00        	defw 0
 111+ 847E 00 00        	defw 0
 112+ 8480
 113+ 8480              ; ---------- ---------- ---------- ---------- ----------
 114+ 8480
 115+ 8480 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8482 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8484 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8486 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8489
 120+ 8489 05           	db %00000101									; (Attr).
 121+ 848A 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 848C 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 848E
 124+ 848E 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8490 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8492
 127+ 8492 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8494 04           	db 4 											; (Cuad_objeto).
 129+ 8495 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8499
 131+ 8499 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 849A
 133+ 849A 00 00        	db 0,0											; Variables_de_borrado
 134+ 849C 00 00        	defw 0											;	" " " " " " "
 135+ 849E 00 00        	defw 0											;	" " " " " " "
 136+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 84A4
 138+ 84A4 00 00        	db 0,0											; Variables_de_pintado
 139+ 84A6 00 00        	defw 0											;	" " " " " " "
 140+ 84A8 00 00        	defw 0											;	" " " " " " "
 141+ 84AA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 84AE
 143+ 84AE 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 84B1
 145+ 84B1 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 84B5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 84B8
 148+ 84B8 00           	db 0 											; (Columnas).
 149+ 84B9 00 00        	defw 0											; (Limite_horizontal).
 150+ 84BB 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 151+ 84BD
 152+ 84BD              ; ---------- ---------- ---------- ---------- ----------
 153+ 84BD
 154+ 84BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 84BF 00 00        	defw 0											; (Posicion_actual).
 156+ 84C1 00 00        	defw 0 											; (Puntero_objeto).
 157+ 84C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 84C6
 159+ 84C6 00           	db %00000000 									; (Attr).
 160+ 84C7
 161+ 84C7 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 84C9 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 84CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 84CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 84CF
 166+ 84CF 00 00        	defw 0											; (Posicion_inicio).
 167+ 84D1 00           	db 0											; (Cuad_objeto).
 168+ 84D2
 169+ 84D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 84D6
 171+ 84D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 84D7
 173+ 84D7 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 84D9 00 00        	defw 0											;	" " " " " " "
 175+ 84DB 00 00        	defw 0											;	" " " " " " "
 176+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 84E1
 178+ 84E1 00 00        	db 0,0											; Variables_de_pintado
 179+ 84E3 00 00        	defw 0											;	" " " " " " "
 180+ 84E5 00 00        	defw 0											;	" " " " " " "
 181+ 84E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 84EB
 183+ 84EB 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 84EE
 185+ 84EE 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 84F2 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 84F5
 188+ 84F5 00           	db 0 											; (Columnas).
 189+ 84F6 00 00        	defw 0											; (Limite_horizontal).
 190+ 84F8 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 191+ 84FA
 192+ 84FA              ; ---------- ---------- ---------- ---------- ----------
 193+ 84FA
 194+ 84FA 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 84FC 00 00        	defw 0											; (Posicion_actual).
 196+ 84FE 00 00        	defw 0 											; (Puntero_objeto).
 197+ 8500 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8503
 199+ 8503 00           	db %00000000 									; (Attr).
 200+ 8504
 201+ 8504 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8506 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8508 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 850A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 850C
 206+ 850C 00 00        	defw 0											; (Posicion_inicio).
 207+ 850E 00           	db 0											; (Cuad_objeto).
 208+ 850F
 209+ 850F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8513
 211+ 8513 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8514
 213+ 8514 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8516 00 00        	defw 0											;	" " " " " " "
 215+ 8518 00 00        	defw 0											;	" " " " " " "
 216+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 851E
 218+ 851E 00 00        	db 0,0											; Variables_de_pintado
 219+ 8520 00 00        	defw 0											;	" " " " " " "
 220+ 8522 00 00        	defw 0											;	" " " " " " "
 221+ 8524 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8528
 223+ 8528 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 852B
 225+ 852B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 852F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8532
 228+ 8532 00           	db 0 											; (Columnas).
 229+ 8533 00 00        	defw 0											; (Limite_horizontal).
 230+ 8535 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 231+ 8537
 232+ 8537              ; ---------- ---------- ---------- ---------- ----------
 233+ 8537
 234+ 8537 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8539 00 00        	defw 0											; (Posicion_actual).
 236+ 853B 00 00        	defw 0 											; (Puntero_objeto).
 237+ 853D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8540
 239+ 8540 00           	db %00000000 									; (Attr).
 240+ 8541
 241+ 8541 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8543 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8545 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8547 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8549
 246+ 8549 00 00        	defw 0											; (Posicion_inicio).
 247+ 854B 00           	db 0											; (Cuad_objeto).
 248+ 854C
 249+ 854C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8550
 251+ 8550 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8551
 253+ 8551 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8553 00 00        	defw 0											;	" " " " " " "
 255+ 8555 00 00        	defw 0											;	" " " " " " "
 256+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 855B
 258+ 855B 00 00        	db 0,0											; Variables_de_pintado
 259+ 855D 00 00        	defw 0											;	" " " " " " "
 260+ 855F 00 00        	defw 0											;	" " " " " " "
 261+ 8561 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8565
 263+ 8565 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8568
 265+ 8568 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 856C 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 856F
 268+ 856F 00           	db 0 											; (Columnas).
 269+ 8570 00 00        	defw 0											; (Limite_horizontal).
 270+ 8572 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 271+ 8574
 272+ 8574              ; ---------- ---------- ---------- ---------- ----------
 273+ 8574
 274+ 8574 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8576 00 00        	defw 0											; (Posicion_actual).
 276+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 277+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 857D
 279+ 857D 00           	db %00000000 									; (Attr).
 280+ 857E
 281+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8586
 286+ 8586 00 00        	defw 0											; (Posicion_inicio).
 287+ 8588 00           	db 0											; (Cuad_objeto).
 288+ 8589
 289+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 858D
 291+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 858E
 293+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8590 00 00        	defw 0											;	" " " " " " "
 295+ 8592 00 00        	defw 0											;	" " " " " " "
 296+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8598
 298+ 8598 00 00        	db 0,0											; Variables_de_pintado
 299+ 859A 00 00        	defw 0											;	" " " " " " "
 300+ 859C 00 00        	defw 0											;	" " " " " " "
 301+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 85A2
 303+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 85A5
 305+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85AC
 308+ 85AC 00           	db 0 											; (Columnas).
 309+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 85AF 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85B1
 312+ 85B1              ; ---------- ---------- ---------- ---------- ----------
 313+ 85B1
 314+ 85B1 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 85B3 00 00        	defw 0											; (Posicion_actual).
 316+ 85B5 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85BA
 319+ 85BA 00           	db %00000000 									; (Attr).
 320+ 85BB
 321+ 85BB 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 85BD 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 85BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 85C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 85C3
 326+ 85C3 00 00        	defw 0											; (Posicion_inicio).
 327+ 85C5 00           	db 0											; (Cuad_objeto).
 328+ 85C6
 329+ 85C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 85CA
 331+ 85CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 85CB
 333+ 85CB 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 85CD 00 00        	defw 0											;	" " " " " " "
 335+ 85CF 00 00        	defw 0											;	" " " " " " "
 336+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 85D5
 338+ 85D5 00 00        	db 0,0											; Variables_de_pintado
 339+ 85D7 00 00        	defw 0											;	" " " " " " "
 340+ 85D9 00 00        	defw 0											;	" " " " " " "
 341+ 85DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 85DF
 343+ 85DF 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 85E2
 345+ 85E2 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 85E6 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 85E9
 348+ 85E9 00           	db 0 											; (Columnas).
 349+ 85EA 00 00        	defw 0											; (Limite_horizontal).
 350+ 85EC 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 351+ 85EE
 352+ 85EE              ; ---------- ---------- ---------- ---------- ----------
 353+ 85EE
 354+ 85EE 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 85F0 00 00        	defw 0											; (Posicion_actual).
 356+ 85F2 00 00        	defw 0 											; (Puntero_objeto).
 357+ 85F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 85F7
 359+ 85F7 00           	db %00000000 									; (Attr).
 360+ 85F8
 361+ 85F8 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 85FA 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 85FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8600
 366+ 8600 00 00        	defw 0											; (Posicion_inicio).
 367+ 8602 00           	db 0											; (Cuad_objeto).
 368+ 8603
 369+ 8603 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8607
 371+ 8607 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 8608
 373+ 8608 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 860A 00 00        	defw 0											;	" " " " " " "
 375+ 860C 00 00        	defw 0											;	" " " " " " "
 376+ 860E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8612
 378+ 8612 00 00        	db 0,0											; Variables_de_pintado
 379+ 8614 00 00        	defw 0											;	" " " " " " "
 380+ 8616 00 00        	defw 0											;	" " " " " " "
 381+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 861C
 383+ 861C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 861F
 385+ 861F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8623 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8626
 388+ 8626 00           	db 0 											; (Columnas).
 389+ 8627 00 00        	defw 0											; (Limite_horizontal).
 390+ 8629 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 391+ 862B
 392+ 862B              ; ---------- ---------- ---------- ---------- ----------
 393+ 862B
 394+ 862B 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 862D 00 00        	defw 0											; (Posicion_actual).
 396+ 862F 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8631 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8634
 399+ 8634 00           	db %00000000 									; (Attr).
 400+ 8635
 401+ 8635 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 8637 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 8639 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 863B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 863D
 406+ 863D 00 00        	defw 0											; (Posicion_inicio).
 407+ 863F 00           	db 0											; (Cuad_objeto).
 408+ 8640
 409+ 8640 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8644
 411+ 8644 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8645
 413+ 8645 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8647 00 00        	defw 0											;	" " " " " " "
 415+ 8649 00 00        	defw 0											;	" " " " " " "
 416+ 864B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 864F
 418+ 864F 00 00        	db 0,0											; Variables_de_pintado
 419+ 8651 00 00        	defw 0											;	" " " " " " "
 420+ 8653 00 00        	defw 0											;	" " " " " " "
 421+ 8655 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8659
 423+ 8659 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 865C
 425+ 865C 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8660 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8663
 428+ 8663 00           	db 0 											; (Columnas).
 429+ 8664 00 00        	defw 0											; (Limite_horizontal).
 430+ 8666 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8668
 432+ 8668              ; ---------- ---------- ---------- ---------- ----------
 433+ 8668
 434+ 8668 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 866A 00 00        	defw 0											; (Posicion_actual).
 436+ 866C 00 00        	defw 0 											; (Puntero_objeto).
 437+ 866E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8671
 439+ 8671 00           	db %00000000 									; (Attr).
 440+ 8672
 441+ 8672 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8674 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8676 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8678 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 867A
 446+ 867A 00 00        	defw 0											; (Posicion_inicio).
 447+ 867C 00           	db 0											; (Cuad_objeto).
 448+ 867D
 449+ 867D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8681
 451+ 8681 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8682
 453+ 8682 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8684 00 00        	defw 0											;	" " " " " " "
 455+ 8686 00 00        	defw 0											;	" " " " " " "
 456+ 8688 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 868C
 458+ 868C 00 00        	db 0,0											; Variables_de_pintado
 459+ 868E 00 00        	defw 0											;	" " " " " " "
 460+ 8690 00 00        	defw 0											;	" " " " " " "
 461+ 8692 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8696
 463+ 8696 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8699
 465+ 8699 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 869D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 86A0
 468+ 86A0 00           	db 0 											; (Columnas).
 469+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 470+ 86A3 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 471+ 86A5
 472+ 86A5              ; ---------- ---------- ---------- ---------- ----------
 473+ 86A5
 474+ 86A5 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 86A7 00 00        	defw 0											; (Posicion_actual).
 476+ 86A9 00 00        	defw 0 											; (Puntero_objeto).
 477+ 86AB 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 86AE
 479+ 86AE 00           	db %00000000 									; (Attr).
 480+ 86AF
 481+ 86AF 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 86B1 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 86B3 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 86B7
 486+ 86B7 00 00        	defw 0											; (Posicion_inicio).
 487+ 86B9 00           	db 0											; (Cuad_objeto).
 488+ 86BA
 489+ 86BA 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 86BE
 491+ 86BE 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 86BF
 493+ 86BF 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 86C1 00 00        	defw 0											;	" " " " " " "
 495+ 86C3 00 00        	defw 0											;	" " " " " " "
 496+ 86C5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 86C9
 498+ 86C9 00 00        	db 0,0											; Variables_de_pintado
 499+ 86CB 00 00        	defw 0											;	" " " " " " "
 500+ 86CD 00 00        	defw 0											;	" " " " " " "
 501+ 86CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 86D3
 503+ 86D3 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 86D6
 505+ 86D6 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 86DA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 86DD
 508+ 86DD 00           	db 0 											; (Columnas).
 509+ 86DE 00 00        	defw 0											; (Limite_horizontal).
 510+ 86E0 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 511+ 86E2
 512+ 86E2              ; ---------- ---------- ---------- ---------- ----------
 513+ 86E2
 514+ 86E2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 86E4 00 00        	defw 0											; (Posicion_actual).
 516+ 86E6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 86E8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 86EB
 519+ 86EB 00           	db %00000000 									; (Attr).
 520+ 86EC
 521+ 86EC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 86EE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 86F0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 86F2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 86F4
 526+ 86F4 00 00        	defw 0											; (Posicion_inicio).
 527+ 86F6 00           	db 0											; (Cuad_objeto).
 528+ 86F7
 529+ 86F7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 86FB
 531+ 86FB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 86FC
 533+ 86FC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 86FE 00 00        	defw 0											;	" " " " " " "
 535+ 8700 00 00        	defw 0											;	" " " " " " "
 536+ 8702 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 8706
 538+ 8706 00 00        	db 0,0											; Variables_de_pintado
 539+ 8708 00 00        	defw 0											;	" " " " " " "
 540+ 870A 00 00        	defw 0											;	" " " " " " "
 541+ 870C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8710
 543+ 8710 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8713
 545+ 8713 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 8717 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 871A
 548+ 871A 00           	db 0 											; (Columnas).
 549+ 871B 00 00        	defw 0											; (Limite_horizontal).
 550+ 871D 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 551+ 871F
 552+ 871F              ; -------------------------------------------------------------------------------------
 553+ 871F              ;
 554+ 871F              ;	20/05/23
 555+ 871F              ;
 556+ 871F              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 871F              ;
 558+ 871F              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 871F              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 871F              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 871F              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 871F
 563+ 871F              Indice_de_entidades
 564+ 871F
 565+ 871F 33 87        	defw Entidad_1
 566+ 8721 43 87        	defw Entidad_2
 567+ 8723 53 87        	defw Entidad_3
 568+ 8725 63 87        	defw Entidad_4
 569+ 8727 73 87        	defw Entidad_5
 570+ 8729 83 87        	defw Entidad_6
 571+ 872B 93 87        	defw Entidad_7
 572+ 872D A3 87        	defw Entidad_8
 573+ 872F B3 87        	defw Entidad_9
 574+ 8731 C3 87        	defw Entidad_10
 575+ 8733
 576+ 8733              ;	BADSAT, (Satélite malvado).
 577+ 8733
 578+ 8733 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 579+ 8735 04           	db %00000100									; (Attr).
 580+ 8736 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 581+ 8738 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 582+ 873A 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 583+ 873C 01           	db 1											; (Cuad_objeto).
 584+ 873D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 585+ 8741 4B 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 586+ 8743
 587+ 8743 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 588+ 8745 02           	db %00000010									; (Attr).
 589+ 8746 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 590+ 8748 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 591+ 874A 5F 48        	defw $485f                                      ; (Posicion_inicio).
 592+ 874C 01           	db 1											; (Cuad_objeto).
 593+ 874D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 594+ 8751 4B 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 595+ 8753
 596+ 8753 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 597+ 8755 04           	db %00000100									; (Attr).
 598+ 8756 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 599+ 8758 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 600+ 875A A0 47        	defw $47a0                                      ; (Posicion_inicio).
 601+ 875C 01           	db 1											; (Cuad_objeto).
 602+ 875D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 603+ 8761 3F 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 604+ 8763
 605+ 8763 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 606+ 8765 01           	db %00000001									; (Attr).
 607+ 8766 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 608+ 8768 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 609+ 876A BF 47        	defw $47bf                                      ; (Posicion_inicio).
 610+ 876C 01           	db 1											; (Cuad_objeto).
 611+ 876D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 612+ 8771 4B 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 613+ 8773
 614+ 8773 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 615+ 8775 01           	db %00000001									; (Attr).
 616+ 8776 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 8778 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 877A 07 40        	defw $4007                                      ; (Posicion_inicio).
 619+ 877C 01           	db 1											; (Cuad_objeto).
 620+ 877D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8781 41 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 622+ 8783
 623+ 8783 02 02        Entidad_6 db 2,2		                     		; (Filas) / (Columns).
 624+ 8785 04           	db %00000100									; (Attr).
 625+ 8786 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 8788 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 878A FF 48        	defw $48ff	                             	    ; (Posicion_inicio).
 628+ 878C 01           	db 1											; (Cuad_objeto).
 629+ 878D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 8791 4B 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 631+ 8793
 632+ 8793 02 02        Entidad_7 db 2,2		                     		; (Filas) / (Columns).
 633+ 8795 02           	db %00000010									; (Attr).
 634+ 8796 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 635+ 8798 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 636+ 879A 7F 48        	defw $487f                                      ; (Posicion_inicio).
 637+ 879C 01           	db 1											; (Cuad_objeto).
 638+ 879D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 639+ 87A1 4B 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 640+ 87A3
 641+ 87A3 02 02        Entidad_8 db 2,2		                     		; (Filas) / (Columns).
 642+ 87A5 04           	db %00000100									; (Attr).
 643+ 87A6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 644+ 87A8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 645+ 87AA E0 48        	defw $48e0                                      ; (Posicion_inicio).
 646+ 87AC 01           	db 1											; (Cuad_objeto).
 647+ 87AD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 648+ 87B1 3F 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 649+ 87B3
 650+ 87B3 02 02        Entidad_9 db 2,2		                     		; (Filas) / (Columns).
 651+ 87B5 01           	db %00000001									; (Attr).
 652+ 87B6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 653+ 87B8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 654+ 87BA 3F 50        	defw $503f                                      ; (Posicion_inicio).
 655+ 87BC 01           	db 1											; (Cuad_objeto).
 656+ 87BD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 657+ 87C1 4B 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 658+ 87C3
 659+ 87C3 02 02        Entidad_10 db 2,2		                     		; (Filas) / (Columns).
 660+ 87C5 01           	db %00000001									; (Attr).
 661+ 87C6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 662+ 87C8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 663+ 87CA 13 40        	defw $4013                                      ; (Posicion_inicio).
 664+ 87CC 01           	db 1											; (Cuad_objeto).
 665+ 87CD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 666+ 87D1 41 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  87D3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87D3              ; 13/05/23
   2+ 87D3
   3+ 87D3              Indice_de_niveles
   4+ 87D3
   5+ 87D3 E1 87        	defw Nivel_1
   6+ 87D5 EB 87        	defw Nivel_2
   7+ 87D7 F8 87        	defw Nivel_3
   8+ 87D9 08 88        	defw Nivel_4
   9+ 87DB 1A 88        	defw Nivel_5
  10+ 87DD
  11+ 87DD              ;	...
  12+ 87DD              ;	...
  13+ 87DD              ;	+ Niveles ...
  14+ 87DD
  15+ 87DD 00 00        	defw 0
  16+ 87DF 00 00        	defw 0
  17+ 87E1
  18+ 87E1 09           Nivel_1 db 9	                                ; Nº de entidades.
  19+ 87E2 01 02 03 04  	db 1,2,3,4,5,6,7,8,9						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 87E6 05 06 07 08
  19+ 87EA 09
  20+ 87EB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 87EC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 87F0 01 02
  22+ 87F2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87F6 01 02
  23+ 87F8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87F9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 87FD 01
  25+ 87FE 03 01 01 01  	db 3,1,1,1,1
  25+ 8802 01
  26+ 8803 03 01 01 01  	db 3,1,1,1,1
  26+ 8807 01
  27+ 8808 11           Nivel_4 db 17									; Nº de entidades.
  28+ 8809 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 880D 01
  29+ 880E 04 01 01 01  	db 4,1,1,1,1
  29+ 8812 01
  30+ 8813 04 01 01 01  	db 4,1,1,1,1
  30+ 8817 01
  31+ 8818 02 03        	db 2,3
  32+ 881A 14           Nivel_5 db 20									; Nº de entidades.
  33+ 881B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 881F 01
  34+ 8820 05 01 01 01  	db 5,1,1,1,1
  34+ 8824 01
  35+ 8825 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8829 01
  36+ 882A 05 01 01 01  	db 5,1,1,1,1
  36+ 882E 01
  37+ 882F
  38+ 882F              ;---------------------------------------------------------------------------------------------------------------
  39+ 882F              ;
  40+ 882F              ;   21/5/23
  41+ 882F              ;
  42+ 882F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 882F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 882F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 882F              ;	_en la caja DRAW correspondiente.
  46+ 882F              ;
  47+ 882F              ;	MODIFICA: HL,DE y A.
  48+ 882F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 882F
  50+ 882F              Inicializa_Punteros_de_nivel
  51+ 882F
  52+ 882F 21 D3 87     	ld hl,Indice_de_niveles
  53+ 8832 22 49 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8835 CD F2 8B     	call Extrae_address
  55+ 8838 7E           	ld a,(hl)
  56+ 8839 32 1C 89     	ld (Numero_de_entidades),a
  57+ 883C 23           	inc hl
  58+ 883D 22 4B 89     	ld (Datos_de_nivel),hl
  59+ 8840 C9           	ret
  60+ 8841
  61+ 8841              ;---------------------------------------------------------------------------------------------------------------
  62+ 8841              ;
  63+ 8841              ;   13/5/23
  64+ 8841              ;
  65+ 8841              ;	Destruye A,BC,HL,DE
  66+ 8841
  67+ 8841              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8841              ;	_del juego.
  69+ 8841
  70+ 8841              Prepara_cajas
  71+ 8841
  72+ 8841              ; Preparamos los punteros de las cajas.
  73+ 8841
  74+ 8841 21 68 84     	ld hl,Indice_de_cajas
  75+ 8844 CD F2 8B     	call Extrae_address
  76+ 8847 CD 84 88     	call Avanza_caja
  77+ 884A
  78+ 884A CD BF 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 884D
  80+ 884D 2A 4B 89     	ld hl,(Datos_de_nivel)
  81+ 8850
  82+ 8850              ; HL está en los datos del nivel correspondiente.
  83+ 8850              ; B actuará como contador de cajas.
  84+ 8850
  85+ 8850 C5           1 push bc
  86+ 8851
  87+ 8851 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8852 CD 75 88     	call PreparaBC
  89+ 8855
  90+ 8855 21 1F 87     	ld hl,Indice_de_entidades
  91+ 8858 CD 7D 88     	call SBC_HL_con_BC_y_Extrae
  92+ 885B 22 22 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 885E
  94+ 885E CD 8E 88     	call Datos_de_entidad_a_caja
  95+ 8861
  96+ 8861 2A 1A 89     	ld hl,(Indice_restore_caja)
  97+ 8864 CD F2 8B     	call Extrae_address
  98+ 8867 CD 84 88     	call Avanza_caja
  99+ 886A
 100+ 886A 2A 4B 89     	ld hl,(Datos_de_nivel)
 101+ 886D 23           	inc hl
 102+ 886E 22 4B 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8871
 104+ 8871 C1           	pop bc
 105+ 8872 10 DC        	djnz 1B
 106+ 8874 C9           	ret
 107+ 8875
 108+ 8875 CB 27        PreparaBC sla a
 109+ 8877 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8879 4F           	ld c,a
 111+ 887A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 887C C9           	ret
 113+ 887D
 114+ 887D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 887E ED 4A        	adc hl,bc
 116+ 8880 CD F2 8B     	call Extrae_address
 117+ 8883 C9           	ret
 118+ 8884
 119+ 8884 22 16 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8887 13           	inc de
 121+ 8888 13           	inc de
 122+ 8889 EB           	ex de,hl
 123+ 888A 22 1A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 888D C9           	ret
 125+ 888E
 126+ 888E              Datos_de_entidad_a_caja
 127+ 888E
 128+ 888E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 888E
 130+ 888E ED 5B 16 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8892
 132+ 8892 01 02 00     	ld bc,2
 133+ 8895 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8897
 135+ 8897 01 07 00     	ld bc,7
 136+ 889A CD B9 88     	call Situa_DE
 137+ 889D
 138+ 889D 01 05 00     	ld bc,5
 139+ 88A0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A2
 141+ 88A2 01 04 00     	ld bc,4
 142+ 88A5 CD B9 88     	call Situa_DE
 143+ 88A8
 144+ 88A8 01 07 00     	ld bc,7
 145+ 88AB ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88AD
 147+ 88AD 01 18 00     	ld bc,24
 148+ 88B0 CD B9 88     	call Situa_DE
 149+ 88B3
 150+ 88B3 01 02 00     	ld bc,2
 151+ 88B6 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88B8
 153+ 88B8 C9           	ret
 154+ 88B9
 155+ 88B9 EB           Situa_DE ex de,hl
 156+ 88BA A7           	and a
 157+ 88BB ED 4A        	adc hl,bc
 158+ 88BD EB           	ex de,hl
 159+ 88BE C9           	ret
 160+ 88BF
 161+ 88BF              ;---------------------------------------------------------------------------------------------------------------
 162+ 88BF              ;
 163+ 88BF              ;	21/5/23
 164+ 88BF              ;
 165+ 88BF              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 166+ 88BF              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 167+ 88BF              ;
 168+ 88BF              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 169+ 88BF              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 170+ 88BF              ;	_ total de entidades que contiene (Numero_de_entidades).
 171+ 88BF              ;
 172+ 88BF              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 173+ 88BF              ;	MODIFICA: A y B.
 174+ 88BF              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 175+ 88BF
 176+ 88BF              Admin_num_entidades
 177+ 88BF
 178+ 88BF              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 179+ 88BF
 180+ 88BF 3A 1C 89     	ld a,(Numero_de_entidades)
 181+ 88C2 A7           	and a
 182+ 88C3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 183+ 88C3 28 FE        	jr z,$
 184+ 88C5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 185+ 88C5 FE 0A        	cp 10
 186+ 88C7 38 08        	jr c,1F
 187+ 88C9
 188+ 88C9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 189+ 88C9              ; Actualizamos variables.
 190+ 88C9
 191+ 88C9 3E 0A        	ld a,10
 192+ 88CB 32 1D 89     	ld (Numero_parcial_de_entidades),a
 193+ 88CE 47           	ld b,a
 194+ 88CF 18 04        	jr 2F
 195+ 88D1
 196+ 88D1              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 197+ 88D1              ; (Numero_de_entidades)="0".
 198+ 88D1
 199+ 88D1 32 1D 89     1 ld (Numero_parcial_de_entidades),a
 200+ 88D4 47           	ld b,a
 201+ 88D5 C9           2 ret
# file closed: Niveles.asm
  25  88D6
  26  88D6              ; ******************************************************************************************************************************************************************************************
  27  88D6              ; Constantes.
  28  88D6              ; ******************************************************************************************************************************************************************************************
  29  88D6              ;
  30  88D6              ; 25/05/23
  31  88D6              ;
  32  88D6              ; Constantes generales.
  33  88D6              ;
  34  88D6
  35  88D6              Sprite_vacio equ $f000
  36  88D6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  88D6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  88D6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  88D6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  88D6
  41  88D6              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  88D6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  88D6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  88D6              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  88D6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  88D6              ;                               				        ; De momento situamos este almacén en $7060.
  47  88D6
  48  88D6              ; ******************************************************************************************************************************************************************************************
  49  88D6              ; Variables.
  50  88D6              ; ******************************************************************************************************************************************************************************************
  51  88D6              ;
  52  88D6              ; 10/11/22
  53  88D6              ;
  54  88D6              ; Variables de DRAW. (Motor principal).
  55  88D6              ;
  56  88D6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  88D6
  58  88D6 00           Filas db 0												; Filas. [DRAW]
  59  88D7 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  88D8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  88DA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  88DC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  88DD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  88DE
  65  88DE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  88DE
  67  88DE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  88DF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  88DF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  88DF 00           Attr db 0												; Atributos de la entidad:
  71  88E0
  72  88E0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  88E0              ;
  74  88E0              ;	COLORES: 0 ..... NEGRO
  75  88E0              ;    		 1 ..... AZUL
  76  88E0              ; 			 2 ..... ROJO
  77  88E0              ;			 3 ..... MAGENTA
  78  88E0              ; 			 4 ..... VERDE
  79  88E0              ; 			 5 ..... CIAN
  80  88E0              ;			 6 ..... AMARILLO
  81  88E0              ; 			 7 ..... BLANCO
  82  88E0
  83  88E0 00 00        Indice_Sprite_der defw 0
  84  88E2 00 00        Indice_Sprite_izq defw 0
  85  88E4 00 00        Puntero_DESPLZ_der defw 0
  86  88E6 00 00        Puntero_DESPLZ_izq defw 0
  87  88E8
  88  88E8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  88EA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  88EB
  91  88EB              ; Variables de objeto. (Características).
  92  88EB
  93  88EB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  88EC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  88ED 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  88EE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  88EF
  98  88EF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  88F0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  88F0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  88F0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  88F2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 103  88F4 00 00        	defw 0
 104  88F6 00 00 00 00  	db 0,0,0,0
 105  88FA
 106  88FA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  88FC 00 00        	defw 0
 108  88FE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  8900 00 00 00 00  	db 0,0,0,0
 110  8904
 111  8904              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 112  8904
 113  8904 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 114  8905              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 115  8905              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 116  8905              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 117  8905              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 118  8905              ;
 119  8905              ; 														DESCRIPCIÖN:
 120  8905              ;
 121  8905              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 122  8905              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 123  8905              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 124  8905              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 125  8905              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 126  8905              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 127  8905              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 128  8905              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 129  8905              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 130  8905              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 131  8905              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 132  8905              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 133  8905              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 134  8905              ;
 135  8905              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 136  8905              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 137  8905              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 138  8905
 139  8905 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 140  8906
 141  8906              ; Movimiento.
 142  8906
 143  8906 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 144  8907 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 145  8909 00 00        Puntero_mov defw 0
 146  890B 00           Contador_db_mov db 0
 147  890C 00           Incrementa_puntero db 0
 148  890D 00           Repetimos_db db 0
 149  890E
 150  890E              ; Variables de funcionamiento. [DRAW].
 151  890E
 152  890E 00           Columnas db 0
 153  890F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 154  8911              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  8911 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8912
 157  8912              ; variables de control general.
 158  8912
 159  8912 00           Ctrl_2 db 0
 160  8913              ;														BIT 1, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 161  8913              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 162  8913              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 163  8913              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 164  8913              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 165  8913              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 166  8913              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 167  8913
 168  8913              ; 61 Bytes por entidad.
 169  8913              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 170  8913              ;					         		---------;      ;---------
 171  8913
 172  8913
 173  8913              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 174  8913
 175  8913 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 176  8914
 177  8914              ;														DESCRIPCIÓN:
 178  8914              ;
 179  8914              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 180  8914              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 181  8914              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 182  8914              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 183  8914              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 184  8914              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 185  8914              ;														BIT 3, .............
 186  8914              ;														BIT 4, .............
 187  8914
 188  8914 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 189  8916              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 190  8916              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 191  8916              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 192  8916
 193  8916
 194  8916
 195  8916              ; Gestión de ENTIDADES y CAJAS.
 196  8916
 197  8916              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 198  8916 00 00        Puntero_store_caja defw 0
 199  8918 00 00        Puntero_restore_caja defw 0
 200  891A 00 00        Indice_restore_caja defw 0
 201  891C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 202  891D 00           Numero_parcial_de_entidades db 0
 203  891E 00           Entidades_en_curso db 0									; ..... ..... .....
 204  891F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 205  8920              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 206  8920              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 207  8920              ;														; _ (Numero_de_malotes)="0".
 208  8920 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 209  8922 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 210  8924              ;														; _ puntero (Indice_entidades).
 211  8924
 212  8924
 213  8924              ;---------------------------------------------------------------------------------------------------------------
 214  8924              ;
 215  8924              ; Sirven para PINTAR.
 216  8924
 217  8924 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 218  8926              ;														; _variable para almacenar lo posición del puntero_
 219  8926              ; 														; _de pila, SP.
 220  8926 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 221  8928              ;														; La utiliza la rutina [Extrae_foto_registros].
 222  8928 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 223  892A              ;														; _el snapshot de los registros de la siguiente entidad.
 224  892A              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 225  892A 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 226  892C              ;														; _el snapshot de los registros del siguiente disparo.
 227  892C              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 228  892C
 229  892C              ;---------------------------------------------------------------------------------------------------------------
 230  892C
 231  892C              ; Gestión de Disparos.
 232  892C
 233  892C 00           Numero_de_disparotes db 0
 234  892D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 235  892F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 236  8931 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 237  8932              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 238  8932              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 239  8932 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 240  8934              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 241  8934              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 242  8934              ;														; _produzca colisión.
 243  8934 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 244  8936              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 245  8936 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 246  8939              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 247  8939 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 248  893C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 249  893C
 250  893C              ;---------------------------------------------------------------------------------------------------------------
 251  893C
 252  893C              ; Relojes y temporizaciones.
 253  893C
 254  893C 00           Contador_de_frames db 0
 255  893D 00           Secundero db 0
 256  893E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 257  893F              ;														; Repite la oleada de entidades.
 258  893F 01           Habilita_disparo_Amadeus db 1
 259  8940 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 260  8941 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 261  8942
 262  8942 01           Habilita_disparo_entidad db 1
 263  8943 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 264  8944 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 265  8945
 266  8945              ;---------------------------------------------------------------------------------------------------------------
 267  8945
 268  8945              ; Gestión de FRAMES.
 269  8945
 270  8945 00           Switch db 0
 271  8946
 272  8946              ; Variables de Raster y localización en pantalla.
 273  8946
 274  8946 00 FF        Temp_Raster defw $ff00
 275  8948
 276  8948              ;---------------------------------------------------------------------------------------------------------------
 277  8948
 278  8948              ; Gestión de NIVELES.
 279  8948
 280  8948 00           Nivel db 0												 ; Nivel actual del juego.
 281  8949 00 00        Puntero_indice_NIVELES defw 0
 282  894B 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 283  894D              ; 														 ; _ que definen el NIVEL.
 284  894D
 285  894D
 286  894D              ; Y todo comienza aquí .....
 287  894D              ;
 288  894D              ; Rutina principal *************************************************************************************************************************************************************************
 289  894D              ;
 290  894D              ;	14/11/22
 291  894D
 292  894D              START
 293  894D
 294  894D 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 295  8950 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 296  8952 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 297  8954 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 298  8956 F3           	DI
 299  8957
 300  8957 3E 07        	ld a,%00000111
 301  8959 CD 21 97     	call Cls
 302  895C
 303  895C              ;	call Pinta_marco
 304  895C
 305  895C CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 306  895F CD CB 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 307  8962
 308  8962 CD 41 88     4 call Prepara_cajas
 309  8965
 310  8965 CD 9E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 311  8968              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 312  8968 CD 7B 8C     	call Restore_entidad
 313  896B
 314  896B 21 1D 89     	ld hl,Numero_parcial_de_entidades
 315  896E 46           	ld b,(hl)
 316  896F 04           	inc b
 317  8970 05           	dec b
 318  8971 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 319  8973
 320  8973              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 321  8973              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 322  8973              ;	Pintamos el resto de entidades:
 323  8973
 324  8973              ;	INICIA ENTIDADES !!!!!
 325  8973
 326  8973 C5           1 push bc  												; Guardo el contador de entidades.
 327  8974 CD F8 8B     	call Inicia_Puntero_objeto
 328  8977 CD 35 97     	call Recompone_posicion_inicio
 329  897A CD 71 91     	call Draw
 330  897D CD A0 7F     	call Guarda_foto_registros
 331  8980 CD 40 8C      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 332  8983 C1           	pop bc
 333  8984 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 334  8986
 335  8986              ;	call Pinta_marco
 336  8986
 337  8986              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 338  8986
 339  8986 3A 13 89     	ld a,(Ctrl_1)
 340  8989 CB 5F        	bit 3,a
 341  898B 20 18        	jr nz,5F											; Loop
 342  898D
 343  898D              ; 	INICIA AMADEUS !!!!!
 344  898D
 345  898D CD A2 8C     3 call Restore_Amadeus
 346  8990 CD F8 8B     	call Inicia_Puntero_objeto
 347  8993 CD 71 91     	call Draw
 348  8996 CD A0 7F     	call Guarda_foto_registros
 349  8999 11 80 84     	ld de,Amadeus_db
 350  899C CD B4 8C     	call Store_Amadeus
 351  899F
 352  899F              ; 	INICIA DISPAROS !!!!!
 353  899F
 354  899F CD B4 8B     	call Inicia_Puntero_Disparo_Entidades
 355  89A2 CD BB 8B     	call Inicia_Puntero_Disparo_Amadeus
 356  89A5
 357  89A5              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 358  89A5
 359  89A5 CD 9E 8B     5 call Inicia_punteros_de_cajas
 360  89A8 CD 7B 8C     	call Restore_entidad
 361  89AB
 362  89AB 3A 13 89     	ld a,(Ctrl_1)
 363  89AE CB 5F        	bit 3,a
 364  89B0 28 0A        	jr z,6F
 365  89B2
 366  89B2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 367  89B2
 368  89B2 21 13 89     	ld hl,Ctrl_1
 369  89B5 CB 9E        	res 3,(hl)
 370  89B7 CD C2 8B     	call Calcula_numero_de_malotes
 371  89BA 18 07        	jr 7F
 372  89BC
 373  89BC              ; ----------
 374  89BC
 375  89BC 3A 1D 89     6 ld a,(Numero_parcial_de_entidades)
 376  89BF 3C           	inc a
 377  89C0 32 1F 89     	ld (Numero_de_malotes),a
 378  89C3
 379  89C3 AF           7 xor a
 380  89C4 FB           2 ei
 381  89C5 28 FD        	jr z,2B
 382  89C7
 383  89C7 3A 3D 89     	ld a,(Secundero)
 384  89CA 47           	ld b,a
 385  89CB 3A 3E 89     	ld a,(Activa_recarga_cajas)
 386  89CE B8           	cp b
 387  89CF 28 08        	jr z,8F
 388  89D1
 389  89D1 21 13 89     	ld hl,Ctrl_1
 390  89D4 CB E6        	set 4,(hl)
 391  89D6 AF           	xor a
 392  89D7 18 EB        	jr 2B
 393  89D9
 394  89D9 21 13 89     8 ld hl,Ctrl_1
 395  89DC CB A6        	res 4,(hl)
 396  89DE F3           	di
 397  89DF
 398  89DF C3 62 89     	jp 4B
 399  89E2
 400  89E2              ; -----------------------------------------------------------------------------------
 401  89E2
 402  89E2              Frame
 403  89E2
 404  89E2              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 405  89E2              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 406  89E2
 407  89E2              ; PINTAMOS.
 408  89E2
 409  89E2 3E 02            ld a,2
 410  89E4 D3 FE            out ($fe),a
 411  89E6 CD 75 94     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 412  89E9 CD AE 94     	call Extrae_foto_disparos
 413  89EC 3E 01            ld a,1
 414  89EE D3 FE            out ($fe),a
 415  89F0
 416  89F0              ; ----------------------------------------------------------------------
 417  89F0
 418  89F0              ; RELOJES.
 419  89F0
 420  89F0 21 3C 89     	ld hl,Contador_de_frames
 421  89F3 34           	inc (hl)											; 0 - 255
 422  89F4
 423  89F4 3E 3C        	ld a,60
 424  89F6 BE           	cp (hl)
 425  89F7 20 22        	jr nz,13F
 426  89F9
 427  89F9 36 00        	ld (hl),0
 428  89FB
 429  89FB 21 3D 89     	ld hl,Secundero
 430  89FE 34           	inc (hl)
 431  89FF
 432  89FF 7E           	ld a,(hl)
 433  8A00 E6 01        	and %00000001
 434  8A02 20 10        	jr nz,20F
 435  8A04
 436  8A04 3A 1D 89     	ld a,(Numero_parcial_de_entidades)
 437  8A07 47           	ld b,a
 438  8A08 3A 1E 89     	ld a,(Entidades_en_curso)
 439  8A0B B8           	cp b
 440  8A0C 28 06        	jr z,20F
 441  8A0E 30 04        	jr nc,20F
 442  8A10
 443  8A10 3C           	inc a
 444  8A11 32 1E 89     	ld (Entidades_en_curso),a
 445  8A14
 446  8A14 3E 3C        20 ld a,60
 447  8A16 BE           	cp (hl)
 448  8A17 20 02        	jr nz,13F
 449  8A19
 450  8A19 36 00        	ld (hl),0
 451  8A1B
 452  8A1B 21 3F 89     13 ld hl,Habilita_disparo_Amadeus
 453  8A1E 11 41 89     	ld de,Temporiza_disparo_Amadeus
 454  8A21 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 455  8A24
 456  8A24 21 42 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 457  8A27 11 44 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 458  8A2A CD D5 7F     	call Habilita_disparos
 459  8A2D
 460  8A2D              ; COLISIONES.
 461  8A2D
 462  8A2D CD 0B 91     	call Selector_de_impactos
 463  8A30
 464  8A30              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 465  8A30              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 466  8A30              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 467  8A30
 468  8A30 AF           	xor a
 469  8A31 32 31 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 470  8A34
 471  8A34 CD 9E 8B     	call Inicia_punteros_de_cajas
 472  8A37 CD 7B 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 473  8A3A              ; 														; _ en DRAW.
 474  8A3A 3A D6 88     	ld a,(Filas)
 475  8A3D A7           	and a
 476  8A3E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 477  8A40 CD 8D 8C     	call Incrementa_punteros_de_cajas
 478  8A43 18 F2        	jr 12B
 479  8A45
 480  8A45              ; ---------------------------------------------------------------------------------------
 481  8A45
 482  8A45 CD 89 8F     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 483  8A48 21 00 70     	ld hl,Album_de_fotos
 484  8A4B 22 28 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 485  8A4E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 486  8A4E 3A 1D 89     	ld a,(Numero_parcial_de_entidades)
 487  8A51 47               ld b,a
 488  8A52 A7           	and a
 489  8A53 20 16        	jr nz,2F
 490  8A55
 491  8A55 21 13 89     	ld hl,Ctrl_1
 492  8A58 CB 66        	bit 4,(hl)
 493  8A5A C2 D3 8A     	jp nz,4F
 494  8A5D
 495  8A5D 21 13 89     	ld hl,Ctrl_1
 496  8A60 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 497  8A62 3A 3D 89     	ld a,(Secundero)
 498  8A65 3C           	inc a
 499  8A66 32 3E 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 500  8A69
 501  8A69 18 68        	jr 4F
 502  8A6B
 503  8A6B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 504  8A6B
 505  8A6B              ; Código que ejecutamos con cada entidad:
 506  8A6B
 507  8A6B              ; Impacto ???
 508  8A6B
 509  8A6B 3A 1E 89     2 ld a,(Entidades_en_curso)
 510  8A6E A7           	and a
 511  8A6F 28 62        	jr z,4F
 512  8A71 47           	ld b,a
 513  8A72
 514  8A72 C5           15 push bc 												; Nº de entidades en curso.
 515  8A73
 516  8A73 3A EF 88     	ld a,(Impacto)
 517  8A76 A7           	and a
 518  8A77 28 14        	jr z,8F
 519  8A79
 520  8A79              ; Hay Impacto en esta entidad.
 521  8A79
 522  8A79 CD 55 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 523  8A7C CD BD 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 524  8A7F
 525  8A7F              ; -----
 526  8A7F
 527  8A7F 21 1D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 528  8A82 35           	dec (hl)
 529  8A83 21 1E 89     	ld hl,Entidades_en_curso
 530  8A86 35           	dec (hl)
 531  8A87 21 1C 89     	ld hl,Numero_de_entidades
 532  8A8A 35           	dec (hl)
 533  8A8B 18 27        	jr 7F
 534  8A8D
 535  8A8D              ; -----
 536  8A8D
 537  8A8D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 538  8A8D              ; _con las coordenadas de la entidad almacenada en DRAW.
 539  8A8D
 540  8A8D 3A 13 89     8 ld a,(Ctrl_1)
 541  8A90 CB 57        	bit 2,a
 542  8A92 28 20        	jr z,7F
 543  8A94
 544  8A94 2A 34 89     	ld hl,(Coordenadas_disparo_certero)
 545  8A97 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 546  8A98              ;														; E contiene la coordenada_X del disparo.
 547  8A98 2A DC 88     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 548  8A9B              ;														; H Coordenado_y de la entidad.
 549  8A9B A7           	and a
 550  8A9C ED 52        	sbc hl,de
 551  8A9E
 552  8A9E CD 42 91     	call Determina_resultado_comparativa
 553  8AA1 04           	inc b
 554  8AA2 05           	dec b
 555  8AA3
 556  8AA3              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 557  8AA3              ;	jr z,$
 558  8AA3              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 559  8AA3
 560  8AA3 28 0F        	jr z,7F
 561  8AA5
 562  8AA5              ; ----- ----- -----
 563  8AA5
 564  8AA5 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 565  8AA7 32 EF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 566  8AAA 21 13 89     	ld hl,Ctrl_1
 567  8AAD CB 96        	res 2,(hl)
 568  8AAF 21 34 89     	ld hl,Coordenadas_disparo_certero
 569  8AB2 36 00        	ld (hl),0
 570  8AB4
 571  8AB4
 572  8AB4 CD 06 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 573  8AB7
 574  8AB7 3A 04 89     	ld a,(Ctrl_0)
 575  8ABA CB 67        	bit 4,a
 576  8ABC 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 577  8ABE
 578  8ABE              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 579  8ABE              ; [[[
 580  8ABE CD 16 8D     	call Detecta_disparo_entidad
 581  8AC1              ; ]]]
 582  8AC1 CD 65 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 583  8AC4
 584  8AC4 21 04 89     	ld hl,Ctrl_0
 585  8AC7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 586  8AC9 AF           	xor a
 587  8ACA 32 05 89     	ld (Obj_dibujado),a
 588  8ACD
 589  8ACD CD 40 8C     6 call Store_Restore_cajas
 590  8AD0
 591  8AD0 C1           	pop bc
 592  8AD1 10 9F        	djnz 15B
 593  8AD3
 594  8AD3              ; Tras la gestión de las entidades, ... AMADEUS.
 595  8AD3
 596  8AD3 CD A2 8C     4 call Restore_Amadeus
 597  8AD6
 598  8AD6 3A EF 88     	ld a,(Impacto)
 599  8AD9 A7           	and a
 600  8ADA 20 FE        	jr nz,$
 601  8ADC
 602  8ADC              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 603  8ADC
 604  8ADC CD 36 8B     	call Mov_Amadeus
 605  8ADF
 606  8ADF 3A 04 89     	ld a,(Ctrl_0)
 607  8AE2 CB 67        	bit 4,a
 608  8AE4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 609  8AE6
 610  8AE6 CD 65 8B     	call Guarda_foto_entidad_a_pintar
 611  8AE9
 612  8AE9 21 04 89     3 ld hl,Ctrl_0
 613  8AEC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 614  8AEE AF           	xor a
 615  8AEF 32 05 89     	ld (Obj_dibujado),a
 616  8AF2
 617  8AF2 11 80 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 618  8AF5 CD B4 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 619  8AF8
 620  8AF8 CD A7 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 621  8AFB
 622  8AFB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 623  8AFB
 624  8AFB CD DA 8B     	call Calcula_numero_de_disparotes
 625  8AFE CD C2 8B     9 call Calcula_numero_de_malotes
 626  8B01
 627  8B01 3E 04        	ld a,4
 628  8B03 D3 FE        	out ($fe),a
 629  8B05
 630  8B05 C9           	ret
 631  8B06
 632  8B06              ; --------------------------------------------------------------------------------------------------------------
 633  8B06              ;
 634  8B06              ;	27/03/23
 635  8B06
 636  8B06              Mov_obj
 637  8B06
 638  8B06              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 639  8B06
 640  8B06 AF           	xor a
 641  8B07 32 05 89     	ld (Obj_dibujado),a
 642  8B0A 32 04 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 643  8B0D              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 644  8B0D              ; 														; _de la entidad.
 645  8B0D CD 6F 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 646  8B10              ;														; Obj_dibujado="0".
 647  8B10              ; Movemos Entidades malignas.
 648  8B10
 649  8B10 21 07 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 650  8B13 34           	inc (hl)
 651  8B14 35           	dec (hl)                                            ; Salimos de la rutina.
 652  8B15 C8           	ret z
 653  8B16
 654  8B16 CD 4F 9B     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 655  8B19
 656  8B19 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 657  8B1C CB 67        	bit 4,a
 658  8B1E C8           	ret z
 659  8B1F
 660  8B1F              ; Ha habido desplazamiento de la entidad maligna.
 661  8B1F              ; Ha llegado a zona de AMADEUS ???
 662  8B1F
 663  8B1F 3A DD 88     	ld a,(Coordenada_y)
 664  8B22 FE 14        	cp $14
 665  8B24 D4 D8 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 666  8B27              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 667  8B27              ; ---------
 668  8B27
 669  8B27 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 670  8B29 32 05 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 671  8B2C CD 6F 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 672  8B2F CD 86 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 673  8B32 CD 55 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 674  8B35 C9           	ret													; _de la misma.
 675  8B36
 676  8B36              ; --------------------------------------------------------------------------------------------------------------
 677  8B36              ;
 678  8B36              ;	29/1/23
 679  8B36
 680  8B36              Mov_Amadeus
 681  8B36
 682  8B36 AF           	xor a
 683  8B37 32 05 89     	ld (Obj_dibujado),a
 684  8B3A CD 6F 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 685  8B3D              ;														; Obj_dibujado="0".
 686  8B3D              ; Movemos Amadeus.
 687  8B3D
 688  8B3D CD DF 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 689  8B40 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 690  8B43 CB 67        	bit 4,a
 691  8B45 C8           	ret z
 692  8B46
 693  8B46              ; ---------
 694  8B46
 695  8B46 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 696  8B48 32 05 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 697  8B4B CD 6F 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 698  8B4E CD 86 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 699  8B51 CD 55 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 700  8B54 C9           	ret													; _de la nave.
 701  8B55
 702  8B55              ; --------------------------------------------------------------------------------------------------------------
 703  8B55              ;
 704  8B55              ;	31/01/23
 705  8B55              ;
 706  8B55              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 707  8B55
 708  8B55              Guarda_foto_entidad_a_borrar
 709  8B55
 710  8B55 CD 4B 94     	call Prepara_draw
 711  8B58 CD 85 93     	call calcula_CColumnass
 712  8B5B CD BC 93     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 713  8B5E CD 11 94     	call Define_rutina_de_impresion
 714  8B61 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 715  8B64 C9           	ret
 716  8B65
 717  8B65              ; --------------------------------------------------------------------------------------------------------------
 718  8B65              ;
 719  8B65              ;	31/01/23
 720  8B65              ;
 721  8B65              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 722  8B65              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 723  8B65
 724  8B65              Guarda_foto_entidad_a_pintar
 725  8B65
 726  8B65 CD 92 8B     	call Repone_pintar
 727  8B68 CD 71 91     	call Draw
 728  8B6B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 729  8B6E C9           	ret
 730  8B6F
 731  8B6F              ; --------------------------------------------------------------------------------------------------------------
 732  8B6F              ;
 733  8B6F              ;
 734  8B6F
 735  8B6F 21 D6 88     Prepara_var_pintado_borrado	ld hl,Filas
 736  8B72 3A 05 89     	ld a,(Obj_dibujado)
 737  8B75 A7           	and a
 738  8B76 28 05        	jr z,1F
 739  8B78 11 FA 88     	ld de,Variables_de_pintado
 740  8B7B 18 03        	jr 2F
 741  8B7D 11 F0 88     1 ld de,Variables_de_borrado
 742  8B80 01 08 00     2 ld bc,8
 743  8B83 ED B0        	ldir
 744  8B85 C9           	ret
 745  8B86
 746  8B86              ; --------------------------------------------------------------------------------------------------------------
 747  8B86
 748  8B86 21 F0 88     Repone_borrar ld hl,Variables_de_borrado
 749  8B89 11 D6 88     	ld de,Filas
 750  8B8C 01 08 00     	ld bc,8
 751  8B8F ED B0        	ldir
 752  8B91 C9           	ret
 753  8B92
 754  8B92 21 FA 88     Repone_pintar ld hl,Variables_de_pintado
 755  8B95 11 D6 88     	ld de,Filas
 756  8B98 01 08 00     	ld bc,8
 757  8B9B ED B0        	ldir
 758  8B9D C9           	ret
 759  8B9E
 760  8B9E              ; *************************************************************************************************************************************************************
 761  8B9E              ;
 762  8B9E              ; 8/1/23
 763  8B9E              ;
 764  8B9E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 765  8B9E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 766  8B9E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 767  8B9E
 768  8B9E              ; Destruye HL y DE !!!!!
 769  8B9E
 770  8B9E              Inicia_punteros_de_cajas
 771  8B9E
 772  8B9E 21 68 84     	ld hl,Indice_de_cajas
 773  8BA1 CD F2 8B         call Extrae_address
 774  8BA4 22 16 89         ld (Puntero_store_caja),hl
 775  8BA7 21 6A 84     	ld hl,Indice_de_cajas+2
 776  8BAA 22 1A 89     	ld (Indice_restore_caja),hl
 777  8BAD CD F2 8B     	call Extrae_address
 778  8BB0 22 18 89     	ld (Puntero_restore_caja),hl
 779  8BB3 C9               ret
 780  8BB4
 781  8BB4              ; *************************************************************************************************************************************************************
 782  8BB4              ;
 783  8BB4              ; 8/1/23
 784  8BB4              ;
 785  8BB4              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 786  8BB4
 787  8BB4 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 788  8BB7 22 2D 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 789  8BBA C9           	ret
 790  8BBB 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 791  8BBE 22 2F 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 792  8BC1 C9           	ret
 793  8BC2
 794  8BC2              ; -------------------------------------------------------------------------------------------------------------
 795  8BC2              ;
 796  8BC2              ; 28/2/23
 797  8BC2              ;
 798  8BC2
 799  8BC2              Calcula_numero_de_malotes
 800  8BC2
 801  8BC2 21 00 70     	ld hl,Album_de_fotos
 802  8BC5 EB           	ex de,hl
 803  8BC6 2A 28 89     	ld hl,(Stack_snapshot)
 804  8BC9
 805  8BC9 06 00        	ld b,0
 806  8BCB 7D           	ld a,l
 807  8BCC 93           	sub e
 808  8BCD 28 07        	jr z,1F
 809  8BCF
 810  8BCF              ; Nº de malotes no es "0".
 811  8BCF
 812  8BCF D6 06        2 sub 6
 813  8BD1 04           	inc b
 814  8BD2 A7           	and a
 815  8BD3 20 FA        	jr nz,2B
 816  8BD5 78           	ld a,b
 817  8BD6
 818  8BD6 32 1F 89     1 ld (Numero_de_malotes),a
 819  8BD9 C9           	ret
 820  8BDA
 821  8BDA              ; -------------------------------------------------------------------------------------------------------------
 822  8BDA              ;
 823  8BDA              ; 28/2/23
 824  8BDA              ;
 825  8BDA
 826  8BDA              Calcula_numero_de_disparotes
 827  8BDA
 828  8BDA 21 85 70     	ld hl,Album_de_fotos_disparos
 829  8BDD EB           	ex de,hl
 830  8BDE 2A 2A 89     	ld hl,(Stack_snapshot_disparos)
 831  8BE1
 832  8BE1 06 00        	ld b,0
 833  8BE3 7D           	ld a,l
 834  8BE4 93           	sub e
 835  8BE5 28 07        	jr z,1F
 836  8BE7
 837  8BE7              ; Nº de malotes no es "0".
 838  8BE7
 839  8BE7 D6 06        2 sub 6
 840  8BE9 04           	inc b
 841  8BEA A7           	and a
 842  8BEB 20 FA        	jr nz,2B
 843  8BED 78           	ld a,b
 844  8BEE
 845  8BEE 32 2C 89     1 ld (Numero_de_disparotes),a
 846  8BF1 C9           	ret
 847  8BF2              ; *************************************************************************************************************************************************************
 848  8BF2              ;
 849  8BF2              ; 20/10/22
 850  8BF2              ;
 851  8BF2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 852  8BF2              ;
 853  8BF2              ; Destruye el puntero y DE !!!!!
 854  8BF2
 855  8BF2 5E           Extrae_address ld e,(hl)
 856  8BF3 23           	inc hl
 857  8BF4 56           	ld d,(hl)
 858  8BF5 2B           	dec hl
 859  8BF6 EB           	ex de,hl
 860  8BF7 C9           	ret
 861  8BF8
 862  8BF8              ; *************************************************************************************************************************************************************
 863  8BF8              ;
 864  8BF8              ;	7/2/23
 865  8BF8              ;
 866  8BF8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 867  8BF8              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 868  8BF8              ;
 869  8BF8              ;   Destruye HL y BC !!!!!,
 870  8BF8              ;
 871  8BF8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 872  8BF8              ;					"0" ..... Izquierda.
 873  8BF8
 874  8BF8              Inicia_Puntero_objeto
 875  8BF8
 876  8BF8 3A EA 88     	ld a,(Cuad_objeto)
 877  8BFB E6 01        	and 1
 878  8BFD F5           	push af
 879  8BFE CC 1C 8C     	call z,Inicia_puntero_objeto_izq
 880  8C01 F1           	pop af
 881  8C02 28 2B        	jr z,1F
 882  8C04 CD 09 8C     	call Inicia_puntero_objeto_der
 883  8C07 18 26        	jr 1F
 884  8C09
 885  8C09              ; Arrancamos desde la parte izquierda de la pantalla.
 886  8C09              ; Iniciamos (Indice_Sprite_der).
 887  8C09
 888  8C09 2A E0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 889  8C0C 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 890  8C0F CD F2 8B     	call Extrae_address
 891  8C12 22 DA 88     	ld (Puntero_objeto),hl
 892  8C15
 893  8C15 2A E2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 894  8C18 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 895  8C1B C9           	ret
 896  8C1C
 897  8C1C              ; Arrancamos desde la parte derecha de la pantalla.
 898  8C1C              ; Iniciamos (Indice_Sprite_izq).
 899  8C1C
 900  8C1C 2A E2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 901  8C1F 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 902  8C22 CD F2 8B     	call Extrae_address
 903  8C25 22 DA 88     	ld (Puntero_objeto),hl
 904  8C28
 905  8C28 2A E0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 906  8C2B 22 E4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 907  8C2E C9           	ret
 908  8C2F
 909  8C2F              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 910  8C2F
 911  8C2F 21 38 83     1 ld hl,Amadeus
 912  8C32 ED 4B DA 88  	ld bc,(Puntero_objeto)
 913  8C36 B7 ED 42     	sub hl,bc
 914  8C39 C0           	ret nz
 915  8C3A 21 04 89     	ld hl,Ctrl_0
 916  8C3D CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 917  8C3F C9           	ret 												; _de nuestra nave en los extremos.
 918  8C40
 919  8C40              ; *************************************************************************************************************************************************************
 920  8C40              ;
 921  8C40              ;	14/5/23
 922  8C40              ;
 923  8C40              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 924  8C40              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 925  8C40
 926  8C40              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 927  8C40              ;	_de la 2ª y 3ª entidad respectivamente.
 928  8C40
 929  8C40              Store_Restore_cajas
 930  8C40
 931  8C40 E5           	push hl
 932  8C41 D5           	push de
 933  8C42 C5            	push bc
 934  8C43
 935  8C43              ;	STORE !!!!!
 936  8C43              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 937  8C43
 938  8C43 21 D6 88     	ld hl,Filas
 939  8C46 ED 5B 16 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 940  8C4A 01 3D 00     	ld bc,61
 941  8C4D ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 942  8C4F
 943  8C4F              ; 	Entidad_sospechosa. 20/4/23
 944  8C4F
 945  8C4F 3A EF 88     	ld a,(Impacto)
 946  8C52 A7           	and a
 947  8C53 28 0C        	jr z,1F
 948  8C55
 949  8C55 2A 16 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 950  8C58 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 951  8C5B A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 952  8C5C ED 4A        	adc hl,bc 											; _ "0" más adelante.
 953  8C5E 22 32 89     	ld (Entidad_sospechosa_de_colision),hl
 954  8C61
 955  8C61              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 956  8C61
 957  8C61 2A 18 89     1 ld hl,(Puntero_restore_caja)
 958  8C64 7E           	ld a,(hl)
 959  8C65 A7           	and a
 960  8C66 F5           	push af
 961  8C67 28 08        	jr z,2F
 962  8C69
 963  8C69 11 D6 88     	ld de,Filas
 964  8C6C 01 3D 00     	ld bc,61
 965  8C6F ED B0        	ldir
 966  8C71
 967  8C71 CD 8D 8C     2 call Incrementa_punteros_de_cajas
 968  8C74 F1           	pop af
 969  8C75 28 EA        	jr z,1B
 970  8C77
 971  8C77 C1           	pop bc
 972  8C78 D1           	pop de
 973  8C79 E1           	pop hl
 974  8C7A
 975  8C7A C9           	ret
 976  8C7B
 977  8C7B              ; **************************************************************************************************
 978  8C7B              ;
 979  8C7B              ;	12/05/23
 980  8C7B              ;
 981  8C7B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 982  8C7B
 983  8C7B E5           Restore_entidad push hl
 984  8C7C D5           	push de
 985  8C7D C5            	push bc
 986  8C7E
 987  8C7E 2A 16 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 988  8C81 11 D6 88     	ld de,Filas
 989  8C84 01 3D 00     	ld bc,61
 990  8C87 ED B0        	ldir
 991  8C89
 992  8C89 C1           	pop bc
 993  8C8A D1           	pop de
 994  8C8B E1           	pop hl
 995  8C8C C9           	ret
 996  8C8D
 997  8C8D
 998  8C8D              ; **************************************************************************************************
 999  8C8D              ;
1000  8C8D              ;	08/05/23
1001  8C8D              ;
1002  8C8D              ;	Incrementamos los dos punteros de entidades. (+1).
1003  8C8D
1004  8C8D 2A 18 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1005  8C90 22 16 89     	ld (Puntero_store_caja),hl
1006  8C93 2A 1A 89     	ld hl,(Indice_restore_caja)
1007  8C96 23           	inc hl
1008  8C97 23           	inc hl
1009  8C98 22 1A 89     	ld (Indice_restore_caja),hl
1010  8C9B CD F2 8B         call Extrae_address
1011  8C9E 22 18 89         ld (Puntero_restore_caja),hl
1012  8CA1 C9               ret
1013  8CA2
1014  8CA2              ; **************************************************************************************************
1015  8CA2              ;
1016  8CA2              ;	25/01/23
1017  8CA2              ;
1018  8CA2              ;	Restore_Amadeus
1019  8CA2              ;
1020  8CA2              ;	Cargamos en DRAW los parámetros de Amadeus.
1021  8CA2              ;
1022  8CA2
1023  8CA2 E5           Restore_Amadeus	push hl
1024  8CA3 D5           	push de
1025  8CA4 C5            	push bc
1026  8CA5 21 80 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1027  8CA8 11 D6 88     	ld de,Filas
1028  8CAB 01 3D 00     	ld bc,61
1029  8CAE ED B0        	ldir
1030  8CB0 C1           	pop bc
1031  8CB1 D1           	pop de
1032  8CB2 E1           	pop hl
1033  8CB3 C9           	ret
1034  8CB4
1035  8CB4              ; *************************************************************************************************************************************************************
1036  8CB4              ;
1037  8CB4              ;	29/04/23
1038  8CB4              ;
1039  8CB4              ;	Store_Amadeus
1040  8CB4              ;
1041  8CB4              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1042  8CB4              ;
1043  8CB4              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1044  8CB4              ;
1045  8CB4              ;	DESTRUYE: HL y BC y DE.
1046  8CB4
1047  8CB4 21 D6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1048  8CB7 01 3D 00     	ld bc,61
1049  8CBA ED B0        	ldir
1050  8CBC C9           	ret
1051  8CBD
1052  8CBD              ; -----------------------------------------------------------
1053  8CBD              ;
1054  8CBD              ;	27/04/23
1055  8CBD              ;
1056  8CBD              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1057  8CBD              ;
1058  8CBD              ;	Destruye: HL,BC,DE,A
1059  8CBD
1060  8CBD 21 D6 88     Borra_datos_entidad ld hl,Filas
1061  8CC0 01 3C 00     	ld bc,60
1062  8CC3 AF           	xor a
1063  8CC4 77           	ld (hl),a
1064  8CC5 11 D7 88     	ld de,Filas+1
1065  8CC8 ED B0        	ldir
1066  8CCA C9           	ret
1067  8CCB
1068  8CCB              ; -----------------------------------------------------------
1069  8CCB
1070  8CCB              ; Teclado.
1071  8CCB
1072  8CCB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1073  8CCD DB FE        	in a,($fe)
1074  8CCF E6 01        	and $01
1075  8CD1 28 02        	jr z,1f
1076  8CD3 18 F6        	jr Pulsa_ENTER
1077  8CD5 C9           1 ret
1078  8CD6
1079  8CD6              ; **************************************************************************************************
1080  8CD6              ;
1081  8CD6              ; Temporización.
1082  8CD6
1083  8CD6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1084  8CD6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1085  8CD6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1086  8CD6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1087  8CD6
1088  8CD6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1089  8CD6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1090  8CD6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1091  8CD6
1092  8CD6              ; A partir de $4f61 no hace falta DELAY.
1093  8CD6
1094  8CD6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1095  8CD6
1096  8CD6 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1097  8CD9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1098  8CDA 78           	LD A,B
1099  8CDB A7           	AND A
1100  8CDC 20 FB        	JR NZ,wait
1101  8CDE C9           	RET
1102  8CDF
1103  8CDF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1104  8CDF              ;
1105  8CDF              ;	5/3/23
1106  8CDF              ;
1107  8CDF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1108  8CDF
1109  8CDF              Movimiento_Amadeus
1110  8CDF
1111  8CDF              ; Disparo.
1112  8CDF
1113  8CDF 3A 3F 89     	ld a,(Habilita_disparo_Amadeus)
1114  8CE2 A7           	and a
1115  8CE3 20 02        	jr nz,1F
1116  8CE5 18 15        	jr 2F
1117  8CE7
1118  8CE7 3E F7        1 ld a,$f7													; "5" para disparar.
1119  8CE9 DB FE        	in a,($fe)
1120  8CEB E6 10        	and $10
1121  8CED
1122  8CED F5           	push af
1123  8CEE CC 54 8D     	call z,Genera_disparo
1124  8CF1 F1           	pop af
1125  8CF2 20 08        	jr nz,2F
1126  8CF4
1127  8CF4 3A 3F 89     	ld a,(Habilita_disparo_Amadeus)
1128  8CF7 EE 01        	xor 1
1129  8CF9 32 3F 89     	ld (Habilita_disparo_Amadeus),a
1130  8CFC
1131  8CFC 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1132  8CFE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1133  8D00 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1134  8D02 CC EF 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1135  8D05 3E F7        	ld a,$f7
1136  8D07 DB FE        	in a,($fe)
1137  8D09 E6 01        	and $01
1138  8D0B C8           	ret z
1139  8D0C
1140  8D0C 3E F7        	ld a,$f7
1141  8D0E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1142  8D10 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1143  8D12 CC D1 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1144  8D15 C9           	ret
1145  8D16
1146  8D16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1147  8D16              ;
1148  8D16              ;	Rutina provisional para que los malotes cagen balas.
1149  8D16
1150  8D16              Detecta_disparo_entidad
1151  8D16
1152  8D16 3A 42 89     	ld a,(Habilita_disparo_entidad)
1153  8D19 A7           	and a
1154  8D1A C8           	ret z
1155  8D1B 3E 7F        	ld a,$7f
1156  8D1D DB FE        	in a,($fe)
1157  8D1F E6 01        	and 1
1158  8D21 C0           	ret nz
1159  8D22 CD 54 8D     	call Genera_disparo
1160  8D25 C9           	ret
1161  8D26
1162  8D26              ; Pinta indicadores de FILAS. ------------------------------------------------------
1163  8D26
1164  8D26 21 00 40     Pinta_marco ld hl,$4000
1165  8D29 E5           	push hl
1166  8D2A
1167  8D2A CD 49 8D     	call Pinta_linea
1168  8D2D E1           	pop hl
1169  8D2E 3E 80        	ld a,$80
1170  8D30 CD 3C 8D     	call Pinta_columna
1171  8D33
1172  8D33 21 1F 40     	ld hl,$401f
1173  8D36 3E 01        	ld a,1
1174  8D38 CD 3C 8D     	call Pinta_columna
1175  8D3B C9           	ret
1176  8D3C
1177  8D3C 06 BF        Pinta_columna ld b,191
1178  8D3E F5           	push af
1179  8D3F CD 57 94     1 call NextScan
1180  8D42 F1           	pop af
1181  8D43 77           	ld (hl),a
1182  8D44 F5           	push af
1183  8D45 10 F8        	djnz 1B
1184  8D47 F1           	pop af
1185  8D48 C9           	ret
1186  8D49 36 FF        Pinta_linea ld (hl),$ff
1187  8D4B 54           	ld d,h
1188  8D4C 5D           	ld e,l
1189  8D4D 13           	inc de
1190  8D4E 01 1F 00     	ld bc,31
1191  8D51 ED B0        	ldir
1192  8D53 C9           	ret
1193  8D54
1194  8D54              ; ---------------------------------------------------------------
1195  8D54
1196  8D54              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D54              ; ******************************************************************************************************************************************************************************************
   2+ 8D54              ;
   3+ 8D54              ;   17/04/23
   4+ 8D54              ;
   5+ 8D54              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D54              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D54              ;
   8+ 8D54              ;
   9+ 8D54              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D54              ;
  11+ 8D54              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D54              ;               _ hacen las entidades hacia abajo.
  13+ 8D54              ;
  14+ 8D54              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D54              ;
  16+ 8D54              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D54              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D54              ;
  19+ 8D54              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D54              ;           _ la bala.
  21+ 8D54              ;
  22+ 8D54              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D54              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D54              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D54              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D54              ;           _ en el momento de generarse la bala)).
  27+ 8D54
  28+ 8D54              Genera_disparo
  29+ 8D54
  30+ 8D54              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D54              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D54              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D54              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D54              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D54              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D54              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D54
  38+ 8D54              ; Exclusiones:
  39+ 8D54
  40+ 8D54 3A 0E 89         ld a,(Columnas)
  41+ 8D57 47               ld b,a
  42+ 8D58 3A D7 88         ld a,(Columns)
  43+ 8D5B B8               cp b
  44+ 8D5C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8D5D
  46+ 8D5D              ; ----- ----- -----
  47+ 8D5D
  48+ 8D5D 3A 04 89         ld a,(Ctrl_0)
  49+ 8D60 CB 77            bit 6,a
  50+ 8D62 20 06            jr nz,14F
  51+ 8D64
  52+ 8D64 3A DD 88         ld a,(Coordenada_y)
  53+ 8D67 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8D69 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8D6A
  56+ 8D6A 21 00 80     14 ld hl,Indice_disparo
  57+ 8D6D 3A DE 88         ld a,(CTRL_DESPLZ)
  58+ 8D70 4F               ld c,a
  59+ 8D71 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8D73              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8D73              ;                                            ""        ""       "f9", B="1"
  62+ 8D73              ;                                            ""        ""       "fb", B="2"
  63+ 8D73              ;                                            ""        ""       "fb", B="3"
  64+ 8D73 A7               and a
  65+ 8D74 28 10            jr z,1F
  66+ 8D76 E6 01            and 1
  67+ 8D78 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8D79
  69+ 8D79 79               ld a,c
  70+ 8D7A 16 F9            ld d,$f9
  71+ 8D7C 23           2 inc hl
  72+ 8D7D 23               inc hl
  73+ 8D7E 04               inc b
  74+ 8D7F BA               cp d
  75+ 8D80 28 04            jr z,1F
  76+ 8D82 14               inc d
  77+ 8D83 14               inc d
  78+ 8D84 18 F6            jr 2B
  79+ 8D86
  80+ 8D86 CD F2 8B     1 call Extrae_address
  81+ 8D89 E5               push hl
  82+ 8D8A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8D8C DD 21 EA 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8D90
  85+ 8D90              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8D90              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8D90
  88+ 8D90 3A 04 89         ld a,(Ctrl_0)
  89+ 8D93 CB 77            bit 6,a
  90+ 8D95 20 04            jr nz,19F
  91+ 8D97
  92+ 8D97 AF               xor a
  93+ 8D98 32 42 89         ld (Habilita_disparo_entidad),a
  94+ 8D9B
  95+ 8D9B 3A EA 88     19 ld a,(Cuad_objeto)
  96+ 8D9E FE 02            cp 2
  97+ 8DA0 38 66            jr c,3F
  98+ 8DA2 28 64            jr z,3F
  99+ 8DA4
 100+ 8DA4              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8DA4
 102+ 8DA4 E6 01            and 1
 103+ 8DA6 28 30            jr z,4F
 104+ 8DA8
 105+ 8DA8              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8DA8              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8DA8              ;
 108+ 8DA8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8DA8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8DA8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8DA8
 112+ 8DA8 2A D8 88     	ld hl,(Posicion_actual)
 113+ 8DAB
 114+ 8DAB              ;   Amadeus o entidad ???.
 115+ 8DAB
 116+ 8DAB 3A 04 89         ld a,(Ctrl_0)
 117+ 8DAE CB 77            bit 6,a
 118+ 8DB0 28 0A            jr z,8F
 119+ 8DB2
 120+ 8DB2              ; 	Dispara Amadeus.
 121+ 8DB2
 122+ 8DB2 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8DB4 CD 66 94         call PreviousScan
 124+ 8DB7 CD 66 94         call PreviousScan
 125+ 8DBA
 126+ 8DBA              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8DBA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8DBA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8DBA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8DBA
 131+ 8DBA 18 11            jr 10F
 132+ 8DBC
 133+ 8DBC              ; 	Dispara Entidad.
 134+ 8DBC
 135+ 8DBC 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8DBF              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8DBF
 138+ 8DBF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8DBF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8DBF
 141+ 8DBF C5               push bc
 142+ 8DC0 06 10            ld b,16
 143+ 8DC2 CD 57 94     9 call NextScan
 144+ 8DC5 10 FB            djnz 9B
 145+ 8DC7 C1               pop bc
 146+ 8DC8 CD 32 8E         call Ajusta_disparo_parte_izquierda
 147+ 8DCB 18 06            jr 17F
 148+ 8DCD
 149+ 8DCD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8DCD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8DCD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8DCD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8DCD
 154+ 8DCD CD 32 8E     10 call Ajusta_disparo_parte_izquierda
 155+ 8DD0 CD A7 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8DD3              ;                                                      ; _al generar el disparo.
 157+ 8DD3
 158+ 8DD3              ; 	LLegados a este punto tendremos:
 159+ 8DD3              ;
 160+ 8DD3              ;       Puntero_objeto_disparo en IY.
 161+ 8DD3              ;       Rutinas_de_impresion en IX.
 162+ 8DD3              ;       Puntero_de_impresion en HL.
 163+ 8DD3              ;       Impacto/Dirección en BC.
 164+ 8DD3
 165+ 8DD3 CD 3A 8E     17 call Almacena_disparo
 166+ 8DD6 18 52            jr 6F                                             ; RET.
 167+ 8DD8
 168+ 8DD8              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8DD8              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8DD8              ;
 171+ 8DD8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8DD8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8DD8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8DD8
 175+ 8DD8 2A D8 88     4 ld hl,(Posicion_actual)
 176+ 8DDB
 177+ 8DDB              ;   Amadeus o entidad ???.
 178+ 8DDB
 179+ 8DDB 3A 04 89         ld a,(Ctrl_0)
 180+ 8DDE CB 77            bit 6,a
 181+ 8DE0 28 0A            jr z,11F
 182+ 8DE2
 183+ 8DE2              ; 	Dispara Amadeus.
 184+ 8DE2
 185+ 8DE2 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8DE4 CD 66 94         call PreviousScan
 187+ 8DE7 CD 66 94         call PreviousScan
 188+ 8DEA
 189+ 8DEA              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8DEA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8DEA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8DEA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8DEA
 194+ 8DEA 18 11            jr 13F
 195+ 8DEC
 196+ 8DEC              ; 	Dispara Entidad.
 197+ 8DEC
 198+ 8DEC 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8DEF              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8DEF
 201+ 8DEF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8DEF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8DEF
 204+ 8DEF C5               push bc
 205+ 8DF0 06 10            ld b,16
 206+ 8DF2 CD 57 94     12 call NextScan
 207+ 8DF5 10 FB            djnz 12B
 208+ 8DF7 C1               pop bc
 209+ 8DF8
 210+ 8DF8 CD 2B 8E         call Ajusta_disparo_parte_derecha
 211+ 8DFB 18 06            jr 18F
 212+ 8DFD
 213+ 8DFD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8DFD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8DFD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8DFD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8DFD
 218+ 8DFD CD 2B 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8E00 CD A7 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8E03              ;                                                       ; _al generar el disparo.
 221+ 8E03
 222+ 8E03              ; LLegados a este punto tendremos:
 223+ 8E03              ;
 224+ 8E03              ;       Puntero_objeto_disparo en IY.
 225+ 8E03              ;       Rutinas_de_impresion en IX.
 226+ 8E03              ;       Puntero_de_impresion en HL.
 227+ 8E03              ;       Impacto/Dirección en BC.
 228+ 8E03
 229+ 8E03 CD 3A 8E     18 call Almacena_disparo
 230+ 8E06 18 22            jr 6F                                               ; RET.
 231+ 8E08
 232+ 8E08              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8E08
 234+ 8E08 28 11        3 jr z,5F
 235+ 8E0A
 236+ 8E0A              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8E0A              ;
 238+ 8E0A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8E0A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8E0A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8E0A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8E0A
 243+ 8E0A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8E0A              ;	   ""        ""       "f9", B="1"
 245+ 8E0A              ;	   ""        ""       "fb", B="2"
 246+ 8E0A              ; 	   ""        ""       "fb", B="3"
 247+ 8E0A
 248+ 8E0A 2A D8 88     	ld hl,(Posicion_actual)
 249+ 8E0D CD 57 94     	call NextScan
 250+ 8E10
 251+ 8E10              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8E10              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8E10              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8E10              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8E10
 256+ 8E10 CD 32 8E         call Ajusta_disparo_parte_izquierda
 257+ 8E13
 258+ 8E13              ; 	No se produce impacto. B="$80"
 259+ 8E13              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8E13
 261+ 8E13 01 80 80         ld bc,$8080
 262+ 8E16
 263+ 8E16              ; 	LLegados a este punto tendremos:
 264+ 8E16              ;
 265+ 8E16              ;       Puntero_objeto_disparo en IY.
 266+ 8E16              ;       Rutinas_de_impresion en IX.
 267+ 8E16              ;       Puntero_de_impresion en HL.
 268+ 8E16              ;       Impacto/Dirección en BC.
 269+ 8E16
 270+ 8E16 CD 3A 8E         call Almacena_disparo
 271+ 8E19 18 0F            jr 6F                                           ; RET.
 272+ 8E1B
 273+ 8E1B              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8E1B              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8E1B              ;
 276+ 8E1B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8E1B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8E1B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8E1B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8E1B
 281+ 8E1B 2A D8 88     5 ld hl,(Posicion_actual)
 282+ 8E1E CD 57 94     	call NextScan
 283+ 8E21
 284+ 8E21              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8E21              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8E21              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8E21              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8E21
 289+ 8E21 CD 2B 8E         call Ajusta_disparo_parte_derecha
 290+ 8E24
 291+ 8E24              ; 	No se produce impacto. B="$80"
 292+ 8E24              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8E24
 294+ 8E24 01 80 80     15 ld bc,$8080
 295+ 8E27
 296+ 8E27              ; 	LLegados a este punto tendremos:
 297+ 8E27              ;
 298+ 8E27              ;       Puntero_objeto_disparo en IY.
 299+ 8E27              ;       Rutinas_de_impresion en IX.
 300+ 8E27              ;       Puntero_de_impresion en HL.
 301+ 8E27              ;       Impacto/Dirección en BC.
 302+ 8E27
 303+ 8E27 CD 3A 8E         call Almacena_disparo
 304+ 8E2A
 305+ 8E2A C9           6 ret
 306+ 8E2B
 307+ 8E2B              ; ----------------------------------------------------------------
 308+ 8E2B              ;
 309+ 8E2B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8E2B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8E2B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8E2B
 313+ 8E2B 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8E2C FE 02            cp 2
 315+ 8E2E 38 01            jr c,1F
 316+ 8E30 23               inc hl
 317+ 8E31 C9           1 ret
 318+ 8E32
 319+ 8E32 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8E33 FE 01        	cp 1
 321+ 8E35 20 01        	jr nz,1F
 322+ 8E37 2B           	dec hl
 323+ 8E38 2B           1 dec hl
 324+ 8E39 C9               ret
 325+ 8E3A
 326+ 8E3A              ; ----------------------------------------------------------------
 327+ 8E3A              ;
 328+ 8E3A              ;   25/02/23
 329+ 8E3A              ;
 330+ 8E3A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8E3A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8E3A              ;
 333+ 8E3A              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8E3A              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8E3A
 336+ 8E3A              Almacena_disparo
 337+ 8E3A
 338+ 8E3A E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8E3B F1               pop af
 340+ 8E3C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8E3D
 342+ 8E3D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8E3E E6 01            and 1
 344+ 8E40 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8E42              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8E42              ; 	Dispara AMADEUS.
 347+ 8E42
 348+ 8E42              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8E42              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8E42              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8E42              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8E42
 353+ 8E42 C5               push bc
 354+ 8E43 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8E46 2A 2F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8E49 A7               and a
 357+ 8E4A ED 42            sbc hl,bc
 358+ 8E4C CC BB 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8E4F C1               pop bc
 360+ 8E50 28 54            jr z,4F
 361+ 8E52
 362+ 8E52 2A 2F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8E55 23               inc hl
 364+ 8E56 23               inc hl
 365+ 8E57 22 2F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8E5A              ;                                                   ; _ Disparo_(+1).
 367+ 8E5A 18 18            jr 2F
 368+ 8E5C
 369+ 8E5C              ; Dispara una entidad.
 370+ 8E5C
 371+ 8E5C C5           1 push bc
 372+ 8E5D 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8E60 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8E63 A7               and a
 375+ 8E64 ED 42            sbc hl,bc
 376+ 8E66 CC B4 8B         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8E69 C1               pop bc
 378+ 8E6A 28 3A            jr z,4F
 379+ 8E6C
 380+ 8E6C 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8E6F 23               inc hl
 382+ 8E70 23               inc hl
 383+ 8E71 22 2D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8E74              ;                                                   ; _ Disparo_(+1).
 385+ 8E74 CD F2 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8E77              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8E77              ;
 388+ 8E77              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8E77              ;                                                     Rutinas_de_impresion en IX.
 390+ 8E77              ;                                                     Puntero_de_impresion en HL.
 391+ 8E77              ;                                                     Impacto/Dirección en BC.
 392+ 8E77
 393+ 8E77 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8E78 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8E79 23               inc hl                                          ; _ al siguiente.
 396+ 8E7A A7               and a
 397+ 8E7B 20 C0            jr nz,3B
 398+ 8E7D
 399+ 8E7D 08               ex af,af
 400+ 8E7E ED 73 24 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8E82 F9               ld sp,hl
 402+ 8E83
 403+ 8E83 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8E85 F5               push af                                         ; Puntero de impresión.
 405+ 8E86 FD E5            push iy                                         ; Puntero objeto.
 406+ 8E88 C5               push bc                                         ; Control.
 407+ 8E89
 408+ 8E89 ED 7B 24 89      ld sp,(Stack)
 409+ 8E8D
 410+ 8E8D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8E8D
 412+ 8E8D 21 13 89     	ld hl,Ctrl_1
 413+ 8E90 CB C6        	set 0,(hl)
 414+ 8E92
 415+ 8E92 DD E5        	push ix
 416+ 8E94 E1               pop hl
 417+ 8E95 F5               push af
 418+ 8E96 DD E1            pop ix
 419+ 8E98
 420+ 8E98 CD A0 7F     	call Guarda_foto_registros
 421+ 8E9B
 422+ 8E9B 21 13 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8E9E CB 86        	res 0,(hl)
 424+ 8EA0
 425+ 8EA0              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8EA0              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8EA0
 428+ 8EA0 CD BB 8B         call Inicia_Puntero_Disparo_Amadeus
 429+ 8EA3 CD B4 8B         call Inicia_Puntero_Disparo_Entidades
 430+ 8EA6
 431+ 8EA6 C9           4 ret
 432+ 8EA7
 433+ 8EA7              ; ----------------------------------------------------------------
 434+ 8EA7              ;
 435+ 8EA7              ;   4/3/23
 436+ 8EA7              ;
 437+ 8EA7              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8EA7              ;   _ al generarse el disparo.
 439+ 8EA7              ;
 440+ 8EA7              ;       "$80" ..... No se produce colisión.
 441+ 8EA7              ;       "$81" ..... Se produce colisión.
 442+ 8EA7
 443+ 8EA7              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8EA7              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8EA7
 446+ 8EA7
 447+ 8EA7 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8EA9 E5               push hl                                        ; Puntero de impresión.
 449+ 8EAA
 450+ 8EAA 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8EAC CD C8 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8EAF
 453+ 8EAF 7B               ld a,e
 454+ 8EB0 E6 01            and 1
 455+ 8EB2 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8EB4
 457+ 8EB4 E1               pop hl
 458+ 8EB5 E5               push hl
 459+ 8EB6 CD 57 94         call NextScan
 460+ 8EB9
 461+ 8EB9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8EBA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8EBC 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8EBE              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8EBE 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8EC0 CD C8 8E         call Bucle_2
 467+ 8EC3
 468+ 8EC3 43           2 ld b,e
 469+ 8EC4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8EC5 FD E1            pop iy
 471+ 8EC7 C9               ret
 472+ 8EC8
 473+ 8EC8               ; ---------- ----------
 474+ 8EC8
 475+ 8EC8 06 02        Bucle_2 ld b,2
 476+ 8ECA FD 7E 00     2 ld a,(iy)
 477+ 8ECD A6               and (hl)
 478+ 8ECE 28 02            jr z,1F
 479+ 8ED0 1E 81            ld e,$81
 480+ 8ED2 23           1 inc hl
 481+ 8ED3 FD 23            inc iy
 482+ 8ED5 10 F3            djnz 2B
 483+ 8ED7 C9               ret
 484+ 8ED8
 485+ 8ED8              ; -------------------------------------------------------------------------------------------------------------
 486+ 8ED8              ;
 487+ 8ED8              ;   11/04/23
 488+ 8ED8              ;
 489+ 8ED8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8ED8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8ED8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8ED8              ;
 493+ 8ED8              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8ED8
 495+ 8ED8              Compara_coordenadas_X
 496+ 8ED8
 497+ 8ED8              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8ED8              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8ED8
 500+ 8ED8              ; Preparamos registros:
 501+ 8ED8
 502+ 8ED8 21 DC 88         ld hl,Filas+6
 503+ 8EDB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8EDC 23               inc hl
 505+ 8EDD 23               inc hl
 506+ 8EDE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8EDF 43               ld b,e
 508+ 8EE0 21 EA 88         ld hl,Filas+20
 509+ 8EE3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8EE4 21 39 89         ld hl,Coordenadas_X_Entidad
 511+ 8EE7 CD F8 90         call Guarda_coordenadas_X
 512+ 8EEA
 513+ 8EEA              ; Preparamos registros:
 514+ 8EEA
 515+ 8EEA 21 86 84         ld hl,Amadeus_db+6
 516+ 8EED 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8EEE 23               inc hl
 518+ 8EEF 23               inc hl
 519+ 8EF0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8EF1 7B               ld a,e
 521+ 8EF2 08               ex af,af'
 522+ 8EF3 21 94 84         ld hl,Amadeus_db+20
 523+ 8EF6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8EF7 21 36 89         ld hl,Coordenadas_X_Amadeus
 525+ 8EFA CD F8 90         call Guarda_coordenadas_X
 526+ 8EFD
 527+ 8EFD              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8EFD              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8EFD
 530+ 8EFD 04               inc b
 531+ 8EFE 05               dec b
 532+ 8EFF 28 04            jr z,1F
 533+ 8F01 06 03            ld b,3
 534+ 8F03 18 02            jr 2F
 535+ 8F05 06 02        1 ld b,2
 536+ 8F07 08           2 ex af,af'
 537+ 8F08 3C               inc a
 538+ 8F09 3D               dec a
 539+ 8F0A 28 04            jr z,5F
 540+ 8F0C 0E 03            ld c,3
 541+ 8F0E 18 02            jr 6F
 542+ 8F10 0E 02        5 ld c,2
 543+ 8F12 79           6 ld a,c
 544+ 8F13 08               ex af,af'
 545+ 8F14 11 39 89         ld de,Coordenadas_X_Entidad
 546+ 8F17 1A           4 ld a,(de)
 547+ 8F18 21 36 89         ld hl,Coordenadas_X_Amadeus
 548+ 8F1B BE           3 cp (hl)
 549+ 8F1C 28 0E            jr z,7F
 550+ 8F1E 23               inc hl
 551+ 8F1F 0D               dec c
 552+ 8F20 20 F9            jr nz,3B
 553+ 8F22 13               inc de
 554+ 8F23 08               ex af,af'
 555+ 8F24 4F               ld c,a
 556+ 8F25 08               ex af,af'
 557+ 8F26 10 EF            djnz 4B
 558+ 8F28
 559+ 8F28              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8F28
 561+ 8F28 CD 37 91     8 call Limpia_Coordenadas_X
 562+ 8F2B C9               ret
 563+ 8F2C
 564+ 8F2C              7
 565+ 8F2C 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8F2E 32 EF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8F31 21 31 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8F34 CB D6            set 2,(hl)
 569+ 8F36 18 F0            jr 8B
 570+ 8F38
 571+ 8F38              ; -----------------------------------------------------------------------
 572+ 8F38              ;
 573+ 8F38              ;   17/04/23
 574+ 8F38              ;
 575+ 8F38
 576+ 8F38              Detecta_colision_nave_entidad
 577+ 8F38
 578+ 8F38              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8F38
 580+ 8F38 2A D8 88         ld hl,(Posicion_actual)
 581+ 8F3B CD BC 93         call Calcula_puntero_de_impresion
 582+ 8F3E
 583+ 8F3E              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8F3E              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8F3E
 586+ 8F3E DD E5            push ix
 587+ 8F40 E1               pop hl
 588+ 8F41 E5               push hl
 589+ 8F42
 590+ 8F42              ; ----- ----- -----
 591+ 8F42 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8F44 06 0A            ld b,10
 593+ 8F46 CD 76 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8F49 7B               ld a,e
 595+ 8F4A FE 05            cp 5
 596+ 8F4C 38 0E            jr c,3F
 597+ 8F4E
 598+ 8F4E              ; LLegados a este punto:
 599+ 8F4E              ;
 600+ 8F4E              ;   HAY COLISIÓN !!!!!.
 601+ 8F4E              ;
 602+ 8F4E              ;   .db (Impacto) de Amadeus a "1".
 603+ 8F4E              ;   SET el bit3 de (Impacto2).
 604+ 8F4E              ;
 605+ 8F4E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8F4E
 607+ 8F4E 21 99 84         ld hl,Amadeus_db+25
 608+ 8F51 36 01            ld (hl),1
 609+ 8F53 21 31 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8F56 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8F58 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8F5A 18 18            jr 1F
 613+ 8F5C
 614+ 8F5C              ; -----
 615+ 8F5C
 616+ 8F5C E1           3 pop hl
 617+ 8F5D CD 57 94         call NextScan
 618+ 8F60 E5               push hl
 619+ 8F61 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8F62 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8F64 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8F66 30 0C            jr nc,1F
 623+ 8F68              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8F68 10 DC            djnz 2B
 625+ 8F6A
 626+ 8F6A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8F6A
 628+ 8F6A              ; LLegados a este punto:
 629+ 8F6A              ;
 630+ 8F6A              ;   NO HAY COLISIÓN !!!!!.
 631+ 8F6A              ;
 632+ 8F6A              ;   .db (Impacto) de Amadeus a "0".
 633+ 8F6A              ;   RES el bit2 de (Impacto2).
 634+ 8F6A              ;
 635+ 8F6A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8F6A              ;   Lo colocamos a "0".
 637+ 8F6A
 638+ 8F6A 21 31 89         ld hl,Impacto2
 639+ 8F6D CB 96            res 2,(hl)
 640+ 8F6F 2A 32 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8F72 36 00            ld (hl),0
 642+ 8F74
 643+ 8F74 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8F75 C9               ret
 645+ 8F76
 646+ 8F76               ; ---------- ----------
 647+ 8F76
 648+ 8F76 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8F77 3A D7 88         ld a,(Columns)
 650+ 8F7A 47               ld b,a
 651+ 8F7B FD 7E 00     2 ld a,(iy)
 652+ 8F7E BE               cp (hl)
 653+ 8F7F 28 01            jr z,1F
 654+ 8F81
 655+ 8F81 1C               inc e
 656+ 8F82
 657+ 8F82 23           1 inc hl
 658+ 8F83 FD 23            inc iy
 659+ 8F85 10 F4            djnz 2B
 660+ 8F87 C1               pop bc
 661+ 8F88 C9               ret
 662+ 8F89
 663+ 8F89              ; -------------------------------------------------------------------------------------------------------------
 664+ 8F89              ;
 665+ 8F89              ;   13/03/23
 666+ 8F89              ;
 667+ 8F89              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8F89              ;
 669+ 8F89              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8F89
 671+ 8F89 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8F8C 7E               ld a,(hl)
 673+ 8F8D A7               and a
 674+ 8F8E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8F8F
 676+ 8F8F 44               ld b,h
 677+ 8F90 4D               ld c,l
 678+ 8F91 2A 2A 89         ld hl,(Stack_snapshot_disparos)
 679+ 8F94 E5               push hl
 680+ 8F95 A7               and a
 681+ 8F96 ED 42            sbc hl,bc
 682+ 8F98 E5               push hl
 683+ 8F99 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8F9A
 685+ 8F9A E1               pop hl
 686+ 8F9B 54               ld d,h
 687+ 8F9C 5D               ld e,l
 688+ 8F9D 1B               dec de
 689+ 8F9E ED B8            lddr                                                ; Limpiamos.
 690+ 8FA0
 691+ 8FA0 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 8FA3 22 2A 89         ld (Stack_snapshot_disparos),hl
 693+ 8FA6
 694+ 8FA6 C9               ret
 695+ 8FA7
 696+ 8FA7              ; -------------------------------------------------------------------------------------------------------------
 697+ 8FA7              ;
 698+ 8FA7              ;   28/03/23
 699+ 8FA7              ;
 700+ 8FA7
 701+ 8FA7 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8FAA 2A 2F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8FAD
 704+ 8FAD CD F2 8B     2 call Extrae_address
 705+ 8FB0 7E               ld a,(hl)
 706+ 8FB1 A7               and a
 707+ 8FB2 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8FB4
 709+ 8FB4              ; ----- ----- ----- ----- ----- -----
 710+ 8FB4
 711+ 8FB4 C5               push bc
 712+ 8FB5 CD 71 90         call foto_disparo_a_borrar
 713+ 8FB8
 714+ 8FB8              ; Existe colisión con este disparo???
 715+ 8FB8
 716+ 8FB8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8FB9 7E               ld a,(hl)
 718+ 8FBA 2B               dec hl
 719+ 8FBB E6 01            and 1
 720+ 8FBD 28 1D            jr z,9F
 721+ 8FBF
 722+ 8FBF              ;   En este punto:
 723+ 8FBF              ;
 724+ 8FBF              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8FBF              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8FBF              ;   _con la entidad).
 727+ 8FBF              ;
 728+ 8FBF              ;   Disparo_2A defw 0                                ; Control.
 729+ 8FBF              ;    defw 0                                          ; Puntero objeto.
 730+ 8FBF              ;    defw 0                                          ; Puntero de impresión.
 731+ 8FBF              ;    defw 0                                          ; Rutina de impresión.
 732+ 8FBF
 733+ 8FBF E5               push hl
 734+ 8FC0
 735+ 8FC0 06 04            ld b,4
 736+ 8FC2 23           19 inc hl
 737+ 8FC3 10 FD            djnz 19B
 738+ 8FC5
 739+ 8FC5 CD F2 8B         call Extrae_address
 740+ 8FC8 CD AE 9A         call Genera_coordenadas_disparo
 741+ 8FCB
 742+ 8FCB              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8FCB
 744+ 8FCB 21 34 89         ld hl,Coordenadas_disparo_certero
 745+ 8FCE 72               ld (hl),d
 746+ 8FCF 23               inc hl
 747+ 8FD0 73               ld (hl),e
 748+ 8FD1
 749+ 8FD1              ; Elimino el disparo de la base de datos.
 750+ 8FD1
 751+ 8FD1 E1               pop hl
 752+ 8FD2 CD ED 90         call Elimina_disparo_de_base_de_datos
 753+ 8FD5 21 31 89         ld hl,Impacto2
 754+ 8FD8 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8FDA
 756+ 8FDA 18 06            jr 11F
 757+ 8FDC
 758+ 8FDC CD 9A 90     9 call Mueve_disparo
 759+ 8FDF CD 71 90         call foto_disparo_a_borrar
 760+ 8FE2
 761+ 8FE2 C1           11 pop bc
 762+ 8FE3 18 04            jr 7F
 763+ 8FE5
 764+ 8FE5              ; ----- ----- ----- ----- ----- -----
 765+ 8FE5
 766+ 8FE5 ED 42        1 sbc hl,bc
 767+ 8FE7 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8FE9 2A 2F 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8FEC 23               inc hl
 770+ 8FED 23               inc hl
 771+ 8FEE 22 2F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8FF1 18 BA            jr 2B
 773+ 8FF3 CD BB 8B     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8FF6
 775+ 8FF6 01 66 84         ld bc,Disparo_11
 776+ 8FF9 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8FFC
 778+ 8FFC CD F2 8B     5 call Extrae_address
 779+ 8FFF 7E               ld a,(hl)
 780+ 9000 A7               and a
 781+ 9001 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9003
 783+ 9003              ; ----- ----- ----- ----- ----- -----
 784+ 9003
 785+ 9003 C5               push bc
 786+ 9004 CD 71 90         call foto_disparo_a_borrar
 787+ 9007
 788+ 9007              ; Existe colisión con este disparo???
 789+ 9007
 790+ 9007 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 9008 7E               ld a,(hl)
 792+ 9009 2B               dec hl
 793+ 900A E6 01            and 1
 794+ 900C 28 48            jr z,10F
 795+ 900E
 796+ 900E              ; La colisión se produce con Amadeus???
 797+ 900E              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 900E
 799+ 900E E5               push hl
 800+ 900F
 801+ 900F 06 04            ld b,4
 802+ 9011 23           16 inc hl
 803+ 9012 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9014 CD F2 8B         call Extrae_address
 805+ 9017 CD AE 9A         call Genera_coordenadas_disparo
 806+ 901A
 807+ 901A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 901B FE 16            cp $16
 809+ 901D 38 22            jr c,15F
 810+ 901F
 811+ 901F              ; (Colisiones en filas 16 y 17).
 812+ 901F
 813+ 901F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9020
 815+ 9020              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9020
 817+ 9020 21 86 84         ld hl,Amadeus_db+6
 818+ 9023 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9024 23               inc hl
 820+ 9025 23               inc hl
 821+ 9026 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9027 21 94 84         ld hl,Amadeus_db+20
 823+ 902A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 902B 21 36 89         ld hl,Coordenadas_X_Amadeus
 825+ 902E CD F8 90         call Guarda_coordenadas_X
 826+ 9031
 827+ 9031 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9032
 829+ 9032              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9032
 831+ 9032 06 03            ld b,3
 832+ 9034 21 36 89         ld hl,Coordenadas_X_Amadeus
 833+ 9037 7E           18 ld a,(hl)
 834+ 9038 BA               cp d
 835+ 9039 20 03            jr nz,17F
 836+ 903B
 837+ 903B              ; Colisión Amadeus !!!!!!!!!!
 838+ 903B
 839+ 903B E1               pop hl
 840+ 903C 18 09            jr 14F
 841+ 903E
 842+ 903E 23           17 inc hl
 843+ 903F 10 F6            djnz 18B
 844+ 9041
 845+ 9041              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9041              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9041
 848+ 9041 E1           15 pop hl
 849+ 9042 23               inc hl
 850+ 9043 35               dec (hl)
 851+ 9044 2B               dec hl
 852+ 9045 18 0F            jr 10F
 853+ 9047
 854+ 9047              ; -----------------------debug
 855+ 9047
 856+ 9047              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9047              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9047
 859+ 9047 E5           14 push hl
 860+ 9048 CD ED 90         call Elimina_disparo_de_base_de_datos
 861+ 904B 21 31 89         ld hl,Impacto2
 862+ 904E CB CE            set 1,(hl)
 863+ 9050 CD 37 91         call Limpia_Coordenadas_X
 864+ 9053
 865+ 9053 E1               pop hl
 866+ 9054 18 06            jr 12F
 867+ 9056
 868+ 9056 CD 9A 90     10 call Mueve_disparo
 869+ 9059 CD 71 90         call foto_disparo_a_borrar
 870+ 905C C1           12 pop bc
 871+ 905D
 872+ 905D 18 04            jr 8F
 873+ 905F
 874+ 905F              ; ----- ----- ----- ----- ----- -----
 875+ 905F
 876+ 905F ED 42        4 sbc hl,bc
 877+ 9061 28 0A            jr z,6F
 878+ 9063
 879+ 9063 2A 2D 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9066 23               inc hl
 881+ 9067 23               inc hl
 882+ 9068 22 2D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 906B 18 8F            jr 5B
 884+ 906D
 885+ 906D CD B4 8B     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9070 C9               ret
 887+ 9071
 888+ 9071              ; ------------------------------------------------------------------
 889+ 9071
 890+ 9071              foto_disparo_a_borrar
 891+ 9071
 892+ 9071 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9072 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9073 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9074
 896+ 9074 E5               push hl
 897+ 9075 23               inc hl
 898+ 9076 23               inc hl
 899+ 9077 ED 73 24 89      ld (Stack),sp
 900+ 907B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 907C FD E1            pop iy
 902+ 907E DD E1            pop ix
 903+ 9080 E1               pop hl
 904+ 9081 ED 7B 24 89      ld sp,(Stack)
 905+ 9085 3A 13 89         ld a,(Ctrl_1)
 906+ 9088 CB C7            set 0,a
 907+ 908A 32 13 89         ld (Ctrl_1),a
 908+ 908D CD A0 7F         call Guarda_foto_registros
 909+ 9090 3A 13 89         ld a,(Ctrl_1)
 910+ 9093 CB 87            res 0,a
 911+ 9095 32 13 89         ld (Ctrl_1),a
 912+ 9098 E1               pop hl
 913+ 9099 C9               ret
 914+ 909A
 915+ 909A E5           Mueve_disparo push hl
 916+ 909B 7E               ld a,(hl)
 917+ 909C 06 04            ld b,4
 918+ 909E 23           1 inc hl
 919+ 909F 10 FD            djnz 1B
 920+ 90A1
 921+ 90A1              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 90A1
 923+ 90A1 CD F2 8B         call Extrae_address
 924+ 90A4
 925+ 90A4 E6 01            and 1
 926+ 90A6 28 2B            jr z,2F
 927+ 90A8
 928+ 90A8              ; Disparo hacia arriba, (Amadeus).
 929+ 90A8
 930+ 90A8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 90A8              ; _ de la dificultad.
 932+ 90A8
 933+ 90A8 CD 66 94         call PreviousScan
 934+ 90AB CD 66 94         call PreviousScan
 935+ 90AE CD 66 94         call PreviousScan
 936+ 90B1
 937+ 90B1              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 90B1
 939+ 90B1 7C               ld a,h
 940+ 90B2 FE 40            cp $40
 941+ 90B4 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 90B6
 943+ 90B6              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 90B6
 945+ 90B6 EB               ex de,hl
 946+ 90B7 06 04            ld b,4
 947+ 90B9 2B           6 dec hl
 948+ 90BA 10 FD            djnz 6B
 949+ 90BC
 950+ 90BC CD ED 90         call Elimina_disparo_de_base_de_datos
 951+ 90BF E1               pop hl
 952+ 90C0 18 10            jr 7F
 953+ 90C2
 954+ 90C2              ; Se ha desplazado la bala, compruebo colisión.
 955+ 90C2
 956+ 90C2 D5           3 push de
 957+ 90C3 C5               push bc
 958+ 90C4
 959+ 90C4 CD A7 8E         call Comprueba_Colision
 960+ 90C7
 961+ 90C7              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 90C7
 963+ 90C7 78               ld a,b
 964+ 90C8
 965+ 90C8 C1               pop bc
 966+ 90C9 D1               pop de
 967+ 90CA
 968+ 90CA EB               ex de,hl
 969+ 90CB
 970+ 90CB 73               ld (hl),e
 971+ 90CC 23               inc hl
 972+ 90CD 72               ld (hl),d
 973+ 90CE
 974+ 90CE E1           4 pop hl
 975+ 90CF 23               inc hl
 976+ 90D0 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 90D1 2B               dec hl
 978+ 90D2 C9           7 ret
 979+ 90D3
 980+ 90D3              ; Disparo hacia abajo, (Entidad).
 981+ 90D3
 982+ 90D3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 90D3              ; _ de la dificultad.
 984+ 90D3
 985+ 90D3 CD 57 94     2 call NextScan
 986+ 90D6 CD 57 94         call NextScan
 987+ 90D9 CD 57 94         call NextScan
 988+ 90DC
 989+ 90DC              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 90DC
 991+ 90DC 7C               ld a,h
 992+ 90DD FE 58            cp $58
 993+ 90DF 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 90E1
 995+ 90E1 EB               ex de,hl
 996+ 90E2 06 04            ld b,4
 997+ 90E4 2B           5 dec hl
 998+ 90E5 10 FD            djnz 5B
 999+ 90E7
1000+ 90E7 CD ED 90         call Elimina_disparo_de_base_de_datos
1001+ 90EA E1               pop hl
1002+ 90EB 18 E5            jr 7B
1003+ 90ED
1004+ 90ED              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 90ED
1006+ 90ED 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 90F0 AF               xor a
1008+ 90F1 77               ld (hl),a
1009+ 90F2 54               ld d,h
1010+ 90F3 5D               ld e,l
1011+ 90F4 13               inc de
1012+ 90F5 ED B0            ldir
1013+ 90F7 C9               ret
1014+ 90F8
1015+ 90F8              ; -----------------------------------------------------------------
1016+ 90F8              ;
1017+ 90F8              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 90F8              ;
1019+ 90F8              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 90F8              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 90F8              ;
1022+ 90F8              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 90F8              ;
1024+ 90F8              ;   INPUTS:
1025+ 90F8              ;
1026+ 90F8              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 90F8              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 90F8              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 90F8
1030+ 90F8              ;   MODIFICA: A, HL, DE y C
1031+ 90F8
1032+ 90F8 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 90F9 79               ld a,c
1034+ 90FA E6 01            and 1
1035+ 90FC 20 03            jr nz,1F
1036+ 90FE 14               inc d
1037+ 90FF 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 9101
1039+ 9101              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 9101              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 9101
1042+ 9101 15           1 dec d
1043+ 9102 23           2 inc hl
1044+ 9103 72               ld (hl),d
1045+ 9104
1046+ 9104 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 9105 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 9106 C8               ret z
1049+ 9107
1050+ 9107 AF               xor a
1051+ 9108 5F               ld e,a
1052+ 9109 18 ED            jr Guarda_coordenadas_X
1053+ 910B
1054+ 910B              ; -----------------------------------------------------------------
1055+ 910B              ;
1056+ 910B              ;   12/04/23
1057+ 910B              ;
1058+ 910B
1059+ 910B 3A 31 89     Selector_de_impactos ld a,(Impacto2)
1060+ 910E A7               and a
1061+ 910F C8               ret z
1062+ 9110
1063+ 9110 FE 04            cp 4
1064+ 9112 20 09            jr nz,1F
1065+ 9114
1066+ 9114
1067+ 9114              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 9114
1069+ 9114 CD 38 8F         call Detecta_colision_nave_entidad
1070+ 9117
1071+ 9117 21 31 89         ld hl,Impacto2
1072+ 911A CB 5E            bit 3,(hl)
1073+ 911C C0               ret nz                                               ; Existe colisión, RET.
1074+ 911D
1075+ 911D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 911D              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 911D
1078+ 911D 21 31 89     1 ld hl,Impacto2
1079+ 9120 CB 4E            bit 1,(hl)
1080+ 9122 28 07            jr z,2F
1081+ 9124
1082+ 9124 21 99 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 9127 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 9129 18 0B            jr 3F
1085+ 912B
1086+ 912B 21 31 89     2 ld hl,Impacto2
1087+ 912E CB 46            bit 0,(hl)
1088+ 9130 C8               ret z
1089+ 9131
1090+ 9131              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 9131
1092+ 9131 21 13 89         ld hl,Ctrl_1
1093+ 9134 CB D6            set 2,(hl)
1094+ 9136
1095+ 9136 C9           3 ret
1096+ 9137
1097+ 9137              ; -----------------------------------------------------------------
1098+ 9137              ;
1099+ 9137              ;   16/04/23
1100+ 9137              ;
1101+ 9137
1102+ 9137 AF           Limpia_Coordenadas_X xor a
1103+ 9138 06 06            ld b,6
1104+ 913A 21 36 89         ld hl,Coordenadas_X_Amadeus
1105+ 913D 77           1 ld (hl),a
1106+ 913E 23               inc hl
1107+ 913F 10 FC            djnz 1B
1108+ 9141 C9               ret
1109+ 9142
1110+ 9142              ; -----------------------------------------------------------------
1111+ 9142              ;
1112+ 9142              ;   25/04/23
1113+ 9142              ;
1114+ 9142
1115+ 9142              Determina_resultado_comparativa
1116+ 9142
1117+ 9142              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9142              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9142              ;
1120+ 9142              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9142              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9142              ;
1123+ 9142              ;   SBC HL,DE
1124+ 9142
1125+ 9142 7C               ld a,h
1126+ 9143 06 00            ld b,0
1127+ 9145
1128+ 9145 CD 55 91         call Compara_cositas
1129+ 9148
1130+ 9148 04               inc b
1131+ 9149 05               dec b
1132+ 914A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 914B
1134+ 914B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 914C 06 00            ld b,0
1136+ 914E
1137+ 914E CD 55 91         call Compara_cositas
1138+ 9151 18 01            jr 2F
1139+ 9153
1140+ 9153 04           1 inc b
1141+ 9154 C9           2 ret
1142+ 9155
1143+ 9155 A7           Compara_cositas and a
1144+ 9156 28 17            jr z,1F
1145+ 9158
1146+ 9158 FE FD            cp $fd
1147+ 915A 28 13            jr z,1F
1148+ 915C FE FE            cp $fe
1149+ 915E 28 0F            jr z,1F
1150+ 9160 FE FF            cp $ff
1151+ 9162 28 0B            jr z,1F
1152+ 9164 FE 01            cp $01
1153+ 9166 28 07            jr z,1F
1154+ 9168 FE 02            cp $02
1155+ 916A 28 03            jr z,1F
1156+ 916C FE 03            cp $03
1157+ 916E C0               ret nz
1158+ 916F
1159+ 916F 04           1 inc b
1160+ 9170 C9               ret
1161+ 9171
# file closed: Disparo.asm
1197  9171              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9171              ; ******************************************************************************************************************************************************************************************
   2+ 9171              ;
   3+ 9171              ; 01/23
   4+ 9171              ;
   5+ 9171              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9171
   7+ 9171 CD 4B 94     Draw call Prepara_draw
   8+ 9174 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9175 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9176 28 05        	jr z,2F
  11+ 9178
  12+ 9178 3A EA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 917B 18 0C        	jr 1F
  14+ 917D 2A E8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9180 22 D8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9183 CD 12 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9186              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9186 CD D1 9B     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9189 3A 04 89     1 ld a,(Ctrl_0)
  20+ 918C CB 6F        	bit 5,a
  21+ 918E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9190
  23+ 9190 CD A8 91     	call Comprueba_limite_horizontal
  24+ 9193 CD 38 92     	call Comprueba_limite_vertical
  25+ 9196
  26+ 9196              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9196
  28+ 9196 CD 85 93     3 call calcula_CColumnass
  29+ 9199 CD BC 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 919C CD 11 94     	call Define_rutina_de_impresion
  31+ 919F
  32+ 919F 3A 04 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 91A2 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 91A4 32 04 89     	ld (Ctrl_0),a
  35+ 91A7
  36+ 91A7 C9           	ret
  37+ 91A8
  38+ 91A8              ; *******************************************************************************************************************************************************************************************
  39+ 91A8              ;	21/01/23
  40+ 91A8              ;
  41+ 91A8              ; 	Comprueba_limite_horizontal.
  42+ 91A8              ;
  43+ 91A8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 91A8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 91A8              ;
  46+ 91A8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 91A8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 91A8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 91A8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 91A8
  51+ 91A8
  52+ 91A8
  53+ 91A8 3A 04 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 91AB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 91AD 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 91AF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 91B1 32 04 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 91B4 18 09            jr 6F
  59+ 91B6 CB 5F        1 bit 3,a
  60+ 91B8 28 0A            jr z,2F
  61+ 91BA E6 F7            and $f7
  62+ 91BC 32 04 89         ld (Ctrl_0),a
  63+ 91BF CD 12 93     6 call Inicializacion
  64+ 91C2 18 5B            jr 5F
  65+ 91C4 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 91C5
  67+ 91C5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 91C5              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 91C5
  70+ 91C5 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 91C6 2A 0F 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 91C9 CD 17 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 91CC 67           	ld h,a
  74+ 91CD EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 91CE CD 17 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 91D1 67           	ld h,a
  77+ 91D2 A7           	and a
  78+ 91D3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 91D5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 91D6 3A EA 88     	ld a,(Cuad_objeto)
  81+ 91D9 FE 02        	cp 2
  82+ 91DB 38 1E        	jr c,3F
  83+ 91DD 28 1C        	jr z,3F
  84+ 91DF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 91E0 28 23            jr z,7F
  86+ 91E2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 91E4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 91E6 E1           	pop hl
  89+ 91E7
  90+ 91E7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 91E7              ; _para indicar con E="2" en caso necesario.
  92+ 91E7
  93+ 91E7 E5               push hl
  94+ 91E8 C5               push bc
  95+ 91E9 CD 17 97     	call calcula_tercio
  96+ 91EC FE 01        	cp 1
  97+ 91EE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 91F0 CD 20 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 91F3 28 26            jr z,9F
 100+ 91F5 38 24            jr c,9F
 101+ 91F7 1E 00        11 ld e,0
 102+ 91F9 18 22            jr 8F
 103+ 91FB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 91FC 28 07        	jr z, 7F
 105+ 91FE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9200 1E 00         	ld e,0
 107+ 9202 E1           	pop hl
 108+ 9203 18 04        	jr 4F
 109+ 9205 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9207 18 15            jr 10F
 111+ 9209
 112+ 9209              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9209              ; _para indicar con E="2" en caso necesario.
 114+ 9209
 115+ 9209 E5           4 push hl
 116+ 920A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 920B CD 17 97     	call calcula_tercio
 118+ 920E FE 01        	cp 1
 119+ 9210 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9212 CD 20 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 9215 28 04            jr z,9F
 122+ 9217 30 02            jr nc,9F
 123+ 9219 18 02        	jr 8F
 124+ 921B 1E 02        9 ld e,2
 125+ 921D C1           8 pop bc
 126+ 921E E1           10 pop hl
 127+ 921F C9           5 ret
 128+ 9220
 129+ 9220              ; --------------------
 130+ 9220              ;
 131+ 9220              ; 25/08/22
 132+ 9220
 133+ 9220 CD 17 97     Comprueba_centro call calcula_tercio
 134+ 9223 67               ld h,a
 135+ 9224 08           	ex af,af
 136+ 9225 FE 02        	cp 2
 137+ 9227 38 07        	jr c,1F
 138+ 9229 28 05        	jr z,1F
 139+ 922B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 922E 18 03        	jr 2F
 141+ 9230 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9233 08           2 ex af,af
 143+ 9234 A7               and a
 144+ 9235 ED 42            sbc hl,bc
 145+ 9237 C9               ret
 146+ 9238
 147+ 9238              ; *********************************************************************************************************************************************************************************************
 148+ 9238              ;
 149+ 9238              ;   16/8/22
 150+ 9238              ;
 151+ 9238              ;	Comprueba_limite_vertical
 152+ 9238              ;
 153+ 9238              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9238              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9238              ;
 156+ 9238
 157+ 9238 2A D8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 923B 7D           	ld a,l
 159+ 923C E6 1F        	and $1F
 160+ 923E 57           	ld d,a
 161+ 923F 3A 11 89     	ld a,(Limite_vertical)
 162+ 9242 BA           	cp d 											; Límite - Posición.
 163+ 9243 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9244 3A EA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9247 CB 47        	bit 0,a
 166+ 9249 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 924B
 168+ 924B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 924B
 170+ 924B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 924C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 924E
 173+ 924E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 924E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 924E
 176+ 924E 3A DC 88         ld a,(Coordenada_X)
 177+ 9251 16 0F            ld d,Centro_izquierda
 178+ 9253 A7               and a
 179+ 9254 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9255 28 1E            jr z,3F
 181+ 9257 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9259              ;                                                    ; _salimos sin modificar nada.
 183+ 9259 18 0E            jr 2F
 184+ 925B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 925C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 925E
 187+ 925E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 925E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 925E
 190+ 925E 3A DC 88         ld a,(Coordenada_X)
 191+ 9261 16 10            ld d,Centro_derecha
 192+ 9263 A7               and a
 193+ 9264 92               sub d
 194+ 9265 28 0E            jr z,3F
 195+ 9267 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9269              ;                                                    ; _salimos sin modificar nada.
 197+ 9269 CB 43        2 bit 0,e
 198+ 926B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 926D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 926E CD 02 93         call Modificaccionne
 201+ 9271 C1           	pop bc
 202+ 9272 CD 12 93         call Inicializacion
 203+ 9275 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9276
 205+ 9276              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9276
 207+ 9276 C5           4 push bc
 208+ 9277 01 D7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 927A 0A           	ld a,(bc)
 210+ 927B 3D           	dec a
 211+ 927C 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 927D 7D           	ld a,l
 213+ 927E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 927F CB 47        	bit 0,a
 215+ 9281 28 03        	jr z,5F
 216+ 9283 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9284 18 2E        	jr 7F
 218+ 9286
 219+ 9286              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9286
 221+ 9286 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9287 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9288 3A 04 89     	ld a,(Ctrl_0)
 224+ 928B CB 4F        	bit 1,a
 225+ 928D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 928F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9290
 228+ 9290              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9290
 230+ 9290 1C               inc e
 231+ 9291 1D               dec e
 232+ 9292 20 07            jr nz,12F
 233+ 9294 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9295 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9296 22 D8 88     	ld (Posicion_actual),hl
 236+ 9299 18 44        13 jr 9F
 237+ 929B CB 43        12 bit 0,e
 238+ 929D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 929F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 929F C1           	pop bc
 241+ 92A0 18 D3        	jr 3B
 242+ 92A2 80           14 add b
 243+ 92A3 6F               ld l,a
 244+ 92A4 22 D8 88     	ld (Posicion_actual),hl
 245+ 92A7 CD 02 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 92AA 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 92AC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 92AE 32 04 89         ld (Ctrl_0),a
 249+ 92B1 F1           	pop af
 250+ 92B2 18 2B        	jr 9F
 251+ 92B4
 252+ 92B4              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 92B4
 254+ 92B4 F5           7 push af
 255+ 92B5 3A 04 89     	ld a,(Ctrl_0)
 256+ 92B8 CB 47        	bit 0,a
 257+ 92BA 20 1D        	jr nz,8F
 258+ 92BC F1           	pop af
 259+ 92BD
 260+ 92BD              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 92BD
 262+ 92BD 1C           	inc e
 263+ 92BE 1D               dec e
 264+ 92BF 20 07            jr nz,10F
 265+ 92C1 90           	sub b
 266+ 92C2 6F               ld l,a
 267+ 92C3 22 D8 88     	ld (Posicion_actual),hl
 268+ 92C6 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 92C8              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 92C8 CB 43        10 bit 0,e
 271+ 92CA 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 92CC              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 92CC C1           	pop bc
 274+ 92CD 18 A6        	jr 3B
 275+ 92CF 90           16 sub b
 276+ 92D0 6F               ld l,a
 277+ 92D1 22 D8 88     	ld (Posicion_actual),hl
 278+ 92D4 CD 02 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 92D7 18 06            jr 9F
 280+ 92D9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 92DB 32 04 89         ld (Ctrl_0),a
 282+ 92DE F1           	pop af
 283+ 92DF C1           9 pop bc
 284+ 92E0 1E 00        	ld e,0
 285+ 92E2 CD 12 93         call Inicializacion
 286+ 92E5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 92E6 08           	ex af,af
 288+ 92E7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 92E8 18 8B            jr 3B
 290+ 92EA
 291+ 92EA              ; --------------------
 292+ 92EA
 293+ 92EA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 92EC CD 66 94     1 call PreviousScan
 295+ 92EF 10 FB            djnz 1B
 296+ 92F1 22 D8 88     	ld (Posicion_actual),hl
 297+ 92F4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 92F5 C9           	ret
 299+ 92F6
 300+ 92F6              ; --------------------
 301+ 92F6
 302+ 92F6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 92F8 CD 57 94     1 call NextScan
 304+ 92FB 10 FB            djnz 1B
 305+ 92FD 22 D8 88     	ld (Posicion_actual),hl
 306+ 9300 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9301 C9           	ret
 308+ 9302
 309+ 9302              ; --------------------
 310+ 9302              ;
 311+ 9302              ;	22/01/23
 312+ 9302              ;
 313+ 9302              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9302              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9302              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9302
 317+ 9302
 318+ 9302              Modificaccionne
 319+ 9302
 320+ 9302 3A EA 88     	ld a,(Cuad_objeto)
 321+ 9305 FE 02        	cp 2
 322+ 9307 CC EA 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 930A DC EA 92         call c,Modifica_Pos_actual
 324+ 930D C8           	ret z
 325+ 930E CD F6 92         call Modifica_Pos_actual2
 326+ 9311 C9               ret
 327+ 9312
 328+ 9312              ; *************************************************************************************************************************************************************************************************
 329+ 9312              ;
 330+ 9312              ;	13/8/22
 331+ 9312              ;
 332+ 9312              ;	Inicializacion
 333+ 9312              ;
 334+ 9312              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9312              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9312              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9312              ;
 338+ 9312              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9312              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9312              ;	_ desaparece/aparece.
 341+ 9312
 342+ 9312              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9312              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9312              ;
 345+ 9312              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9312              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9312              ; 		   [E] ="0"
 348+ 9312
 349+ 9312              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9312
 351+ 9312 CD 17 97     Inicializacion call calcula_tercio
 352+ 9315 28 36        	jr z,primit
 353+ 9317 E6 02        	and 2
 354+ 9319 20 07        	jr nz,segmit
 355+ 931B 7D           	ld a,l
 356+ 931C FE 7F        	cp $7f
 357+ 931E 38 2D        	jr c,primit
 358+ 9320 28 2B        	jr z,primit
 359+ 9322 CD 7F 93     segmit call column
 360+ 9325 38 13        	jr c,tercuad
 361+ 9327 3E 04        cuarcuad ld a,4
 362+ 9329 32 EA 88     	ld (Cuad_objeto),a
 363+ 932C 21 20 48     	ld hl,$4820
 364+ 932F 22 0F 89     	ld (Limite_horizontal),hl
 365+ 9332 21 11 89     	ld hl,Limite_vertical
 366+ 9335 36 0D        	ld (hl),$0d
 367+ 9337 08           	ex af,af
 368+ 9338 18 3C        	jr 1F
 369+ 933A              tercuad
 370+ 933A 3E 03        	ld a,3
 371+ 933C 32 EA 88     	ld (Cuad_objeto),a
 372+ 933F 21 20 48     	ld hl,$4820
 373+ 9342 22 0F 89     	ld (Limite_horizontal),hl
 374+ 9345 21 11 89     	ld hl,Limite_vertical
 375+ 9348 36 12        	ld (hl),$12
 376+ 934A 08           	ex af,af
 377+ 934B 18 29        	jr 1F
 378+ 934D CD 7F 93     primit call column
 379+ 9350 38 13        	jr c, primcuad
 380+ 9352              segcuad
 381+ 9352 3E 02        	ld a,2
 382+ 9354 32 EA 88     	ld (Cuad_objeto),a
 383+ 9357 21 C0 4F     	ld hl,$4fc0
 384+ 935A 22 0F 89     	ld (Limite_horizontal),hl
 385+ 935D 21 11 89     	ld hl,Limite_vertical
 386+ 9360 36 0D        	ld (hl),$0d
 387+ 9362 08           	ex af,af
 388+ 9363 18 11        	jr 1F
 389+ 9365              primcuad
 390+ 9365 3E 01        	ld a,1
 391+ 9367 32 EA 88     	ld (Cuad_objeto),a
 392+ 936A 21 C0 4F     	ld hl,$4fc0
 393+ 936D 22 0F 89     	ld (Limite_horizontal),hl
 394+ 9370 21 11 89     	ld hl,Limite_vertical
 395+ 9373 36 12        	ld (hl),$12
 396+ 9375 08           	ex af,af
 397+ 9376 CD 83 9A     1 call Genera_coordenadas
 398+ 9379 21 04 89     	ld hl,Ctrl_0
 399+ 937C CB EE        	set 5,(hl)
 400+ 937E C9           	ret
 401+ 937F
 402+ 937F              ; ------------------------------------------------------------------------------------------------------------------
 403+ 937F
 404+ 937F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 937F              ;
 406+ 937F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 937F
 408+ 937F 7D           column ld a,l
 409+ 9380 E6 1F        	and $1f
 410+ 9382 FE 10         	cp $10
 411+ 9384 C9            	ret
 412+ 9385
 413+ 9385              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9385              ;
 415+ 9385              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9385              ;
 417+ 9385              ; 14/12/22
 418+ 9385              ;
 419+ 9385              ;	Modifica: A y BC.
 420+ 9385
 421+ 9385 3A EA 88     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9388 E6 01        	and 1
 423+ 938A 28 17        	jr z,1F
 424+ 938C
 425+ 938C              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 938C
 427+ 938C 3A DC 88     	ld a,(Coordenada_X)
 428+ 938F 47           	ld b,a
 429+ 9390 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9391 79           	ld a,c
 431+ 9392 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9393 38 08        	jr c,2F
 433+ 9395 47           	ld b,a
 434+ 9396 79           	ld a,c
 435+ 9397 90           	sub b
 436+ 9398 32 0E 89     	ld (Columnas),a
 437+ 939B 18 1B        	jr 4F
 438+ 939D 79           2 ld a,c
 439+ 939E 32 0E 89     	ld (Columnas),a
 440+ 93A1 18 15        	jr 4F
 441+ 93A3
 442+ 93A3              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 93A3
 444+ 93A3 3A DC 88     1 ld a,(Coordenada_X)
 445+ 93A6 81           	add c
 446+ 93A7 3D           	dec a
 447+ 93A8 D6 1F        	sub $1f
 448+ 93AA 38 08        	jr c,3F
 449+ 93AC 47           	ld b,a
 450+ 93AD 79           	ld a,c
 451+ 93AE 90           	sub b
 452+ 93AF 32 0E 89     	ld (Columnas),a
 453+ 93B2 18 04        	jr 4F
 454+ 93B4 79           3 ld a,c
 455+ 93B5 32 0E 89     	ld (Columnas),a
 456+ 93B8 D9           4 exx
 457+ 93B9 4F           	ld c,a
 458+ 93BA D9           	exx
 459+ 93BB C9            ret
 460+ 93BC
 461+ 93BC              ; --------------------------------------------------------------------------------------------------------------------
 462+ 93BC              ;
 463+ 93BC              ; 7/1/23
 464+ 93BC              ;
 465+ 93BC              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 93BC              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 93BC              ;
 468+ 93BC              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 93BC              ;	DESTRUYE: HL,B Y A.
 470+ 93BC
 471+ 93BC 3A EA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 93BF FE 02        	cp 2
 473+ 93C1 38 18        	jr c,1F
 474+ 93C3 28 16        	jr z,1F
 475+ 93C5 E6 01        	and 1
 476+ 93C7 28 0D        	jr z,3F
 477+ 93C9
 478+ 93C9              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 93C9
 480+ 93C9 CD 05 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 93CC
 482+ 93CC 7D           9 ld a,l
 483+ 93CD E6 1F        	and $1f
 484+ 93CF 28 2A        	jr z,7F
 485+ 93D1 2B           	dec hl
 486+ 93D2 10 F8        	djnz 9B
 487+ 93D4 18 25        	jr 7F
 488+ 93D6
 489+ 93D6              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 93D6
 491+ 93D6 2A D8 88     3 ld hl,(Posicion_actual)
 492+ 93D9 18 20        	jr 7F
 493+ 93DB
 494+ 93DB 28 14        1 jr z,2F
 495+ 93DD
 496+ 93DD              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 93DD
 498+ 93DD CD 05 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 93E0 7D           4 ld a,l
 500+ 93E1 E6 1F        	and $1f
 501+ 93E3 28 03        	jr z,6F
 502+ 93E5 2B           	dec hl
 503+ 93E6 10 F8        	djnz 4B
 504+ 93E8 06 0F        6 ld b,15
 505+ 93EA CD 66 94     5 call PreviousScan
 506+ 93ED 10 FB        	djnz 5B
 507+ 93EF 18 0A        	jr 7F
 508+ 93F1
 509+ 93F1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 93F1
 511+ 93F1 CD 05 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 93F4 06 0F        	ld b,15
 513+ 93F6 CD 66 94     8 call PreviousScan
 514+ 93F9 10 FB        	djnz 8B
 515+ 93FB
 516+ 93FB E5           7 push hl
 517+ 93FC DD E1        	pop ix
 518+ 93FE
 519+ 93FE 2A DA 88     	ld hl,(Puntero_objeto)
 520+ 9401 E5           	push hl
 521+ 9402 FD E1        	pop iy
 522+ 9404
 523+ 9404 C9           	ret
 524+ 9405
 525+ 9405              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9405              ;
 527+ 9405              ;	2/1/23
 528+ 9405              ;
 529+ 9405              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9405              ;
 531+ 9405              ;	Tras esta rutina tenemos:
 532+ 9405              ;
 533+ 9405              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9405              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9405              ;
 536+ 9405              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9405
 538+ 9405 2A D8 88     Operandos ld hl,(Posicion_actual)
 539+ 9408 3A 0E 89     	ld a,(Columnas)
 540+ 940B 3D           	dec a
 541+ 940C 20 01        	jr nz,1F
 542+ 940E 3C           	inc a
 543+ 940F 47           1 ld b,a
 544+ 9410 C9           	ret
 545+ 9411
 546+ 9411              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9411              ;
 548+ 9411              ;	3/1/23
 549+ 9411              ;
 550+ 9411              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9411              ;
 552+ 9411              ;	Destruye: A,B,HL y DE.
 553+ 9411
 554+ 9411              Define_rutina_de_impresion
 555+ 9411
 556+ 9411 3A D7 88     	ld a,(Columns)
 557+ 9414 47           	ld b,a
 558+ 9415 3A 0E 89     	ld a,(Columnas)
 559+ 9418 B8           	cp b
 560+ 9419 20 0D        	jr nz,2f
 561+ 941B
 562+ 941B              ;	La entidad se imprime entera.
 563+ 941B
 564+ 941B 21 E7 94     	ld hl, Indice_entidades_completas
 565+ 941E E6 01        	and 1
 566+ 9420 28 02        	jr z,1F
 567+ 9422
 568+ 9422 23           	inc hl
 569+ 9423 23           	inc hl
 570+ 9424
 571+ 9424 CD F2 8B     1 call Extrae_address
 572+ 9427 C9           	ret		;	ret
 573+ 9428
 574+ 9428              ;	La entidad no se imprime entera en pantalla.
 575+ 9428
 576+ 9428 3A EA 88     2 ld a,(Cuad_objeto)
 577+ 942B E6 01        	and 1
 578+ 942D 28 17        	jr z,3F
 579+ 942F
 580+ 942F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 942F
 582+ 942F 21 EB 94     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9432 3A D7 88     4 ld a,(Columns)
 584+ 9435 E6 01        	and 1
 585+ 9437 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9439
 587+ 9439 23           	inc hl
 588+ 943A 23           	inc hl
 589+ 943B
 590+ 943B 3A 0E 89     	ld a,(Columnas)
 591+ 943E E6 01        	and 1
 592+ 9440 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 9442
 594+ 9442 23           	inc hl
 595+ 9443 23           	inc hl
 596+ 9444
 597+ 9444 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9446
 599+ 9446 21 F1 94     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9449 18 E7        	jr 4B
 601+ 944B
 602+ 944B              ; --------------------------------------------------------------------------------------------------------------------
 603+ 944B              ;
 604+ 944B              ;	Prepara_draw
 605+ 944B              ;
 606+ 944B              ;	Es una rutina de carga.
 607+ 944B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 944B              ;
 609+ 944B              ;	FUNCIONAMIENTO:
 610+ 944B              ;
 611+ 944B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 944B              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 944B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 944B              ;
 615+ 944B              ;	DESTRUYE:
 616+ 944B              ;
 617+ 944B              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 944B
 619+ 944B 21 D6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 944E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 944F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9450 4E           	ld c,(hl)
 623+ 9451 2A D8 88     	ld hl,(Posicion_actual)
 624+ 9454 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9456 C9           	ret
 626+ 9457
 627+ 9457              ;----------------------------------------------------------------------------------------------------------------
 628+ 9457              ;
 629+ 9457              ;	5/08/22
 630+ 9457              ;
 631+ 9457              ;   NextScan.
 632+ 9457              ;
 633+ 9457              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9457              ;
 635+ 9457              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9457              ;
 637+ 9457              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9457              ;
 639+ 9457              ;       DESTRUIDOS: AF y HL !!!
 640+ 9457              ;
 641+ 9457              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9457              ;
 643+ 9457
 644+ 9457 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9458 7C               ld a,h
 646+ 9459 E6 07            and 7
 647+ 945B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 945C
 649+ 945C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 945D C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 945F 6F               ld l,a
 652+ 9460 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9461
 654+ 9461 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9462 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9464 67               ld h,a
 657+ 9465 C9               ret
 658+ 9466
 659+ 9466              ;----------------------------------------------------------------------------------------------------------------
 660+ 9466              ;
 661+ 9466              ;	5/08/22
 662+ 9466              ;
 663+ 9466              ;   PreviousScan.
 664+ 9466              ;
 665+ 9466              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9466              ;
 667+ 9466              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9466              ;
 669+ 9466              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9466              ;
 671+ 9466              ;       DESTRUIDOS: AF y HL !!!
 672+ 9466              ;
 673+ 9466              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9466              ;
 675+ 9466
 676+ 9466 7C           PreviousScan ld a,h
 677+ 9467 25               dec h               ; Dec H.
 678+ 9468 E6 07            and 7
 679+ 946A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 946B
 681+ 946B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 946C D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 946E 6F               ld l,a
 684+ 946F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9470
 686+ 9470 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9471 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9473 67               ld h,a
 689+ 9474 C9               ret
 690+ 9475
 691+ 9475              ; -----------------------------------------------------------------------------------
 692+ 9475              ;
 693+ 9475              ;	28/2/23
 694+ 9475              ;
 695+ 9475              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9475              ;	Extrae fotos de Album_de_fotos.
 697+ 9475
 698+ 9475 3A 1F 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9478 A7           	and a
 700+ 9479 C8           	ret z
 701+ 947A ED 73 24 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 947E 31 00 70     	ld sp,Album_de_fotos
 703+ 9481
 704+ 9481 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9483 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 9484 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9485
 708+ 9485 ED 73 26 89  	ld (Stack_2),sp
 709+ 9489 ED 7B 24 89  	ld sp,(Stack)
 710+ 948D
 711+ 948D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 948D
 713+ 948D 3E CD        	ld a,$cd
 714+ 948F 32 97 94     	ld (Imprime),a
 715+ 9492 EB           	ex de,hl
 716+ 9493 22 98 94     	ld (Imprime+1),hl
 717+ 9496 EB           	ex de,hl
 718+ 9497
 719+ 9497              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9497
 721+ 9497 00 00 00     Imprime db 0,0,0
 722+ 949A
 723+ 949A 3A 1F 89     	ld a,(Numero_de_malotes)
 724+ 949D 3D           	dec a
 725+ 949E 28 09        	jr z,1F
 726+ 94A0 32 1F 89      	ld (Numero_de_malotes),a
 727+ 94A3
 728+ 94A3 ED 7B 26 89   	ld sp,(Stack_2)
 729+ 94A7 18 D8        	jr 2B
 730+ 94A9
 731+ 94A9 AF           1 xor a
 732+ 94AA 32 26 89     	ld (Stack_2),a
 733+ 94AD C9           	ret
 734+ 94AE
 735+ 94AE              ; -----------------------------------------------------------------------------------
 736+ 94AE              ;
 737+ 94AE              ;	28/2/23
 738+ 94AE              ;
 739+ 94AE              ;	Pinta los disparos generados.
 740+ 94AE
 741+ 94AE              Extrae_foto_disparos
 742+ 94AE
 743+ 94AE 3A 2C 89     	ld a,(Numero_de_disparotes)
 744+ 94B1 A7           	and a
 745+ 94B2 C8           	ret z
 746+ 94B3 ED 73 24 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 94B7 31 85 70     	ld sp,Album_de_fotos_disparos
 748+ 94BA
 749+ 94BA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 94BC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 94BD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 94BE
 753+ 94BE ED 73 26 89  	ld (Stack_2),sp
 754+ 94C2 ED 7B 24 89  	ld sp,(Stack)
 755+ 94C6
 756+ 94C6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 94C6
 758+ 94C6 3E CD        	ld a,$cd
 759+ 94C8 32 D0 94     	ld (Imprime2),a
 760+ 94CB EB           	ex de,hl
 761+ 94CC 22 D1 94     	ld (Imprime2+1),hl
 762+ 94CF EB           	ex de,hl
 763+ 94D0
 764+ 94D0              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 94D0
 766+ 94D0 00 00 00     Imprime2 db 0,0,0
 767+ 94D3
 768+ 94D3 3A 2C 89     	ld a,(Numero_de_disparotes)
 769+ 94D6 3D           	dec a
 770+ 94D7 28 09        	jr z,1F
 771+ 94D9 32 2C 89      	ld (Numero_de_disparotes),a
 772+ 94DC
 773+ 94DC ED 7B 26 89  	ld sp,(Stack_2)
 774+ 94E0 18 D8        	jr 2B
 775+ 94E2
 776+ 94E2 AF           1 xor a
 777+ 94E3 32 26 89     	ld (Stack_2),a
 778+ 94E6 C9           	ret
 779+ 94E7
# file closed: Draw_XOR.asm
1198  94E7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 94E7              ;   índices de Rutinas de impresión.
   2+ 94E7
   3+ 94E7 F7 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 94E9 24 95            defw Pinta_Amadeus_3x2
   5+ 94EB
   6+ 94EB 7A 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 94ED 1A 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 94EF CE 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 94F1
  10+ 94F1 A4 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 94F3 A8 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 94F5 5C 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 94F7
  14+ 94F7
  15+ 94F7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 94F7              ;
  17+ 94F7              ;   12/12/22
  18+ 94F7              ;
  19+ 94F7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 94F7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 94F7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 94F7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 94F7              ;
  24+ 94F7              ;   Modifica: DE y HL.
  25+ 94F7
  26+ 94F7 ED 73 24 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 94FB FD F9        	ld sp,iy
  28+ 94FD 06 10            ld b,16
  29+ 94FF D1           1 pop de
  30+ 9500 7B               ld a,e
  31+ 9501 AE               xor (hl)
  32+ 9502 77           	ld (hl),a
  33+ 9503 23           	inc hl
  34+ 9504 7A               ld a,d
  35+ 9505 AE               xor (hl)
  36+ 9506 77           	ld (hl),a
  37+ 9507 2B           	dec hl
  38+ 9508 24           	inc h
  39+ 9509 7C               ld a,h
  40+ 950A E6 07            and 7
  41+ 950C 20 0A            jr nz,2F
  42+ 950E 7D               ld a,l
  43+ 950F C6 20            add a,$20
  44+ 9511 6F               ld l,a
  45+ 9512 38 04            jr c,2F
  46+ 9514 7C               ld a,h
  47+ 9515 D6 08            sub 8
  48+ 9517 67               ld h,a
  49+ 9518 7C           2 ld a,h
  50+ 9519 FE 58            cp $58
  51+ 951B 28 02            jr z,3F
  52+ 951D 10 E0            djnz 1B
  53+ 951F ED 7B 24 89  3 ld sp,(Stack)
  54+ 9523 C9           	ret
  55+ 9524
  56+ 9524 ED 73 24 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9528 FD F9        	ld sp,iy
  58+ 952A 06 08            ld b,8
  59+ 952C D1           1 pop de
  60+ 952D 7B               ld a,e
  61+ 952E AE               xor (hl)
  62+ 952F 77           	ld (hl),a
  63+ 9530 23           	inc hl
  64+ 9531 7A               ld a,d
  65+ 9532 AE               xor (hl)
  66+ 9533 77           	ld (hl),a
  67+ 9534 23           	inc hl
  68+ 9535 D1           	pop de
  69+ 9536 7B               ld a,e
  70+ 9537 AE               xor (hl)
  71+ 9538 77           	ld (hl),a
  72+ 9539 2B           	dec hl
  73+ 953A 2B           	dec hl
  74+ 953B 24           	inc h
  75+ 953C 7C               ld a,h
  76+ 953D E6 07            and 7
  77+ 953F 20 0A            jr nz,2F
  78+ 9541 7D               ld a,l
  79+ 9542 C6 20            add a,$20
  80+ 9544 6F               ld l,a
  81+ 9545 38 04            jr c,2F
  82+ 9547 7C               ld a,h
  83+ 9548 D6 08            sub 8
  84+ 954A 67               ld h,a
  85+ 954B 7C           2 ld a,h
  86+ 954C FE 58            cp $58
  87+ 954E 28 25            jr z,4F
  88+ 9550 7A               ld a,d
  89+ 9551 AE               xor (hl)
  90+ 9552 77               ld (hl),a
  91+ 9553 D1           	pop de
  92+ 9554 23           	inc hl
  93+ 9555 7B               ld a,e
  94+ 9556 AE               xor (hl)
  95+ 9557 77           	ld (hl),a
  96+ 9558 23           	inc hl
  97+ 9559 7A               ld a,d
  98+ 955A AE               xor (hl)
  99+ 955B 77           	ld (hl),a
 100+ 955C 2B           	dec hl
 101+ 955D 2B           	dec hl
 102+ 955E 24           	inc h
 103+ 955F 7C               ld a,h
 104+ 9560 E6 07            and 7
 105+ 9562 20 0A            jr nz,3F
 106+ 9564 7D               ld a,l
 107+ 9565 C6 20            add a,$20
 108+ 9567 6F               ld l,a
 109+ 9568 38 04            jr c,3F
 110+ 956A 7C               ld a,h
 111+ 956B D6 08            sub 8
 112+ 956D 67               ld h,a
 113+ 956E 7C           3 ld a,h
 114+ 956F FE 58            cp $58
 115+ 9571 28 02            jr z,4F
 116+ 9573 10 B7            djnz 1B
 117+ 9575 ED 7B 24 89  4 ld sp,(Stack)
 118+ 9579 C9           	ret
 119+ 957A
 120+ 957A              ; ---------------------------------------------------
 121+ 957A
 122+ 957A ED 73 24 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 957E FD F9        	ld sp,iy
 124+ 9580
 125+ 9580              ; >>>
 126+ 9580
 127+ 9580 06 10            ld b,16
 128+ 9582 D1           1 pop de
 129+ 9583 7A           	ld a,d
 130+ 9584 AE           	xor (hl)
 131+ 9585 77           	ld (hl),a
 132+ 9586 24           	inc h
 133+ 9587 7C               ld a,h
 134+ 9588 E6 07            and 7
 135+ 958A 20 0C            jr nz,2F
 136+ 958C 7D               ld a,l
 137+ 958D C6 20            add a,$20
 138+ 958F 6F               ld l,a
 139+ 9590 38 06            jr c,2F
 140+ 9592 7C               ld a,h
 141+ 9593 D6 08            sub 8
 142+ 9595 67               ld h,a
 143+ 9596 18 00            jr 2F
 144+ 9598 7C           2 ld a,h
 145+ 9599 FE 58            cp $58
 146+ 959B 28 02            jr z,3F
 147+ 959D 10 E3            djnz 1B
 148+ 959F ED 7B 24 89  3 ld sp,(Stack)
 149+ 95A3 C9           	ret
 150+ 95A4
 151+ 95A4 ED 73 24 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 95A8 FD F9        	ld sp,iy
 153+ 95AA
 154+ 95AA              ; >>>
 155+ 95AA
 156+ 95AA 06 10            ld b,16
 157+ 95AC D1           1 pop de
 158+ 95AD 7B           	ld a,e
 159+ 95AE AE           	xor (hl)
 160+ 95AF 77           	ld (hl),a
 161+ 95B0 24           	inc h
 162+ 95B1 7C               ld a,h
 163+ 95B2 E6 07            and 7
 164+ 95B4 20 0C            jr nz,2F
 165+ 95B6 7D               ld a,l
 166+ 95B7 C6 20            add a,$20
 167+ 95B9 6F               ld l,a
 168+ 95BA 38 06            jr c,2F
 169+ 95BC 7C               ld a,h
 170+ 95BD D6 08            sub 8
 171+ 95BF 67               ld h,a
 172+ 95C0 18 00            jr 2F
 173+ 95C2 7C           2 ld a,h
 174+ 95C3 FE 58            cp $58
 175+ 95C5 28 02            jr z,3F
 176+ 95C7 10 E3            djnz 1B
 177+ 95C9 ED 7B 24 89  3 ld sp,(Stack)
 178+ 95CD C9           	ret
 179+ 95CE
 180+ 95CE              ; ---------------------------------------------------
 181+ 95CE
 182+ 95CE ED 73 24 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 95D2 FD F9        	ld sp,iy
 184+ 95D4 06 08            ld b,8
 185+ 95D6 D1           1 pop de
 186+ 95D7 7A           	ld a,d
 187+ 95D8 AE           	xor (hl)
 188+ 95D9 77           	ld (hl),a
 189+ 95DA 23           	inc hl
 190+ 95DB D1           	pop de
 191+ 95DC 7B           	ld a,e
 192+ 95DD AE           	xor (hl)
 193+ 95DE 77           	ld (hl),a
 194+ 95DF 2B           	dec hl
 195+ 95E0 24            	inc h
 196+ 95E1 7C               ld a,h
 197+ 95E2 E6 07            and 7
 198+ 95E4 20 0A            jr nz,2F
 199+ 95E6 7D               ld a,l
 200+ 95E7 C6 20            add a,$20
 201+ 95E9 6F               ld l,a
 202+ 95EA 38 04            jr c,2F
 203+ 95EC 7C               ld a,h
 204+ 95ED D6 08            sub 8
 205+ 95EF 67               ld h,a
 206+ 95F0 7C           2 ld a,h
 207+ 95F1 FE 58            cp $58
 208+ 95F3 28 20            jr z,4F
 209+ 95F5 D1               pop de
 210+ 95F6 7B           	ld a,e
 211+ 95F7 AE           	xor (hl)
 212+ 95F8 77           	ld (hl),a
 213+ 95F9 23           	inc hl
 214+ 95FA 7A           	ld a,d
 215+ 95FB AE           	xor (hl)
 216+ 95FC 77           	ld (hl),a
 217+ 95FD 2B           	dec hl
 218+ 95FE 24           	inc h
 219+ 95FF 7C               ld a,h
 220+ 9600 E6 07            and 7
 221+ 9602 20 0A            jr nz,3F
 222+ 9604 7D               ld a,l
 223+ 9605 C6 20            add a,$20
 224+ 9607 6F               ld l,a
 225+ 9608 38 04            jr c,3F
 226+ 960A 7C               ld a,h
 227+ 960B D6 08            sub 8
 228+ 960D 67               ld h,a
 229+ 960E 7C           3 ld a,h
 230+ 960F FE 58            cp $58
 231+ 9611 28 02            jr z,4F
 232+ 9613 10 C1            djnz 1B
 233+ 9615 ED 7B 24 89  4 ld sp,(Stack)
 234+ 9619 C9           	ret
 235+ 961A
 236+ 961A ED 73 24 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 961E FD F9        	ld sp,iy
 238+ 9620 06 08            ld b,8
 239+ 9622 D1           1 pop de
 240+ 9623 D1           	pop de
 241+ 9624 7B           	ld a,e
 242+ 9625 AE           	xor (hl)
 243+ 9626 77           	ld (hl),a
 244+ 9627 24            	inc h
 245+ 9628 7C               ld a,h
 246+ 9629 E6 07            and 7
 247+ 962B 20 0A            jr nz,2F
 248+ 962D 7D               ld a,l
 249+ 962E C6 20            add a,$20
 250+ 9630 6F               ld l,a
 251+ 9631 38 04            jr c,2F
 252+ 9633 7C               ld a,h
 253+ 9634 D6 08            sub 8
 254+ 9636 67               ld h,a
 255+ 9637 7C           2 ld a,h
 256+ 9638 FE 58            cp $58
 257+ 963A 28 1B            jr z,4F
 258+ 963C D1               pop de
 259+ 963D 7A           	ld a,d
 260+ 963E AE           	xor (hl)
 261+ 963F 77           	ld (hl),a
 262+ 9640 24           	inc h
 263+ 9641 7C               ld a,h
 264+ 9642 E6 07            and 7
 265+ 9644 20 0A            jr nz,3F
 266+ 9646 7D               ld a,l
 267+ 9647 C6 20            add a,$20
 268+ 9649 6F               ld l,a
 269+ 964A 38 04            jr c,3F
 270+ 964C 7C               ld a,h
 271+ 964D D6 08            sub 8
 272+ 964F 67               ld h,a
 273+ 9650 7C           3 ld a,h
 274+ 9651 FE 58            cp $58
 275+ 9653 28 02            jr z,4F
 276+ 9655 10 CB            djnz 1B
 277+ 9657 ED 7B 24 89  4 ld sp,(Stack)
 278+ 965B C9           	ret
 279+ 965C
 280+ 965C ED 73 24 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9660 FD F9        	ld sp,iy
 282+ 9662 06 08            ld b,8
 283+ 9664 D1           1 pop de
 284+ 9665 7B           	ld a,e
 285+ 9666 AE           	xor (hl)
 286+ 9667 77           	ld (hl),a
 287+ 9668 23           	inc hl
 288+ 9669 7A           	ld a,d
 289+ 966A AE           	xor (hl)
 290+ 966B 77           	ld (hl),a
 291+ 966C 2B           	dec hl
 292+ 966D 24             	inc h
 293+ 966E 7C               ld a,h
 294+ 966F E6 07            and 7
 295+ 9671 20 0A            jr nz,2F
 296+ 9673 7D               ld a,l
 297+ 9674 C6 20            add a,$20
 298+ 9676 6F               ld l,a
 299+ 9677 38 04            jr c,2F
 300+ 9679 7C               ld a,h
 301+ 967A D6 08            sub 8
 302+ 967C 67               ld h,a
 303+ 967D 7C           2 ld a,h
 304+ 967E FE 58            cp $58
 305+ 9680 28 21            jr z,4F
 306+ 9682 D1               pop de
 307+ 9683 7A           	ld a,d
 308+ 9684 AE           	xor (hl)
 309+ 9685 77           	ld (hl),a
 310+ 9686 23           	inc hl
 311+ 9687 D1               pop de
 312+ 9688 7B           	ld a,e
 313+ 9689 AE           	xor (hl)
 314+ 968A 77           	ld (hl),a
 315+ 968B 2B           	dec hl
 316+ 968C 24           	inc h
 317+ 968D 7C               ld a,h
 318+ 968E E6 07            and 7
 319+ 9690 20 0A            jr nz,3F
 320+ 9692 7D               ld a,l
 321+ 9693 C6 20            add a,$20
 322+ 9695 6F               ld l,a
 323+ 9696 38 04            jr c,3F
 324+ 9698 7C               ld a,h
 325+ 9699 D6 08            sub 8
 326+ 969B 67               ld h,a
 327+ 969C 7C           3 ld a,h
 328+ 969D FE 58            cp $58
 329+ 969F 28 02            jr z,4F
 330+ 96A1 10 C1            djnz 1B
 331+ 96A3 ED 7B 24 89  4 ld sp,(Stack)
 332+ 96A7 C9           	ret
 333+ 96A8
 334+ 96A8 ED 73 24 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 96AC FD F9        	ld sp,iy
 336+ 96AE 06 08            ld b,8
 337+ 96B0 D1           1 pop de
 338+ 96B1 7B           	ld a,e
 339+ 96B2 AE           	xor (hl)
 340+ 96B3 77           	ld (hl),a
 341+ 96B4 24            	inc h
 342+ 96B5 7C               ld a,h
 343+ 96B6 E6 07            and 7
 344+ 96B8 20 0A            jr nz,2F
 345+ 96BA 7D               ld a,l
 346+ 96BB C6 20            add a,$20
 347+ 96BD 6F               ld l,a
 348+ 96BE 38 04            jr c,2F
 349+ 96C0 7C               ld a,h
 350+ 96C1 D6 08            sub 8
 351+ 96C3 67               ld h,a
 352+ 96C4 7C           2 ld a,h
 353+ 96C5 FE 58            cp $58
 354+ 96C7 28 1C            jr z,4F
 355+ 96C9 D1               pop de
 356+ 96CA 7A           	ld a,d
 357+ 96CB AE           	xor (hl)
 358+ 96CC 77           	ld (hl),a
 359+ 96CD 24           	inc h
 360+ 96CE 7C               ld a,h
 361+ 96CF E6 07            and 7
 362+ 96D1 20 0A            jr nz,3F
 363+ 96D3 7D               ld a,l
 364+ 96D4 C6 20            add a,$20
 365+ 96D6 6F               ld l,a
 366+ 96D7 38 04            jr c,3F
 367+ 96D9 7C               ld a,h
 368+ 96DA D6 08            sub 8
 369+ 96DC 67               ld h,a
 370+ 96DD 7C           3 ld a,h
 371+ 96DE FE 58            cp $58
 372+ 96E0 28 03            jr z,4F
 373+ 96E2 D1               pop de
 374+ 96E3 10 CB            djnz 1B
 375+ 96E5 ED 7B 24 89  4 ld sp,(Stack)
 376+ 96E9 C9           	ret
 377+ 96EA
 378+ 96EA              ; ---------------------------------------------------
 379+ 96EA              ;
 380+ 96EA              ;   27/02/23
 381+ 96EA              ;
 382+ 96EA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 96EA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 96EA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 96EA
 386+ 96EA ED 73 24 89  Pinta_Disparo ld (Stack),sp
 387+ 96EE FD F9            ld sp,iy
 388+ 96F0 06 02            ld b,2
 389+ 96F2 D1           1 pop de
 390+ 96F3 7B               ld a,e
 391+ 96F4 AE               xor (hl)
 392+ 96F5 77               ld (hl),a
 393+ 96F6 23               inc hl
 394+ 96F7 7A               ld a,d
 395+ 96F8 AE               xor (hl)
 396+ 96F9 77               ld (hl),a
 397+ 96FA 2B               dec hl
 398+ 96FB
 399+ 96FB 24               inc h
 400+ 96FC 7C               ld a,h
 401+ 96FD E6 07            and 7
 402+ 96FF 20 0A            jr nz,2F
 403+ 9701 7D               ld a,l
 404+ 9702 C6 20            add a,$20
 405+ 9704 6F               ld l,a
 406+ 9705 38 04            jr c,2F
 407+ 9707 7C               ld a,h
 408+ 9708 D6 08            sub 8
 409+ 970A 67               ld h,a
 410+ 970B 7C           2 ld a,h
 411+ 970C FE 58            cp $58
 412+ 970E 28 02            jr z,3F
 413+ 9710
 414+ 9710 10 E0            djnz 1B
 415+ 9712 ED 7B 24 89  3 ld sp,(Stack)
 416+ 9716 C9               ret
 417+ 9717
# file closed: Rutinas_de_impresion_sprites.asm
1199  9717              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9717              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9717              ;
   3+ 9717              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9717              ;
   5+ 9717              ; *****************************************************************************************************************************************************************************************
   6+ 9717              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9717
   8+ 9717 7C           calcula_tercio ld a,h
   9+ 9718 E6 18        	and $18
  10+ 971A CB 2F        	sra a
  11+ 971C CB 2F        	sra a
  12+ 971E CB 2F        	sra a
  13+ 9720 C9           	ret
  14+ 9721
# file closed: calcula_tercio.asm
1200  9721              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9721              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9721              ;
   3+ 9721              ;
   4+ 9721              ;	CLS.
   5+ 9721              ;
   6+ 9721              ;	Limpia la pantalla y define sus atributos.
   7+ 9721              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9721              ;
   9+ 9721              ;	COLORES: 0 ..... NEGRO
  10+ 9721              ;    		 1 ..... AZUL
  11+ 9721              ; 			 2 ..... ROJO
  12+ 9721              ;			 3 ..... MAGENTA
  13+ 9721              ; 			 4 ..... VERDE
  14+ 9721              ; 			 5 ..... CIAN
  15+ 9721              ;			 6 ..... AMARILLO
  16+ 9721              ; 			 7 ..... BLANCO
  17+ 9721              ;
  18+ 9721              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9721              ;
  20+ 9721              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9721
  22+ 9721
  23+ 9721 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9724 11 01 40     	LD DE,$4001
  25+ 9727 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 972A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 972C ED B0        	LDIR
  28+ 972E 01 FF 02     	LD BC,767
  29+ 9731 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9732 ED B0        	LDIR
  31+ 9734 C9           	ret
  32+ 9735
# file closed: Cls.asm
1201  9735              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9735              ; ******************************************************************************************************************************************************************************************
   2+ 9735              ;
   3+ 9735              ;   20/05/23
   4+ 9735              ;
   5+ 9735              ;	Recompone_posicion_inicio
   6+ 9735              ;
   7+ 9735              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9735              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9735              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9735              ;	_ a una u otra rutina.
  11+ 9735
  12+ 9735              Recompone_posicion_inicio
  13+ 9735
  14+ 9735 2A E8 88     	ld hl,(Posicion_inicio)
  15+ 9738 7D           	ld a,l
  16+ 9739 E6 1F        	and $1f
  17+ 973B 28 16        	jr z,1F
  18+ 973D
  19+ 973D FE 1F        	cp $1f
  20+ 973F 28 0D        	jr z,3F
  21+ 9741
  22+ 9741 21 12 89     	ld hl,Ctrl_2
  23+ 9744 CB CE        	set 1,(hl)
  24+ 9746 2A DA 88     	ld hl,(Puntero_objeto)
  25+ 9749 22 14 89     	ld (Repone_puntero_objeto),hl
  26+ 974C 18 08        	jr 2F
  27+ 974E
  28+ 974E CD EF 98     3 call Mov_left
  29+ 9751 18 03        	jr 2F
  30+ 9753
  31+ 9753 CD D1 97     1 call Mov_right
  32+ 9756 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9759 22 DA 88     	ld (Puntero_objeto),hl
  34+ 975C C9           	ret
  35+ 975D
  36+ 975D              ; ******************************************************************************************************************************************************************************************
  37+ 975D              ;
  38+ 975D              ;   27/05/23
  39+ 975D              ;
  40+ 975D              ;	Mov_down
  41+ 975D              ;
  42+ 975D              ; 	Mueve el Sprite X px hacia abajo.
  43+ 975D              ;
  44+ 975D              ;
  45+ 975D              Mov_down
  46+ 975D
  47+ 975D CD BF 97     	call Reponne_punntero_objeto
  48+ 9760
  49+ 9760 21 04 89     	ld hl,Ctrl_0
  50+ 9763 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9765              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9765              ; 																	; _ en el caso de que no lo haya.
  53+ 9765 3A EE 88     	ld a,(Vel_down)
  54+ 9768 47           	ld b,a
  55+ 9769 2A D8 88         ld hl,(Posicion_actual)
  56+ 976C CD 17 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 976F E6 02        	and 2
  58+ 9771 28 0F        	jr z,1F
  59+ 9773
  60+ 9773              ; Nos encontramos en el último tercio de pantalla.
  61+ 9773              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9773
  63+ 9773 7C           	ld a,h
  64+ 9774 FE 57        	cp $57
  65+ 9776 20 0A        	jr nz,1F
  66+ 9778 7D           	ld a,l
  67+ 9779 C6 20        	add $20
  68+ 977B 30 05        	jr nc,1F
  69+ 977D
  70+ 977D              ; ------------------------------
  71+ 977D CD 6D 9A     	call Reaparece_arriba
  72+ 9780              ;	call Reinicio
  73+ 9780              ; ------------------------------
  74+ 9780
  75+ 9780 18 08        	jr 3F
  76+ 9782 CD 57 94     1 call NextScan
  77+ 9785 22 D8 88     	ld (Posicion_actual),hl
  78+ 9788 10 E2            djnz 2B
  79+ 978A CD 83 9A     3 call Genera_coordenadas
  80+ 978D C9           	ret
  81+ 978E
  82+ 978E              ; ******************************************************************************************************************************************************************************************
  83+ 978E              ;
  84+ 978E              ;   27/05/23
  85+ 978E              ;
  86+ 978E              ;	Mov_up
  87+ 978E              ;
  88+ 978E              ; 	Mueve el Sprite hacia arriba.
  89+ 978E              ;
  90+ 978E              ;
  91+ 978E              Mov_up
  92+ 978E
  93+ 978E CD BF 97     	call Reponne_punntero_objeto
  94+ 9791
  95+ 9791 21 04 89     	ld hl,Ctrl_0
  96+ 9794 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9796              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9796              ; 																		; _ en el caso de que no lo haya.
  99+ 9796 3A ED 88     	ld a,(Vel_up)
 100+ 9799 47           	ld b,a
 101+ 979A 2A D8 88     	ld hl,(Posicion_actual)
 102+ 979D CD 17 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 97A0 A7           	and a
 104+ 97A1 20 10        	jr nz,1F
 105+ 97A3
 106+ 97A3              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 97A3              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 97A3
 109+ 97A3 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 97A4 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 97A6 20 0B            jr nz,1F
 112+ 97A8 7D               ld a,l
 113+ 97A9 D6 20            sub $20
 114+ 97AB 30 06            jr nc,1F
 115+ 97AD 25               dec h
 116+ 97AE
 117+ 97AE              ; -----------------------------
 118+ 97AE CD 5D 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 97B1              ;	call Reinicio
 120+ 97B1              ; -----------------------------
 121+ 97B1
 122+ 97B1 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 97B3 CD 66 94     1 call PreviousScan
 124+ 97B6 22 D8 88     	ld (Posicion_actual),hl
 125+ 97B9 10 E2            djnz 3B
 126+ 97BB CD 83 9A     2 call Genera_coordenadas
 127+ 97BE C9           	ret
 128+ 97BF
 129+ 97BF              ; -----------------------------
 130+ 97BF              ;
 131+ 97BF              ;	27/5/23
 132+ 97BF
 133+ 97BF 3A 12 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 134+ 97C2 CB 4F        	bit 1,a
 135+ 97C4 C8           	ret z
 136+ 97C5 CB 8F        	res 1,a
 137+ 97C7 32 12 89     	ld (Ctrl_2),a
 138+ 97CA 2A 14 89     	ld hl,(Repone_puntero_objeto)
 139+ 97CD 22 DA 88     	ld (Puntero_objeto),hl
 140+ 97D0 C9           	ret
 141+ 97D1
 142+ 97D1              ; ******************************************************************************************************************************************************************************************
 143+ 97D1              ;
 144+ 97D1              ;	19/10/22
 145+ 97D1              ;
 146+ 97D1              ;	Mov_right.
 147+ 97D1              ;
 148+ 97D1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 149+ 97D1              ;
 150+ 97D1
 151+ 97D1 21 04 89     Mov_right ld hl,Ctrl_0
 152+ 97D4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 153+ 97D6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 154+ 97D6              ; 																	; _ en el caso de que no lo haya.
 155+ 97D6 3A 04 89     	ld a,(Ctrl_0)
 156+ 97D9 CB 77        	bit 6,a
 157+ 97DB 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 158+ 97DD
 159+ 97DD CD 0B 9A     	call Stop_Amadeus_right
 160+ 97E0 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 161+ 97E1 18 4D        	jr 8F
 162+ 97E3
 163+ 97E3 3A DC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 164+ 97E6 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 165+ 97E8 20 46        	jr nz,8F
 166+ 97EA
 167+ 97EA 3A DE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 168+ 97ED A7           	and a 															; _[3] para continuar con el DESPLZ.
 169+ 97EE 28 40        	jr z,8F
 170+ 97F0
 171+ 97F0              ; ---------- ---------- ----------
 172+ 97F0              ;
 173+ 97F0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 174+ 97F0
 175+ 97F0 3A EC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 176+ 97F3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 177+ 97F5 28 11        	jr z,1F
 178+ 97F7 38 06        	jr c,6F
 179+ 97F9 FE 04        	cp 4
 180+ 97FB 28 14        	jr z,7F
 181+ 97FD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 182+ 97FF
 183+ 97FF              ; ---------- ---------- ----------
 184+ 97FF              ;
 185+ 97FF              ; Perfiles de velocidad
 186+ 97FF              ;
 187+ 97FF
 188+ 97FF 3A DE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 189+ 9802 FE FE        	cp $fe
 190+ 9804 20 2A        	jr nz,8F
 191+ 9806 18 10        	jr 3F
 192+ 9808 3A DE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 193+ 980B FE FD        	cp $fd
 194+ 980D 20 21        	jr nz,8F
 195+ 980F 18 07        	jr 3F
 196+ 9811 3A DE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 197+ 9814 FE FB        	cp $fb
 198+ 9816 20 18        	jr nz,8F
 199+ 9818
 200+ 9818              ; ---------- ---------- ----------
 201+ 9818
 202+ 9818              3
 203+ 9818 CD 4B 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 204+ 981B              ;	call Reinicio
 205+ 981B
 206+ 981B              ; ---------- ---------- ----------
 207+ 981B              ;
 208+ 981B              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 209+ 981B
 210+ 981B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 211+ 981D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 212+ 981E CD 37 98     	call DESPLZ_DER
 213+ 9821 C1           	pop bc
 214+ 9822 10 F9        	djnz 5B
 215+ 9824 2A D8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 216+ 9827 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 217+ 9828 22 D8 88     	ld (Posicion_actual),hl
 218+ 982B CD 83 9A     	call Genera_coordenadas
 219+ 982E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 220+ 9830
 221+ 9830              ; ---------- ---------- ----------
 222+ 9830
 223+ 9830 2A D8 88     8 ld hl,(Posicion_actual)
 224+ 9833 CD 37 98     	call DESPLZ_DER
 225+ 9836 C9           2 ret
 226+ 9837
 227+ 9837              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 228+ 9837              ;
 229+ 9837              ;	22/9/22
 230+ 9837              ;
 231+ 9837
 232+ 9837 CD 46 98     DESPLZ_DER call Desplaza_derecha
 233+ 983A CD 92 98         call modifica_parametros_1er_DESPLZ_2
 234+ 983D CD BB 98         call Ciclo_completo
 235+ 9840 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 236+ 9843 CB FE        	set 7,(hl)
 237+ 9845 C9           	ret
 238+ 9846
 239+ 9846              ; ******************************************************************************************************************************************************************************************
 240+ 9846              ;	15/02/23
 241+ 9846              ;
 242+ 9846
 243+ 9846 3A EC 88     Desplaza_derecha ld a,(Vel_right)
 244+ 9849 47           	ld b,a
 245+ 984A 2A E4 88     	ld hl,(Puntero_DESPLZ_der)
 246+ 984D 23           1 inc hl
 247+ 984E 23           	inc hl
 248+ 984F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 249+ 9851 22 E4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 250+ 9854 CD F2 8B     	call Extrae_address
 251+ 9857 22 DA 88     	ld (Puntero_objeto),hl
 252+ 985A
 253+ 985A              ; Modifica (Puntero_DESPLZ_izq).
 254+ 985A
 255+ 985A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 256+ 985A              ; Cuántos movimientos hemos hecho ??
 257+ 985A              ; DE contiene (Puntero_DESPLZ_der).
 258+ 985A
 259+ 985A 2A E0 88     7 ld hl,(Indice_Sprite_der)
 260+ 985D EB           	ex de,hl
 261+ 985E A7           	and a
 262+ 985F ED 52        	sbc hl,de
 263+ 9861 CB 3D        	srl l
 264+ 9863 3E 08        6 ld a,8
 265+ 9865 95           	sub l
 266+ 9866 30 1E        	jr nc,3F
 267+ 9868
 268+ 9868              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 269+ 9868              ; B="0".
 270+ 9868
 271+ 9868 04           4 inc b
 272+ 9869 3C           	inc a
 273+ 986A 20 FC        	jr nz,4B
 274+ 986C 78           	ld a,b
 275+ 986D 08           	ex af,af
 276+ 986E 2A E0 88     	ld hl,(Indice_Sprite_der)
 277+ 9871 23           5 inc hl
 278+ 9872 23           	inc hl
 279+ 9873 10 FC        	djnz 5B
 280+ 9875 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 281+ 9878 CD F2 8B     	call Extrae_address
 282+ 987B 22 DA 88     	ld (Puntero_objeto),hl
 283+ 987E
 284+ 987E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 285+ 987E              ; _(Posicion_actual).
 286+ 987E
 287+ 987E 21 D8 88     	ld hl,Posicion_actual
 288+ 9881 34           	inc (hl)
 289+ 9882 08               ex af,af
 290+ 9883 6F           	ld l,a
 291+ 9884 18 DD        	jr 6B
 292+ 9886
 293+ 9886              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 294+ 9886
 295+ 9886 47           3 ld b,a
 296+ 9887 2A E2 88     	ld hl,(Indice_Sprite_izq)
 297+ 988A 23           2 inc hl
 298+ 988B 23           	inc hl
 299+ 988C 10 FC        	djnz 2B
 300+ 988E 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 301+ 9891 C9           8 ret
 302+ 9892
 303+ 9892              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 304+ 9892              ;
 305+ 9892              ;	24/7/22
 306+ 9892              ;
 307+ 9892              ;	modifica_parametros_1er_DESPLZ_2
 308+ 9892              ;
 309+ 9892              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 310+ 9892              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 311+ 9892              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 312+ 9892
 313+ 9892 3A DE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 314+ 9895 A7           	and a
 315+ 9896 20 1F        	jr nz,1F
 316+ 9898 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 317+ 989A 32 DE 88         ld (CTRL_DESPLZ),a
 318+ 989D
 319+ 989D 21 D7 88     	ld hl,Columns
 320+ 98A0 34           	inc (hl)
 321+ 98A1 3A EA 88     	ld a,(Cuad_objeto)
 322+ 98A4 E6 01        	and 1
 323+ 98A6 28 0F        	jr z,1F
 324+ 98A8 2A D8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 325+ 98AB 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 326+ 98AC 22 D8 88     	ld (Posicion_actual),hl
 327+ 98AF CD 83 9A     	call Genera_coordenadas
 328+ 98B2 CD 17 9A     	call Inc_CTRL_DESPLZ
 329+ 98B5 18 03        	jr 2F
 330+ 98B7 CD 17 9A     1 call Inc_CTRL_DESPLZ
 331+ 98BA C9           2 ret
 332+ 98BB
 333+ 98BB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 334+ 98BB              ;
 335+ 98BB              ;	24/7/22
 336+ 98BB              ;
 337+ 98BB              ;	Ciclo_completo.
 338+ 98BB              ;
 339+ 98BB              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 340+ 98BB              ;
 341+ 98BB              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 342+ 98BB              ; 	Decrementamos (Columns).
 343+ 98BB              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 344+ 98BB              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 345+ 98BB
 346+ 98BB
 347+ 98BB 3A DE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 348+ 98BE FE FF        	cp $ff
 349+ 98C0 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 350+ 98C2 E6 F0        	and $f0
 351+ 98C4 20 28        	jr nz,3F
 352+ 98C6
 353+ 98C6              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 354+ 98C6
 355+ 98C6 3A DE 88     	ld a,(CTRL_DESPLZ)
 356+ 98C9 47           	ld b,a
 357+ 98CA 3E F8        	ld a,$f8
 358+ 98CC 80           	add b
 359+ 98CD 32 DE 88     	ld (CTRL_DESPLZ),a
 360+ 98D0 18 1C        	jr 3F
 361+ 98D2 21 D7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 362+ 98D5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 363+ 98D6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 364+ 98D7 32 DE 88     	ld (CTRL_DESPLZ),a
 365+ 98DA 3A EA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 366+ 98DD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 367+ 98DF 20 0A        	jr nz,2F
 368+ 98E1 2A D8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 369+ 98E4 23           	inc hl
 370+ 98E5 22 D8 88     	ld (Posicion_actual),hl
 371+ 98E8 CD 83 9A     	call Genera_coordenadas
 372+ 98EB
 373+ 98EB              ; Inicia el puntero de Sprite.
 374+ 98EB
 375+ 98EB CD 09 8C     2 call Inicia_puntero_objeto_der
 376+ 98EE C9           3 ret
 377+ 98EF
 378+ 98EF              ; ******************************************************************************************************************************************************************************************
 379+ 98EF              ;
 380+ 98EF              ;	15/02/23
 381+ 98EF              ;
 382+ 98EF              ;	Mov_left.
 383+ 98EF              ;
 384+ 98EF              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 385+ 98EF              ;
 386+ 98EF 21 04 89     Mov_left ld hl,Ctrl_0
 387+ 98F2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 388+ 98F4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 389+ 98F4              ; 																	; _ en el caso de que no lo haya.
 390+ 98F4 3A 04 89     	ld a,(Ctrl_0)
 391+ 98F7 CB 77        	bit 6,a
 392+ 98F9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 393+ 98FB
 394+ 98FB CD 11 9A     	call Stop_Amadeus_left
 395+ 98FE C8           	ret z
 396+ 98FF 20 4A        	jr nz,8F
 397+ 9901
 398+ 9901 3A DC 88     11 ld a,(Coordenada_X)
 399+ 9904 A7           	and a
 400+ 9905 20 44        	jr nz,8F
 401+ 9907
 402+ 9907 3A DE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 403+ 990A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 404+ 990B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 405+ 990D
 406+ 990D              ; ---------- ---------- ----------
 407+ 990D
 408+ 990D 3A EB 88     	ld a,(Vel_left)
 409+ 9910 FE 02        	cp 2
 410+ 9912 28 0F        	jr z,1F
 411+ 9914 38 04        	jr c,6F
 412+ 9916 FE 04        	cp 4
 413+ 9918 28 12        	jr z,7F
 414+ 991A
 415+ 991A              ; ---------- ---------- ----------
 416+ 991A
 417+ 991A 3A DE 88     6 ld a,(CTRL_DESPLZ)
 418+ 991D FE F8        	cp $f8
 419+ 991F 20 2A        	jr nz,8F
 420+ 9921 18 10        	jr 4F
 421+ 9923 3A DE 88     1 ld a,(CTRL_DESPLZ)
 422+ 9926 FE F9        	cp $f9
 423+ 9928 20 21        	jr nz,8F
 424+ 992A 18 07        	jr 4F
 425+ 992C 3A DE 88     7 ld a,(CTRL_DESPLZ)
 426+ 992F FE FB        	cp $fb
 427+ 9931 20 18        	jr nz,8F
 428+ 9933
 429+ 9933              ; ---------- ---------- ----------
 430+ 9933
 431+ 9933              4
 432+ 9933 CD 39 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 433+ 9936              ;	call Reinicio
 434+ 9936
 435+ 9936              ; ---------- ---------- ----------
 436+ 9936
 437+ 9936 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 438+ 9938 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 439+ 9939
 440+ 9939              ;	ld hl,(Indice_Sprite_izq)
 441+ 9939              ;	ld (Puntero_DESPLZ_izq),hl
 442+ 9939
 443+ 9939 CD 52 99     	call DESPLZ_IZQ
 444+ 993C C1           	pop bc
 445+ 993D 10 F9        	djnz 5B
 446+ 993F 2A D8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 447+ 9942 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 448+ 9943 22 D8 88     	ld (Posicion_actual),hl
 449+ 9946 CD 83 9A     	call Genera_coordenadas
 450+ 9949 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 451+ 994B
 452+ 994B              ; ---------- ---------- ----------
 453+ 994B
 454+ 994B              ; Movemos, no hay recolocación.
 455+ 994B
 456+ 994B 2A D8 88     8 ld hl,(Posicion_actual)
 457+ 994E CD 52 99     	call DESPLZ_IZQ
 458+ 9951 C9           2 ret
 459+ 9952
 460+ 9952              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 461+ 9952              ;
 462+ 9952              ;	22/9/22
 463+ 9952
 464+ 9952              DESPLZ_IZQ
 465+ 9952
 466+ 9952 CD 61 99     	call Desplaza_izquierda
 467+ 9955 CD AD 99         call modifica_parametros_1er_DESPLZ
 468+ 9958 CD D5 99     	call Ciclo_completo_2
 469+ 995B 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 470+ 995E CB BE        	res 7,(hl)
 471+ 9960 C9           	ret
 472+ 9961
 473+ 9961              Desplaza_izquierda
 474+ 9961
 475+ 9961 3A EB 88     	ld a,(Vel_left)
 476+ 9964 47           	ld b,a
 477+ 9965 2A E6 88     	ld hl,(Puntero_DESPLZ_izq)
 478+ 9968 23           1 inc hl
 479+ 9969 23           	inc hl
 480+ 996A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 481+ 996C 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 482+ 996F CD F2 8B     	call Extrae_address
 483+ 9972 22 DA 88     	ld (Puntero_objeto),hl
 484+ 9975
 485+ 9975              ; Modifica (Puntero_DESPLZ_der).
 486+ 9975
 487+ 9975              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 488+ 9975              ; Cuántos movimientos hemos hecho ??
 489+ 9975              ; DE contiene (Puntero_DESPLZ_izq).
 490+ 9975
 491+ 9975 2A E2 88     7 ld hl,(Indice_Sprite_izq)
 492+ 9978 EB           	ex de,hl
 493+ 9979 A7           	and a
 494+ 997A ED 52        	sbc hl,de
 495+ 997C CB 3D        	srl l
 496+ 997E 3E 08        6 ld a,8
 497+ 9980 95           	sub l
 498+ 9981 30 1E        	jr nc,3F
 499+ 9983
 500+ 9983              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 501+ 9983              ; B="0".
 502+ 9983
 503+ 9983 04           4 inc b
 504+ 9984 3C           	inc a
 505+ 9985 20 FC        	jr nz,4B
 506+ 9987 78           	ld a,b
 507+ 9988 08           	ex af,af
 508+ 9989 2A E2 88     	ld hl,(Indice_Sprite_izq)
 509+ 998C 23           5 inc hl
 510+ 998D 23           	inc hl
 511+ 998E 10 FC        	djnz 5B
 512+ 9990 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 513+ 9993 CD F2 8B     	call Extrae_address
 514+ 9996 22 DA 88     	ld (Puntero_objeto),hl
 515+ 9999
 516+ 9999              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 517+ 9999              ; _(Posicion_actual).
 518+ 9999
 519+ 9999 21 D8 88     	ld hl,Posicion_actual
 520+ 999C 35           	dec (hl)
 521+ 999D 08           	ex af,af
 522+ 999E 6F           	ld l,a
 523+ 999F 18 DD        	jr 6B
 524+ 99A1
 525+ 99A1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 526+ 99A1
 527+ 99A1 47           3 ld b,a
 528+ 99A2 2A E0 88     	ld hl,(Indice_Sprite_der)
 529+ 99A5 23           2 inc hl
 530+ 99A6 23           	inc hl
 531+ 99A7 10 FC        	djnz 2B
 532+ 99A9 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 533+ 99AC C9           8 ret
 534+ 99AD
 535+ 99AD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 536+ 99AD              ;
 537+ 99AD              ;	modifica_parametros_1er_DESPLZ
 538+ 99AD              ;
 539+ 99AD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 540+ 99AD              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 541+ 99AD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 542+ 99AD
 543+ 99AD 3A DE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 544+ 99B0 A7           	and a
 545+ 99B1 20 1E        	jr nz,1F
 546+ 99B3 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 547+ 99B4 32 DE 88         ld (CTRL_DESPLZ),a
 548+ 99B7 21 D7 88     	ld hl,Columns
 549+ 99BA 34           	inc (hl)
 550+ 99BB 3A EA 88     	ld a,(Cuad_objeto)
 551+ 99BE E6 01        	and 1
 552+ 99C0 20 0F        	jr nz,1F
 553+ 99C2 2A D8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 554+ 99C5 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 555+ 99C6 22 D8 88     	ld (Posicion_actual),hl
 556+ 99C9 CD 83 9A     	call Genera_coordenadas
 557+ 99CC CD 28 9A     	call Dec_CTRL_DESPLZ
 558+ 99CF 18 03        	jr 2F
 559+ 99D1 CD 28 9A     1 call Dec_CTRL_DESPLZ
 560+ 99D4 C9           2 ret
 561+ 99D5
 562+ 99D5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 99D5
 564+ 99D5 3A DE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 565+ 99D8 FE F7        	cp $f7
 566+ 99DA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 567+ 99DC 30 2C        	jr nc,3F
 568+ 99DE
 569+ 99DE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 570+ 99DE
 571+ 99DE 06 00        	ld b,0
 572+ 99E0 04           4 inc b
 573+ 99E1 3C           	inc a
 574+ 99E2 FE F7        	cp $f7
 575+ 99E4 20 FA        	jr nz,4B
 576+ 99E6 3E FF        	ld a,$ff
 577+ 99E8 90           	sub b
 578+ 99E9 32 DE 88     	ld (CTRL_DESPLZ),a
 579+ 99EC 18 1C        	jr 3F
 580+ 99EE
 581+ 99EE              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 582+ 99EE
 583+ 99EE 21 D7 88     1 ld hl,Columns
 584+ 99F1 35           	dec (hl)
 585+ 99F2 AF           	xor a
 586+ 99F3 32 DE 88     	ld (CTRL_DESPLZ),a
 587+ 99F6 3A EA 88     	ld a,(Cuad_objeto)
 588+ 99F9 E6 01        	and 1
 589+ 99FB 28 0A        	jr z,2F
 590+ 99FD 2A D8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 591+ 9A00 2B           	dec hl
 592+ 9A01 22 D8 88     	ld (Posicion_actual),hl
 593+ 9A04 CD 83 9A     	call Genera_coordenadas
 594+ 9A07
 595+ 9A07              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 596+ 9A07
 597+ 9A07 CD 1C 8C     2 call Inicia_puntero_objeto_izq
 598+ 9A0A C9           3 ret
 599+ 9A0B
 600+ 9A0B              ; ---------- ---------- ---------- ---------- ---------- ----------
 601+ 9A0B              ;
 602+ 9A0B              ;	19/10/22
 603+ 9A0B              ;
 604+ 9A0B              ;	(cp 29) para un Amadeus de 3 Columns.
 605+ 9A0B              ;	(cp 30)   ""  ""    ""     2 Columns.
 606+ 9A0B
 607+ 9A0B 3A DC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 608+ 9A0E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 609+ 9A10 C9           	ret
 610+ 9A11
 611+ 9A11              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9A11              ;
 613+ 9A11              ;	19/10/22
 614+ 9A11              ;
 615+ 9A11              ;	(cp 2) para un Amadeus de 3 Columns.
 616+ 9A11              ;	(cp 1)   ""  ""    ""     2 Columns.
 617+ 9A11
 618+ 9A11 3A DC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9A14 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 620+ 9A16 C9           	ret
 621+ 9A17
 622+ 9A17              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9A17              ;
 624+ 9A17              ;	24/7/22
 625+ 9A17              ;
 626+ 9A17              ;	Inc_CTRL_DESPLZ
 627+ 9A17              ;
 628+ 9A17              ;
 629+ 9A17              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 630+ 9A17
 631+ 9A17 21 DE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 632+ 9A1A 3A EC 88     	ld a,(Vel_right)
 633+ 9A1D A7           	and a
 634+ 9A1E 28 06        	jr z,1F
 635+ 9A20 47           	ld b,a
 636+ 9A21 34           3 inc (hl)
 637+ 9A22 10 FD        	djnz 3B
 638+ 9A24 18 01        	jr 2F
 639+ 9A26 34           1 inc (hl)
 640+ 9A27 C9           2 ret
 641+ 9A28
 642+ 9A28              ; ---------- ---------- ---------- ---------- ---------- ----------
 643+ 9A28              ;
 644+ 9A28              ;	5/2/23
 645+ 9A28              ;
 646+ 9A28              ;	Dec_CTRL_DESPLZ
 647+ 9A28              ;
 648+ 9A28              ;
 649+ 9A28              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 650+ 9A28
 651+ 9A28 21 DE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 652+ 9A2B 3A EB 88     	ld a,(Vel_left)
 653+ 9A2E A7           	and a
 654+ 9A2F 28 06        	jr z,1F
 655+ 9A31 47           	ld b,a
 656+ 9A32 35           3 dec (hl)
 657+ 9A33 10 FD        	djnz 3B
 658+ 9A35 18 01        	jr 2F
 659+ 9A37 35           1 dec (hl)
 660+ 9A38 C9           2 ret
 661+ 9A39
 662+ 9A39              ; ---------- ---------- ---------- ---------- ---------- ----------
 663+ 9A39
 664+ 9A39 2A D8 88     Reaparece_derecha ld hl,(Posicion_actual)
 665+ 9A3C 01 1F 00     	ld bc,31
 666+ 9A3F A7           	and a
 667+ 9A40 ED 4A        	adc hl,bc
 668+ 9A42 22 D8 88     	ld (Posicion_actual),hl
 669+ 9A45 21 04 89     	ld hl,Ctrl_0														; $xxx1
 670+ 9A48 CB C6        	set 0,(hl)
 671+ 9A4A C9           	ret
 672+ 9A4B
 673+ 9A4B              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9A4B
 675+ 9A4B 2A D8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 676+ 9A4E 01 1F 00     	ld bc,31
 677+ 9A51 A7           	and a
 678+ 9A52 ED 42        	sbc hl,bc
 679+ 9A54 22 D8 88     	ld (Posicion_actual),hl 											; $xx1x
 680+ 9A57 21 04 89     	ld hl,Ctrl_0
 681+ 9A5A CB CE        	set 1,(hl)
 682+ 9A5C C9           	ret
 683+ 9A5D
 684+ 9A5D              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9A5D
 686+ 9A5D 24           Reaparece_abajo inc h
 687+ 9A5E 01 E0 17     	ld bc,$17e0
 688+ 9A61 A7           	and a
 689+ 9A62 ED 4A        	adc hl,bc
 690+ 9A64 22 D8 88     	ld (Posicion_actual),hl
 691+ 9A67 21 04 89     	ld hl,Ctrl_0
 692+ 9A6A CB D6        	set 2,(hl)
 693+ 9A6C C9           	ret
 694+ 9A6D
 695+ 9A6D              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9A6D
 697+ 9A6D 01 E0 17     Reaparece_arriba ld bc,$17e0
 698+ 9A70 A7           	and a
 699+ 9A71 ED 42        	sbc hl,bc
 700+ 9A73 22 D8 88     	ld (Posicion_actual),hl
 701+ 9A76 21 04 89     	ld hl,Ctrl_0
 702+ 9A79 CB DE        	set 3,(hl)
 703+ 9A7B C9           	ret
 704+ 9A7C
 705+ 9A7C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 706+ 9A7C
 707+ 9A7C 2A E8 88     Reinicio ld hl,(Posicion_inicio)
 708+ 9A7F 22 D8 88     	ld (Posicion_actual),hl
 709+ 9A82 C9           	ret
# file closed: Direcciones.asm
1202  9A83              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9A83              ; ------------------------------------------------------------------------
   2+ 9A83              ;
   3+ 9A83              ;	02/04/23
   4+ 9A83              ;
   5+ 9A83              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9A83              ;	Fila superior "0", Columna izquierda "0".
   7+ 9A83              ;
   8+ 9A83              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9A83              ;
  10+ 9A83              ;	Modifica: A,BC y DE.
  11+ 9A83
  12+ 9A83 C5           Genera_coordenadas push bc
  13+ 9A84 E5           	push hl
  14+ 9A85 D5           	push de
  15+ 9A86
  16+ 9A86 2A D8 88     	ld hl,(Posicion_actual)
  17+ 9A89
  18+ 9A89 7D           	ld a,l
  19+ 9A8A E6 1F        	and $1f
  20+ 9A8C 32 DC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9A8F
  22+ 9A8F CD 17 97     	call calcula_tercio
  23+ 9A92 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9A93
  25+ 9A93 1E 00        	ld e,0
  26+ 9A95 7D           	ld a,l
  27+ 9A96 E6 E0        	and $e0
  28+ 9A98 28 01        	jr z,1F
  29+ 9A9A 04           	inc b
  30+ 9A9B
  31+ 9A9B 04           1 inc b
  32+ 9A9C 05           	dec b
  33+ 9A9D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9A9F              ;														; _ , salimos.
  35+ 9A9F 1C           3 inc e
  36+ 9AA0 D6 20        	sub 32
  37+ 9AA2 20 FB        	jr nz,3B
  38+ 9AA4 10 F5        	djnz 1B
  39+ 9AA6
  40+ 9AA6 7B           2 ld a,e
  41+ 9AA7 32 DD 88     	ld (Coordenada_y),a
  42+ 9AAA
  43+ 9AAA D1           	pop de
  44+ 9AAB E1           	pop hl
  45+ 9AAC C1           	pop bc
  46+ 9AAD
  47+ 9AAD C9           	ret
  48+ 9AAE
  49+ 9AAE              ; ------------------------------------------------------------------------
  50+ 9AAE              ;	28/03/23
  51+ 9AAE              ;
  52+ 9AAE              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9AAE              ;	Fila superior "0", Columna izquierda "0".
  54+ 9AAE              ;
  55+ 9AAE              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9AAE              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9AAE              ;
  58+ 9AAE              ;		DE="$120d"
  59+ 9AAE              ;
  60+ 9AAE              ;		D, (Coordenada_X), Columnas, $12
  61+ 9AAE              ;		E, (Coordenada_y), Filas, $0d
  62+ 9AAE              ;
  63+ 9AAE              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9AAE
  65+ 9AAE              ;	Modifica: A,BC y DE.
  66+ 9AAE
  67+ 9AAE
  68+ 9AAE              Genera_coordenadas_disparo
  69+ 9AAE
  70+ 9AAE              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9AAE
  72+ 9AAE 7D           	ld a,l
  73+ 9AAF E6 1F        	and $1f
  74+ 9AB1 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9AB2 CD 17 97     	call calcula_tercio
  76+ 9AB5 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9AB6 1E 00        	ld e,0
  78+ 9AB8 7D           	ld a,l
  79+ 9AB9 E6 E0        	and $e0
  80+ 9ABB 28 01        	jr z,1F
  81+ 9ABD 04           	inc b
  82+ 9ABE 1C           1 inc e
  83+ 9ABF D6 20        	sub 32
  84+ 9AC1 20 FB        	jr nz,1B
  85+ 9AC3 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9AC5 C9           	ret
  87+ 9AC6
# file closed: Genera_coordenadas.asm
1203  9AC6              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9AC6
   2+ 9AC6
   3+ 9AC6              ;   11/8/22
   4+ 9AC6              ;
   5+ 9AC6              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9AC6              ;
   7+ 9AC6              ;   Mov_obj.asm
   8+ 9AC6              ;
   9+ 9AC6              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9AC6              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9AC6              ;
  12+ 9AC6              ;   Codificación:
  13+ 9AC6              ;
  14+ 9AC6              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9AC6
  16+ 9AC6              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9AC6
  18+ 9AC6 02 40 00     Arriba db 2,%01000000,0
  19+ 9AC9 02 80 00     Abajo db 2,%10000000,0
  20+ 9ACC 02 20 00     Derecha db 2,%00100000,0
  21+ 9ACF 02 10 00     Izquierda db 2,%00010000,0
  22+ 9AD2 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9AD6 60 42 60 40
  22+ 9ADA 63
  23+ 9ADB 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9ADF 22 A3 80 A0
  24+ 9AE3 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9AE7 84 A0 83 A0
  25+ 9AEB 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9AEF 80 A3 22 A0
  26+ 9AF3 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9AF7 40 60 42 60
  27+ 9AFB 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9AFF
  29+ 9AFF 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9B03 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9B07 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9B0B 84 00
  32+ 9B0D 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9B11 84 00
  33+ 9B13 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9B17 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9B1B 1F 1F 1F 1F
  35+ 9B1F 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9B23 1F 1F 1F 1F
  35+ 9B27 1F
  36+ 9B28 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9B2C 2F 2F 2F 2F
  36+ 9B30 2F 2F
  37+ 9B32 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9B36 2F 2F 00
  38+ 9B39
  39+ 9B39              ; ----- ----- ----- ----- -----
  40+ 9B39
  41+ 9B39 17 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9B3B 13 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9B3D CF 9A        Indice_mov_Izquierda defw Izquierda
  44+ 9B3F CC 9A        Indice_mov_Derecha defw Derecha
  45+ 9B41 C9 9A        Indice_mov_Abajo defw Abajo
  46+ 9B43 C6 9A        Indice_mov_Arriba defw Arriba
  47+ 9B45 03 9B        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9B47 07 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9B49 FF 9A        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9B4B 0D 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9B4D D2 9A        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9B4F              ; ----- ----- ----- ----- -----
  53+ 9B4F
  54+ 9B4F 3A 0B 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9B52 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9B53 28 02            jr z,1F
  57+ 9B55 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9B57 3A 0C 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9B5A C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9B5C 32 0C 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9B5F              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9B5F 2A 09 89         ld hl,(Puntero_mov)
  63+ 9B62 7E               ld a,(hl)
  64+ 9B63 32 0B 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9B66 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9B67 22 09 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9B6A
  68+ 9B6A 3A 0D 89     Decoder ld a,(Repetimos_db)
  69+ 9B6D A7               and a
  70+ 9B6E 20 0C            jr nz,12F
  71+ 9B70 2A 09 89         ld hl,(Puntero_mov)
  72+ 9B73 7E               ld a,(hl)
  73+ 9B74 A7               and a
  74+ 9B75 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9B77 E6 0F            and $0f
  76+ 9B79 32 0D 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9B7C              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9B7C 2A 09 89     12 ld hl,(Puntero_mov)
  79+ 9B7F CB 7E            bit 7,(hl)
  80+ 9B81 28 03            jr z,2F
  81+ 9B83 CD 5D 97         call Mov_down
  82+ 9B86 2A 09 89     2 ld hl, (Puntero_mov)
  83+ 9B89 CB 76            bit 6,(hl)
  84+ 9B8B 28 03            jr z,3F
  85+ 9B8D CD 8E 97         call Mov_up
  86+ 9B90 2A 09 89     3 ld hl, (Puntero_mov)
  87+ 9B93 CB 6E            bit 5,(hl)
  88+ 9B95 28 03            jr z,4F
  89+ 9B97 CD D1 97         call Mov_right
  90+ 9B9A 2A 09 89     4 ld hl, (Puntero_mov)
  91+ 9B9D CB 66            bit 4,(hl)
  92+ 9B9F 28 03            jr z,5F
  93+ 9BA1 CD EF 98         call Mov_left
  94+ 9BA4
  95+ 9BA4              ; ---------- --------- --------- ---------- ----------
  96+ 9BA4
  97+ 9BA4 3A 0D 89     5 ld a,(Repetimos_db)
  98+ 9BA7 A7               and a
  99+ 9BA8 28 07            jr z,6F
 100+ 9BAA 3D               dec a
 101+ 9BAB 32 0D 89         ld (Repetimos_db),a
 102+ 9BAE 28 01            jr z,6f
 103+ 9BB0 C9           11 ret
 104+ 9BB1 21 0B 89     6 ld hl,Contador_db_mov
 105+ 9BB4 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9BB5 2A 09 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9BB8 23               inc hl
 108+ 9BB9 22 09 89         ld (Puntero_mov),hl
 109+ 9BBC 18 F2            jr 11B
 110+ 9BBE 2A 07 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9BC1 3A 0C 89         ld a,(Incrementa_puntero)
 112+ 9BC4 47               ld b,a
 113+ 9BC5 23           8 inc hl
 114+ 9BC6 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9BC8 5E               ld e,(hl)
 116+ 9BC9 23               inc hl
 117+ 9BCA 56               ld d,(hl)
 118+ 9BCB EB               ex de,hl
 119+ 9BCC 22 09 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9BCF 18 DF            jr 11B
 121+ 9BD1
 122+ 9BD1              ; ---------- --------- --------- ---------- ----------
 123+ 9BD1              ;
 124+ 9BD1              ;   11/8/22
 125+ 9BD1              ;
 126+ 9BD1              ;   Prepara_Puntero_mov
 127+ 9BD1
 128+ 9BD1 E5           Prepara_Puntero_mov push hl
 129+ 9BD2 D5               push de
 130+ 9BD3 2A 07 89         ld hl,(Puntero_indice_mov)
 131+ 9BD6 5E               ld e,(hl)
 132+ 9BD7 23               inc hl
 133+ 9BD8 56               ld d,(hl)
 134+ 9BD9 EB               ex de,hl
 135+ 9BDA 22 09 89         ld (Puntero_mov),hl
 136+ 9BDD D1               pop de
 137+ 9BDE E1               pop hl
 138+ 9BDF C9               ret
 139+ 9BE0
 140+ 9BE0              ; ---------- --------- --------- ---------- ----------
 141+ 9BE0              ;
 142+ 9BE0              ;   11/8/22
 143+ 9BE0              ;
 144+ 9BE0              ;   Reinicia_el_movimiento
 145+ 9BE0
 146+ 9BE0 CD D1 9B     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9BE3 AF               xor a
 148+ 9BE4 32 0B 89         ld (Contador_db_mov),a
 149+ 9BE7 32 0C 89         ld (Incrementa_puntero),a
 150+ 9BEA C3 4F 9B         jp Movimiento
 151+ 9BED C9               ret
 152+ 9BEE              ; ---------- --------- --------- ---------- ----------
 153+ 9BEE
 154+ 9BEE
 155+ 9BEE
 156+ 9BEE
 157+ 9BEE
 158+ 9BEE
 159+ 9BEE
 160+ 9BEE
 161+ 9BEE
 162+ 9BEE
 163+ 9BEE
 164+ 9BEE
 165+ 9BEE
 166+ 9BEE
 167+ 9BEE
 168+ 9BEE
 169+ 9BEE
 170+ 9BEE
# file closed: Patrones_de_mov.asm
1204  9BEE              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9BEE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9BEE              ;
   3+ 9BEE              ;	3/1/23
   4+ 9BEE              ;
   5+ 9BEE              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9BEE
   7+ 9BEE              ;	ADC HL,SP	LD (addr),SP
   8+ 9BEE              ;	ADD HL,SP	LD SP,(addr)
   9+ 9BEE              ;	ADD IX,SP	LD SP,nn
  10+ 9BEE              ; 	ADD IY,SP	LD SP,HL
  11+ 9BEE              ;				LD SP,IX
  12+ 9BEE              ;	DEC SP		LD SP,IY
  13+ 9BEE
  14+ 9BEE              ;	EX (SP),HL
  15+ 9BEE              ;	EX (SP),IX
  16+ 9BEE              ;	EX (SP),IY
  17+ 9BEE
  18+ 9BEE              ;	INC SP
  19+ 9BEE
  20+ 9BEE
  21+ 9BEE                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 24 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 13 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 2A 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 28 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 2A 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 28 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 24 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1205  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1206  7FE6
1207  7FE6              	SAVESNA "Pruebas.sna", START
1208  7FE6
1209  7FE6
1210  7FE6
1211  7FE6
# file closed: Banco_de_pruebas.asm
