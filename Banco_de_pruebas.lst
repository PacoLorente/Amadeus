# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 24 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD B3 A0     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 4E 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 15 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 25 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 143  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 144  8BB3
 145  8BB3              ; --------------------------------------------------------------------------------
 146  8BB3              ;
 147  8BB3              ; 12/05/24
 148  8BB3              ;
 149  8BB3              ; Parámetros DRAW.
 150  8BB3              ;
 151  8BB3
 152  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB3
 154  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BB4              ;															- Patrón de movimiento.
 156  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BB6
 159  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BB7
 162  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BB7              ; Ejemplos.
 165  8BB7
 166  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BB7
 172  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BB8
 176  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BBA
 179  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BBC
 181  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BBC
 183  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 185  8BBE
 186  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BBE
 188  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BBF
 194  8BBF 00           Ctrl_2 db 0
 195  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC0              ;
 203  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC0              ;														BIT 4, ???
 209  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC0
 211  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC1              ;
 217  8BC1              ; 														DESCRIPCIÖN:
 218  8BC1              ;
 219  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC1              ;
 233  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC1
 237  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC1
 239  8BC1 00           Filas db 0												; Filas. [DRAW]
 240  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BC7
 244  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BC7
 246  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BC8
 250  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BC8
 252  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BC8              ;
 254  8BC8              ;	COLORES: 0 ..... NEGRO
 255  8BC8              ;    		 1 ..... AZUL
 256  8BC8              ; 			 2 ..... ROJO
 257  8BC8              ;			 3 ..... MAGENTA
 258  8BC8              ; 			 4 ..... VERDE
 259  8BC8              ; 			 5 ..... CIAN
 260  8BC8              ;			 6 ..... AMARILLO
 261  8BC8              ; 			 7 ..... BLANCO
 262  8BC8
 263  8BC8 00 00        Indice_Sprite_der defw 0
 264  8BCA 00 00        Indice_Sprite_izq defw 0
 265  8BCC 00 00        Puntero_DESPLZ_der defw 0
 266  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD0
 268  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD3 00           Columnas db 0
 271  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD7
 275  8BD7              ; variables de control general.
 276  8BD7
 277  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BD8
 279  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BD8
 281  8BD8              Perfiles_de_velocidad
 282  8BD8
 283  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BDC
 288  8BDC              ; Contadores de 16 bits.
 289  8BDC
 290  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BE4
 295  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BE4
 297  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BEA              ;
 301  8BEA              ;
 302  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BEB 00           Incrementa_puntero_backup db 0
 306  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF0              ;
 312  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF0              ;
 316  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF0              ;
 321  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF0
 325  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF1
 327  8BF1              ;														DESCRIPCIÓN:
 328  8BF1              ;
 329  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF1
 336  8BF1              ;														BIT 3, Recarga de nueva oleada.
 337  8BF1              ;														BIT 4, Recarga de nueva oleada.
 338  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF1              ;														BIT 6, **** Frame completo.
 340  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF1
 342  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF3
 347  8BF3              ; Gestión de ENTIDADES y CAJAS.
 348  8BF3
 349  8BF3 00 00        Puntero_store_caja defw 0
 350  8BF5 00 00        Puntero_restore_caja defw 0
 351  8BF7 00 00        Indice_restore_caja defw 0
 352  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8BFC
 356  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C00              ;														; _ puntero (Indice_entidades).
 359  8C00
 360  8C00              ;---------------------------------------------------------------------------------------------------------------
 361  8C00              ;
 362  8C00              ;	11/09/24
 363  8C00              ;
 364  8C00              ;	Álbumes.
 365  8C00
 366  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C02              ;														; _variable para almacenar lo posición del puntero_
 368  8C02              ; 														; _de pila, SP.
 369  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C04
 372  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C04
 374  8C04 00 00        Album_de_pintado defw 0
 375  8C06 00 00        Album_de_borrado defw 0
 376  8C08 00 00        Album_de_pintado_Amadeus defw 0
 377  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 378  8C0C 00 00        Album_de_pintado_disparos defw 0
 379  8C0E 00 00        Album_de_borrado_disparos defw 0
 380  8C10
 381  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C12 00           Num_de_bytes_album_de_disparos db 0
 383  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C14
 385  8C14 07           Numero_de_disparos_de_entidades db 7
 386  8C15
 387  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C17
 390  8C17 00 00        Techo_Scanlines_album defw 0
 391  8C19 00 00        Techo_Scanlines_album_2 defw 0
 392  8C1B 00           Switch db 0
 393  8C1C 00 00        Techo defw 0
 394  8C1E 00 00        Scanlines_album_SP defw 0
 395  8C20 00 89        India_SP defw Tabla_de_pintado
 396  8C22 03 89        India_2_SP defw Tabla_de_pintado+3
 397  8C24
 398  8C24 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 399  8C25              ;
 400  8C25              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 401  8C25              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 402  8C25              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 403  8C25              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 404  8C25              ;																Habilita el borrado/pintado de sprites.
 405  8C25              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 406  8C25              ;																_ a la baja.
 407  8C25              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 408  8C25              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 409  8C25              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 410  8C25              ; 																_ el último frame de la explosión de nuestra nave.
 411  8C25              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 412  8C25              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 413  8C25
 414  8C25 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 415  8C26              ;
 416  8C26              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 417  8C26              ;
 418  8C26              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 419  8C26              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 420  8C26              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 421  8C26              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 422  8C26              ;
 423  8C26              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 424  8C26              ;															_ masticados ya generados.
 425  8C26              ;
 426  8C26              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 427  8C26              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 428  8C26              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 429  8C26              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 430  8C26
 431  8C26 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 432  8C27              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C27              ;                                                           BIT 2, "1" DEBUG !! Indica que se ha generado un disparo de entidad.
 434  8C27
 435  8C27
 436  8C27
 437  8C27
 438  8C27
 439  8C27              ; Gestión de Disparos.
 440  8C27
 441  8C27 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 442  8C29 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 443  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 444  8C2C
 445  8C2C              ;
 446  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 447  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 448  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 449  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 450  8C2C
 451  8C2C
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 458  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 459  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 460  8C2E
 461  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 462  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 463  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 465  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 467  8C36
 468  8C36              ;---------------------------------------------------------------------------------------------------------------
 469  8C36
 470  8C36              ; Relojes y temporizaciones.
 471  8C36
 472  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 473  8C37 05           Clock_explosion_Amadeus db 5
 474  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 475  8C39
 476  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 477  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 478  8C3D 00           DB_RND_disparos db 0
 479  8C3E
 480  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 481  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 482  8C41              ;														; Repite la oleada de entidades.
 483  8C41 90           CLOCK_disparo_entidad_MASTER db $90						; Reloj, decreciente.
 484  8C42 90           CLOCK_disparo_entidad db $90
 485  8C43
 486  8C43              ;---------------------------------------------------------------------------------------------------------------
 487  8C43
 488  8C43              ; Gestión de NIVELES.
 489  8C43
 490  8C43 00           Nivel db 0												; Nivel actual del juego.
 491  8C44 00 00        Puntero_indice_NIVELES defw 0
 492  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C48              ; 														; _ que definen el NIVEL.
 494  8C48
 495  8C48              ; ---------------------------------------------------------------------------------------------------------------
 496  8C48
 497  8C48              ; Temporizaciones Shield.
 498  8C48
 499  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C50 00           Shield_3 db 0
 504  8C51
 505  8C51 06           Lives db 6
 506  8C52
 507  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C52              ;
 509  8C52              ;	5/1/24
 510  8C52
 511  8C52              START
 512  8C52
 513  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C5B F3           	DI
 518  8C5C
 519  8C5C              ; Limpiamos pantalla.
 520  8C5C
 521  8C5C 3E 07        	ld a,%00000111
 522  8C5E CD B2 94     	call Cls
 523  8C61 CD 0A 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C64
 525  8C64              ; INICIALIZACIÓN.
 526  8C64
 527  8C64 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C66 CD 57 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C69 CD A1 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C6C
 531  8C6C 6F           	ld l,a
 532  8C6D 26 00        	ld h,0
 533  8C6F 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C72
 535  8C72              ;	Inicializa 1er Nivel.
 536  8C72
 537  8C72 21 94 8B     	ld hl,Indice_de_niveles
 538  8C75 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C78 CD 87 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C7B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C7B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C7B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C7B
 544  8C7B              ;	Inicia los álbumes de líneas.
 545  8C7B
 546  8C7B CD 5A 90     	call Inicia_albumes_de_lineas
 547  8C7E              ;
 548  8C7E CD 6A 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C81 CD 77 90     	call Inicia_albumes_de_disparos
 550  8C84
 551  8C84 CD A0 90     	call Inicia_Puntero_Disparo_Entidades
 552  8C87
 553  8C87 CD CC 92     4 call Inicia_Entidades
 554  8C8A CD 2F 93     	call Inicia_Amadeus
 555  8C8D
 556  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 557  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 558  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 559  8C8D
 560  8C8D 11 6D 89     	ld de,Amadeus_BOX
 561  8C90 CD 82 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 562  8C93 CD 72 93     	call Limpiamos_bandeja_DRAW
 563  8C96
 564  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 565  8C96
 566  8C96 06 3C        	ld b,60
 567  8C98 CD 5E 9D     2 call Amadeus_a_izquierda
 568  8C9B 10 FB        	djnz 2B
 569  8C9D
 570  8C9D CD 38 90     	call Genera_datos_de_impresion_Amadeus
 571  8CA0
 572  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 573  8CA0
 574  8CA0 CD 8A 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 575  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 576  8CA3
 577  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 578  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 579  8CA3
 580  8CA3              ;	ld a,(Ctrl_1)
 581  8CA3              ;	bit 3,a
 582  8CA3              ;	jr nz,5F											 ; Loop
 583  8CA3
 584  8CA3              ;	ld de,Amadeus_db
 585  8CA3              ;	call Store_Amadeus
 586  8CA3
 587  8CA3              ; 	INICIA DISPAROS !!!!!
 588  8CA3
 589  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 590  8CA3
 591  8CA3              ;5 call Inicia_punteros_de_cajas
 592  8CA3              ;	call Restore_entidad
 593  8CA3
 594  8CA3              ;	ld a,(Ctrl_1)
 595  8CA3              ;	bit 3,a
 596  8CA3              ;	jr z,6F
 597  8CA3
 598  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 599  8CA3
 600  8CA3              ;	ld hl,Ctrl_1
 601  8CA3              ;	res 3,(hl)
 602  8CA3              ;	jr Main
 603  8CA3
 604  8CA3              ; Damos por concluida la construcción del FRAME.
 605  8CA3              ;
 606  8CA3
 607  8CA3 CD 15 91     	call Inicia_Shield
 608  8CA6
 609  8CA6
 610  8CA6 2A 1E 8C     6 ld hl,(Scanlines_album_SP)
 611  8CA9 22 17 8C     	ld (Techo_Scanlines_album),hl
 612  8CAC
 613  8CAC 2A 06 8C     	ld hl,(Album_de_borrado)
 614  8CAF 22 1E 8C     	ld (Scanlines_album_SP),hl
 615  8CB2
 616  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 617  8CB5 22 20 8C     	ld (India_SP),hl
 618  8CB8
 619  8CB8 21 24 8C     	ld hl,Ctrl_3
 620  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 621  8CBD CB D6        	set 2,(hl)
 622  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 623  8CC1
 624  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 625  8CC2
 626  8CC2 76           	halt
 627  8CC3
 628  8CC3              ; ------------------------------------
 629  8CC3
 630  8CC3              Main
 631  8CC3              ;
 632  8CC3              ; 20/09/24
 633  8CC3
 634  8CC3              ; Gestión de disparos.
 635  8CC3
 636  8CC3 CD 21 A0     	call Limpia_album_de_borrado_disparos
 637  8CC6 CD 88 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 638  8CC9 CD 5D A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 639  8CCC CD 0B 9F     	call Motor_de_disparos_entidades
 640  8CCF
 641  8CCF              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 642  8CCF              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 643  8CCF              ; Este hecho lo indica el bit2 de (Impacto2).
 644  8CCF
 645  8CCF CD FF A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 646  8CD2
 647  8CD2              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 648  8CD2
 649  8CD2              ;	ld hl,CLOCK_disparo_entidad
 650  8CD2              ;	dec (hl)
 651  8CD2              ;	call z,Autoriza_disparo_de_entidades
 652  8CD2
 653  8CD2 2A 3E 8C     	ld hl,(Clock_next_entity)
 654  8CD5 ED 4B 78 5C  	ld bc,(FRAMES)
 655  8CD9 A7           	and a
 656  8CDA ED 42        	sbc hl,bc
 657  8CDC 20 16        	jr nz,1F
 658  8CDE
 659  8CDE              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 660  8CDE              ; _ (Clock_next_entity) para la siguiente entidad.
 661  8CDE
 662  8CDE 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 663  8CE1 47           	ld b,a
 664  8CE2 3A FB 8B     	ld a,(Entidades_en_curso)
 665  8CE5 B8           	cp b
 666  8CE6 28 0C        	jr z,1F
 667  8CE8 30 0A        	jr nc,1F
 668  8CEA
 669  8CEA 3C           	inc a
 670  8CEB 32 FB 8B     	ld (Entidades_en_curso),a
 671  8CEE
 672  8CEE              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 673  8CEE
 674  8CEE CD A1 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 675  8CF1 CD BD 8E     	call Define_Clock_next_entity
 676  8CF4
 677  8CF4 3A FB 8B     1 ld a,(Entidades_en_curso)
 678  8CF7 A7           	and a
 679  8CF8 CA 72 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 680  8CFB 47           	ld b,a												; No hay entidades que gestionar.
 681  8CFC
 682  8CFC              ; ( Código que ejecutamos con cada entidad: ).
 683  8CFC
 684  8CFC              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 685  8CFC              ;
 686  8CFC              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 687  8CFC
 688  8CFC 21 00 89     	ld hl,Tabla_de_pintado
 689  8CFF 22 20 8C     	ld (India_SP),hl
 690  8D02
 691  8D02 21 24 8C     	ld hl,Ctrl_3
 692  8D05 CB D6        	set 2,(hl)
 693  8D07 CD 5D 8E     	call Change
 694  8D0A
 695  8D0A C5           2 push bc 												; Nº de entidades en curso.
 696  8D0B
 697  8D0B CD E2 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 698  8D0E ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 699  8D12
 700  8D12              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 701  8D12
 702  8D12              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 703  8D12              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 704  8D12
 705  8D12 3A 2B 8C     	ld a,(Impacto2)
 706  8D15 CB 5F        	bit 3,a
 707  8D17 C4 E7 9F     	call nz,Compara_con_coordenadas_de_disparo
 708  8D1A
 709  8D1A 3A B7 8B     	ld a,(Impacto)
 710  8D1D CB 4F        	bit 1,a
 711  8D1F C4 F2 91     	call nz,Genera_explosion
 712  8D22 20 31        	jr nz,Gestiona_siguiente_entidad
 713  8D24
 714  8D24 3A B7 8B     	ld a,(Impacto)
 715  8D27 A7           	and a
 716  8D28 28 0C        	jr z,3F
 717  8D2A
 718  8D2A              ; IMPACTO en entidad por colisión con Amadeus.
 719  8D2A
 720  8D2A              ; 5/7/24
 721  8D2A              ; Nota importante:
 722  8D2A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 723  8D2A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 724  8D2A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 725  8D2A
 726  8D2A 3A 71 89     	ld a,(Impacto_Amadeus)
 727  8D2D A7           	and a
 728  8D2E C4 F2 91     	call nz,Genera_explosion
 729  8D31 20 22        	jr nz,Gestiona_siguiente_entidad
 730  8D33
 731  8D33              ; Falsa colisión !!!
 732  8D33
 733  8D33 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 734  8D36
 735  8D36              ; -------------------------------------------
 736  8D36
 737  8D36 CD 01 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 738  8D39 CD 3D 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 739  8D3C CD F1 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 740  8D3F CD F2 94     	call Genera_datos_de_impresion
 741  8D42 CD 95 93     	call Decrementa_Contador_de_mov_masticados
 742  8D45
 743  8D45              ; -------------------------------------------
 744  8D45
 745  8D45              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 746  8D45
 747  8D45 2A B8 8B     	ld hl,(Puntero_de_impresion)
 748  8D48 CD C6 94     	call Genera_coordenadas
 749  8D4B
 750  8D4B              ; TODO: Generamos disparo ???
 751  8D4B
 752  8D4B 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 753  8D4E A7           	and a
 754  8D4F C4 ED 8D     	call nz,Entidad_genera_disparo_si_procede
 755  8D52
 756  8D52 CD 7D A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 757  8D55
 758  8D55              Gestiona_siguiente_entidad
 759  8D55
 760  8D55 CD 67 93      	call Store_Restore_cajas
 761  8D58 C1           	pop bc
 762  8D59 10 AF        	djnz 2B
 763  8D5B
 764  8D5B              ; Hemos gestionado todas las entidades.
 765  8D5B              ; ----- ----- -----
 766  8D5B
 767  8D5B CD 15 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 768  8D5E CD 2C 8F     	call Ordena_tabla_de_impresion
 769  8D61 CD 8A 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 770  8D64
 771  8D64              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 772  8D64              ; Hemos gestionado todas las unidades.
 773  8D64              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 774  8D64
 775  8D64              ;	ld hl,Ctrl_1
 776  8D64              ;	res 2,(hl)
 777  8D64
 778  8D64 CD D2 8E     	call Borra_diferencia
 779  8D67
 780  8D67 3A 24 8C     	ld a,(Ctrl_3)
 781  8D6A CB 5F        	bit 3,a
 782  8D6C 20 04        	jr nz,Gestion_de_Amadeus
 783  8D6E
 784  8D6E EB           	ex de,hl
 785  8D6F 71           	ld (hl),c
 786  8D70 2C           	inc l
 787  8D71 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 788  8D72
 789  8D72              ;! GESTIONA AMADEUS !!!!!!!!!!
 790  8D72
 791  8D72              Gestion_de_Amadeus
 792  8D72
 793  8D72 21 24 8C     	ld hl,Ctrl_3
 794  8D75 CB 76        	bit 6,(hl)
 795  8D77 28 13        	jr z,Amadeus_vivo
 796  8D79
 797  8D79              ; Amadeus ha sido destruido.
 798  8D79              ; Decrementa (Temp_new_live).
 799  8D79
 800  8D79 21 38 8C     	ld hl,Temp_new_live
 801  8D7C 35           	dec (hl)
 802  8D7D 20 26        	jr nz,End_frame
 803  8D7F
 804  8D7F              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 805  8D7F
 806  8D7F 21 51 8C     	ld hl,Lives
 807  8D82 35           	dec (hl)
 808  8D83
 809  8D83              ;! Fin del juego
 810  8D83
 811  8D83 F3           	di
 812  8D84 28 FE        	jr z,$
 813  8D86 FB           	ei
 814  8D87
 815  8D87              ; Nueva nave.
 816  8D87
 817  8D87 CD 03 8E     	call Reinicia_Amadeus
 818  8D8A 18 19        	jr End_frame
 819  8D8C
 820  8D8C              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 821  8D8C
 822  8D8C              Amadeus_vivo
 823  8D8C
 824  8D8C 3A 71 89     	ld a,(Impacto_Amadeus)
 825  8D8F A7           	and a
 826  8D90 C4 22 92     	call nz, Genera_explosion_Amadeus
 827  8D93 20 10        	jr nz, End_frame
 828  8D95
 829  8D95 CD CF 91     	call Teclado
 830  8D98
 831  8D98 21 24 8C     	ld hl,Ctrl_3
 832  8D9B CB 6E        	bit 5,(hl)
 833  8D9D 28 06        	jr z,End_frame
 834  8D9F
 835  8D9F              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 836  8D9F
 837  8D9F CD 78 8E     	call Change_Amadeus
 838  8DA2 CD 38 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 839  8DA5
 840  8DA5              End_frame
 841  8DA5
 842  8DA5              ; 20/09/24. Deshabilitamos el permiso de disparo de entidades y generamos los scanlines de los disparos de entidades.
 843  8DA5
 844  8DA5 AF           	xor a
 845  8DA6 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 846  8DA9 CD 46 9F     	call Genera_datos_de_impresion_disparos_Entidades	; Volvemos a deshabilitar el permiso de disparo para las entidades hasta que (CLOCK_disparo_entidad) llegue a "0".
 847  8DAC
 848  8DAC              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 849  8DAC              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 850  8DAC
 851  8DAC CD E4 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 852  8DAF CD 37 A0     	call Calcula_bytes_pintado_disparos
 853  8DB2 CD 44 A0     	call Limpia_album_de_pintado_disparos
 854  8DB5
 855  8DB5              ; ------------ ------------- --------------
 856  8DB5
 857  8DB5 2A 06 8C     	ld hl,(Album_de_borrado)
 858  8DB8 22 1E 8C     	ld (Scanlines_album_SP),hl
 859  8DBB
 860  8DBB 21 24 8C     	ld hl,Ctrl_3
 861  8DBE CB C6        	set 0,(hl) 											; Indica Frame completo.
 862  8DC0 CB 9E        	res 3,(hl)
 863  8DC2 CB A6        	res 4,(hl)
 864  8DC4
 865  8DC4 AF           	xor a
 866  8DC5 D3 FE        	out ($fe),a
 867  8DC7
 868  8DC7 76           	halt
 869  8DC8
 870  8DC8              ; ----------------------------------------
 871  8DC8
 872  8DC8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 873  8DC8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 874  8DC8 CA C3 8C     	jp z,Main
 875  8DCB
 876  8DCB              ;------------------------------------------
 877  8DCB              ;
 878  8DCB              ;	14/09/24
 879  8DCB
 880  8DCB              Autoriza_disparo_de_entidades
 881  8DCB
 882  8DCB 3E 01        	ld a,1
 883  8DCD 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 884  8DD0
 885  8DD0 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 886  8DD3 32 42 8C     	ld (CLOCK_disparo_entidad),a
 887  8DD6
 888  8DD6 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 889  8DD9
 890  8DD9 7E           2 ld a,(hl)
 891  8DDA A7           	and a
 892  8DDB 28 08        	jr z,1F
 893  8DDD
 894  8DDD 32 3D 8C     	ld (DB_RND_disparos),a
 895  8DE0 23           	inc hl
 896  8DE1 22 3B 8C     	ld (RND_SP_Disparos),hl
 897  8DE4
 898  8DE4 C9           	ret
 899  8DE5
 900  8DE5 21 F6 88     1	ld hl,Numeros_aleatorios
 901  8DE8 22 3B 8C     	ld (RND_SP_Disparos),hl
 902  8DEB 18 EC        	jr 2B
 903  8DED
 904  8DED              ;------------------------------------------
 905  8DED              ;
 906  8DED              ;	14/09/24
 907  8DED              ;
 908  8DED              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 909  8DED
 910  8DED              Entidad_genera_disparo_si_procede
 911  8DED
 912  8DED 3A FB 8B     	ld a,(Entidades_en_curso)
 913  8DF0 A7           	and a
 914  8DF1 C8           	ret z
 915  8DF2
 916  8DF2 3A 3D 8C     	ld a,(DB_RND_disparos)
 917  8DF5 CB 4F        	bit 1,a
 918  8DF7 F5           	push af											; Guardamos FLAGS.
 919  8DF8
 920  8DF8 17           	rla
 921  8DF9 17           	rla
 922  8DFA
 923  8DFA 32 3D 8C     	ld (DB_RND_disparos),a
 924  8DFD
 925  8DFD F1           	pop af
 926  8DFE C4 82 9F     	call nz,Genera_disparo_de_entidad_maldosa
 927  8E01
 928  8E01 C9           	ret
 929  8E02
 930  8E02
 931  8E02              ; RECARGA DE NUEVA OLEADA.
 932  8E02
 933  8E02              ;	ld a,(Contador_de_frames)
 934  8E02              ;	ld b,a
 935  8E02              ;	ld a,(Activa_recarga_cajas)
 936  8E02              ;	cp b
 937  8E02              ;	jr z,20F
 938  8E02
 939  8E02              ;	ld hl,Ctrl_1
 940  8E02              ;	set 4,(hl)
 941  8E02              ;	jp Main
 942  8E02
 943  8E02              ;20 ld hl,Ctrl_1
 944  8E02              ;	res 4,(hl)
 945  8E02
 946  8E02              ;	ld a,(Contador_de_frames)
 947  8E02
 948  8E02              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 949  8E02              ;! _ IMPREDECIBLE !!!!
 950  8E02
 951  8E02              ;	add 10
 952  8E02              ;	ld (Clock_next_entity),a
 953  8E02
 954  8E02              ;	jp 4B
 955  8E02
 956  8E02 C9           	ret
 957  8E03
 958  8E03              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 959  8E03              ;
 960  8E03              ;	16/11/23
 961  8E03
 962  8E03              ;;Gestiona_Amadeus
 963  8E03
 964  8E03              ;! Activa/desactiva impacto con Amadeus.
 965  8E03
 966  8E03              ;	ld a,(Impacto)
 967  8E03              ;	and a
 968  8E03              ;	jr nz,2F
 969  8E03
 970  8E03              ;;	call Mov_Amadeus
 971  8E03
 972  8E03              ;;2 ld a,(Ctrl_0)
 973  8E03              ;;	bit 4,a
 974  8E03              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 975  8E03
 976  8E03              ;;	call Guarda_foto_entidad_a_pintar
 977  8E03              ;;	call Guarda_datos_de_borrado_Amadeus
 978  8E03
 979  8E03              ;;1 ld hl,Ctrl_0
 980  8E03              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 981  8E03
 982  8E03              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 983  8E03
 984  8E03              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 985  8E03
 986  8E03              ;	call Calcula_numero_de_disparotes
 987  8E03
 988  8E03              ;;	ret
 989  8E03
 990  8E03              ; -----------------------------
 991  8E03              ;
 992  8E03              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 993  8E03              ;
 994  8E03              ;	INPUTS: B a de estar a "0".
 995  8E03
 996  8E03              ;Prepara_Borra_sprites
 997  8E03
 998  8E03              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 999  8E03              ;	ld a,l
1000  8E03              ;	ret z
1001  8E03
1002  8E03              ;	srl a
1003  8E03
1004  8E03              ;2 sub 16
1005  8E03              ;	jr z,1F
1006  8E03              ;	inc b
1007  8E03              ;	jr 2B
1008  8E03
1009  8E03              ;1 inc b
1010  8E03
1011  8E03              ;	exx
1012  8E03              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1013  8E03              ;	exx
1014  8E03
1015  8E03              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1016  8E03              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1017  8E03
1018  8E03              ;	ret
1019  8E03
1020  8E03              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1021  8E03              ;
1022  8E03              ;	24/07/24
1023  8E03
1024  8E03              Reinicia_Amadeus
1025  8E03
1026  8E03              ;	Reinicia posición y estado.
1027  8E03
1028  8E03 21 CF 50     	ld hl,$50cf
1029  8E06 22 72 89     	ld (p.imp.amadeus),hl
1030  8E09 21 F0 E0     	ld hl,$e0f0
1031  8E0C 22 74 89     	ld (Pamm_Amadeus),hl
1032  8E0F 21 3D 00     	ld hl,$003d
1033  8E12 22 76 89     	ld (Comm_Amadeus),hl
1034  8E15
1035  8E15              ;	limpiamos el álbum de borrado.
1036  8E15
1037  8E15 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1038  8E18
1039  8E18 AF           	xor a
1040  8E19 77           	ld (hl),a
1041  8E1A
1042  8E1A E5           	push hl
1043  8E1B D1           	pop de
1044  8E1C 13           	inc de
1045  8E1D
1046  8E1D 01 23 00     	ld bc,35
1047  8E20 ED B0        	ldir
1048  8E22
1049  8E22 CD 38 90     	call Genera_datos_de_impresion_Amadeus
1050  8E25
1051  8E25              ;	Reinicia temporizaciones.
1052  8E25
1053  8E25 CD 15 91     	call Inicia_Shield
1054  8E28
1055  8E28 3E 5A        	ld a,90
1056  8E2A 32 4E 8C     	ld (Shield),a
1057  8E2D
1058  8E2D 3E 64        	ld a,100
1059  8E2F 32 38 8C     	ld (Temp_new_live),a
1060  8E32
1061  8E32              ; 	Restauramos el FLAG: Amadeus vivo.
1062  8E32
1063  8E32 21 24 8C     	ld hl,Ctrl_3
1064  8E35 CB B6        	res 6,(hl)
1065  8E37
1066  8E37              ;	Fuerza la impresión de la nave en el siguiente frame.
1067  8E37
1068  8E37 21 24 8C      	ld hl,Ctrl_3
1069  8E3A CB EE        	set 5,(hl)
1070  8E3C
1071  8E3C C9           	ret
1072  8E3D
1073  8E3D              ; --------------------------------------------------------------------------------------------------------------
1074  8E3D              ;
1075  8E3D              ;	12/05/24
1076  8E3D
1077  8E3D 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1078  8E40 CB 27        	sla a
1079  8E42 32 BE 8B     	ld (Velocidad),a
1080  8E45 E6 10        	and $10
1081  8E47 C8           	ret z
1082  8E48
1083  8E48              ; Restaura (Velocidad) a razón del nº de vueltas.
1084  8E48
1085  8E48 3A B6 8B     	ld a,(Contador_de_vueltas)
1086  8E4B CB 2F        	sra a
1087  8E4D CB 2F        	sra a
1088  8E4F 32 BE 8B     	ld (Velocidad),a
1089  8E52
1090  8E52 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1091  8E55 23           	inc hl
1092  8E56 23           	inc hl
1093  8E57 23           	inc hl
1094  8E58 23           	inc hl
1095  8E59 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1096  8E5C
1097  8E5C C9           	ret
1098  8E5D
1099  8E5D              ; --------------------------------------------------------------------------------------------------------------
1100  8E5D              ;
1101  8E5D              ;	25/08/24
1102  8E5D
1103  8E5D              Change
1104  8E5D
1105  8E5D 3A 1B 8C     	ld a,(Switch)
1106  8E60 EE 01        	xor 1
1107  8E62 32 1B 8C     	ld (Switch),a
1108  8E65 2A 04 8C     	ld hl,(Album_de_pintado)
1109  8E68 ED 5B 06 8C  	ld de,(Album_de_borrado)
1110  8E6C EB           	ex de,hl
1111  8E6D 22 04 8C     	ld (Album_de_pintado),hl
1112  8E70 22 1E 8C     	ld (Scanlines_album_SP),hl
1113  8E73 ED 53 06 8C  	ld (Album_de_borrado),de
1114  8E77 C9           	ret
1115  8E78
1116  8E78              Change_Amadeus
1117  8E78
1118  8E78 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1119  8E7B ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1120  8E7F EB           	ex de,hl
1121  8E80 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1122  8E83 ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1123  8E87 C9           	ret
1124  8E88
1125  8E88              Change_Disparos
1126  8E88
1127  8E88 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1128  8E8B ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1129  8E8F EB           	ex de,hl
1130  8E90 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1131  8E93 ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1132  8E97 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1133  8E9A
1134  8E9A 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1135  8E9D 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1136  8EA0
1137  8EA0 C9           	ret
1138  8EA1
1139  8EA1              ; ------------------------------------
1140  8EA1              ;
1141  8EA1              ; 1/05/24
1142  8EA1
1143  8EA1              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1144  8EA1              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1145  8EA1
1146  8EA1              ;	DESTRUYE: HL,DE,A
1147  8EA1              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1148  8EA1
1149  8EA1              ;	Variables implicadas: (RND_SP).
1150  8EA1
1151  8EA1              Extrae_numero_aleatorio_y_avanza
1152  8EA1
1153  8EA1 21 00 89     	ld hl,Tabla_de_pintado
1154  8EA4 EB           	ex de,hl
1155  8EA5 2A 39 8C     	ld hl,(RND_SP)
1156  8EA8 EB           	ex de,hl
1157  8EA9 A7           	and a
1158  8EAA ED 52        	sbc hl,de
1159  8EAC
1160  8EAC 2A 39 8C     	ld hl,(RND_SP)
1161  8EAF 20 06        	jr nz,1F
1162  8EB1
1163  8EB1              ; Sitúa HL al principio de la tabla de nº aleatorios.
1164  8EB1
1165  8EB1 21 F6 88     	ld hl,Numeros_aleatorios
1166  8EB4 22 39 8C     	ld (RND_SP),HL
1167  8EB7
1168  8EB7              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1169  8EB7
1170  8EB7 7E           1 ld a,(hl)
1171  8EB8 23           	inc hl
1172  8EB9 22 39 8C     	ld (RND_SP),hl
1173  8EBC C9           	ret
1174  8EBD
1175  8EBD              ; ------------------------------------
1176  8EBD              ;
1177  8EBD              ; 1/05/24
1178  8EBD
1179  8EBD              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1180  8EBD              ; (1 a 4 segundos).
1181  8EBD              ; Actualizamos (Clock_next_entity) con A.
1182  8EBD
1183  8EBD              ;	DESTRUYE: A y B.
1184  8EBD              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1185  8EBD              ;			 Actualiza (Clock_next_entity) con A.
1186  8EBD
1187  8EBD              ;	Variables implicadas: (Clock_next_entity).
1188  8EBD
1189  8EBD              ; Notas:
1190  8EBD
1191  8EBD              ; 	$32 1 seg.
1192  8EBD              ; 	$64 2 seg.
1193  8EBD              ; 	$96 3 seg.
1194  8EBD              ; 	$c8 4 seg.
1195  8EBD              ; 	$fa 5 seg.
1196  8EBD
1197  8EBD              ; $ffff 1310,7 seg, 22 minutos.
1198  8EBD
1199  8EBD              ;	$0100  5 seg. aproximadamente.
1200  8EBD              ;	$0200 10 seg. aproximadamente.
1201  8EBD              ;	$0300 15 seg. aproximadamente.
1202  8EBD              ;	$0400 20 seg. aproximadamente.
1203  8EBD              ;	$0500 25 seg. aproximadamente.
1204  8EBD              ;	$0600 30 seg. aproximadamente.
1205  8EBD
1206  8EBD              Define_Clock_next_entity
1207  8EBD
1208  8EBD FE 34        	cp $34
1209  8EBF 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1210  8EC1
1211  8EC1              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1212  8EC1
1213  8EC1 4F           3 ld c,a
1214  8EC2 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1215  8EC4 2A 78 5C     	ld hl,(FRAMES)
1216  8EC7 A7           	and a
1217  8EC8 ED 4A        	adc hl,bc
1218  8ECA 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1219  8ECD C9           	ret
1220  8ECE
1221  8ECE 3E 34        1 ld a,$34
1222  8ED0 18 EF        	jr 3B
1223  8ED2
1224  8ED2              ; ------------------------------------
1225  8ED2              ;
1226  8ED2              ; 18/03/24
1227  8ED2
1228  8ED2              Borra_diferencia
1229  8ED2
1230  8ED2 ED 4B 1E 8C  	ld bc,(Scanlines_album_SP)
1231  8ED6
1232  8ED6 3A 1B 8C     	ld a,(Switch)
1233  8ED9 A7           	and a
1234  8EDA 28 08        	jr z,2F
1235  8EDC
1236  8EDC 2A 19 8C     	ld hl,(Techo_Scanlines_album_2)
1237  8EDF 11 19 8C     	ld de,Techo_Scanlines_album_2
1238  8EE2 18 06        	jr 3F
1239  8EE4
1240  8EE4 2A 17 8C     2 ld hl,(Techo_Scanlines_album)
1241  8EE7 11 17 8C     	ld de,Techo_Scanlines_album
1242  8EEA
1243  8EEA              ; Diferencia.
1244  8EEA
1245  8EEA ED 42        3 sbc hl,bc
1246  8EEC
1247  8EEC C8           	ret z
1248  8EED D8           	ret c
1249  8EEE
1250  8EEE              ; Nuevo techo, (más bajo que el anterior).
1251  8EEE              ; Fijamos nuevo techo y borramos bytes sobrantes.
1252  8EEE
1253  8EEE EB           	ex de,hl
1254  8EEF
1255  8EEF 71           	ld (hl),c
1256  8EF0 2C           	inc l
1257  8EF1 70           	ld (hl),b
1258  8EF2
1259  8EF2 AF           	xor a
1260  8EF3 43           	ld b,e
1261  8EF4
1262  8EF4 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1263  8EF7
1264  8EF7 77           1 ld (hl),a
1265  8EF8 23           	inc hl
1266  8EF9 10 FC        	djnz 1B
1267  8EFB
1268  8EFB              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1269  8EFB
1270  8EFB 21 24 8C     	ld hl,Ctrl_3
1271  8EFE CB DE        	set 3,(hl)
1272  8F00
1273  8F00 C9           	ret
1274  8F01
1275  8F01              ; --------------------------------------------------------------------------------------------------------------
1276  8F01              ;
1277  8F01              ;	26/3/24
1278  8F01
1279  8F01              Recauda_informacion_de_entidad_en_curso
1280  8F01
1281  8F01              ; Almacena la Coordenada Y de la entidad en curso.
1282  8F01
1283  8F01              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1284  8F01
1285  8F01 3A B5 8B     	ld a,(Coordenada_y)
1286  8F04 2A 20 8C     	ld hl,(India_SP)
1287  8F07 77           	ld (hl),a
1288  8F08 2C           	inc l
1289  8F09
1290  8F09              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1291  8F09
1292  8F09 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
1293  8F0D
1294  8F0D 73           	ld (hl),e
1295  8F0E 2C           	inc l
1296  8F0F 72           	ld (hl),d
1297  8F10 2C           	inc l
1298  8F11
1299  8F11 22 20 8C     	ld (India_SP),hl
1300  8F14
1301  8F14 C9           	ret
1302  8F15
1303  8F15              ; --------------------------------------------------------------------------------------------------------------
1304  8F15              ;
1305  8F15              ;	27/03/24
1306  8F15              ;
1307  8F15
1308  8F15              Inicializa_India_y_limpia_Tabla_de_impresion
1309  8F15
1310  8F15 2A 20 8C     	ld hl,(India_SP)
1311  8F18 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1312  8F1B
1313  8F1B 79           	ld a,c
1314  8F1C 95           	sub l
1315  8F1D 28 06        	jr z,2F
1316  8F1F 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1317  8F20              ;														; _ y pasamos a inicializar (India_SP).
1318  8F20 AF           	xor a
1319  8F21
1320  8F21 77           1 ld (hl),a
1321  8F22 2C           	inc l
1322  8F23 10 FC        	djnz 1B												; Limpia Tabla.
1323  8F25
1324  8F25 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1325  8F28 22 20 8C     	ld (India_SP),hl
1326  8F2B
1327  8F2B C9           	ret
1328  8F2C
1329  8F2C              ; --------------------------------------------------------------------------------------------------------------
1330  8F2C              ;
1331  8F2C              ;	31/3/24
1332  8F2C
1333  8F2C              Ordena_tabla_de_impresion
1334  8F2C
1335  8F2C              ; 5794 T/states.
1336  8F2C              ; 6278 T/states.
1337  8F2C              ; 5310 T/states.
1338  8F2C
1339  8F2C              ; Inicializamos punteros (India_SP) e (India_2_SP).
1340  8F2C              ; Inicializamos contador de comparaciones, [C].
1341  8F2C              ; Cargamos los registros A y B para efectuar comparación.
1342  8F2C
1343  8F2C FD 2E 00     	ld iyl,0
1344  8F2F
1345  8F2F 3A FB 8B     	ld a,(Entidades_en_curso)
1346  8F32 FE 04        	cp 4 	;	4
1347  8F34 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1348  8F35
1349  8F35 3D           	dec a
1350  8F36 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1351  8F37 51           	ld d,c 										; Copia de respaldo.
1352  8F38
1353  8F38 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1354  8F39
1355  8F39 21 03 89     	ld hl,Tabla_de_pintado+3
1356  8F3C 46           	ld b,(hl)
1357  8F3D 22 22 8C     	ld (India_2_SP),hl
1358  8F40
1359  8F40 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1360  8F41 DC 69 8F     	call c, Avanza_India_2_SP
1361  8F44 CC 69 8F     	call z, Avanza_India_2_SP
1362  8F47
1363  8F47 FD 2D        	dec iyl
1364  8F49 28 18        	jr z,2F
1365  8F4B
1366  8F4B
1367  8F4B              ; --------------------------------------------------------------------------------------------------------------
1368  8F4B              ;
1369  8F4B              ;	7/4/24
1370  8F4B
1371  8F4B              Trueque
1372  8F4B
1373  8F4B              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1374  8F4B              ;  			A contiene en nº de fila de (India_SP).
1375  8F4B              ;			HL contiene (India_2_SP).
1376  8F4B
1377  8F4B D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1378  8F4C E5           	push hl										; Preservo (India_2_SP).
1379  8F4D
1380  8F4D ED 5B 20 8C  	ld de,(India_SP)
1381  8F51 EB           	ex de,hl
1382  8F52 70           	ld (hl),b
1383  8F53 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1384  8F54
1385  8F54 CD 95 8F     	call Intercambia_1_byte
1386  8F57 CD 95 8F     	call Intercambia_1_byte
1387  8F5A
1388  8F5A
1389  8F5A              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1390  8F5A              ; Recuperamos (India_2_SP) en HL.
1391  8F5A
1392  8F5A 2A 20 8C     	ld hl,(India_SP)
1393  8F5D 7E           	ld a,(hl)
1394  8F5E
1395  8F5E E1           	pop hl
1396  8F5F D1           	pop de
1397  8F60
1398  8F60              ; --------------------------------------------------------------------------------------------------------------
1399  8F60
1400  8F60 CD 69 8F     	call Avanza_India_2_SP
1401  8F63
1402  8F63 14           2 inc d
1403  8F64 15           	dec d
1404  8F65 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1405  8F66 18 D8        	jr 1B
1406  8F68
1407  8F68 C9           	ret
1408  8F69
1409  8F69              ; ----- ----- ----- ----- -----
1410  8F69
1411  8F69              Avanza_India_2_SP
1412  8F69
1413  8F69 0D           	dec c
1414  8F6A 28 0A        	jr z,Avanza_punteros_indios
1415  8F6C
1416  8F6C FD 2C        	inc iyl
1417  8F6E
1418  8F6E 2C           	inc l
1419  8F6F 2C           	inc l
1420  8F70 2C           	inc l
1421  8F71
1422  8F71 46           	ld b,(hl)
1423  8F72 22 22 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1424  8F75
1425  8F75 C9           	ret
1426  8F76
1427  8F76              ; ----- ----- ----- ----- -----
1428  8F76
1429  8F76              Avanza_punteros_indios
1430  8F76
1431  8F76 15           	dec d
1432  8F77 28 15        	jr z,Prepara_salida
1433  8F79
1434  8F79 4A           	ld c,d
1435  8F7A
1436  8F7A 2A 20 8C     	ld hl,(India_SP)
1437  8F7D 2C           	inc l
1438  8F7E 2C           	inc l
1439  8F7F 2C           	inc l
1440  8F80 7E           	ld a,(hl)
1441  8F81 22 20 8C     	ld (India_SP),hl
1442  8F84
1443  8F84 2C           	inc l
1444  8F85 2C           	inc l
1445  8F86 2C           	inc l
1446  8F87 46           	ld b,(hl)
1447  8F88 22 22 8C     	ld (India_2_SP),hl
1448  8F8B
1449  8F8B FD 2C        	inc iyl
1450  8F8D
1451  8F8D C9           	ret
1452  8F8E
1453  8F8E              Prepara_salida
1454  8F8E
1455  8F8E 21 00 89     	ld hl,Tabla_de_pintado
1456  8F91 22 20 8C     	ld (India_SP),hl
1457  8F94 C9           	ret
1458  8F95
1459  8F95
1460  8F95 2C           Intercambia_1_byte inc l
1461  8F96 1C           	inc e
1462  8F97 46           	ld b,(hl)
1463  8F98 1A           	ld a,(de)
1464  8F99 EB           	ex de,hl
1465  8F9A 70           	ld (hl),b
1466  8F9B 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1467  8F9C C9           	ret
1468  8F9D
1469  8F9D              ; -----------------------------------------------------------------------------------
1470  8F9D              ;
1471  8F9D              ;	20/01/24
1472  8F9D              ;
1473  8F9D              ;
1474  8F9D
1475  8F9D              Construye_movimientos_masticados_entidad
1476  8F9D
1477  8F9D 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1478  8FA0 E5           	push hl
1479  8FA1 CD E4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1480  8FA4              ;															; _ el (Contador_de_mov_masticados).
1481  8FA4 CD AD 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1482  8FA7              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1483  8FA7 CD E4 99     	call Recompone_posicion_inicio
1484  8FAA
1485  8FAA CD 14 97     1 call Draw
1486  8FAD CD C9 8F     	call Guarda_movimiento_masticado
1487  8FB0
1488  8FB0 CD 91 9D     	call Movimiento
1489  8FB3
1490  8FB3 3A 24 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1491  8FB6 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1492  8FB8 28 F0        	jr z,1B
1493  8FBA
1494  8FBA              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1495  8FBA              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1496  8FBA
1497  8FBA E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1498  8FBB 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1499  8FBE
1500  8FBE              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1501  8FBE
1502  8FBE CD F5 9E     	call Situa_en_contador_general_de_mov_masticados
1503  8FC1
1504  8FC1              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1505  8FC1              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1506  8FC1
1507  8FC1 ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1508  8FC5
1509  8FC5 71           	ld (hl),c
1510  8FC6 23           	inc hl
1511  8FC7 70           	ld (hl),b
1512  8FC8
1513  8FC8 C9           	ret
1514  8FC9
1515  8FC9              ; -----------------------------------------------------------------------------------
1516  8FC9              ;
1517  8FC9              ;	28/12/23
1518  8FC9              ;
1519  8FC9              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1520  8FC9              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1521  8FC9
1522  8FC9              Guarda_movimiento_masticado
1523  8FC9
1524  8FC9 ED 73 00 8C  	ld (Stack),sp
1525  8FCD ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1526  8FD1
1527  8FD1 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1528  8FD3 FD E5            push iy 												; Pushea Puntero_objeto.
1529  8FD5
1530  8FD5 ED 7B 00 8C      ld sp,(Stack)
1531  8FD9
1532  8FD9 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1533  8FDC 23           	inc hl
1534  8FDD 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1535  8FE0
1536  8FE0 CD E4 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1537  8FE3              ;															; _ el (Contador_de_mov_masticados).
1538  8FE3 C9               ret
1539  8FE4
1540  8FE4              ; --------------------------------------------------------------------------------------------------------------
1541  8FE4              ;
1542  8FE4              ;	12/1/24
1543  8FE4              ;
1544  8FE4              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1545  8FE4
1546  8FE4              Actualiza_Puntero_de_almacen_de_mov_masticados
1547  8FE4
1548  8FE4 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1549  8FE7 01 04 00     	ld bc,4
1550  8FEA A7           	and a
1551  8FEB ED 4A        	adc hl,bc
1552  8FED 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1553  8FF0 C9           	ret
1554  8FF1
1555  8FF1              ; --------------------------------------------------------------------------------------------------------------
1556  8FF1              ;
1557  8FF1              ;	24/03/24
1558  8FF1              ;
1559  8FF1              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1560  8FF1              ;
1561  8FF1              ;	IX contiene el puntero de impresión.
1562  8FF1              ;	DE contiene (Puntero_objeto).
1563  8FF1
1564  8FF1
1565  8FF1              Cargamos_registros_con_mov_masticado
1566  8FF1
1567  8FF1 ED 73 00 8C  	ld (Stack),sp
1568  8FF5 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1569  8FF9
1570  8FF9 D1           	pop de 															; DE contiene Puntero_objeto
1571  8FFA DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1572  8FFC
1573  8FFC ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1574  9000 ED 7B 00 8C  	ld sp,(Stack)
1575  9004
1576  9004 7B           	ld a,e
1577  9005 82           	add d															; Comprueba si ya no hay datos en el almacén.
1578  9006
1579  9006 CC 9D 93     	call z,Reinicia_entidad_maliciosa
1580  9009
1581  9009 C9           	ret
1582  900A
1583  900A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1584  900A              ;
1585  900A              ;	22/7/24
1586  900A
1587  900A              Cargamos_registros_con_explosion
1588  900A
1589  900A
1590  900A 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1591  900D CD A7 90     	call Extrae_address
1592  9010
1593  9010 5D           	ld e,l
1594  9011 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1595  9012
1596  9012 DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1597  9016
1598  9016 C9           	ret
1599  9017
1600  9017
1601  9017              Cargamos_registros_con_explosion_Amadeus
1602  9017
1603  9017 2A 74 89     	ld hl,(Pamm_Amadeus)
1604  901A CD A7 90     	call Extrae_address
1605  901D
1606  901D 5D           	ld e,l
1607  901E 54           	ld d,h
1608  901F
1609  901F DD 2A 72 89  	ld ix,(p.imp.amadeus)
1610  9023
1611  9023 C9           	ret
1612  9024
1613  9024              ; --------------------------------------------------------------------------------------------------------------
1614  9024              ;
1615  9024              ;	17/06/24
1616  9024              ;
1617  9024              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1618  9024              ;
1619  9024              ;	IX contiene el puntero de impresión.
1620  9024              ;	DE contiene (Puntero_objeto).
1621  9024
1622  9024
1623  9024              Cargamos_registros_con_mov_masticado_Amadeus
1624  9024
1625  9024 ED 73 00 8C  	ld (Stack),sp
1626  9028 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1627  902C D1           	pop de 															; DE contiene Puntero_objeto
1628  902D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1629  902F DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1630  9033 ED 7B 00 8C  	ld sp,(Stack)
1631  9037 C9           	ret
1632  9038
1633  9038              ; ---------------------------------------------------------------------------------------------------------------------
1634  9038              ;
1635  9038              ;	18/6/24
1636  9038              ;
1637  9038              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1638  9038
1639  9038              Genera_datos_de_impresion_Amadeus
1640  9038
1641  9038 3A 71 89     	ld a,(Impacto_Amadeus)
1642  903B A7           	and a
1643  903C 20 03        	jr nz,1F
1644  903E
1645  903E              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1646  903E              ; _apuntando a la correspondiente explosión.
1647  903E
1648  903E CD 24 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1649  9041
1650  9041 DD 7D        1 ld a,ixl
1651  9043 E6 1F        	and $1f
1652  9045 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1653  9048
1654  9048 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1655  904B E5           	push hl
1656  904C
1657  904C 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1658  904F 22 1E 8C     	ld (Scanlines_album_SP),hl
1659  9052
1660  9052 CD F2 94     	call Genera_datos_de_impresion
1661  9055
1662  9055 E1           	pop hl
1663  9056 22 1E 8C     	ld (Scanlines_album_SP),hl
1664  9059
1665  9059 C9           	ret
1666  905A
1667  905A              ; ---------------------------------------------------------------------------------------------------------------------
1668  905A              ;
1669  905A              ;	13/03/24
1670  905A              ;
1671  905A              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1672  905A
1673  905A              Inicia_albumes_de_lineas
1674  905A
1675  905A 21 00 80     	ld hl,Scanlines_album
1676  905D 22 04 8C     	ld (Album_de_pintado),hl
1677  9060 22 1E 8C     	ld (Scanlines_album_SP),hl
1678  9063
1679  9063 21 1A 81     	ld hl,Scanlines_album_2
1680  9066 22 06 8C     	ld (Album_de_borrado),hl
1681  9069
1682  9069 C9           	ret
1683  906A
1684  906A              Inicia_albumes_de_lineas_Amadeus
1685  906A
1686  906A 21 34 82     	ld hl,Amadeus_scanlines_album
1687  906D 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1688  9070 21 58 82     	ld hl,Amadeus_scanlines_album_2
1689  9073 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1690  9076
1691  9076 C9           	ret
1692  9077
1693  9077              Inicia_albumes_de_disparos
1694  9077
1695  9077 21 7C 82     	ld hl,Disparos_scanlines_album
1696  907A 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1697  907D 21 B8 82     	ld hl,Disparos_scanlines_album_2
1698  9080 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1699  9083
1700  9083 21 7C 82     	ld hl,Disparos_scanlines_album
1701  9086 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1702  9089
1703  9089 C9           	ret
1704  908A
1705  908A              ; ---------------------------------------------------------------------------------------------------------------------
1706  908A              ;
1707  908A              ; 8/1/23
1708  908A              ;
1709  908A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1710  908A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1711  908A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1712  908A
1713  908A              ; Destruye HL y DE !!!!!
1714  908A
1715  908A              Inicia_punteros_de_cajas
1716  908A
1717  908A 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1718  908D CD A7 90         call Extrae_address
1719  9090 22 F3 8B         ld (Puntero_store_caja),hl
1720  9093 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1721  9096 22 F7 8B     	ld (Indice_restore_caja),hl
1722  9099 CD A7 90     	call Extrae_address
1723  909C 22 F5 8B     	ld (Puntero_restore_caja),hl
1724  909F C9               ret
1725  90A0
1726  90A0              ; *************************************************************************************************************************************************************
1727  90A0              ;
1728  90A0              ; 8/1/23
1729  90A0              ;
1730  90A0              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1731  90A0
1732  90A0 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1733  90A3 22 27 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1734  90A6 C9           	ret
1735  90A7
1736  90A7              ; *************************************************************************************************************************************************************
1737  90A7              ;
1738  90A7              ; 20/10/22
1739  90A7              ;
1740  90A7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1741  90A7              ;
1742  90A7              ; Destruye el puntero y DE !!!!!
1743  90A7
1744  90A7 5E           Extrae_address ld e,(hl)
1745  90A8 23           	inc hl
1746  90A9 56           	ld d,(hl)
1747  90AA 2B           	dec hl
1748  90AB EB           	ex de,hl
1749  90AC C9           	ret
1750  90AD
1751  90AD              ; *************************************************************************************************************************************************************
1752  90AD              ;
1753  90AD              ;	20/1/24
1754  90AD              ;
1755  90AD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1756  90AD              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1757  90AD              ;
1758  90AD              ;   Destruye HL y BC !!!!!,
1759  90AD              ;
1760  90AD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1761  90AD              ;					"0" ..... Izquierda.
1762  90AD
1763  90AD              Inicia_Puntero_objeto
1764  90AD
1765  90AD 3A D2 8B     	ld a,(Cuad_objeto)
1766  90B0 E6 01        	and 1
1767  90B2 F5           	push af
1768  90B3 CC CF 90     	call z,Inicia_puntero_objeto_izq
1769  90B6 F1           	pop af
1770  90B7 C8           	ret z
1771  90B8 CD BC 90     	call Inicia_puntero_objeto_der
1772  90BB C9           	ret
1773  90BC
1774  90BC              ; Arrancamos desde la parte izquierda de la pantalla.
1775  90BC              ; Iniciamos (Indice_Sprite_der).
1776  90BC
1777  90BC 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1778  90BF 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1779  90C2 CD A7 90     	call Extrae_address
1780  90C5 22 C5 8B     	ld (Puntero_objeto),hl
1781  90C8
1782  90C8 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1783  90CB 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1784  90CE C9           	ret
1785  90CF
1786  90CF              ; Arrancamos desde la parte derecha de la pantalla.
1787  90CF              ; Iniciamos (Indice_Sprite_izq).
1788  90CF
1789  90CF 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1790  90D2 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1791  90D5 CD A7 90     	call Extrae_address
1792  90D8 22 C5 8B     	ld (Puntero_objeto),hl
1793  90DB
1794  90DB 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1795  90DE 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1796  90E1 C9           	ret
1797  90E2
1798  90E2              ; **************************************************************************************************
1799  90E2              ;
1800  90E2              ;	06/07/24
1801  90E2              ;
1802  90E2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1803  90E2
1804  90E2              Restore_entidad
1805  90E2
1806  90E2 2A F3 8B     	ld hl,(Puntero_store_caja)
1807  90E5 7E           	ld a,(hl)
1808  90E6 A7           	and a
1809  90E7 CC F5 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1810  90EA 28 F6        	jr z,Restore_entidad
1811  90EC
1812  90EC 11 B3 8B     	ld de,Bandeja_DRAW
1813  90EF 01 0C 00     	ld bc,12
1814  90F2 ED B0        	ldir
1815  90F4 C9           	ret
1816  90F5
1817  90F5              ; **************************************************************************************************
1818  90F5              ;
1819  90F5              ;	08/05/23
1820  90F5              ;
1821  90F5              ;	Incrementamos los dos punteros de entidades. (+1).
1822  90F5
1823  90F5              Incrementa_punteros_de_cajas
1824  90F5
1825  90F5 2A F5 8B     	ld hl,(Puntero_restore_caja)
1826  90F8 22 F3 8B     	ld (Puntero_store_caja),hl
1827  90FB 2A F7 8B     	ld hl,(Indice_restore_caja)
1828  90FE 23           	inc hl
1829  90FF 23           	inc hl
1830  9100 22 F7 8B     	ld (Indice_restore_caja),hl
1831  9103 CD A7 90         call Extrae_address
1832  9106 22 F5 8B         ld (Puntero_restore_caja),hl
1833  9109 C9               ret
1834  910A
1835  910A              ; -----------------------------------------------------------
1836  910A
1837  910A              ; Teclado.
1838  910A
1839  910A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1840  910C DB FE        	in a,($fe)
1841  910E E6 01        	and $01
1842  9110 28 02        	jr z,1f
1843  9112 18 F6        	jr Pulsa_ENTER
1844  9114 C9           1 ret
1845  9115
1846  9115              ; **************************************************************************************************
1847  9115              ;
1848  9115              ; Temporización.
1849  9115
1850  9115              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1851  9115              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1852  9115              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1853  9115              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1854  9115
1855  9115              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1856  9115              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1857  9115              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1858  9115
1859  9115              ; A partir de $4f61 no hace falta DELAY.
1860  9115
1861  9115              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1862  9115
1863  9115              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1864  9115              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1865  9115              ;	LD A,B
1866  9115              ;	AND A
1867  9115              ;	JR NZ,wait
1868  9115              ;	RET
1869  9115
1870  9115              ; ---------------------------------------------------------------------------------------------------------------
1871  9115              ;
1872  9115              ;	13/07/24
1873  9115              ;
1874  9115
1875  9115              Inicia_Shield
1876  9115
1877  9115 21 48 8C     	ld hl,Datos_Shield
1878  9118 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1879  911B
1880  911B 7E           	ld a,(hl)
1881  911C 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1882  911F
1883  911F 3E 01        	ld a,1
1884  9121 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1885  9124
1886  9124 C9           	ret
1887  9125
1888  9125              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1889  9125              ;
1890  9125              ;	4/6/24
1891  9125              ;
1892  9125              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1893  9125              ;
1894  9125              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1895  9125              ;
1896  9125
1897  9125              Actualiza_pantalla
1898  9125
1899  9125 3E 02        	ld a,2
1900  9127 D3 FE        	out ($fe),a
1901  9129
1902  9129 3A 24 8C     	ld a,(Ctrl_3)
1903  912C CB 57        	bit 2,a
1904  912E 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1905  9130
1906  9130              Borrando_entidades
1907  9130
1908  9130 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1909  9133 CD A7 90     	call Extrae_address
1910  9136 24           	inc h
1911  9137 25           	dec h
1912  9138 28 05        	jr z,Pintando_entidades
1913  913A CD F1 95     	call Pinta_Sprites
1914  913D 18 F1        	jr Borrando_entidades
1915  913F
1916  913F              Pintando_entidades
1917  913F
1918  913F 2A 20 8C     	ld hl,(India_SP)
1919  9142 2C           	inc l
1920  9143 CD A7 90     	call Extrae_address
1921  9146 24           	inc h
1922  9147 25           	dec h
1923  9148 28 0E        	jr z,Ejecuta_escudo
1924  914A 1C           	inc e
1925  914B 1C           	inc e
1926  914C ED 53 20 8C  	ld (India_SP),de
1927  9150 CD A7 90     	call Extrae_address
1928  9153 CD F1 95     	call Pinta_Sprites
1929  9156 18 E7        	jr Pintando_entidades
1930  9158
1931  9158              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1932  9158
1933  9158              Ejecuta_escudo
1934  9158
1935  9158 3A 4E 8C     	ld a,(Shield)
1936  915B A7           	and a
1937  915C 20 2F        	jr nz,Aplica_Shield
1938  915E
1939  915E              Borrando_Amadeus
1940  915E
1941  915E 21 24 8C     	ld hl,Ctrl_3
1942  9161 CB 6E        	bit 5,(hl)
1943  9163 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1944  9165
1945  9165 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1946  9168 CD A7 90     	call Extrae_address
1947  916B 24           	inc h
1948  916C 25           	dec h
1949  916D 28 03        	jr z,Pintando_Amadeus
1950  916F CD F1 95     	call Pinta_Sprites
1951  9172
1952  9172              Pintando_Amadeus
1953  9172
1954  9172 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1955  9175 CD A7 90     	call Extrae_address
1956  9178 24           	inc h
1957  9179 25           	dec h
1958  917A 28 03        	jr z,1F
1959  917C CD F1 95     	call Pinta_Sprites
1960  917F
1961  917F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1962  917F
1963  917F 21 24 8C     1 ld hl,Ctrl_3
1964  9182 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1965  9184 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1966  9186 CB AE        	res 5,(hl)
1967  9188
1968  9188 3E 01        	ld a,1												; Borde azul.
1969  918A D3 FE        	out ($fe),a
1970  918C
1971  918C C9           	ret
1972  918D
1973  918D              Aplica_Shield
1974  918D
1975  918D              ;	Bit 1 "1" (Shield_3) Sólo borra.
1976  918D              ;		  "0"     ""     Borra/Pinta.
1977  918D              ;	Bit 2    ""  RET.	 No borra, no pinta.
1978  918D
1979  918D 21 50 8C     	ld hl,Shield_3
1980  9190
1981  9190 CB 5E        	bit 3,(hl)
1982  9192 20 DE        	jr nz,Pintando_Amadeus
1983  9194
1984  9194 CB 56        	bit 2,(hl)
1985  9196 20 E7        	jr nz,1B
1986  9198
1987  9198 CB 4E        	bit 1,(hl)
1988  919A C4 A1 91     	call nz,Borra_Amadeus_shield
1989  919D
1990  919D 28 BF        	jr z,Borrando_Amadeus
1991  919F 18 DE        	jr 1B
1992  91A1
1993  91A1              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1994  91A1
1995  91A1              Borra_Amadeus_shield
1996  91A1
1997  91A1 3A 24 8C     	ld a,(Ctrl_3)
1998  91A4 CB 6F        	bit 5,a
1999  91A6 28 08        	jr z,1F
2000  91A8
2001  91A8 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
2002  91AB CD A7 90     	call Extrae_address
2003  91AE 18 06        	jr 2F
2004  91B0
2005  91B0 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
2006  91B3 CD A7 90     	call Extrae_address
2007  91B6
2008  91B6 CD F1 95     2 call Pinta_Sprites
2009  91B9
2010  91B9 AF           	xor a
2011  91BA 3C           	inc a											; Asegura NZ en la salida de la rutina.
2012  91BB
2013  91BB C9           	ret
2014  91BC
2015  91BC              Pinta_Amadeus_shield
2016  91BC
2017  91BC 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2018  91BF CD A7 90     	call Extrae_address
2019  91C2 CD F1 95     	call Pinta_Sprites
2020  91C5
2021  91C5 AF           	xor a
2022  91C6 3C           	inc a											; Asegura NZ en la salida de la rutina.
2023  91C7
2024  91C7 C9           	ret
2025  91C8
2026  91C8              Borra_Pinta_Amadeus_shield
2027  91C8
2028  91C8 CD A1 91     	call Borra_Amadeus_shield
2029  91CB CD BC 91     	call Pinta_Amadeus_shield
2030  91CE C9           	ret
2031  91CF
2032  91CF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2033  91CF              ;
2034  91CF              ;	19/6/24
2035  91CF              ;
2036  91CF
2037  91CF              Teclado
2038  91CF
2039  91CF              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2040  91CF
2041  91CF 3E F7        	ld a,$f7												; "5" para disparar.
2042  91D1 DB FE        	in a,($fe)
2043  91D3 E6 10        	and $10
2044  91D5
2045  91D5 CC 07 A1     	call z,Genera_disparo_Amadeus
2046  91D8
2047  91D8 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2048  91DA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2049  91DC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2050  91DE CC 5E 9D         call z,Amadeus_a_izquierda
2051  91E1
2052  91E1 3E F7        	ld a,$f7
2053  91E3 DB FE        	in a,($fe)
2054  91E5 E6 01        	and $01
2055  91E7 C8           	ret z
2056  91E8
2057  91E8 3E F7        	ld a,$f7
2058  91EA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2059  91EC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2060  91EE CC 76 9D     	call z,Amadeus_a_derecha
2061  91F1
2062  91F1 C9           	ret
2063  91F2
2064  91F2              ; ------------------------------------------------------------------------------------------------------------------------
2065  91F2              ;
2066  91F2              ;	06/07/24
2067  91F2              ;
2068  91F2
2069  91F2              Genera_explosion
2070  91F2
2071  91F2 21 36 8C     	ld hl,Clock_explosion
2072  91F5 35           	dec (hl)
2073  91F6 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2074  91F8
2075  91F8              Borra_entidad_colisionada
2076  91F8
2077  91F8 CD 01 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2078  91FB CD 0A 90     	call Cargamos_registros_con_explosion
2079  91FE CD F2 94     	call Genera_datos_de_impresion
2080  9201
2081  9201 AF           	xor a
2082  9202 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2083  9203
2084  9203 C9           	ret
2085  9204
2086  9204              Siguiente_frame_explosion
2087  9204
2088  9204 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2089  9206
2090  9206              ; Avanza Frame de explosión.
2091  9206
2092  9206 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2093  9209 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2094  920C
2095  920C 79           	ld a,c
2096  920D 95           	sub l
2097  920E 20 0B        	jr nz,1F
2098  9210
2099  9210              ; Fín de la entidad !!!!!!!!!!!!!
2100  9210
2101  9210 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2102  9213 35           	dec (hl)
2103  9214 23           	inc hl
2104  9215 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2105  9216
2106  9216 CD 72 93     	call Limpiamos_bandeja_DRAW
2107  9219 18 DD        	jr Borra_entidad_colisionada
2108  921B
2109  921B 23           1 inc hl
2110  921C 23           	inc hl
2111  921D 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2112  9220 18 D6        	jr Borra_entidad_colisionada
2113  9222
2114  9222              ; ----- ----- ----- ----- -----
2115  9222
2116  9222              Genera_explosion_Amadeus
2117  9222
2118  9222 21 37 8C     	ld hl,Clock_explosion_Amadeus
2119  9225 35           	dec (hl)
2120  9226 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2121  9228
2122  9228              Borra_Amadeus_impactado
2123  9228
2124  9228 CD 78 8E     	call Change_Amadeus
2125  922B CD 17 90     	call Cargamos_registros_con_explosion_Amadeus
2126  922E CD 38 90     	call Genera_datos_de_impresion_Amadeus
2127  9231
2128  9231 21 24 8C     	ld hl,Ctrl_3
2129  9234 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2130  9236
2131  9236 AF           	xor a
2132  9237 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2133  9238
2134  9238 C9           	ret
2135  9239
2136  9239              Siguiente_frame_explosion_Amadeus
2137  9239
2138  9239 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2139  923B
2140  923B              ; Avanza Frame de explosión.
2141  923B
2142  923B 2A 74 89     	ld hl,(Pamm_Amadeus)
2143  923E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2144  9241
2145  9241 79           	ld a,c
2146  9242 95           	sub l
2147  9243 20 0B        	jr nz,1F
2148  9245
2149  9245              ; Fín de Amadeus !!!!!!!!!!!!!
2150  9245              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2151  9245
2152  9245 AF           	xor a
2153  9246 32 71 89     	ld (Impacto_Amadeus),a
2154  9249 21 24 8C     	ld hl,Ctrl_3
2155  924C CB F6        	set 6,(hl)
2156  924E
2157  924E 18 D8        	jr Borra_Amadeus_impactado
2158  9250
2159  9250 23           1 inc hl
2160  9251 23           	inc hl
2161  9252 22 74 89     	ld (Pamm_Amadeus),hl
2162  9255 18 D1        	jr Borra_Amadeus_impactado
2163  9257
2164  9257              ; ---------------------------------------------------------------
2165  9257
2166  9257              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9257              ; ******************************************************************************************************************************************************************************************
   2+ 9257              ;
   3+ 9257              ;   21/04/24
   4+ 9257              ;
   5+ 9257              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9257              ;   (XOR) bit a bit.
   7+ 9257              ;
   8+ 9257              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9257
  10+ 9257              Derivando_RND
  11+ 9257
  12+ 9257 21 F6 88         ld hl,Numeros_aleatorios
  13+ 925A
  14+ 925A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 925C C5               push bc
  16+ 925D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 925D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9260              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9260
  20+ 9260 A7           6 and a                                 ; Carry a "0".
  21+ 9261 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9263 30 02            jr nc,1F
  23+ 9265
  24+ 9265 CB C1            set 0,c
  25+ 9267
  26+ 9267 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9268 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 926A 5F               ld e,a
  29+ 926B
  30+ 926B 7A               ld a,d
  31+ 926C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 926E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9270
  34+ 9270 CB 3F            srl a
  35+ 9272
  36+ 9272 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9273
  38+ 9273 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9274 28 04            jr z,4F
  40+ 9276
  41+ 9276 CB FF            set 7,a
  42+ 9278 18 02            jr 5F
  43+ 927A
  44+ 927A CB BF        4 res 7,a
  45+ 927C
  46+ 927C CB 21        5 sla c
  47+ 927E 10 E0            djnz 6B
  48+ 9280
  49+ 9280 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9281
  51+ 9281 77               ld (hl),a
  52+ 9282 23               inc hl
  53+ 9283 C1               pop bc
  54+ 9284 10 D4            djnz 3B
  55+ 9286
  56+ 9286 C9               ret
  57+ 9287
  58+ 9287
  59+ 9287
# file closed: RND_Derivando.asm
2167  9287              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9287              ;---------------------------------------------------------------------------------------------------------------
   2+ 9287              ;
   3+ 9287              ;   8/3/24
   4+ 9287              ;
   5+ 9287              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9287              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9287              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9287              ;	_ de la 1ª entidad del Nivel.
   9+ 9287              ;
  10+ 9287              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9287
  12+ 9287              ;	MODIFICA: HL,DE y A.
  13+ 9287              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9287
  15+ 9287              Inicializa_Nivel
  16+ 9287
  17+ 9287 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 928A CD A7 90     	call Extrae_address
  19+ 928D 7E           	ld a,(hl)
  20+ 928E 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9291 23           	inc hl
  22+ 9292 CD 9F 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9295 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9298 CD A8 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 929B
  26+ 929B CD B9 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 929E C9           	ret
  28+ 929F
  29+ 929F              ; ----------------------
  30+ 929F
  31+ 929F 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A2 01 04 00     	ld bc,4
  33+ 92A5 ED B0        	ldir
  34+ 92A7 C9           	ret
  35+ 92A8
  36+ 92A8 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92A9 CD 43 94         call Calcula_salto_en_BC
  38+ 92AC 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92AF A7               and a
  40+ 92B0 ED 4A            adc hl,bc
  41+ 92B2 CD A7 90         call Extrae_address
  42+ 92B5 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92B8 C9               ret
  44+ 92B9
  45+ 92B9 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92BC CD 43 94     	call Calcula_salto_en_BC
  47+ 92BF 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C2 A7               and a
  49+ 92C3 ED 4A            adc hl,bc
  50+ 92C5 CD A7 90         call Extrae_address
  51+ 92C8 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92CB C9           	ret
  53+ 92CC
  54+ 92CC              ;---------------------------------------------------------------------------------------------------------------
  55+ 92CC              ;
  56+ 92CC              ;   5/1/24
  57+ 92CC              ;
  58+ 92CC              ;	Destruye A,BC,HL,DE
  59+ 92CC
  60+ 92CC              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92CC              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92CC
  63+ 92CC              Inicia_Entidades
  64+ 92CC
  65+ 92CC              ; Preparamos los punteros de las cajas de entidades:
  66+ 92CC
  67+ 92CC CD 8A 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92CF              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92CF CD 8B 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D2
  71+ 92D2 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92D5
  73+ 92D5 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92D8
  75+ 92D8 CD F1 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92DB
  77+ 92DB 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92DE
  79+ 92DE              ; En este punto:
  80+ 92DE              ;
  81+ 92DE              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92DE              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92DE
  84+ 92DE C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92DF
  86+ 92DF 7E           	ld a,(hl)
  87+ 92E0 CD 5D 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92E3
  89+ 92E3 CD 55 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92E6
  91+ 92E6              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92E6
  93+ 92E6 CD 13 94     	call Busca_mov_masticados_segun_tipo
  94+ 92E9
  95+ 92E9 A7           	and a
  96+ 92EA 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92EC
  98+ 92EC              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92EC
 100+ 92EC              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92EC              ;	_ de este tipo de entidad.
 102+ 92EC
 103+ 92EC CD F5 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92EF CD 02 9F     	call Transfiere_datos_de_contadores
 105+ 92F2
 106+ 92F2 18 06        	jr 4F
 107+ 92F4
 108+ 92F4 CD 9D 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92F7
 110+ 92F7              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92F7              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92F7              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92F7              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92F7              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92F7
 116+ 92F7 CD D1 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92FA              ;																; _ Mov_masticados ya generados.
 118+ 92FA
 119+ 92FA CD F1 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92FD
 121+ 92FD DD E5        	push ix
 122+ 92FF E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9300
 124+ 9300 D5           	push de
 125+ 9301 CD C6 94     	call Genera_coordenadas
 126+ 9304
 127+ 9304 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 128+ 9308 CD 01 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 930B D1           	pop de
 130+ 930C
 131+ 930C CD F2 94     	call Genera_datos_de_impresion
 132+ 930F              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 930F              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 930F              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 930F              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 930F
 137+ 930F CD 95 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9312
 139+ 9312              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9312
 141+ 9312 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 9316 CD 82 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9319
 144+ 9319 CD 72 93     	call Limpiamos_bandeja_DRAW
 145+ 931C CD F5 90     	call Incrementa_punteros_de_cajas
 146+ 931F
 147+ 931F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 931F              ; _ entidad del Nivel.
 149+ 931F
 150+ 931F 3A 25 8C     	ld a,(Ctrl_4)
 151+ 9322 E6 F0        	and $f0
 152+ 9324 32 25 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9327
 154+ 9327              ; Siguiente entidad del Nivel.
 155+ 9327
 156+ 9327 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 932A 23           	inc hl 														; _ entidad del Nivel.
 158+ 932B
 159+ 932B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 932C
 161+ 932C 10 A7        	djnz 2B
 162+ 932E
 163+ 932E C9           	ret
 164+ 932F
 165+ 932F              ; -------------------------------------------------------------------------------------------------------------------
 166+ 932F              ;
 167+ 932F              ;	27/5/24
 168+ 932F              ;
 169+ 932F              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 932F              ;
 171+ 932F
 172+ 932F              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 932F              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 932F
 175+ 932F 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9332 CD 55 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9335
 178+ 9335
 179+ 9335              Construye_movimientos_masticados_Amadeus
 180+ 9335
 181+ 9335 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9338 CD E4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 933B              ;															; _ el (Contador_de_mov_masticados).
 184+ 933B CD AD 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 933E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 933E
 187+ 933E              ; Generamos movimientos masticados de Amadeus.
 188+ 933E
 189+ 933E 06 79        	ld b,121												; $0079, 121d.
 190+ 9340
 191+ 9340 C5           1 push bc
 192+ 9341 CD 14 97     	call Draw
 193+ 9344 CD C9 8F     	call Guarda_movimiento_masticado
 194+ 9347
 195+ 9347 CD 88 9A     	call Mov_right
 196+ 934A CD 88 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 934D
 198+ 934D C1           	pop bc
 199+ 934E 10 F0        	djnz 1B
 200+ 9350
 201+ 9350              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9350
 203+ 9350              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9350              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9350
 206+ 9350 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9353 01 08 00     	ld bc,8
 208+ 9356 A7           	and a
 209+ 9357 ED 42        	sbc hl,bc
 210+ 9359 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 935C
 212+ 935C C9           	ret
 213+ 935D
 214+ 935D              ; ---------------------------------------------------------------------
 215+ 935D              ;
 216+ 935D              ;	10/02/24
 217+ 935D              ;
 218+ 935D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 935D              ;
 220+ 935D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 935D
 222+ 935D              Definicion_segun_tipo
 223+ 935D
 224+ 935D CD 43 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9360 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9363 CD 4B 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9366 C9           	ret
 228+ 9367
 229+ 9367              ; ---------------------------------------------------------------------
 230+ 9367              ;
 231+ 9367              ;	6/7/24
 232+ 9367
 233+ 9367
 234+ 9367              Store_Restore_cajas
 235+ 9367
 236+ 9367 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 936B CD 82 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 936E CD F5 90     	call Incrementa_punteros_de_cajas
 239+ 9371 C9           	ret
 240+ 9372
 241+ 9372              ; ---------------------------------------------------------------------
 242+ 9372              ;
 243+ 9372              ;	23/6/24
 244+ 9372              ;
 245+ 9372              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9372              ;
 247+ 9372              ;	MODIFY: HL
 248+ 9372
 249+ 9372              Limpiamos_bandeja_DRAW
 250+ 9372
 251+ 9372 ED 73 00 8C  	ld (Stack),sp
 252+ 9376 31 D8 8B     	ld sp,Vel_left
 253+ 9379
 254+ 9379 AF           	xor a
 255+ 937A 67           	ld h,a
 256+ 937B 6F           	ld l,a
 257+ 937C
 258+ 937C E5           	push hl
 259+ 937D E5           	push hl
 260+ 937E E5           	push hl
 261+ 937F E5           	push hl
 262+ 9380 E5           	push hl
 263+ 9381 E5           	push hl
 264+ 9382 E5           	push hl
 265+ 9383 E5           	push hl
 266+ 9384 E5           	push hl
 267+ 9385 E5           	push hl
 268+ 9386 E5           	push hl
 269+ 9387 E5           	push hl
 270+ 9388 E5           	push hl
 271+ 9389 E5           	push hl
 272+ 938A E5           	push hl
 273+ 938B E5           	push hl
 274+ 938C E5           	push hl
 275+ 938D E5           	push hl
 276+ 938E
 277+ 938E 33           	inc sp
 278+ 938F
 279+ 938F E5           	push hl
 280+ 9390 ED 7B 00 8C  	ld sp,(Stack)
 281+ 9394
 282+ 9394 C9           	ret
 283+ 9395
 284+ 9395              ; ---------------------------------------------------------------------
 285+ 9395              ;
 286+ 9395              ;	24/03/24
 287+ 9395
 288+ 9395 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9398 2B           	dec hl
 290+ 9399 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 939C C9           	ret
 292+ 939D
 293+ 939D              ; ---------------------------------------------------------------------
 294+ 939D              ;
 295+ 939D              ;	8/5/24
 296+ 939D
 297+ 939D              Reinicia_entidad_maliciosa
 298+ 939D
 299+ 939D              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 939D
 301+ 939D CD F5 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A0 CD 02 9F     	call Transfiere_datos_de_contadores
 303+ 93A3
 304+ 93A3              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93A3
 306+ 93A3 3A B3 8B     	ld a,(Tipo)
 307+ 93A6 CD 5D 93     	call Definicion_segun_tipo
 308+ 93A9
 309+ 93A9 E5           	push hl
 310+ 93AA DD E1        	pop ix
 311+ 93AC
 312+ 93AC DD 6E 0B     	ld l,(ix+11)
 313+ 93AF DD 66 0C     	ld h,(ix+12)
 314+ 93B2
 315+ 93B2 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93B5
 317+ 93B5 CD F1 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93B8
 319+ 93B8              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93B8              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93B8              ; Ejemplos.
 322+ 93B8
 323+ 93B8              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93B8              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93B8              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93B8              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93B8              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93B8
 329+ 93B8 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93BB CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93BD
 332+ 93BD 7E           	ld a,(hl)
 333+ 93BE CB 2F        	sra a
 334+ 93C0 CB 2F        	sra a
 335+ 93C2
 336+ 93C2 32 BE 8B     	ld (Velocidad),a
 337+ 93C5
 338+ 93C5 3E 40        	ld a,$40
 339+ 93C7 BE           	cp (hl)
 340+ 93C8 C0           	ret nz
 341+ 93C9
 342+ 93C9              ; Límitador.
 343+ 93C9
 344+ 93C9              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93C9
 346+ 93C9 CB 2E        	sra (hl)
 347+ 93CB 21 BE 8B     	ld hl,Velocidad
 348+ 93CE CB 2E        	sra (hl)
 349+ 93D0
 350+ 93D0 C9           	ret
 351+ 93D1
 352+ 93D1              ; ---------------------------------------------------------------------
 353+ 93D1              ;
 354+ 93D1              ;	22/01/24
 355+ 93D1
 356+ 93D1 21 25 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93D4 CB 46        	bit 0,(hl)
 358+ 93D6 20 0D        	jr nz,1F
 359+ 93D8 CB 4E        	bit 1,(hl)
 360+ 93DA 20 0C        	jr nz,2F
 361+ 93DC CB 56        	bit 2,(hl)
 362+ 93DE 20 0B        	jr nz,3F
 363+ 93E0 CB 5E        	bit 3,(hl)
 364+ 93E2 20 0A        	jr nz,4F
 365+ 93E4 C9           	ret
 366+ 93E5
 367+ 93E5 CB E6        1 set 4,(hl)
 368+ 93E7 C9           	ret
 369+ 93E8 CB EE        2 set 5,(hl)
 370+ 93EA C9           	ret
 371+ 93EB CB F6        3 set 6,(hl)
 372+ 93ED C9           	ret
 373+ 93EE CB FE        4 set 7,(hl)
 374+ 93F0 C9           	ret
 375+ 93F1
 376+ 93F1              ; ---------------------------------------------------------------------
 377+ 93F1              ;
 378+ 93F1              ;	23/01/24
 379+ 93F1              ;
 380+ 93F1              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F1              ;
 382+ 93F1              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F1              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F1              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F1              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F1
 387+ 93F1              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F1
 389+ 93F1 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F2 3D           	dec a
 391+ 93F3 20 06        	jr nz,1F
 392+ 93F5
 393+ 93F5              ; --- Tipo_1
 394+ 93F5
 395+ 93F5 21 25 8C     	ld hl,Ctrl_4
 396+ 93F8 CB C6        	set 0,(hl)
 397+ 93FA C9           	ret
 398+ 93FB
 399+ 93FB 3D           1 dec a
 400+ 93FC 20 06        	jr nz,2F
 401+ 93FE
 402+ 93FE              ; --- Tipo_2
 403+ 93FE
 404+ 93FE 21 25 8C     	ld hl,Ctrl_4
 405+ 9401 CB CE        	set 1,(hl)
 406+ 9403 C9           	ret
 407+ 9404
 408+ 9404 3D           2 dec a
 409+ 9405 20 06        	jr nz,3F
 410+ 9407
 411+ 9407              ; --- Tipo_3
 412+ 9407
 413+ 9407 21 25 8C     	ld hl,Ctrl_4
 414+ 940A CB D6        	set 2,(hl)
 415+ 940C C9           	ret
 416+ 940D
 417+ 940D              ; --- Tipo_3
 418+ 940D
 419+ 940D 21 25 8C     3 ld hl,Ctrl_4
 420+ 9410 CB D6        	set 2,(hl)
 421+ 9412 C9           	ret
 422+ 9413
 423+ 9413              ; ---------------------------------------------------------------------
 424+ 9413              ;
 425+ 9413              ;	22/01/24
 426+ 9413
 427+ 9413 21 25 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9416 CB 46        	bit 0,(hl)
 429+ 9418 20 0E        	jr nz,1F
 430+ 941A
 431+ 941A CB 4E        	bit 1,(hl)
 432+ 941C 20 10        	jr nz,2F
 433+ 941E
 434+ 941E CB 56        	bit 2,(hl)
 435+ 9420 20 12        	jr nz,3F
 436+ 9422
 437+ 9422 CB 5E        	bit 3,(hl)
 438+ 9424 20 14        	jr nz,4F
 439+ 9426 18 19        	jr 6F
 440+ 9428
 441+ 9428              ; Entidad_de_Tipo_1.
 442+ 9428
 443+ 9428 CB 66        1 bit 4,(hl)
 444+ 942A 28 15        	jr z,6F
 445+ 942C 18 10        	jr 5F
 446+ 942E
 447+ 942E              ; Entidad_de_Tipo_2.
 448+ 942E
 449+ 942E CB 6E        2 bit 5,(hl)
 450+ 9430 28 0F        	jr z,6F
 451+ 9432 18 0A        	jr 5F
 452+ 9434
 453+ 9434              ; Entidad_de_Tipo_3.
 454+ 9434
 455+ 9434 CB 76        3 bit 6,(hl)
 456+ 9436 28 09        	jr z,6F
 457+ 9438 18 04        	jr 5F
 458+ 943A
 459+ 943A              ; Entidad_de_Tipo_4.
 460+ 943A
 461+ 943A CB 7E        4 bit 7,(hl)
 462+ 943C 28 03        	jr z,6F
 463+ 943E
 464+ 943E              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 943E
 466+ 943E AF           5 xor a
 467+ 943F 3C           	inc a
 468+ 9440 C9           	ret
 469+ 9441
 470+ 9441              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9441
 472+ 9441 AF           6 xor a
 473+ 9442 C9           	ret
 474+ 9443
 475+ 9443              ;	------------------------------------------------------------------------------------
 476+ 9443              ;
 477+ 9443              ;	12/01/24
 478+ 9443              ;
 479+ 9443              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9443              ;
 481+ 9443              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9443              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9443
 484+ 9443 CB 27        Calcula_salto_en_BC sla a
 485+ 9445 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9447 4F           	ld c,a
 487+ 9448 06 00        	ld b,0
 488+ 944A C9           	ret
 489+ 944B
 490+ 944B              ; ------------------------------------------------------------------
 491+ 944B              ;
 492+ 944B              ;	19/1/24
 493+ 944B              ;
 494+ 944B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 944B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 944B
 497+ 944B A7           Situa_en_datos_de_definicion and a
 498+ 944C ED 4A        	adc hl,bc
 499+ 944E CD A7 90     	call Extrae_address
 500+ 9451 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 9454 C9           	ret
 502+ 9455
 503+ 9455              ; ------------------------------------------------------------------
 504+ 9455
 505+ 9455              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9455              ; 	inc de
 507+ 9455              ; 	inc de
 508+ 9455              ; 	ex de,hl
 509+ 9455              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9455              ; 	ret
 511+ 9455
 512+ 9455              ; ----------------------------------------------------------------------------------------------------------
 513+ 9455              ;
 514+ 9455              ;	24/6/24
 515+ 9455              ;
 516+ 9455              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9455              ;	_ de entidad.
 518+ 9455              ;
 519+ 9455              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9455              ;
 521+ 9455              ;
 522+ 9455              ;	MODIFICA: HL,DE y BC
 523+ 9455
 524+ 9455
 525+ 9455              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9455
 527+ 9455 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9458 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9459 12           	ld (de),a
 530+ 945A 23           	inc hl
 531+ 945B              ;
 532+ 945B 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 945E 01 02 00     	ld bc,2
 534+ 9461 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9463              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9463 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 9466 7E           	ld a,(hl)
 538+ 9467 12           	ld (de),a
 539+ 9468 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9469
 541+ 9469 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 946C 01 04 00     	ld bc,4
 543+ 946F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9471
 545+ 9471 11 D0 8B     	ld de,Posicion_inicio
 546+ 9474 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9477 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9479
 549+ 9479 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 947C 01 02 00     	ld bc,2
 551+ 947F ED B0        	ldir
 552+ 9481
 553+ 9481 C9           	ret
 554+ 9482
 555+ 9482              ; ----------------------------------------------------------------------------------------------------------
 556+ 9482              ;
 557+ 9482              ;	1/8/24
 558+ 9482              ;
 559+ 9482
 560+ 9482              Parametros_de_bandeja_DRAW_a_caja
 561+ 9482
 562+ 9482 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 9485 01 0C 00     	ld bc,12
 564+ 9488 ED B0        	ldir
 565+ 948A C9           	ret
 566+ 948B
 567+ 948B              ;---------------------------------------------------------------------------------------------------------------
 568+ 948B              ;
 569+ 948B              ;	5/1/24
 570+ 948B              ;
 571+ 948B              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 948B              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 948B              ;
 574+ 948B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 948B              ;
 576+ 948B              ;	(Numero_parcial_de_entidades)="7".
 577+ 948B              ;
 578+ 948B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 948B              ;
 580+ 948B              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 948B              ;
 582+ 948B              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 948B              ;	MODIFICA: A y B.
 584+ 948B              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 948B
 586+ 948B              Inicializa_Numero_parcial_de_entidades
 587+ 948B
 588+ 948B              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 948B
 590+ 948B 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 948E A7           	and a
 592+ 948F
 593+ 948F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 948F              ;	jr z,$
 595+ 948F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 948F
 597+ 948F 20 03        	jr nz,3F
 598+ 9491
 599+ 9491              ; ---------- ---------- ----------
 600+ 9491
 601+ 9491              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9491              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9491
 604+ 9491 CD 87 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9494
 606+ 9494              ; ---------- ---------- ----------
 607+ 9494
 608+ 9494 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9497 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9499 38 08        	jr c,1F
 611+ 949B
 612+ 949B              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 949B              ; Actualizamos variables.
 614+ 949B
 615+ 949B 3E 07        	ld a,7
 616+ 949D 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94A0 47           	ld b,a
 618+ 94A1 18 04        	jr 2F
 619+ 94A3
 620+ 94A3              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94A3              ; (Numero_de_entidades)="0".
 622+ 94A3
 623+ 94A3 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94A6 47           	ld b,a
 625+ 94A7 C9           2 ret
 626+ 94A8
# file closed: Rutinas_de_inicio_y_niveles.asm
2168  94A8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94A8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94A8              ;
   3+ 94A8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94A8              ;
   5+ 94A8              ; *****************************************************************************************************************************************************************************************
   6+ 94A8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94A8
   8+ 94A8 7C           calcula_tercio ld a,h
   9+ 94A9 E6 18        	and $18
  10+ 94AB CB 2F        	sra a
  11+ 94AD CB 2F        	sra a
  12+ 94AF CB 2F        	sra a
  13+ 94B1 C9           	ret
  14+ 94B2
# file closed: calcula_tercio.asm
2169  94B2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B2              ;
   3+ 94B2              ;
   4+ 94B2              ;	CLS.
   5+ 94B2              ;
   6+ 94B2              ;	Limpia la pantalla y define sus atributos.
   7+ 94B2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B2              ;
   9+ 94B2              ;	COLORES: 0 ..... NEGRO
  10+ 94B2              ;    		 1 ..... AZUL
  11+ 94B2              ; 			 2 ..... ROJO
  12+ 94B2              ;			 3 ..... MAGENTA
  13+ 94B2              ; 			 4 ..... VERDE
  14+ 94B2              ; 			 5 ..... CIAN
  15+ 94B2              ;			 6 ..... AMARILLO
  16+ 94B2              ; 			 7 ..... BLANCO
  17+ 94B2              ;
  18+ 94B2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B2              ;
  20+ 94B2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B2
  22+ 94B2
  23+ 94B2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94B5 11 01 40     	LD DE,$4001
  25+ 94B8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94BB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94BD ED B0        	LDIR
  28+ 94BF 01 FF 02     	LD BC,767
  29+ 94C2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94C3 ED B0        	LDIR
  31+ 94C5 C9           	ret
  32+ 94C6
# file closed: Cls.asm
2170  94C6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94C6              ; ------------------------------------------------------------------------
   2+ 94C6              ;
   3+ 94C6              ;	30/1/24
   4+ 94C6              ;
   5+ 94C6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94C6              ;	Fila superior "0", Columna izquierda "0".
   7+ 94C6              ;
   8+ 94C6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94C6              ;
  10+ 94C6              ;	Modifica: A,BC y DE.
  11+ 94C6
  12+ 94C6 7D           Genera_coordenadas ld a,l
  13+ 94C7 E6 1F        	and $1f
  14+ 94C9 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94CC
  16+ 94CC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94CD FE 40        	cp $40
  18+ 94CF 38 1C        	jr c,4F
  19+ 94D1
  20+ 94D1 CD A8 94     	call calcula_tercio
  21+ 94D4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94D5
  23+ 94D5 1E 00        	ld e,0
  24+ 94D7 7D           	ld a,l
  25+ 94D8 E6 E0        	and $e0
  26+ 94DA 28 01        	jr z,1F
  27+ 94DC 04           	inc b
  28+ 94DD
  29+ 94DD 04           1 inc b
  30+ 94DE 05           	dec b
  31+ 94DF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E1              ;														; _ , salimos.
  33+ 94E1 1C           3 inc e
  34+ 94E2 D6 20        	sub 32
  35+ 94E4 20 FB        	jr nz,3B
  36+ 94E6 10 F5        	djnz 1B
  37+ 94E8
  38+ 94E8 7B           2 ld a,e
  39+ 94E9 32 B5 8B     	ld (Coordenada_y),a
  40+ 94EC C9           	ret
  41+ 94ED
  42+ 94ED AF           4 xor a
  43+ 94EE 32 B5 8B     	ld (Coordenada_y),a
  44+ 94F1 C9           	ret
  45+ 94F2
# file closed: Genera_coordenadas.asm
2171  94F2              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F2              ;
   3+ 94F2              ;	20/09/24
   4+ 94F2              ;
   5+ 94F2              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F2              ;   DE contiene Puntero_objeto.
   7+ 94F2              ;   IX contiene el Puntero de impresión.
   8+ 94F2
   9+ 94F2              Genera_datos_de_impresion
  10+ 94F2
  11+ 94F2 ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94F6
  13+ 94F6 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94F9 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94FB
  16+ 94FB 2A 1E 8C         ld hl,(Scanlines_album_SP)
  17+ 94FE
  18+ 94FE 3E 05            ld a,5
  19+ 9500 85               add l
  20+ 9501 6F               ld l,a
  21+ 9502
  22+ 9502 F9               ld sp,hl
  23+ 9503 22 1E 8C         ld (Scanlines_album_SP),hl
  24+ 9506
  25+ 9506 21 00 00         ld hl,0
  26+ 9509
  27+ 9509 DD E5            push ix
  28+ 950B 3B               dec sp
  29+ 950C ED 7A            adc hl,sp
  30+ 950E D5               push de
  31+ 950F
  32+ 950F              ; Recuperamos SP.
  33+ 950F
  34+ 950F ED 7B 00 8C      ld sp,(Stack)
  35+ 9513
  36+ 9513 E5               push hl
  37+ 9514 F1               pop af
  38+ 9515 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9516
  40+ 9516              ; Tenemos el encabezado listo.
  41+ 9516              ; Preparamos registros para generar los scanlines.
  42+ 9516
  43+ 9516 DD E5            push ix
  44+ 9518 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9519
  46+ 9519 ED 5B 1E 8C      ld de,(Scanlines_album_SP)
  47+ 951D
  48+ 951D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 951D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 951D
  51+ 951D 7C               ld a,h
  52+ 951E FE 50            cp $50
  53+ 9520 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9522
  55+ 9522 20 05            jr nz,2F
  56+ 9524
  57+ 9524 7D               ld a,l
  58+ 9525 FE E0            cp $e0
  59+ 9527 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9529
  61+ 9529 7D           2 ld a,l
  62+ 952A FE C0            cp $c0
  63+ 952C D2 C8 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 952F
  65+ 952F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 952F
  67+ 952F CD C6 99         call NextScan
  68+ 9532 EB               ex de,hl
  69+ 9533
  70+ 9533 73               ld (hl),e
  71+ 9534 23               inc hl
  72+ 9535 72               ld (hl),d
  73+ 9536 23               inc hl
  74+ 9537
  75+ 9537 EB               ex de,hl
  76+ 9538
  77+ 9538 CD C6 99         call NextScan
  78+ 953B EB               ex de,hl
  79+ 953C
  80+ 953C 73               ld (hl),e
  81+ 953D 23               inc hl
  82+ 953E 72               ld (hl),d
  83+ 953F 23               inc hl
  84+ 9540
  85+ 9540 EB               ex de,hl
  86+ 9541
  87+ 9541 CD C6 99         call NextScan
  88+ 9544 EB               ex de,hl
  89+ 9545
  90+ 9545 73               ld (hl),e
  91+ 9546 23               inc hl
  92+ 9547 72               ld (hl),d
  93+ 9548 23               inc hl
  94+ 9549
  95+ 9549 EB               ex de,hl
  96+ 954A
  97+ 954A CD C6 99         call NextScan
  98+ 954D EB               ex de,hl
  99+ 954E
 100+ 954E 73               ld (hl),e
 101+ 954F 23               inc hl
 102+ 9550 72               ld (hl),d
 103+ 9551 23               inc hl
 104+ 9552
 105+ 9552 EB               ex de,hl
 106+ 9553
 107+ 9553 CD C6 99         call NextScan
 108+ 9556 EB               ex de,hl
 109+ 9557
 110+ 9557 73               ld (hl),e
 111+ 9558 23               inc hl
 112+ 9559 72               ld (hl),d
 113+ 955A 23               inc hl
 114+ 955B
 115+ 955B EB               ex de,hl
 116+ 955C
 117+ 955C CD C6 99         call NextScan
 118+ 955F EB               ex de,hl
 119+ 9560
 120+ 9560 73               ld (hl),e
 121+ 9561 23               inc hl
 122+ 9562 72               ld (hl),d
 123+ 9563 23               inc hl
 124+ 9564
 125+ 9564 EB               ex de,hl
 126+ 9565
 127+ 9565 CD C6 99         call NextScan
 128+ 9568 EB               ex de,hl
 129+ 9569
 130+ 9569 73               ld (hl),e
 131+ 956A 23               inc hl
 132+ 956B 72               ld (hl),d
 133+ 956C 23               inc hl
 134+ 956D
 135+ 956D EB               ex de,hl
 136+ 956E
 137+ 956E CD C6 99         call NextScan
 138+ 9571 EB               ex de,hl
 139+ 9572
 140+ 9572 73               ld (hl),e
 141+ 9573 23               inc hl
 142+ 9574 72               ld (hl),d
 143+ 9575 23               inc hl
 144+ 9576
 145+ 9576 EB               ex de,hl
 146+ 9577
 147+ 9577 CD C6 99         call NextScan
 148+ 957A EB               ex de,hl
 149+ 957B
 150+ 957B 73               ld (hl),e
 151+ 957C 23               inc hl
 152+ 957D 72               ld (hl),d
 153+ 957E 23               inc hl
 154+ 957F
 155+ 957F EB               ex de,hl
 156+ 9580
 157+ 9580 CD C6 99         call NextScan
 158+ 9583 EB               ex de,hl
 159+ 9584
 160+ 9584 73               ld (hl),e
 161+ 9585 23               inc hl
 162+ 9586 72               ld (hl),d
 163+ 9587 23               inc hl
 164+ 9588
 165+ 9588 EB               ex de,hl
 166+ 9589
 167+ 9589 CD C6 99         call NextScan
 168+ 958C EB               ex de,hl
 169+ 958D
 170+ 958D 73               ld (hl),e
 171+ 958E 23               inc hl
 172+ 958F 72               ld (hl),d
 173+ 9590 23               inc hl
 174+ 9591
 175+ 9591 EB               ex de,hl
 176+ 9592
 177+ 9592 CD C6 99         call NextScan
 178+ 9595 EB               ex de,hl
 179+ 9596
 180+ 9596 73               ld (hl),e
 181+ 9597 23               inc hl
 182+ 9598 72               ld (hl),d
 183+ 9599 23               inc hl
 184+ 959A
 185+ 959A EB               ex de,hl
 186+ 959B
 187+ 959B CD C6 99         call NextScan
 188+ 959E EB               ex de,hl
 189+ 959F
 190+ 959F 73               ld (hl),e
 191+ 95A0 23               inc hl
 192+ 95A1 72               ld (hl),d
 193+ 95A2 23               inc hl
 194+ 95A3
 195+ 95A3 EB               ex de,hl
 196+ 95A4
 197+ 95A4 CD C6 99         call NextScan
 198+ 95A7 EB               ex de,hl
 199+ 95A8
 200+ 95A8 73               ld (hl),e
 201+ 95A9 23               inc hl
 202+ 95AA 72               ld (hl),d
 203+ 95AB 23               inc hl
 204+ 95AC
 205+ 95AC EB               ex de,hl
 206+ 95AD
 207+ 95AD CD C6 99         call NextScan
 208+ 95B0 EB               ex de,hl
 209+ 95B1
 210+ 95B1              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95B1              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95B1              ;   _ generar sus scanlines.
 213+ 95B1
 214+ 95B1              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95B1
 216+ 95B1 73               ld (hl),e
 217+ 95B2 23               inc hl
 218+ 95B3 72               ld (hl),d
 219+ 95B4 23               inc hl
 220+ 95B5
 221+ 95B5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95B5
 223+ 95B5 22 1E 8C         ld (Scanlines_album_SP),hl
 224+ 95B8
 225+ 95B8 EB               ex de,hl
 226+ 95B9
 227+ 95B9              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95B9
 229+ 95B9 CD C6 99         call NextScan
 230+ 95BC CD C6 99         call NextScan
 231+ 95BF
 232+ 95BF 22 29 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95C2
 234+ 95C2              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95C2
 236+ 95C2 08               ex af,af
 237+ 95C3
 238+ 95C3 F5               push af
 239+ 95C4 E1               pop hl
 240+ 95C5
 241+ 95C5 36 10            ld (hl),16
 242+ 95C7
 243+ 95C7 C9               ret
 244+ 95C8
 245+ 95C8              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95C8
 247+ 95C8              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95C8
 249+ 95C8 3E 57            ld a,$57
 250+ 95CA 94               sub h
 251+ 95CB 47               ld b,a
 252+ 95CC
 253+ 95CC 3E DF            ld a,$df
 254+ 95CE BD               cp l
 255+ 95CF 38 04            jr c,1F
 256+ 95D1
 257+ 95D1 3E 08            ld a,8
 258+ 95D3 80               add b
 259+ 95D4 47               ld b,a
 260+ 95D5
 261+ 95D5              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95D5              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95D5
 264+ 95D5 48           1 ld c,b
 265+ 95D6 0C               inc c
 266+ 95D7
 267+ 95D7 04               inc b
 268+ 95D8 05               dec b
 269+ 95D9 20 02            jr nz,3F
 270+ 95DB
 271+ 95DB 18 0B            jr 6F
 272+ 95DD
 273+ 95DD CD C6 99     3 call NextScan
 274+ 95E0 EB               ex de,hl
 275+ 95E1
 276+ 95E1 73               ld (hl),e
 277+ 95E2 23               inc hl
 278+ 95E3 72               ld (hl),d
 279+ 95E4 23               inc hl
 280+ 95E5
 281+ 95E5 EB               ex de,hl
 282+ 95E6 10 F5            djnz 3B
 283+ 95E8
 284+ 95E8 ED 53 1E 8C  6 ld (Scanlines_album_SP),de
 285+ 95EC
 286+ 95EC 08           5 ex af,af
 287+ 95ED F5               push af
 288+ 95EE E1               pop hl
 289+ 95EF
 290+ 95EF 71               ld (hl),c
 291+ 95F0
 292+ 95F0 C9               ret
 293+ 95F1
# file closed: Genera_datos_de_impresion.asm
2172  95F1              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95F1              ; -----------------------------------------------------------------------------
   2+ 95F1              ;
   3+ 95F1              ;   11/03/24
   4+ 95F1              ;
   5+ 95F1
   6+ 95F1              Pinta_Sprites
   7+ 95F1
   8+ 95F1              ;    ld hl,(Scanlines_album_SP)
   9+ 95F1              ;    call Extrae_address
  10+ 95F1
  11+ 95F1              ;    inc h
  12+ 95F1              ;    dec h
  13+ 95F1              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95F1
  15+ 95F1 ED 73 00 8C      ld (Stack),sp
  16+ 95F5
  17+ 95F5 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F6              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F6 2C               inc l
  20+ 95F7 2C               inc l
  21+ 95F8
  22+ 95F8 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F9
  24+ 95F9 2C               inc l
  25+ 95FA F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95FB
  27+ 95FB              ;   Seleccionamos rutina de impresión:
  28+ 95FB
  29+ 95FB 3E 10            ld a,16
  30+ 95FD B8               cp b
  31+ 95FE C2 FA 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9601
  33+ 9601              ;   Rutinas:
  34+ 9601
  35+ 9601              Pinta_rapido    ;   1520 t/states.
  36+ 9601
  37+ 9601 E1               pop hl
  38+ 9602
  39+ 9602 1A               ld a,(de)
  40+ 9603 AE               xor (hl)
  41+ 9604 77               ld (hl),a
  42+ 9605 2C               inc l
  43+ 9606 1C               inc e
  44+ 9607 1A               ld a,(de)
  45+ 9608 AE               xor (hl)
  46+ 9609 77               ld (hl),a
  47+ 960A 2C               inc l
  48+ 960B 1C               inc e
  49+ 960C 1A               ld a,(de)
  50+ 960D AE               xor (hl)
  51+ 960E 77               ld (hl),a
  52+ 960F 13               inc de
  53+ 9610
  54+ 9610 E1               pop hl
  55+ 9611
  56+ 9611 1A               ld a,(de)
  57+ 9612 AE               xor (hl)
  58+ 9613 77               ld (hl),a
  59+ 9614 2C               inc l
  60+ 9615 1C               inc e
  61+ 9616 1A               ld a,(de)
  62+ 9617 AE               xor (hl)
  63+ 9618 77               ld (hl),a
  64+ 9619 2C               inc l
  65+ 961A 1C               inc e
  66+ 961B 1A               ld a,(de)
  67+ 961C AE               xor (hl)
  68+ 961D 77               ld (hl),a
  69+ 961E 13               inc de
  70+ 961F
  71+ 961F E1               pop hl
  72+ 9620
  73+ 9620 1A               ld a,(de)
  74+ 9621 AE               xor (hl)
  75+ 9622 77               ld (hl),a
  76+ 9623 2C               inc l
  77+ 9624 1C               inc e
  78+ 9625 1A               ld a,(de)
  79+ 9626 AE               xor (hl)
  80+ 9627 77               ld (hl),a
  81+ 9628 2C               inc l
  82+ 9629 1C               inc e
  83+ 962A 1A               ld a,(de)
  84+ 962B AE               xor (hl)
  85+ 962C 77               ld (hl),a
  86+ 962D 13               inc de
  87+ 962E
  88+ 962E E1               pop hl
  89+ 962F
  90+ 962F 1A               ld a,(de)
  91+ 9630 AE               xor (hl)
  92+ 9631 77               ld (hl),a
  93+ 9632 2C               inc l
  94+ 9633 1C               inc e
  95+ 9634 1A               ld a,(de)
  96+ 9635 AE               xor (hl)
  97+ 9636 77               ld (hl),a
  98+ 9637 2C               inc l
  99+ 9638 1C               inc e
 100+ 9639 1A               ld a,(de)
 101+ 963A AE               xor (hl)
 102+ 963B 77               ld (hl),a
 103+ 963C 13               inc de
 104+ 963D
 105+ 963D E1               pop hl
 106+ 963E
 107+ 963E 1A               ld a,(de)
 108+ 963F AE               xor (hl)
 109+ 9640 77               ld (hl),a
 110+ 9641 2C               inc l
 111+ 9642 1C               inc e
 112+ 9643 1A               ld a,(de)
 113+ 9644 AE               xor (hl)
 114+ 9645 77               ld (hl),a
 115+ 9646 2C               inc l
 116+ 9647 1C               inc e
 117+ 9648 1A               ld a,(de)
 118+ 9649 AE               xor (hl)
 119+ 964A 77               ld (hl),a
 120+ 964B 13               inc de
 121+ 964C
 122+ 964C E1               pop hl
 123+ 964D
 124+ 964D 1A               ld a,(de)
 125+ 964E AE               xor (hl)
 126+ 964F 77               ld (hl),a
 127+ 9650 2C               inc l
 128+ 9651 1C               inc e
 129+ 9652 1A               ld a,(de)
 130+ 9653 AE               xor (hl)
 131+ 9654 77               ld (hl),a
 132+ 9655 2C               inc l
 133+ 9656 1C               inc e
 134+ 9657 1A               ld a,(de)
 135+ 9658 AE               xor (hl)
 136+ 9659 77               ld (hl),a
 137+ 965A 13               inc de
 138+ 965B
 139+ 965B E1               pop hl
 140+ 965C
 141+ 965C 1A               ld a,(de)
 142+ 965D AE               xor (hl)
 143+ 965E 77               ld (hl),a
 144+ 965F 2C               inc l
 145+ 9660 1C               inc e
 146+ 9661 1A               ld a,(de)
 147+ 9662 AE               xor (hl)
 148+ 9663 77               ld (hl),a
 149+ 9664 2C               inc l
 150+ 9665 1C               inc e
 151+ 9666 1A               ld a,(de)
 152+ 9667 AE               xor (hl)
 153+ 9668 77               ld (hl),a
 154+ 9669 13               inc de
 155+ 966A
 156+ 966A E1               pop hl
 157+ 966B
 158+ 966B 1A               ld a,(de)
 159+ 966C AE               xor (hl)
 160+ 966D 77               ld (hl),a
 161+ 966E 2C               inc l
 162+ 966F 1C               inc e
 163+ 9670 1A               ld a,(de)
 164+ 9671 AE               xor (hl)
 165+ 9672 77               ld (hl),a
 166+ 9673 2C               inc l
 167+ 9674 1C               inc e
 168+ 9675 1A               ld a,(de)
 169+ 9676 AE               xor (hl)
 170+ 9677 77               ld (hl),a
 171+ 9678 13               inc de
 172+ 9679
 173+ 9679 E1               pop hl
 174+ 967A
 175+ 967A 1A               ld a,(de)
 176+ 967B AE               xor (hl)
 177+ 967C 77               ld (hl),a
 178+ 967D 2C               inc l
 179+ 967E 1C               inc e
 180+ 967F 1A               ld a,(de)
 181+ 9680 AE               xor (hl)
 182+ 9681 77               ld (hl),a
 183+ 9682 2C               inc l
 184+ 9683 1C               inc e
 185+ 9684 1A               ld a,(de)
 186+ 9685 AE               xor (hl)
 187+ 9686 77               ld (hl),a
 188+ 9687 13               inc de
 189+ 9688
 190+ 9688 E1               pop hl
 191+ 9689
 192+ 9689 1A               ld a,(de)
 193+ 968A AE               xor (hl)
 194+ 968B 77               ld (hl),a
 195+ 968C 2C               inc l
 196+ 968D 1C               inc e
 197+ 968E 1A               ld a,(de)
 198+ 968F AE               xor (hl)
 199+ 9690 77               ld (hl),a
 200+ 9691 2C               inc l
 201+ 9692 1C               inc e
 202+ 9693 1A               ld a,(de)
 203+ 9694 AE               xor (hl)
 204+ 9695 77               ld (hl),a
 205+ 9696 13               inc de
 206+ 9697
 207+ 9697 E1               pop hl
 208+ 9698
 209+ 9698 1A               ld a,(de)
 210+ 9699 AE               xor (hl)
 211+ 969A 77               ld (hl),a
 212+ 969B 2C               inc l
 213+ 969C 1C               inc e
 214+ 969D 1A               ld a,(de)
 215+ 969E AE               xor (hl)
 216+ 969F 77               ld (hl),a
 217+ 96A0 2C               inc l
 218+ 96A1 1C               inc e
 219+ 96A2 1A               ld a,(de)
 220+ 96A3 AE               xor (hl)
 221+ 96A4 77               ld (hl),a
 222+ 96A5 13               inc de
 223+ 96A6
 224+ 96A6 E1               pop hl
 225+ 96A7
 226+ 96A7 1A               ld a,(de)
 227+ 96A8 AE               xor (hl)
 228+ 96A9 77               ld (hl),a
 229+ 96AA 2C               inc l
 230+ 96AB 1C               inc e
 231+ 96AC 1A               ld a,(de)
 232+ 96AD AE               xor (hl)
 233+ 96AE 77               ld (hl),a
 234+ 96AF 2C               inc l
 235+ 96B0 1C               inc e
 236+ 96B1 1A               ld a,(de)
 237+ 96B2 AE               xor (hl)
 238+ 96B3 77               ld (hl),a
 239+ 96B4 13               inc de
 240+ 96B5
 241+ 96B5 E1               pop hl
 242+ 96B6
 243+ 96B6 1A               ld a,(de)
 244+ 96B7 AE               xor (hl)
 245+ 96B8 77               ld (hl),a
 246+ 96B9 2C               inc l
 247+ 96BA 1C               inc e
 248+ 96BB 1A               ld a,(de)
 249+ 96BC AE               xor (hl)
 250+ 96BD 77               ld (hl),a
 251+ 96BE 2C               inc l
 252+ 96BF 1C               inc e
 253+ 96C0 1A               ld a,(de)
 254+ 96C1 AE               xor (hl)
 255+ 96C2 77               ld (hl),a
 256+ 96C3 13               inc de
 257+ 96C4
 258+ 96C4 E1               pop hl
 259+ 96C5
 260+ 96C5 1A               ld a,(de)
 261+ 96C6 AE               xor (hl)
 262+ 96C7 77               ld (hl),a
 263+ 96C8 2C               inc l
 264+ 96C9 1C               inc e
 265+ 96CA 1A               ld a,(de)
 266+ 96CB AE               xor (hl)
 267+ 96CC 77               ld (hl),a
 268+ 96CD 2C               inc l
 269+ 96CE 1C               inc e
 270+ 96CF 1A               ld a,(de)
 271+ 96D0 AE               xor (hl)
 272+ 96D1 77               ld (hl),a
 273+ 96D2 13               inc de
 274+ 96D3
 275+ 96D3 E1               pop hl
 276+ 96D4
 277+ 96D4 1A               ld a,(de)
 278+ 96D5 AE               xor (hl)
 279+ 96D6 77               ld (hl),a
 280+ 96D7 2C               inc l
 281+ 96D8 1C               inc e
 282+ 96D9 1A               ld a,(de)
 283+ 96DA AE               xor (hl)
 284+ 96DB 77               ld (hl),a
 285+ 96DC 2C               inc l
 286+ 96DD 1C               inc e
 287+ 96DE 1A               ld a,(de)
 288+ 96DF AE               xor (hl)
 289+ 96E0 77               ld (hl),a
 290+ 96E1 13               inc de
 291+ 96E2
 292+ 96E2 E1               pop hl
 293+ 96E3
 294+ 96E3 1A               ld a,(de)
 295+ 96E4 AE               xor (hl)
 296+ 96E5 77               ld (hl),a
 297+ 96E6 2C               inc l
 298+ 96E7 1C               inc e
 299+ 96E8 1A               ld a,(de)
 300+ 96E9 AE               xor (hl)
 301+ 96EA 77               ld (hl),a
 302+ 96EB 2C               inc l
 303+ 96EC 1C               inc e
 304+ 96ED 1A               ld a,(de)
 305+ 96EE AE               xor (hl)
 306+ 96EF 77               ld (hl),a
 307+ 96F0 13               inc de
 308+ 96F1
 309+ 96F1 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 310+ 96F5 ED 7B 00 8C      ld sp,(Stack)
 311+ 96F9 C9               ret
 312+ 96FA
 313+ 96FA              Pinta_lento
 314+ 96FA
 315+ 96FA E1           1 pop hl
 316+ 96FB
 317+ 96FB 1A               ld a,(de)
 318+ 96FC AE               xor (hl)
 319+ 96FD 77               ld (hl),a
 320+ 96FE 2C               inc l
 321+ 96FF 1C               inc e
 322+ 9700 1A               ld a,(de)
 323+ 9701 AE               xor (hl)
 324+ 9702 77               ld (hl),a
 325+ 9703 2C               inc l
 326+ 9704 1C               inc e
 327+ 9705 1A               ld a,(de)
 328+ 9706 AE               xor (hl)
 329+ 9707 77               ld (hl),a
 330+ 9708 13               inc de
 331+ 9709
 332+ 9709 10 EF            djnz 1B
 333+ 970B
 334+ 970B ED 73 1E 8C      ld (Scanlines_album_SP),sp
 335+ 970F ED 7B 00 8C      ld sp,(Stack)
 336+ 9713 C9               ret
# file closed: Pinta_Sprites.asm
2173  9714              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9714              ; ******************************************************************************************************************************************************************************************
   2+ 9714              ;
   3+ 9714              ; 26/06/23
   4+ 9714              ;
   5+ 9714              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9714
   7+ 9714              Draw
   8+ 9714
   9+ 9714 CD BA 99     	call Prepara_draw
  10+ 9717 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9718 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9719 28 05        	jr z,2F
  13+ 971B
  14+ 971B 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 971E 18 0C        	jr 1F
  16+ 9720
  17+ 9720 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9723 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9726 CD B2 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9729              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9729
  22+ 9729 CD 59 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 972C
  24+ 972C 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 972F CB 6F        	bit 5,a
  26+ 9731 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9733
  28+ 9733 CD 48 97     	call Comprueba_limite_horizontal
  29+ 9736 CD D8 97     	call Comprueba_limite_vertical
  30+ 9739
  31+ 9739              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9739              ; -----------------------
  33+ 9739              ; -----------------------
  34+ 9739              ; -----------------------
  35+ 9739
  36+ 9739 CD 2E 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 973C CD 65 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 973F
  39+ 973F 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9742 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9744 32 C0 8B     	ld (Ctrl_0),a
  42+ 9747
  43+ 9747 C9           	ret
  44+ 9748
  45+ 9748              ; *******************************************************************************************************************************************************************************************
  46+ 9748              ;	21/01/23
  47+ 9748              ;
  48+ 9748              ; 	Comprueba_limite_horizontal.
  49+ 9748              ;
  50+ 9748              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9748              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9748              ;
  53+ 9748              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9748              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9748              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9748              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9748
  58+ 9748
  59+ 9748
  60+ 9748 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 974B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 974D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 974F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9751 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9754 18 09            jr 6F
  66+ 9756 CB 5F        1 bit 3,a
  67+ 9758 28 0A            jr z,2F
  68+ 975A E6 F7            and $f7
  69+ 975C 32 C0 8B         ld (Ctrl_0),a
  70+ 975F CD B2 98     6 call Inicializacion
  71+ 9762 18 5B            jr 5F
  72+ 9764 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9765
  74+ 9765              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9765              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9765
  77+ 9765 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9766 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9769 CD A8 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 976C 67           	ld h,a
  81+ 976D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 976E CD A8 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9771 67           	ld h,a
  84+ 9772 A7           	and a
  85+ 9773 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9775 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9776 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9779 FE 02        	cp 2
  89+ 977B 38 1E        	jr c,3F
  90+ 977D 28 1C        	jr z,3F
  91+ 977F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9780 28 23            jr z,7F
  93+ 9782 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9784 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9786 E1           	pop hl
  96+ 9787
  97+ 9787              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9787              ; _para indicar con E="2" en caso necesario.
  99+ 9787
 100+ 9787 E5               push hl
 101+ 9788 C5               push bc
 102+ 9789 CD A8 94     	call calcula_tercio
 103+ 978C FE 01        	cp 1
 104+ 978E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9790 CD C0 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9793 28 26            jr z,9F
 107+ 9795 38 24            jr c,9F
 108+ 9797 1E 00        11 ld e,0
 109+ 9799 18 22            jr 8F
 110+ 979B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 979C 28 07        	jr z, 7F
 112+ 979E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97A0 1E 00         	ld e,0
 114+ 97A2 E1           	pop hl
 115+ 97A3 18 04        	jr 4F
 116+ 97A5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97A7 18 15            jr 10F
 118+ 97A9
 119+ 97A9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A9              ; _para indicar con E="2" en caso necesario.
 121+ 97A9
 122+ 97A9 E5           4 push hl
 123+ 97AA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97AB CD A8 94     	call calcula_tercio
 125+ 97AE FE 01        	cp 1
 126+ 97B0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97B2 CD C0 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97B5 28 04            jr z,9F
 129+ 97B7 30 02            jr nc,9F
 130+ 97B9 18 02        	jr 8F
 131+ 97BB 1E 02        9 ld e,2
 132+ 97BD C1           8 pop bc
 133+ 97BE E1           10 pop hl
 134+ 97BF C9           5 ret
 135+ 97C0
 136+ 97C0              ; --------------------
 137+ 97C0              ;
 138+ 97C0              ; 25/08/22
 139+ 97C0
 140+ 97C0 CD A8 94     Comprueba_centro call calcula_tercio
 141+ 97C3 67               ld h,a
 142+ 97C4 08           	ex af,af
 143+ 97C5 FE 02        	cp 2
 144+ 97C7 38 07        	jr c,1F
 145+ 97C9 28 05        	jr z,1F
 146+ 97CB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97CE 18 03        	jr 2F
 148+ 97D0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97D3 08           2 ex af,af
 150+ 97D4 A7               and a
 151+ 97D5 ED 42            sbc hl,bc
 152+ 97D7 C9               ret
 153+ 97D8
 154+ 97D8              ; *********************************************************************************************************************************************************************************************
 155+ 97D8              ;
 156+ 97D8              ;   16/8/22
 157+ 97D8              ;
 158+ 97D8              ;	Comprueba_limite_vertical
 159+ 97D8              ;
 160+ 97D8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97D8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97D8              ;
 163+ 97D8
 164+ 97D8 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97DB 7D           	ld a,l
 166+ 97DC E6 1F        	and $1F
 167+ 97DE 57           	ld d,a
 168+ 97DF 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97E2 BA           	cp d 											; Límite - Posición.
 170+ 97E3 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97E4 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97E7 CB 47        	bit 0,a
 173+ 97E9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97EB
 175+ 97EB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97EB
 177+ 97EB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97EC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97EE
 180+ 97EE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97EE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97EE
 183+ 97EE 3A B4 8B         ld a,(Coordenada_X)
 184+ 97F1 16 0F            ld d,Centro_izquierda
 185+ 97F3 A7               and a
 186+ 97F4 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97F5 28 1E            jr z,3F
 188+ 97F7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F9              ;                                                    ; _salimos sin modificar nada.
 190+ 97F9 18 0E            jr 2F
 191+ 97FB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97FC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97FE
 194+ 97FE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97FE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97FE
 197+ 97FE 3A B4 8B         ld a,(Coordenada_X)
 198+ 9801 16 10            ld d,Centro_derecha
 199+ 9803 A7               and a
 200+ 9804 92               sub d
 201+ 9805 28 0E            jr z,3F
 202+ 9807 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9809              ;                                                    ; _salimos sin modificar nada.
 204+ 9809 CB 43        2 bit 0,e
 205+ 980B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 980D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 980E CD A2 98         call Modificaccionne
 208+ 9811 C1           	pop bc
 209+ 9812 CD B2 98         call Inicializacion
 210+ 9815 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9816
 212+ 9816              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9816
 214+ 9816 C5           4 push bc
 215+ 9817 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 981A 0A           	ld a,(bc)
 217+ 981B 3D           	dec a
 218+ 981C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 981D 7D           	ld a,l
 220+ 981E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 981F CB 47        	bit 0,a
 222+ 9821 28 03        	jr z,5F
 223+ 9823 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9824 18 2E        	jr 7F
 225+ 9826
 226+ 9826              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9826
 228+ 9826 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9827 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9828 3A C0 8B     	ld a,(Ctrl_0)
 231+ 982B CB 4F        	bit 1,a
 232+ 982D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 982F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9830
 235+ 9830              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9830
 237+ 9830 1C               inc e
 238+ 9831 1D               dec e
 239+ 9832 20 07            jr nz,12F
 240+ 9834 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9835 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9836 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9839 18 44        13 jr 9F
 244+ 983B CB 43        12 bit 0,e
 245+ 983D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 983F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 983F C1           	pop bc
 248+ 9840 18 D3        	jr 3B
 249+ 9842 80           14 add b
 250+ 9843 6F               ld l,a
 251+ 9844 22 C3 8B     	ld (Posicion_actual),hl
 252+ 9847 CD A2 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 984A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 984C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 984E 32 C0 8B         ld (Ctrl_0),a
 256+ 9851 F1           	pop af
 257+ 9852 18 2B        	jr 9F
 258+ 9854
 259+ 9854              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9854
 261+ 9854 F5           7 push af
 262+ 9855 3A C0 8B     	ld a,(Ctrl_0)
 263+ 9858 CB 47        	bit 0,a
 264+ 985A 20 1D        	jr nz,8F
 265+ 985C F1           	pop af
 266+ 985D
 267+ 985D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 985D
 269+ 985D 1C           	inc e
 270+ 985E 1D               dec e
 271+ 985F 20 07            jr nz,10F
 272+ 9861 90           	sub b
 273+ 9862 6F               ld l,a
 274+ 9863 22 C3 8B     	ld (Posicion_actual),hl
 275+ 9866 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9868              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9868 CB 43        10 bit 0,e
 278+ 986A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 986C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 986C C1           	pop bc
 281+ 986D 18 A6        	jr 3B
 282+ 986F 90           16 sub b
 283+ 9870 6F               ld l,a
 284+ 9871 22 C3 8B     	ld (Posicion_actual),hl
 285+ 9874 CD A2 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9877 18 06            jr 9F
 287+ 9879 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 987B 32 C0 8B         ld (Ctrl_0),a
 289+ 987E F1           	pop af
 290+ 987F C1           9 pop bc
 291+ 9880 1E 00        	ld e,0
 292+ 9882 CD B2 98         call Inicializacion
 293+ 9885 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9886 08           	ex af,af
 295+ 9887 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9888 18 8B            jr 3B
 297+ 988A
 298+ 988A              ; --------------------
 299+ 988A
 300+ 988A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 988C CD D5 99     1 call PreviousScan
 302+ 988F 10 FB            djnz 1B
 303+ 9891 22 C3 8B     	ld (Posicion_actual),hl
 304+ 9894 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9895 C9           	ret
 306+ 9896
 307+ 9896              ; --------------------
 308+ 9896
 309+ 9896 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9898 CD C6 99     1 call NextScan
 311+ 989B 10 FB            djnz 1B
 312+ 989D 22 C3 8B     	ld (Posicion_actual),hl
 313+ 98A0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98A1 C9           	ret
 315+ 98A2
 316+ 98A2              ; --------------------
 317+ 98A2              ;
 318+ 98A2              ;	22/01/23
 319+ 98A2              ;
 320+ 98A2              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98A2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98A2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98A2
 324+ 98A2
 325+ 98A2              Modificaccionne
 326+ 98A2
 327+ 98A2 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 98A5 FE 02        	cp 2
 329+ 98A7 CC 8A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98AA DC 8A 98         call c,Modifica_Pos_actual
 331+ 98AD C8           	ret z
 332+ 98AE CD 96 98         call Modifica_Pos_actual2
 333+ 98B1 C9               ret
 334+ 98B2
 335+ 98B2              ; *************************************************************************************************************************************************************************************************
 336+ 98B2              ;
 337+ 98B2              ;	13/8/22
 338+ 98B2              ;
 339+ 98B2              ;	Inicializacion
 340+ 98B2              ;
 341+ 98B2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98B2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98B2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98B2              ;
 345+ 98B2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98B2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98B2              ;	_ desaparece/aparece.
 348+ 98B2
 349+ 98B2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98B2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98B2              ;
 352+ 98B2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98B2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98B2              ; 		   [E] ="0"
 355+ 98B2
 356+ 98B2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98B2
 358+ 98B2 CD A8 94     Inicializacion call calcula_tercio
 359+ 98B5 28 36        	jr z,primit
 360+ 98B7 E6 02        	and 2
 361+ 98B9 20 07        	jr nz,segmit
 362+ 98BB 7D           	ld a,l
 363+ 98BC FE 7F        	cp $7f
 364+ 98BE 38 2D        	jr c,primit
 365+ 98C0 28 2B        	jr z,primit
 366+ 98C2 CD 28 99     segmit call column
 367+ 98C5 38 13        	jr c,tercuad
 368+ 98C7 3E 04        cuarcuad ld a,4
 369+ 98C9 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98CC 21 20 48     	ld hl,$4820
 371+ 98CF 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98D2 21 D6 8B     	ld hl,Limite_vertical
 373+ 98D5 36 0D        	ld (hl),$0d
 374+ 98D7 08           	ex af,af
 375+ 98D8 18 3C        	jr 1F
 376+ 98DA              tercuad
 377+ 98DA 3E 03        	ld a,3
 378+ 98DC 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98DF 21 20 48     	ld hl,$4820
 380+ 98E2 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98E5 21 D6 8B     	ld hl,Limite_vertical
 382+ 98E8 36 12        	ld (hl),$12
 383+ 98EA 08           	ex af,af
 384+ 98EB 18 29        	jr 1F
 385+ 98ED CD 28 99     primit call column
 386+ 98F0 38 13        	jr c, primcuad
 387+ 98F2              segcuad
 388+ 98F2 3E 02        	ld a,2
 389+ 98F4 32 D2 8B     	ld (Cuad_objeto),a
 390+ 98F7 21 C0 4F     	ld hl,$4fc0
 391+ 98FA 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 98FD 21 D6 8B     	ld hl,Limite_vertical
 393+ 9900 36 0D        	ld (hl),$0d
 394+ 9902 08           	ex af,af
 395+ 9903 18 11        	jr 1F
 396+ 9905              primcuad
 397+ 9905 3E 01        	ld a,1
 398+ 9907 32 D2 8B     	ld (Cuad_objeto),a
 399+ 990A 21 C0 4F     	ld hl,$4fc0
 400+ 990D 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 9910 21 D6 8B     	ld hl,Limite_vertical
 402+ 9913 36 12        	ld (hl),$12
 403+ 9915 08           	ex af,af
 404+ 9916
 405+ 9916 C5           1 push bc
 406+ 9917 E5           	push hl
 407+ 9918 D5           	push de
 408+ 9919
 409+ 9919 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 991C CD C6 94     	call Genera_coordenadas
 411+ 991F
 412+ 991F D1           	pop de
 413+ 9920 E1           	pop hl
 414+ 9921 C1           	pop bc
 415+ 9922
 416+ 9922 21 C0 8B     	ld hl,Ctrl_0
 417+ 9925 CB EE        	set 5,(hl)
 418+ 9927 C9           	ret
 419+ 9928
 420+ 9928              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9928
 422+ 9928              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9928              ;
 424+ 9928              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9928
 426+ 9928 7D           column ld a,l
 427+ 9929 E6 1F        	and $1f
 428+ 992B FE 10         	cp $10
 429+ 992D C9            	ret
 430+ 992E
 431+ 992E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 992E              ;
 433+ 992E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 992E              ;
 435+ 992E              ; 14/12/22
 436+ 992E              ;
 437+ 992E              ;	Modifica: A y BC.
 438+ 992E
 439+ 992E 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9931 E6 01        	and 1
 441+ 9933 28 17        	jr z,1F
 442+ 9935
 443+ 9935              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9935
 445+ 9935 3A B4 8B     	ld a,(Coordenada_X)
 446+ 9938 47           	ld b,a
 447+ 9939 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 993A 79           	ld a,c
 449+ 993B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 993C 38 08        	jr c,2F
 451+ 993E 47           	ld b,a
 452+ 993F 79           	ld a,c
 453+ 9940 90           	sub b
 454+ 9941 32 D3 8B     	ld (Columnas),a
 455+ 9944 18 1B        	jr 4F
 456+ 9946 79           2 ld a,c
 457+ 9947 32 D3 8B     	ld (Columnas),a
 458+ 994A 18 15        	jr 4F
 459+ 994C
 460+ 994C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 994C
 462+ 994C 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 994F 81           	add c
 464+ 9950 3D           	dec a
 465+ 9951 D6 1F        	sub $1f
 466+ 9953 38 08        	jr c,3F
 467+ 9955 47           	ld b,a
 468+ 9956 79           	ld a,c
 469+ 9957 90           	sub b
 470+ 9958 32 D3 8B     	ld (Columnas),a
 471+ 995B 18 04        	jr 4F
 472+ 995D 79           3 ld a,c
 473+ 995E 32 D3 8B     	ld (Columnas),a
 474+ 9961 D9           4 exx
 475+ 9962 4F           	ld c,a
 476+ 9963 D9           	exx
 477+ 9964 C9            ret
 478+ 9965
 479+ 9965              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9965              ;
 481+ 9965              ;   19/7/23
 482+ 9965              ;
 483+ 9965              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9965              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9965              ;
 486+ 9965              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9965              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9965              ;
 489+ 9965              ;	DESTRUYE: HL,B Y A.
 490+ 9965
 491+ 9965 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9968 FE 02        	cp 2
 493+ 996A 38 18        	jr c,1F
 494+ 996C 28 16        	jr z,1F
 495+ 996E E6 01        	and 1
 496+ 9970 28 0D        	jr z,3F
 497+ 9972
 498+ 9972              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9972
 500+ 9972 CD AE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9975
 502+ 9975 7D           9 ld a,l
 503+ 9976 E6 1F        	and $1f
 504+ 9978 28 2A        	jr z,7F
 505+ 997A 2B           	dec hl
 506+ 997B 10 F8        	djnz 9B
 507+ 997D 18 25        	jr 7F
 508+ 997F
 509+ 997F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 997F
 511+ 997F 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 9982 18 20        	jr 7F
 513+ 9984
 514+ 9984 28 14        1 jr z,2F
 515+ 9986
 516+ 9986              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9986
 518+ 9986 CD AE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9989
 520+ 9989 7D           4 ld a,l
 521+ 998A E6 1F        	and $1f
 522+ 998C 28 03        	jr z,6F
 523+ 998E 2B           	dec hl
 524+ 998F 10 F8        	djnz 4B
 525+ 9991 06 0F        6 ld b,15
 526+ 9993 CD D5 99     5 call PreviousScan
 527+ 9996 10 FB        	djnz 5B
 528+ 9998 18 0A        	jr 7F
 529+ 999A
 530+ 999A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 999A
 532+ 999A CD AE 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 999D 06 0F        	ld b,15
 534+ 999F CD D5 99     8 call PreviousScan
 535+ 99A2 10 FB        	djnz 8B
 536+ 99A4
 537+ 99A4 E5           7 push hl
 538+ 99A5 DD E1        	pop ix
 539+ 99A7
 540+ 99A7 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 99AA E5           	push hl
 542+ 99AB FD E1        	pop iy
 543+ 99AD
 544+ 99AD C9           	ret
 545+ 99AE
 546+ 99AE              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99AE              ;
 548+ 99AE              ;	2/1/23
 549+ 99AE              ;
 550+ 99AE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99AE              ;
 552+ 99AE              ;	Tras esta rutina tenemos:
 553+ 99AE              ;
 554+ 99AE              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99AE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99AE              ;
 557+ 99AE              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99AE
 559+ 99AE 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 99B1 3A D3 8B     	ld a,(Columnas)
 561+ 99B4 3D           	dec a
 562+ 99B5 20 01        	jr nz,1F
 563+ 99B7 3C           	inc a
 564+ 99B8 47           1 ld b,a
 565+ 99B9 C9           	ret
 566+ 99BA
 567+ 99BA              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99BA              ;
 569+ 99BA              ;	Prepara_draw
 570+ 99BA              ;
 571+ 99BA              ;	Es una rutina de carga.
 572+ 99BA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99BA              ;
 574+ 99BA              ;	FUNCIONAMIENTO:
 575+ 99BA              ;
 576+ 99BA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99BA              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99BA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99BA              ;
 580+ 99BA              ;	DESTRUYE:
 581+ 99BA              ;
 582+ 99BA              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99BA
 584+ 99BA 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99BD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99BE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99BF 4E           	ld c,(hl)
 588+ 99C0 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99C3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99C5 C9           	ret
 591+ 99C6
 592+ 99C6              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C6              ;
 594+ 99C6              ;	5/08/22
 595+ 99C6              ;
 596+ 99C6              ;   NextScan.
 597+ 99C6              ;
 598+ 99C6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C6              ;
 600+ 99C6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C6              ;
 602+ 99C6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C6              ;
 604+ 99C6              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C6              ;
 606+ 99C6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C6              ;
 608+ 99C6
 609+ 99C6 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99C7 7C               ld a,h
 611+ 99C8 E6 07            and 7
 612+ 99CA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99CB
 614+ 99CB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99CC C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99CE 6F               ld l,a
 617+ 99CF D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99D0
 619+ 99D0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99D1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99D3 67               ld h,a
 622+ 99D4 C9               ret
 623+ 99D5
 624+ 99D5              ;----------------------------------------------------------------------------------------------------------------
 625+ 99D5              ;
 626+ 99D5              ;	5/08/22
 627+ 99D5              ;
 628+ 99D5              ;   PreviousScan.
 629+ 99D5              ;
 630+ 99D5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99D5              ;
 632+ 99D5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99D5              ;
 634+ 99D5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99D5              ;
 636+ 99D5              ;       DESTRUIDOS: AF y HL !!!
 637+ 99D5              ;
 638+ 99D5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99D5              ;
 640+ 99D5
 641+ 99D5 7C           PreviousScan ld a,h
 642+ 99D6 25               dec h               ; Dec H.
 643+ 99D7 E6 07            and 7
 644+ 99D9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99DA
 646+ 99DA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99DB D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99DD 6F               ld l,a
 649+ 99DE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99DF
 651+ 99DF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99E0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99E2 67               ld h,a
 654+ 99E3 C9               ret
 655+ 99E4
 656+ 99E4
 657+ 99E4
 658+ 99E4
 659+ 99E4
 660+ 99E4
 661+ 99E4
 662+ 99E4
 663+ 99E4
 664+ 99E4
 665+ 99E4
 666+ 99E4
# file closed: Draw_XOR.asm
2174  99E4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E4
   2+ 99E4              ; ******************************************************************************************************************************************************************************************
   3+ 99E4              ;
   4+ 99E4              ;   20/05/23
   5+ 99E4              ;
   6+ 99E4              ;	Recompone_posicion_inicio
   7+ 99E4              ;
   8+ 99E4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99E4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99E4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99E4              ;	_ a una u otra rutina.
  12+ 99E4
  13+ 99E4              Recompone_posicion_inicio
  14+ 99E4
  15+ 99E4 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99E7 7D           	ld a,l
  17+ 99E8 E6 1F        	and $1f
  18+ 99EA 28 16        	jr z,1F
  19+ 99EC
  20+ 99EC FE 1F        	cp $1f
  21+ 99EE 28 0D        	jr z,3F
  22+ 99F0
  23+ 99F0 21 BF 8B     	ld hl,Ctrl_2
  24+ 99F3 CB C6        	set 0,(hl)
  25+ 99F5 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 99F8 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 99FB 18 08        	jr 2F
  28+ 99FD
  29+ 99FD CD AB 9B     3 call Mov_left
  30+ 9A00 18 03        	jr 2F
  31+ 9A02
  32+ 9A02 CD 88 9A     1 call Mov_right
  33+ 9A05 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A08 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 9A0B C9           	ret
  36+ 9A0C
  37+ 9A0C              ; ******************************************************************************************************************************************************************************************
  38+ 9A0C              ;
  39+ 9A0C              ;   27/05/23
  40+ 9A0C              ;
  41+ 9A0C              ;	Mov_down
  42+ 9A0C              ;
  43+ 9A0C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A0C              ;
  45+ 9A0C              ;
  46+ 9A0C              Mov_down
  47+ 9A0C
  48+ 9A0C CD 76 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A0F              ;																	; _ repone (Puntero_objeto).
  50+ 9A0F 21 C0 8B     	ld hl,Ctrl_0
  51+ 9A12 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A14              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A14              ; 																	; _ en el caso de que no lo haya.
  54+ 9A14 3A DB 8B     	ld a,(Vel_down)
  55+ 9A17 47           	ld b,a
  56+ 9A18 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A1B CD A8 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A1E E6 02        	and 2
  59+ 9A20 28 17        	jr z,1F
  60+ 9A22
  61+ 9A22              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A22              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A22
  64+ 9A22 7C           	ld a,h
  65+ 9A23 FE 57        	cp $57
  66+ 9A25 20 12        	jr nz,1F
  67+ 9A27
  68+ 9A27 7D           	ld a,l
  69+ 9A28 C6 20        	add $20
  70+ 9A2A 30 0D        	jr nc,1F
  71+ 9A2C
  72+ 9A2C              ; ------------------------------
  73+ 9A2C              ;
  74+ 9A2C              ;	12/01/24
  75+ 9A2C
  76+ 9A2C              ;	call Reaparece_arriba
  77+ 9A2C CD 38 9D     	call Reinicio
  78+ 9A2F
  79+ 9A2F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A2F
  81+ 9A2F 3A 24 8C     	ld a,(Ctrl_3)
  82+ 9A32 CB CF        	set 1,a
  83+ 9A34 32 24 8C     	ld (Ctrl_3),a
  84+ 9A37
  85+ 9A37 18 08        	jr 3F
  86+ 9A39              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A39              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A39              ; ------------------------------
  89+ 9A39
  90+ 9A39 CD C6 99     1 call NextScan
  91+ 9A3C 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A3F 10 DA            djnz 2B
  93+ 9A41 CD C6 94     3 call Genera_coordenadas
  94+ 9A44 C9           	ret
  95+ 9A45
  96+ 9A45              ; ******************************************************************************************************************************************************************************************
  97+ 9A45              ;
  98+ 9A45              ;   27/05/23
  99+ 9A45              ;
 100+ 9A45              ;	Mov_up
 101+ 9A45              ;
 102+ 9A45              ; 	Mueve el Sprite hacia arriba.
 103+ 9A45              ;
 104+ 9A45              ;
 105+ 9A45              Mov_up
 106+ 9A45
 107+ 9A45 CD 76 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A48              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A48 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A4B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A4D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A4D              ; 																		; _ en el caso de que no lo haya.
 113+ 9A4D 3A DA 8B     	ld a,(Vel_up)
 114+ 9A50 47           	ld b,a
 115+ 9A51 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A54 CD A8 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A57 A7           	and a
 118+ 9A58 20 10        	jr nz,1F
 119+ 9A5A
 120+ 9A5A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A5A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A5A
 123+ 9A5A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A5B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A5D 20 0B            jr nz,1F
 126+ 9A5F 7D               ld a,l
 127+ 9A60 D6 20            sub $20
 128+ 9A62 30 06            jr nc,1F
 129+ 9A64 25               dec h
 130+ 9A65
 131+ 9A65              ; -----------------------------
 132+ 9A65 CD 19 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A68              ;	call Reinicio
 134+ 9A68              ; -----------------------------
 135+ 9A68
 136+ 9A68 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A6A CD D5 99     1 call PreviousScan
 138+ 9A6D 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A70 10 E2            djnz 3B
 140+ 9A72 CD C6 94     2 call Genera_coordenadas
 141+ 9A75 C9           	ret
 142+ 9A76
 143+ 9A76              ; -----------------------------
 144+ 9A76              ;
 145+ 9A76              ;	27/5/23
 146+ 9A76              ;
 147+ 9A76              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A76              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A76              ;
 150+ 9A76              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A76              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A76              ;
 153+ 9A76              ;	Modifica: A y (Puntero_objeto).
 154+ 9A76
 155+ 9A76 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A79 CB 47        	bit 0,a
 157+ 9A7B C8           	ret z
 158+ 9A7C CB 87        	res 0,a
 159+ 9A7E 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A81 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A84 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A87 C9           	ret
 163+ 9A88
 164+ 9A88              ; ******************************************************************************************************************************************************************************************
 165+ 9A88              ;
 166+ 9A88              ;	19/10/22
 167+ 9A88              ;
 168+ 9A88              ;	Mov_right.
 169+ 9A88              ;
 170+ 9A88              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A88              ;
 172+ 9A88
 173+ 9A88 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A8B CB 77        	bit 6,a
 175+ 9A8D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A8F
 177+ 9A8F CD C7 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A92 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A93
 180+ 9A93 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A96 CB E6        	set 4,(hl)
 182+ 9A98 18 52        	jr 8F
 183+ 9A9A
 184+ 9A9A 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9A9D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A9F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A9F              ; 																	; _ en el caso de que no lo haya.
 188+ 9A9F 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AA2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AA4 20 46        	jr nz,8F
 191+ 9AA6
 192+ 9AA6 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AAA 28 40        	jr z,8F
 195+ 9AAC
 196+ 9AAC              ; ---------- ---------- ----------
 197+ 9AAC              ;
 198+ 9AAC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AAC
 200+ 9AAC 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AAF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AB1 28 11        	jr z,1F
 203+ 9AB3 38 06        	jr c,6F
 204+ 9AB5 FE 04        	cp 4
 205+ 9AB7 28 14        	jr z,7F
 206+ 9AB9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ABB
 208+ 9ABB              ; ---------- ---------- ----------
 209+ 9ABB              ;
 210+ 9ABB              ; Perfiles de velocidad
 211+ 9ABB              ;
 212+ 9ABB
 213+ 9ABB 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ABE FE FE        	cp $fe
 215+ 9AC0 20 2A        	jr nz,8F
 216+ 9AC2 18 10        	jr 3F
 217+ 9AC4 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AC7 FE FD        	cp $fd
 219+ 9AC9 20 21        	jr nz,8F
 220+ 9ACB 18 07        	jr 3F
 221+ 9ACD 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AD0 FE FB        	cp $fb
 223+ 9AD2 20 18        	jr nz,8F
 224+ 9AD4
 225+ 9AD4              ; ---------- ---------- ----------
 226+ 9AD4
 227+ 9AD4              3
 228+ 9AD4 CD 07 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AD7              ;	call Reinicio
 230+ 9AD7
 231+ 9AD7              ; ---------- ---------- ----------
 232+ 9AD7              ;
 233+ 9AD7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AD7
 235+ 9AD7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ADA CD F3 9A     	call DESPLZ_DER
 238+ 9ADD C1           	pop bc
 239+ 9ADE 10 F9        	djnz 5B
 240+ 9AE0 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AE3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AE4 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9AE7 CD C6 94     	call Genera_coordenadas
 244+ 9AEA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AEC
 246+ 9AEC              ; ---------- ---------- ----------
 247+ 9AEC
 248+ 9AEC 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AEF CD F3 9A     	call DESPLZ_DER
 250+ 9AF2 C9           2 ret
 251+ 9AF3
 252+ 9AF3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AF3              ;
 254+ 9AF3              ;	22/9/22
 255+ 9AF3              ;
 256+ 9AF3
 257+ 9AF3 CD 02 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AF6 CD 4E 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF9 CD 77 9B         call Ciclo_completo
 260+ 9AFC 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AFF CB FE        	set 7,(hl)
 262+ 9B01 C9           	ret
 263+ 9B02
 264+ 9B02              ; ******************************************************************************************************************************************************************************************
 265+ 9B02              ;	15/02/23
 266+ 9B02              ;
 267+ 9B02
 268+ 9B02 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B05 47           	ld b,a
 270+ 9B06 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B09 23           1 inc hl
 272+ 9B0A 23           	inc hl
 273+ 9B0B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B0D 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B10 CD A7 90     	call Extrae_address
 276+ 9B13 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9B16
 278+ 9B16              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B16
 280+ 9B16              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B16              ; Cuántos movimientos hemos hecho ??
 282+ 9B16              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B16
 284+ 9B16 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B19 EB           	ex de,hl
 286+ 9B1A A7           	and a
 287+ 9B1B ED 52        	sbc hl,de
 288+ 9B1D CB 3D        	srl l
 289+ 9B1F 3E 08        6 ld a,8
 290+ 9B21 95           	sub l
 291+ 9B22 30 1E        	jr nc,3F
 292+ 9B24
 293+ 9B24              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B24              ; B="0".
 295+ 9B24
 296+ 9B24 04           4 inc b
 297+ 9B25 3C           	inc a
 298+ 9B26 20 FC        	jr nz,4B
 299+ 9B28 78           	ld a,b
 300+ 9B29 08           	ex af,af
 301+ 9B2A 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B2D 23           5 inc hl
 303+ 9B2E 23           	inc hl
 304+ 9B2F 10 FC        	djnz 5B
 305+ 9B31 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B34 CD A7 90     	call Extrae_address
 307+ 9B37 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B3A
 309+ 9B3A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B3A              ; _(Posicion_actual).
 311+ 9B3A
 312+ 9B3A 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B3D 34           	inc (hl)
 314+ 9B3E 08               ex af,af
 315+ 9B3F 6F           	ld l,a
 316+ 9B40 18 DD        	jr 6B
 317+ 9B42
 318+ 9B42              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B42
 320+ 9B42 47           3 ld b,a
 321+ 9B43 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B46 23           2 inc hl
 323+ 9B47 23           	inc hl
 324+ 9B48 10 FC        	djnz 2B
 325+ 9B4A 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B4D C9           8 ret
 327+ 9B4E
 328+ 9B4E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B4E              ;
 330+ 9B4E              ;	24/7/22
 331+ 9B4E              ;
 332+ 9B4E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B4E              ;
 334+ 9B4E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B4E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B4E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B4E
 338+ 9B4E 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B51 A7           	and a
 340+ 9B52 20 1F        	jr nz,1F
 341+ 9B54 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B56 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B59
 344+ 9B59 21 C2 8B     	ld hl,Columns
 345+ 9B5C 34           	inc (hl)
 346+ 9B5D 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B60 E6 01        	and 1
 348+ 9B62 28 0F        	jr z,1F
 349+ 9B64 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B67 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B68 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B6B CD C6 94     	call Genera_coordenadas
 353+ 9B6E CD D3 9C     	call Inc_CTRL_DESPLZ
 354+ 9B71 18 03        	jr 2F
 355+ 9B73 CD D3 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B76 C9           2 ret
 357+ 9B77
 358+ 9B77              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B77              ;
 360+ 9B77              ;	24/7/22
 361+ 9B77              ;
 362+ 9B77              ;	Ciclo_completo.
 363+ 9B77              ;
 364+ 9B77              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B77              ;
 366+ 9B77              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B77              ; 	Decrementamos (Columns).
 368+ 9B77              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B77              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B77
 371+ 9B77
 372+ 9B77 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B7A FE FF        	cp $ff
 374+ 9B7C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B7E E6 F0        	and $f0
 376+ 9B80 20 28        	jr nz,3F
 377+ 9B82
 378+ 9B82              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B82
 380+ 9B82 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B85 47           	ld b,a
 382+ 9B86 3E F8        	ld a,$f8
 383+ 9B88 80           	add b
 384+ 9B89 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B8C 18 1C        	jr 3F
 386+ 9B8E 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B91 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B92 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B93 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B96 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B99 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B9B 20 0A        	jr nz,2F
 393+ 9B9D 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BA0 23           	inc hl
 395+ 9BA1 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9BA4 CD C6 94     	call Genera_coordenadas
 397+ 9BA7
 398+ 9BA7              ; Inicia el puntero de Sprite.
 399+ 9BA7
 400+ 9BA7 CD BC 90     2 call Inicia_puntero_objeto_der
 401+ 9BAA C9           3 ret
 402+ 9BAB
 403+ 9BAB              ; ******************************************************************************************************************************************************************************************
 404+ 9BAB              ;
 405+ 9BAB              ;	15/02/23
 406+ 9BAB              ;
 407+ 9BAB              ;	Mov_left.
 408+ 9BAB              ;
 409+ 9BAB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BAB              ;
 411+ 9BAB              Mov_left
 412+ 9BAB
 413+ 9BAB 21 C0 8B     	ld hl,Ctrl_0
 414+ 9BAE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BB0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BB0              ; 																	; _ en el caso de que no lo haya.
 417+ 9BB0 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9BB3 CB 77        	bit 6,a
 419+ 9BB5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BB7
 421+ 9BB7 CD CD 9C     	call Stop_Amadeus_left
 422+ 9BBA C8           	ret z
 423+ 9BBB 20 4A        	jr nz,8F
 424+ 9BBD
 425+ 9BBD 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BC0 A7           	and a
 427+ 9BC1 20 44        	jr nz,8F
 428+ 9BC3
 429+ 9BC3 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BC7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC9
 433+ 9BC9              ; ---------- ---------- ----------
 434+ 9BC9
 435+ 9BC9 3A D8 8B     	ld a,(Vel_left)
 436+ 9BCC FE 02        	cp 2
 437+ 9BCE 28 0F        	jr z,1F
 438+ 9BD0 38 04        	jr c,6F
 439+ 9BD2 FE 04        	cp 4
 440+ 9BD4 28 12        	jr z,7F
 441+ 9BD6
 442+ 9BD6              ; ---------- ---------- ----------
 443+ 9BD6
 444+ 9BD6 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BD9 FE F8        	cp $f8
 446+ 9BDB 20 2A        	jr nz,8F
 447+ 9BDD 18 10        	jr 4F
 448+ 9BDF 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BE2 FE F9        	cp $f9
 450+ 9BE4 20 21        	jr nz,8F
 451+ 9BE6 18 07        	jr 4F
 452+ 9BE8 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BEB FE FB        	cp $fb
 454+ 9BED 20 18        	jr nz,8F
 455+ 9BEF
 456+ 9BEF              ; ---------- ---------- ----------
 457+ 9BEF
 458+ 9BEF              4
 459+ 9BEF CD F5 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BF2              ;	call Reinicio
 461+ 9BF2
 462+ 9BF2              ; ---------- ---------- ----------
 463+ 9BF2
 464+ 9BF2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BF4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BF5
 467+ 9BF5              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BF5              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BF5
 470+ 9BF5 CD 0E 9C     	call DESPLZ_IZQ
 471+ 9BF8 C1           	pop bc
 472+ 9BF9 10 F9        	djnz 5B
 473+ 9BFB 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BFE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BFF 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9C02 CD C6 94     	call Genera_coordenadas
 477+ 9C05 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C07
 479+ 9C07              ; ---------- ---------- ----------
 480+ 9C07
 481+ 9C07              ; Movemos, no hay recolocación.
 482+ 9C07
 483+ 9C07 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9C0A CD 0E 9C     	call DESPLZ_IZQ
 485+ 9C0D C9           2 ret
 486+ 9C0E
 487+ 9C0E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C0E              ;
 489+ 9C0E              ;	22/9/22
 490+ 9C0E
 491+ 9C0E              DESPLZ_IZQ
 492+ 9C0E
 493+ 9C0E CD 1D 9C     	call Desplaza_izquierda
 494+ 9C11 CD 69 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C14 CD 91 9C     	call Ciclo_completo_2
 496+ 9C17 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C1A CB BE        	res 7,(hl)
 498+ 9C1C C9           	ret
 499+ 9C1D
 500+ 9C1D              Desplaza_izquierda
 501+ 9C1D
 502+ 9C1D 3A D8 8B     	ld a,(Vel_left)
 503+ 9C20 47           	ld b,a
 504+ 9C21 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C24 23           1 inc hl
 506+ 9C25 23           	inc hl
 507+ 9C26 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C28 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C2B CD A7 90     	call Extrae_address
 510+ 9C2E 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C31
 512+ 9C31              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C31
 514+ 9C31              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C31              ; Cuántos movimientos hemos hecho ??
 516+ 9C31              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C31
 518+ 9C31 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C34 EB           	ex de,hl
 520+ 9C35 A7           	and a
 521+ 9C36 ED 52        	sbc hl,de
 522+ 9C38 CB 3D        	srl l
 523+ 9C3A 3E 08        6 ld a,8
 524+ 9C3C 95           	sub l
 525+ 9C3D 30 1E        	jr nc,3F
 526+ 9C3F
 527+ 9C3F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C3F              ; B="0".
 529+ 9C3F
 530+ 9C3F 04           4 inc b
 531+ 9C40 3C           	inc a
 532+ 9C41 20 FC        	jr nz,4B
 533+ 9C43 78           	ld a,b
 534+ 9C44 08           	ex af,af
 535+ 9C45 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C48 23           5 inc hl
 537+ 9C49 23           	inc hl
 538+ 9C4A 10 FC        	djnz 5B
 539+ 9C4C 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C4F CD A7 90     	call Extrae_address
 541+ 9C52 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C55
 543+ 9C55              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C55              ; _(Posicion_actual).
 545+ 9C55
 546+ 9C55 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C58 35           	dec (hl)
 548+ 9C59 08           	ex af,af
 549+ 9C5A 6F           	ld l,a
 550+ 9C5B 18 DD        	jr 6B
 551+ 9C5D
 552+ 9C5D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C5D
 554+ 9C5D 47           3 ld b,a
 555+ 9C5E 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C61 23           2 inc hl
 557+ 9C62 23           	inc hl
 558+ 9C63 10 FC        	djnz 2B
 559+ 9C65 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C68 C9           8 ret
 561+ 9C69
 562+ 9C69              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C69              ;
 564+ 9C69              ;	modifica_parametros_1er_DESPLZ
 565+ 9C69              ;
 566+ 9C69              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C69              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C69              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C69
 570+ 9C69 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C6C A7           	and a
 572+ 9C6D 20 1E        	jr nz,1F
 573+ 9C6F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C70 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C73 21 C2 8B     	ld hl,Columns
 576+ 9C76 34           	inc (hl)
 577+ 9C77 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C7A E6 01        	and 1
 579+ 9C7C 20 0F        	jr nz,1F
 580+ 9C7E 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C81 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C82 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C85 CD C6 94     	call Genera_coordenadas
 584+ 9C88 CD E4 9C     	call Dec_CTRL_DESPLZ
 585+ 9C8B 18 03        	jr 2F
 586+ 9C8D CD E4 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C90 C9           2 ret
 588+ 9C91
 589+ 9C91              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C91
 591+ 9C91 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C94 FE F7        	cp $f7
 593+ 9C96 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C98 30 2C        	jr nc,3F
 595+ 9C9A
 596+ 9C9A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C9A
 598+ 9C9A 06 00        	ld b,0
 599+ 9C9C 04           4 inc b
 600+ 9C9D 3C           	inc a
 601+ 9C9E FE F7        	cp $f7
 602+ 9CA0 20 FA        	jr nz,4B
 603+ 9CA2 3E FF        	ld a,$ff
 604+ 9CA4 90           	sub b
 605+ 9CA5 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9CA8 18 1C        	jr 3F
 607+ 9CAA
 608+ 9CAA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CAA
 610+ 9CAA 21 C2 8B     1 ld hl,Columns
 611+ 9CAD 35           	dec (hl)
 612+ 9CAE AF           	xor a
 613+ 9CAF 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9CB2 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9CB5 E6 01        	and 1
 616+ 9CB7 28 0A        	jr z,2F
 617+ 9CB9 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CBC 2B           	dec hl
 619+ 9CBD 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CC0 CD C6 94     	call Genera_coordenadas
 621+ 9CC3
 622+ 9CC3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CC3
 624+ 9CC3 CD CF 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC6 C9           3 ret
 626+ 9CC7
 627+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CC7              ;
 629+ 9CC7              ;	19/10/22
 630+ 9CC7              ;
 631+ 9CC7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CC7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CC7
 634+ 9CC7 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CCA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CCC C9           	ret
 637+ 9CCD
 638+ 9CCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CCD              ;
 640+ 9CCD              ;	19/10/22
 641+ 9CCD              ;
 642+ 9CCD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CCD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CCD
 645+ 9CCD 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CD0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CD2 C9           	ret
 648+ 9CD3
 649+ 9CD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CD3              ;
 651+ 9CD3              ;	24/7/22
 652+ 9CD3              ;
 653+ 9CD3              ;	Inc_CTRL_DESPLZ
 654+ 9CD3              ;
 655+ 9CD3              ;
 656+ 9CD3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CD3
 658+ 9CD3 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD6 3A D9 8B     	ld a,(Vel_right)
 660+ 9CD9 A7           	and a
 661+ 9CDA 28 06        	jr z,1F
 662+ 9CDC 47           	ld b,a
 663+ 9CDD 34           3 inc (hl)
 664+ 9CDE 10 FD        	djnz 3B
 665+ 9CE0 18 01        	jr 2F
 666+ 9CE2 34           1 inc (hl)
 667+ 9CE3 C9           2 ret
 668+ 9CE4
 669+ 9CE4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CE4              ;
 671+ 9CE4              ;	5/2/23
 672+ 9CE4              ;
 673+ 9CE4              ;	Dec_CTRL_DESPLZ
 674+ 9CE4              ;
 675+ 9CE4              ;
 676+ 9CE4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CE4
 678+ 9CE4 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CE7 3A D8 8B     	ld a,(Vel_left)
 680+ 9CEA A7           	and a
 681+ 9CEB 28 06        	jr z,1F
 682+ 9CED 47           	ld b,a
 683+ 9CEE 35           3 dec (hl)
 684+ 9CEF 10 FD        	djnz 3B
 685+ 9CF1 18 01        	jr 2F
 686+ 9CF3 35           1 dec (hl)
 687+ 9CF4 C9           2 ret
 688+ 9CF5
 689+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CF5
 691+ 9CF5 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CF8 01 1F 00     	ld bc,31
 693+ 9CFB A7           	and a
 694+ 9CFC ED 4A        	adc hl,bc
 695+ 9CFE 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9D01 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D04 CB C6        	set 0,(hl)
 698+ 9D06 C9           	ret
 699+ 9D07
 700+ 9D07              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D07
 702+ 9D07 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D0A 01 1F 00     	ld bc,31
 704+ 9D0D A7           	and a
 705+ 9D0E ED 42        	sbc hl,bc
 706+ 9D10 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D13 21 C0 8B     	ld hl,Ctrl_0
 708+ 9D16 CB CE        	set 1,(hl)
 709+ 9D18 C9           	ret
 710+ 9D19
 711+ 9D19              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D19
 713+ 9D19 24           Reaparece_abajo inc h
 714+ 9D1A 01 E0 17     	ld bc,$17e0
 715+ 9D1D A7           	and a
 716+ 9D1E ED 4A        	adc hl,bc
 717+ 9D20 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D23 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D26 CB D6        	set 2,(hl)
 720+ 9D28 C9           	ret
 721+ 9D29
 722+ 9D29              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D29
 724+ 9D29 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D2C A7           	and a
 726+ 9D2D ED 42        	sbc hl,bc
 727+ 9D2F 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D32 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D35 CB DE        	set 3,(hl)
 730+ 9D37 C9           	ret
 731+ 9D38
 732+ 9D38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D38              ;
 734+ 9D38              ;	15/07/23
 735+ 9D38
 736+ 9D38              Reinicio
 737+ 9D38
 738+ 9D38              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D38
 740+ 9D38 AF           	xor a
 741+ 9D39 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D3C CD 5A 9D     	call Limpia_contenido_hl
 743+ 9D3F
 744+ 9D3F 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D42 CD 5A 9D     	call Limpia_contenido_hl
 746+ 9D45
 747+ 9D45 CD A8 92     	call Inicializa_Puntero_indice_mov
 748+ 9D48 CD 59 9E     	call Inicia_Puntero_mov
 749+ 9D4B
 750+ 9D4B 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D4E 06 05        	ld b,5
 752+ 9D50 77           1 ld (hl),a
 753+ 9D51 23           	inc hl
 754+ 9D52 10 FC        	djnz 1B
 755+ 9D54
 756+ 9D54 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D57 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D59
 759+ 9D59 C9           	ret
 760+ 9D5A
 761+ 9D5A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D5B 23           	inc hl
 763+ 9D5C 77           	ld (hl),a
 764+ 9D5D C9           	ret
 765+ 9D5E
 766+ 9D5E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D5E              ;
 768+ 9D5E              ;	18/6/24
 769+ 9D5E              ;
 770+ 9D5E
 771+ 9D5E              Amadeus_a_izquierda
 772+ 9D5E
 773+ 9D5E              ;	Actualiza contador de movimientos.
 774+ 9D5E
 775+ 9D5E 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D61 35           	dec (hl)
 777+ 9D62 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D64
 779+ 9D64 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D67 2B           	dec hl
 781+ 9D68 2B           	dec hl
 782+ 9D69 2B           	dec hl
 783+ 9D6A 2B           	dec hl
 784+ 9D6B 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D6E
 786+ 9D6E 21 24 8C     	ld hl,Ctrl_3
 787+ 9D71 CB EE        	set 5,(hl)
 788+ 9D73
 789+ 9D73 C9           	ret
 790+ 9D74
 791+ 9D74 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D75 C9           	ret
 793+ 9D76
 794+ 9D76
 795+ 9D76              Amadeus_a_derecha
 796+ 9D76
 797+ 9D76              ;	Actualiza contador de movimientos.
 798+ 9D76
 799+ 9D76 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D79 34           	inc (hl)
 801+ 9D7A 3E 7A        	ld a,$7a
 802+ 9D7C BE           	cp (hl)
 803+ 9D7D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D7F
 805+ 9D7F 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D82 23           	inc hl
 807+ 9D83 23           	inc hl
 808+ 9D84 23           	inc hl
 809+ 9D85 23           	inc hl
 810+ 9D86 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D89
 812+ 9D89 21 24 8C     	ld hl,Ctrl_3
 813+ 9D8C CB EE        	set 5,(hl)
 814+ 9D8E C9           	ret
 815+ 9D8F
 816+ 9D8F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D90 C9           	ret
# file closed: Direcciones.asm
2175  9D91              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D91              ; ----- ----- ----- ----- -----
   2+ 9D91              ;
   3+ 9D91              ;   28/12/23
   4+ 9D91
   5+ 9D91              Movimiento
   6+ 9D91
   7+ 9D91              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D91
   9+ 9D91 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D94 CB 57            bit 2,a
  11+ 9D96 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D98
  13+ 9D98 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9D9B 7E               ld a,(hl)
  15+ 9D9C
  16+ 9D9C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D9C
  18+ 9D9C              Inicia_desplazamiento.
  19+ 9D9C
  20+ 9D9C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D9C
  22+ 9D9C CD 8F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D9F
  24+ 9D9F              ; Iniciamos (Repetimos_mov).
  25+ 9D9F
  26+ 9D9F 7E               ld a,(hl)
  27+ 9DA0 E6 0F            and $0f
  28+ 9DA2 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9DA5 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DA8
  31+ 9DA8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DA8
  33+ 9DA8 23               inc hl
  34+ 9DA9 7E               ld a,(hl)
  35+ 9DAA 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9DAD 2B               dec hl
  37+ 9DAE
  38+ 9DAE 21 BF 8B         ld hl,Ctrl_2
  39+ 9DB1 CB D6            set 2,(hl)
  40+ 9DB3
  41+ 9DB3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DB3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DB3
  44+ 9DB3              Desplazamiento_iniciado
  45+ 9DB3
  46+ 9DB3 CD 63 9E         call Aplica_desplazamiento
  47+ 9DB6
  48+ 9DB6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB6
  50+ 9DB6 3A 24 8C         ld a,(Ctrl_3)
  51+ 9DB9 CB 4F            bit 1,a
  52+ 9DBB C0               ret nz
  53+ 9DBC
  54+ 9DBC 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DBF 35               dec (hl)
  56+ 9DC0 C0               ret nz
  57+ 9DC1
  58+ 9DC1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DC1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DC1              ; Analiza (Cola_de_desplazamiento).
  61+ 9DC1
  62+ 9DC1 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DC4 A7               and a
  64+ 9DC5 CC B8 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DC8 28 30            jr z,Reinicia_el_movimiento
  66+ 9DCA
  67+ 9DCA FE FF            cp $ff
  68+ 9DCC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DCE
  70+ 9DCE FE FE            cp $fe
  71+ 9DD0 CC 3D 9E         call z,Fijamos_bucle
  72+ 9DD3 28 25            jr z,Reinicia_el_movimiento
  73+ 9DD5
  74+ 9DD5 FE FD            cp $fd
  75+ 9DD7 20 11            jr nz,1F
  76+ 9DD9
  77+ 9DD9              ; ---
  78+ 9DD9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD9
  80+ 9DD9 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DDC CB 5F            bit 3,a
  82+ 9DDE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DE0
  84+ 9DE0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DE0
  86+ 9DE0 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DE3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DE5
  89+ 9DE5 CD 4E 9E         call Inicia_Repetimos_movimiento
  90+ 9DE8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DEA              ; ---
  92+ 9DEA
  93+ 9DEA FE 01        1 cp 1
  94+ 9DEC CA 27 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DEF
  96+ 9DEF 3D               dec a
  97+ 9DF0 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DF3
  99+ 9DF3 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF6 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF9 C9               ret
 103+ 9DFA
 104+ 9DFA              Reinicia_el_movimiento
 105+ 9DFA
 106+ 9DFA 3A BF 8B         ld a,(Ctrl_2)
 107+ 9DFD CB 5F            bit 3,a
 108+ 9DFF 28 1B            jr z,2F
 109+ 9E01
 110+ 9E01              ; (Cola_de_desplazamiento)="254".
 111+ 9E01
 112+ 9E01 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E04 35               dec (hl)
 114+ 9E05 20 15            jr nz,2F
 115+ 9E07
 116+ 9E07              ; Fin de las repeticiones del último movimiento.
 117+ 9E07
 118+ 9E07 21 BF 8B         ld hl,Ctrl_2
 119+ 9E0A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E0C
 121+ 9E0C 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9E0F 23               inc hl
 123+ 9E10 23               inc hl
 124+ 9E11 23               inc hl
 125+ 9E12 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E15              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E15 7E               ld a,(hl)
 128+ 9E16 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E19
 130+ 9E19 C3 C1 9D         jp Cola
 131+ 9E1C
 132+ 9E1C CD 59 9E     2 call Inicia_Puntero_mov
 133+ 9E1F
 134+ 9E1F 21 BF 8B         ld hl,Ctrl_2
 135+ 9E22 CB 96            res 2,(hl)
 136+ 9E24
 137+ 9E24 C3 91 9D         jp Movimiento
 138+ 9E27
 139+ 9E27              Siguiente_desplazamiento
 140+ 9E27
 141+ 9E27              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E27              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E27
 144+ 9E27 21 BF 8B         ld hl,Ctrl_2
 145+ 9E2A CB 96            res 2,(hl)
 146+ 9E2C
 147+ 9E2C 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E2F 23               inc hl
 149+ 9E30 23               inc hl
 150+ 9E31 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E34
 152+ 9E34 7E               ld a,(hl)
 153+ 9E35 A7               and a
 154+ 9E36 CC B8 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E39 CA FA 9D         jp z,Reinicia_el_movimiento
 156+ 9E3C
 157+ 9E3C C9               ret
 158+ 9E3D
 159+ 9E3D              ; Subrutinas -----------------------------------------
 160+ 9E3D              ; ---------- --------- --------- ---------- ----------
 161+ 9E3D              ;
 162+ 9E3D              ;   24/07/23
 163+ 9E3D              ;
 164+ 9E3D              ;   Fijamos_bucle
 165+ 9E3D              ;
 166+ 9E3D              ;
 167+ 9E3D
 168+ 9E3D              Fijamos_bucle
 169+ 9E3D
 170+ 9E3D 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E40 3C               inc a
 172+ 9E41 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E44
 174+ 9E44 CD B8 9E         call Incrementa_Puntero_indice_mov
 175+ 9E47 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E4A 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E4D C9               ret
 178+ 9E4E
 179+ 9E4E              ; ---------- --------- --------- ---------- ----------
 180+ 9E4E              ;
 181+ 9E4E              ;   07/7/23
 182+ 9E4E              ;
 183+ 9E4E              ;   Inicia_Repetimos_movimiento
 184+ 9E4E              ;
 185+ 9E4E              ;
 186+ 9E4E
 187+ 9E4E              Inicia_Repetimos_movimiento
 188+ 9E4E
 189+ 9E4E              ; Iniciamos (Repetimos_movimiento).
 190+ 9E4E
 191+ 9E4E DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E52 DD 7E 02         ld a,(ix+2)
 193+ 9E55 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E58
 195+ 9E58 C9               ret
 196+ 9E59
 197+ 9E59              ; ---------- --------- --------- ---------- ----------
 198+ 9E59              ;
 199+ 9E59              ;   26/6/23
 200+ 9E59              ;
 201+ 9E59              ;   Inicia_Puntero_mov
 202+ 9E59              ;
 203+ 9E59              ;
 204+ 9E59
 205+ 9E59 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E5C CD A7 90         call Extrae_address
 207+ 9E5F 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E62 C9               ret
 209+ 9E63
 210+ 9E63              ; ---------- --------- --------- ---------- ----------
 211+ 9E63              ;
 212+ 9E63              ;   27/06/23
 213+ 9E63              ;
 214+ 9E63              ;   Aplica_movimiento.
 215+ 9E63
 216+ 9E63              Aplica_desplazamiento
 217+ 9E63
 218+ 9E63              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E63
 220+ 9E63 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E66
 222+ 9E66 7E               ld a,(hl)
 223+ 9E67 E6 F0            and $f0
 224+ 9E69 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E6A
 226+ 9E6A CB 7E            bit 7,(hl)
 227+ 9E6C 28 03            jr z,1F
 228+ 9E6E CD 45 9A         call Mov_up
 229+ 9E71 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E74 CB 76            bit 6,(hl)
 231+ 9E76 28 03            jr z,2F
 232+ 9E78 CD 0C 9A         call Mov_down
 233+ 9E7B
 234+ 9E7B              ; Se ha aplicado reinicio ???
 235+ 9E7B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E7B
 237+ 9E7B              ;    ld a,(Ctrl_3)
 238+ 9E7B              ;    bit 1,a
 239+ 9E7B              ;    ret nz
 240+ 9E7B
 241+ 9E7B 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E7E CB 6E            bit 5,(hl)
 243+ 9E80 28 03            jr z,3F
 244+ 9E82 CD AB 9B         call Mov_left
 245+ 9E85 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E88 CB 66            bit 4,(hl)
 247+ 9E8A C8               ret z
 248+ 9E8B CD 88 9A         call Mov_right
 249+ 9E8E C9               ret
 250+ 9E8F
 251+ 9E8F              ; ---------- --------- --------- ---------- ----------
 252+ 9E8F              ;
 253+ 9E8F              ;   26/06/23
 254+ 9E8F              ;
 255+ 9E8F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E8F
 257+ 9E8F              Ajusta_velocidad_desplazamiento
 258+ 9E8F
 259+ 9E8F              ; 1er byte de la cadena de movimiento.
 260+ 9E8F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E8F
 262+ 9E8F CD AD 9E         call Extrae_nibble_alto
 263+ 9E92
 264+ 9E92 32 DA 8B         ld (Vel_up),a
 265+ 9E95 79               ld a,c
 266+ 9E96 E6 0F            and $0f
 267+ 9E98 32 DB 8B         ld (Vel_down),a
 268+ 9E9B
 269+ 9E9B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E9B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E9B
 272+ 9E9B 23               inc hl
 273+ 9E9C CD AD 9E         call Extrae_nibble_alto
 274+ 9E9F
 275+ 9E9F 32 D8 8B         ld (Vel_left),a
 276+ 9EA2 79               ld a,c
 277+ 9EA3 E6 0F            and $0f
 278+ 9EA5 32 D9 8B         ld (Vel_right),a
 279+ 9EA8
 280+ 9EA8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EA8
 282+ 9EA8 23               inc hl
 283+ 9EA9 22 E6 8B         ld (Puntero_mov),hl
 284+ 9EAC C9               ret
 285+ 9EAD
 286+ 9EAD 06 04        Extrae_nibble_alto ld b,4
 287+ 9EAF 7E               ld a,(hl)
 288+ 9EB0 4F               ld c,a
 289+ 9EB1 E6 F0            and $f0
 290+ 9EB3 CB 3F        1 srl a
 291+ 9EB5 10 FC            djnz 1B
 292+ 9EB7 C9               ret
 293+ 9EB8
 294+ 9EB8              ; ---------- --------- --------- ---------- ----------
 295+ 9EB8              ;
 296+ 9EB8              ;   5/7/23
 297+ 9EB8              ;
 298+ 9EB8              ;   Incrementa_Puntero_indice_mov
 299+ 9EB8
 300+ 9EB8              Incrementa_Puntero_indice_mov
 301+ 9EB8
 302+ 9EB8 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9EBB 34               inc (hl)
 304+ 9EBC
 305+ 9EBC 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EBF 01 02 00         ld bc,2
 307+ 9EC2 A7               and a
 308+ 9EC3 09               add hl,bc
 309+ 9EC4 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9EC7
 311+ 9EC7 7E               ld a,(hl)
 312+ 9EC8 A7               and a
 313+ 9EC9
 314+ 9EC9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC9
 316+ 9EC9              ;    jr z,$
 317+ 9EC9
 318+ 9EC9              ;! Reinicia el Patrón de movimiento.
 319+ 9EC9
 320+ 9EC9 CC CE 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ECC
 322+ 9ECC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ECD
 324+ 9ECD C9               ret
 325+ 9ECE
 326+ 9ECE              ; ---------- --------- --------- ---------- ----------
 327+ 9ECE              ;
 328+ 9ECE              ;   15/01/24
 329+ 9ECE              ;
 330+ 9ECE              ;   Inicializa_Puntero_indice_mov
 331+ 9ECE
 332+ 9ECE              Inicializa_Puntero_indice_mov_2
 333+ 9ECE
 334+ 9ECE              ; Existe etiqueta de bucle principal???
 335+ 9ECE
 336+ 9ECE 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ED1 24               inc h
 338+ 9ED2 25               dec h
 339+ 9ED3 28 05            jr z,2F
 340+ 9ED5
 341+ 9ED5 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9ED8 18 14            jr 3F
 343+ 9EDA
 344+ 9EDA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EDA
 346+ 9EDA 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9EDD 47               ld b,a
 348+ 9EDE
 349+ 9EDE 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9EE1 2B           1 dec hl
 351+ 9EE2 2B               dec hl
 352+ 9EE3 10 FC            djnz 1B
 353+ 9EE5 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9EE8
 355+ 9EE8 AF               xor a
 356+ 9EE9 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9EEC 18 06            jr 4F
 358+ 9EEE
 359+ 9EEE 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EF1 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9EF4 C9           4 ret
 362+ 9EF5
 363+ 9EF5              ; ----------------------------------------------------------------------
 364+ 9EF5              ;
 365+ 9EF5              ;   30/01/24
 366+ 9EF5              ;
 367+ 9EF5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EF5
 369+ 9EF5 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EF8 CD 43 94         call Calcula_salto_en_BC
 371+ 9EFB 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EFE A7               and a
 373+ 9EFF ED 4A            adc hl,bc
 374+ 9F01 C9               ret
 375+ 9F02
 376+ 9F02              ; ----------------------------------------------------------------------
 377+ 9F02              ;
 378+ 9F02              ;   30/01/24
 379+ 9F02              ;
 380+ 9F02              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F02              ;
 382+ 9F02              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F02
 384+ 9F02 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F03 23               inc hl
 386+ 9F04 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F05 69               ld l,c
 388+ 9F06 60               ld h,b
 389+ 9F07 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F0A C9               ret
 391+ 9F0B
# file closed: Movimiento.asm
2176  9F0B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F0B              Motor_de_disparos_entidades
   2+ 9F0B
   3+ 9F0B 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9F0E FE 07            cp 7
   5+ 9F10 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F11
   7+ 9F11 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F13 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F16
  10+ 9F16 CD A7 90     1 call Extrae_address
  11+ 9F19 13               inc de
  12+ 9F1A 13               inc de
  13+ 9F1B ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F1F
  15+ 9F1F 23               inc hl
  16+ 9F20
  17+ 9F20 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F21 35               dec (hl)
  19+ 9F22 28 1E            jr z,3F
  20+ 9F24
  21+ 9F24 23               inc hl
  22+ 9F25
  23+ 9F25              ;;;Mueve_disparo_Entidad
  24+ 9F25
  25+ 9F25              ;    ld a,(Ctrl_5)
  26+ 9F25              ;    bit 2,a
  27+ 9F25              ;    di
  28+ 9F25              ;    jr nz,$
  29+ 9F25              ;    ei
  30+ 9F25
  31+ 9F25 CD A7 90         call Extrae_address
  32+ 9F28 CD C6 99         call NextScan
  33+ 9F2B CD C6 99         call NextScan
  34+ 9F2E              ;    call NextScan
  35+ 9F2E              ;    call NextScan
  36+ 9F2E
  37+ 9F2E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  38+ 9F2E
  39+ 9F2E D5               push de
  40+ 9F2F
  41+ 9F2F E5               push hl
  42+ 9F30 D1               pop de
  43+ 9F31
  44+ 9F31 A7               and a
  45+ 9F32 21 FF 57         ld hl,$57ff
  46+ 9F35 ED 52            sbc hl,de
  47+ 9F37
  48+ 9F37 F3               di
  49+ 9F38 38 FE            jr c,$
  50+ 9F3A FB               ei
  51+ 9F3B
  52+ 9F3B EB               ex de,hl
  53+ 9F3C D1               pop de
  54+ 9F3D
  55+ 9F3D              ;    jr c,Elimina_disparo
  56+ 9F3D
  57+ 9F3D EB               ex de,hl
  58+ 9F3E
  59+ 9F3E 73               ld (hl),e
  60+ 9F3F 23               inc hl
  61+ 9F40 72               ld (hl),d
  62+ 9F41
  63+ 9F41 C9               ret
  64+ 9F42
  65+ 9F42
  66+ 9F42 EB           3 ex de,hl
  67+ 9F43 10 D1            djnz 1B
  68+ 9F45
  69+ 9F45 C9               ret
  70+ 9F46
  71+ 9F46
  72+ 9F46              ; --------------------------------------------------------------------------------------
  73+ 9F46              ;
  74+ 9F46              ;   19/09/24
  75+ 9F46              ;
  76+ 9F46
  77+ 9F46              Genera_datos_de_impresion_disparos_Entidades
  78+ 9F46
  79+ 9F46              ;*  Exclusiones.
  80+ 9F46
  81+ 9F46 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
  82+ 9F49 FE 07            cp 7
  83+ 9F4B C8               ret z                                                     ;? Salimos si no hay generado ningún disparo de entidad.
  84+ 9F4C
  85+ 9F4C              ; ---------------
  86+ 9F4C
  87+ 9F4C              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
  88+ 9F4C
  89+ 9F4C 3E 07            ld a,7
  90+ 9F4E 08               ex af,af                                                  ;? 7 Cajas como 7 soles. Contador de cajas alojado en A´.
  91+ 9F4F
  92+ 9F4F 2A 27 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  93+ 9F52 CD A7 90     1 call Extrae_address
  94+ 9F55
  95+ 9F55 23               inc hl
  96+ 9F56 7E               ld a,(hl)
  97+ 9F57 A7               and a
  98+ 9F58
  99+ 9F58 28 19            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 100+ 9F5A
 101+ 9F5A 2B               dec hl
 102+ 9F5B
 103+ 9F5B ED 73 00 8C      ld (Stack),sp
 104+ 9F5F F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 105+ 9F60
 106+ 9F60              Genera_scanlines_de_los_disparos_de_entidades.
 107+ 9F60
 108+ 9F60 C1               pop bc
 109+ 9F61 E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 110+ 9F62              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 111+ 9F62 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 112+ 9F66
 113+ 9F66 F1               pop af
 114+ 9F67 F1               pop af
 115+ 9F68 F1               pop af
 116+ 9F69
 117+ 9F69 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 118+ 9F6D
 119+ 9F6D E5               push hl                                                   ;? Sube 2º scanline al álbum.
 120+ 9F6E CD C6 99         call NextScan
 121+ 9F71 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 122+ 9F72 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 123+ 9F73
 124+ 9F73              Situa_en_siguiente_caja
 125+ 9F73
 126+ 9F73 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 127+ 9F74 3D               dec a
 128+ 9F75 28 06            jr z,2F
 129+ 9F77 08               ex af,af
 130+ 9F78
 131+ 9F78 13               inc de
 132+ 9F79 13               inc de
 133+ 9F7A
 134+ 9F7A EB               ex de,hl
 135+ 9F7B 18 D5            jr 1B
 136+ 9F7D
 137+ 9F7D ED 7B 00 8C  2 ld sp,(Stack)
 138+ 9F81
 139+ 9F81 C9               ret
 140+ 9F82
 141+ 9F82              ; --------------------------------------------------------------------------------------
 142+ 9F82              ;
 143+ 9F82              ;   18/09/24
 144+ 9F82              ;
 145+ 9F82
 146+ 9F82              Genera_disparo_de_entidad_maldosa
 147+ 9F82
 148+ 9F82              ;   Estructura de un disparo de entidades.
 149+ 9F82
 150+ 9F82              ;   Disparo_1 defw 0								; Puntero objeto.
 151+ 9F82              ; 	defw 0											; Puntero de impresión.
 152+ 9F82              ;	defw 0											; Control.
 153+ 9F82
 154+ 9F82              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 155+ 9F82              ;   _de la entidad en el momento de disparar.
 156+ 9F82
 157+ 9F82              ;   El byte alto muestra la siguiente información:
 158+ 9F82              ;
 159+ 9F82              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 160+ 9F82              ;                        _antes de desplazarse a derecha/izquierda.
 161+ 9F82              ;
 162+ 9F82              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 163+ 9F82              ;
 164+ 9F82              ;                        10xx ..... Izquierda.
 165+ 9F82              ;                        01xx ..... Derecha.
 166+ 9F82              ;                        00xx ..... Recto.
 167+ 9F82
 168+ 9F82              ;*  Exclusiones.
 169+ 9F82
 170+ 9F82              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 171+ 9F82              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 172+ 9F82
 173+ 9F82 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 174+ 9F85 A7               and a
 175+ 9F86 C8               ret z
 176+ 9F87
 177+ 9F87 3A B5 8B         ld a,(Coordenada_y)
 178+ 9F8A A7               and a
 179+ 9F8B C8               ret z
 180+ 9F8C
 181+ 9F8C 3D               dec a
 182+ 9F8D C8               ret z
 183+ 9F8E
 184+ 9F8E FE 0E            cp 14
 185+ 9F90 D0               ret nc
 186+ 9F91
 187+ 9F91              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 188+ 9F91              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 189+ 9F91              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 190+ 9F91              ;
 191+ 9F91 FD 21 70 83      ld iy,Disparo_entidad
 192+ 9F95
 193+ 9F95 06 11            ld b,17
 194+ 9F97 CD C6 99     3 call NextScan
 195+ 9F9A 10 FB            djnz 3B
 196+ 9F9C
 197+ 9F9C 4D               ld c,l
 198+ 9F9D 44               ld b,h
 199+ 9F9E
 200+ 9F9E              ;   Decrementa el numero de disparos de entidades.
 201+ 9F9E
 202+ 9F9E 21 26 8C         ld hl,Ctrl_5
 203+ 9FA1 CB D6            set 2,(hl)
 204+ 9FA3
 205+ 9FA3 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 206+ 9FA6 35               dec (hl)
 207+ 9FA7
 208+ 9FA7              ;   Puntero de impresión del disparo en BC , (1 scanline libre entre la entidad y el disparo).
 209+ 9FA7
 210+ 9FA7 2A 27 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 211+ 9FAA CD A7 90     1 call Extrae_address
 212+ 9FAD
 213+ 9FAD              ;   Comprobamos si la caja está vacía.
 214+ 9FAD
 215+ 9FAD 23               inc hl
 216+ 9FAE 7E               ld a,(hl)
 217+ 9FAF A7               and a
 218+ 9FB0
 219+ 9FB0 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 220+ 9FB2
 221+ 9FB2              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 222+ 9FB2
 223+ 9FB2 2B               dec hl
 224+ 9FB3
 225+ 9FB3 FD 7D            ld a,iyl
 226+ 9FB5 77               ld (hl),a
 227+ 9FB6 23               inc hl
 228+ 9FB7 FD 7C            ld a,iyh
 229+ 9FB9 77               ld (hl),a
 230+ 9FBA 23               inc hl                                              ; Guarda el puntero objeto del disparo en la caja.
 231+ 9FBB
 232+ 9FBB 71               ld (hl),c
 233+ 9FBC 23               inc hl
 234+ 9FBD 70               ld (hl),b
 235+ 9FBE 23               inc hl                                              ; Guarda el puntero de impresión.
 236+ 9FBF
 237+ 9FBF 3A BE 8B         ld a,(Velocidad)                                    ; Byte bajo de Control guarda la velocidad de la entidad/disparo.
 238+ 9FC2 77               ld (hl),a
 239+ 9FC3
 240+ 9FC3 23               inc hl
 241+ 9FC4
 242+ 9FC4              ;! Ajusta el grado de inclinación del disparo.
 243+ 9FC4
 244+ 9FC4 36 07            ld (hl),7
 245+ 9FC6
 246+ 9FC6              ; Determina tendencia del disparo.
 247+ 9FC6
 248+ 9FC6 3A 6E 89         ld a,(CX_Amadeus)
 249+ 9FC9 47               ld b,a
 250+ 9FCA 3A B4 8B         ld a,(Coordenada_X)
 251+ 9FCD 90               sub b
 252+ 9FCE 38 07            jr c,Disparo_a_derecha
 253+ 9FD0
 254+ 9FD0 FE 04        Disparo_a_izquierda cp 4
 255+ 9FD2
 256+ 9FD2 D8               ret c
 257+ 9FD3 C8               ret z
 258+ 9FD4
 259+ 9FD4 CB FE            set 7,(hl)
 260+ 9FD6 C9               ret
 261+ 9FD7
 262+ 9FD7 47           Disparo_a_derecha ld b,a
 263+ 9FD8 3E FF            ld a,$ff
 264+ 9FDA 90               sub b
 265+ 9FDB
 266+ 9FDB FE 04            cp 4
 267+ 9FDD
 268+ 9FDD D8               ret c
 269+ 9FDE C8               ret z
 270+ 9FDF
 271+ 9FDF CB F6            set 6,(hl)
 272+ 9FE1 C9               ret
 273+ 9FE2
 274+ 9FE2              ;   --- --- ---
 275+ 9FE2
 276+ 9FE2              Situa_en_siguiente_disparo
 277+ 9FE2
 278+ 9FE2 13               inc de
 279+ 9FE3 13               inc de
 280+ 9FE4
 281+ 9FE4 EB               ex de,hl
 282+ 9FE5 18 C3            jr 1B
 283+ 9FE7
 284+ 9FE7              ; --------------------------------------------------------------------------------------
 285+ 9FE7              ;
 286+ 9FE7              ;   31/08/24
 287+ 9FE7              ;
 288+ 9FE7
 289+ 9FE7              Compara_con_coordenadas_de_disparo
 290+ 9FE7
 291+ 9FE7 3A B5 8B         ld a,(Coordenada_y)
 292+ 9FEA 47               ld b,a
 293+ 9FEB 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 294+ 9FEE 90               sub b
 295+ 9FEF
 296+ 9FEF              ; A = "0" ok
 297+ 9FEF              ; A = "1" ok
 298+ 9FEF
 299+ 9FEF 28 08            jr z,Comprueba_coordenada_X
 300+ 9FF1 3D               dec a
 301+ 9FF2 28 05            jr z,Comprueba_coordenada_X
 302+ 9FF4
 303+ 9FF4              ; A = "$ff" ok
 304+ 9FF4
 305+ 9FF4 FE FE            cp $fe
 306+ 9FF6 28 01            jr z,Comprueba_coordenada_X
 307+ 9FF8
 308+ 9FF8 C9               ret
 309+ 9FF9
 310+ 9FF9              Comprueba_coordenada_X
 311+ 9FF9
 312+ 9FF9 3A B4 8B         ld a,(Coordenada_X)
 313+ 9FFC 47               ld b,a
 314+ 9FFD 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 315+ A000 7E               ld a,(hl)
 316+ A001 90               sub b
 317+ A002
 318+ A002              ; A = "0" ok
 319+ A002              ; A = "1" ok
 320+ A002
 321+ A002 28 09            jr z,Activa_Impacto_en_entidad
 322+ A004 3D               dec a
 323+ A005 28 06            jr z,Activa_Impacto_en_entidad
 324+ A007
 325+ A007              ; A = "2" ok
 326+ A007
 327+ A007 3D               dec a
 328+ A008 28 03            jr z,Activa_Impacto_en_entidad
 329+ A00A
 330+ A00A              ; A = "$ff"
 331+ A00A
 332+ A00A FE FD            cp $fd
 333+ A00C C0               ret nz
 334+ A00D
 335+ A00D              Activa_Impacto_en_entidad
 336+ A00D
 337+ A00D              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 338+ A00D
 339+ A00D 3E 02            ld a,2
 340+ A00F 32 B7 8B         ld (Impacto),a
 341+ A012
 342+ A012              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 343+ A012
 344+ A012 11 C0 87         ld de,Indice_Explosion_entidades
 345+ A015 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 346+ A018
 347+ A018 73               ld (hl),e
 348+ A019 23               inc hl
 349+ A01A 72               ld (hl),d
 350+ A01B
 351+ A01B              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 352+ A01B
 353+ A01B 21 2B 8C         ld hl,Impacto2
 354+ A01E CB 9E            res 3,(hl)
 355+ A020
 356+ A020 C9               ret
 357+ A021
 358+ A021              ; --------------------------------------------------------------------------------------
 359+ A021              ;
 360+ A021              ;   11/09/24
 361+ A021              ;
 362+ A021
 363+ A021              Limpia_album_de_borrado_disparos
 364+ A021
 365+ A021 21 26 8C         ld hl,Ctrl_5
 366+ A024 CB 46            bit 0,(hl)
 367+ A026 C8               ret z
 368+ A027 CB 86            res 0,(hl)
 369+ A029
 370+ A029              Limpiando
 371+ A029
 372+ A029 AF               xor a
 373+ A02A 2A 0E 8C         ld hl,(Album_de_borrado_disparos)
 374+ A02D 77               ld (hl),a
 375+ A02E 5D               ld e,l
 376+ A02F 54               ld d,h
 377+ A030 1C               inc e                                           ; DE = HL+1
 378+ A031 01 3A 00         ld bc,$003a
 379+ A034 ED B0            ldir
 380+ A036
 381+ A036 C9               ret
 382+ A037
 383+ A037
 384+ A037              ; --------------------------------------------------------------------------------------
 385+ A037              ;
 386+ A037              ;   26/08/24
 387+ A037              ;
 388+ A037
 389+ A037              Calcula_bytes_pintado_disparos
 390+ A037
 391+ A037 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 392+ A03A 45               ld b,l
 393+ A03B 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 394+ A03E 7D               ld a,l
 395+ A03F
 396+ A03F 90               sub b
 397+ A040 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 398+ A043
 399+ A043 C9               ret
 400+ A044
 401+ A044              ; --------------------------------------------------------------------------------------
 402+ A044              ;
 403+ A044              ;   11/09/24
 404+ A044              ;
 405+ A044              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 406+ A044              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 407+ A044              ;   _disparos que el álbum del FRAME actual).
 408+ A044
 409+ A044              Limpia_album_de_pintado_disparos
 410+ A044
 411+ A044              ;*   Exclusiones.
 412+ A044
 413+ A044 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 414+ A047 A7               and a
 415+ A048 C8               ret z
 416+ A049
 417+ A049              ; -----
 418+ A049
 419+ A049 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 420+ A04C 47               ld b,a
 421+ A04D 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 422+ A050
 423+ A050 90               sub b
 424+ A051
 425+ A051 C8               ret z
 426+ A052 D8               ret c
 427+ A053
 428+ A053 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 429+ A056 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 430+ A057 AF               xor a                                                               ; "0".
 431+ A058
 432+ A058 77           1 ld (hl),a
 433+ A059 2C               inc l
 434+ A05A 10 FC            djnz 1B
 435+ A05C
 436+ A05C C9               ret
 437+ A05D
 438+ A05D              ; --------------------------------------------------------------------------------------
 439+ A05D              ;
 440+ A05D              ;   27/08/24
 441+ A05D              ;
 442+ A05D
 443+ A05D              Motor_Disparos_Amadeus
 444+ A05D
 445+ A05D              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 446+ A05D
 447+ A05D 21 20 89         ld hl,Disparo_Amad+1
 448+ A060
 449+ A060 34               inc (hl)
 450+ A061 35               dec (hl)
 451+ A062
 452+ A062 C8               ret z
 453+ A063
 454+ A063              ;   Esta caja contiene un disparo.
 455+ A063
 456+ A063 CD 6A A0         call Consulta_Impacto
 457+ A066 CC 83 A0         call z,Mueve_disparo_Amadeus
 458+ A069
 459+ A069 C9               ret
 460+ A06A
 461+ A06A              ; ----------------------
 462+ A06A              ;
 463+ A06A              ;
 464+ A06A              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 465+ A06A              ;
 466+ A06A              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 467+ A06A
 468+ A06A
 469+ A06A              Consulta_Impacto
 470+ A06A
 471+ A06A              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 472+ A06A              ;   _sea lo más coherente posible.
 473+ A06A
 474+ A06A E5               push hl
 475+ A06B 2B               dec hl
 476+ A06C CD 64 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 477+ A06F E1               pop hl
 478+ A070 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 479+ A071
 480+ A071 C8               ret z
 481+ A072
 482+ A072 3A 2B 8C         ld a,(Impacto2)
 483+ A075 CB DF            set 3,a
 484+ A077 32 2B 8C         ld (Impacto2),a
 485+ A07A
 486+ A07A E5               push hl
 487+ A07B CD 51 A1         call Genera_coordenadas_de_disparo_Amadeus
 488+ A07E E1               pop hl
 489+ A07F CD 9C A0         call Elimina_disparo
 490+ A082
 491+ A082 C9               ret
 492+ A083
 493+ A083              ; ----------------------
 494+ A083              ;
 495+ A083              ;
 496+ A083              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 497+ A083
 498+ A083              Mueve_disparo_Amadeus
 499+ A083
 500+ A083 CD A7 90         call Extrae_address
 501+ A086
 502+ A086 CD D5 99         call PreviousScan
 503+ A089 CD D5 99         call PreviousScan
 504+ A08C CD D5 99         call PreviousScan
 505+ A08F CD D5 99         call PreviousScan
 506+ A092
 507+ A092              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 508+ A092
 509+ A092 7C               ld a,h
 510+ A093 D6 40            sub $40
 511+ A095 EB               ex de,hl
 512+ A096 38 04            jr c,Elimina_disparo
 513+ A098
 514+ A098               ; Introduce nuevo puntero_de_impresión en la caja.
 515+ A098
 516+ A098 73               ld (hl),e
 517+ A099 23               inc hl
 518+ A09A 72               ld (hl),d
 519+ A09B
 520+ A09B C9               ret
 521+ A09C
 522+ A09C              ; ----------------------
 523+ A09C              ;
 524+ A09C              ;   11/9/24
 525+ A09C
 526+ A09C              Elimina_disparo
 527+ A09C
 528+ A09C              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 529+ A09C              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 530+ A09C
 531+ A09C              ;   Disparo_1A defw 0									; Puntero objeto.
 532+ A09C              ;   	defw 0											; Puntero de impresión.
 533+ A09C
 534+ A09C 2B               dec hl
 535+ A09D 2B               dec hl
 536+ A09E
 537+ A09E AF               xor a
 538+ A09F 77               ld (hl),a
 539+ A0A0 23               inc hl
 540+ A0A1 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 541+ A0A2
 542+ A0A2 23               inc hl
 543+ A0A3 77               ld (hl),a
 544+ A0A4 23               inc hl
 545+ A0A5 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 546+ A0A6
 547+ A0A6 3E 01            ld a,1
 548+ A0A8 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 549+ A0AB
 550+ A0AB 21 26 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 551+ A0AE CB C6            set 0,(hl)
 552+ A0B0
 553+ A0B0 AF               xor a
 554+ A0B1 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 555+ A0B2
 556+ A0B2 C9               ret
 557+ A0B3
 558+ A0B3              ; --------------------------------------------------------------------------------------
 559+ A0B3              ;
 560+ A0B3              ;   21/8/24
 561+ A0B3              ;
 562+ A0B3
 563+ A0B3              Pinta_disparos
 564+ A0B3
 565+ A0B3 ED 73 00 8C      ld (Stack),sp
 566+ A0B7 06 02            ld b,2
 567+ A0B9
 568+ A0B9 ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 569+ A0BD
 570+ A0BD D1           2 pop de
 571+ A0BE
 572+ A0BE 14               inc d
 573+ A0BF 15               dec d
 574+ A0C0
 575+ A0C0 28 1B            jr z,1F
 576+ A0C2
 577+ A0C2              Imprime_scanlines_de_disparo
 578+ A0C2
 579+ A0C2 E1               pop hl
 580+ A0C3
 581+ A0C3              ; Puntero objeto en DE.
 582+ A0C3              ; Puntero_de_impresión en HL.
 583+ A0C3
 584+ A0C3              ; 1er scanline.
 585+ A0C3
 586+ A0C3 1A               ld a,(de)
 587+ A0C4 AE               xor (hl)
 588+ A0C5 77               ld (hl),a
 589+ A0C6
 590+ A0C6 13               inc de
 591+ A0C7 2C               inc l
 592+ A0C8
 593+ A0C8 1A               ld a,(de)
 594+ A0C9 AE               xor (hl)
 595+ A0CA 77               ld (hl),a
 596+ A0CB
 597+ A0CB              ; 2º scanline.
 598+ A0CB
 599+ A0CB E1               pop hl
 600+ A0CC 1B               dec de
 601+ A0CD
 602+ A0CD 1A               ld a,(de)
 603+ A0CE AE               xor (hl)
 604+ A0CF 77               ld (hl),a
 605+ A0D0
 606+ A0D0 13               inc de
 607+ A0D1 2C               inc l
 608+ A0D2
 609+ A0D2 1A               ld a,(de)
 610+ A0D3 AE               xor (hl)
 611+ A0D4 77               ld (hl),a
 612+ A0D5
 613+ A0D5              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 614+ A0D5
 615+ A0D5 18 E6            jr 2B
 616+ A0D7
 617+ A0D7 ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 618+ A0DB 18 E0            jr 2B
 619+ A0DD
 620+ A0DD 10 F8        1 djnz 3B
 621+ A0DF ED 7B 00 8C      ld sp,(Stack)
 622+ A0E3 C9               ret
 623+ A0E4
 624+ A0E4              ; --------------------------------------------------------------------------------------
 625+ A0E4              ;
 626+ A0E4              ;   14/09/24
 627+ A0E4              ;
 628+ A0E4              ;   Modifica: HL y DE.
 629+ A0E4
 630+ A0E4
 631+ A0E4              Genera_datos_de_impresion_disparos_Amadeus
 632+ A0E4
 633+ A0E4 ED 73 00 8C      ld (Stack),sp
 634+ A0E8 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 635+ A0EB D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 636+ A0EC
 637+ A0EC 14               inc d                                                     ;? Salimos si no hay disparo.
 638+ A0ED 15               dec d
 639+ A0EE
 640+ A0EE 28 12            jr z,Salida
 641+ A0F0
 642+ A0F0              Genera_scanlines_de_disparo_Amadeus
 643+ A0F0
 644+ A0F0 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 645+ A0F1              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 646+ A0F1 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 647+ A0F5
 648+ A0F5 C1               pop bc
 649+ A0F6 C1               pop bc
 650+ A0F7 C1               pop bc
 651+ A0F8
 652+ A0F8 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 653+ A0FC
 654+ A0FC E5               push hl                                                   ;? Sube 2º scanline al álbum.
 655+ A0FD CD D5 99         call PreviousScan
 656+ A100 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 657+ A101 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 658+ A102
 659+ A102              Salida
 660+ A102
 661+ A102 ED 7B 00 8C      ld sp,(Stack)
 662+ A106 C9               ret
 663+ A107
 664+ A107              ; --------------------------------------------------------------------------------------
 665+ A107              ;
 666+ A107              ;   12/09/24
 667+ A107              ;
 668+ A107
 669+ A107              Genera_disparo_Amadeus
 670+ A107
 671+ A107              ;*  Exclusiones.
 672+ A107
 673+ A107 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 674+ A10A A7               and a
 675+ A10B C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 676+ A10C
 677+ A10C 3D               dec a
 678+ A10D 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 679+ A110
 680+ A110              Define_puntero_objeto_disparo
 681+ A110
 682+ A110              ;   Inicializamos contador.
 683+ A110
 684+ A110 06 00            ld b,0
 685+ A112
 686+ A112 2A 72 89         ld hl,(p.imp.amadeus)
 687+ A115 2C               inc l
 688+ A116
 689+ A116 3E 80            ld a,$80
 690+ A118 BE               cp (hl)
 691+ A119 28 0D            jr z,1F
 692+ A11B
 693+ A11B 04               inc b
 694+ A11C
 695+ A11C 3E 60            ld a,$60
 696+ A11E BE               cp (hl)
 697+ A11F 28 07            jr z,1F
 698+ A121
 699+ A121
 700+ A121 04               inc b
 701+ A122
 702+ A122 3E 18            ld a,$18
 703+ A124 BE               cp (hl)
 704+ A125 28 01            jr z,1F
 705+ A127
 706+ A127 04               inc b
 707+ A128
 708+ A128              ;   Calcula el Puntero_de_impresión del disparo.
 709+ A128
 710+ A128              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 711+ A128
 712+ A128 CD D5 99     1 call PreviousScan
 713+ A12B
 714+ A12B 78               ld a,b
 715+ A12C CB 3F            srl a
 716+ A12E 28 03            jr z,4F
 717+ A130
 718+ A130              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 719+ A130 E5               push hl
 720+ A131 18 02            jr 5F
 721+ A133 2D           4 dec l
 722+ A134 E5               push hl
 723+ A135              ; ---
 724+ A135
 725+ A135              ;   Calcula el Puntero_objeto del disparo.
 726+ A135
 727+ A135 21 72 83     5 ld hl,Indice_disparo_Amadeus
 728+ A138 04               inc b
 729+ A139 05               dec b
 730+ A13A 28 04            jr z,2F
 731+ A13C
 732+ A13C              ;   Nos desplazamos por el índice de disparos.
 733+ A13C
 734+ A13C 2C           3 inc l
 735+ A13D 2C               inc l
 736+ A13E 10 FC            djnz 3B
 737+ A140
 738+ A140              ; --- Guarda el Puntero_objeto del disparo en la pila.
 739+ A140 CD A7 90     2 call Extrae_address
 740+ A143 E5               push hl
 741+ A144              ; ---
 742+ A144
 743+ A144              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 744+ A144              ; HL en el 1er .db de la caja.
 745+ A144
 746+ A144 21 1F 89         ld hl,Disparo_Amad
 747+ A147
 748+ A147 06 02            ld b,2
 749+ A149
 750+ A149 D1           6 pop de
 751+ A14A 73               ld (hl),e
 752+ A14B 23               inc hl
 753+ A14C 72               ld (hl),d
 754+ A14D 23               inc hl
 755+ A14E
 756+ A14E 10 F9            djnz 6B
 757+ A150
 758+ A150 C9               ret
 759+ A151
 760+ A151              Genera_coordenadas_de_disparo_Amadeus
 761+ A151
 762+ A151              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 763+ A151              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 764+ A151              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 765+ A151
 766+ A151 CD A7 90         call Extrae_address
 767+ A154 CD C6 94         call Genera_coordenadas
 768+ A157
 769+ A157 3D               dec a
 770+ A158
 771+ A158 21 2E 8C         ld hl,Coordenadas_disparo_certero
 772+ A15B 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 773+ A15C 23               inc hl
 774+ A15D 3A B4 8B         ld a,(Coordenada_X)
 775+ A160 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 776+ A161
 777+ A161 AF               xor a
 778+ A162 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 779+ A163
 780+ A163 C9               ret
 781+ A164
 782+ A164              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 783+ A164              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 784+ A164              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 785+ A164
 786+ A164              ; ----------------------------------------------
 787+ A164              ;
 788+ A164              ;   27/08/24
 789+ A164              ;
 790+ A164              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 791+ A164              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 792+ A164
 793+ A164              Detecta_impacto_en_disparo_de_Amadeus
 794+ A164
 795+ A164              Extraccion_de_datos
 796+ A164
 797+ A164 13               inc de
 798+ A165 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 799+ A166
 800+ A166 5E               ld e,(hl)
 801+ A167 23               inc hl
 802+ A168 56               ld d,(hl)
 803+ A169
 804+ A169 23               inc hl
 805+ A16A
 806+ A16A 4E               ld c,(hl)
 807+ A16B 23               inc hl
 808+ A16C 46               ld b,(hl)
 809+ A16D
 810+ A16D C5               push bc
 811+ A16E E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 812+ A16F
 813+ A16F              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 814+ A16F
 815+ A16F CD D5 99         call PreviousScan
 816+ A172 CD D5 99         call PreviousScan
 817+ A175
 818+ A175              Detecta_impacto_
 819+ A175
 820+ A175 1A               ld a,(de)
 821+ A176 A6               and (hl)
 822+ A177 C0               ret nz
 823+ A178
 824+ A178 13               inc de
 825+ A179 23               inc hl
 826+ A17A
 827+ A17A 1A               ld a,(de)
 828+ A17B A6               and (hl)
 829+ A17C C9               ret
 830+ A17D
 831+ A17D              ; -------------------------------------------------------------------------------------------------------------
 832+ A17D              ;
 833+ A17D              ;   8/8/24
 834+ A17D              ;
 835+ A17D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 836+ A17D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 837+ A17D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 838+ A17D              ;
 839+ A17D              ;   MODIFICA: HL,DE,BC y A.
 840+ A17D              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 841+ A17D              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 842+ A17D
 843+ A17D              Colision_Entidad_Amadeus
 844+ A17D
 845+ A17D              ; Posible contacto de entidad con Amadeus. ?????
 846+ A17D
 847+ A17D              ; Exclusiones:
 848+ A17D
 849+ A17D 3A 4E 8C         ld a,(Shield)
 850+ A180 A7               and a
 851+ A181 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 852+ A182
 853+ A182 21 24 8C         ld hl,Ctrl_3
 854+ A185 CB 76            bit 6,(hl)
 855+ A187 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 856+ A188
 857+ A188 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 858+ A18B CB 56            bit 2,(hl)
 859+ A18D C0               ret nz
 860+ A18E
 861+ A18E 3A B5 8B     	ld a,(Coordenada_y)
 862+ A191 FE 14        	cp $14
 863+ A193 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 864+ A194
 865+ A194 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 866+ A197 A7               and a
 867+ A198 C0               ret nz
 868+ A199
 869+ A199              Genera_coordenadas_X
 870+ A199
 871+ A199              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 872+ A199              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 873+ A199
 874+ A199              ;   Limpiamos almacenes.
 875+ A199
 876+ A199              ;    call Limpia_Coordenadas_X
 877+ A199
 878+ A199              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 879+ A199
 880+ A199 21 30 8C         ld hl,Coordenadas_X_Entidad
 881+ A19C 3A B4 8B         ld a,(Coordenada_X)
 882+ A19F CD C1 A1         call Guarda_coordenadas_X
 883+ A1A2
 884+ A1A2              ;   Almacenamos las coordenadas X de Amadeus.
 885+ A1A2
 886+ A1A2 3A 6E 89         ld a,(CX_Amadeus)
 887+ A1A5 CD C1 A1         call Guarda_coordenadas_X
 888+ A1A8 CD D5 A1         call Compara_coordenadas_X
 889+ A1AB C0               ret nz
 890+ A1AC
 891+ A1AC 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 892+ A1AE 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 893+ A1B1
 894+ A1B1 2A F3 8B         ld hl,(Puntero_store_caja)
 895+ A1B4 2C               inc l
 896+ A1B5 2C               inc l
 897+ A1B6 2C               inc l
 898+ A1B7 2C               inc l
 899+ A1B8 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 900+ A1BB
 901+ A1BB 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 902+ A1BE CB D6            set 2,(hl)
 903+ A1C0
 904+ A1C0 C9               ret
 905+ A1C1
 906+ A1C1               ; ----- ----- ----- ----- -----
 907+ A1C1
 908+ A1C1 77           Guarda_coordenadas_X ld (hl),a
 909+ A1C2 3C               inc a
 910+ A1C3 2C               inc l
 911+ A1C4 77               ld (hl),a
 912+ A1C5 3C               inc a
 913+ A1C6 2C               inc l
 914+ A1C7 77               ld (hl),a
 915+ A1C8 2C               inc l
 916+ A1C9 C9               ret
 917+ A1CA
 918+ A1CA AF           Limpia_Coordenadas_X xor a
 919+ A1CB 06 06            ld b,6
 920+ A1CD 21 33 8C         ld hl,Coordenadas_X_Amadeus
 921+ A1D0 77           1 ld (hl),a
 922+ A1D1 23               inc hl
 923+ A1D2 10 FC            djnz 1B
 924+ A1D4 C9               ret
 925+ A1D5
 926+ A1D5              ; ----- ----- ----- ----- -----
 927+ A1D5
 928+ A1D5              Compara_coordenadas_X
 929+ A1D5
 930+ A1D5 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 931+ A1D9 DD 7E 00         ld a,(ix+0)
 932+ A1DC CD EA A1         call Comparando
 933+ A1DF C8               ret z
 934+ A1E0
 935+ A1E0 3C               inc a
 936+ A1E1 CD F9 A1         call Comparando_1
 937+ A1E4 C8               ret z
 938+ A1E5
 939+ A1E5 3C               inc a
 940+ A1E6 CD F9 A1         call Comparando_1
 941+ A1E9 C9               ret
 942+ A1EA
 943+ A1EA              ; ----- ----- ----- ----- -----
 944+ A1EA              ;
 945+ A1EA              ;   4/12/23
 946+ A1EA              ;
 947+ A1EA              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 948+ A1EA
 949+ A1EA              Comparando
 950+ A1EA
 951+ A1EA DD 2C            inc ixl
 952+ A1EC DD 2C            inc ixl
 953+ A1EE DD 2C            inc ixl
 954+ A1F0
 955+ A1F0 DD 46 00         ld b,(ix+0)
 956+ A1F3 DD 4E 01         ld c,(ix+1)
 957+ A1F6 DD 56 02         ld d,(ix+2)
 958+ A1F9
 959+ A1F9 B8           Comparando_1 cp b
 960+ A1FA C8               ret z
 961+ A1FB B9               cp c
 962+ A1FC C8               ret z
 963+ A1FD BA               cp d
 964+ A1FE C9               ret
 965+ A1FF
 966+ A1FF              ; -----------------------------------------------------------------------
 967+ A1FF              ;
 968+ A1FF              ;   04/7/24
 969+ A1FF              ;
 970+ A1FF
 971+ A1FF              Detecta_colision_nave_entidad
 972+ A1FF
 973+ A1FF              ; Exclusiones:
 974+ A1FF
 975+ A1FF              ; Salimos de la rutina si no hay advertencia de posible colisión.
 976+ A1FF
 977+ A1FF 21 2B 8C     	ld hl,Impacto2
 978+ A202 CB 56        	bit 2,(hl)
 979+ A204 C8           	ret z
 980+ A205
 981+ A205              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 982+ A205
 983+ A205 2A 74 89         ld hl,(Pamm_Amadeus)
 984+ A208 CD A7 90         call Extrae_address
 985+ A20B 54               ld d,h
 986+ A20C 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 987+ A20D
 988+ A20D 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 989+ A210 06 10            ld b,16                                        ; Contador de scanlines en B.
 990+ A212 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 991+ A215
 992+ A215 C5           1 push bc
 993+ A216 06 03            ld b,3
 994+ A218 E5               push hl
 995+ A219
 996+ A219              ; .db
 997+ A219
 998+ A219 1A           3 ld a,(de)
 999+ A21A A7               and a
1000+ A21B 20 03            jr nz,4F
1001+ A21D
1002+ A21D 2C               inc l
1003+ A21E 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1004+ A220
1005+ A220 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1006+ A222 28 04            jr z,2F
1007+ A224
1008+ A224              ; Impacto.
1009+ A224 FD 2D            dec iyl
1010+ A226 28 22            jr z,5F
1011+ A228
1012+ A228 1C           2 inc e
1013+ A229 10 EE            djnz 3B
1014+ A22B
1015+ A22B E1               pop hl
1016+ A22C
1017+ A22C              ; Hay salto de línea en el puntero de impresión ???
1018+ A22C
1019+ A22C 7C               ld a,h
1020+ A22D D6 57            sub $57
1021+ A22F 20 0A            jr nz,6F
1022+ A231
1023+ A231              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1024+ A231
1025+ A231 2A 72 89         ld hl,(p.imp.amadeus)
1026+ A234 3E 20            ld a,$20
1027+ A236 A7               and a
1028+ A237 85               add l
1029+ A238 6F               ld l,a
1030+ A239 18 01            jr 7F
1031+ A23B
1032+ A23B 24           6 inc h
1033+ A23C
1034+ A23C C1           7 pop bc
1035+ A23D 10 D6            djnz 1B
1036+ A23F
1037+ A23F              ;   Fin de la comparativa.
1038+ A23F
1039+ A23F              ;   NO HAY COLISIÓN !!!!!.
1040+ A23F              ;
1041+ A23F              ;   .db (Impacto) de Amadeus a "0".
1042+ A23F              ;   RES el bit2 de (Impacto2).
1043+ A23F              ;
1044+ A23F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1045+ A23F              ;   Lo colocamos a "0".
1046+ A23F
1047+ A23F 21 2B 8C         ld hl,Impacto2
1048+ A242 CB 96            res 2,(hl)
1049+ A244 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1050+ A247 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1051+ A249 C9               ret
1052+ A24A
1053+ A24A              ;   COLISIÓN !!!!!.
1054+ A24A              ;
1055+ A24A              ;   .db (Impacto) de Amadeus a "1".
1056+ A24A              ;   SET el bit3 de (Impacto2).
1057+ A24A              ;
1058+ A24A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1059+ A24A
1060+ A24A E1           5 pop hl
1061+ A24B C1               pop bc
1062+ A24C
1063+ A24C 21 71 89         ld hl,Impacto_Amadeus
1064+ A24F 36 01            ld (hl),1
1065+ A251 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1066+ A254 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1067+ A256
1068+ A256 11 C0 87         ld de,Indice_Explosion_entidades
1069+ A259 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1070+ A25C
1071+ A25C 23               inc hl
1072+ A25D 23               inc hl
1073+ A25E 23               inc hl
1074+ A25F
1075+ A25F 73               ld (hl),e
1076+ A260 23               inc hl
1077+ A261 72               ld (hl),d
1078+ A262
1079+ A262              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1080+ A262
1081+ A262 11 60 88         ld de,Indice_Explosion_Amadeus
1082+ A265 21 74 89         ld hl,Pamm_Amadeus
1083+ A268
1084+ A268 73               ld (hl),e
1085+ A269 23               inc hl
1086+ A26A 72               ld (hl),d
1087+ A26B
1088+ A26B C9               ret
1089+ A26C
1090+ A26C
1091+ A26C
# file closed: Disparo.asm
2177  A26C
2178  A26C              	SAVESNA "Pruebas.sna", START
2179  A26C
2180  A26C
2181  A26C
2182  A26C
# file closed: Banco_de_pruebas.asm
