# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 2F 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 8F 8E     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 9F 8E     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 39 89     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B 2F 89  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	9/1/24
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas_de_entidades						; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2										; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 										; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 											; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101										; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 130+ 8592 04           	db 4 												; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0											; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0												; Variables_de_pintado
 138+ 85A0 00 00        	defw 0												;	" " " " " " "
 139+ 85A2 00 00        	defw 0												;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0											;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 												; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40           	db $40												; (Ctrl_0).
 148+ 85AF
 149+ 85AF 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0												; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 												; (Columnas).
 156+ 85BC 00 00        	defw 0												; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 190+ 85EF 00 00        	defw 0 											; Contador_de_mov_masticados
 191+ 85F1
 192+ 85F1 00           	db 0											; (Ctrl_0).
 193+ 85F2
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 235+ 8632 00 00        	defw 0 											; Contador_de_mov_masticados
 236+ 8634
 237+ 8634 00           	db 0											; (Ctrl_0).
 238+ 8635
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 280+ 8675 00 00        	defw 0 											; Contador_de_mov_masticados
 281+ 8677
 282+ 8677 00           	db 0											; (Ctrl_0).
 283+ 8678
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 325+ 86B8 00 00        	defw 0 											; Contador_de_mov_masticados
 326+ 86BA
 327+ 86BA 00           	db 0											; (Ctrl_0).
 328+ 86BB
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 370+ 86FB 00 00        	defw 0 											; Contador_de_mov_masticados
 371+ 86FD
 372+ 86FD 00           	db 0											; (Ctrl_0).
 373+ 86FE
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 415+ 873E 00 00        	defw 0 											; Contador_de_mov_masticados
 416+ 8740
 417+ 8740 00           	db 0											; (Ctrl_0).
 418+ 8741
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 460+ 8781 00 00        	defw 0 											; Contador_de_mov_masticados
 461+ 8783
 462+ 8783 00           	db 0											; (Ctrl_0).
 463+ 8784
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AD 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     			; (Filas) / (Columns).
 493+ 879C 04           	db %00000100										; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    	; (Posicion_inicio).
 497+ 87A3 01           	db 1												; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 500+ 87AA 86 9D        	defw Indice_mov_Baile_de_BadSat						; (Puntero_indice_mov)
 501+ 87AC 03           	db 3												; (Frames_explosion).
 502+ 87AD
 503+ 87AD 02 02        Entidad_2 db 2,2		                     			; (Filas) / (Columns).
 504+ 87AF 02           	db %00000010										; (Attr).
 505+ 87B0 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 506+ 87B2 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 507+ 87B4 40 50        	defw $5040                                      	; (Posicion_inicio).
 508+ 87B6 01           	db 1												; (Cuad_objeto).
 509+ 87B7 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 510+ 87BB 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 511+ 87BD 86 9D        	defw Indice_mov_Baile_de_BadSat				    	; (Puntero_indice_mov)
 512+ 87BF 03           	db 3												; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  87C0              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87C0              ; 13/05/23
   2+ 87C0
   3+ 87C0              Indice_de_niveles
   4+ 87C0
   5+ 87C0 CE 87        	defw Nivel_1
   6+ 87C2 D1 87        	defw Nivel_2
   7+ 87C4 DE 87        	defw Nivel_3
   8+ 87C6 EE 87        	defw Nivel_4
   9+ 87C8 00 88        	defw Nivel_5
  10+ 87CA              ;	...
  11+ 87CA              ;	...
  12+ 87CA              ;	+ Niveles ...
  13+ 87CA
  14+ 87CA 00 00        	defw 0
  15+ 87CC 00 00        	defw 0
  16+ 87CE
  17+ 87CE 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87CF 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87D1 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87D2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D6 01 02
  21+ 87D8 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87DC 01 02
  22+ 87DE 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DF 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87E3 01
  24+ 87E4 03 01 01 01  	db 3,1,1,1,1
  24+ 87E8 01
  25+ 87E9 03 01 01 01  	db 3,1,1,1,1
  25+ 87ED 01
  26+ 87EE 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EF 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87F3 01
  28+ 87F4 04 01 01 01  	db 4,1,1,1,1
  28+ 87F8 01
  29+ 87F9 04 01 01 01  	db 4,1,1,1,1
  29+ 87FD 01
  30+ 87FE 02 03        	db 2,3
  31+ 8800 14           Nivel_5 db 20									; Nº de entidades.
  32+ 8801 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8805 01
  33+ 8806 05 01 01 01  	db 5,1,1,1,1
  33+ 880A 01
  34+ 880B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880F 01
  35+ 8810 05 01 01 01  	db 5,1,1,1,1
  35+ 8814 01
  36+ 8815
  37+ 8815              ;---------------------------------------------------------------------------------------------------------------
  38+ 8815              ;
  39+ 8815              ;   5/1/24
  40+ 8815              ;
  41+ 8815              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8815              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8815              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8815              ;	_en la caja DRAW correspondiente.
  45+ 8815              ;
  46+ 8815              ;	MODIFICA: HL,DE y A.
  47+ 8815              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8815
  49+ 8815              Inicializa_Punteros_de_nivel
  50+ 8815
  51+ 8815 21 C0 87     	ld hl,Indice_de_niveles
  52+ 8818 22 57 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 881B CD 21 8D     	call Extrae_address
  54+ 881E 7E           	ld a,(hl)
  55+ 881F 32 23 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8822 23           	inc hl
  57+ 8823 22 59 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8826 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8827
  60+ 8827              ;---------------------------------------------------------------------------------------------------------------
  61+ 8827              ;
  62+ 8827              ;   5/1/24
  63+ 8827              ;
  64+ 8827              ;	Destruye A,BC,HL,DE
  65+ 8827
  66+ 8827              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 8827              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 8827
  69+ 8827              Prepara_cajas_de_entidades
  70+ 8827
  71+ 8827              ; Preparamos los punteros de las cajas de entidades:
  72+ 8827
  73+ 8827 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 882A CD 21 8D     	call Extrae_address
  75+ 882D CD 6A 88     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 8830              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 8830
  78+ 8830 CD B8 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8833
  80+ 8833 2A 59 89     	ld hl,(Datos_de_nivel)
  81+ 8836
  82+ 8836              ; En este punto:
  83+ 8836              ;
  84+ 8836              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 8836              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 8836
  87+ 8836 C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 8837
  89+ 8837 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 8838 CD 58 88     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 883B
  92+ 883B 21 96 87     	ld hl,Indice_de_entidades
  93+ 883E CD 60 88     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 8841              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 8841
  96+ 8841 CD 74 88     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 8844
  98+ 8844 2A 21 89     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 8847 CD 21 8D     	call Extrae_address
 100+ 884A CD 6A 88     	call Avanza_caja_de_entidades
 101+ 884D
 102+ 884D 2A 59 89     	ld hl,(Datos_de_nivel)
 103+ 8850 23           	inc hl
 104+ 8851 22 59 89     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 8854
 106+ 8854 C1           	pop bc
 107+ 8855 10 DF        	djnz 1B
 108+ 8857
 109+ 8857 C9           	ret
 110+ 8858
 111+ 8858              ;	------------------------------------------------------------------------------------
 112+ 8858              ;
 113+ 8858              ;	5/1/24
 114+ 8858              ;
 115+ 8858              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 116+ 8858              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 117+ 8858
 118+ 8858 CB 27        Calcula_salto_en_BC sla a
 119+ 885A D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 120+ 885C 4F           	ld c,a
 121+ 885D 06 00        	ld b,0
 122+ 885F C9           	ret
 123+ 8860
 124+ 8860              ; ------------------------------------------------------------------
 125+ 8860              ;
 126+ 8860              ;	5/1/24
 127+ 8860              ;
 128+ 8860              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 129+ 8860              ;	Actualiza (Datos_de_entidad) con esa dirección.
 130+ 8860
 131+ 8860 A7           Situa_en_datos_de_entidad and a
 132+ 8861 ED 4A        	adc hl,bc
 133+ 8863 CD 21 8D     	call Extrae_address
 134+ 8866 22 29 89         ld (Datos_de_entidad),hl
 135+ 8869 C9           	ret
 136+ 886A
 137+ 886A              ; ------------------------------------------------------------------
 138+ 886A
 139+ 886A 22 1D 89     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 140+ 886D 13           	inc de
 141+ 886E 13           	inc de
 142+ 886F EB           	ex de,hl
 143+ 8870 22 21 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 144+ 8873 C9           	ret
 145+ 8874
 146+ 8874              ; ----------------------------------------------------------------------------------------------------------
 147+ 8874              ;
 148+ 8874              ;	5/1/24
 149+ 8874              ;
 150+ 8874              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 151+ 8874
 152+ 8874              Datos_de_entidad_a_caja
 153+ 8874
 154+ 8874              ; En este punto:
 155+ 8874              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 156+ 8874
 157+ 8874 ED 5B 1D 89  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 158+ 8878
 159+ 8878 01 02 00     	ld bc,2
 160+ 887B ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 161+ 887D              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 162+ 887D 01 07 00     	ld bc,7
 163+ 8880 CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 164+ 8883
 165+ 8883 01 05 00     	ld bc,5
 166+ 8886 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 167+ 8888              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 168+ 8888 01 04 00     	ld bc,4
 169+ 888B CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 170+ 888E
 171+ 888E 01 07 00     	ld bc,7
 172+ 8891 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 173+ 8893              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 174+ 8893
 175+ 8893 01 13 00     	ld bc,19
 176+ 8896 CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 177+ 8899
 178+ 8899 01 02 00     	ld bc,2
 179+ 889C ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 180+ 889E              ;												; HL, (origen), apunta ahora al .db (Puntero_indice_mov), hay que situar DE.
 181+ 889E
 182+ 889E 01 03 00     	ld bc,3
 183+ 88A1 CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_indice_mov).
 184+ 88A4
 185+ 88A4 01 02 00     	ld bc,2
 186+ 88A7 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 187+ 88A9              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 188+ 88A9
 189+ 88A9 01 0F 00     	ld bc,15
 190+ 88AC CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 191+ 88AF
 192+ 88AF 7E           	ld a,(hl)
 193+ 88B0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 194+ 88B1
 195+ 88B1 C9           	ret
 196+ 88B2
 197+ 88B2              ; ---------- -------------- ----------------
 198+ 88B2
 199+ 88B2 EB           Situa_DE ex de,hl
 200+ 88B3 A7           	and a
 201+ 88B4 ED 4A        	adc hl,bc
 202+ 88B6 EB           	ex de,hl
 203+ 88B7 C9           	ret
 204+ 88B8
 205+ 88B8              ;---------------------------------------------------------------------------------------------------------------
 206+ 88B8              ;
 207+ 88B8              ;	5/1/24
 208+ 88B8              ;
 209+ 88B8              ;	INICIALIZA (Numero_parcial_de_entidades).
 210+ 88B8              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 211+ 88B8              ;
 212+ 88B8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 213+ 88B8              ;
 214+ 88B8              ;	(Numero_parcial_de_entidades)="7".
 215+ 88B8              ;
 216+ 88B8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 217+ 88B8              ;
 218+ 88B8              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 219+ 88B8              ;
 220+ 88B8              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 221+ 88B8              ;	MODIFICA: A y B.
 222+ 88B8              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 223+ 88B8
 224+ 88B8              Inicializa_Numero_parcial_de_entidades
 225+ 88B8
 226+ 88B8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 227+ 88B8
 228+ 88B8 3A 23 89     	ld a,(Numero_de_entidades)
 229+ 88BB A7           	and a
 230+ 88BC
 231+ 88BC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 232+ 88BC              ;	jr z,$
 233+ 88BC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 234+ 88BC
 235+ 88BC 20 03        	jr nz,3F
 236+ 88BE
 237+ 88BE              ; ---------- ---------- ----------
 238+ 88BE
 239+ 88BE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 240+ 88BE              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 241+ 88BE
 242+ 88BE CD 15 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 243+ 88C1
 244+ 88C1              ; ---------- ---------- ----------
 245+ 88C1
 246+ 88C1 3A 23 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 247+ 88C4 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 248+ 88C6 38 08        	jr c,1F
 249+ 88C8
 250+ 88C8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 251+ 88C8              ; Actualizamos variables.
 252+ 88C8
 253+ 88C8 3E 07        	ld a,7
 254+ 88CA 32 24 89     	ld (Numero_parcial_de_entidades),a
 255+ 88CD 47           	ld b,a
 256+ 88CE 18 04        	jr 2F
 257+ 88D0
 258+ 88D0              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 259+ 88D0              ; (Numero_de_entidades)="0".
 260+ 88D0
 261+ 88D0 32 24 89     1 ld (Numero_parcial_de_entidades),a
 262+ 88D3 47           	ld b,a
 263+ 88D4 C9           2 ret
# file closed: Niveles.asm
 106  88D5
 107  88D5              ; ******************************************************************************************************************************************************************************************
 108  88D5              ; Constantes.
 109  88D5              ; ******************************************************************************************************************************************************************************************
 110  88D5              ;
 111  88D5              ; 25/12/23
 112  88D5
 113  88D5              ;
 114  88D5              ; Constantes.
 115  88D5              ;
 116  88D5
 117  88D5              Sprite_vacio equ $f000
 118  88D5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  88D5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  88D5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  88D5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  88D5
 123  88D5              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  88D5              ;														;
 125  88D5
 126  88D5              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  88D5
 128  88D5
 129  88D5
 130  88D5
 131  88D5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 132  88D5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 133  88D5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 134  88D5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 135  88D5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 136  88D5
 137  88D5              ;														; 55 Bytes.
 138  88D5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 139  88D5              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 140  88D5
 141  88D5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 142  88D5
 143  88D5              ; ******************************************************************************************************************************************************************************************
 144  88D5              ; Variables.
 145  88D5              ; ******************************************************************************************************************************************************************************************
 146  88D5              ;
 147  88D5              ; 25/12//23
 148  88D5              ;
 149  88D5              ; Variables de DRAW. (Motor principal).
 150  88D5              ;
 151  88D5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 152  88D5
 153  88D5 00           Filas db 0												; Filas. [DRAW]
 154  88D6 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  88D7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  88D9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  88DB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  88DC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  88DD
 160  88DD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  88DD
 162  88DD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  88DE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  88DE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  88DE 00           Attr db 0												; Atributos de la entidad:
 166  88DF
 167  88DF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  88DF              ;
 169  88DF              ;	COLORES: 0 ..... NEGRO
 170  88DF              ;    		 1 ..... AZUL
 171  88DF              ; 			 2 ..... ROJO
 172  88DF              ;			 3 ..... MAGENTA
 173  88DF              ; 			 4 ..... VERDE
 174  88DF              ; 			 5 ..... CIAN
 175  88DF              ;			 6 ..... AMARILLO
 176  88DF              ; 			 7 ..... BLANCO
 177  88DF
 178  88DF 00 00        Indice_Sprite_der defw 0
 179  88E1 00 00        Indice_Sprite_izq defw 0
 180  88E3 00 00        Puntero_DESPLZ_der defw 0
 181  88E5 00 00        Puntero_DESPLZ_izq defw 0
 182  88E7
 183  88E7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  88E9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  88EA
 186  88EA              ; Variables de objeto. (Características).
 187  88EA
 188  88EA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 189  88EB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 190  88EC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 191  88ED 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 192  88EE
 193  88EE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 194  88EF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 195  88EF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 196  88EF 00 00 00...  Variables_de_borrado ds 6
 197  88F5
 198  88F5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 199  88F7 00 00        	defw 0
 200  88F9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 201  88FB 00 00 00 00  	db 0,0,0,0
 202  88FF
 203  88FF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 204  8901              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 205  8901
 206  8901 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 207  8903
 208  8903              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 209  8903              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 210  8903
 211  8903 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 212  8905              ;														; _palabras que componen el "movimiento_masticado".
 213  8905
 214  8905              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 215  8905
 216  8905 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8906              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8906              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8906              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8906              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8906              ;
 222  8906              ; 														DESCRIPCIÖN:
 223  8906              ;
 224  8906              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8906              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8906              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8906              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8906              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8906              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8906              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8906              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8906              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8906              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8906              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8906              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8906              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8906              ;
 238  8906              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8906              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8906              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8906
 242  8906              ; Movimiento. ------------------------------------------------------------------------------------------------------
 243  8906
 244  8906 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 245  8908 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 246  890A 00 00        Puntero_indice_mov_bucle defw 0							;
 247  890C              ;
 248  890C              ;
 249  890C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 250  890D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 251  890D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 252  890D 00           Incrementa_puntero_backup db 0
 253  890E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 254  890F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 255  890F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 256  8910 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 257  8911 00           Cola_de_desplazamiento db 0								; Este byte indica:
 258  8912              ;
 259  8912              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 260  8912              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 261  8912              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 262  8912              ;
 263  8912              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 264  8912              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 265  8912              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 266  8912              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 267  8912              ;
 268  8912              ;														;	"$ff" ..... Bucle infinito de repetición.
 269  8912              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 270  8912              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 271  8912
 272  8912
 273  8912              ; Variables de funcionamiento. [DRAW].
 274  8912
 275  8912 00           Columnas db 0
 276  8913 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8915              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8915 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8916
 280  8916              ; variables de control general.
 281  8916
 282  8916 00           Ctrl_2 db 0
 283  8917              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 284  8917              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 285  8917              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 286  8917              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 287  8917              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 288  8917              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 289  8917              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 290  8917              ;
 291  8917              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 292  8917              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 293  8917              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 294  8917              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 295  8917              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 296  8917              ;														BIT 4, ???
 297  8917              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 298  8917
 299  8917 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 300  8918
 301  8918              ;! 67 Bytes por entidad.
 302  8918
 303  8918              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 304  8918              ;					         		---------;      ;---------
 305  8918
 306  8918
 307  8918              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 308  8918
 309  8918 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  891A
 311  891A 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  891B
 313  891B              ;														DESCRIPCIÓN:
 314  891B              ;
 315  891B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  891B              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  891B              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  891B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  891B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  891B              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  891B
 322  891B              ;														BIT 3, Recarga de nueva oleada.
 323  891B              ;														BIT 4, Recarga de nueva oleada.
 324  891B              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  891B              ;														BIT 6, **** Frame completo.
 326  891B              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  891B
 328  891B 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  891D              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  891D              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  891D              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  891D
 333  891D              ; Gestión de ENTIDADES y CAJAS.
 334  891D
 335  891D 00 00        Puntero_store_caja defw 0
 336  891F 00 00        Puntero_restore_caja defw 0
 337  8921 00 00        Indice_restore_caja defw 0
 338  8923 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  8924 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  8925 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8926 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8927              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8927              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8927              ;														; _ (Numero_de_malotes)="0".
 345  8927 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  8929 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  892B              ;														; _ puntero (Indice_entidades).
 348  892B
 349  892B              ;---------------------------------------------------------------------------------------------------------------
 350  892B              ;
 351  892B              ;	18/11/23
 352  892B              ;
 353  892B              ;	Álbumes.
 354  892B
 355  892B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  892D              ;														; _variable para almacenar lo posición del puntero_
 357  892D              ; 														; _de pila, SP.
 358  892D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  892F              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  892F 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  8931 00 70        Stack_snapshot defw Album_de_fotos
 362  8933 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  8935
 364  8935              ;End_Snapshot defw Album_de_fotos
 365  8935              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  8935 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  8937              ;														; _el snapshot de los registros del siguiente disparo.
 368  8937              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  8937 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  8939
 371  8939 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  893A              ;
 373  893A              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  893A              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 375  893A              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 376  893A              ;																_ no se inicia una nueva "Entidad_guía".
 377  893A              ; Gestión de Disparos.
 378  893A
 379  893A 00           Numero_de_disparotes db 0
 380  893B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 381  893D 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 382  893F 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 383  8940              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 384  8940              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 385  8940 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 386  8942              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 387  8942              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 388  8942              ;														; _produzca colisión.
 389  8942 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 390  8944              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 391  8944 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  8947              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 393  8947 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 394  894A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 395  894A 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 396  894B
 397  894B              ;---------------------------------------------------------------------------------------------------------------
 398  894B
 399  894B              ; Relojes y temporizaciones.
 400  894B
 401  894B 00           Contador_de_frames db 0
 402  894C 00           Contador_de_frames_2 db 0
 403  894D
 404  894D 04           Clock_explosion db 4
 405  894E 14           Clock_Entidades_en_curso db 20
 406  894F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 407  8950              ;														; Repite la oleada de entidades.
 408  8950 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 409  8951 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 410  8952 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 411  8953
 412  8953 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 413  8954 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 414  8955 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 415  8956
 416  8956              ;---------------------------------------------------------------------------------------------------------------
 417  8956
 418  8956              ; Gestión de NIVELES.
 419  8956
 420  8956 00           Nivel db 0												; Nivel actual del juego.
 421  8957 00 00        Puntero_indice_NIVELES defw 0
 422  8959 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 423  895B              ; 														; _ que definen el NIVEL.
 424  895B              ; Y todo comienza aquí .....
 425  895B              ;
 426  895B              ; 	INICIO  *************************************************************************************************************************************************************************
 427  895B              ;
 428  895B              ;	5/1/24
 429  895B
 430  895B              START
 431  895B
 432  895B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 433  895E 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 434  8960 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 435  8962 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 436  8964 F3           	DI
 437  8965
 438  8965 3E 07        	ld a,%00000111
 439  8967 CD AA 99     	call Cls
 440  896A
 441  896A CD FE 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 442  896D
 443  896D              ; INICIALIZACIÓN.
 444  896D
 445  896D CD 15 88     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 446  8970              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 447  8970              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 448  8970              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 449  8970 CD 27 88     4 call Prepara_cajas_de_entidades
 450  8973
 451  8973
 452  8973 CD 89 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 453  8976              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 454  8976 CD AE 8D     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 455  8979
 456  8979 21 24 89     	ld hl,Numero_parcial_de_entidades
 457  897C 46           	ld b,(hl)
 458  897D              ;	inc b
 459  897D              ;	dec b
 460  897D              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 461  897D
 462  897D              ;	INICIA ENTIDADES !!!!!
 463  897D
 464  897D CD 8E 8B     	call Construye_movimientos_masticados_entidad
 465  8980
 466  8980              ;1 push bc  												; Guardo el contador de entidades.
 467  8980              ;	call Inicia_entidad
 468  8980              ;	pop bc
 469  8980              ;	djnz 1B  											; Decremento el contador de entidades.
 470  8980
 471  8980              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 472  8980              ; (Esto se dá cuando se inicia una nueva oleada).
 473  8980
 474  8980              ;	ld a,(Ctrl_1)
 475  8980              ;	bit 3,a
 476  8980              ;	jr nz,5F											; Loop
 477  8980
 478  8980              ; 	INICIA AMADEUS !!!!!
 479  8980
 480  8980              ;3 call Restore_Amadeus
 481  8980              ;	call Inicia_Puntero_objeto
 482  8980              ;	call Draw
 483  8980
 484  8980              ;	call Guarda_movimiento_masticado	;! Provisional
 485  8980
 486  8980              ;	call Guarda_foto_registros
 487  8980              ;	call Guarda_datos_de_borrado_Amadeus
 488  8980
 489  8980              ;	ld de,Amadeus_db
 490  8980              ;	call Store_Amadeus
 491  8980
 492  8980              ; 	INICIA DISPAROS !!!!!
 493  8980
 494  8980              ;	call Inicia_Puntero_Disparo_Entidades
 495  8980              ;	call Inicia_Puntero_Disparo_Amadeus
 496  8980
 497  8980              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 498  8980
 499  8980 CD 89 8C     5 call Inicia_punteros_de_cajas
 500  8983 CD AE 8D     	call Restore_entidad
 501  8986
 502  8986 3A 1A 89     	ld a,(Ctrl_1)
 503  8989 CB 5F        	bit 3,a
 504  898B 28 07        	jr z,6F
 505  898D
 506  898D              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 507  898D
 508  898D 21 1A 89     	ld hl,Ctrl_1
 509  8990 CB 9E        	res 3,(hl)
 510  8992 18 07        	jr Main
 511  8994
 512  8994              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 513  8994
 514  8994 21 39 89     6 ld hl,Ctrl_3
 515  8997 CB C6        	set 0,(hl)											; Frame completo.
 516  8999 FB           	ei
 517  899A 76           	halt
 518  899B
 519  899B              ; ------------------------------------
 520  899B
 521  899B              Main
 522  899B              ;
 523  899B              ;	11/12/23
 524  899B
 525  899B              ; Aparece nueva entidad ???
 526  899B
 527  899B              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 528  899B              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 529  899B              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 530  899B              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 531  899B              ;														; _un 2º bloque.
 532  899B
 533  899B 3E 01        	ld a,1
 534  899D D3 FE        	out ($fe),a
 535  899F
 536  899F 3A 4E 89     	ld a,(Clock_Entidades_en_curso)
 537  89A2 47           	ld b,a
 538  89A3 3A 4B 89     	ld a,(Contador_de_frames)
 539  89A6 B8           	cp b
 540  89A7 20 18        	jr nz,13F
 541  89A9
 542  89A9              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 543  89A9              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 544  89A9
 545  89A9 3A 24 89     21 ld a,(Numero_parcial_de_entidades)
 546  89AC 47           	ld b,a
 547  89AD 3A 25 89     	ld a,(Entidades_en_curso)
 548  89B0 B8           	cp b
 549  89B1 28 0E        	jr z,13F
 550  89B3 30 0C        	jr nc,13F
 551  89B5
 552  89B5 3C           	inc a
 553  89B6 32 25 89     	ld (Entidades_en_curso),a
 554  89B9
 555  89B9              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 556  89B9
 557  89B9 3A 4E 89     	ld a,(Clock_Entidades_en_curso)
 558  89BC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 559  89BC              ;! _ IMPREDECIBLE !!!!
 560  89BC C6 64        	add 100
 561  89BE 32 4E 89     	ld (Clock_Entidades_en_curso),a
 562  89C1
 563  89C1              ; -------------------------------------------------------------------------------------------------------------
 564  89C1
 565  89C1              ; Habilita disparos.
 566  89C1
 567  89C1 21 50 89     13 ld hl,Disparo_Amadeus
 568  89C4 11 52 89     	ld de,CLOCK_repone_disparo_Amadeus
 569  89C7 CD 77 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 570  89CA
 571  89CA 21 53 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 572  89CD 11 55 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 573  89D0 CD 77 9D     	call Habilita_disparos
 574  89D3
 575  89D3              ; COLISIONES.
 576  89D3
 577  89D3 CD 9D 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 578  89D6
 579  89D6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 580  89D6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 581  89D6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 582  89D6
 583  89D6 AF           	xor a
 584  89D7 32 3F 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 585  89DA
 586  89DA CD 89 8C     	call Inicia_punteros_de_cajas
 587  89DD CD AE 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 588  89E0              ; 														; _ en DRAW.
 589  89E0 3A D5 88     	ld a,(Filas)
 590  89E3 A7           	and a
 591  89E4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 592  89E6 CD C0 8D     	call Incrementa_punteros_de_cajas
 593  89E9 18 F2        	jr 12B
 594  89EB
 595  89EB              ; ---------------------------------------------------------------------------------------
 596  89EB
 597  89EB 3A 24 89     10 ld a,(Numero_parcial_de_entidades)
 598  89EE 47               ld b,a
 599  89EF A7           	and a
 600  89F0 20 14        	jr nz,11F
 601  89F2
 602  89F2 21 1A 89     	ld hl,Ctrl_1
 603  89F5 CB 66        	bit 4,(hl)
 604  89F7 C2 9F 8A     	jp nz,16F
 605  89FA
 606  89FA              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 607  89FA
 608  89FA 21 1A 89     	ld hl,Ctrl_1
 609  89FD CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 610  89FF
 611  89FF 3A 4B 89     	ld a,(Contador_de_frames)
 612  8A02 3C           	inc a
 613  8A03 32 4F 89     	ld (Activa_recarga_cajas),a
 614  8A06
 615  8A06              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 616  8A06
 617  8A06 3A 25 89     11 ld a,(Entidades_en_curso)
 618  8A09 A7           	and a
 619  8A0A CA 9F 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 620  8A0D 47           	ld b,a												; No hay entidades que gestionar.
 621  8A0E
 622  8A0E              ; ( Código que ejecutamos con cada entidad: ).
 623  8A0E
 624  8A0E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 625  8A0E
 626  8A0E C5           15 push bc 												; Nº de entidades en curso.
 627  8A0F
 628  8A0F              ; Existe "Entidad_guía" ???.
 629  8A0F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 630  8A0F
 631  8A0F 3A 39 89     	ld a,(Ctrl_3)
 632  8A12 CB 4F        	bit 1,a
 633  8A14 20 11        	jr nz,22F
 634  8A16
 635  8A16              ; Almacén de "Movimientos_masticados" lleno ???
 636  8A16              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 637  8A16              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 638  8A16
 639  8A16 3A 39 89     	ld a,(Ctrl_3)
 640  8A19 CB 5F        	bit 3,a
 641  8A1B 20 0A        	jr nz,22F
 642  8A1D
 643  8A1D              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 644  8A1D
 645  8A1D 21 16 89     	ld hl,Ctrl_2
 646  8A20 CB EE        	set 5,(hl)
 647  8A22 21 39 89     	ld hl,Ctrl_3
 648  8A25 CB CE        	set 1,(hl)
 649  8A27
 650  8A27              ; Impacto ???
 651  8A27
 652  8A27 3A EE 88     22 ld a,(Impacto)
 653  8A2A A7           	and a
 654  8A2B 28 31        	jr z,8F
 655  8A2D
 656  8A2D              ; Hay Impacto en esta entidad.
 657  8A2D
 658  8A2D 21 4D 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 659  8A30 35           	dec (hl)
 660  8A31 C2 92 8A     	jp nz,17F
 661  8A34
 662  8A34              ;! Velocidad de la animación de la explosión.
 663  8A34
 664  8A34 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 665  8A36              ;														; _,(velocidad de la explosión).
 666  8A36              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 667  8A36
 668  8A36 CD 72 8E     	call Repone_datos_de_borrado
 669  8A39 CD C7 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 670  8A3C
 671  8A3C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 672  8A3C
 673  8A3C 3A 16 89     	ld a,(Ctrl_2)
 674  8A3F CB 4F        	bit 1,a
 675  8A41 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 676  8A43
 677  8A43              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 678  8A43
 679  8A43 3A DD 88     	ld a,(CTRL_DESPLZ)
 680  8A46 A7           	and a
 681  8A47 20 08        	jr nz,18F
 682  8A49
 683  8A49 21 84 84     	ld hl,Indice_Explosion_2x2-2
 684  8A4C 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 685  8A4F 18 06        	jr 19F
 686  8A51
 687  8A51 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 688  8A54 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 689  8A57
 690  8A57 21 16 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 691  8A5A CB CE        	set 1,(hl)
 692  8A5C 18 22        	jr 7F
 693  8A5E
 694  8A5E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 695  8A5E              ; _con las coordenadas de la entidad almacenada en DRAW.
 696  8A5E
 697  8A5E 3A 1A 89     8 ld a,(Ctrl_1)
 698  8A61 CB 57        	bit 2,a
 699  8A63 28 1B        	jr z,7F
 700  8A65
 701  8A65 2A 42 89     	ld hl,(Coordenadas_disparo_certero)
 702  8A68 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 703  8A69              ;														; E contiene la coordenada_X del disparo.
 704  8A69 2A DB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 705  8A6C              ;														; H FILA, (Coordenada_y de la entidad).
 706  8A6C A7           	and a
 707  8A6D ED 52        	sbc hl,de
 708  8A6F
 709  8A6F CD B6 92     	call Determina_resultado_comparativa
 710  8A72
 711  8A72 78           	ld a,b
 712  8A73 A7           	and a
 713  8A74 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 714  8A76
 715  8A76              ; ----- ----- -----
 716  8A76
 717  8A76 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 718  8A78 32 EE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 719  8A7B
 720  8A7B 21 1A 89     	ld hl,Ctrl_1
 721  8A7E CB 96        	res 2,(hl)
 722  8A80
 723  8A80 CD F0 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 724  8A83
 725  8A83 3A 05 89     	ld a,(Ctrl_0)
 726  8A86 CB 67        	bit 4,a
 727  8A88 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 728  8A8A
 729  8A8A              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 730  8A8A              ; [[[
 731  8A8A              ;	call Detecta_disparo_entidad
 732  8A8A              ; ]]]
 733  8A8A
 734  8A8A CD F2 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 735  8A8D
 736  8A8D 21 05 89     	ld hl,Ctrl_0
 737  8A90 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 738  8A92
 739  8A92 CD 6F 8D     17 call Store_Restore_cajas
 740  8A95
 741  8A95 C1           	pop bc
 742  8A96
 743  8A96 05           	dec b
 744  8A97 C2 0E 8A     	jp nz,15B
 745  8A9A
 746  8A9A              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 747  8A9A              ; Hemos gestionado todas las unidades.
 748  8A9A              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 749  8A9A
 750  8A9A 21 1A 89     	ld hl,Ctrl_1
 751  8A9D CB 96        	res 2,(hl)
 752  8A9F
 753  8A9F 21 39 89     16 ld hl,Ctrl_3
 754  8AA2 CB C6        	set 0,(hl)											; Frame completo.
 755  8AA4
 756  8AA4 AF           	xor a
 757  8AA5 D3 FE        	out ($fe),a
 758  8AA7
 759  8AA7 FB           	ei
 760  8AA8 76           	halt
 761  8AA9
 762  8AA9              ; ----------------------------------------
 763  8AA9
 764  8AA9 3A 1A 89     	ld a,(Ctrl_1) 										; Existe Loop?
 765  8AAC CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 766  8AAE CA 9B 89     	jp z,Main
 767  8AB1
 768  8AB1              ; RECARGA DE NUEVA OLEADA.
 769  8AB1
 770  8AB1 3A 4B 89     	ld a,(Contador_de_frames)
 771  8AB4 47           	ld b,a
 772  8AB5 3A 4F 89     	ld a,(Activa_recarga_cajas)
 773  8AB8 B8           	cp b
 774  8AB9 28 08        	jr z,20F
 775  8ABB
 776  8ABB 21 1A 89     	ld hl,Ctrl_1
 777  8ABE CB E6        	set 4,(hl)
 778  8AC0 C3 9B 89     	jp Main
 779  8AC3
 780  8AC3 21 1A 89     20 ld hl,Ctrl_1
 781  8AC6 CB A6        	res 4,(hl)
 782  8AC8
 783  8AC8 3A 4B 89     	ld a,(Contador_de_frames)
 784  8ACB
 785  8ACB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 786  8ACB              ;! _ IMPREDECIBLE !!!!
 787  8ACB
 788  8ACB C6 0A        	add 10
 789  8ACD 32 4E 89     	ld (Clock_Entidades_en_curso),a
 790  8AD0
 791  8AD0 C3 70 89     	jp 4B
 792  8AD3
 793  8AD3 C9           	ret
 794  8AD4
 795  8AD4              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 796  8AD4              ;
 797  8AD4              ;	16/11/23
 798  8AD4
 799  8AD4              Gestiona_Amadeus
 800  8AD4
 801  8AD4              ;! Activa/desactiva impacto con Amadeus.
 802  8AD4
 803  8AD4              ;	ld a,(Impacto)
 804  8AD4              ;	and a
 805  8AD4              ;	jr nz,2F
 806  8AD4
 807  8AD4 CD 67 8B     	call Mov_Amadeus
 808  8AD7
 809  8AD7 3A 05 89     2 ld a,(Ctrl_0)
 810  8ADA CB 67        	bit 4,a
 811  8ADC 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 812  8ADE
 813  8ADE CD F2 8B     	call Guarda_foto_entidad_a_pintar
 814  8AE1 CD 52 8E     	call Guarda_datos_de_borrado_Amadeus
 815  8AE4
 816  8AE4 21 05 89     1 ld hl,Ctrl_0
 817  8AE7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 818  8AE9
 819  8AE9 CD 41 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 820  8AEC
 821  8AEC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 822  8AEC
 823  8AEC CD 09 8D     	call Calcula_numero_de_disparotes
 824  8AEF
 825  8AEF C9           	ret
 826  8AF0
 827  8AF0              ; --------------------------------------------------------------------------------------------------------------
 828  8AF0              ;
 829  8AF0              ;	15/12/23
 830  8AF0
 831  8AF0              Mov_obj
 832  8AF0
 833  8AF0 3A 16 89     	ld a,(Ctrl_2)
 834  8AF3 CB 4F        	bit 1,a
 835  8AF5 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 836  8AF7
 837  8AF7              ; Explosión:
 838  8AF7
 839  8AF7 3A 17 89     	ld a,(Frames_explosion)
 840  8AFA A7           	and a
 841  8AFB 20 1D        	jr nz,4F
 842  8AFD
 843  8AFD              ;!  Una alimaña menos!!!!!!!!!1
 844  8AFD
 845  8AFD              ; Se trataba de una Entidad_guía ???
 846  8AFD
 847  8AFD 3A 16 89     	ld a,(Ctrl_2)
 848  8B00 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 849  8B02 28 05        	jr z,5F
 850  8B04
 851  8B04 21 39 89     	ld hl,Ctrl_3
 852  8B07 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 853  8B09
 854  8B09              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 855  8B09              ;!! _generado puede ser distinto, (aletoriedad).
 856  8B09
 857  8B09 CD F0 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 858  8B0C 21 24 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 859  8B0F 35           	dec (hl)
 860  8B10 21 25 89     	ld hl,Entidades_en_curso
 861  8B13 35           	dec (hl)
 862  8B14 21 23 89     	ld hl,Numero_de_entidades
 863  8B17 35           	dec (hl)
 864  8B18 18 4C        	jr 3F
 865  8B1A
 866  8B1A              ; -----
 867  8B1A
 868  8B1A              ;	`Movemos´ la explosión.
 869  8B1A
 870  8B1A 2A E3 88     4 ld hl,(Puntero_DESPLZ_der)
 871  8B1D 23           	inc hl
 872  8B1E 23           	inc hl
 873  8B1F 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 874  8B22 CD 21 8D     	call Extrae_address
 875  8B25 22 D9 88     	ld (Puntero_objeto),hl
 876  8B28
 877  8B28 21 17 89     	ld hl,Frames_explosion
 878  8B2B 35           	dec (hl)
 879  8B2C
 880  8B2C 21 05 89     	ld hl,Ctrl_0
 881  8B2F CB E6        	set 4,(hl)
 882  8B31
 883  8B31 18 33        	jr 3F
 884  8B33
 885  8B33              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 886  8B33
 887  8B33 AF           2 xor a
 888  8B34 32 05 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 889  8B37
 890  8B37              ; Movemos Entidades malignas.
 891  8B37              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 892  8B37
 893  8B37 3A 16 89     	ld a,(Ctrl_2)
 894  8B3A CB 6F        	bit 5,a
 895  8B3C 20 07        	jr nz,8F
 896  8B3E
 897  8B3E 21 05 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 898  8B41 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 899  8B43 18 09        	jr 7F
 900  8B45
 901  8B45 CD 22 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 902  8B48
 903  8B48 3A 05 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 904  8B4B CB 67        	bit 4,a
 905  8B4D C8           	ret z
 906  8B4E
 907  8B4E              ; Ha habido desplazamiento de la entidad maligna.
 908  8B4E              ; Ha llegado a zona de AMADEUS ???
 909  8B4E
 910  8B4E 3A DC 88     7 ld a,(Coordenada_y)
 911  8B51 FE 14        	cp $14
 912  8B53 38 08        	jr c,1F
 913  8B55
 914  8B55              ; ---------
 915  8B55
 916  8B55              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 917  8B55              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 918  8B55
 919  8B55 F3           	di
 920  8B56 CD 66 90     	call Genera_coordenadas_X
 921  8B59 CD A2 90     	call Compara_coordenadas_X
 922  8B5C FB           	ei
 923  8B5D
 924  8B5D              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 925  8B5D
 926  8B5D              ; ---------
 927  8B5D
 928  8B5D CD 71 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 929  8B60 CD 72 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 930  8B63 CD C7 8C     	call Limpia_Variables_de_borrado
 931  8B66
 932  8B66 C9           3 ret
 933  8B67
 934  8B67              ; --------------------------------------------------------------------------------------------------------------
 935  8B67              ;
 936  8B67              ;	29/1/23
 937  8B67
 938  8B67              Mov_Amadeus
 939  8B67
 940  8B67              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 941  8B67
 942  8B67 CD 5E 9A     	call Mov_right
 943  8B6A
 944  8B6A 3A 05 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 945  8B6D CB 67        	bit 4,a
 946  8B6F C8           	ret z
 947  8B70
 948  8B70              ; ---------
 949  8B70
 950  8B70 CD 71 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 951  8B73 CD 62 8E     	call Repone_datos_de_borrado_Amadeus
 952  8B76 CD C7 8C     	call Limpia_Variables_de_borrado
 953  8B79
 954  8B79 C9           	ret
 955  8B7A
 956  8B7A              ; -----------------------------------------------------------------------------------
 957  8B7A              ;
 958  8B7A              ;	12/12/23
 959  8B7A              ;
 960  8B7A              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 961  8B7A
 962  8B7A              Inicia_entidad
 963  8B7A
 964  8B7A              ;	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 965  8B7A CD 27 8D     	call Inicia_Puntero_objeto
 966  8B7D CD BE 99     	call Recompone_posicion_inicio
 967  8B80 CD 9D 93     	call Draw
 968  8B83 CD AF 8B     	call Guarda_movimiento_masticado
 969  8B86 CD 16 71     	call Guarda_foto_registros
 970  8B89 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 971  8B8A              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 972  8B8A              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 973  8B8A CD 6F 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 974  8B8D C9           	ret
 975  8B8E
 976  8B8E              ; -----------------------------------------------------------------------------------
 977  8B8E              ;
 978  8B8E              ;	10/01/24
 979  8B8E              ;
 980  8B8E              ;
 981  8B8E
 982  8B8E              Construye_movimientos_masticados_entidad
 983  8B8E
 984  8B8E CD E1 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 985  8B91              ;															; _ el (Contador_de_mov_masticados).
 986  8B91 CD 27 8D     	call Inicia_Puntero_objeto
 987  8B94 CD BE 99     	call Recompone_posicion_inicio
 988  8B97 CD 9D 93     1 call Draw
 989  8B9A CD AF 8B     	call Guarda_movimiento_masticado
 990  8B9D CD 22 9F     	call Movimiento
 991  8BA0 18 F5        	jr 1B
 992  8BA2
 993  8BA2              ;	Hemos completado el almacén de movimientos masticados de la entidad.
 994  8BA2              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
 995  8BA2
 996  8BA2 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
 997  8BA5 22 01 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 998  8BA8
 999  8BA8              ;	Reinicializamos el (Contador_de_mov_masticados).
1000  8BA8
1001  8BA8 21 00 00     	ld hl,0
1002  8BAB 22 03 89     	ld (Contador_de_mov_masticados),hl
1003  8BAE
1004  8BAE C9           	ret
1005  8BAF
1006  8BAF              ; -----------------------------------------------------------------------------------
1007  8BAF              ;
1008  8BAF              ;	28/12/23
1009  8BAF              ;
1010  8BAF              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1011  8BAF              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1012  8BAF
1013  8BAF              Guarda_movimiento_masticado
1014  8BAF
1015  8BAF ED 73 2B 89  	ld (Stack),sp
1016  8BB3 ED 7B 01 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1017  8BB7
1018  8BB7 E5           	push hl
1019  8BB8 DD E5            push ix
1020  8BBA FD E5            push iy
1021  8BBC
1022  8BBC ED 7B 2B 89      ld sp,(Stack)
1023  8BC0
1024  8BC0 E5               push hl
1025  8BC1
1026  8BC1 2A 03 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1027  8BC4 23           	inc hl
1028  8BC5 22 03 89     	ld (Contador_de_mov_masticados),hl
1029  8BC8
1030  8BC8 22 18 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
1031  8BCB
1032  8BCB E1           	pop hl
1033  8BCC
1034  8BCC CD E1 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1035  8BCF              ;															; _ el (Contador_de_mov_masticados).
1036  8BCF C9               ret
1037  8BD0
1038  8BD0              ; --------------------------------------------------------------------------------------------------------------
1039  8BD0              ;
1040  8BD0              ;	12/12/23
1041  8BD0              ;
1042  8BD0
1043  8BD0              Inicia_entidad_guia
1044  8BD0
1045  8BD0              ; Existe "Entidad_guía" ???
1046  8BD0
1047  8BD0 3A 39 89     	ld a,(Ctrl_3)
1048  8BD3 CB 4F        	bit 1,a
1049  8BD5 C0           	ret nz
1050  8BD6
1051  8BD6              ; Inicia Entidad_guía:
1052  8BD6
1053  8BD6 21 16 89     	ld hl,Ctrl_2
1054  8BD9 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1055  8BDB 21 39 89     	ld hl,Ctrl_3
1056  8BDE CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1057  8BE0
1058  8BE0 C9           	ret
1059  8BE1
1060  8BE1              ; --------------------------------------------------------------------------------------------------------------
1061  8BE1              ;
1062  8BE1              ;	10/1/24
1063  8BE1              ;
1064  8BE1
1065  8BE1              Actualiza_Puntero_de_almacen_de_mov_masticados
1066  8BE1
1067  8BE1 E5           	push hl
1068  8BE2 C5           	push bc
1069  8BE3
1070  8BE3 2A 01 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1071  8BE6 01 06 00     	ld bc,6
1072  8BE9 A7           	and a
1073  8BEA ED 4A        	adc hl,bc
1074  8BEC 22 01 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1075  8BEF
1076  8BEF C1           	pop bc
1077  8BF0 E1           	pop hl
1078  8BF1
1079  8BF1 C9           	ret
1080  8BF2
1081  8BF2              ; --------------------------------------------------------------------------------------------------------------
1082  8BF2              ;
1083  8BF2              ;	28/12/23
1084  8BF2              ;
1085  8BF2              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1086  8BF2              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1087  8BF2
1088  8BF2              Guarda_foto_entidad_a_pintar
1089  8BF2
1090  8BF2 3A 05 89     	ld a,(Ctrl_0)
1091  8BF5 CB 77        	bit 6,a
1092  8BF7 28 0A        	jr z,5F
1093  8BF9
1094  8BF9              ; Guarda la foto de Amadeus.
1095  8BF9
1096  8BF9 CD 9D 93     	call Draw
1097  8BFC
1098  8BFC CD AF 8B     	call Guarda_movimiento_masticado	;! Provisional
1099  8BFF
1100  8BFF CD 16 71     	call Guarda_foto_registros
1101  8C02
1102  8C02              ;	di
1103  8C02              ;	jr $
1104  8C02              ;	ei
1105  8C02
1106  8C02 C9           	ret
1107  8C03
1108  8C03              ; ENTIDADES!
1109  8C03              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1110  8C03
1111  8C03 3A 39 89     5 ld a,(Ctrl_3)
1112  8C06 CB 5F        	bit 3,a
1113  8C08 28 04        	jr z,1F
1114  8C0A
1115  8C0A              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1116  8C0A
1117  8C0A CD 45 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1118  8C0D C9           	ret
1119  8C0E
1120  8C0E              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1121  8C0E
1122  8C0E 3A 39 89     1 ld a,(Ctrl_3)
1123  8C11 CB 57        	bit 2,a
1124  8C13 20 10        	jr nz,6F
1125  8C15
1126  8C15              ; Entidad guía o fantasma ???
1127  8C15
1128  8C15 3A 16 89     	ld a,(Ctrl_2)
1129  8C18 CB 6F        	bit 5,a
1130  8C1A 20 10        	jr nz,3F
1131  8C1C
1132  8C1C              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1133  8C1C
1134  8C1C 18 EC        	jr 4B
1135  8C1E
1136  8C1E              ; ENTIDAD_GUÍA:
1137  8C1E              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1138  8C1E              ; _guardando "movimientos_masticados".
1139  8C1E
1140  8C1E 3A 39 89     2 ld a,(Ctrl_3)
1141  8C21 CB 57        	bit 2,a
1142  8C23 28 07        	jr z,3F
1143  8C25
1144  8C25              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1145  8C25              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1146  8C25
1147  8C25 CB 97        6 res 2,a
1148  8C27 CB DF        	set 3,a
1149  8C29 32 39 89     	ld (Ctrl_3),a
1150  8C2C
1151  8C2C
1152  8C2C              ;	Esto sólo lo ejecuta una entidad guía.
1153  8C2C
1154  8C2C CD 9D 93     3 	call Draw
1155  8C2F CD AF 8B     	call Guarda_movimiento_masticado
1156  8C32 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1157  8C35
1158  8C35              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1159  8C35              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1160  8C35
1161  8C35 CD 39 8C     	call Convierte_guia_en_fantasma
1162  8C38 C9           	ret
1163  8C39
1164  8C39              ; --------------------------------------------------------------------------------------------------------------
1165  8C39              ;
1166  8C39              ;	28/12/23
1167  8C39              ;
1168  8C39
1169  8C39 3A 39 89     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1170  8C3C CB 5F        	bit 3,a
1171  8C3E C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1172  8C3F
1173  8C3F              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1174  8C3F
1175  8C3F 21 16 89     	ld hl,Ctrl_2
1176  8C42 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1177  8C44
1178  8C44 C9           	ret
1179  8C45
1180  8C45              ; --------------------------------------------------------------------------------------------------------------
1181  8C45              ;
1182  8C45              ;	21/12/23
1183  8C45              ;
1184  8C45              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1185  8C45              ;
1186  8C45              ;		IY contiene (Puntero_objeto).
1187  8C45              ;		IX contiene el puntero de impresión.
1188  8C45              ;		HL contiene la dirección de la rutina de impresión.
1189  8C45              ;
1190  8C45              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1191  8C45              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1192  8C45              ;	Decrementa el (Contador_de_mov_masticados)
1193  8C45              ;
1194  8C45              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1195  8C45              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1196  8C45              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1197  8C45
1198  8C45
1199  8C45 ED 73 2B 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1200  8C49 ED 7B 01 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1201  8C4D
1202  8C4D FD E1        	pop iy
1203  8C4F DD E1        	pop ix
1204  8C51 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1205  8C52
1206  8C52 ED 73 01 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1207  8C56 ED 7B 2B 89  	ld sp,(Stack)
1208  8C5A
1209  8C5A CD 16 71     	call Guarda_foto_registros
1210  8C5D
1211  8C5D E5           	push hl
1212  8C5E
1213  8C5E 2A 03 89     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1214  8C61 23           	inc hl
1215  8C62 22 03 89     	ld (Contador_de_mov_masticados),hl
1216  8C65
1217  8C65              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1218  8C65
1219  8C65 ED 4B 18 89  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1220  8C69 A7           	and a
1221  8C6A ED 42        	sbc hl,bc
1222  8C6C CC 39 8C     	call z,Convierte_guia_en_fantasma
1223  8C6F
1224  8C6F E1           	pop hl
1225  8C70
1226  8C70 C9           	ret
1227  8C71
1228  8C71              ; --------------------------------------------------------------------------------------------------------------
1229  8C71              ;
1230  8C71              ;	19/9/23
1231  8C71
1232  8C71              Prepara_var_pintado
1233  8C71
1234  8C71 21 D5 88     	ld hl,Filas
1235  8C74 11 F5 88     	ld de,Variables_de_pintado
1236  8C77 01 08 00     	ld bc,8
1237  8C7A ED B0        	ldir
1238  8C7C C9           	ret
1239  8C7D
1240  8C7D              ; --------------------------------------------------------------------------------------------------------------
1241  8C7D
1242  8C7D              Repone_pintar
1243  8C7D
1244  8C7D 21 F5 88     	ld hl,Variables_de_pintado
1245  8C80 11 D5 88     	ld de,Filas
1246  8C83 01 08 00     	ld bc,8
1247  8C86 ED B0        	ldir
1248  8C88 C9           	ret
1249  8C89
1250  8C89              ; *************************************************************************************************************************************************************
1251  8C89              ;
1252  8C89              ; 8/1/23
1253  8C89              ;
1254  8C89              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1255  8C89              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1256  8C89              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1257  8C89
1258  8C89              ; Destruye HL y DE !!!!!
1259  8C89
1260  8C89              Inicia_punteros_de_cajas
1261  8C89
1262  8C89 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
1263  8C8C CD 21 8D         call Extrae_address
1264  8C8F 22 1D 89         ld (Puntero_store_caja),hl
1265  8C92 21 6E 85     	ld hl,Indice_de_cajas_de_entidades+2
1266  8C95 22 21 89     	ld (Indice_restore_caja),hl
1267  8C98 CD 21 8D     	call Extrae_address
1268  8C9B 22 1F 89     	ld (Puntero_restore_caja),hl
1269  8C9E C9               ret
1270  8C9F
1271  8C9F              ; *************************************************************************************************************************************************************
1272  8C9F              ;
1273  8C9F              ; 8/1/23
1274  8C9F              ;
1275  8C9F              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1276  8C9F
1277  8C9F 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1278  8CA2 22 3B 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1279  8CA5 C9           	ret
1280  8CA6 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1281  8CA9 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1282  8CAC C9           	ret
1283  8CAD
1284  8CAD              ; -------------------------------------------------------------------------------------------------------------
1285  8CAD              ;
1286  8CAD              ; 21/9/23
1287  8CAD              ;
1288  8CAD
1289  8CAD              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1290  8CAD
1291  8CAD              Limpia_album_Amadeus
1292  8CAD
1293  8CAD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1294  8CB0 7E           	ld a,(hl)
1295  8CB1 A7           	and a
1296  8CB2 C8           	ret z
1297  8CB3
1298  8CB3 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1299  8CB6 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1300  8CB9 01 0B 00     	ld bc,11
1301  8CBC AF           	xor a
1302  8CBD 77           	ld (hl),a
1303  8CBE ED B0        	ldir
1304  8CC0
1305  8CC0 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1306  8CC3 22 37 89     	ld (End_Snapshot_Amadeus),hl
1307  8CC6
1308  8CC6 C9           	ret
1309  8CC7
1310  8CC7 21 EF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1311  8CCA 11 F0 88     	ld de,Variables_de_borrado+1
1312  8CCD 01 05 00     	ld bc,5
1313  8CD0 AF           	xor a
1314  8CD1 77           	ld (hl),a
1315  8CD2 ED B0        	ldir
1316  8CD4 C9           	ret
1317  8CD5
1318  8CD5              ; -------------------------------------------------------------------------------------------------------------
1319  8CD5              ;
1320  8CD5              ; 8/9/23
1321  8CD5              ;
1322  8CD5
1323  8CD5              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1324  8CD5              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1325  8CD5
1326  8CD5              Calcula_numero_de_malotes
1327  8CD5
1328  8CD5 21 00 70     	ld hl,Album_de_fotos
1329  8CD8 EB           	ex de,hl
1330  8CD9 2A 31 89     	ld hl,(Stack_snapshot)
1331  8CDC
1332  8CDC 06 00        	ld b,0
1333  8CDE 7D           	ld a,l
1334  8CDF 93           	sub e
1335  8CE0 28 07        	jr z,1F
1336  8CE2
1337  8CE2              ; Nº de malotes no es "0".
1338  8CE2
1339  8CE2 D6 06        2 sub 6
1340  8CE4 04           	inc b
1341  8CE5 A7           	and a
1342  8CE6 20 FA        	jr nz,2B
1343  8CE8 78           	ld a,b
1344  8CE9
1345  8CE9 32 26 89     1 ld (Numero_de_malotes),a
1346  8CEC C9           	ret
1347  8CED
1348  8CED              ; -------------------------------------------------------------------------------------------------------------
1349  8CED              ;
1350  8CED              ; 8/9/23
1351  8CED              ;
1352  8CED
1353  8CED              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1354  8CED              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1355  8CED
1356  8CED              Calcula_malotes_Amadeus
1357  8CED
1358  8CED 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1359  8CF0 EB           	ex de,hl
1360  8CF1 2A 37 89     	ld hl,(End_Snapshot_Amadeus)
1361  8CF4
1362  8CF4 7C           	ld a,h
1363  8CF5 A7           	and a
1364  8CF6 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1365  8CF8
1366  8CF8 06 00        	ld b,0
1367  8CFA 7D           	ld a,l
1368  8CFB 93           	sub e
1369  8CFC 28 07        	jr z,1F
1370  8CFE
1371  8CFE              ; Nº de malotes no es "0".
1372  8CFE
1373  8CFE D6 06        2 sub 6
1374  8D00 04           	inc b
1375  8D01 A7           	and a
1376  8D02 20 FA        	jr nz,2B
1377  8D04 78           	ld a,b
1378  8D05
1379  8D05 32 26 89     1 ld (Numero_de_malotes),a
1380  8D08 C9           	ret
1381  8D09
1382  8D09              ; -------------------------------------------------------------------------------------------------------------
1383  8D09              ;
1384  8D09              ; 28/2/23
1385  8D09              ;
1386  8D09
1387  8D09              Calcula_numero_de_disparotes
1388  8D09
1389  8D09 21 56 70     	ld hl,Album_de_fotos_disparos
1390  8D0C EB           	ex de,hl
1391  8D0D 2A 35 89     	ld hl,(End_Snapshot_disparos)
1392  8D10
1393  8D10 06 00        	ld b,0
1394  8D12 7D           	ld a,l
1395  8D13 93           	sub e
1396  8D14 28 07        	jr z,1F
1397  8D16
1398  8D16              ; Nº de malotes no es "0".
1399  8D16
1400  8D16 D6 06        2 sub 6
1401  8D18 04           	inc b
1402  8D19 A7           	and a
1403  8D1A 20 FA        	jr nz,2B
1404  8D1C 78           	ld a,b
1405  8D1D
1406  8D1D 32 3A 89     1 ld (Numero_de_disparotes),a
1407  8D20 C9           	ret
1408  8D21
1409  8D21              ; *************************************************************************************************************************************************************
1410  8D21              ;
1411  8D21              ; 20/10/22
1412  8D21              ;
1413  8D21              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1414  8D21              ;
1415  8D21              ; Destruye el puntero y DE !!!!!
1416  8D21
1417  8D21 5E           Extrae_address ld e,(hl)
1418  8D22 23           	inc hl
1419  8D23 56           	ld d,(hl)
1420  8D24 2B           	dec hl
1421  8D25 EB           	ex de,hl
1422  8D26 C9           	ret
1423  8D27
1424  8D27              ; *************************************************************************************************************************************************************
1425  8D27              ;
1426  8D27              ;	7/2/23
1427  8D27              ;
1428  8D27              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1429  8D27              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1430  8D27              ;
1431  8D27              ;   Destruye HL y BC !!!!!,
1432  8D27              ;
1433  8D27              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1434  8D27              ;					"0" ..... Izquierda.
1435  8D27
1436  8D27              Inicia_Puntero_objeto
1437  8D27
1438  8D27 3A E9 88     	ld a,(Cuad_objeto)
1439  8D2A E6 01        	and 1
1440  8D2C F5           	push af
1441  8D2D CC 4B 8D     	call z,Inicia_puntero_objeto_izq
1442  8D30 F1           	pop af
1443  8D31 28 2B        	jr z,1F
1444  8D33 CD 38 8D     	call Inicia_puntero_objeto_der
1445  8D36 18 26        	jr 1F
1446  8D38
1447  8D38              ; Arrancamos desde la parte izquierda de la pantalla.
1448  8D38              ; Iniciamos (Indice_Sprite_der).
1449  8D38
1450  8D38 2A DF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1451  8D3B 22 E3 88     	ld (Puntero_DESPLZ_der),hl
1452  8D3E CD 21 8D     	call Extrae_address
1453  8D41 22 D9 88     	ld (Puntero_objeto),hl
1454  8D44
1455  8D44 2A E1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1456  8D47 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
1457  8D4A C9           	ret
1458  8D4B
1459  8D4B              ; Arrancamos desde la parte derecha de la pantalla.
1460  8D4B              ; Iniciamos (Indice_Sprite_izq).
1461  8D4B
1462  8D4B 2A E1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1463  8D4E 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
1464  8D51 CD 21 8D     	call Extrae_address
1465  8D54 22 D9 88     	ld (Puntero_objeto),hl
1466  8D57
1467  8D57 2A DF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1468  8D5A 22 E3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1469  8D5D C9           	ret
1470  8D5E
1471  8D5E              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1472  8D5E
1473  8D5E 21 40 83     1 ld hl,Amadeus
1474  8D61 ED 4B D9 88  	ld bc,(Puntero_objeto)
1475  8D65 B7 ED 42     	sub hl,bc
1476  8D68 C0           	ret nz
1477  8D69 21 05 89     	ld hl,Ctrl_0
1478  8D6C CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1479  8D6E C9           	ret 												; _de nuestra nave en los extremos.
1480  8D6F
1481  8D6F              ; *************************************************************************************************************************************************************
1482  8D6F              ;
1483  8D6F              ;	21/12/23
1484  8D6F              ;
1485  8D6F              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1486  8D6F              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1487  8D6F
1488  8D6F              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1489  8D6F              ;	_de la 2ª y 3ª entidad respectivamente.
1490  8D6F
1491  8D6F              Store_Restore_cajas
1492  8D6F
1493  8D6F E5           	push hl
1494  8D70 D5           	push de
1495  8D71 C5            	push bc
1496  8D72
1497  8D72              ;	STORE !!!!!
1498  8D72              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1499  8D72
1500  8D72 F3           	di
1501  8D73 21 D5 88     	ld hl,Filas
1502  8D76 ED 5B 1D 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1503  8D7A 01 43 00     	ld bc,67
1504  8D7D ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1505  8D7F FB           	ei
1506  8D80
1507  8D80              ; 	Entidad_sospechosa. 20/4/23
1508  8D80
1509  8D80 3A EE 88     	ld a,(Impacto)
1510  8D83 A7           	and a
1511  8D84 28 0C        	jr z,1F
1512  8D86
1513  8D86 2A 1D 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1514  8D89 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1515  8D8C A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1516  8D8D ED 4A        	adc hl,bc 											; _ "0" más adelante.
1517  8D8F 22 40 89     	ld (Entidad_sospechosa_de_colision),hl
1518  8D92
1519  8D92              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1520  8D92
1521  8D92 2A 1F 89     1 ld hl,(Puntero_restore_caja)
1522  8D95 7E           	ld a,(hl)
1523  8D96 A7           	and a
1524  8D97 F5           	push af
1525  8D98 28 0A        	jr z,2F
1526  8D9A
1527  8D9A F3           	di
1528  8D9B 11 D5 88     	ld de,Filas
1529  8D9E 01 43 00     	ld bc,67
1530  8DA1 ED B0        	ldir
1531  8DA3 FB           	ei
1532  8DA4
1533  8DA4 CD C0 8D     2 call Incrementa_punteros_de_cajas
1534  8DA7
1535  8DA7 F1           	pop af
1536  8DA8 28 E8        	jr z,1B
1537  8DAA
1538  8DAA C1           	pop bc
1539  8DAB D1           	pop de
1540  8DAC E1           	pop hl
1541  8DAD
1542  8DAD C9           	ret
1543  8DAE
1544  8DAE              ; **************************************************************************************************
1545  8DAE              ;
1546  8DAE              ;	21/12/23
1547  8DAE              ;
1548  8DAE              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1549  8DAE
1550  8DAE E5           Restore_entidad push hl
1551  8DAF D5           	push de
1552  8DB0 C5            	push bc
1553  8DB1
1554  8DB1 2A 1D 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1555  8DB4 11 D5 88     	ld de,Filas
1556  8DB7 01 43 00     	ld bc,67
1557  8DBA ED B0        	ldir
1558  8DBC
1559  8DBC C1           	pop bc
1560  8DBD D1           	pop de
1561  8DBE E1           	pop hl
1562  8DBF C9           	ret
1563  8DC0
1564  8DC0              ; **************************************************************************************************
1565  8DC0              ;
1566  8DC0              ;	08/05/23
1567  8DC0              ;
1568  8DC0              ;	Incrementamos los dos punteros de entidades. (+1).
1569  8DC0
1570  8DC0              Incrementa_punteros_de_cajas
1571  8DC0
1572  8DC0 2A 1F 89     	ld hl,(Puntero_restore_caja)
1573  8DC3 22 1D 89     	ld (Puntero_store_caja),hl
1574  8DC6 2A 21 89     	ld hl,(Indice_restore_caja)
1575  8DC9 23           	inc hl
1576  8DCA 23           	inc hl
1577  8DCB 22 21 89     	ld (Indice_restore_caja),hl
1578  8DCE CD 21 8D         call Extrae_address
1579  8DD1 22 1F 89         ld (Puntero_restore_caja),hl
1580  8DD4 C9               ret
1581  8DD5
1582  8DD5              ; **************************************************************************************************
1583  8DD5              ;
1584  8DD5              ;	21/12/23
1585  8DD5              ;
1586  8DD5              ;	Restore_Amadeus
1587  8DD5              ;
1588  8DD5              ;	Cargamos en DRAW los parámetros de Amadeus.
1589  8DD5              ;
1590  8DD5
1591  8DD5 E5           Restore_Amadeus	push hl
1592  8DD6 D5           	push de
1593  8DD7 C5            	push bc
1594  8DD8 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1595  8DDB 11 D5 88     	ld de,Filas
1596  8DDE 01 43 00     	ld bc,67
1597  8DE1 ED B0        	ldir
1598  8DE3 C1           	pop bc
1599  8DE4 D1           	pop de
1600  8DE5 E1           	pop hl
1601  8DE6 C9           	ret
1602  8DE7
1603  8DE7              ; *************************************************************************************************************************************************************
1604  8DE7              ;
1605  8DE7              ;	21/12/23
1606  8DE7              ;
1607  8DE7              ;	Store_Amadeus
1608  8DE7              ;
1609  8DE7              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1610  8DE7              ;
1611  8DE7              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1612  8DE7              ;
1613  8DE7              ;	DESTRUYE: HL y BC y DE.
1614  8DE7
1615  8DE7 21 D5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1616  8DEA 01 43 00     	ld bc,67
1617  8DED ED B0        	ldir
1618  8DEF C9           	ret
1619  8DF0
1620  8DF0              ; -----------------------------------------------------------
1621  8DF0              ;
1622  8DF0              ;	21/12/23
1623  8DF0              ;
1624  8DF0              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1625  8DF0              ;
1626  8DF0              ;	Destruye: HL,BC,DE,A
1627  8DF0
1628  8DF0 21 D5 88     Borra_datos_entidad ld hl,Filas
1629  8DF3 01 42 00     	ld bc,66
1630  8DF6 AF           	xor a
1631  8DF7 77           	ld (hl),a
1632  8DF8 11 D6 88     	ld de,Filas+1
1633  8DFB ED B0        	ldir
1634  8DFD C9           	ret
1635  8DFE
1636  8DFE              ; -----------------------------------------------------------
1637  8DFE
1638  8DFE              ; Teclado.
1639  8DFE
1640  8DFE 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1641  8E00 DB FE        	in a,($fe)
1642  8E02 E6 01        	and $01
1643  8E04 28 02        	jr z,1f
1644  8E06 18 F6        	jr Pulsa_ENTER
1645  8E08 C9           1 ret
1646  8E09
1647  8E09              ; **************************************************************************************************
1648  8E09              ;
1649  8E09              ; Temporización.
1650  8E09
1651  8E09              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1652  8E09              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1653  8E09              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1654  8E09              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1655  8E09
1656  8E09              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1657  8E09              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1658  8E09              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1659  8E09
1660  8E09              ; A partir de $4f61 no hace falta DELAY.
1661  8E09
1662  8E09              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1663  8E09
1664  8E09 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1665  8E0C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1666  8E0D 78           	LD A,B
1667  8E0E A7           	AND A
1668  8E0F 20 FB        	JR NZ,wait
1669  8E11 C9           	RET
1670  8E12
1671  8E12              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1672  8E12              ;
1673  8E12              ;	5/3/23
1674  8E12              ;
1675  8E12              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1676  8E12
1677  8E12              Movimiento_Amadeus
1678  8E12
1679  8E12              ; Disparo.
1680  8E12
1681  8E12 3A 50 89     	ld a,(Disparo_Amadeus)
1682  8E15 A7           	and a
1683  8E16 20 02        	jr nz,1F
1684  8E18 18 15        	jr 2F
1685  8E1A
1686  8E1A 3E F7        1 ld a,$f7													; "5" para disparar.
1687  8E1C DB FE        	in a,($fe)
1688  8E1E E6 10        	and $10
1689  8E20
1690  8E20 F5           	push af
1691  8E21 CC C9 8E     	call z,Genera_disparo
1692  8E24 F1           	pop af
1693  8E25 20 08        	jr nz,2F
1694  8E27
1695  8E27 3A 50 89     	ld a,(Disparo_Amadeus)
1696  8E2A EE 01        	xor 1
1697  8E2C 32 50 89     	ld (Disparo_Amadeus),a
1698  8E2F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1699  8E31 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1700  8E33 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1701  8E35 CC 81 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1702  8E38
1703  8E38 3E F7        	ld a,$f7
1704  8E3A DB FE        	in a,($fe)
1705  8E3C E6 01        	and $01
1706  8E3E C8           	ret z
1707  8E3F
1708  8E3F 3E F7        	ld a,$f7
1709  8E41 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1710  8E43 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1711  8E45 CC 5E 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1712  8E48 C9           	ret
1713  8E49
1714  8E49              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1715  8E49              ;
1716  8E49              ;	Rutina provisional para que los malotes cagen balas.
1717  8E49
1718  8E49              Detecta_disparo_entidad
1719  8E49
1720  8E49 3A 53 89     	ld a,(Disparo_entidad)
1721  8E4C A7           	and a
1722  8E4D C8           	ret z
1723  8E4E
1724  8E4E              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1725  8E4E
1726  8E4E              ;	ld a,$7f				; Detecta SPACE.
1727  8E4E              ;	in a,($fe)
1728  8E4E              ;	and 1
1729  8E4E              ;	ret nz
1730  8E4E
1731  8E4E CD C9 8E     	call Genera_disparo
1732  8E51 C9           	ret
1733  8E52
1734  8E52              ; ----------------------------------------------------------------------
1735  8E52              ;
1736  8E52              ;	8/9/23
1737  8E52
1738  8E52 2A 37 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1739  8E55 2B            	dec hl
1740  8E56 7E           	ld a,(hl)
1741  8E57 A7           	and a
1742  8E58 C8           	ret z										; Salimos si es álbum está vacío.
1743  8E59
1744  8E59 11 F4 88     	ld de,Variables_de_borrado+5
1745  8E5C 01 06 00     	ld bc,6
1746  8E5F ED B8        	lddr
1747  8E61 C9           	ret
1748  8E62
1749  8E62              ; ----------------------------------------------------------------------
1750  8E62              ;
1751  8E62              ;	9/9/23
1752  8E62
1753  8E62              Repone_datos_de_borrado_Amadeus
1754  8E62
1755  8E62 21 EF 88     	ld hl,Variables_de_borrado
1756  8E65 11 AC 70     	ld de,Album_de_fotos_Amadeus
1757  8E68 01 06 00     	ld bc,6
1758  8E6B ED B0        	ldir
1759  8E6D
1760  8E6D EB           	ex de,hl
1761  8E6E 22 37 89     	ld (End_Snapshot_Amadeus),hl
1762  8E71
1763  8E71 C9           	ret
1764  8E72
1765  8E72              ; ----------------------------------------------------------------------
1766  8E72              ;
1767  8E72              ;	27/10/23
1768  8E72              ;
1769  8E72
1770  8E72              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1771  8E72              ;	_ Album_de_fotos correspondiente.
1772  8E72
1773  8E72              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1774  8E72              ;	_ durante el proceso de escritura.
1775  8E72
1776  8E72              Repone_datos_de_borrado
1777  8E72
1778  8E72 F3           	di
1779  8E73 ED 5B 31 89  	ld de,(Stack_snapshot)
1780  8E77 21 EF 88     	ld hl,Variables_de_borrado
1781  8E7A 01 06 00     	ld bc,6
1782  8E7D ED B0        	ldir
1783  8E7F FB           	ei
1784  8E80
1785  8E80 EB           	ex de,hl
1786  8E81 22 31 89     	ld (Stack_snapshot),hl
1787  8E84
1788  8E84 C9           	ret
1789  8E85
1790  8E85              ; --------------------------------------------------------------------------------------
1791  8E85
1792  8E85              Pinta_Amadeus
1793  8E85
1794  8E85 CD ED 8C        	call Calcula_malotes_Amadeus
1795  8E88 CD 2D 97     	call Extrae_foto_Amadeus
1796  8E8B CD AD 8C     	call Limpia_album_Amadeus
1797  8E8E
1798  8E8E C9           	ret
1799  8E8F
1800  8E8F              Pinta_entidades
1801  8E8F
1802  8E8F              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1803  8E8F
1804  8E8F 3A 39 89     	ld a,(Ctrl_3)
1805  8E92 CB 47        	bit 0,a
1806  8E94 C8           	ret z
1807  8E95
1808  8E95 CD D5 8C     	call Calcula_numero_de_malotes
1809  8E98 CD AB 96     	call Extrae_foto_entidades
1810  8E9B CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1811  8E9E
1812  8E9E C9           	ret
1813  8E9F
1814  8E9F              ; -----------------------------------------------------------------------------------
1815  8E9F              ;
1816  8E9F              ;	10/12/23
1817  8E9F              ;
1818  8E9F              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1819  8E9F
1820  8E9F              Actualiza_relojes
1821  8E9F
1822  8E9F 3A 39 89     	ld a,(Ctrl_3)
1823  8EA2 CB 47        	bit 0,a
1824  8EA4 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1825  8EA5
1826  8EA5 21 4B 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1827  8EA8 34           	inc (hl)
1828  8EA9
1829  8EA9 34           	inc (hl)
1830  8EAA 35           	dec (hl)
1831  8EAB C0           	ret nz
1832  8EAC
1833  8EAC 21 4C 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1834  8EAF 34           	inc (hl)
1835  8EB0 C9           	ret
1836  8EB1
1837  8EB1              ; ---------------------------------------------------------------
1838  8EB1              ;
1839  8EB1              ;	21/12/23
1840  8EB1
1841  8EB1              Guarda_parametros_DRAW
1842  8EB1
1843  8EB1 21 D5 88     	ld hl,Filas
1844  8EB4 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1845  8EB7 01 43 00     	ld bc,67
1846  8EBA ED B0        	ldir
1847  8EBC C9           	ret
1848  8EBD
1849  8EBD              Recupera_parametros_DRAW
1850  8EBD
1851  8EBD 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1852  8EC0 11 D5 88     	ld de,Filas
1853  8EC3 01 43 00     	ld bc,67
1854  8EC6 ED B0        	ldir
1855  8EC8 C9           	ret
1856  8EC9
1857  8EC9              ; ---------------------------------------------------------------
1858  8EC9
1859  8EC9              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EC9              ; ******************************************************************************************************************************************************************************************
   2+ 8EC9              ;
   3+ 8EC9              ;   21/07/23
   4+ 8EC9              ;
   5+ 8EC9              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EC9              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EC9              ;
   8+ 8EC9              ;
   9+ 8EC9              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EC9              ;
  11+ 8EC9              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EC9              ;               _ hacen las entidades hacia abajo.
  13+ 8EC9              ;
  14+ 8EC9              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EC9              ;
  16+ 8EC9              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EC9              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EC9              ;
  19+ 8EC9              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EC9              ;           _ la bala.
  21+ 8EC9              ;
  22+ 8EC9              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EC9              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EC9              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EC9              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EC9              ;           _ en el momento de generarse la bala)).
  27+ 8EC9
  28+ 8EC9              Genera_disparo
  29+ 8EC9
  30+ 8EC9              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EC9              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EC9              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EC9              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EC9              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EC9              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EC9              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EC9
  38+ 8EC9              ; Exclusiones:
  39+ 8EC9
  40+ 8EC9 3A ED 88         ld a,(Vel_down)
  41+ 8ECC 47               ld b,a
  42+ 8ECD 3A 4A 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8ED0 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8ED1 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8ED2 3A 12 89         ld a,(Columnas)
  46+ 8ED5 47               ld b,a
  47+ 8ED6 3A D6 88         ld a,(Columns)
  48+ 8ED9 B8               cp b
  49+ 8EDA C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EDB
  51+ 8EDB              ; ----- ----- -----
  52+ 8EDB
  53+ 8EDB 3A 05 89         ld a,(Ctrl_0)
  54+ 8EDE CB 77            bit 6,a
  55+ 8EE0 20 06            jr nz,14F
  56+ 8EE2
  57+ 8EE2 3A DC 88         ld a,(Coordenada_y)
  58+ 8EE5 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EE7 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EE8
  61+ 8EE8 21 00 80     14 ld hl,Indice_disparo
  62+ 8EEB 3A DD 88         ld a,(CTRL_DESPLZ)
  63+ 8EEE 4F               ld c,a
  64+ 8EEF 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EF1              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EF1              ;                                            ""        ""       "f9", B="1"
  67+ 8EF1              ;                                            ""        ""       "fb", B="2"
  68+ 8EF1              ;                                            ""        ""       "fb", B="3"
  69+ 8EF1 A7               and a
  70+ 8EF2 28 10            jr z,1F
  71+ 8EF4 E6 01            and 1
  72+ 8EF6 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EF7
  74+ 8EF7 79               ld a,c
  75+ 8EF8 16 F9            ld d,$f9
  76+ 8EFA 23           2 inc hl
  77+ 8EFB 23               inc hl
  78+ 8EFC 04               inc b
  79+ 8EFD BA               cp d
  80+ 8EFE 28 04            jr z,1F
  81+ 8F00 14               inc d
  82+ 8F01 14               inc d
  83+ 8F02 18 F6            jr 2B
  84+ 8F04
  85+ 8F04 CD 21 8D     1 call Extrae_address
  86+ 8F07 E5               push hl
  87+ 8F08 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F0A DD 21 73 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F0E
  90+ 8F0E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F0E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F0E
  93+ 8F0E 3A 05 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F11 CB 77            bit 6,a
  95+ 8F13 20 04            jr nz,19F
  96+ 8F15
  97+ 8F15 AF               xor a
  98+ 8F16 32 53 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F19
 100+ 8F19 3A E9 88     19 ld a,(Cuad_objeto)
 101+ 8F1C FE 02            cp 2
 102+ 8F1E 38 66            jr c,3F
 103+ 8F20 28 64            jr z,3F
 104+ 8F22
 105+ 8F22              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F22
 107+ 8F22 E6 01            and 1
 108+ 8F24 28 30            jr z,4F
 109+ 8F26
 110+ 8F26              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F26              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F26              ;
 113+ 8F26              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F26              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F26              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F26
 117+ 8F26 2A D7 88     	ld hl,(Posicion_actual)
 118+ 8F29
 119+ 8F29              ;   Amadeus o entidad ???.
 120+ 8F29
 121+ 8F29 3A 05 89         ld a,(Ctrl_0)
 122+ 8F2C CB 77            bit 6,a
 123+ 8F2E 28 0A            jr z,8F
 124+ 8F30
 125+ 8F30              ; 	Dispara Amadeus.
 126+ 8F30
 127+ 8F30 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F32 CD 9C 96         call PreviousScan
 129+ 8F35 CD 9C 96         call PreviousScan
 130+ 8F38
 131+ 8F38              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F38              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F38              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F38              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F38
 136+ 8F38 18 11            jr 10F
 137+ 8F3A
 138+ 8F3A              ; 	Dispara Entidad.
 139+ 8F3A
 140+ 8F3A 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F3D              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F3D
 143+ 8F3D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F3D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F3D
 146+ 8F3D C5               push bc
 147+ 8F3E 06 10            ld b,16
 148+ 8F40 CD 8D 96     9 call NextScan
 149+ 8F43 10 FB            djnz 9B
 150+ 8F45 C1               pop bc
 151+ 8F46 CD B0 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F49 18 06            jr 17F
 153+ 8F4B
 154+ 8F4B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F4B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F4B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F4B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F4B
 159+ 8F4B CD B0 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F4E CD 25 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F51              ;                                                      ; _al generar el disparo.
 162+ 8F51
 163+ 8F51              ; 	LLegados a este punto tendremos:
 164+ 8F51              ;
 165+ 8F51              ;       Puntero_objeto_disparo en IY.
 166+ 8F51              ;       Rutinas_de_impresion en IX.
 167+ 8F51              ;       Puntero_de_impresion en HL.
 168+ 8F51              ;       Impacto/Dirección en BC.
 169+ 8F51
 170+ 8F51 CD B8 8F     17 call Almacena_disparo
 171+ 8F54 18 52            jr 6F                                             ; RET.
 172+ 8F56
 173+ 8F56              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F56              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F56              ;
 176+ 8F56              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F56              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F56              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F56
 180+ 8F56 2A D7 88     4 ld hl,(Posicion_actual)
 181+ 8F59
 182+ 8F59              ;   Amadeus o entidad ???.
 183+ 8F59
 184+ 8F59 3A 05 89         ld a,(Ctrl_0)
 185+ 8F5C CB 77            bit 6,a
 186+ 8F5E 28 0A            jr z,11F
 187+ 8F60
 188+ 8F60              ; 	Dispara Amadeus.
 189+ 8F60
 190+ 8F60 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F62 CD 9C 96         call PreviousScan
 192+ 8F65 CD 9C 96         call PreviousScan
 193+ 8F68
 194+ 8F68              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F68              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F68              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F68              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F68
 199+ 8F68 18 11            jr 13F
 200+ 8F6A
 201+ 8F6A              ; 	Dispara Entidad.
 202+ 8F6A
 203+ 8F6A 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F6D              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F6D
 206+ 8F6D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F6D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F6D
 209+ 8F6D C5               push bc
 210+ 8F6E 06 10            ld b,16
 211+ 8F70 CD 8D 96     12 call NextScan
 212+ 8F73 10 FB            djnz 12B
 213+ 8F75 C1               pop bc
 214+ 8F76
 215+ 8F76 CD A9 8F         call Ajusta_disparo_parte_derecha
 216+ 8F79 18 06            jr 18F
 217+ 8F7B
 218+ 8F7B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F7B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F7B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F7B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F7B
 223+ 8F7B CD A9 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F7E CD 25 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F81              ;                                                       ; _al generar el disparo.
 226+ 8F81
 227+ 8F81              ; LLegados a este punto tendremos:
 228+ 8F81              ;
 229+ 8F81              ;       Puntero_objeto_disparo en IY.
 230+ 8F81              ;       Rutinas_de_impresion en IX.
 231+ 8F81              ;       Puntero_de_impresion en HL.
 232+ 8F81              ;       Impacto/Dirección en BC.
 233+ 8F81
 234+ 8F81 CD B8 8F     18 call Almacena_disparo
 235+ 8F84 18 22            jr 6F                                               ; RET.
 236+ 8F86
 237+ 8F86              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F86
 239+ 8F86 28 11        3 jr z,5F
 240+ 8F88
 241+ 8F88              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F88              ;
 243+ 8F88              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F88              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F88              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F88              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F88
 248+ 8F88              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F88              ;	   ""        ""       "f9", B="1"
 250+ 8F88              ;	   ""        ""       "fb", B="2"
 251+ 8F88              ; 	   ""        ""       "fb", B="3"
 252+ 8F88
 253+ 8F88 2A D7 88     	ld hl,(Posicion_actual)
 254+ 8F8B CD 8D 96     	call NextScan
 255+ 8F8E
 256+ 8F8E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F8E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F8E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F8E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F8E
 261+ 8F8E CD B0 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F91
 263+ 8F91              ; 	No se produce impacto. B="$80"
 264+ 8F91              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F91
 266+ 8F91 01 80 80         ld bc,$8080
 267+ 8F94
 268+ 8F94              ; 	LLegados a este punto tendremos:
 269+ 8F94              ;
 270+ 8F94              ;       Puntero_objeto_disparo en IY.
 271+ 8F94              ;       Rutinas_de_impresion en IX.
 272+ 8F94              ;       Puntero_de_impresion en HL.
 273+ 8F94              ;       Impacto/Dirección en BC.
 274+ 8F94
 275+ 8F94 CD B8 8F         call Almacena_disparo
 276+ 8F97 18 0F            jr 6F                                           ; RET.
 277+ 8F99
 278+ 8F99              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F99              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F99              ;
 281+ 8F99              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F99              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F99              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F99              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F99
 286+ 8F99 2A D7 88     5 ld hl,(Posicion_actual)
 287+ 8F9C CD 8D 96     	call NextScan
 288+ 8F9F
 289+ 8F9F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F9F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F9F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F9F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F9F
 294+ 8F9F CD A9 8F         call Ajusta_disparo_parte_derecha
 295+ 8FA2
 296+ 8FA2              ; 	No se produce impacto. B="$80"
 297+ 8FA2              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FA2
 299+ 8FA2 01 80 80     15 ld bc,$8080
 300+ 8FA5
 301+ 8FA5              ; 	LLegados a este punto tendremos:
 302+ 8FA5              ;
 303+ 8FA5              ;       Puntero_objeto_disparo en IY.
 304+ 8FA5              ;       Rutinas_de_impresion en IX.
 305+ 8FA5              ;       Puntero_de_impresion en HL.
 306+ 8FA5              ;       Impacto/Dirección en BC.
 307+ 8FA5
 308+ 8FA5 CD B8 8F         call Almacena_disparo
 309+ 8FA8
 310+ 8FA8 C9           6 ret
 311+ 8FA9
 312+ 8FA9              ; ----------------------------------------------------------------
 313+ 8FA9              ;
 314+ 8FA9              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FA9              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FA9              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FA9
 318+ 8FA9 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FAA FE 02            cp 2
 320+ 8FAC 38 01            jr c,1F
 321+ 8FAE 23               inc hl
 322+ 8FAF C9           1 ret
 323+ 8FB0
 324+ 8FB0 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FB1 FE 01        	cp 1
 326+ 8FB3 20 01        	jr nz,1F
 327+ 8FB5 2B           	dec hl
 328+ 8FB6 2B           1 dec hl
 329+ 8FB7 C9               ret
 330+ 8FB8
 331+ 8FB8              ; ----------------------------------------------------------------
 332+ 8FB8              ;
 333+ 8FB8              ;   25/02/23
 334+ 8FB8              ;
 335+ 8FB8              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FB8              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FB8              ;
 338+ 8FB8              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FB8              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FB8
 341+ 8FB8              Almacena_disparo
 342+ 8FB8
 343+ 8FB8 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FB9 F1               pop af
 345+ 8FBA 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FBB
 347+ 8FBB 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FBC E6 01            and 1
 349+ 8FBE 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FC0              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FC0              ; 	Dispara AMADEUS.
 352+ 8FC0
 353+ 8FC0              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FC0              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FC0              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FC0              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FC0
 358+ 8FC0 C5               push bc
 359+ 8FC1 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FC4 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FC7 A7               and a
 362+ 8FC8 ED 42            sbc hl,bc
 363+ 8FCA CC A6 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FCD C1               pop bc
 365+ 8FCE 28 54            jr z,4F
 366+ 8FD0
 367+ 8FD0 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FD3 23               inc hl
 369+ 8FD4 23               inc hl
 370+ 8FD5 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FD8              ;                                                   ; _ Disparo_(+1).
 372+ 8FD8 18 18            jr 2F
 373+ 8FDA
 374+ 8FDA              ; Dispara una entidad.
 375+ 8FDA
 376+ 8FDA C5           1 push bc
 377+ 8FDB 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FDE 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FE1 A7               and a
 380+ 8FE2 ED 42            sbc hl,bc
 381+ 8FE4 CC 9F 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FE7 C1               pop bc
 383+ 8FE8 28 3A            jr z,4F
 384+ 8FEA
 385+ 8FEA 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FED 23               inc hl
 387+ 8FEE 23               inc hl
 388+ 8FEF 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FF2              ;                                                   ; _ Disparo_(+1).
 390+ 8FF2 CD 21 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FF5              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FF5              ;
 393+ 8FF5              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FF5              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FF5              ;                                                     Puntero_de_impresion en HL.
 396+ 8FF5              ;                                                     Impacto/Dirección en BC.
 397+ 8FF5
 398+ 8FF5 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FF6 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FF7 23               inc hl                                          ; _ al siguiente.
 401+ 8FF8 A7               and a
 402+ 8FF9 20 C0            jr nz,3B
 403+ 8FFB
 404+ 8FFB 08               ex af,af
 405+ 8FFC ED 73 2B 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9000 F9               ld sp,hl
 407+ 9001
 408+ 9001 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9003 F5               push af                                         ; Puntero de impresión.
 410+ 9004 FD E5            push iy                                         ; Puntero objeto.
 411+ 9006 C5               push bc                                         ; Control.
 412+ 9007
 413+ 9007 ED 7B 2B 89      ld sp,(Stack)
 414+ 900B
 415+ 900B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 900B
 417+ 900B 21 1A 89     	ld hl,Ctrl_1
 418+ 900E CB C6        	set 0,(hl)
 419+ 9010
 420+ 9010 DD E5        	push ix
 421+ 9012 E1               pop hl
 422+ 9013 F5               push af
 423+ 9014 DD E1            pop ix
 424+ 9016
 425+ 9016 CD 16 71     	call Guarda_foto_registros
 426+ 9019
 427+ 9019 21 1A 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 901C CB 86        	res 0,(hl)
 429+ 901E
 430+ 901E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 901E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 901E
 433+ 901E CD A6 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9021 CD 9F 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9024
 436+ 9024 C9           4 ret
 437+ 9025
 438+ 9025              ; ----------------------------------------------------------------
 439+ 9025              ;
 440+ 9025              ;   4/3/23
 441+ 9025              ;
 442+ 9025              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9025              ;   _ al generarse el disparo.
 444+ 9025              ;
 445+ 9025              ;       "$80" ..... No se produce colisión.
 446+ 9025              ;       "$81" ..... Se produce colisión.
 447+ 9025              ;
 448+ 9025              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9025              ;         _ que forman el disparo.
 450+ 9025
 451+ 9025
 452+ 9025              Comprueba_Colision
 453+ 9025
 454+ 9025              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9025
 456+ 9025 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9027 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9028
 459+ 9028 CD 5E 90         call Modifica_H_Velocidad_disparo
 460+ 902B
 461+ 902B 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 902C FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 902E 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9030
 465+ 9030 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9032 CD 4E 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9035
 468+ 9035 7B               ld a,e
 469+ 9036 E6 01            and 1
 470+ 9038 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 903A              ;                                                  ; _ para activar IMPACTO.
 472+ 903A E1               pop hl
 473+ 903B E5               push hl
 474+ 903C CD 8D 96         call NextScan
 475+ 903F
 476+ 903F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9040 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9042 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9044              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9044 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9046 CD 4E 90         call Bucle_2
 482+ 9049
 483+ 9049 43           1 ld b,e
 484+ 904A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 904B FD E1            pop iy
 486+ 904D C9               ret
 487+ 904E
 488+ 904E              ; ---------- ----------
 489+ 904E
 490+ 904E 06 02        Bucle_2 ld b,2
 491+ 9050 FD 7E 00     2 ld a,(iy)
 492+ 9053 A6               and (hl)
 493+ 9054 28 02            jr z,1F
 494+ 9056 1E 81            ld e,$81
 495+ 9058 23           1 inc hl
 496+ 9059 FD 23            inc iy
 497+ 905B 10 F3            djnz 2B
 498+ 905D C9               ret
 499+ 905E
 500+ 905E              ; ---------- ----------
 501+ 905E              ;
 502+ 905E              ;   21/7/23
 503+ 905E
 504+ 905E              Modifica_H_Velocidad_disparo
 505+ 905E
 506+ 905E 3A 4A 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9061 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9063 D0               ret nc                                         ; _ incrementamos H.
 509+ 9064 24               inc h
 510+ 9065
 511+ 9065 C9               ret
 512+ 9066
 513+ 9066              ; -------------------------------------------------------------------------------------------------------------
 514+ 9066              ;
 515+ 9066              ;   04/12/23
 516+ 9066              ;
 517+ 9066              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9066              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9066              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9066              ;
 521+ 9066              ;   MODIFICA: HL,DE,B y A.
 522+ 9066
 523+ 9066              Genera_coordenadas_X
 524+ 9066
 525+ 9066              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9066              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9066
 528+ 9066              ;   Limpiamos almacenes.
 529+ 9066
 530+ 9066 CD 97 90         call Limpia_Coordenadas_X
 531+ 9069
 532+ 9069              ;   Almacenamos coordenadas X.
 533+ 9069
 534+ 9069              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9069
 536+ 9069 2A FF 88         ld hl,(Puntero_de_impresion)
 537+ 906C 11 47 89         ld de,Coordenadas_X_Entidad
 538+ 906F 06 02            ld b,2
 539+ 9071
 540+ 9071 3A DD 88         ld a,(CTRL_DESPLZ)
 541+ 9074 A7               and a
 542+ 9075 28 01            jr z,1F
 543+ 9077 04               inc b
 544+ 9078
 545+ 9078 CD 8E 90     1 call Guarda_coordenadas_X
 546+ 907B
 547+ 907B              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 907B
 549+ 907B 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 907E 11 44 89         ld de,Coordenadas_X_Amadeus
 551+ 9081 06 02            ld b,2
 552+ 9083
 553+ 9083 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 9086 A7               and a
 555+ 9087 28 01            jr z,2F
 556+ 9089 04               inc b
 557+ 908A
 558+ 908A CD 8E 90     2 call Guarda_coordenadas_X
 559+ 908D
 560+ 908D              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 908D
 562+ 908D C9               ret
 563+ 908E
 564+ 908E              ; ----- ----- ----- ----- -----
 565+ 908E
 566+ 908E 7D           Guarda_coordenadas_X  ld a,l
 567+ 908F E6 1F            and $1f
 568+ 9091 12           1 ld (de),a
 569+ 9092 3C               inc a
 570+ 9093 13               inc de
 571+ 9094 10 FB            djnz 1B
 572+ 9096 C9               ret
 573+ 9097
 574+ 9097 AF           Limpia_Coordenadas_X xor a
 575+ 9098 06 06            ld b,6
 576+ 909A 21 44 89         ld hl,Coordenadas_X_Amadeus
 577+ 909D 77           1 ld (hl),a
 578+ 909E 23               inc hl
 579+ 909F 10 FC            djnz 1B
 580+ 90A1 C9               ret
 581+ 90A2
 582+ 90A2              ; ----- ----- ----- ----- -----
 583+ 90A2
 584+ 90A2              Compara_coordenadas_X
 585+ 90A2
 586+ 90A2 06 03            ld b,3
 587+ 90A4 11 49 89         ld de,Coordenadas_X_Entidad+2
 588+ 90A7
 589+ 90A7 1A               ld a,(de)
 590+ 90A8 A7               and a
 591+ 90A9 20 01            jr nz,2F
 592+ 90AB 05               dec b
 593+ 90AC
 594+ 90AC 1B           2 dec de
 595+ 90AD 1B               dec de
 596+ 90AE 21 44 89         ld hl,Coordenadas_X_Amadeus
 597+ 90B1
 598+ 90B1 D5           1 push de
 599+ 90B2 E5               push hl
 600+ 90B3 C5               push bc
 601+ 90B4
 602+ 90B4 CD BE 90         call Comparando
 603+ 90B7
 604+ 90B7 C1               pop bc
 605+ 90B8 E1               pop hl
 606+ 90B9 D1               pop de
 607+ 90BA
 608+ 90BA 13               inc de
 609+ 90BB 10 F4            djnz 1B
 610+ 90BD
 611+ 90BD C9               ret
 612+ 90BE
 613+ 90BE              ; ----- ----- ----- ----- -----
 614+ 90BE              ;
 615+ 90BE              ;   4/12/23
 616+ 90BE              ;
 617+ 90BE              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90BE
 619+ 90BE 06 03        Comparando ld b,3
 620+ 90C0 1A               ld a,(de)
 621+ 90C1 4E           2 ld c,(hl)
 622+ 90C2 B9               cp c
 623+ 90C3 28 04            jr z,1F
 624+ 90C5 23               inc hl
 625+ 90C6 10 F9            djnz 2B
 626+ 90C8 C9               ret
 627+ 90C9
 628+ 90C9 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90CB 32 EE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90CE 21 3F 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90D1 CB D6            set 2,(hl)
 632+ 90D3 C9               ret
 633+ 90D4
 634+ 90D4              ; -----------------------------------------------------------------------
 635+ 90D4              ;
 636+ 90D4              ;   7/12/23
 637+ 90D4              ;
 638+ 90D4
 639+ 90D4              Detecta_colision_nave_entidad
 640+ 90D4
 641+ 90D4              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90D4
 643+ 90D4 FD 2A D9 88      ld iy,(Puntero_objeto)
 644+ 90D8 2A FF 88         ld hl,(Puntero_de_impresion)
 645+ 90DB
 646+ 90DB E5               push hl
 647+ 90DC
 648+ 90DC              ; ----- ----- -----
 649+ 90DC 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90DE 06 0A            ld b,10
 651+ 90E0 CD 10 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90E3 7B               ld a,e
 653+ 90E4 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90E6 38 0E            jr c,3F
 655+ 90E8
 656+ 90E8              ; LLegados a este punto:
 657+ 90E8              ;
 658+ 90E8              ;   HAY COLISIÓN !!!!!.
 659+ 90E8              ;
 660+ 90E8              ;   .db (Impacto) de Amadeus a "1".
 661+ 90E8              ;   SET el bit3 de (Impacto2).
 662+ 90E8              ;
 663+ 90E8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90E8
 665+ 90E8 21 EE 88         ld hl,Impacto
 666+ 90EB 36 01            ld (hl),1
 667+ 90ED 21 3F 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90F0 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90F2 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90F4
 671+ 90F4 18 18            jr 1F
 672+ 90F6
 673+ 90F6              ; -----
 674+ 90F6
 675+ 90F6 E1           3 pop hl
 676+ 90F7 CD 8D 96         call NextScan
 677+ 90FA E5               push hl
 678+ 90FB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 90FC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 90FE 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9100 30 0C            jr nc,1F
 682+ 9102              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9102 10 DC            djnz 2B
 684+ 9104
 685+ 9104              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9104
 687+ 9104              ; LLegados a este punto:
 688+ 9104              ;
 689+ 9104              ;   NO HAY COLISIÓN !!!!!.
 690+ 9104              ;
 691+ 9104              ;   .db (Impacto) de Amadeus a "0".
 692+ 9104              ;   RES el bit2 de (Impacto2).
 693+ 9104              ;
 694+ 9104              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9104              ;   Lo colocamos a "0".
 696+ 9104
 697+ 9104 21 3F 89         ld hl,Impacto2
 698+ 9107 CB 96            res 2,(hl)
 699+ 9109 2A 40 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 910C 36 00            ld (hl),0
 701+ 910E
 702+ 910E E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 910F C9               ret
 704+ 9110
 705+ 9110               ; ---------- ----------
 706+ 9110
 707+ 9110 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9111 3A D6 88         ld a,(Columns)
 709+ 9114 47               ld b,a
 710+ 9115 FD 7E 00     2 ld a,(iy)
 711+ 9118 BE               cp (hl)
 712+ 9119 28 01            jr z,1F
 713+ 911B
 714+ 911B 1C               inc e
 715+ 911C
 716+ 911C 23           1 inc hl
 717+ 911D FD 23            inc iy
 718+ 911F 10 F4            djnz 2B
 719+ 9121 C1               pop bc
 720+ 9122 C9               ret
 721+ 9123
 722+ 9123              ; -------------------------------------------------------------------------------------------------------------
 723+ 9123              ;
 724+ 9123              ;   13/03/23
 725+ 9123              ;
 726+ 9123              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9123              ;
 728+ 9123              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9123
 730+ 9123 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9126 7E               ld a,(hl)
 732+ 9127 A7               and a
 733+ 9128 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9129
 735+ 9129 44               ld b,h
 736+ 912A 4D               ld c,l
 737+ 912B 2A 33 89         ld hl,(Stack_snapshot_disparos)
 738+ 912E E5               push hl
 739+ 912F A7               and a
 740+ 9130 ED 42            sbc hl,bc
 741+ 9132 E5               push hl
 742+ 9133 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9134
 744+ 9134 E1               pop hl
 745+ 9135 54               ld d,h
 746+ 9136 5D               ld e,l
 747+ 9137 1B               dec de
 748+ 9138 ED B8            lddr                                                ; Limpiamos.
 749+ 913A
 750+ 913A 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 913D 22 33 89         ld (Stack_snapshot_disparos),hl
 752+ 9140
 753+ 9140 C9               ret
 754+ 9141
 755+ 9141              ; -------------------------------------------------------------------------------------------------------------
 756+ 9141              ;
 757+ 9141              ;   18/07/23
 758+ 9141              ;
 759+ 9141
 760+ 9141              Motor_de_disparos
 761+ 9141
 762+ 9141              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9141
 764+ 9141 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9144 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9147
 767+ 9147 CD 21 8D     2 call Extrae_address
 768+ 914A 7E               ld a,(hl)
 769+ 914B A7               and a
 770+ 914C 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 914E
 772+ 914E              ; ----- ----- ----- ----- ----- -----
 773+ 914E
 774+ 914E C5               push bc
 775+ 914F CD 13 92         call foto_disparo_a_borrar
 776+ 9152
 777+ 9152              ; Existe colisión con este disparo???
 778+ 9152
 779+ 9152 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9153 7E               ld a,(hl)
 781+ 9154 2B               dec hl
 782+ 9155 E6 01            and 1
 783+ 9157 28 1D            jr z,9F
 784+ 9159
 785+ 9159              ;   En este punto:
 786+ 9159              ;
 787+ 9159              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9159              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9159              ;   _con la entidad).
 790+ 9159              ;
 791+ 9159              ;   Disparo_2A defw 0                                ; Control.
 792+ 9159              ;    defw 0                                          ; Puntero objeto.
 793+ 9159              ;    defw 0                                          ; Puntero de impresión.
 794+ 9159              ;    defw 0                                          ; Rutina de impresión.
 795+ 9159
 796+ 9159 E5               push hl
 797+ 915A
 798+ 915A 06 04            ld b,4
 799+ 915C 23           19 inc hl
 800+ 915D 10 FD            djnz 19B
 801+ 915F
 802+ 915F CD 21 8D         call Extrae_address
 803+ 9162 CD 5F 9D         call Genera_coordenadas_disparo
 804+ 9165
 805+ 9165              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9165
 807+ 9165 21 42 89         ld hl,Coordenadas_disparo_certero
 808+ 9168 72               ld (hl),d
 809+ 9169 23               inc hl
 810+ 916A 73               ld (hl),e
 811+ 916B
 812+ 916B              ; Elimino el disparo de la base de datos.
 813+ 916B
 814+ 916B E1               pop hl
 815+ 916C CD 92 92         call Elimina_disparo_de_base_de_datos
 816+ 916F 21 3F 89         ld hl,Impacto2
 817+ 9172 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9174
 819+ 9174 18 06            jr 11F
 820+ 9176
 821+ 9176 CD 3C 92     9 call Mueve_disparo
 822+ 9179 CD 13 92         call foto_disparo_a_borrar
 823+ 917C
 824+ 917C C1           11 pop bc
 825+ 917D 18 04            jr 7F
 826+ 917F
 827+ 917F              ; ----- ----- ----- ----- ----- -----
 828+ 917F
 829+ 917F ED 42        1 sbc hl,bc
 830+ 9181 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9183
 832+ 9183 2A 3D 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9186 23               inc hl
 834+ 9187 23               inc hl
 835+ 9188 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 918B 18 BA            jr 2B
 837+ 918D
 838+ 918D CD A6 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9190              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9190
 841+ 9190              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9190
 843+ 9190 01 6A 85         ld bc,Disparo_11
 844+ 9193 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9196
 846+ 9196 CD 21 8D     5 call Extrae_address
 847+ 9199 7E               ld a,(hl)
 848+ 919A A7               and a
 849+ 919B 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 919D
 851+ 919D              ; ----- ----- ----- ----- ----- -----
 852+ 919D
 853+ 919D C5               push bc
 854+ 919E CD 13 92         call foto_disparo_a_borrar
 855+ 91A1
 856+ 91A1              ; Existe colisión con este disparo???
 857+ 91A1
 858+ 91A1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91A2 7E               ld a,(hl)
 860+ 91A3 2B               dec hl
 861+ 91A4 E6 01            and 1
 862+ 91A6 28 4D            jr z,10F
 863+ 91A8
 864+ 91A8              ;! La colisión se produce con Amadeus???
 865+ 91A8              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91A8
 867+ 91A8 E5               push hl
 868+ 91A9
 869+ 91A9 06 04            ld b,4
 870+ 91AB 23           16 inc hl
 871+ 91AC 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91AE
 873+ 91AE CD 21 8D         call Extrae_address
 874+ 91B1 CD 5F 9D         call Genera_coordenadas_disparo
 875+ 91B4
 876+ 91B4 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91B5 FE 16            cp $16
 878+ 91B7 38 2A            jr c,15F
 879+ 91B9
 880+ 91B9
 881+ 91B9              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91B9
 883+ 91B9 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91BA
 885+ 91BA              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91BA
 887+ 91BA 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91BD
 889+ 91BD              ; Coordenada X de Amadeus en D.
 890+ 91BD
 891+ 91BD 7D               ld a,l
 892+ 91BE E6 1F            and $1F
 893+ 91C0 57               ld d,a
 894+ 91C1
 895+ 91C1 21 86 85         ld hl,Amadeus_db+8
 896+ 91C4 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91C5
 898+ 91C5 21 44 89         ld hl,Coordenadas_X_Amadeus
 899+ 91C8 CD 8E 90         call Guarda_coordenadas_X
 900+ 91CB
 901+ 91CB D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91CC
 903+ 91CC              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91CC
 905+ 91CC 06 02            ld b,2
 906+ 91CE C5           20 push bc
 907+ 91CF
 908+ 91CF 06 03            ld b,3
 909+ 91D1 21 44 89         ld hl,Coordenadas_X_Amadeus
 910+ 91D4 7E           18 ld a,(hl)
 911+ 91D5 BA               cp d
 912+ 91D6 20 04            jr nz,17F
 913+ 91D8
 914+ 91D8              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91D8
 916+ 91D8 C1               pop bc
 917+ 91D9 E1               pop hl
 918+ 91DA 18 0D            jr 14F
 919+ 91DC
 920+ 91DC 23           17 inc hl
 921+ 91DD 10 F5            djnz 18B
 922+ 91DF
 923+ 91DF 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91E0
 925+ 91E0 C1               pop bc
 926+ 91E1 10 EB            djnz 20B
 927+ 91E3
 928+ 91E3
 929+ 91E3              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91E3              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91E3
 932+ 91E3 E1           15 pop hl
 933+ 91E4 23               inc hl
 934+ 91E5 35               dec (hl)
 935+ 91E6 2B               dec hl
 936+ 91E7 18 0C            jr 10F
 937+ 91E9
 938+ 91E9              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91E9              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91E9
 941+ 91E9 E5           14 push hl
 942+ 91EA CD 92 92         call Elimina_disparo_de_base_de_datos
 943+ 91ED 21 3F 89         ld hl,Impacto2
 944+ 91F0 CB CE            set 1,(hl)
 945+ 91F2 E1               pop hl
 946+ 91F3 18 06            jr 12F
 947+ 91F5
 948+ 91F5              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91F5
 950+ 91F5 CD 3C 92     10 call Mueve_disparo
 951+ 91F8 CD 13 92         call foto_disparo_a_borrar
 952+ 91FB C1           12 pop bc
 953+ 91FC
 954+ 91FC 18 04            jr 8F
 955+ 91FE
 956+ 91FE              ; ----- ----- ----- ----- ----- -----
 957+ 91FE
 958+ 91FE ED 42        4 sbc hl,bc
 959+ 9200 28 0A            jr z,6F
 960+ 9202
 961+ 9202 2A 3B 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9205 23               inc hl
 963+ 9206 23               inc hl
 964+ 9207 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 920A 18 8A            jr 5B
 966+ 920C
 967+ 920C CD 9F 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 920F CD 97 90         call Limpia_Coordenadas_X
 969+ 9212 C9               ret
 970+ 9213
 971+ 9213              ; ------------------------------------------------------------------
 972+ 9213
 973+ 9213              foto_disparo_a_borrar
 974+ 9213
 975+ 9213 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9214 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9215 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9216
 979+ 9216 E5               push hl
 980+ 9217 23               inc hl
 981+ 9218 23               inc hl
 982+ 9219 ED 73 2B 89      ld (Stack),sp
 983+ 921D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 921E FD E1            pop iy
 985+ 9220 DD E1            pop ix
 986+ 9222 E1               pop hl
 987+ 9223 ED 7B 2B 89      ld sp,(Stack)
 988+ 9227 3A 1A 89         ld a,(Ctrl_1)
 989+ 922A CB C7            set 0,a
 990+ 922C 32 1A 89         ld (Ctrl_1),a
 991+ 922F CD 16 71         call Guarda_foto_registros
 992+ 9232 3A 1A 89         ld a,(Ctrl_1)
 993+ 9235 CB 87            res 0,a
 994+ 9237 32 1A 89         ld (Ctrl_1),a
 995+ 923A E1               pop hl
 996+ 923B C9               ret
 997+ 923C
 998+ 923C              ;---------------------------------------------------
 999+ 923C              ;
1000+ 923C              ;   18/07/23
1001+ 923C              ;
1002+ 923C
1003+ 923C              Mueve_disparo
1004+ 923C
1005+ 923C              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 923C              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 923C              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 923C
1009+ 923C E5               push hl
1010+ 923D
1011+ 923D 7E               ld a,(hl)
1012+ 923E
1013+ 923E 06 04            ld b,4
1014+ 9240 23           1 inc hl
1015+ 9241 10 FD            djnz 1B
1016+ 9243
1017+ 9243              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9243
1019+ 9243 CD 21 8D         call Extrae_address
1020+ 9246
1021+ 9246 E6 01            and 1
1022+ 9248 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 924A
1024+ 924A              ; Disparo hacia arriba, (Amadeus).
1025+ 924A
1026+ 924A              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 924A              ; _ de la dificultad.
1028+ 924A
1029+ 924A CD 9C 96         call PreviousScan
1030+ 924D CD 9C 96         call PreviousScan
1031+ 9250 CD 9C 96         call PreviousScan
1032+ 9253 CD 9C 96         call PreviousScan
1033+ 9256
1034+ 9256              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9256
1036+ 9256 7C               ld a,h
1037+ 9257 FE 40            cp $40
1038+ 9259 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 925B
1040+ 925B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 925B
1042+ 925B EB               ex de,hl
1043+ 925C 06 04            ld b,4
1044+ 925E 2B           6 dec hl
1045+ 925F 10 FD            djnz 6B
1046+ 9261
1047+ 9261 CD 92 92         call Elimina_disparo_de_base_de_datos
1048+ 9264 E1               pop hl
1049+ 9265 18 10            jr 7F
1050+ 9267
1051+ 9267              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9267              ; HL contiene el puntero de impresión del disparo.
1053+ 9267              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9267
1055+ 9267 D5           3 push de
1056+ 9268 C5               push bc
1057+ 9269
1058+ 9269 CD 25 90         call Comprueba_Colision
1059+ 926C
1060+ 926C              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 926C
1062+ 926C 78               ld a,b
1063+ 926D
1064+ 926D C1               pop bc
1065+ 926E D1               pop de
1066+ 926F
1067+ 926F EB               ex de,hl
1068+ 9270
1069+ 9270 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9271 23               inc hl                                      ; _ movimiento.
1071+ 9272 72               ld (hl),d
1072+ 9273
1073+ 9273 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9274
1075+ 9274 23               inc hl                                      ; _ en curso.
1076+ 9275 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9276 2B               dec hl
1078+ 9277
1079+ 9277 C9           7 ret
1080+ 9278
1081+ 9278              ; Disparo hacia abajo, (Entidad).
1082+ 9278
1083+ 9278 3A 4A 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 927B 47               ld b,a
1085+ 927C
1086+ 927C CD 8D 96     4 call NextScan
1087+ 927F 10 FB            djnz 4B
1088+ 9281
1089+ 9281              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9281
1091+ 9281 7C               ld a,h
1092+ 9282 FE 58            cp $58
1093+ 9284 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9286
1095+ 9286 EB               ex de,hl
1096+ 9287 06 04            ld b,4
1097+ 9289 2B           5 dec hl
1098+ 928A 10 FD            djnz 5B
1099+ 928C
1100+ 928C CD 92 92         call Elimina_disparo_de_base_de_datos
1101+ 928F E1               pop hl
1102+ 9290 18 E5            jr 7B
1103+ 9292
1104+ 9292              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9292
1106+ 9292 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9295 AF               xor a
1108+ 9296 77               ld (hl),a
1109+ 9297 54               ld d,h
1110+ 9298 5D               ld e,l
1111+ 9299 13               inc de
1112+ 929A ED B0            ldir
1113+ 929C C9               ret
1114+ 929D
1115+ 929D              ; -----------------------------------------------------------------
1116+ 929D              ;
1117+ 929D              ;   7/12/23
1118+ 929D              ;
1119+ 929D
1120+ 929D 3A 3F 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92A0 A7               and a
1122+ 92A1 C8               ret z
1123+ 92A2
1124+ 92A2              ; Analizamos si hay impacto por disparos.
1125+ 92A2
1126+ 92A2              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92A2
1128+ 92A2 CB 4F            bit 1,a
1129+ 92A4 28 07            jr z,1F
1130+ 92A6
1131+ 92A6 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92A9 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92AB 18 08            jr 2F
1134+ 92AD
1135+ 92AD CB 47        1 bit 0,a
1136+ 92AF C8               ret z
1137+ 92B0
1138+ 92B0              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92B0
1140+ 92B0 21 1A 89         ld hl,Ctrl_1
1141+ 92B3 CB D6            set 2,(hl)
1142+ 92B5
1143+ 92B5 C9           2 ret
1144+ 92B6
1145+ 92B6              ; -----------------------------------------------------------------
1146+ 92B6              ;
1147+ 92B6              ;   25/04/23
1148+ 92B6              ;
1149+ 92B6
1150+ 92B6              Determina_resultado_comparativa
1151+ 92B6
1152+ 92B6              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92B6              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92B6              ;
1155+ 92B6              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92B6              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92B6              ;
1158+ 92B6              ;   SBC HL,DE
1159+ 92B6
1160+ 92B6              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92B6              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92B6
1163+ 92B6              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92B6              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92B6
1166+ 92B6
1167+ 92B6 3A E9 88         ld a,(Cuad_objeto)
1168+ 92B9 FE 02            cp 2
1169+ 92BB 28 26            jr z,2F
1170+ 92BD 38 24            jr c,2F
1171+ 92BF
1172+ 92BF              ; Cuadrantes 3º y 4º
1173+ 92BF
1174+ 92BF E6 01            and 1
1175+ 92C1 28 10            jr z,4F
1176+ 92C3
1177+ 92C3              ; Cuadrante 3º
1178+ 92C3
1179+ 92C3 7C               ld a,h
1180+ 92C4 06 00            ld b,0
1181+ 92C6
1182+ 92C6 CD 51 93         call Compara_cositas_H3
1183+ 92C9
1184+ 92C9 04               inc b
1185+ 92CA 05               dec b
1186+ 92CB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92CC
1188+ 92CC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92CD 06 00            ld b,0
1190+ 92CF
1191+ 92CF CD 63 93         call Compara_cositas_L3
1192+ 92D2 C9               ret
1193+ 92D3
1194+ 92D3              ; Cuadrante 4º
1195+ 92D3
1196+ 92D3 7C           4 ld a,h
1197+ 92D4 06 00            ld b,0
1198+ 92D6
1199+ 92D6 CD 75 93         call Compara_cositas_H4
1200+ 92D9
1201+ 92D9 04               inc b
1202+ 92DA 05               dec b
1203+ 92DB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92DC
1205+ 92DC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92DD 06 00            ld b,0
1207+ 92DF
1208+ 92DF CD 8B 93         call Compara_cositas_L4
1209+ 92E2 C9               ret
1210+ 92E3
1211+ 92E3              ; Cuadrantes 1º y 2º.
1212+ 92E3
1213+ 92E3 28 10        2 jr z,3F
1214+ 92E5
1215+ 92E5              ; 1er Cuadrante
1216+ 92E5
1217+ 92E5 7C               ld a,h
1218+ 92E6 06 00            ld b,0
1219+ 92E8
1220+ 92E8 CD 29 93         call Compara_cositas_H1
1221+ 92EB
1222+ 92EB 04               inc b
1223+ 92EC 05               dec b
1224+ 92ED C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92EE
1226+ 92EE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92EF 06 00            ld b,0
1228+ 92F1
1229+ 92F1 CD 3F 93         call Compara_cositas_L1
1230+ 92F4 C9               ret
1231+ 92F5
1232+ 92F5
1233+ 92F5              ; 2º Cuadrante
1234+ 92F5
1235+ 92F5 7C           3 ld a,h
1236+ 92F6 06 00            ld b,0
1237+ 92F8
1238+ 92F8 CD 05 93         call Compara_cositas_H2
1239+ 92FB
1240+ 92FB 04               inc b
1241+ 92FC 05               dec b
1242+ 92FD C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 92FE
1244+ 92FE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 92FF 06 00            ld b,0
1246+ 9301
1247+ 9301 CD 17 93         call Compara_cositas_L2
1248+ 9304 C9               ret
1249+ 9305
1250+ 9305 A7           Compara_cositas_H2 and a
1251+ 9306 28 0D            jr z,1F
1252+ 9308              ;    cp $fd
1253+ 9308              ;    jr z,1F
1254+ 9308              ;    cp $fe
1255+ 9308              ;    jr z,1F
1256+ 9308 FE FF            cp $ff
1257+ 930A 28 09            jr z,1F
1258+ 930C FE 01            cp $01
1259+ 930E 28 05            jr z,1F
1260+ 9310 FE 02            cp $02
1261+ 9312 28 01            jr z,1F
1262+ 9314 C0               ret nz
1263+ 9315 04           1 inc b
1264+ 9316 C9               ret
1265+ 9317
1266+ 9317 A7           Compara_cositas_L2 and a
1267+ 9318 28 0D            jr z,1F
1268+ 931A              ;    cp $fd
1269+ 931A              ;    jr z,1F
1270+ 931A FE FE            cp $fe
1271+ 931C 28 09            jr z,1F
1272+ 931E FE FF            cp $ff
1273+ 9320 28 05            jr z,1F
1274+ 9322 FE 01            cp $01
1275+ 9324 28 01            jr z,1F
1276+ 9326              ;    cp $02
1277+ 9326              ;    jr z,1F
1278+ 9326 C0               ret nz
1279+ 9327 04           1 inc b
1280+ 9328 C9               ret
1281+ 9329
1282+ 9329 A7           Compara_cositas_H1 and a
1283+ 932A 28 11            jr z,1F
1284+ 932C              ;    cp $fd
1285+ 932C              ;    jr z,1F
1286+ 932C              ;    cp $fe
1287+ 932C              ;    jr z,1F
1288+ 932C FE FF            cp $ff
1289+ 932E 28 0D            jr z,1F
1290+ 9330 FE 01            cp $01
1291+ 9332 28 09            jr z,1F
1292+ 9334 FE 02            cp $02
1293+ 9336 28 05            jr z,1F
1294+ 9338 FE 03            cp $03
1295+ 933A 28 01            jr z,1F
1296+ 933C C0               ret nz
1297+ 933D 04           1 inc b
1298+ 933E C9               ret
1299+ 933F
1300+ 933F A7           Compara_cositas_L1 and a
1301+ 9340 28 0D            jr z,1F
1302+ 9342              ;    cp $fd
1303+ 9342              ;    jr z,1F
1304+ 9342              ;    cp $fe
1305+ 9342              ;    jr z,1F
1306+ 9342              ;    cp $ff
1307+ 9342              ;    jr z,1F
1308+ 9342 FE 01            cp $01
1309+ 9344 28 09            jr z,1F
1310+ 9346 FE 02            cp $02
1311+ 9348 28 05            jr z,1F
1312+ 934A FE 03            cp $03
1313+ 934C 28 01            jr z,1F
1314+ 934E C0               ret nz
1315+ 934F 04           1 inc b
1316+ 9350 C9               ret
1317+ 9351
1318+ 9351 A7           Compara_cositas_H3 and a
1319+ 9352 28 0D            jr z,1F
1320+ 9354              ;    cp $fd
1321+ 9354              ;    jr z,1F
1322+ 9354 FE FE            cp $fe
1323+ 9356 28 09            jr z,1F
1324+ 9358 FE FF            cp $ff
1325+ 935A 28 05            jr z,1F
1326+ 935C FE 01            cp $01
1327+ 935E 28 01            jr z,1F
1328+ 9360              ;    cp $02
1329+ 9360              ;    jr z,1F
1330+ 9360              ;    cp $03
1331+ 9360              ;    jr z,1F
1332+ 9360 C0               ret nz
1333+ 9361 04           1 inc b
1334+ 9362 C9               ret
1335+ 9363
1336+ 9363 A7           Compara_cositas_L3 and a
1337+ 9364 28 0D            jr z,1F
1338+ 9366              ;    cp $fd
1339+ 9366              ;    jr z,1F
1340+ 9366              ;    cp $fe
1341+ 9366              ;    jr z,1F
1342+ 9366              ;    cp $ff
1343+ 9366              ;    jr z,1F
1344+ 9366 FE 01            cp $01
1345+ 9368 28 09            jr z,1F
1346+ 936A FE 02            cp $02
1347+ 936C 28 05            jr z,1F
1348+ 936E FE 03            cp $03
1349+ 9370 28 01            jr z,1F
1350+ 9372 C0               ret nz
1351+ 9373 04           1 inc b
1352+ 9374 C9               ret
1353+ 9375
1354+ 9375 A7           Compara_cositas_H4 and a
1355+ 9376 28 11            jr z,1F
1356+ 9378 FE FD            cp $fd
1357+ 937A 28 0D            jr z,1F
1358+ 937C FE FE            cp $fe
1359+ 937E 28 09            jr z,1F
1360+ 9380 FE FF            cp $ff
1361+ 9382 28 05            jr z,1F
1362+ 9384 FE 01            cp $01
1363+ 9386 28 01            jr z,1F
1364+ 9388              ;    cp $02
1365+ 9388              ;    jr z,1F
1366+ 9388              ;    cp $03
1367+ 9388              ;    jr z,1F
1368+ 9388 C0               ret nz
1369+ 9389 04           1 inc b
1370+ 938A C9               ret
1371+ 938B
1372+ 938B A7           Compara_cositas_L4 and a
1373+ 938C 28 0D            jr z,1F
1374+ 938E              ;    cp $fd
1375+ 938E              ;    jr z,1F
1376+ 938E FE FE            cp $fe
1377+ 9390 28 09            jr z,1F
1378+ 9392 FE FF            cp $ff
1379+ 9394 28 05            jr z,1F
1380+ 9396 FE 01            cp $01
1381+ 9398 28 01            jr z,1F
1382+ 939A              ;    cp $02
1383+ 939A              ;    jr z,1F
1384+ 939A              ;    cp $03
1385+ 939A              ;    jr z,1F
1386+ 939A C0               ret nz
1387+ 939B 04           1 inc b
1388+ 939C C9               ret
# file closed: Disparo.asm
1860  939D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 939D              ; ******************************************************************************************************************************************************************************************
   2+ 939D              ;
   3+ 939D              ; 26/06/23
   4+ 939D              ;
   5+ 939D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 939D
   7+ 939D              Draw
   8+ 939D
   9+ 939D CD 81 96     	call Prepara_draw
  10+ 93A0 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93A1 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93A2 28 05        	jr z,2F
  13+ 93A4
  14+ 93A4 3A E9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93A7 18 0C        	jr 1F
  16+ 93A9
  17+ 93A9 2A E7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93AC 22 D7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93AF CD 3E 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93B2              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93B2 CD F0 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93B5
  23+ 93B5 3A 05 89     1 ld a,(Ctrl_0)
  24+ 93B8 CB 6F        	bit 5,a
  25+ 93BA 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93BC
  27+ 93BC CD D4 93     	call Comprueba_limite_horizontal
  28+ 93BF CD 64 94     	call Comprueba_limite_vertical
  29+ 93C2
  30+ 93C2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93C2              ; -----------------------
  32+ 93C2              ; -----------------------
  33+ 93C2              ; -----------------------
  34+ 93C2
  35+ 93C2 CD B1 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93C5 CD E8 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93C8 CD 47 96     	call Define_rutina_de_impresion
  38+ 93CB
  39+ 93CB 3A 05 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93CE CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93D0 32 05 89     	ld (Ctrl_0),a
  42+ 93D3
  43+ 93D3 C9           	ret
  44+ 93D4
  45+ 93D4              ; *******************************************************************************************************************************************************************************************
  46+ 93D4              ;	21/01/23
  47+ 93D4              ;
  48+ 93D4              ; 	Comprueba_limite_horizontal.
  49+ 93D4              ;
  50+ 93D4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93D4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93D4              ;
  53+ 93D4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93D4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93D4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93D4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93D4
  58+ 93D4
  59+ 93D4
  60+ 93D4 3A 05 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93D7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93D9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93DB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93DD 32 05 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93E0 18 09            jr 6F
  66+ 93E2 CB 5F        1 bit 3,a
  67+ 93E4 28 0A            jr z,2F
  68+ 93E6 E6 F7            and $f7
  69+ 93E8 32 05 89         ld (Ctrl_0),a
  70+ 93EB CD 3E 95     6 call Inicializacion
  71+ 93EE 18 5B            jr 5F
  72+ 93F0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 93F1
  74+ 93F1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 93F1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 93F1
  77+ 93F1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 93F2 2A 13 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 93F5 CD A0 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 93F8 67           	ld h,a
  81+ 93F9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 93FA CD A0 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 93FD 67           	ld h,a
  84+ 93FE A7           	and a
  85+ 93FF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9401 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9402 3A E9 88     	ld a,(Cuad_objeto)
  88+ 9405 FE 02        	cp 2
  89+ 9407 38 1E        	jr c,3F
  90+ 9409 28 1C        	jr z,3F
  91+ 940B 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 940C 28 23            jr z,7F
  93+ 940E 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9410 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9412 E1           	pop hl
  96+ 9413
  97+ 9413              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9413              ; _para indicar con E="2" en caso necesario.
  99+ 9413
 100+ 9413 E5               push hl
 101+ 9414 C5               push bc
 102+ 9415 CD A0 99     	call calcula_tercio
 103+ 9418 FE 01        	cp 1
 104+ 941A 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 941C CD 4C 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 941F 28 26            jr z,9F
 107+ 9421 38 24            jr c,9F
 108+ 9423 1E 00        11 ld e,0
 109+ 9425 18 22            jr 8F
 110+ 9427 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9428 28 07        	jr z, 7F
 112+ 942A 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 942C 1E 00         	ld e,0
 114+ 942E E1           	pop hl
 115+ 942F 18 04        	jr 4F
 116+ 9431 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9433 18 15            jr 10F
 118+ 9435
 119+ 9435              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9435              ; _para indicar con E="2" en caso necesario.
 121+ 9435
 122+ 9435 E5           4 push hl
 123+ 9436 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9437 CD A0 99     	call calcula_tercio
 125+ 943A FE 01        	cp 1
 126+ 943C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 943E CD 4C 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9441 28 04            jr z,9F
 129+ 9443 30 02            jr nc,9F
 130+ 9445 18 02        	jr 8F
 131+ 9447 1E 02        9 ld e,2
 132+ 9449 C1           8 pop bc
 133+ 944A E1           10 pop hl
 134+ 944B C9           5 ret
 135+ 944C
 136+ 944C              ; --------------------
 137+ 944C              ;
 138+ 944C              ; 25/08/22
 139+ 944C
 140+ 944C CD A0 99     Comprueba_centro call calcula_tercio
 141+ 944F 67               ld h,a
 142+ 9450 08           	ex af,af
 143+ 9451 FE 02        	cp 2
 144+ 9453 38 07        	jr c,1F
 145+ 9455 28 05        	jr z,1F
 146+ 9457 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 945A 18 03        	jr 2F
 148+ 945C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 945F 08           2 ex af,af
 150+ 9460 A7               and a
 151+ 9461 ED 42            sbc hl,bc
 152+ 9463 C9               ret
 153+ 9464
 154+ 9464              ; *********************************************************************************************************************************************************************************************
 155+ 9464              ;
 156+ 9464              ;   16/8/22
 157+ 9464              ;
 158+ 9464              ;	Comprueba_limite_vertical
 159+ 9464              ;
 160+ 9464              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9464              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9464              ;
 163+ 9464
 164+ 9464 2A D7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9467 7D           	ld a,l
 166+ 9468 E6 1F        	and $1F
 167+ 946A 57           	ld d,a
 168+ 946B 3A 15 89     	ld a,(Limite_vertical)
 169+ 946E BA           	cp d 											; Límite - Posición.
 170+ 946F 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9470 3A E9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9473 CB 47        	bit 0,a
 173+ 9475 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9477
 175+ 9477              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9477
 177+ 9477 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9478 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 947A
 180+ 947A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 947A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 947A
 183+ 947A 3A DB 88         ld a,(Coordenada_X)
 184+ 947D 16 0F            ld d,Centro_izquierda
 185+ 947F A7               and a
 186+ 9480 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9481 28 1E            jr z,3F
 188+ 9483 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9485              ;                                                    ; _salimos sin modificar nada.
 190+ 9485 18 0E            jr 2F
 191+ 9487 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9488 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 948A
 194+ 948A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 948A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 948A
 197+ 948A 3A DB 88         ld a,(Coordenada_X)
 198+ 948D 16 10            ld d,Centro_derecha
 199+ 948F A7               and a
 200+ 9490 92               sub d
 201+ 9491 28 0E            jr z,3F
 202+ 9493 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9495              ;                                                    ; _salimos sin modificar nada.
 204+ 9495 CB 43        2 bit 0,e
 205+ 9497 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9499 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 949A CD 2E 95         call Modificaccionne
 208+ 949D C1           	pop bc
 209+ 949E CD 3E 95         call Inicializacion
 210+ 94A1 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94A2
 212+ 94A2              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94A2
 214+ 94A2 C5           4 push bc
 215+ 94A3 01 D6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94A6 0A           	ld a,(bc)
 217+ 94A7 3D           	dec a
 218+ 94A8 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94A9 7D           	ld a,l
 220+ 94AA 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94AB CB 47        	bit 0,a
 222+ 94AD 28 03        	jr z,5F
 223+ 94AF 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94B0 18 2E        	jr 7F
 225+ 94B2
 226+ 94B2              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94B2
 228+ 94B2 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94B3 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94B4 3A 05 89     	ld a,(Ctrl_0)
 231+ 94B7 CB 4F        	bit 1,a
 232+ 94B9 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94BB F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94BC
 235+ 94BC              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94BC
 237+ 94BC 1C               inc e
 238+ 94BD 1D               dec e
 239+ 94BE 20 07            jr nz,12F
 240+ 94C0 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94C1 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94C2 22 D7 88     	ld (Posicion_actual),hl
 243+ 94C5 18 44        13 jr 9F
 244+ 94C7 CB 43        12 bit 0,e
 245+ 94C9 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94CB              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94CB C1           	pop bc
 248+ 94CC 18 D3        	jr 3B
 249+ 94CE 80           14 add b
 250+ 94CF 6F               ld l,a
 251+ 94D0 22 D7 88     	ld (Posicion_actual),hl
 252+ 94D3 CD 2E 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94D6 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94D8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94DA 32 05 89         ld (Ctrl_0),a
 256+ 94DD F1           	pop af
 257+ 94DE 18 2B        	jr 9F
 258+ 94E0
 259+ 94E0              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94E0
 261+ 94E0 F5           7 push af
 262+ 94E1 3A 05 89     	ld a,(Ctrl_0)
 263+ 94E4 CB 47        	bit 0,a
 264+ 94E6 20 1D        	jr nz,8F
 265+ 94E8 F1           	pop af
 266+ 94E9
 267+ 94E9              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94E9
 269+ 94E9 1C           	inc e
 270+ 94EA 1D               dec e
 271+ 94EB 20 07            jr nz,10F
 272+ 94ED 90           	sub b
 273+ 94EE 6F               ld l,a
 274+ 94EF 22 D7 88     	ld (Posicion_actual),hl
 275+ 94F2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94F4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94F4 CB 43        10 bit 0,e
 278+ 94F6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 94F8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 94F8 C1           	pop bc
 281+ 94F9 18 A6        	jr 3B
 282+ 94FB 90           16 sub b
 283+ 94FC 6F               ld l,a
 284+ 94FD 22 D7 88     	ld (Posicion_actual),hl
 285+ 9500 CD 2E 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9503 18 06            jr 9F
 287+ 9505 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9507 32 05 89         ld (Ctrl_0),a
 289+ 950A F1           	pop af
 290+ 950B C1           9 pop bc
 291+ 950C 1E 00        	ld e,0
 292+ 950E CD 3E 95         call Inicializacion
 293+ 9511 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9512 08           	ex af,af
 295+ 9513 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9514 18 8B            jr 3B
 297+ 9516
 298+ 9516              ; --------------------
 299+ 9516
 300+ 9516 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9518 CD 9C 96     1 call PreviousScan
 302+ 951B 10 FB            djnz 1B
 303+ 951D 22 D7 88     	ld (Posicion_actual),hl
 304+ 9520 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9521 C9           	ret
 306+ 9522
 307+ 9522              ; --------------------
 308+ 9522
 309+ 9522 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9524 CD 8D 96     1 call NextScan
 311+ 9527 10 FB            djnz 1B
 312+ 9529 22 D7 88     	ld (Posicion_actual),hl
 313+ 952C AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 952D C9           	ret
 315+ 952E
 316+ 952E              ; --------------------
 317+ 952E              ;
 318+ 952E              ;	22/01/23
 319+ 952E              ;
 320+ 952E              ;	E="1". Hemos cambiado de cuadrante.
 321+ 952E              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 952E              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 952E
 324+ 952E
 325+ 952E              Modificaccionne
 326+ 952E
 327+ 952E 3A E9 88     	ld a,(Cuad_objeto)
 328+ 9531 FE 02        	cp 2
 329+ 9533 CC 16 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9536 DC 16 95         call c,Modifica_Pos_actual
 331+ 9539 C8           	ret z
 332+ 953A CD 22 95         call Modifica_Pos_actual2
 333+ 953D C9               ret
 334+ 953E
 335+ 953E              ; *************************************************************************************************************************************************************************************************
 336+ 953E              ;
 337+ 953E              ;	13/8/22
 338+ 953E              ;
 339+ 953E              ;	Inicializacion
 340+ 953E              ;
 341+ 953E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 953E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 953E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 953E              ;
 345+ 953E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 953E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 953E              ;	_ desaparece/aparece.
 348+ 953E
 349+ 953E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 953E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 953E              ;
 352+ 953E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 953E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 953E              ; 		   [E] ="0"
 355+ 953E
 356+ 953E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 953E
 358+ 953E CD A0 99     Inicializacion call calcula_tercio
 359+ 9541 28 36        	jr z,primit
 360+ 9543 E6 02        	and 2
 361+ 9545 20 07        	jr nz,segmit
 362+ 9547 7D           	ld a,l
 363+ 9548 FE 7F        	cp $7f
 364+ 954A 38 2D        	jr c,primit
 365+ 954C 28 2B        	jr z,primit
 366+ 954E CD AB 95     segmit call column
 367+ 9551 38 13        	jr c,tercuad
 368+ 9553 3E 04        cuarcuad ld a,4
 369+ 9555 32 E9 88     	ld (Cuad_objeto),a
 370+ 9558 21 20 48     	ld hl,$4820
 371+ 955B 22 13 89     	ld (Limite_horizontal),hl
 372+ 955E 21 15 89     	ld hl,Limite_vertical
 373+ 9561 36 0D        	ld (hl),$0d
 374+ 9563 08           	ex af,af
 375+ 9564 18 3C        	jr 1F
 376+ 9566              tercuad
 377+ 9566 3E 03        	ld a,3
 378+ 9568 32 E9 88     	ld (Cuad_objeto),a
 379+ 956B 21 20 48     	ld hl,$4820
 380+ 956E 22 13 89     	ld (Limite_horizontal),hl
 381+ 9571 21 15 89     	ld hl,Limite_vertical
 382+ 9574 36 12        	ld (hl),$12
 383+ 9576 08           	ex af,af
 384+ 9577 18 29        	jr 1F
 385+ 9579 CD AB 95     primit call column
 386+ 957C 38 13        	jr c, primcuad
 387+ 957E              segcuad
 388+ 957E 3E 02        	ld a,2
 389+ 9580 32 E9 88     	ld (Cuad_objeto),a
 390+ 9583 21 C0 4F     	ld hl,$4fc0
 391+ 9586 22 13 89     	ld (Limite_horizontal),hl
 392+ 9589 21 15 89     	ld hl,Limite_vertical
 393+ 958C 36 0D        	ld (hl),$0d
 394+ 958E 08           	ex af,af
 395+ 958F 18 11        	jr 1F
 396+ 9591              primcuad
 397+ 9591 3E 01        	ld a,1
 398+ 9593 32 E9 88     	ld (Cuad_objeto),a
 399+ 9596 21 C0 4F     	ld hl,$4fc0
 400+ 9599 22 13 89     	ld (Limite_horizontal),hl
 401+ 959C 21 15 89     	ld hl,Limite_vertical
 402+ 959F 36 12        	ld (hl),$12
 403+ 95A1 08           	ex af,af
 404+ 95A2 CD 34 9D     1 call Genera_coordenadas
 405+ 95A5 21 05 89     	ld hl,Ctrl_0
 406+ 95A8 CB EE        	set 5,(hl)
 407+ 95AA C9           	ret
 408+ 95AB
 409+ 95AB              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95AB
 411+ 95AB              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95AB              ;
 413+ 95AB              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95AB
 415+ 95AB 7D           column ld a,l
 416+ 95AC E6 1F        	and $1f
 417+ 95AE FE 10         	cp $10
 418+ 95B0 C9            	ret
 419+ 95B1
 420+ 95B1              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95B1              ;
 422+ 95B1              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95B1              ;
 424+ 95B1              ; 14/12/22
 425+ 95B1              ;
 426+ 95B1              ;	Modifica: A y BC.
 427+ 95B1
 428+ 95B1 3A E9 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95B4 E6 01        	and 1
 430+ 95B6 28 17        	jr z,1F
 431+ 95B8
 432+ 95B8              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95B8
 434+ 95B8 3A DB 88     	ld a,(Coordenada_X)
 435+ 95BB 47           	ld b,a
 436+ 95BC 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95BD 79           	ld a,c
 438+ 95BE 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95BF 38 08        	jr c,2F
 440+ 95C1 47           	ld b,a
 441+ 95C2 79           	ld a,c
 442+ 95C3 90           	sub b
 443+ 95C4 32 12 89     	ld (Columnas),a
 444+ 95C7 18 1B        	jr 4F
 445+ 95C9 79           2 ld a,c
 446+ 95CA 32 12 89     	ld (Columnas),a
 447+ 95CD 18 15        	jr 4F
 448+ 95CF
 449+ 95CF              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95CF
 451+ 95CF 3A DB 88     1 ld a,(Coordenada_X)
 452+ 95D2 81           	add c
 453+ 95D3 3D           	dec a
 454+ 95D4 D6 1F        	sub $1f
 455+ 95D6 38 08        	jr c,3F
 456+ 95D8 47           	ld b,a
 457+ 95D9 79           	ld a,c
 458+ 95DA 90           	sub b
 459+ 95DB 32 12 89     	ld (Columnas),a
 460+ 95DE 18 04        	jr 4F
 461+ 95E0 79           3 ld a,c
 462+ 95E1 32 12 89     	ld (Columnas),a
 463+ 95E4 D9           4 exx
 464+ 95E5 4F           	ld c,a
 465+ 95E6 D9           	exx
 466+ 95E7 C9            ret
 467+ 95E8
 468+ 95E8              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95E8              ;
 470+ 95E8              ;   19/7/23
 471+ 95E8              ;
 472+ 95E8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95E8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95E8              ;
 475+ 95E8              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95E8              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95E8              ;
 478+ 95E8              ;	DESTRUYE: HL,B Y A.
 479+ 95E8
 480+ 95E8 3A E9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 95EB FE 02        	cp 2
 482+ 95ED 38 18        	jr c,1F
 483+ 95EF 28 16        	jr z,1F
 484+ 95F1 E6 01        	and 1
 485+ 95F3 28 0D        	jr z,3F
 486+ 95F5
 487+ 95F5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 95F5
 489+ 95F5 CD 3B 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 95F8
 491+ 95F8 7D           9 ld a,l
 492+ 95F9 E6 1F        	and $1f
 493+ 95FB 28 2A        	jr z,7F
 494+ 95FD 2B           	dec hl
 495+ 95FE 10 F8        	djnz 9B
 496+ 9600 18 25        	jr 7F
 497+ 9602
 498+ 9602              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 9602
 500+ 9602 2A D7 88     3 ld hl,(Posicion_actual)
 501+ 9605 18 20        	jr 7F
 502+ 9607
 503+ 9607 28 14        1 jr z,2F
 504+ 9609
 505+ 9609              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9609
 507+ 9609 CD 3B 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 960C
 509+ 960C 7D           4 ld a,l
 510+ 960D E6 1F        	and $1f
 511+ 960F 28 03        	jr z,6F
 512+ 9611 2B           	dec hl
 513+ 9612 10 F8        	djnz 4B
 514+ 9614 06 0F        6 ld b,15
 515+ 9616 CD 9C 96     5 call PreviousScan
 516+ 9619 10 FB        	djnz 5B
 517+ 961B 18 0A        	jr 7F
 518+ 961D
 519+ 961D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 961D
 521+ 961D CD 3B 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 9620 06 0F        	ld b,15
 523+ 9622 CD 9C 96     8 call PreviousScan
 524+ 9625 10 FB        	djnz 8B
 525+ 9627
 526+ 9627 E5           7 push hl
 527+ 9628 DD E1        	pop ix
 528+ 962A
 529+ 962A 2A D9 88     	ld hl,(Puntero_objeto)
 530+ 962D E5           	push hl
 531+ 962E FD E1        	pop iy
 532+ 9630
 533+ 9630              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 9630
 535+ 9630 3A 05 89     	ld a,(Ctrl_0)
 536+ 9633 CB 77        	bit 6,a
 537+ 9635 C8           	ret z
 538+ 9636
 539+ 9636              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9636              ; _ entidad / Amadeus´.
 541+ 9636
 542+ 9636 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 963A
 544+ 963A C9           	ret
 545+ 963B
 546+ 963B              ; --------------------------------------------------------------------------------------------------------------------
 547+ 963B              ;
 548+ 963B              ;	2/1/23
 549+ 963B              ;
 550+ 963B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 963B              ;
 552+ 963B              ;	Tras esta rutina tenemos:
 553+ 963B              ;
 554+ 963B              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 963B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 963B              ;
 557+ 963B              ;	DESTRUYE!!!!! HL,B y A.
 558+ 963B
 559+ 963B 2A D7 88     Operandos ld hl,(Posicion_actual)
 560+ 963E 3A 12 89     	ld a,(Columnas)
 561+ 9641 3D           	dec a
 562+ 9642 20 01        	jr nz,1F
 563+ 9644 3C           	inc a
 564+ 9645 47           1 ld b,a
 565+ 9646 C9           	ret
 566+ 9647
 567+ 9647              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9647              ;
 569+ 9647              ;	3/1/23
 570+ 9647              ;
 571+ 9647              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9647              ;
 573+ 9647              ;	Destruye: A,B,HL y DE.
 574+ 9647
 575+ 9647              Define_rutina_de_impresion
 576+ 9647
 577+ 9647 3A D6 88     	ld a,(Columns)
 578+ 964A 47           	ld b,a
 579+ 964B 3A 12 89     	ld a,(Columnas)
 580+ 964E B8           	cp b
 581+ 964F 20 0D        	jr nz,2f
 582+ 9651
 583+ 9651              ;	La entidad se imprime entera.
 584+ 9651
 585+ 9651 21 70 97     	ld hl, Indice_entidades_completas
 586+ 9654 E6 01        	and 1
 587+ 9656 28 02        	jr z,1F
 588+ 9658
 589+ 9658 23           	inc hl
 590+ 9659 23           	inc hl
 591+ 965A
 592+ 965A CD 21 8D     1 call Extrae_address
 593+ 965D C9           	ret		;	ret
 594+ 965E
 595+ 965E              ;	La entidad no se imprime entera en pantalla.
 596+ 965E
 597+ 965E 3A E9 88     2 ld a,(Cuad_objeto)
 598+ 9661 E6 01        	and 1
 599+ 9663 28 17        	jr z,3F
 600+ 9665
 601+ 9665              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9665
 603+ 9665 21 74 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9668 3A D6 88     4 ld a,(Columns)
 605+ 966B E6 01        	and 1
 606+ 966D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 966F
 608+ 966F 23           	inc hl
 609+ 9670 23           	inc hl
 610+ 9671
 611+ 9671 3A 12 89     	ld a,(Columnas)
 612+ 9674 E6 01        	and 1
 613+ 9676 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9678
 615+ 9678 23           	inc hl
 616+ 9679 23           	inc hl
 617+ 967A
 618+ 967A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 967C
 620+ 967C 21 7A 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 967F 18 E7        	jr 4B
 622+ 9681
 623+ 9681              ; --------------------------------------------------------------------------------------------------------------------
 624+ 9681              ;
 625+ 9681              ;	Prepara_draw
 626+ 9681              ;
 627+ 9681              ;	Es una rutina de carga.
 628+ 9681              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 9681              ;
 630+ 9681              ;	FUNCIONAMIENTO:
 631+ 9681              ;
 632+ 9681              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 9681              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 9681              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 9681              ;
 636+ 9681              ;	DESTRUYE:
 637+ 9681              ;
 638+ 9681              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 9681
 640+ 9681 21 D5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9684 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9685 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9686 4E           	ld c,(hl)
 644+ 9687 2A D7 88     	ld hl,(Posicion_actual)
 645+ 968A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 968C C9           	ret
 647+ 968D
 648+ 968D              ;----------------------------------------------------------------------------------------------------------------
 649+ 968D              ;
 650+ 968D              ;	5/08/22
 651+ 968D              ;
 652+ 968D              ;   NextScan.
 653+ 968D              ;
 654+ 968D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 968D              ;
 656+ 968D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 968D              ;
 658+ 968D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 968D              ;
 660+ 968D              ;       DESTRUIDOS: AF y HL !!!
 661+ 968D              ;
 662+ 968D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 968D              ;
 664+ 968D
 665+ 968D 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 968E 7C               ld a,h
 667+ 968F E6 07            and 7
 668+ 9691 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 9692
 670+ 9692 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 9693 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 9695 6F               ld l,a
 673+ 9696 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9697
 675+ 9697 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9698 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 969A 67               ld h,a
 678+ 969B C9               ret
 679+ 969C
 680+ 969C              ;----------------------------------------------------------------------------------------------------------------
 681+ 969C              ;
 682+ 969C              ;	5/08/22
 683+ 969C              ;
 684+ 969C              ;   PreviousScan.
 685+ 969C              ;
 686+ 969C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 969C              ;
 688+ 969C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 969C              ;
 690+ 969C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 969C              ;
 692+ 969C              ;       DESTRUIDOS: AF y HL !!!
 693+ 969C              ;
 694+ 969C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 969C              ;
 696+ 969C
 697+ 969C 7C           PreviousScan ld a,h
 698+ 969D 25               dec h               ; Dec H.
 699+ 969E E6 07            and 7
 700+ 96A0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96A1
 702+ 96A1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96A2 D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96A4 6F               ld l,a
 705+ 96A5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96A6
 707+ 96A6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96A7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96A9 67               ld h,a
 710+ 96AA C9               ret
 711+ 96AB
 712+ 96AB              ; -----------------------------------------------------------------------------------
 713+ 96AB              ;
 714+ 96AB              ;	31/7/23
 715+ 96AB              ;
 716+ 96AB              ;	Rutina principal de pintado de entidades.
 717+ 96AB              ;	Extrae la foto del frame, (entidades).
 718+ 96AB
 719+ 96AB              Extrae_foto_entidades
 720+ 96AB
 721+ 96AB 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96AE 7E           	ld a,(hl)
 723+ 96AF A7           	and a
 724+ 96B0 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96B1
 726+ 96B1              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96B1
 728+ 96B1 3A 26 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96B4 A7           	and a
 730+ 96B5 C8           	ret z
 731+ 96B6
 732+ 96B6              ; -----------------------------------
 733+ 96B6
 734+ 96B6 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96BA 31 00 70     	ld sp,Album_de_fotos
 736+ 96BD
 737+ 96BD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96BF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96C0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96C1
 741+ 96C1 ED 73 2D 89  	ld (Stack_2),sp
 742+ 96C5 ED 7B 2B 89  	ld sp,(Stack)
 743+ 96C9
 744+ 96C9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96C9
 746+ 96C9 3E CD        	ld a,$cd
 747+ 96CB 32 D3 96     	ld (Imprime),a
 748+ 96CE EB           	ex de,hl
 749+ 96CF 22 D4 96     	ld (Imprime+1),hl
 750+ 96D2 EB           	ex de,hl
 751+ 96D3
 752+ 96D3              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96D3
 754+ 96D3 00 00 00     Imprime db 0,0,0
 755+ 96D6
 756+ 96D6 ED 73 2B 89  	ld (Stack),sp
 757+ 96DA
 758+ 96DA 3A 26 89     	ld a,(Numero_de_malotes)
 759+ 96DD 3D           	dec a
 760+ 96DE 28 09        	jr z,1F
 761+ 96E0 32 26 89      	ld (Numero_de_malotes),a
 762+ 96E3
 763+ 96E3 ED 7B 2D 89  	ld sp,(Stack_2)
 764+ 96E7 18 D4        	jr 2B
 765+ 96E9
 766+ 96E9 AF           1 xor a
 767+ 96EA 32 2D 89     	ld (Stack_2),a
 768+ 96ED
 769+ 96ED C9           	ret
 770+ 96EE
 771+ 96EE              ; -----------------------------------------------------------------------------------
 772+ 96EE              ;
 773+ 96EE              ;	28/2/23
 774+ 96EE              ;
 775+ 96EE              ;	Pinta los disparos generados.
 776+ 96EE
 777+ 96EE              Extrae_foto_disparos
 778+ 96EE
 779+ 96EE 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 96F1 7E               ld a,(hl)
 781+ 96F2 A7               and a
 782+ 96F3 C8               ret z
 783+ 96F4
 784+ 96F4 3A 3A 89     	ld a,(Numero_de_disparotes)
 785+ 96F7 A7           	and a
 786+ 96F8 C8           	ret z
 787+ 96F9 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 96FD 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 9700
 790+ 9700 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 9702 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9703 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9704
 794+ 9704 ED 73 2D 89  	ld (Stack_2),sp
 795+ 9708 ED 7B 2B 89  	ld sp,(Stack)
 796+ 970C
 797+ 970C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 970C
 799+ 970C 3E CD        	ld a,$cd
 800+ 970E 32 16 97     	ld (Imprime2),a
 801+ 9711 EB           	ex de,hl
 802+ 9712 22 17 97     	ld (Imprime2+1),hl
 803+ 9715 EB           	ex de,hl
 804+ 9716
 805+ 9716              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9716
 807+ 9716 00 00 00     Imprime2 db 0,0,0
 808+ 9719
 809+ 9719 3A 3A 89     	ld a,(Numero_de_disparotes)
 810+ 971C 3D           	dec a
 811+ 971D 28 09        	jr z,1F
 812+ 971F 32 3A 89      	ld (Numero_de_disparotes),a
 813+ 9722
 814+ 9722 ED 7B 2D 89  	ld sp,(Stack_2)
 815+ 9726 18 D8        	jr 2B
 816+ 9728
 817+ 9728 AF           1 xor a
 818+ 9729 32 2D 89     	ld (Stack_2),a
 819+ 972C C9           	ret
 820+ 972D
 821+ 972D              ; -----------------------------------------------------------------------------------
 822+ 972D              ;
 823+ 972D              ;	4/9/23
 824+ 972D              ;
 825+ 972D              ;	Rutina principal de pintado de Amadeus.
 826+ 972D              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 972D
 828+ 972D 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 9730 7E           	ld a,(hl)
 830+ 9731 A7           	and a
 831+ 9732 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9733
 833+ 9733 3A 26 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9736 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9737 C8           	ret z
 836+ 9738
 837+ 9738              ; -----------------------------------
 838+ 9738
 839+ 9738 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 973C 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 973F
 842+ 973F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 9741 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 9742 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9743
 846+ 9743 ED 73 2D 89  	ld (Stack_2),sp
 847+ 9747 ED 7B 2B 89  	ld sp,(Stack)
 848+ 974B
 849+ 974B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 974B
 851+ 974B 3E CD        	ld a,$cd
 852+ 974D 32 55 97     	ld (Imprime_Amadeus),a
 853+ 9750 EB           	ex de,hl
 854+ 9751 22 56 97     	ld (Imprime_Amadeus+1),hl
 855+ 9754 EB           	ex de,hl
 856+ 9755
 857+ 9755              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9755
 859+ 9755 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9758
 861+ 9758 ED 73 2B 89  	ld (Stack),sp
 862+ 975C
 863+ 975C 3A 26 89     	ld a,(Numero_de_malotes)
 864+ 975F 3D           	dec a
 865+ 9760 28 09        	jr z,1F
 866+ 9762 32 26 89      	ld (Numero_de_malotes),a
 867+ 9765
 868+ 9765 ED 7B 2D 89  	ld sp,(Stack_2)
 869+ 9769 18 D4        	jr 2B
 870+ 976B
 871+ 976B AF           1 xor a
 872+ 976C 32 2D 89     	ld (Stack_2),a
 873+ 976F
 874+ 976F C9           	ret
# file closed: Draw_XOR.asm
1861  9770              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9770              ;   índices de Rutinas de impresión.
   2+ 9770
   3+ 9770 80 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9772 AD 97            defw Pinta_Amadeus_3x2
   5+ 9774
   6+ 9774 03 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9776 A3 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9778 57 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 977A
  10+ 977A 2D 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 977C 31 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 977E E5 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9780
  14+ 9780
  15+ 9780              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9780              ;
  17+ 9780              ;   12/12/22
  18+ 9780              ;
  19+ 9780              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9780              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9780              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9780              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9780              ;
  24+ 9780              ;   Modifica: DE y HL.
  25+ 9780
  26+ 9780 ED 73 2B 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9784 FD F9        	ld sp,iy
  28+ 9786 06 10            ld b,16
  29+ 9788 D1           1 pop de
  30+ 9789 7B               ld a,e
  31+ 978A AE               xor (hl)
  32+ 978B 77           	ld (hl),a
  33+ 978C 23           	inc hl
  34+ 978D 7A               ld a,d
  35+ 978E AE               xor (hl)
  36+ 978F 77           	ld (hl),a
  37+ 9790 2B           	dec hl
  38+ 9791 24           	inc h
  39+ 9792 7C               ld a,h
  40+ 9793 E6 07            and 7
  41+ 9795 20 0A            jr nz,2F
  42+ 9797 7D               ld a,l
  43+ 9798 C6 20            add a,$20
  44+ 979A 6F               ld l,a
  45+ 979B 38 04            jr c,2F
  46+ 979D 7C               ld a,h
  47+ 979E D6 08            sub 8
  48+ 97A0 67               ld h,a
  49+ 97A1 7C           2 ld a,h
  50+ 97A2 FE 58            cp $58
  51+ 97A4 28 02            jr z,3F
  52+ 97A6 10 E0            djnz 1B
  53+ 97A8 ED 7B 2B 89  3 ld sp,(Stack)
  54+ 97AC C9           	ret
  55+ 97AD
  56+ 97AD ED 73 2B 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97B1 FD F9        	ld sp,iy
  58+ 97B3 06 08            ld b,8
  59+ 97B5 D1           1 pop de
  60+ 97B6 7B               ld a,e
  61+ 97B7 AE               xor (hl)
  62+ 97B8 77           	ld (hl),a
  63+ 97B9 23           	inc hl
  64+ 97BA 7A               ld a,d
  65+ 97BB AE               xor (hl)
  66+ 97BC 77           	ld (hl),a
  67+ 97BD 23           	inc hl
  68+ 97BE D1           	pop de
  69+ 97BF 7B               ld a,e
  70+ 97C0 AE               xor (hl)
  71+ 97C1 77           	ld (hl),a
  72+ 97C2 2B           	dec hl
  73+ 97C3 2B           	dec hl
  74+ 97C4 24           	inc h
  75+ 97C5 7C               ld a,h
  76+ 97C6 E6 07            and 7
  77+ 97C8 20 0A            jr nz,2F
  78+ 97CA 7D               ld a,l
  79+ 97CB C6 20            add a,$20
  80+ 97CD 6F               ld l,a
  81+ 97CE 38 04            jr c,2F
  82+ 97D0 7C               ld a,h
  83+ 97D1 D6 08            sub 8
  84+ 97D3 67               ld h,a
  85+ 97D4 7C           2 ld a,h
  86+ 97D5 FE 58            cp $58
  87+ 97D7 28 25            jr z,4F
  88+ 97D9 7A               ld a,d
  89+ 97DA AE               xor (hl)
  90+ 97DB 77               ld (hl),a
  91+ 97DC D1           	pop de
  92+ 97DD 23           	inc hl
  93+ 97DE 7B               ld a,e
  94+ 97DF AE               xor (hl)
  95+ 97E0 77           	ld (hl),a
  96+ 97E1 23           	inc hl
  97+ 97E2 7A               ld a,d
  98+ 97E3 AE               xor (hl)
  99+ 97E4 77           	ld (hl),a
 100+ 97E5 2B           	dec hl
 101+ 97E6 2B           	dec hl
 102+ 97E7 24           	inc h
 103+ 97E8 7C               ld a,h
 104+ 97E9 E6 07            and 7
 105+ 97EB 20 0A            jr nz,3F
 106+ 97ED 7D               ld a,l
 107+ 97EE C6 20            add a,$20
 108+ 97F0 6F               ld l,a
 109+ 97F1 38 04            jr c,3F
 110+ 97F3 7C               ld a,h
 111+ 97F4 D6 08            sub 8
 112+ 97F6 67               ld h,a
 113+ 97F7 7C           3 ld a,h
 114+ 97F8 FE 58            cp $58
 115+ 97FA 28 02            jr z,4F
 116+ 97FC 10 B7            djnz 1B
 117+ 97FE ED 7B 2B 89  4 ld sp,(Stack)
 118+ 9802 C9           	ret
 119+ 9803
 120+ 9803              ; ---------------------------------------------------
 121+ 9803
 122+ 9803 ED 73 2B 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9807 FD F9        	ld sp,iy
 124+ 9809
 125+ 9809              ; >>>
 126+ 9809
 127+ 9809 06 10            ld b,16
 128+ 980B D1           1 pop de
 129+ 980C 7A           	ld a,d
 130+ 980D AE           	xor (hl)
 131+ 980E 77           	ld (hl),a
 132+ 980F 24           	inc h
 133+ 9810 7C               ld a,h
 134+ 9811 E6 07            and 7
 135+ 9813 20 0C            jr nz,2F
 136+ 9815 7D               ld a,l
 137+ 9816 C6 20            add a,$20
 138+ 9818 6F               ld l,a
 139+ 9819 38 06            jr c,2F
 140+ 981B 7C               ld a,h
 141+ 981C D6 08            sub 8
 142+ 981E 67               ld h,a
 143+ 981F 18 00            jr 2F
 144+ 9821 7C           2 ld a,h
 145+ 9822 FE 58            cp $58
 146+ 9824 28 02            jr z,3F
 147+ 9826 10 E3            djnz 1B
 148+ 9828 ED 7B 2B 89  3 ld sp,(Stack)
 149+ 982C C9           	ret
 150+ 982D
 151+ 982D ED 73 2B 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9831 FD F9        	ld sp,iy
 153+ 9833
 154+ 9833              ; >>>
 155+ 9833
 156+ 9833 06 10            ld b,16
 157+ 9835 D1           1 pop de
 158+ 9836 7B           	ld a,e
 159+ 9837 AE           	xor (hl)
 160+ 9838 77           	ld (hl),a
 161+ 9839 24           	inc h
 162+ 983A 7C               ld a,h
 163+ 983B E6 07            and 7
 164+ 983D 20 0C            jr nz,2F
 165+ 983F 7D               ld a,l
 166+ 9840 C6 20            add a,$20
 167+ 9842 6F               ld l,a
 168+ 9843 38 06            jr c,2F
 169+ 9845 7C               ld a,h
 170+ 9846 D6 08            sub 8
 171+ 9848 67               ld h,a
 172+ 9849 18 00            jr 2F
 173+ 984B 7C           2 ld a,h
 174+ 984C FE 58            cp $58
 175+ 984E 28 02            jr z,3F
 176+ 9850 10 E3            djnz 1B
 177+ 9852 ED 7B 2B 89  3 ld sp,(Stack)
 178+ 9856 C9           	ret
 179+ 9857
 180+ 9857              ; ---------------------------------------------------
 181+ 9857
 182+ 9857 ED 73 2B 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 985B FD F9        	ld sp,iy
 184+ 985D 06 08            ld b,8
 185+ 985F D1           1 pop de
 186+ 9860 7A           	ld a,d
 187+ 9861 AE           	xor (hl)
 188+ 9862 77           	ld (hl),a
 189+ 9863 23           	inc hl
 190+ 9864 D1           	pop de
 191+ 9865 7B           	ld a,e
 192+ 9866 AE           	xor (hl)
 193+ 9867 77           	ld (hl),a
 194+ 9868 2B           	dec hl
 195+ 9869 24            	inc h
 196+ 986A 7C               ld a,h
 197+ 986B E6 07            and 7
 198+ 986D 20 0A            jr nz,2F
 199+ 986F 7D               ld a,l
 200+ 9870 C6 20            add a,$20
 201+ 9872 6F               ld l,a
 202+ 9873 38 04            jr c,2F
 203+ 9875 7C               ld a,h
 204+ 9876 D6 08            sub 8
 205+ 9878 67               ld h,a
 206+ 9879 7C           2 ld a,h
 207+ 987A FE 58            cp $58
 208+ 987C 28 20            jr z,4F
 209+ 987E D1               pop de
 210+ 987F 7B           	ld a,e
 211+ 9880 AE           	xor (hl)
 212+ 9881 77           	ld (hl),a
 213+ 9882 23           	inc hl
 214+ 9883 7A           	ld a,d
 215+ 9884 AE           	xor (hl)
 216+ 9885 77           	ld (hl),a
 217+ 9886 2B           	dec hl
 218+ 9887 24           	inc h
 219+ 9888 7C               ld a,h
 220+ 9889 E6 07            and 7
 221+ 988B 20 0A            jr nz,3F
 222+ 988D 7D               ld a,l
 223+ 988E C6 20            add a,$20
 224+ 9890 6F               ld l,a
 225+ 9891 38 04            jr c,3F
 226+ 9893 7C               ld a,h
 227+ 9894 D6 08            sub 8
 228+ 9896 67               ld h,a
 229+ 9897 7C           3 ld a,h
 230+ 9898 FE 58            cp $58
 231+ 989A 28 02            jr z,4F
 232+ 989C 10 C1            djnz 1B
 233+ 989E ED 7B 2B 89  4 ld sp,(Stack)
 234+ 98A2 C9           	ret
 235+ 98A3
 236+ 98A3 ED 73 2B 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98A7 FD F9        	ld sp,iy
 238+ 98A9 06 08            ld b,8
 239+ 98AB D1           1 pop de
 240+ 98AC D1           	pop de
 241+ 98AD 7B           	ld a,e
 242+ 98AE AE           	xor (hl)
 243+ 98AF 77           	ld (hl),a
 244+ 98B0 24            	inc h
 245+ 98B1 7C               ld a,h
 246+ 98B2 E6 07            and 7
 247+ 98B4 20 0A            jr nz,2F
 248+ 98B6 7D               ld a,l
 249+ 98B7 C6 20            add a,$20
 250+ 98B9 6F               ld l,a
 251+ 98BA 38 04            jr c,2F
 252+ 98BC 7C               ld a,h
 253+ 98BD D6 08            sub 8
 254+ 98BF 67               ld h,a
 255+ 98C0 7C           2 ld a,h
 256+ 98C1 FE 58            cp $58
 257+ 98C3 28 1B            jr z,4F
 258+ 98C5 D1               pop de
 259+ 98C6 7A           	ld a,d
 260+ 98C7 AE           	xor (hl)
 261+ 98C8 77           	ld (hl),a
 262+ 98C9 24           	inc h
 263+ 98CA 7C               ld a,h
 264+ 98CB E6 07            and 7
 265+ 98CD 20 0A            jr nz,3F
 266+ 98CF 7D               ld a,l
 267+ 98D0 C6 20            add a,$20
 268+ 98D2 6F               ld l,a
 269+ 98D3 38 04            jr c,3F
 270+ 98D5 7C               ld a,h
 271+ 98D6 D6 08            sub 8
 272+ 98D8 67               ld h,a
 273+ 98D9 7C           3 ld a,h
 274+ 98DA FE 58            cp $58
 275+ 98DC 28 02            jr z,4F
 276+ 98DE 10 CB            djnz 1B
 277+ 98E0 ED 7B 2B 89  4 ld sp,(Stack)
 278+ 98E4 C9           	ret
 279+ 98E5
 280+ 98E5 ED 73 2B 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98E9 FD F9        	ld sp,iy
 282+ 98EB 06 08            ld b,8
 283+ 98ED D1           1 pop de
 284+ 98EE 7B           	ld a,e
 285+ 98EF AE           	xor (hl)
 286+ 98F0 77           	ld (hl),a
 287+ 98F1 23           	inc hl
 288+ 98F2 7A           	ld a,d
 289+ 98F3 AE           	xor (hl)
 290+ 98F4 77           	ld (hl),a
 291+ 98F5 2B           	dec hl
 292+ 98F6 24             	inc h
 293+ 98F7 7C               ld a,h
 294+ 98F8 E6 07            and 7
 295+ 98FA 20 0A            jr nz,2F
 296+ 98FC 7D               ld a,l
 297+ 98FD C6 20            add a,$20
 298+ 98FF 6F               ld l,a
 299+ 9900 38 04            jr c,2F
 300+ 9902 7C               ld a,h
 301+ 9903 D6 08            sub 8
 302+ 9905 67               ld h,a
 303+ 9906 7C           2 ld a,h
 304+ 9907 FE 58            cp $58
 305+ 9909 28 21            jr z,4F
 306+ 990B D1               pop de
 307+ 990C 7A           	ld a,d
 308+ 990D AE           	xor (hl)
 309+ 990E 77           	ld (hl),a
 310+ 990F 23           	inc hl
 311+ 9910 D1               pop de
 312+ 9911 7B           	ld a,e
 313+ 9912 AE           	xor (hl)
 314+ 9913 77           	ld (hl),a
 315+ 9914 2B           	dec hl
 316+ 9915 24           	inc h
 317+ 9916 7C               ld a,h
 318+ 9917 E6 07            and 7
 319+ 9919 20 0A            jr nz,3F
 320+ 991B 7D               ld a,l
 321+ 991C C6 20            add a,$20
 322+ 991E 6F               ld l,a
 323+ 991F 38 04            jr c,3F
 324+ 9921 7C               ld a,h
 325+ 9922 D6 08            sub 8
 326+ 9924 67               ld h,a
 327+ 9925 7C           3 ld a,h
 328+ 9926 FE 58            cp $58
 329+ 9928 28 02            jr z,4F
 330+ 992A 10 C1            djnz 1B
 331+ 992C ED 7B 2B 89  4 ld sp,(Stack)
 332+ 9930 C9           	ret
 333+ 9931
 334+ 9931 ED 73 2B 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9935 FD F9        	ld sp,iy
 336+ 9937 06 08            ld b,8
 337+ 9939 D1           1 pop de
 338+ 993A 7B           	ld a,e
 339+ 993B AE           	xor (hl)
 340+ 993C 77           	ld (hl),a
 341+ 993D 24            	inc h
 342+ 993E 7C               ld a,h
 343+ 993F E6 07            and 7
 344+ 9941 20 0A            jr nz,2F
 345+ 9943 7D               ld a,l
 346+ 9944 C6 20            add a,$20
 347+ 9946 6F               ld l,a
 348+ 9947 38 04            jr c,2F
 349+ 9949 7C               ld a,h
 350+ 994A D6 08            sub 8
 351+ 994C 67               ld h,a
 352+ 994D 7C           2 ld a,h
 353+ 994E FE 58            cp $58
 354+ 9950 28 1C            jr z,4F
 355+ 9952 D1               pop de
 356+ 9953 7A           	ld a,d
 357+ 9954 AE           	xor (hl)
 358+ 9955 77           	ld (hl),a
 359+ 9956 24           	inc h
 360+ 9957 7C               ld a,h
 361+ 9958 E6 07            and 7
 362+ 995A 20 0A            jr nz,3F
 363+ 995C 7D               ld a,l
 364+ 995D C6 20            add a,$20
 365+ 995F 6F               ld l,a
 366+ 9960 38 04            jr c,3F
 367+ 9962 7C               ld a,h
 368+ 9963 D6 08            sub 8
 369+ 9965 67               ld h,a
 370+ 9966 7C           3 ld a,h
 371+ 9967 FE 58            cp $58
 372+ 9969 28 03            jr z,4F
 373+ 996B D1               pop de
 374+ 996C 10 CB            djnz 1B
 375+ 996E ED 7B 2B 89  4 ld sp,(Stack)
 376+ 9972 C9           	ret
 377+ 9973
 378+ 9973              ; ---------------------------------------------------
 379+ 9973              ;
 380+ 9973              ;   27/02/23
 381+ 9973              ;
 382+ 9973              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9973              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9973              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9973
 386+ 9973 ED 73 2B 89  Pinta_Disparo ld (Stack),sp
 387+ 9977 FD F9            ld sp,iy
 388+ 9979 06 03            ld b,3
 389+ 997B D1           1 pop de
 390+ 997C 7B               ld a,e
 391+ 997D AE               xor (hl)
 392+ 997E 77               ld (hl),a
 393+ 997F 23               inc hl
 394+ 9980 7A               ld a,d
 395+ 9981 AE               xor (hl)
 396+ 9982 77               ld (hl),a
 397+ 9983 2B               dec hl
 398+ 9984
 399+ 9984 24               inc h
 400+ 9985 7C               ld a,h
 401+ 9986 E6 07            and 7
 402+ 9988 20 0A            jr nz,2F
 403+ 998A 7D               ld a,l
 404+ 998B C6 20            add a,$20
 405+ 998D 6F               ld l,a
 406+ 998E 38 04            jr c,2F
 407+ 9990 7C               ld a,h
 408+ 9991 D6 08            sub 8
 409+ 9993 67               ld h,a
 410+ 9994 7C           2 ld a,h
 411+ 9995 FE 58            cp $58
 412+ 9997 28 02            jr z,3F
 413+ 9999
 414+ 9999 10 E0            djnz 1B
 415+ 999B ED 7B 2B 89  3 ld sp,(Stack)
 416+ 999F C9               ret
 417+ 99A0
# file closed: Rutinas_de_impresion_sprites.asm
1862  99A0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99A0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99A0              ;
   3+ 99A0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99A0              ;
   5+ 99A0              ; *****************************************************************************************************************************************************************************************
   6+ 99A0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99A0
   8+ 99A0 7C           calcula_tercio ld a,h
   9+ 99A1 E6 18        	and $18
  10+ 99A3 CB 2F        	sra a
  11+ 99A5 CB 2F        	sra a
  12+ 99A7 CB 2F        	sra a
  13+ 99A9 C9           	ret
  14+ 99AA
# file closed: calcula_tercio.asm
1863  99AA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99AA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99AA              ;
   3+ 99AA              ;
   4+ 99AA              ;	CLS.
   5+ 99AA              ;
   6+ 99AA              ;	Limpia la pantalla y define sus atributos.
   7+ 99AA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99AA              ;
   9+ 99AA              ;	COLORES: 0 ..... NEGRO
  10+ 99AA              ;    		 1 ..... AZUL
  11+ 99AA              ; 			 2 ..... ROJO
  12+ 99AA              ;			 3 ..... MAGENTA
  13+ 99AA              ; 			 4 ..... VERDE
  14+ 99AA              ; 			 5 ..... CIAN
  15+ 99AA              ;			 6 ..... AMARILLO
  16+ 99AA              ; 			 7 ..... BLANCO
  17+ 99AA              ;
  18+ 99AA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99AA              ;
  20+ 99AA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99AA
  22+ 99AA
  23+ 99AA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99AD 11 01 40     	LD DE,$4001
  25+ 99B0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99B3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99B5 ED B0        	LDIR
  28+ 99B7 01 FF 02     	LD BC,767
  29+ 99BA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99BB ED B0        	LDIR
  31+ 99BD C9           	ret
  32+ 99BE
# file closed: Cls.asm
1864  99BE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99BE              ; ******************************************************************************************************************************************************************************************
   2+ 99BE              ;
   3+ 99BE              ;   20/05/23
   4+ 99BE              ;
   5+ 99BE              ;	Recompone_posicion_inicio
   6+ 99BE              ;
   7+ 99BE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99BE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99BE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99BE              ;	_ a una u otra rutina.
  11+ 99BE
  12+ 99BE              Recompone_posicion_inicio
  13+ 99BE
  14+ 99BE 2A E7 88     	ld hl,(Posicion_inicio)
  15+ 99C1 7D           	ld a,l
  16+ 99C2 E6 1F        	and $1f
  17+ 99C4 28 16        	jr z,1F
  18+ 99C6
  19+ 99C6 FE 1F        	cp $1f
  20+ 99C8 28 0D        	jr z,3F
  21+ 99CA
  22+ 99CA 21 16 89     	ld hl,Ctrl_2
  23+ 99CD CB C6        	set 0,(hl)
  24+ 99CF 2A D9 88     	ld hl,(Puntero_objeto)
  25+ 99D2 22 1B 89     	ld (Repone_puntero_objeto),hl
  26+ 99D5 18 08        	jr 2F
  27+ 99D7
  28+ 99D7 CD 81 9B     3 call Mov_left
  29+ 99DA 18 03        	jr 2F
  30+ 99DC
  31+ 99DC CD 5E 9A     1 call Mov_right
  32+ 99DF 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99E2 22 D9 88     	ld (Puntero_objeto),hl
  34+ 99E5 C9           	ret
  35+ 99E6
  36+ 99E6              ; ******************************************************************************************************************************************************************************************
  37+ 99E6              ;
  38+ 99E6              ;   27/05/23
  39+ 99E6              ;
  40+ 99E6              ;	Mov_down
  41+ 99E6              ;
  42+ 99E6              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99E6              ;
  44+ 99E6              ;
  45+ 99E6              Mov_down
  46+ 99E6
  47+ 99E6 CD 4C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99E9              ;																	; _ repone (Puntero_objeto).
  49+ 99E9 21 05 89     	ld hl,Ctrl_0
  50+ 99EC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99EE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99EE              ; 																	; _ en el caso de que no lo haya.
  53+ 99EE 3A ED 88     	ld a,(Vel_down)
  54+ 99F1 47           	ld b,a
  55+ 99F2 2A D7 88         ld hl,(Posicion_actual)
  56+ 99F5 CD A0 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99F8 E6 02        	and 2
  58+ 99FA 28 13        	jr z,1F
  59+ 99FC
  60+ 99FC              ; Nos encontramos en el último tercio de pantalla.
  61+ 99FC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99FC
  63+ 99FC 7C           	ld a,h
  64+ 99FD FE 57        	cp $57
  65+ 99FF 20 0E        	jr nz,1F
  66+ 9A01
  67+ 9A01 7D           	ld a,l
  68+ 9A02 C6 20        	add $20
  69+ 9A04 30 09        	jr nc,1F
  70+ 9A06
  71+ 9A06              ; ------------------------------
  72+ 9A06              ;
  73+ 9A06              ;	30/12/15
  74+ 9A06
  75+ 9A06              ;	call Reaparece_arriba
  76+ 9A06 CD 0E 9D     	call Reinicio
  77+ 9A09
  78+ 9A09 F3           	di
  79+ 9A0A 18 FE        	jr $
  80+ 9A0C FB           	ei
  81+ 9A0D
  82+ 9A0D              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  83+ 9A0D              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  84+ 9A0D
  85+ 9A0D              ;	ld a,(Ctrl_3)
  86+ 9A0D              ;	res 1,a
  87+ 9A0D              ;	set 2,a													; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  88+ 9A0D              ;	ld (Ctrl_3),a
  89+ 9A0D
  90+ 9A0D 18 08        	jr 3F
  91+ 9A0F              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  92+ 9A0F              ;															; _a la siguiente entidad como "Entidad_guía".
  93+ 9A0F              ; ------------------------------
  94+ 9A0F
  95+ 9A0F CD 8D 96     1 call NextScan
  96+ 9A12 22 D7 88     	ld (Posicion_actual),hl
  97+ 9A15 10 DE            djnz 2B
  98+ 9A17 CD 34 9D     3 call Genera_coordenadas
  99+ 9A1A C9           	ret
 100+ 9A1B
 101+ 9A1B              ; ******************************************************************************************************************************************************************************************
 102+ 9A1B              ;
 103+ 9A1B              ;   27/05/23
 104+ 9A1B              ;
 105+ 9A1B              ;	Mov_up
 106+ 9A1B              ;
 107+ 9A1B              ; 	Mueve el Sprite hacia arriba.
 108+ 9A1B              ;
 109+ 9A1B              ;
 110+ 9A1B              Mov_up
 111+ 9A1B
 112+ 9A1B CD 4C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 113+ 9A1E              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 114+ 9A1E 21 05 89     	ld hl,Ctrl_0
 115+ 9A21 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 116+ 9A23              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 117+ 9A23              ; 																		; _ en el caso de que no lo haya.
 118+ 9A23 3A EC 88     	ld a,(Vel_up)
 119+ 9A26 47           	ld b,a
 120+ 9A27 2A D7 88     	ld hl,(Posicion_actual)
 121+ 9A2A CD A0 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 122+ 9A2D A7           	and a
 123+ 9A2E 20 10        	jr nz,1F
 124+ 9A30
 125+ 9A30              ; Nos encontramos en el 1er tercio de pantalla.
 126+ 9A30              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 127+ 9A30
 128+ 9A30 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 129+ 9A31 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 130+ 9A33 20 0B            jr nz,1F
 131+ 9A35 7D               ld a,l
 132+ 9A36 D6 20            sub $20
 133+ 9A38 30 06            jr nc,1F
 134+ 9A3A 25               dec h
 135+ 9A3B
 136+ 9A3B              ; -----------------------------
 137+ 9A3B CD EF 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 138+ 9A3E              ;	call Reinicio
 139+ 9A3E              ; -----------------------------
 140+ 9A3E
 141+ 9A3E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 142+ 9A40 CD 9C 96     1 call PreviousScan
 143+ 9A43 22 D7 88     	ld (Posicion_actual),hl
 144+ 9A46 10 E2            djnz 3B
 145+ 9A48 CD 34 9D     2 call Genera_coordenadas
 146+ 9A4B C9           	ret
 147+ 9A4C
 148+ 9A4C              ; -----------------------------
 149+ 9A4C              ;
 150+ 9A4C              ;	27/5/23
 151+ 9A4C              ;
 152+ 9A4C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 153+ 9A4C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 154+ 9A4C              ;
 155+ 9A4C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 156+ 9A4C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 157+ 9A4C              ;
 158+ 9A4C              ;	Modifica: A y (Puntero_objeto).
 159+ 9A4C
 160+ 9A4C 3A 16 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 161+ 9A4F CB 47        	bit 0,a
 162+ 9A51 C8           	ret z
 163+ 9A52 CB 87        	res 0,a
 164+ 9A54 32 16 89     	ld (Ctrl_2),a
 165+ 9A57 2A 1B 89     	ld hl,(Repone_puntero_objeto)
 166+ 9A5A 22 D9 88     	ld (Puntero_objeto),hl
 167+ 9A5D C9           	ret
 168+ 9A5E
 169+ 9A5E              ; ******************************************************************************************************************************************************************************************
 170+ 9A5E              ;
 171+ 9A5E              ;	19/10/22
 172+ 9A5E              ;
 173+ 9A5E              ;	Mov_right.
 174+ 9A5E              ;
 175+ 9A5E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 176+ 9A5E              ;
 177+ 9A5E
 178+ 9A5E 3A 05 89     Mov_right ld a,(Ctrl_0)
 179+ 9A61 CB 77        	bit 6,a
 180+ 9A63 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 181+ 9A65
 182+ 9A65 CD 9D 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 183+ 9A68 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 184+ 9A69
 185+ 9A69 21 05 89     	ld hl,Ctrl_0
 186+ 9A6C CB E6        	set 4,(hl)
 187+ 9A6E 18 52        	jr 8F
 188+ 9A70
 189+ 9A70 21 05 89     10 ld hl,Ctrl_0
 190+ 9A73 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 191+ 9A75              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 192+ 9A75              ; 																	; _ en el caso de que no lo haya.
 193+ 9A75 3A DB 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 194+ 9A78 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 195+ 9A7A 20 46        	jr nz,8F
 196+ 9A7C
 197+ 9A7C 3A DD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 198+ 9A7F A7           	and a 															; _[3] para continuar con el DESPLZ.
 199+ 9A80 28 40        	jr z,8F
 200+ 9A82
 201+ 9A82              ; ---------- ---------- ----------
 202+ 9A82              ;
 203+ 9A82              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 204+ 9A82
 205+ 9A82 3A EB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 206+ 9A85 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 207+ 9A87 28 11        	jr z,1F
 208+ 9A89 38 06        	jr c,6F
 209+ 9A8B FE 04        	cp 4
 210+ 9A8D 28 14        	jr z,7F
 211+ 9A8F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 212+ 9A91
 213+ 9A91              ; ---------- ---------- ----------
 214+ 9A91              ;
 215+ 9A91              ; Perfiles de velocidad
 216+ 9A91              ;
 217+ 9A91
 218+ 9A91 3A DD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 219+ 9A94 FE FE        	cp $fe
 220+ 9A96 20 2A        	jr nz,8F
 221+ 9A98 18 10        	jr 3F
 222+ 9A9A 3A DD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 223+ 9A9D FE FD        	cp $fd
 224+ 9A9F 20 21        	jr nz,8F
 225+ 9AA1 18 07        	jr 3F
 226+ 9AA3 3A DD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 227+ 9AA6 FE FB        	cp $fb
 228+ 9AA8 20 18        	jr nz,8F
 229+ 9AAA
 230+ 9AAA              ; ---------- ---------- ----------
 231+ 9AAA
 232+ 9AAA              3
 233+ 9AAA CD DD 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 234+ 9AAD              ;	call Reinicio
 235+ 9AAD
 236+ 9AAD              ; ---------- ---------- ----------
 237+ 9AAD              ;
 238+ 9AAD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 239+ 9AAD
 240+ 9AAD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 241+ 9AAF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 242+ 9AB0 CD C9 9A     	call DESPLZ_DER
 243+ 9AB3 C1           	pop bc
 244+ 9AB4 10 F9        	djnz 5B
 245+ 9AB6 2A D7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 246+ 9AB9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 247+ 9ABA 22 D7 88     	ld (Posicion_actual),hl
 248+ 9ABD CD 34 9D     	call Genera_coordenadas
 249+ 9AC0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 250+ 9AC2
 251+ 9AC2              ; ---------- ---------- ----------
 252+ 9AC2
 253+ 9AC2 2A D7 88     8 ld hl,(Posicion_actual)
 254+ 9AC5 CD C9 9A     	call DESPLZ_DER
 255+ 9AC8 C9           2 ret
 256+ 9AC9
 257+ 9AC9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 258+ 9AC9              ;
 259+ 9AC9              ;	22/9/22
 260+ 9AC9              ;
 261+ 9AC9
 262+ 9AC9 CD D8 9A     DESPLZ_DER call Desplaza_derecha
 263+ 9ACC CD 24 9B         call modifica_parametros_1er_DESPLZ_2
 264+ 9ACF CD 4D 9B         call Ciclo_completo
 265+ 9AD2 21 05 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 266+ 9AD5 CB FE        	set 7,(hl)
 267+ 9AD7 C9           	ret
 268+ 9AD8
 269+ 9AD8              ; ******************************************************************************************************************************************************************************************
 270+ 9AD8              ;	15/02/23
 271+ 9AD8              ;
 272+ 9AD8
 273+ 9AD8 3A EB 88     Desplaza_derecha ld a,(Vel_right)
 274+ 9ADB 47           	ld b,a
 275+ 9ADC 2A E3 88     	ld hl,(Puntero_DESPLZ_der)
 276+ 9ADF 23           1 inc hl
 277+ 9AE0 23           	inc hl
 278+ 9AE1 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 279+ 9AE3 22 E3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 280+ 9AE6 CD 21 8D     	call Extrae_address
 281+ 9AE9 22 D9 88     	ld (Puntero_objeto),hl
 282+ 9AEC
 283+ 9AEC              ; Modifica (Puntero_DESPLZ_izq).
 284+ 9AEC
 285+ 9AEC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 286+ 9AEC              ; Cuántos movimientos hemos hecho ??
 287+ 9AEC              ; DE contiene (Puntero_DESPLZ_der).
 288+ 9AEC
 289+ 9AEC 2A DF 88     7 ld hl,(Indice_Sprite_der)
 290+ 9AEF EB           	ex de,hl
 291+ 9AF0 A7           	and a
 292+ 9AF1 ED 52        	sbc hl,de
 293+ 9AF3 CB 3D        	srl l
 294+ 9AF5 3E 08        6 ld a,8
 295+ 9AF7 95           	sub l
 296+ 9AF8 30 1E        	jr nc,3F
 297+ 9AFA
 298+ 9AFA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 299+ 9AFA              ; B="0".
 300+ 9AFA
 301+ 9AFA 04           4 inc b
 302+ 9AFB 3C           	inc a
 303+ 9AFC 20 FC        	jr nz,4B
 304+ 9AFE 78           	ld a,b
 305+ 9AFF 08           	ex af,af
 306+ 9B00 2A DF 88     	ld hl,(Indice_Sprite_der)
 307+ 9B03 23           5 inc hl
 308+ 9B04 23           	inc hl
 309+ 9B05 10 FC        	djnz 5B
 310+ 9B07 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 311+ 9B0A CD 21 8D     	call Extrae_address
 312+ 9B0D 22 D9 88     	ld (Puntero_objeto),hl
 313+ 9B10
 314+ 9B10              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 315+ 9B10              ; _(Posicion_actual).
 316+ 9B10
 317+ 9B10 21 D7 88     	ld hl,Posicion_actual
 318+ 9B13 34           	inc (hl)
 319+ 9B14 08               ex af,af
 320+ 9B15 6F           	ld l,a
 321+ 9B16 18 DD        	jr 6B
 322+ 9B18
 323+ 9B18              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 324+ 9B18
 325+ 9B18 47           3 ld b,a
 326+ 9B19 2A E1 88     	ld hl,(Indice_Sprite_izq)
 327+ 9B1C 23           2 inc hl
 328+ 9B1D 23           	inc hl
 329+ 9B1E 10 FC        	djnz 2B
 330+ 9B20 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 331+ 9B23 C9           8 ret
 332+ 9B24
 333+ 9B24              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 334+ 9B24              ;
 335+ 9B24              ;	24/7/22
 336+ 9B24              ;
 337+ 9B24              ;	modifica_parametros_1er_DESPLZ_2
 338+ 9B24              ;
 339+ 9B24              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 340+ 9B24              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 341+ 9B24              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 342+ 9B24
 343+ 9B24 3A DD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 344+ 9B27 A7           	and a
 345+ 9B28 20 1F        	jr nz,1F
 346+ 9B2A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 347+ 9B2C 32 DD 88         ld (CTRL_DESPLZ),a
 348+ 9B2F
 349+ 9B2F 21 D6 88     	ld hl,Columns
 350+ 9B32 34           	inc (hl)
 351+ 9B33 3A E9 88     	ld a,(Cuad_objeto)
 352+ 9B36 E6 01        	and 1
 353+ 9B38 28 0F        	jr z,1F
 354+ 9B3A 2A D7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 355+ 9B3D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 356+ 9B3E 22 D7 88     	ld (Posicion_actual),hl
 357+ 9B41 CD 34 9D     	call Genera_coordenadas
 358+ 9B44 CD A9 9C     	call Inc_CTRL_DESPLZ
 359+ 9B47 18 03        	jr 2F
 360+ 9B49 CD A9 9C     1 call Inc_CTRL_DESPLZ
 361+ 9B4C C9           2 ret
 362+ 9B4D
 363+ 9B4D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 364+ 9B4D              ;
 365+ 9B4D              ;	24/7/22
 366+ 9B4D              ;
 367+ 9B4D              ;	Ciclo_completo.
 368+ 9B4D              ;
 369+ 9B4D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 370+ 9B4D              ;
 371+ 9B4D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 372+ 9B4D              ; 	Decrementamos (Columns).
 373+ 9B4D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 374+ 9B4D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 375+ 9B4D
 376+ 9B4D
 377+ 9B4D 3A DD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 378+ 9B50 FE FF        	cp $ff
 379+ 9B52 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 380+ 9B54 E6 F0        	and $f0
 381+ 9B56 20 28        	jr nz,3F
 382+ 9B58
 383+ 9B58              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 384+ 9B58
 385+ 9B58 3A DD 88     	ld a,(CTRL_DESPLZ)
 386+ 9B5B 47           	ld b,a
 387+ 9B5C 3E F8        	ld a,$f8
 388+ 9B5E 80           	add b
 389+ 9B5F 32 DD 88     	ld (CTRL_DESPLZ),a
 390+ 9B62 18 1C        	jr 3F
 391+ 9B64 21 D6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 392+ 9B67 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 393+ 9B68 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 394+ 9B69 32 DD 88     	ld (CTRL_DESPLZ),a
 395+ 9B6C 3A E9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 396+ 9B6F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 397+ 9B71 20 0A        	jr nz,2F
 398+ 9B73 2A D7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 399+ 9B76 23           	inc hl
 400+ 9B77 22 D7 88     	ld (Posicion_actual),hl
 401+ 9B7A CD 34 9D     	call Genera_coordenadas
 402+ 9B7D
 403+ 9B7D              ; Inicia el puntero de Sprite.
 404+ 9B7D
 405+ 9B7D CD 38 8D     2 call Inicia_puntero_objeto_der
 406+ 9B80 C9           3 ret
 407+ 9B81
 408+ 9B81              ; ******************************************************************************************************************************************************************************************
 409+ 9B81              ;
 410+ 9B81              ;	15/02/23
 411+ 9B81              ;
 412+ 9B81              ;	Mov_left.
 413+ 9B81              ;
 414+ 9B81              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 415+ 9B81              ;
 416+ 9B81              Mov_left
 417+ 9B81
 418+ 9B81 21 05 89     	ld hl,Ctrl_0
 419+ 9B84 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 420+ 9B86              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 421+ 9B86              ; 																	; _ en el caso de que no lo haya.
 422+ 9B86 3A 05 89     	ld a,(Ctrl_0)
 423+ 9B89 CB 77        	bit 6,a
 424+ 9B8B 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 425+ 9B8D
 426+ 9B8D CD A3 9C     	call Stop_Amadeus_left
 427+ 9B90 C8           	ret z
 428+ 9B91 20 4A        	jr nz,8F
 429+ 9B93
 430+ 9B93 3A DB 88     11 ld a,(Coordenada_X)
 431+ 9B96 A7           	and a
 432+ 9B97 20 44        	jr nz,8F
 433+ 9B99
 434+ 9B99 3A DD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 435+ 9B9C A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 436+ 9B9D 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 437+ 9B9F
 438+ 9B9F              ; ---------- ---------- ----------
 439+ 9B9F
 440+ 9B9F 3A EA 88     	ld a,(Vel_left)
 441+ 9BA2 FE 02        	cp 2
 442+ 9BA4 28 0F        	jr z,1F
 443+ 9BA6 38 04        	jr c,6F
 444+ 9BA8 FE 04        	cp 4
 445+ 9BAA 28 12        	jr z,7F
 446+ 9BAC
 447+ 9BAC              ; ---------- ---------- ----------
 448+ 9BAC
 449+ 9BAC 3A DD 88     6 ld a,(CTRL_DESPLZ)
 450+ 9BAF FE F8        	cp $f8
 451+ 9BB1 20 2A        	jr nz,8F
 452+ 9BB3 18 10        	jr 4F
 453+ 9BB5 3A DD 88     1 ld a,(CTRL_DESPLZ)
 454+ 9BB8 FE F9        	cp $f9
 455+ 9BBA 20 21        	jr nz,8F
 456+ 9BBC 18 07        	jr 4F
 457+ 9BBE 3A DD 88     7 ld a,(CTRL_DESPLZ)
 458+ 9BC1 FE FB        	cp $fb
 459+ 9BC3 20 18        	jr nz,8F
 460+ 9BC5
 461+ 9BC5              ; ---------- ---------- ----------
 462+ 9BC5
 463+ 9BC5              4
 464+ 9BC5 CD CB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 465+ 9BC8              ;	call Reinicio
 466+ 9BC8
 467+ 9BC8              ; ---------- ---------- ----------
 468+ 9BC8
 469+ 9BC8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 470+ 9BCA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 471+ 9BCB
 472+ 9BCB              ;	ld hl,(Indice_Sprite_izq)
 473+ 9BCB              ;	ld (Puntero_DESPLZ_izq),hl
 474+ 9BCB
 475+ 9BCB CD E4 9B     	call DESPLZ_IZQ
 476+ 9BCE C1           	pop bc
 477+ 9BCF 10 F9        	djnz 5B
 478+ 9BD1 2A D7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 479+ 9BD4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 480+ 9BD5 22 D7 88     	ld (Posicion_actual),hl
 481+ 9BD8 CD 34 9D     	call Genera_coordenadas
 482+ 9BDB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 483+ 9BDD
 484+ 9BDD              ; ---------- ---------- ----------
 485+ 9BDD
 486+ 9BDD              ; Movemos, no hay recolocación.
 487+ 9BDD
 488+ 9BDD 2A D7 88     8 ld hl,(Posicion_actual)
 489+ 9BE0 CD E4 9B     	call DESPLZ_IZQ
 490+ 9BE3 C9           2 ret
 491+ 9BE4
 492+ 9BE4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 493+ 9BE4              ;
 494+ 9BE4              ;	22/9/22
 495+ 9BE4
 496+ 9BE4              DESPLZ_IZQ
 497+ 9BE4
 498+ 9BE4 CD F3 9B     	call Desplaza_izquierda
 499+ 9BE7 CD 3F 9C         call modifica_parametros_1er_DESPLZ
 500+ 9BEA CD 67 9C     	call Ciclo_completo_2
 501+ 9BED 21 05 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 502+ 9BF0 CB BE        	res 7,(hl)
 503+ 9BF2 C9           	ret
 504+ 9BF3
 505+ 9BF3              Desplaza_izquierda
 506+ 9BF3
 507+ 9BF3 3A EA 88     	ld a,(Vel_left)
 508+ 9BF6 47           	ld b,a
 509+ 9BF7 2A E5 88     	ld hl,(Puntero_DESPLZ_izq)
 510+ 9BFA 23           1 inc hl
 511+ 9BFB 23           	inc hl
 512+ 9BFC 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 513+ 9BFE 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 514+ 9C01 CD 21 8D     	call Extrae_address
 515+ 9C04 22 D9 88     	ld (Puntero_objeto),hl
 516+ 9C07
 517+ 9C07              ; Modifica (Puntero_DESPLZ_der).
 518+ 9C07
 519+ 9C07              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 520+ 9C07              ; Cuántos movimientos hemos hecho ??
 521+ 9C07              ; DE contiene (Puntero_DESPLZ_izq).
 522+ 9C07
 523+ 9C07 2A E1 88     7 ld hl,(Indice_Sprite_izq)
 524+ 9C0A EB           	ex de,hl
 525+ 9C0B A7           	and a
 526+ 9C0C ED 52        	sbc hl,de
 527+ 9C0E CB 3D        	srl l
 528+ 9C10 3E 08        6 ld a,8
 529+ 9C12 95           	sub l
 530+ 9C13 30 1E        	jr nc,3F
 531+ 9C15
 532+ 9C15              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 533+ 9C15              ; B="0".
 534+ 9C15
 535+ 9C15 04           4 inc b
 536+ 9C16 3C           	inc a
 537+ 9C17 20 FC        	jr nz,4B
 538+ 9C19 78           	ld a,b
 539+ 9C1A 08           	ex af,af
 540+ 9C1B 2A E1 88     	ld hl,(Indice_Sprite_izq)
 541+ 9C1E 23           5 inc hl
 542+ 9C1F 23           	inc hl
 543+ 9C20 10 FC        	djnz 5B
 544+ 9C22 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 545+ 9C25 CD 21 8D     	call Extrae_address
 546+ 9C28 22 D9 88     	ld (Puntero_objeto),hl
 547+ 9C2B
 548+ 9C2B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 549+ 9C2B              ; _(Posicion_actual).
 550+ 9C2B
 551+ 9C2B 21 D7 88     	ld hl,Posicion_actual
 552+ 9C2E 35           	dec (hl)
 553+ 9C2F 08           	ex af,af
 554+ 9C30 6F           	ld l,a
 555+ 9C31 18 DD        	jr 6B
 556+ 9C33
 557+ 9C33              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 558+ 9C33
 559+ 9C33 47           3 ld b,a
 560+ 9C34 2A DF 88     	ld hl,(Indice_Sprite_der)
 561+ 9C37 23           2 inc hl
 562+ 9C38 23           	inc hl
 563+ 9C39 10 FC        	djnz 2B
 564+ 9C3B 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 565+ 9C3E C9           8 ret
 566+ 9C3F
 567+ 9C3F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 568+ 9C3F              ;
 569+ 9C3F              ;	modifica_parametros_1er_DESPLZ
 570+ 9C3F              ;
 571+ 9C3F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 572+ 9C3F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 573+ 9C3F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 574+ 9C3F
 575+ 9C3F 3A DD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 576+ 9C42 A7           	and a
 577+ 9C43 20 1E        	jr nz,1F
 578+ 9C45 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 579+ 9C46 32 DD 88         ld (CTRL_DESPLZ),a
 580+ 9C49 21 D6 88     	ld hl,Columns
 581+ 9C4C 34           	inc (hl)
 582+ 9C4D 3A E9 88     	ld a,(Cuad_objeto)
 583+ 9C50 E6 01        	and 1
 584+ 9C52 20 0F        	jr nz,1F
 585+ 9C54 2A D7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 586+ 9C57 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 587+ 9C58 22 D7 88     	ld (Posicion_actual),hl
 588+ 9C5B CD 34 9D     	call Genera_coordenadas
 589+ 9C5E CD BA 9C     	call Dec_CTRL_DESPLZ
 590+ 9C61 18 03        	jr 2F
 591+ 9C63 CD BA 9C     1 call Dec_CTRL_DESPLZ
 592+ 9C66 C9           2 ret
 593+ 9C67
 594+ 9C67              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 595+ 9C67
 596+ 9C67 3A DD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 597+ 9C6A FE F7        	cp $f7
 598+ 9C6C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 599+ 9C6E 30 2C        	jr nc,3F
 600+ 9C70
 601+ 9C70              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 602+ 9C70
 603+ 9C70 06 00        	ld b,0
 604+ 9C72 04           4 inc b
 605+ 9C73 3C           	inc a
 606+ 9C74 FE F7        	cp $f7
 607+ 9C76 20 FA        	jr nz,4B
 608+ 9C78 3E FF        	ld a,$ff
 609+ 9C7A 90           	sub b
 610+ 9C7B 32 DD 88     	ld (CTRL_DESPLZ),a
 611+ 9C7E 18 1C        	jr 3F
 612+ 9C80
 613+ 9C80              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 614+ 9C80
 615+ 9C80 21 D6 88     1 ld hl,Columns
 616+ 9C83 35           	dec (hl)
 617+ 9C84 AF           	xor a
 618+ 9C85 32 DD 88     	ld (CTRL_DESPLZ),a
 619+ 9C88 3A E9 88     	ld a,(Cuad_objeto)
 620+ 9C8B E6 01        	and 1
 621+ 9C8D 28 0A        	jr z,2F
 622+ 9C8F 2A D7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 623+ 9C92 2B           	dec hl
 624+ 9C93 22 D7 88     	ld (Posicion_actual),hl
 625+ 9C96 CD 34 9D     	call Genera_coordenadas
 626+ 9C99
 627+ 9C99              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 628+ 9C99
 629+ 9C99 CD 4B 8D     2 call Inicia_puntero_objeto_izq
 630+ 9C9C C9           3 ret
 631+ 9C9D
 632+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 633+ 9C9D              ;
 634+ 9C9D              ;	19/10/22
 635+ 9C9D              ;
 636+ 9C9D              ;	(cp 29) para un Amadeus de 3 Columns.
 637+ 9C9D              ;	(cp 30)   ""  ""    ""     2 Columns.
 638+ 9C9D
 639+ 9C9D 3A DB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 640+ 9CA0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 641+ 9CA2 C9           	ret
 642+ 9CA3
 643+ 9CA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 644+ 9CA3              ;
 645+ 9CA3              ;	19/10/22
 646+ 9CA3              ;
 647+ 9CA3              ;	(cp 2) para un Amadeus de 3 Columns.
 648+ 9CA3              ;	(cp 1)   ""  ""    ""     2 Columns.
 649+ 9CA3
 650+ 9CA3 3A DB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 651+ 9CA6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 652+ 9CA8 C9           	ret
 653+ 9CA9
 654+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 655+ 9CA9              ;
 656+ 9CA9              ;	24/7/22
 657+ 9CA9              ;
 658+ 9CA9              ;	Inc_CTRL_DESPLZ
 659+ 9CA9              ;
 660+ 9CA9              ;
 661+ 9CA9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 662+ 9CA9
 663+ 9CA9 21 DD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 664+ 9CAC 3A EB 88     	ld a,(Vel_right)
 665+ 9CAF A7           	and a
 666+ 9CB0 28 06        	jr z,1F
 667+ 9CB2 47           	ld b,a
 668+ 9CB3 34           3 inc (hl)
 669+ 9CB4 10 FD        	djnz 3B
 670+ 9CB6 18 01        	jr 2F
 671+ 9CB8 34           1 inc (hl)
 672+ 9CB9 C9           2 ret
 673+ 9CBA
 674+ 9CBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 675+ 9CBA              ;
 676+ 9CBA              ;	5/2/23
 677+ 9CBA              ;
 678+ 9CBA              ;	Dec_CTRL_DESPLZ
 679+ 9CBA              ;
 680+ 9CBA              ;
 681+ 9CBA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 682+ 9CBA
 683+ 9CBA 21 DD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 684+ 9CBD 3A EA 88     	ld a,(Vel_left)
 685+ 9CC0 A7           	and a
 686+ 9CC1 28 06        	jr z,1F
 687+ 9CC3 47           	ld b,a
 688+ 9CC4 35           3 dec (hl)
 689+ 9CC5 10 FD        	djnz 3B
 690+ 9CC7 18 01        	jr 2F
 691+ 9CC9 35           1 dec (hl)
 692+ 9CCA C9           2 ret
 693+ 9CCB
 694+ 9CCB              ; ---------- ---------- ---------- ---------- ---------- ----------
 695+ 9CCB
 696+ 9CCB 2A D7 88     Reaparece_derecha ld hl,(Posicion_actual)
 697+ 9CCE 01 1F 00     	ld bc,31
 698+ 9CD1 A7           	and a
 699+ 9CD2 ED 4A        	adc hl,bc
 700+ 9CD4 22 D7 88     	ld (Posicion_actual),hl
 701+ 9CD7 21 05 89     	ld hl,Ctrl_0														; $xxx1
 702+ 9CDA CB C6        	set 0,(hl)
 703+ 9CDC C9           	ret
 704+ 9CDD
 705+ 9CDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 706+ 9CDD
 707+ 9CDD 2A D7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 708+ 9CE0 01 1F 00     	ld bc,31
 709+ 9CE3 A7           	and a
 710+ 9CE4 ED 42        	sbc hl,bc
 711+ 9CE6 22 D7 88     	ld (Posicion_actual),hl 											; $xx1x
 712+ 9CE9 21 05 89     	ld hl,Ctrl_0
 713+ 9CEC CB CE        	set 1,(hl)
 714+ 9CEE C9           	ret
 715+ 9CEF
 716+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 717+ 9CEF
 718+ 9CEF 24           Reaparece_abajo inc h
 719+ 9CF0 01 E0 17     	ld bc,$17e0
 720+ 9CF3 A7           	and a
 721+ 9CF4 ED 4A        	adc hl,bc
 722+ 9CF6 22 D7 88     	ld (Posicion_actual),hl
 723+ 9CF9 21 05 89     	ld hl,Ctrl_0
 724+ 9CFC CB D6        	set 2,(hl)
 725+ 9CFE C9           	ret
 726+ 9CFF
 727+ 9CFF              ; ---------- ---------- ---------- ---------- ---------- ----------
 728+ 9CFF
 729+ 9CFF 01 E0 17     Reaparece_arriba ld bc,$17e0
 730+ 9D02 A7           	and a
 731+ 9D03 ED 42        	sbc hl,bc
 732+ 9D05 22 D7 88     	ld (Posicion_actual),hl
 733+ 9D08 21 05 89     	ld hl,Ctrl_0
 734+ 9D0B CB DE        	set 3,(hl)
 735+ 9D0D C9           	ret
 736+ 9D0E
 737+ 9D0E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 738+ 9D0E              ;
 739+ 9D0E              ;	15/07/23
 740+ 9D0E
 741+ 9D0E              Reinicio
 742+ 9D0E
 743+ 9D0E              ; Vamos a reiniciar los punteros y variables de movimiento.
 744+ 9D0E
 745+ 9D0E AF           	xor a
 746+ 9D0F 21 0A 89     	ld hl,Puntero_indice_mov_bucle
 747+ 9D12 CD 30 9D     	call Limpia_contenido_hl
 748+ 9D15
 749+ 9D15 21 D7 88     	ld hl,Posicion_actual
 750+ 9D18 CD 30 9D     	call Limpia_contenido_hl
 751+ 9D1B
 752+ 9D1B CD 6C A0     	call Inicializa_Puntero_indice_mov
 753+ 9D1E CD F0 9F     	call Inicia_Puntero_mov
 754+ 9D21
 755+ 9D21 21 0C 89     	ld hl,Incrementa_puntero
 756+ 9D24 06 05        	ld b,5
 757+ 9D26 77           1 ld (hl),a
 758+ 9D27 23           	inc hl
 759+ 9D28 10 FC        	djnz 1B
 760+ 9D2A
 761+ 9D2A 21 16 89     	ld hl,Ctrl_2
 762+ 9D2D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 763+ 9D2F
 764+ 9D2F C9           	ret
 765+ 9D30
 766+ 9D30 77           Limpia_contenido_hl	ld (hl),a
 767+ 9D31 23           	inc hl
 768+ 9D32 77           	ld (hl),a
 769+ 9D33 C9           	ret
 770+ 9D34
 771+ 9D34
# file closed: Direcciones.asm
1865  9D34              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D34              ; ------------------------------------------------------------------------
   2+ 9D34              ;
   3+ 9D34              ;	02/04/23
   4+ 9D34              ;
   5+ 9D34              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D34              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D34              ;
   8+ 9D34              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D34              ;
  10+ 9D34              ;	Modifica: A,BC y DE.
  11+ 9D34
  12+ 9D34 C5           Genera_coordenadas push bc
  13+ 9D35 E5           	push hl
  14+ 9D36 D5           	push de
  15+ 9D37
  16+ 9D37 2A D7 88     	ld hl,(Posicion_actual)
  17+ 9D3A
  18+ 9D3A 7D           	ld a,l
  19+ 9D3B E6 1F        	and $1f
  20+ 9D3D 32 DB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D40
  22+ 9D40 CD A0 99     	call calcula_tercio
  23+ 9D43 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D44
  25+ 9D44 1E 00        	ld e,0
  26+ 9D46 7D           	ld a,l
  27+ 9D47 E6 E0        	and $e0
  28+ 9D49 28 01        	jr z,1F
  29+ 9D4B 04           	inc b
  30+ 9D4C
  31+ 9D4C 04           1 inc b
  32+ 9D4D 05           	dec b
  33+ 9D4E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D50              ;														; _ , salimos.
  35+ 9D50 1C           3 inc e
  36+ 9D51 D6 20        	sub 32
  37+ 9D53 20 FB        	jr nz,3B
  38+ 9D55 10 F5        	djnz 1B
  39+ 9D57
  40+ 9D57 7B           2 ld a,e
  41+ 9D58 32 DC 88     	ld (Coordenada_y),a
  42+ 9D5B
  43+ 9D5B D1           	pop de
  44+ 9D5C E1           	pop hl
  45+ 9D5D C1           	pop bc
  46+ 9D5E
  47+ 9D5E C9           	ret
  48+ 9D5F
  49+ 9D5F              ; ------------------------------------------------------------------------
  50+ 9D5F              ;	28/05/23
  51+ 9D5F              ;
  52+ 9D5F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D5F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D5F              ;
  55+ 9D5F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D5F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D5F              ;
  58+ 9D5F              ;		DE="$120d"
  59+ 9D5F              ;
  60+ 9D5F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D5F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D5F              ;
  63+ 9D5F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D5F
  65+ 9D5F              ;	Modifica: A,BC y DE.
  66+ 9D5F
  67+ 9D5F
  68+ 9D5F              Genera_coordenadas_disparo
  69+ 9D5F
  70+ 9D5F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D5F
  72+ 9D5F 7D           	ld a,l
  73+ 9D60 E6 1F        	and $1f
  74+ 9D62 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D63 CD A0 99     	call calcula_tercio
  76+ 9D66 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D67 1E 00        	ld e,0
  78+ 9D69 7D           	ld a,l
  79+ 9D6A E6 E0        	and $e0
  80+ 9D6C 28 01        	jr z,1F
  81+ 9D6E 04           	inc b
  82+ 9D6F 1C           1 inc e
  83+ 9D70 D6 20        	sub 32
  84+ 9D72 20 FB        	jr nz,1B
  85+ 9D74 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D76 C9           	ret
  87+ 9D77
# file closed: Genera_coordenadas.asm
1866  9D77              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D77              ; Relojes y temporizaciones.
   2+ 9D77
   3+ 9D77              ; ------------------------------------------------------
   4+ 9D77              ;
   5+ 9D77              ;	16/7/23
   6+ 9D77              ;
   7+ 9D77              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D77              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D77              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D77              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D77              ;
  12+ 9D77              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D77              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D77
  15+ 9D77              ; Disparo_entidad db 1
  16+ 9D77              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D77              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D77
  19+ 9D77              Habilita_disparos
  20+ 9D77
  21+ 9D77 7E           	ld a,(hl)
  22+ 9D78 A7           	and a
  23+ 9D79 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D7A
  25+ 9D7A EB           	ex de,hl
  26+ 9D7B
  27+ 9D7B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D7C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D7D
  30+ 9D7D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D7D
  32+ 9D7D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D7E 7E           	ld a,(hl)
  34+ 9D7F 23           	inc hl
  35+ 9D80 77           	ld (hl),a
  36+ 9D81
  37+ 9D81 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D82 3E 01        	ld a,1
  39+ 9D84 77           	ld (hl),a
  40+ 9D85 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1867  9D86              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D86
   2+ 9D86
   3+ 9D86              ;   07/07/23
   4+ 9D86              ;
   5+ 9D86              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D86              ;
   7+ 9D86              ;   Codificación:
   8+ 9D86              ;
   9+ 9D86              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D86              ;
  11+ 9D86              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D86              ;
  13+ 9D86              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D86              ;
  15+ 9D86              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D86              ;
  17+ 9D86              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D86              ;                               ..... %01000010 Vel_up 4
  19+ 9D86              ;                                               Vel_down 2
  20+ 9D86              ;                               ..... $42
  21+ 9D86              ;
  22+ 9D86              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D86              ;
  24+ 9D86              ;                               ..... %01000010 Vel_left 4
  25+ 9D86              ;                                               Vel_right 2
  26+ 9D86              ;                               ..... $42
  27+ 9D86              ;
  28+ 9D86              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D86              ;
  30+ 9D86              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D86              ;
  32+ 9D86              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D86              ;
  34+ 9D86              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D86              ;                                     $53
  36+ 9D86              ;
  37+ 9D86              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D86              ;
  39+ 9D86              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D86              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D86              ;
  42+ 9D86              ;                       Arriba ..... $81
  43+ 9D86              ;                       Arriba - izquierda ..... $a1
  44+ 9D86              ;                       Arriba - derecha ..... $91
  45+ 9D86              ;
  46+ 9D86              ;                       Abajo ..... $41
  47+ 9D86              ;                       Abajo - izquierda ..... $61
  48+ 9D86              ;                       Abajo - derecha ..... $51
  49+ 9D86              ;
  50+ 9D86              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D86              ;
  52+ 9D86              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D86              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D86              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D86              ;
  56+ 9D86              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D86              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D86              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D86              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D86              ;
  61+ 9D86              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D86              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D86              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D86              ;
  65+ 9D86              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D86              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D86              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D86              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D86
  70+ 9D86              ; ----- ----- ----- ----- -----
  71+ 9D86
  72+ 9D86 B2 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D88 BA 9D            defw F_1
  74+ 9D8A C4 9D            defw F_2
  75+ 9D8C CE 9D            defw Codo_abajo_derecha
  76+ 9D8E 02 9E            defw Derecha_y_subiendo
  77+ 9D90 0C 9E            defw Derecha_y_subiendo_1
  78+ 9D92 16 9E            defw F_3
  79+ 9D94 20 9E            defw F_4
  80+ 9D96 2A 9E            defw Derecha_y_bajando
  81+ 9D98 34 9E            defw Derecha_y_bajando_1
  82+ 9D9A 3E 9E            defw Derecha_y_bajando_2
  83+ 9D9C 48 9E            defw Codo_derecha_abajo
  84+ 9D9E 78 9E            defw Codo_abajo_izq.
  85+ 9DA0 AC 9E            defw Izquierda_y_subiendo
  86+ 9DA2 B6 9E            defw Izquierda_y_subiendo_1
  87+ 9DA4 C0 9E            defw F_5
  88+ 9DA6 CA 9E            defw F_6
  89+ 9DA8 D4 9E            defw Izquierda_y_bajando
  90+ 9DAA DE 9E            defw Izquierda_y_bajando_1
  91+ 9DAC E8 9E            defw Izquierda_y_bajando_2
  92+ 9DAE F2 9E            defw Codo_izquierda_abajo
  93+ 9DB0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DB2
  95+ 9DB2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DB6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DBA
  98+ 9DBA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DBE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DC2 08 00
 100+ 9DC4 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DC8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DCC 0F FE
 102+ 9DCE
 103+ 9DCE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DD2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DD6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DDA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DDE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DE2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DEA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DEE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DF2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DF6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DFA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DFE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E02
 117+ 9E02 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E06 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E0A 06 00
 119+ 9E0C
 120+ 9E0C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E10 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E14 02 00
 122+ 9E16
 123+ 9E16 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E1A 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E1E 04 00
 125+ 9E20 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E24 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E28 08 00
 127+ 9E2A
 128+ 9E2A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E2E 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E32 02 00
 130+ 9E34
 131+ 9E34 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E38 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E3C 06 00
 133+ 9E3E
 134+ 9E3E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E42 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E46 06 00
 136+ 9E48
 137+ 9E48              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E48
 139+ 9E48 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E4C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E50 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E54 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E5C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E64 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E6C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E70 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E74 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E78
 152+ 9E78 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E7C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E80 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E84 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E88 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E8C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E90 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E94 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E98 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E9C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA0 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EA4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EA8 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EAC
 166+ 9EAC 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EB4 06 00
 168+ 9EB6
 169+ 9EB6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EBA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EBE 02 00
 171+ 9EC0
 172+ 9EC0 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EC4 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EC8 04 00
 174+ 9ECA 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ECE 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ED2 08 00
 176+ 9ED4
 177+ 9ED4 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9ED8 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EDC 02 00
 179+ 9EDE
 180+ 9EDE 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EE2 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EE6 06 00
 182+ 9EE8
 183+ 9EE8 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EEC 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF0 06 00
 185+ 9EF2
 186+ 9EF2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EF6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EFA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EFE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F02 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F06 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F0A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F0E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F12 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F16 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F1A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F1E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F22
 199+ 9F22              ; ----- ----- ----- ----- -----
 200+ 9F22              ;
 201+ 9F22              ;   28/12/23
 202+ 9F22
 203+ 9F22              Movimiento
 204+ 9F22
 205+ 9F22              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F22
 207+ 9F22 3A 16 89         ld a,(Ctrl_2)
 208+ 9F25 CB 57            bit 2,a
 209+ 9F27 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9F29
 211+ 9F29 2A 08 89         ld hl,(Puntero_mov)
 212+ 9F2C 7E               ld a,(hl)
 213+ 9F2D
 214+ 9F2D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9F2D
 216+ 9F2D              Inicia_desplazamiento.
 217+ 9F2D
 218+ 9F2D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9F2D
 220+ 9F2D CD 2D A0         call Ajusta_velocidad_desplazamiento
 221+ 9F30
 222+ 9F30              ; Iniciamos (Repetimos_mov).
 223+ 9F30
 224+ 9F30 7E               ld a,(hl)
 225+ 9F31 E6 0F            and $0f
 226+ 9F33 32 0E 89         ld (Repetimos_desplazamiento),a
 227+ 9F36 32 0F 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9F39
 229+ 9F39              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9F39
 231+ 9F39 23               inc hl
 232+ 9F3A 7E               ld a,(hl)
 233+ 9F3B 32 11 89         ld (Cola_de_desplazamiento),a
 234+ 9F3E 2B               dec hl
 235+ 9F3F
 236+ 9F3F 21 16 89         ld hl,Ctrl_2
 237+ 9F42 CB D6            set 2,(hl)
 238+ 9F44
 239+ 9F44              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9F44              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9F44
 242+ 9F44              Desplazamiento_iniciado
 243+ 9F44
 244+ 9F44 CD FB 9F         call Aplica_desplazamiento
 245+ 9F47
 246+ 9F47              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F47
 248+ 9F47 3A 39 89         ld a,(Ctrl_3)
 249+ 9F4A CB 57            bit 2,a
 250+ 9F4C C0               ret nz
 251+ 9F4D
 252+ 9F4D 3A 16 89         ld a,(Ctrl_2)
 253+ 9F50 CB 67            bit 4,a
 254+ 9F52 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F53
 256+ 9F53 21 0E 89     3 ld hl,Repetimos_desplazamiento
 257+ 9F56 35               dec (hl)
 258+ 9F57 C0               ret nz
 259+ 9F58
 260+ 9F58              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F58              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F58              ; Analiza (Cola_de_desplazamiento).
 263+ 9F58
 264+ 9F58 3A 11 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F5B A7               and a
 266+ 9F5C CC 56 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F5F 28 30            jr z,Reinicia_el_movimiento
 268+ 9F61
 269+ 9F61 FE FF            cp $ff
 270+ 9F63 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F65
 272+ 9F65 FE FE            cp $fe
 273+ 9F67 CC D4 9F         call z,Fijamos_bucle
 274+ 9F6A 28 25            jr z,Reinicia_el_movimiento
 275+ 9F6C
 276+ 9F6C FE FD            cp $fd
 277+ 9F6E 20 11            jr nz,1F
 278+ 9F70
 279+ 9F70              ; ---
 280+ 9F70              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F70
 282+ 9F70 3A 16 89         ld a,(Ctrl_2)
 283+ 9F73 CB 5F            bit 3,a
 284+ 9F75 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9F77
 286+ 9F77              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9F77
 288+ 9F77 21 16 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9F7A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9F7C
 291+ 9F7C CD E5 9F         call Inicia_Repetimos_movimiento
 292+ 9F7F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9F81              ; ---
 294+ 9F81
 295+ 9F81 FE 01        1 cp 1
 296+ 9F83 CA BE 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9F86
 298+ 9F86 3D               dec a
 299+ 9F87 32 11 89         ld (Cola_de_desplazamiento),a
 300+ 9F8A
 301+ 9F8A 3A 0F 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9F8D 32 0E 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9F90              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9F90 C9               ret
 305+ 9F91
 306+ 9F91              Reinicia_el_movimiento
 307+ 9F91
 308+ 9F91 3A 16 89         ld a,(Ctrl_2)
 309+ 9F94 CB 5F            bit 3,a
 310+ 9F96 28 1B            jr z,2F
 311+ 9F98
 312+ 9F98              ; (Cola_de_desplazamiento)="254".
 313+ 9F98
 314+ 9F98 21 10 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F9B 35               dec (hl)
 316+ 9F9C 20 15            jr nz,2F
 317+ 9F9E
 318+ 9F9E              ; Fin de las repeticiones del último movimiento.
 319+ 9F9E
 320+ 9F9E 21 16 89         ld hl,Ctrl_2
 321+ 9FA1 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FA3
 323+ 9FA3 2A 08 89         ld hl,(Puntero_mov)
 324+ 9FA6 23               inc hl
 325+ 9FA7 23               inc hl
 326+ 9FA8 23               inc hl
 327+ 9FA9 22 08 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FAC              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FAC 7E               ld a,(hl)
 330+ 9FAD 32 11 89         ld (Cola_de_desplazamiento),a
 331+ 9FB0
 332+ 9FB0 C3 58 9F         jp Cola
 333+ 9FB3
 334+ 9FB3 CD F0 9F     2 call Inicia_Puntero_mov
 335+ 9FB6
 336+ 9FB6 21 16 89         ld hl,Ctrl_2
 337+ 9FB9 CB 96            res 2,(hl)
 338+ 9FBB
 339+ 9FBB C3 22 9F         jp Movimiento
 340+ 9FBE
 341+ 9FBE              Siguiente_desplazamiento
 342+ 9FBE
 343+ 9FBE              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FBE              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FBE
 346+ 9FBE 21 16 89         ld hl,Ctrl_2
 347+ 9FC1 CB 96            res 2,(hl)
 348+ 9FC3
 349+ 9FC3 2A 08 89         ld hl,(Puntero_mov)
 350+ 9FC6 23               inc hl
 351+ 9FC7 23               inc hl
 352+ 9FC8 22 08 89         ld (Puntero_mov),hl
 353+ 9FCB
 354+ 9FCB 7E               ld a,(hl)
 355+ 9FCC A7               and a
 356+ 9FCD CC 56 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FD0 CA 91 9F         jp z,Reinicia_el_movimiento
 358+ 9FD3
 359+ 9FD3 C9               ret
 360+ 9FD4
 361+ 9FD4              ; Subrutinas -----------------------------------------
 362+ 9FD4              ; ---------- --------- --------- ---------- ----------
 363+ 9FD4              ;
 364+ 9FD4              ;   24/07/23
 365+ 9FD4              ;
 366+ 9FD4              ;   Fijamos_bucle
 367+ 9FD4              ;
 368+ 9FD4              ;
 369+ 9FD4
 370+ 9FD4              Fijamos_bucle
 371+ 9FD4
 372+ 9FD4 3A 0C 89         ld a,(Incrementa_puntero)
 373+ 9FD7 3C               inc a
 374+ 9FD8 32 0D 89         ld (Incrementa_puntero_backup),a
 375+ 9FDB
 376+ 9FDB CD 56 A0         call Incrementa_Puntero_indice_mov
 377+ 9FDE 2A 06 89         ld hl,(Puntero_indice_mov)
 378+ 9FE1 22 0A 89         ld (Puntero_indice_mov_bucle),hl
 379+ 9FE4 C9               ret
 380+ 9FE5
 381+ 9FE5              ; ---------- --------- --------- ---------- ----------
 382+ 9FE5              ;
 383+ 9FE5              ;   07/7/23
 384+ 9FE5              ;
 385+ 9FE5              ;   Inicia_Repetimos_movimiento
 386+ 9FE5              ;
 387+ 9FE5              ;
 388+ 9FE5
 389+ 9FE5              Inicia_Repetimos_movimiento
 390+ 9FE5
 391+ 9FE5              ; Iniciamos (Repetimos_movimiento).
 392+ 9FE5
 393+ 9FE5 DD 2A 08 89      ld ix,(Puntero_mov)
 394+ 9FE9 DD 7E 02         ld a,(ix+2)
 395+ 9FEC 32 10 89         ld (Repetimos_movimiento),a
 396+ 9FEF
 397+ 9FEF C9               ret
 398+ 9FF0
 399+ 9FF0              ; ---------- --------- --------- ---------- ----------
 400+ 9FF0              ;
 401+ 9FF0              ;   26/6/23
 402+ 9FF0              ;
 403+ 9FF0              ;   Inicia_Puntero_mov
 404+ 9FF0              ;
 405+ 9FF0              ;
 406+ 9FF0
 407+ 9FF0 2A 06 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9FF3 5E               ld e,(hl)
 409+ 9FF4 23               inc hl
 410+ 9FF5 56               ld d,(hl)
 411+ 9FF6 EB               ex de,hl
 412+ 9FF7 22 08 89         ld (Puntero_mov),hl
 413+ 9FFA C9               ret
 414+ 9FFB
 415+ 9FFB              ; ---------- --------- --------- ---------- ----------
 416+ 9FFB              ;
 417+ 9FFB              ;   27/06/23
 418+ 9FFB              ;
 419+ 9FFB              ;   Aplica_movimiento.
 420+ 9FFB
 421+ 9FFB              Aplica_desplazamiento
 422+ 9FFB
 423+ 9FFB              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9FFB
 425+ 9FFB 2A 08 89         ld hl, (Puntero_mov)
 426+ 9FFE
 427+ 9FFE 7E               ld a,(hl)
 428+ 9FFF E6 F0            and $f0
 429+ A001 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ A002
 431+ A002 CB 7E            bit 7,(hl)
 432+ A004 28 03            jr z,1F
 433+ A006 CD 1B 9A         call Mov_up
 434+ A009 2A 08 89     1 ld hl, (Puntero_mov)
 435+ A00C CB 76            bit 6,(hl)
 436+ A00E 28 09            jr z,2F
 437+ A010 CD E6 99         call Mov_down
 438+ A013
 439+ A013              ; Se ha aplicado reinicio ???
 440+ A013              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ A013
 442+ A013 3A 39 89         ld a,(Ctrl_3)
 443+ A016 CB 57            bit 2,a
 444+ A018 C0               ret nz
 445+ A019
 446+ A019 2A 08 89     2 ld hl, (Puntero_mov)
 447+ A01C CB 6E            bit 5,(hl)
 448+ A01E 28 03            jr z,3F
 449+ A020 CD 81 9B         call Mov_left
 450+ A023 2A 08 89     3 ld hl, (Puntero_mov)
 451+ A026 CB 66            bit 4,(hl)
 452+ A028 C8               ret z
 453+ A029 CD 5E 9A         call Mov_right
 454+ A02C C9               ret
 455+ A02D
 456+ A02D              ; ---------- --------- --------- ---------- ----------
 457+ A02D              ;
 458+ A02D              ;   26/06/23
 459+ A02D              ;
 460+ A02D              ;   Ajusta_velocidad_desplazamiento.
 461+ A02D
 462+ A02D              Ajusta_velocidad_desplazamiento
 463+ A02D
 464+ A02D              ; 1er byte de la cadena de movimiento.
 465+ A02D              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ A02D
 467+ A02D CD 4B A0         call Extrae_nibble_alto
 468+ A030
 469+ A030 32 EC 88         ld (Vel_up),a
 470+ A033 79               ld a,c
 471+ A034 E6 0F            and $0f
 472+ A036 32 ED 88         ld (Vel_down),a
 473+ A039
 474+ A039              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ A039              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ A039
 477+ A039 23               inc hl
 478+ A03A CD 4B A0         call Extrae_nibble_alto
 479+ A03D
 480+ A03D 32 EA 88         ld (Vel_left),a
 481+ A040 79               ld a,c
 482+ A041 E6 0F            and $0f
 483+ A043 32 EB 88         ld (Vel_right),a
 484+ A046
 485+ A046              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A046
 487+ A046 23               inc hl
 488+ A047 22 08 89         ld (Puntero_mov),hl
 489+ A04A C9               ret
 490+ A04B
 491+ A04B 06 04        Extrae_nibble_alto ld b,4
 492+ A04D 7E               ld a,(hl)
 493+ A04E 4F               ld c,a
 494+ A04F E6 F0            and $f0
 495+ A051 CB 3F        1 srl a
 496+ A053 10 FC            djnz 1B
 497+ A055 C9               ret
 498+ A056
 499+ A056              ; ---------- --------- --------- ---------- ----------
 500+ A056              ;
 501+ A056              ;   5/7/23
 502+ A056              ;
 503+ A056              ;   Incrementa_Puntero_indice_mov
 504+ A056
 505+ A056              Incrementa_Puntero_indice_mov
 506+ A056
 507+ A056 21 0C 89         ld hl,Incrementa_puntero
 508+ A059 34               inc (hl)
 509+ A05A
 510+ A05A 2A 06 89         ld hl,(Puntero_indice_mov)
 511+ A05D 01 02 00         ld bc,2
 512+ A060 A7               and a
 513+ A061 09               add hl,bc
 514+ A062 22 06 89         ld (Puntero_indice_mov),hl
 515+ A065
 516+ A065 7E               ld a,(hl)
 517+ A066 A7               and a
 518+ A067
 519+ A067              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A067
 521+ A067              ;    jr z,$
 522+ A067
 523+ A067              ;! Reinicia el Patrón de movimiento.
 524+ A067
 525+ A067 CC 6C A0         call z,Inicializa_Puntero_indice_mov
 526+ A06A
 527+ A06A AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A06B
 529+ A06B C9               ret
 530+ A06C
 531+ A06C
 532+ A06C              ; ---------- --------- --------- ---------- ----------
 533+ A06C              ;
 534+ A06C              ;   24/07/23
 535+ A06C              ;
 536+ A06C              ;   Inicializa_Puntero_indice_mov
 537+ A06C
 538+ A06C              Inicializa_Puntero_indice_mov
 539+ A06C
 540+ A06C              ; Existe etiqueta de bucle principal???
 541+ A06C
 542+ A06C 2A 0A 89         ld hl,(Puntero_indice_mov_bucle)
 543+ A06F 24               inc h
 544+ A070 25               dec h
 545+ A071 28 05            jr z,2F
 546+ A073
 547+ A073 22 06 89         ld (Puntero_indice_mov),hl
 548+ A076 18 14            jr 3F
 549+ A078
 550+ A078              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A078
 552+ A078 3A 0C 89     2 ld a,(Incrementa_puntero)
 553+ A07B 47               ld b,a
 554+ A07C
 555+ A07C 2A 06 89         ld hl,(Puntero_indice_mov)
 556+ A07F 2B           1 dec hl
 557+ A080 2B               dec hl
 558+ A081 10 FC            djnz 1B
 559+ A083 22 06 89         ld (Puntero_indice_mov),hl
 560+ A086
 561+ A086 AF               xor a
 562+ A087 32 0C 89         ld (Incrementa_puntero),a
 563+ A08A 18 06            jr 4F
 564+ A08C
 565+ A08C 3A 0D 89     3 ld a,(Incrementa_puntero_backup)
 566+ A08F 32 0C 89         ld (Incrementa_puntero),a
 567+ A092 C9           4 ret
 568+ A093
 569+ A093
 570+ A093
# file closed: Patrones_de_mov.asm
1868  A093              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A093              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A093              ;
   3+ A093              ;	12/12/23
   4+ A093              ;
   5+ A093              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A093
   7+ A093              ;	ADC HL,SP	LD (addr),SP
   8+ A093              ;	ADD HL,SP	LD SP,(addr)
   9+ A093              ;	ADD IX,SP	LD SP,nn
  10+ A093              ; 	ADD IY,SP	LD SP,HL
  11+ A093              ;				LD SP,IX
  12+ A093              ;	DEC SP		LD SP,IY
  13+ A093
  14+ A093              ;	EX (SP),HL
  15+ A093              ;	EX (SP),IX
  16+ A093              ;	EX (SP),IY
  17+ A093
  18+ A093              ;	INC SP
  19+ A093
  20+ A093                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 2B 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 F5 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 01 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 1A 89         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 33 89         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 05 89     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 37 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 31 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 1A 89         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 33 89         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 05 89     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 37 89         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 2B 89      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 31 89     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 2B 89  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 31 89         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 31 89         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1869  718B
1870  718B              	SAVESNA "Pruebas.sna", START
1871  718B
1872  718B
1873  718B
1874  718B
# file closed: Banco_de_pruebas.asm
