# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 98 8A     	call Frame
  15  A104
  16  A104 3A CA 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 0D ED E0 0D  Explosion_2x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 210+ 83F2 ED E0 0D ED
 211+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 211+ 83FA 0D ED E0 0D
 212+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 212+ 8402 E0 0D ED E0
 213+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 213+ 840A ED E0 0D ED
 214+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 214+ 8412 0D ED E0 0D
 215+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 215+ 841A E0 0D ED E0
 216+ 841E
 217+ 841E 01 8F 80 01  Explosion_2x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 217+ 8422 8F 80 01 8F
 218+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 218+ 842A 01 8F 80 01
 219+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 219+ 8432 80 01 8F 80
 220+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 220+ 843A 8F 80 01 8F
 221+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 221+ 8442 01 8F 80 01
 222+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 222+ 844A 80 01 8F 80
 223+ 844E
 224+ 844E 01 11 10 01  Explosion_2x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 224+ 8452 11 10 01 11
 225+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 225+ 845A 01 11 10 01
 226+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 226+ 8462 10 01 11 10
 227+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 227+ 846A 11 10 01 11
 228+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 228+ 8472 01 11 10 01
 229+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 229+ 847A 10 01 11 10
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 DE DE DE DE  Explosion_2x2_1 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 237+ 8488 DE DE DE DE
 238+ 848C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 238+ 8490 DE DE DE DE
 239+ 8494 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 239+ 8498 DE DE DE DE
 240+ 849C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 240+ 84A0 DE DE DE DE
 241+ 84A4
 242+ 84A4 DE DE DE DE  Explosion_2x2_2	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 242+ 84A8 DE DE DE DE
 243+ 84AC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 243+ 84B0 DE DE DE DE
 244+ 84B4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 244+ 84B8 DE DE DE DE
 245+ 84BC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 245+ 84C0 DE DE DE DE
 246+ 84C4
 247+ 84C4 DE DE DE DE  Explosion_2x2_3	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 247+ 84C8 DE DE DE DE
 248+ 84CC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 248+ 84D0 DE DE DE DE
 249+ 84D4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 249+ 84D8 DE DE DE DE
 250+ 84DC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 250+ 84E0 DE DE DE DE
 251+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E CF 9C        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 40 50        	defw $5040                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E D3 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E D3 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E D1 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E CD 9C        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 92 88        	defw Nivel_2
   7+ 8884 9F 88        	defw Nivel_3
   8+ 8886 AF 88        	defw Nivel_4
   9+ 8888 C1 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 03           Nivel_1 db 3	                                ; Nº de entidades.
  19+ 888F 05 01 04     	db 5,1,4
  20+ 8892 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 8893 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 8897 01 02
  22+ 8899 02 01 01 01  	db 2,1,1,1,1,2
  22+ 889D 01 02
  23+ 889F 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88A0 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88A4 01
  25+ 88A5 03 01 01 01  	db 3,1,1,1,1
  25+ 88A9 01
  26+ 88AA 03 01 01 01  	db 3,1,1,1,1
  26+ 88AE 01
  27+ 88AF 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88B0 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88B4 01
  29+ 88B5 04 01 01 01  	db 4,1,1,1,1
  29+ 88B9 01
  30+ 88BA 04 01 01 01  	db 4,1,1,1,1
  30+ 88BE 01
  31+ 88BF 02 03        	db 2,3
  32+ 88C1 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88C2 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88C6 01
  34+ 88C7 05 01 01 01  	db 5,1,1,1,1
  34+ 88CB 01
  35+ 88CC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88D0 01
  36+ 88D1 05 01 01 01  	db 5,1,1,1,1
  36+ 88D5 01
  37+ 88D6
  38+ 88D6              ;---------------------------------------------------------------------------------------------------------------
  39+ 88D6              ;
  40+ 88D6              ;   21/5/23
  41+ 88D6              ;
  42+ 88D6              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88D6              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88D6              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88D6              ;	_en la caja DRAW correspondiente.
  46+ 88D6              ;
  47+ 88D6              ;	MODIFICA: HL,DE y A.
  48+ 88D6              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88D6
  50+ 88D6              Inicializa_Punteros_de_nivel
  51+ 88D6
  52+ 88D6 21 80 88     	ld hl,Indice_de_niveles
  53+ 88D9 22 FD 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 88DC CD F2 8C     	call Extrae_address
  55+ 88DF 7E           	ld a,(hl)
  56+ 88E0 32 D3 89     	ld (Numero_de_entidades),a
  57+ 88E3 23           	inc hl
  58+ 88E4 22 FF 89     	ld (Datos_de_nivel),hl
  59+ 88E7 C9           	ret
  60+ 88E8
  61+ 88E8              ;---------------------------------------------------------------------------------------------------------------
  62+ 88E8              ;
  63+ 88E8              ;   13/5/23
  64+ 88E8              ;
  65+ 88E8              ;	Destruye A,BC,HL,DE
  66+ 88E8
  67+ 88E8              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 88E8              ;	_del juego.
  69+ 88E8
  70+ 88E8              Prepara_cajas
  71+ 88E8
  72+ 88E8              ; Preparamos los punteros de las cajas.
  73+ 88E8
  74+ 88E8 21 64 85     	ld hl,Indice_de_cajas
  75+ 88EB CD F2 8C     	call Extrae_address
  76+ 88EE CD 2B 89     	call Avanza_caja
  77+ 88F1
  78+ 88F1 CD 6F 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 88F4
  80+ 88F4 2A FF 89     	ld hl,(Datos_de_nivel)
  81+ 88F7
  82+ 88F7              ; HL está en los datos del nivel correspondiente.
  83+ 88F7              ; B actuará como contador de cajas.
  84+ 88F7
  85+ 88F7 C5           1 push bc
  86+ 88F8
  87+ 88F8 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 88F9 CD 1C 89     	call PreparaBC
  89+ 88FC
  90+ 88FC 21 26 88     	ld hl,Indice_de_entidades
  91+ 88FF CD 24 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8902 22 D9 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8905
  94+ 8905 CD 35 89     	call Datos_de_entidad_a_caja
  95+ 8908
  96+ 8908 2A D1 89     	ld hl,(Indice_restore_caja)
  97+ 890B CD F2 8C     	call Extrae_address
  98+ 890E CD 2B 89     	call Avanza_caja
  99+ 8911
 100+ 8911 2A FF 89     	ld hl,(Datos_de_nivel)
 101+ 8914 23           	inc hl
 102+ 8915 22 FF 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8918
 104+ 8918 C1           	pop bc
 105+ 8919 10 DC        	djnz 1B
 106+ 891B C9           	ret
 107+ 891C
 108+ 891C CB 27        PreparaBC sla a
 109+ 891E D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8920 4F           	ld c,a
 111+ 8921 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8923 C9           	ret
 113+ 8924
 114+ 8924 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8925 ED 4A        	adc hl,bc
 116+ 8927 CD F2 8C     	call Extrae_address
 117+ 892A C9           	ret
 118+ 892B
 119+ 892B 22 CD 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 892E 13           	inc de
 121+ 892F 13           	inc de
 122+ 8930 EB           	ex de,hl
 123+ 8931 22 D1 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8934 C9           	ret
 125+ 8935
 126+ 8935              Datos_de_entidad_a_caja
 127+ 8935
 128+ 8935              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8935
 130+ 8935
 131+ 8935 ED 5B CD 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8939
 133+ 8939 01 02 00     	ld bc,2
 134+ 893C ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 893E
 136+ 893E 01 07 00     	ld bc,7
 137+ 8941 CD 69 89     	call Situa_DE
 138+ 8944
 139+ 8944 01 05 00     	ld bc,5
 140+ 8947 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8949
 142+ 8949 01 04 00     	ld bc,4
 143+ 894C CD 69 89     	call Situa_DE
 144+ 894F
 145+ 894F 01 07 00     	ld bc,7
 146+ 8952 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8954
 148+ 8954 01 18 00     	ld bc,24
 149+ 8957 CD 69 89     	call Situa_DE
 150+ 895A
 151+ 895A 01 02 00     	ld bc,2
 152+ 895D ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 895F
 154+ 895F 01 0A 00     	ld bc,10
 155+ 8962 CD 69 89     	call Situa_DE
 156+ 8965
 157+ 8965 3E 03        	ld a,3
 158+ 8967 12           	ld (de),a 									; Vuelco (Frames_explosion).
 159+ 8968
 160+ 8968 C9           	ret
 161+ 8969
 162+ 8969 EB           Situa_DE ex de,hl
 163+ 896A A7           	and a
 164+ 896B ED 4A        	adc hl,bc
 165+ 896D EB           	ex de,hl
 166+ 896E C9           	ret
 167+ 896F
 168+ 896F              ;---------------------------------------------------------------------------------------------------------------
 169+ 896F              ;
 170+ 896F              ;	21/5/23
 171+ 896F              ;
 172+ 896F              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 173+ 896F              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 174+ 896F              ;
 175+ 896F              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 176+ 896F              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 177+ 896F              ;	_ total de entidades que contiene (Numero_de_entidades).
 178+ 896F              ;
 179+ 896F              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 180+ 896F              ;	MODIFICA: A y B.
 181+ 896F              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 182+ 896F
 183+ 896F              Admin_num_entidades
 184+ 896F
 185+ 896F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 186+ 896F
 187+ 896F 3A D3 89     	ld a,(Numero_de_entidades)
 188+ 8972 A7           	and a
 189+ 8973              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 190+ 8973              ;	jr z,$
 191+ 8973              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 8973
 193+ 8973 20 03        	jr nz,3F
 194+ 8975
 195+ 8975              ;! RESET para pruebas. Omitir esta línea en modo normal.
 196+ 8975
 197+ 8975 CD D6 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 198+ 8978
 199+ 8978
 200+ 8978 3A D3 89     3 ld a,(Numero_de_entidades)
 201+ 897B FE 0A        	cp 10
 202+ 897D 38 08        	jr c,1F
 203+ 897F
 204+ 897F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 205+ 897F              ; Actualizamos variables.
 206+ 897F
 207+ 897F 3E 0A        	ld a,10
 208+ 8981 32 D4 89     	ld (Numero_parcial_de_entidades),a
 209+ 8984 47           	ld b,a
 210+ 8985 18 04        	jr 2F
 211+ 8987
 212+ 8987              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 213+ 8987              ; (Numero_de_entidades)="0".
 214+ 8987
 215+ 8987 32 D4 89     1 ld (Numero_parcial_de_entidades),a
 216+ 898A 47           	ld b,a
 217+ 898B C9           2 ret
# file closed: Niveles.asm
  25  898C
  26  898C              ; ******************************************************************************************************************************************************************************************
  27  898C              ; Constantes.
  28  898C              ; ******************************************************************************************************************************************************************************************
  29  898C              ;
  30  898C              ; 25/05/23
  31  898C              ;
  32  898C              ; Constantes generales.
  33  898C              ;
  34  898C
  35  898C              Sprite_vacio equ $f000
  36  898C              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  898C              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  898C              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  898C              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  898C
  41  898C              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  898C              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  898C              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  898C              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  898C              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  898C              ;                               				        ; De momento situamos este almacén en $7060.
  47  898C
  48  898C              ; ******************************************************************************************************************************************************************************************
  49  898C              ; Variables.
  50  898C              ; ******************************************************************************************************************************************************************************************
  51  898C              ;
  52  898C              ; 30/05/23
  53  898C              ;
  54  898C              ; Variables de DRAW. (Motor principal).
  55  898C              ;
  56  898C              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  898C
  58  898C 00           Filas db 0												; Filas. [DRAW]
  59  898D 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  898E 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  8990 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8992 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  8993 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  8994
  65  8994              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  8994
  67  8994 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  8995              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  8995              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  8995 00           Attr db 0												; Atributos de la entidad:
  71  8996
  72  8996              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  8996              ;
  74  8996              ;	COLORES: 0 ..... NEGRO
  75  8996              ;    		 1 ..... AZUL
  76  8996              ; 			 2 ..... ROJO
  77  8996              ;			 3 ..... MAGENTA
  78  8996              ; 			 4 ..... VERDE
  79  8996              ; 			 5 ..... CIAN
  80  8996              ;			 6 ..... AMARILLO
  81  8996              ; 			 7 ..... BLANCO
  82  8996
  83  8996 00 00        Indice_Sprite_der defw 0
  84  8998 00 00        Indice_Sprite_izq defw 0
  85  899A 00 00        Puntero_DESPLZ_der defw 0
  86  899C 00 00        Puntero_DESPLZ_izq defw 0
  87  899E
  88  899E 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89A0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89A1
  91  89A1              ; Variables de objeto. (Características).
  92  89A1
  93  89A1 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89A2 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89A3 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89A4 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89A5
  98  89A5 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89A6              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89A6              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89A6
 102  89A6 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89A8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89AA 00 00        	defw 0
 105  89AC 00 00 00 00  	db 0,0,0,0
 106  89B0
 107  89B0 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89B2 00 00        	defw 0
 109  89B4 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89B6 00 00 00 00  	db 0,0,0,0
 111  89BA
 112  89BA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89BA
 114  89BA 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89BB              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89BB              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89BB              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89BB              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89BB              ;
 120  89BB              ; 														DESCRIPCIÖN:
 121  89BB              ;
 122  89BB              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89BB              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89BB              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89BB              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89BB              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89BB              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89BB              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89BB              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89BB              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89BB              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89BB              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89BB              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89BB              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89BB              ;
 136  89BB              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89BB              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89BB              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89BB
 140  89BB 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89BC
 142  89BC              ; Movimiento.
 143  89BC
 144  89BC 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89BD 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89BF 00 00        Puntero_mov defw 0
 147  89C1 00           Contador_db_mov db 0
 148  89C2 00           Incrementa_puntero db 0
 149  89C3 00           Repetimos_db db 0
 150  89C4
 151  89C4              ; Variables de funcionamiento. [DRAW].
 152  89C4
 153  89C4 00           Columnas db 0
 154  89C5 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89C7              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89C7 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89C8
 158  89C8              ; variables de control general.
 159  89C8
 160  89C8 00           Ctrl_2 db 0
 161  89C9              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89C9              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89C9              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89C9              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89C9              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89C9              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89C9              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89C9              ;
 169  89C9              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89C9
 171  89C9 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89CA
 173  89CA              ; 62 Bytes por entidad.
 174  89CA              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89CA              ;					         		---------;      ;---------
 176  89CA
 177  89CA
 178  89CA              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89CA
 180  89CA 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89CB
 182  89CB              ;														DESCRIPCIÓN:
 183  89CB              ;
 184  89CB              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89CB              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89CB              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89CB              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89CB              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89CB              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89CB              ;														BIT 3, Recarga de nueva oleada.
 191  89CB              ;														BIT 4, Recarga de nueva oleada.
 192  89CB
 193  89CB 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89CD              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89CD              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89CD              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89CD
 198  89CD
 199  89CD
 200  89CD              ; Gestión de ENTIDADES y CAJAS.
 201  89CD
 202  89CD              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89CD 00 00        Puntero_store_caja defw 0
 204  89CF 00 00        Puntero_restore_caja defw 0
 205  89D1 00 00        Indice_restore_caja defw 0
 206  89D3 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89D4 00           Numero_parcial_de_entidades db 0
 208  89D5 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89D6 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89D7              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89D7              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89D7              ;														; _ (Numero_de_malotes)="0".
 213  89D7 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89D9 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89DB              ;														; _ puntero (Indice_entidades).
 216  89DB
 217  89DB
 218  89DB              ;---------------------------------------------------------------------------------------------------------------
 219  89DB              ;
 220  89DB              ; Sirven para PINTAR.
 221  89DB
 222  89DB 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89DD              ;														; _variable para almacenar lo posición del puntero_
 224  89DD              ; 														; _de pila, SP.
 225  89DD 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89DF              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89DF 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89E1              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89E1              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89E1 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89E3              ;														; _el snapshot de los registros del siguiente disparo.
 232  89E3              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89E3
 234  89E3              ;---------------------------------------------------------------------------------------------------------------
 235  89E3
 236  89E3              ; Gestión de Disparos.
 237  89E3
 238  89E3 00           Numero_de_disparotes db 0
 239  89E4 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89E6 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89E8 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89E9              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89E9              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89E9 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89EB              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89EB              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89EB              ;														; _produzca colisión.
 248  89EB 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89ED              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89F0 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  89F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  89F3              ;---------------------------------------------------------------------------------------------------------------
 255  89F3
 256  89F3              ; Relojes y temporizaciones.
 257  89F3
 258  89F3 00           Contador_de_frames db 0
 259  89F4 00           Secundero db 0
 260  89F5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  89F6              ;														; Repite la oleada de entidades.
 262  89F6 01           Habilita_disparo_Amadeus db 1
 263  89F7 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  89F8 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  89F9
 266  89F9 01           Habilita_disparo_entidad db 1
 267  89FA 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  89FB 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  89FC
 270  89FC              ;---------------------------------------------------------------------------------------------------------------
 271  89FC
 272  89FC              ; Gestión de FRAMES.
 273  89FC
 274  89FC              ;Switch db 0
 275  89FC
 276  89FC              ; Variables de Raster y localización en pantalla.
 277  89FC
 278  89FC              ;Temp_Raster defw $ff00
 279  89FC
 280  89FC              ;---------------------------------------------------------------------------------------------------------------
 281  89FC
 282  89FC              ; Gestión de NIVELES.
 283  89FC
 284  89FC 00           Nivel db 0												 ; Nivel actual del juego.
 285  89FD 00 00        Puntero_indice_NIVELES defw 0
 286  89FF 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 287  8A01              ; 														 ; _ que definen el NIVEL.
 288  8A01
 289  8A01
 290  8A01              ; Y todo comienza aquí .....
 291  8A01              ;
 292  8A01              ; Rutina principal *************************************************************************************************************************************************************************
 293  8A01              ;
 294  8A01              ;	14/11/22
 295  8A01
 296  8A01              START
 297  8A01
 298  8A01 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 299  8A04 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 300  8A06 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 301  8A08 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 302  8A0A F3           	DI
 303  8A0B
 304  8A0B 3E 07        	ld a,%00000111
 305  8A0D CD A7 98     	call Cls
 306  8A10
 307  8A10              ;	call Pinta_marco
 308  8A10
 309  8A10 CD D6 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 310  8A13 CD CB 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 311  8A16
 312  8A16 CD E8 88     4 call Prepara_cajas
 313  8A19
 314  8A19 CD 9E 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 315  8A1C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 316  8A1C CD 7B 8D     	call Restore_entidad
 317  8A1F
 318  8A1F 21 D4 89     	ld hl,Numero_parcial_de_entidades
 319  8A22 46           	ld b,(hl)
 320  8A23 04           	inc b
 321  8A24 05           	dec b
 322  8A25 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 323  8A27
 324  8A27              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 325  8A27              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 326  8A27              ;	Pintamos el resto de entidades:
 327  8A27
 328  8A27              ;	INICIA ENTIDADES !!!!!
 329  8A27
 330  8A27 C5           1 push bc  												; Guardo el contador de entidades.
 331  8A28 CD F8 8C     	call Inicia_Puntero_objeto
 332  8A2B CD BB 98     	call Recompone_posicion_inicio
 333  8A2E CD F7 92     	call Draw
 334  8A31 CD A0 7F     	call Guarda_foto_registros
 335  8A34 CD 40 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 336  8A37 C1           	pop bc
 337  8A38 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 338  8A3A
 339  8A3A              ;	call Pinta_marco
 340  8A3A
 341  8A3A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 342  8A3A
 343  8A3A 3A CA 89     	ld a,(Ctrl_1)
 344  8A3D CB 5F        	bit 3,a
 345  8A3F 20 18        	jr nz,5F											; Loop
 346  8A41
 347  8A41              ; 	INICIA AMADEUS !!!!!
 348  8A41
 349  8A41 CD A2 8D     3 call Restore_Amadeus
 350  8A44 CD F8 8C     	call Inicia_Puntero_objeto
 351  8A47 CD F7 92     	call Draw
 352  8A4A CD A0 7F     	call Guarda_foto_registros
 353  8A4D 11 7C 85     	ld de,Amadeus_db
 354  8A50 CD B4 8D     	call Store_Amadeus
 355  8A53
 356  8A53              ; 	INICIA DISPAROS !!!!!
 357  8A53
 358  8A53 CD B4 8C     	call Inicia_Puntero_Disparo_Entidades
 359  8A56 CD BB 8C     	call Inicia_Puntero_Disparo_Amadeus
 360  8A59
 361  8A59              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 362  8A59
 363  8A59 CD 9E 8C     5 call Inicia_punteros_de_cajas
 364  8A5C CD 7B 8D     	call Restore_entidad
 365  8A5F
 366  8A5F 3A CA 89     	ld a,(Ctrl_1)
 367  8A62 CB 5F        	bit 3,a
 368  8A64 28 0A        	jr z,6F
 369  8A66
 370  8A66              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 371  8A66
 372  8A66 21 CA 89     	ld hl,Ctrl_1
 373  8A69 CB 9E        	res 3,(hl)
 374  8A6B CD C2 8C     	call Calcula_numero_de_malotes
 375  8A6E 18 07        	jr 7F
 376  8A70
 377  8A70              ; ----------
 378  8A70
 379  8A70 3A D4 89     6 ld a,(Numero_parcial_de_entidades)
 380  8A73 3C           	inc a
 381  8A74 32 D6 89     	ld (Numero_de_malotes),a
 382  8A77
 383  8A77 AF           7 xor a
 384  8A78 FB           2 ei
 385  8A79 28 FD        	jr z,2B
 386  8A7B
 387  8A7B 3A F4 89     	ld a,(Secundero)
 388  8A7E 47           	ld b,a
 389  8A7F 3A F5 89     	ld a,(Activa_recarga_cajas)
 390  8A82 B8           	cp b
 391  8A83 28 08        	jr z,8F
 392  8A85
 393  8A85 21 CA 89     	ld hl,Ctrl_1
 394  8A88 CB E6        	set 4,(hl)
 395  8A8A AF           	xor a
 396  8A8B 18 EB        	jr 2B
 397  8A8D
 398  8A8D 21 CA 89     8 ld hl,Ctrl_1
 399  8A90 CB A6        	res 4,(hl)
 400  8A92 F3           	di
 401  8A93
 402  8A93 18 FE        	jr $
 403  8A95 C3 16 8A     	jp 4B
 404  8A98
 405  8A98              ; -----------------------------------------------------------------------------------
 406  8A98
 407  8A98              Frame
 408  8A98
 409  8A98              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 410  8A98              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 411  8A98
 412  8A98              ; PINTAMOS.
 413  8A98
 414  8A98 3E 02            ld a,2
 415  8A9A D3 FE            out ($fe),a
 416  8A9C CD FB 95     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 417  8A9F CD 34 96     	call Extrae_foto_disparos
 418  8AA2 3E 01            ld a,1
 419  8AA4 D3 FE            out ($fe),a
 420  8AA6
 421  8AA6
 422  8AA6              ;    jr $
 423  8AA6
 424  8AA6              ; ----------------------------------------------------------------------
 425  8AA6
 426  8AA6              ; RELOJES.
 427  8AA6
 428  8AA6 21 F3 89     	ld hl,Contador_de_frames
 429  8AA9 34           	inc (hl)											; 0 - 255
 430  8AAA
 431  8AAA 3E 3C        	ld a,60
 432  8AAC BE           	cp (hl)
 433  8AAD 20 22        	jr nz,13F
 434  8AAF
 435  8AAF 36 00        	ld (hl),0
 436  8AB1
 437  8AB1 21 F4 89     	ld hl,Secundero
 438  8AB4 34           	inc (hl)
 439  8AB5
 440  8AB5 7E           	ld a,(hl)
 441  8AB6 E6 01        	and %00000001
 442  8AB8 20 10        	jr nz,20F
 443  8ABA
 444  8ABA 3A D4 89     	ld a,(Numero_parcial_de_entidades)
 445  8ABD 47           	ld b,a
 446  8ABE 3A D5 89     	ld a,(Entidades_en_curso)
 447  8AC1 B8           	cp b
 448  8AC2 28 06        	jr z,20F
 449  8AC4 30 04        	jr nc,20F
 450  8AC6
 451  8AC6 3C           	inc a
 452  8AC7 32 D5 89     	ld (Entidades_en_curso),a
 453  8ACA
 454  8ACA 3E 3C        20 ld a,60
 455  8ACC BE           	cp (hl)
 456  8ACD 20 02        	jr nz,13F
 457  8ACF
 458  8ACF 36 00        	ld (hl),0
 459  8AD1
 460  8AD1 21 F6 89     13 ld hl,Habilita_disparo_Amadeus
 461  8AD4 11 F8 89     	ld de,Temporiza_disparo_Amadeus
 462  8AD7 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 463  8ADA
 464  8ADA 21 F9 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 465  8ADD 11 FB 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 466  8AE0 CD D5 7F     	call Habilita_disparos
 467  8AE3
 468  8AE3              ; COLISIONES.
 469  8AE3
 470  8AE3 CD DD 91     	call Selector_de_impactos
 471  8AE6
 472  8AE6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 473  8AE6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 474  8AE6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 475  8AE6
 476  8AE6 AF           	xor a
 477  8AE7 32 E8 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 478  8AEA
 479  8AEA CD 9E 8C     	call Inicia_punteros_de_cajas
 480  8AED CD 7B 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 481  8AF0              ; 														; _ en DRAW.
 482  8AF0 3A 8C 89     	ld a,(Filas)
 483  8AF3 A7           	and a
 484  8AF4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 485  8AF6 CD 8D 8D     	call Incrementa_punteros_de_cajas
 486  8AF9 18 F2        	jr 12B
 487  8AFB
 488  8AFB              ; ---------------------------------------------------------------------------------------
 489  8AFB
 490  8AFB CD 5B 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 491  8AFE 21 00 70     	ld hl,Album_de_fotos
 492  8B01 22 DF 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 493  8B04              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 494  8B04 3A D4 89     	ld a,(Numero_parcial_de_entidades)
 495  8B07 47               ld b,a
 496  8B08 A7           	and a
 497  8B09 20 17        	jr nz,2F
 498  8B0B
 499  8B0B 21 CA 89     	ld hl,Ctrl_1
 500  8B0E CB 66        	bit 4,(hl)
 501  8B10 C2 9E 8B     	jp nz,4F
 502  8B13
 503  8B13 21 CA 89     	ld hl,Ctrl_1
 504  8B16 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 505  8B18 3A F4 89     	ld a,(Secundero)
 506  8B1B 3C           	inc a
 507  8B1C 32 F5 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 508  8B1F
 509  8B1F C3 9E 8B     	jp 4F
 510  8B22
 511  8B22              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 512  8B22
 513  8B22 3A D5 89     2 ld a,(Entidades_en_curso)
 514  8B25 A7           	and a
 515  8B26 28 76        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 516  8B28 47           	ld b,a												; Entidades en curso en B.
 517  8B29
 518  8B29              ; Código que ejecutamos con cada entidad:
 519  8B29              ; Impacto ???
 520  8B29
 521  8B29 C5           15 push bc 												; Nº de entidades en curso.
 522  8B2A
 523  8B2A 3A A5 89     	ld a,(Impacto)
 524  8B2D A7           	and a
 525  8B2E 28 25        	jr z,8F
 526  8B30
 527  8B30              ; Hay Impacto en esta entidad.
 528  8B30
 529  8B30 CD 55 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 530  8B33
 531  8B33              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 532  8B33
 533  8B33 3A C8 89     	ld a,(Ctrl_2)
 534  8B36 CB 4F        	bit 1,a
 535  8B38 20 38        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 536  8B3A
 537  8B3A 3A 94 89     	ld a,(CTRL_DESPLZ)
 538  8B3D A7           	and a
 539  8B3E 20 08        	jr nz,21F
 540  8B40
 541  8B40 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 542  8B43 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 543  8B46 18 06        	jr 22F
 544  8B48
 545  8B48 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 546  8B4B 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 547  8B4E
 548  8B4E 21 C8 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 549  8B51 CB CE        	set 1,(hl)
 550  8B53 18 1D        	jr 7F
 551  8B55
 552  8B55              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 553  8B55              ; _con las coordenadas de la entidad almacenada en DRAW.
 554  8B55
 555  8B55 3A CA 89     8 ld a,(Ctrl_1)
 556  8B58 CB 57        	bit 2,a
 557  8B5A 28 16        	jr z,7F
 558  8B5C
 559  8B5C 2A EB 89     	ld hl,(Coordenadas_disparo_certero)
 560  8B5F EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 561  8B60              ;														; E contiene la coordenada_X del disparo.
 562  8B60 2A 92 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 563  8B63              ;														; H FILA, (Coordenada_y de la entidad).
 564  8B63 A7           	and a
 565  8B64 ED 52        	sbc hl,de
 566  8B66
 567  8B66 CD 14 92     	call Determina_resultado_comparativa
 568  8B69
 569  8B69              ;! Debug colisiones
 570  8B69 78           	ld a,b
 571  8B6A A7           	and a
 572  8B6B              ;	ld a,(Cuad_objeto)
 573  8B6B              ;	inc b
 574  8B6B              ;	dec b
 575  8B6B 28 05        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 576  8B6D              ;	jr z,$
 577  8B6D
 578  8B6D              ;! Debug colisiones
 579  8B6D
 580  8B6D              ; ----- ----- -----
 581  8B6D
 582  8B6D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 583  8B6F 32 A5 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 584  8B72
 585  8B72              ;	ld hl,Ctrl_1
 586  8B72              ;	res 2,(hl)
 587  8B72
 588  8B72              ; Limpiamos las coordenadas del disparo asesino. Ya tenemos víctima.
 589  8B72
 590  8B72              ;	ld hl,Coordenadas_disparo_certero
 591  8B72              ;	ld (hl),0
 592  8B72              ;	inc hl
 593  8B72              ;	ld (hl),0
 594  8B72
 595  8B72 CD D1 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 596  8B75
 597  8B75 3A BA 89     	ld a,(Ctrl_0)
 598  8B78 CB 67        	bit 4,a
 599  8B7A 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 600  8B7C
 601  8B7C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 602  8B7C              ; [[[
 603  8B7C CD 16 8E     	call Detecta_disparo_entidad
 604  8B7F              ; ]]]
 605  8B7F CD 65 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 606  8B82
 607  8B82 21 BA 89     	ld hl,Ctrl_0
 608  8B85 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 609  8B87 AF           	xor a
 610  8B88 32 BB 89     	ld (Obj_dibujado),a
 611  8B8B
 612  8B8B CD 40 8D     6 call Store_Restore_cajas
 613  8B8E
 614  8B8E C1           	pop bc
 615  8B8F 10 98        	djnz 15B
 616  8B91
 617  8B91              ; ------------------------------------
 618  8B91
 619  8B91              ; Hemos gestionado todas las unidades.
 620  8B91              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 621  8B91
 622  8B91 21 CA 89     	ld hl,Ctrl_1
 623  8B94 CB 96        	res 2,(hl)
 624  8B96
 625  8B96              ; Limpiamos las coordenadas del disparo asesino.
 626  8B96
 627  8B96 21 EB 89     	ld hl,Coordenadas_disparo_certero
 628  8B99 36 00        	ld (hl),0
 629  8B9B 23           	inc hl
 630  8B9C 36 00        	ld (hl),0
 631  8B9E
 632  8B9E              ; ------------------------------------
 633  8B9E
 634  8B9E              ; Tras la gestión de las entidades, ... AMADEUS.
 635  8B9E
 636  8B9E CD A2 8D     4 call Restore_Amadeus
 637  8BA1
 638  8BA1 3A A5 89     	ld a,(Impacto)
 639  8BA4 A7           	and a
 640  8BA5 20 FE        	jr nz,$
 641  8BA7
 642  8BA7 CD 36 8C     	call Mov_Amadeus
 643  8BAA
 644  8BAA 3A BA 89     	ld a,(Ctrl_0)
 645  8BAD CB 67        	bit 4,a
 646  8BAF 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 647  8BB1
 648  8BB1 CD 65 8C     	call Guarda_foto_entidad_a_pintar
 649  8BB4
 650  8BB4 21 BA 89     3 ld hl,Ctrl_0
 651  8BB7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 652  8BB9 AF           	xor a
 653  8BBA 32 BB 89     	ld (Obj_dibujado),a
 654  8BBD
 655  8BBD 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 656  8BC0 CD B4 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 657  8BC3
 658  8BC3 CD 79 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 659  8BC6
 660  8BC6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 661  8BC6
 662  8BC6 CD DA 8C     	call Calcula_numero_de_disparotes
 663  8BC9 CD C2 8C     9 call Calcula_numero_de_malotes
 664  8BCC
 665  8BCC 3E 04        	ld a,4
 666  8BCE D3 FE        	out ($fe),a
 667  8BD0
 668  8BD0 C9           	ret
 669  8BD1
 670  8BD1              ; --------------------------------------------------------------------------------------------------------------
 671  8BD1              ;
 672  8BD1              ;	27/05/23
 673  8BD1
 674  8BD1              Mov_obj
 675  8BD1
 676  8BD1              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 677  8BD1
 678  8BD1 3A C8 89     	ld a,(Ctrl_2)
 679  8BD4 CB 4F        	bit 1,a
 680  8BD6 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 681  8BD8
 682  8BD8              ; Explosión:
 683  8BD8
 684  8BD8 3A C9 89     	ld a,(Frames_explosion)
 685  8BDB A7           	and a
 686  8BDC 20 11        	jr nz,4F
 687  8BDE
 688  8BDE              ; Una alimaña menos!!!!!!!!!1
 689  8BDE
 690  8BDE CD BD 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 691  8BE1 21 D4 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 692  8BE4 35           	dec (hl)
 693  8BE5 21 D5 89     	ld hl,Entidades_en_curso
 694  8BE8 35           	dec (hl)
 695  8BE9 21 D3 89     	ld hl,Numero_de_entidades
 696  8BEC 35           	dec (hl)
 697  8BED 18 46        	jr 3F
 698  8BEF
 699  8BEF              ; -----
 700  8BEF
 701  8BEF 2A 9A 89     4 ld hl,(Puntero_DESPLZ_der)
 702  8BF2 23           	inc hl
 703  8BF3 23           	inc hl
 704  8BF4 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 705  8BF7 CD F2 8C     	call Extrae_address
 706  8BFA 22 90 89     	ld (Puntero_objeto),hl
 707  8BFD
 708  8BFD 21 C9 89     	ld hl,Frames_explosion
 709  8C00 35           	dec (hl)
 710  8C01
 711  8C01 CD 55 8C     	call Guarda_foto_entidad_a_borrar
 712  8C04 18 2F        	jr 3F
 713  8C06
 714  8C06 AF           2 xor a
 715  8C07 32 BB 89     	ld (Obj_dibujado),a
 716  8C0A 32 BA 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 717  8C0D              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 718  8C0D              ; 														; _de la entidad.
 719  8C0D CD 6F 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 720  8C10              ;														; Obj_dibujado="0".
 721  8C10              ; Movemos Entidades malignas.
 722  8C10
 723  8C10 21 BD 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 724  8C13 34           	inc (hl)
 725  8C14 35           	dec (hl)                                            ; Salimos de la rutina.
 726  8C15 C8           	ret z
 727  8C16
 728  8C16 CD D5 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 729  8C19
 730  8C19 3A BA 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 731  8C1C CB 67        	bit 4,a
 732  8C1E C8           	ret z
 733  8C1F
 734  8C1F              ; Ha habido desplazamiento de la entidad maligna.
 735  8C1F              ; Ha llegado a zona de AMADEUS ???
 736  8C1F
 737  8C1F 3A 93 89     	ld a,(Coordenada_y)
 738  8C22 FE 14        	cp $14
 739  8C24 D4 AA 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 740  8C27              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 741  8C27              ; ---------
 742  8C27
 743  8C27 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 744  8C29 32 BB 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 745  8C2C CD 6F 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 746  8C2F CD 86 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 747  8C32 CD 55 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 748  8C35 C9           3 ret													; _de la misma.
 749  8C36
 750  8C36              ; --------------------------------------------------------------------------------------------------------------
 751  8C36              ;
 752  8C36              ;	29/1/23
 753  8C36
 754  8C36              Mov_Amadeus
 755  8C36
 756  8C36 AF           	xor a
 757  8C37 32 BB 89     	ld (Obj_dibujado),a
 758  8C3A CD 6F 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 759  8C3D              ;														; Obj_dibujado="0".
 760  8C3D              ; Movemos Amadeus.
 761  8C3D
 762  8C3D CD DF 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 763  8C40 3A BA 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 764  8C43 CB 67        	bit 4,a
 765  8C45 C8           	ret z
 766  8C46
 767  8C46              ; ---------
 768  8C46
 769  8C46 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 770  8C48 32 BB 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 771  8C4B CD 6F 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 772  8C4E CD 86 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 773  8C51 CD 55 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 774  8C54 C9           	ret													; _de la nave.
 775  8C55
 776  8C55              ; --------------------------------------------------------------------------------------------------------------
 777  8C55              ;
 778  8C55              ;	31/01/23
 779  8C55              ;
 780  8C55              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 781  8C55
 782  8C55              Guarda_foto_entidad_a_borrar
 783  8C55
 784  8C55 CD D1 95     	call Prepara_draw
 785  8C58 CD 0B 95     	call calcula_CColumnass
 786  8C5B CD 42 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 787  8C5E CD 97 95     	call Define_rutina_de_impresion
 788  8C61 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 789  8C64 C9           	ret
 790  8C65
 791  8C65              ; --------------------------------------------------------------------------------------------------------------
 792  8C65              ;
 793  8C65              ;	31/01/23
 794  8C65              ;
 795  8C65              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 796  8C65              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 797  8C65
 798  8C65              Guarda_foto_entidad_a_pintar
 799  8C65
 800  8C65 CD 92 8C     	call Repone_pintar
 801  8C68 CD F7 92     	call Draw
 802  8C6B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 803  8C6E C9           	ret
 804  8C6F
 805  8C6F              ; --------------------------------------------------------------------------------------------------------------
 806  8C6F              ;
 807  8C6F              ;
 808  8C6F
 809  8C6F 21 8C 89     Prepara_var_pintado_borrado	ld hl,Filas
 810  8C72 3A BB 89     	ld a,(Obj_dibujado)
 811  8C75 A7           	and a
 812  8C76 28 05        	jr z,1F
 813  8C78 11 B0 89     	ld de,Variables_de_pintado
 814  8C7B 18 03        	jr 2F
 815  8C7D 11 A6 89     1 ld de,Variables_de_borrado
 816  8C80 01 08 00     2 ld bc,8
 817  8C83 ED B0        	ldir
 818  8C85 C9           	ret
 819  8C86
 820  8C86              ; --------------------------------------------------------------------------------------------------------------
 821  8C86
 822  8C86 21 A6 89     Repone_borrar ld hl,Variables_de_borrado
 823  8C89 11 8C 89     	ld de,Filas
 824  8C8C 01 08 00     	ld bc,8
 825  8C8F ED B0        	ldir
 826  8C91 C9           	ret
 827  8C92
 828  8C92 21 B0 89     Repone_pintar ld hl,Variables_de_pintado
 829  8C95 11 8C 89     	ld de,Filas
 830  8C98 01 08 00     	ld bc,8
 831  8C9B ED B0        	ldir
 832  8C9D C9           	ret
 833  8C9E
 834  8C9E              ; *************************************************************************************************************************************************************
 835  8C9E              ;
 836  8C9E              ; 8/1/23
 837  8C9E              ;
 838  8C9E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 839  8C9E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 840  8C9E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 841  8C9E
 842  8C9E              ; Destruye HL y DE !!!!!
 843  8C9E
 844  8C9E              Inicia_punteros_de_cajas
 845  8C9E
 846  8C9E 21 64 85     	ld hl,Indice_de_cajas
 847  8CA1 CD F2 8C         call Extrae_address
 848  8CA4 22 CD 89         ld (Puntero_store_caja),hl
 849  8CA7 21 66 85     	ld hl,Indice_de_cajas+2
 850  8CAA 22 D1 89     	ld (Indice_restore_caja),hl
 851  8CAD CD F2 8C     	call Extrae_address
 852  8CB0 22 CF 89     	ld (Puntero_restore_caja),hl
 853  8CB3 C9               ret
 854  8CB4
 855  8CB4              ; *************************************************************************************************************************************************************
 856  8CB4              ;
 857  8CB4              ; 8/1/23
 858  8CB4              ;
 859  8CB4              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 860  8CB4
 861  8CB4 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 862  8CB7 22 E4 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 863  8CBA C9           	ret
 864  8CBB 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 865  8CBE 22 E6 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 866  8CC1 C9           	ret
 867  8CC2
 868  8CC2              ; -------------------------------------------------------------------------------------------------------------
 869  8CC2              ;
 870  8CC2              ; 28/2/23
 871  8CC2              ;
 872  8CC2
 873  8CC2              Calcula_numero_de_malotes
 874  8CC2
 875  8CC2 21 00 70     	ld hl,Album_de_fotos
 876  8CC5 EB           	ex de,hl
 877  8CC6 2A DF 89     	ld hl,(Stack_snapshot)
 878  8CC9
 879  8CC9 06 00        	ld b,0
 880  8CCB 7D           	ld a,l
 881  8CCC 93           	sub e
 882  8CCD 28 07        	jr z,1F
 883  8CCF
 884  8CCF              ; Nº de malotes no es "0".
 885  8CCF
 886  8CCF D6 06        2 sub 6
 887  8CD1 04           	inc b
 888  8CD2 A7           	and a
 889  8CD3 20 FA        	jr nz,2B
 890  8CD5 78           	ld a,b
 891  8CD6
 892  8CD6 32 D6 89     1 ld (Numero_de_malotes),a
 893  8CD9 C9           	ret
 894  8CDA
 895  8CDA              ; -------------------------------------------------------------------------------------------------------------
 896  8CDA              ;
 897  8CDA              ; 28/2/23
 898  8CDA              ;
 899  8CDA
 900  8CDA              Calcula_numero_de_disparotes
 901  8CDA
 902  8CDA 21 85 70     	ld hl,Album_de_fotos_disparos
 903  8CDD EB           	ex de,hl
 904  8CDE 2A E1 89     	ld hl,(Stack_snapshot_disparos)
 905  8CE1
 906  8CE1 06 00        	ld b,0
 907  8CE3 7D           	ld a,l
 908  8CE4 93           	sub e
 909  8CE5 28 07        	jr z,1F
 910  8CE7
 911  8CE7              ; Nº de malotes no es "0".
 912  8CE7
 913  8CE7 D6 06        2 sub 6
 914  8CE9 04           	inc b
 915  8CEA A7           	and a
 916  8CEB 20 FA        	jr nz,2B
 917  8CED 78           	ld a,b
 918  8CEE
 919  8CEE 32 E3 89     1 ld (Numero_de_disparotes),a
 920  8CF1 C9           	ret
 921  8CF2              ; *************************************************************************************************************************************************************
 922  8CF2              ;
 923  8CF2              ; 20/10/22
 924  8CF2              ;
 925  8CF2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 926  8CF2              ;
 927  8CF2              ; Destruye el puntero y DE !!!!!
 928  8CF2
 929  8CF2 5E           Extrae_address ld e,(hl)
 930  8CF3 23           	inc hl
 931  8CF4 56           	ld d,(hl)
 932  8CF5 2B           	dec hl
 933  8CF6 EB           	ex de,hl
 934  8CF7 C9           	ret
 935  8CF8
 936  8CF8              ; *************************************************************************************************************************************************************
 937  8CF8              ;
 938  8CF8              ;	7/2/23
 939  8CF8              ;
 940  8CF8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 941  8CF8              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 942  8CF8              ;
 943  8CF8              ;   Destruye HL y BC !!!!!,
 944  8CF8              ;
 945  8CF8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 946  8CF8              ;					"0" ..... Izquierda.
 947  8CF8
 948  8CF8              Inicia_Puntero_objeto
 949  8CF8
 950  8CF8 3A A0 89     	ld a,(Cuad_objeto)
 951  8CFB E6 01        	and 1
 952  8CFD F5           	push af
 953  8CFE CC 1C 8D     	call z,Inicia_puntero_objeto_izq
 954  8D01 F1           	pop af
 955  8D02 28 2B        	jr z,1F
 956  8D04 CD 09 8D     	call Inicia_puntero_objeto_der
 957  8D07 18 26        	jr 1F
 958  8D09
 959  8D09              ; Arrancamos desde la parte izquierda de la pantalla.
 960  8D09              ; Iniciamos (Indice_Sprite_der).
 961  8D09
 962  8D09 2A 96 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 963  8D0C 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 964  8D0F CD F2 8C     	call Extrae_address
 965  8D12 22 90 89     	ld (Puntero_objeto),hl
 966  8D15
 967  8D15 2A 98 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 968  8D18 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 969  8D1B C9           	ret
 970  8D1C
 971  8D1C              ; Arrancamos desde la parte derecha de la pantalla.
 972  8D1C              ; Iniciamos (Indice_Sprite_izq).
 973  8D1C
 974  8D1C 2A 98 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 975  8D1F 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 976  8D22 CD F2 8C     	call Extrae_address
 977  8D25 22 90 89     	ld (Puntero_objeto),hl
 978  8D28
 979  8D28 2A 96 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 980  8D2B 22 9A 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 981  8D2E C9           	ret
 982  8D2F
 983  8D2F              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 984  8D2F
 985  8D2F 21 38 83     1 ld hl,Amadeus
 986  8D32 ED 4B 90 89  	ld bc,(Puntero_objeto)
 987  8D36 B7 ED 42     	sub hl,bc
 988  8D39 C0           	ret nz
 989  8D3A 21 BA 89     	ld hl,Ctrl_0
 990  8D3D CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 991  8D3F C9           	ret 												; _de nuestra nave en los extremos.
 992  8D40
 993  8D40              ; *************************************************************************************************************************************************************
 994  8D40              ;
 995  8D40              ;	14/5/23
 996  8D40              ;
 997  8D40              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 998  8D40              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 999  8D40
1000  8D40              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1001  8D40              ;	_de la 2ª y 3ª entidad respectivamente.
1002  8D40
1003  8D40              Store_Restore_cajas
1004  8D40
1005  8D40 E5           	push hl
1006  8D41 D5           	push de
1007  8D42 C5            	push bc
1008  8D43
1009  8D43              ;	STORE !!!!!
1010  8D43              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1011  8D43
1012  8D43 21 8C 89     	ld hl,Filas
1013  8D46 ED 5B CD 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1014  8D4A 01 3E 00     	ld bc,62
1015  8D4D ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1016  8D4F
1017  8D4F              ; 	Entidad_sospechosa. 20/4/23
1018  8D4F
1019  8D4F 3A A5 89     	ld a,(Impacto)
1020  8D52 A7           	and a
1021  8D53 28 0C        	jr z,1F
1022  8D55
1023  8D55 2A CD 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1024  8D58 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1025  8D5B A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1026  8D5C ED 4A        	adc hl,bc 											; _ "0" más adelante.
1027  8D5E 22 E9 89     	ld (Entidad_sospechosa_de_colision),hl
1028  8D61
1029  8D61              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1030  8D61
1031  8D61 2A CF 89     1 ld hl,(Puntero_restore_caja)
1032  8D64 7E           	ld a,(hl)
1033  8D65 A7           	and a
1034  8D66 F5           	push af
1035  8D67 28 08        	jr z,2F
1036  8D69
1037  8D69 11 8C 89     	ld de,Filas
1038  8D6C 01 3E 00     	ld bc,62
1039  8D6F ED B0        	ldir
1040  8D71
1041  8D71 CD 8D 8D     2 call Incrementa_punteros_de_cajas
1042  8D74 F1           	pop af
1043  8D75 28 EA        	jr z,1B
1044  8D77
1045  8D77 C1           	pop bc
1046  8D78 D1           	pop de
1047  8D79 E1           	pop hl
1048  8D7A
1049  8D7A C9           	ret
1050  8D7B
1051  8D7B              ; **************************************************************************************************
1052  8D7B              ;
1053  8D7B              ;	12/05/23
1054  8D7B              ;
1055  8D7B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1056  8D7B
1057  8D7B E5           Restore_entidad push hl
1058  8D7C D5           	push de
1059  8D7D C5            	push bc
1060  8D7E
1061  8D7E 2A CD 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1062  8D81 11 8C 89     	ld de,Filas
1063  8D84 01 3E 00     	ld bc,62
1064  8D87 ED B0        	ldir
1065  8D89
1066  8D89 C1           	pop bc
1067  8D8A D1           	pop de
1068  8D8B E1           	pop hl
1069  8D8C C9           	ret
1070  8D8D
1071  8D8D
1072  8D8D              ; **************************************************************************************************
1073  8D8D              ;
1074  8D8D              ;	08/05/23
1075  8D8D              ;
1076  8D8D              ;	Incrementamos los dos punteros de entidades. (+1).
1077  8D8D
1078  8D8D 2A CF 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1079  8D90 22 CD 89     	ld (Puntero_store_caja),hl
1080  8D93 2A D1 89     	ld hl,(Indice_restore_caja)
1081  8D96 23           	inc hl
1082  8D97 23           	inc hl
1083  8D98 22 D1 89     	ld (Indice_restore_caja),hl
1084  8D9B CD F2 8C         call Extrae_address
1085  8D9E 22 CF 89         ld (Puntero_restore_caja),hl
1086  8DA1 C9               ret
1087  8DA2
1088  8DA2              ; **************************************************************************************************
1089  8DA2              ;
1090  8DA2              ;	25/01/23
1091  8DA2              ;
1092  8DA2              ;	Restore_Amadeus
1093  8DA2              ;
1094  8DA2              ;	Cargamos en DRAW los parámetros de Amadeus.
1095  8DA2              ;
1096  8DA2
1097  8DA2 E5           Restore_Amadeus	push hl
1098  8DA3 D5           	push de
1099  8DA4 C5            	push bc
1100  8DA5 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1101  8DA8 11 8C 89     	ld de,Filas
1102  8DAB 01 3E 00     	ld bc,62
1103  8DAE ED B0        	ldir
1104  8DB0 C1           	pop bc
1105  8DB1 D1           	pop de
1106  8DB2 E1           	pop hl
1107  8DB3 C9           	ret
1108  8DB4
1109  8DB4              ; *************************************************************************************************************************************************************
1110  8DB4              ;
1111  8DB4              ;	29/04/23
1112  8DB4              ;
1113  8DB4              ;	Store_Amadeus
1114  8DB4              ;
1115  8DB4              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1116  8DB4              ;
1117  8DB4              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1118  8DB4              ;
1119  8DB4              ;	DESTRUYE: HL y BC y DE.
1120  8DB4
1121  8DB4 21 8C 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1122  8DB7 01 3E 00     	ld bc,62
1123  8DBA ED B0        	ldir
1124  8DBC C9           	ret
1125  8DBD
1126  8DBD              ; -----------------------------------------------------------
1127  8DBD              ;
1128  8DBD              ;	27/04/23
1129  8DBD              ;
1130  8DBD              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1131  8DBD              ;
1132  8DBD              ;	Destruye: HL,BC,DE,A
1133  8DBD
1134  8DBD 21 8C 89     Borra_datos_entidad ld hl,Filas
1135  8DC0 01 3D 00     	ld bc,61
1136  8DC3 AF           	xor a
1137  8DC4 77           	ld (hl),a
1138  8DC5 11 8D 89     	ld de,Filas+1
1139  8DC8 ED B0        	ldir
1140  8DCA C9           	ret
1141  8DCB
1142  8DCB              ; -----------------------------------------------------------
1143  8DCB
1144  8DCB              ; Teclado.
1145  8DCB
1146  8DCB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1147  8DCD DB FE        	in a,($fe)
1148  8DCF E6 01        	and $01
1149  8DD1 28 02        	jr z,1f
1150  8DD3 18 F6        	jr Pulsa_ENTER
1151  8DD5 C9           1 ret
1152  8DD6
1153  8DD6              ; **************************************************************************************************
1154  8DD6              ;
1155  8DD6              ; Temporización.
1156  8DD6
1157  8DD6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1158  8DD6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1159  8DD6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1160  8DD6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1161  8DD6
1162  8DD6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1163  8DD6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1164  8DD6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1165  8DD6
1166  8DD6              ; A partir de $4f61 no hace falta DELAY.
1167  8DD6
1168  8DD6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1169  8DD6
1170  8DD6 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1171  8DD9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1172  8DDA 78           	LD A,B
1173  8DDB A7           	AND A
1174  8DDC 20 FB        	JR NZ,wait
1175  8DDE C9           	RET
1176  8DDF
1177  8DDF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1178  8DDF              ;
1179  8DDF              ;	5/3/23
1180  8DDF              ;
1181  8DDF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1182  8DDF
1183  8DDF              Movimiento_Amadeus
1184  8DDF
1185  8DDF              ; Disparo.
1186  8DDF
1187  8DDF 3A F6 89     	ld a,(Habilita_disparo_Amadeus)
1188  8DE2 A7           	and a
1189  8DE3 20 02        	jr nz,1F
1190  8DE5 18 15        	jr 2F
1191  8DE7
1192  8DE7 3E F7        1 ld a,$f7													; "5" para disparar.
1193  8DE9 DB FE        	in a,($fe)
1194  8DEB E6 10        	and $10
1195  8DED
1196  8DED F5           	push af
1197  8DEE CC 26 8E     	call z,Genera_disparo
1198  8DF1 F1           	pop af
1199  8DF2 20 08        	jr nz,2F
1200  8DF4
1201  8DF4 3A F6 89     	ld a,(Habilita_disparo_Amadeus)
1202  8DF7 EE 01        	xor 1
1203  8DF9 32 F6 89     	ld (Habilita_disparo_Amadeus),a
1204  8DFC
1205  8DFC 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1206  8DFE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1207  8E00 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1208  8E02 CC 75 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1209  8E05 3E F7        	ld a,$f7
1210  8E07 DB FE        	in a,($fe)
1211  8E09 E6 01        	and $01
1212  8E0B C8           	ret z
1213  8E0C
1214  8E0C 3E F7        	ld a,$f7
1215  8E0E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1216  8E10 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1217  8E12 CC 57 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1218  8E15 C9           	ret
1219  8E16
1220  8E16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1221  8E16              ;
1222  8E16              ;	Rutina provisional para que los malotes cagen balas.
1223  8E16
1224  8E16              Detecta_disparo_entidad
1225  8E16
1226  8E16 3A F9 89     	ld a,(Habilita_disparo_entidad)
1227  8E19 A7           	and a
1228  8E1A C8           	ret z
1229  8E1B 3E 7F        	ld a,$7f
1230  8E1D DB FE        	in a,($fe)
1231  8E1F E6 01        	and 1
1232  8E21 C0           	ret nz
1233  8E22 CD 26 8E     	call Genera_disparo
1234  8E25 C9           	ret
1235  8E26
1236  8E26              ; ---------------------------------------------------------------
1237  8E26
1238  8E26              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E26              ; ******************************************************************************************************************************************************************************************
   2+ 8E26              ;
   3+ 8E26              ;   17/04/23
   4+ 8E26              ;
   5+ 8E26              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E26              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E26              ;
   8+ 8E26              ;
   9+ 8E26              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E26              ;
  11+ 8E26              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E26              ;               _ hacen las entidades hacia abajo.
  13+ 8E26              ;
  14+ 8E26              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E26              ;
  16+ 8E26              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E26              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E26              ;
  19+ 8E26              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E26              ;           _ la bala.
  21+ 8E26              ;
  22+ 8E26              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E26              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E26              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E26              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E26              ;           _ en el momento de generarse la bala)).
  27+ 8E26
  28+ 8E26              Genera_disparo
  29+ 8E26
  30+ 8E26              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E26              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E26              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E26              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E26              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E26              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E26              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E26
  38+ 8E26              ; Exclusiones:
  39+ 8E26
  40+ 8E26 3A C4 89         ld a,(Columnas)
  41+ 8E29 47               ld b,a
  42+ 8E2A 3A 8D 89         ld a,(Columns)
  43+ 8E2D B8               cp b
  44+ 8E2E C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E2F
  46+ 8E2F              ; ----- ----- -----
  47+ 8E2F
  48+ 8E2F 3A BA 89         ld a,(Ctrl_0)
  49+ 8E32 CB 77            bit 6,a
  50+ 8E34 20 06            jr nz,14F
  51+ 8E36
  52+ 8E36 3A 93 89         ld a,(Coordenada_y)
  53+ 8E39 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E3B D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E3C
  56+ 8E3C 21 00 80     14 ld hl,Indice_disparo
  57+ 8E3F 3A 94 89         ld a,(CTRL_DESPLZ)
  58+ 8E42 4F               ld c,a
  59+ 8E43 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E45              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E45              ;                                            ""        ""       "f9", B="1"
  62+ 8E45              ;                                            ""        ""       "fb", B="2"
  63+ 8E45              ;                                            ""        ""       "fb", B="3"
  64+ 8E45 A7               and a
  65+ 8E46 28 10            jr z,1F
  66+ 8E48 E6 01            and 1
  67+ 8E4A C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E4B
  69+ 8E4B 79               ld a,c
  70+ 8E4C 16 F9            ld d,$f9
  71+ 8E4E 23           2 inc hl
  72+ 8E4F 23               inc hl
  73+ 8E50 04               inc b
  74+ 8E51 BA               cp d
  75+ 8E52 28 04            jr z,1F
  76+ 8E54 14               inc d
  77+ 8E55 14               inc d
  78+ 8E56 18 F6            jr 2B
  79+ 8E58
  80+ 8E58 CD F2 8C     1 call Extrae_address
  81+ 8E5B E5               push hl
  82+ 8E5C FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E5E DD 21 70 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E62
  85+ 8E62              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E62              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E62
  88+ 8E62 3A BA 89         ld a,(Ctrl_0)
  89+ 8E65 CB 77            bit 6,a
  90+ 8E67 20 04            jr nz,19F
  91+ 8E69
  92+ 8E69 AF               xor a
  93+ 8E6A 32 F9 89         ld (Habilita_disparo_entidad),a
  94+ 8E6D
  95+ 8E6D 3A A0 89     19 ld a,(Cuad_objeto)
  96+ 8E70 FE 02            cp 2
  97+ 8E72 38 66            jr c,3F
  98+ 8E74 28 64            jr z,3F
  99+ 8E76
 100+ 8E76              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E76
 102+ 8E76 E6 01            and 1
 103+ 8E78 28 30            jr z,4F
 104+ 8E7A
 105+ 8E7A              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E7A              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E7A              ;
 108+ 8E7A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E7A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E7A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E7A
 112+ 8E7A 2A 8E 89     	ld hl,(Posicion_actual)
 113+ 8E7D
 114+ 8E7D              ;   Amadeus o entidad ???.
 115+ 8E7D
 116+ 8E7D 3A BA 89         ld a,(Ctrl_0)
 117+ 8E80 CB 77            bit 6,a
 118+ 8E82 28 0A            jr z,8F
 119+ 8E84
 120+ 8E84              ; 	Dispara Amadeus.
 121+ 8E84
 122+ 8E84 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E86 CD EC 95         call PreviousScan
 124+ 8E89 CD EC 95         call PreviousScan
 125+ 8E8C
 126+ 8E8C              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E8C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E8C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E8C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E8C
 131+ 8E8C 18 11            jr 10F
 132+ 8E8E
 133+ 8E8E              ; 	Dispara Entidad.
 134+ 8E8E
 135+ 8E8E 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E91              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E91
 138+ 8E91              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E91              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E91
 141+ 8E91 C5               push bc
 142+ 8E92 06 10            ld b,16
 143+ 8E94 CD DD 95     9 call NextScan
 144+ 8E97 10 FB            djnz 9B
 145+ 8E99 C1               pop bc
 146+ 8E9A CD 04 8F         call Ajusta_disparo_parte_izquierda
 147+ 8E9D 18 06            jr 17F
 148+ 8E9F
 149+ 8E9F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8E9F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8E9F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8E9F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8E9F
 154+ 8E9F CD 04 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EA2 CD 79 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EA5              ;                                                      ; _al generar el disparo.
 157+ 8EA5
 158+ 8EA5              ; 	LLegados a este punto tendremos:
 159+ 8EA5              ;
 160+ 8EA5              ;       Puntero_objeto_disparo en IY.
 161+ 8EA5              ;       Rutinas_de_impresion en IX.
 162+ 8EA5              ;       Puntero_de_impresion en HL.
 163+ 8EA5              ;       Impacto/Dirección en BC.
 164+ 8EA5
 165+ 8EA5 CD 0C 8F     17 call Almacena_disparo
 166+ 8EA8 18 52            jr 6F                                             ; RET.
 167+ 8EAA
 168+ 8EAA              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EAA              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EAA              ;
 171+ 8EAA              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EAA              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EAA              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EAA
 175+ 8EAA 2A 8E 89     4 ld hl,(Posicion_actual)
 176+ 8EAD
 177+ 8EAD              ;   Amadeus o entidad ???.
 178+ 8EAD
 179+ 8EAD 3A BA 89         ld a,(Ctrl_0)
 180+ 8EB0 CB 77            bit 6,a
 181+ 8EB2 28 0A            jr z,11F
 182+ 8EB4
 183+ 8EB4              ; 	Dispara Amadeus.
 184+ 8EB4
 185+ 8EB4 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EB6 CD EC 95         call PreviousScan
 187+ 8EB9 CD EC 95         call PreviousScan
 188+ 8EBC
 189+ 8EBC              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EBC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EBC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EBC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EBC
 194+ 8EBC 18 11            jr 13F
 195+ 8EBE
 196+ 8EBE              ; 	Dispara Entidad.
 197+ 8EBE
 198+ 8EBE 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EC1              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EC1
 201+ 8EC1              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EC1              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EC1
 204+ 8EC1 C5               push bc
 205+ 8EC2 06 10            ld b,16
 206+ 8EC4 CD DD 95     12 call NextScan
 207+ 8EC7 10 FB            djnz 12B
 208+ 8EC9 C1               pop bc
 209+ 8ECA
 210+ 8ECA CD FD 8E         call Ajusta_disparo_parte_derecha
 211+ 8ECD 18 06            jr 18F
 212+ 8ECF
 213+ 8ECF              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8ECF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8ECF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8ECF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8ECF
 218+ 8ECF CD FD 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8ED2 CD 79 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8ED5              ;                                                       ; _al generar el disparo.
 221+ 8ED5
 222+ 8ED5              ; LLegados a este punto tendremos:
 223+ 8ED5              ;
 224+ 8ED5              ;       Puntero_objeto_disparo en IY.
 225+ 8ED5              ;       Rutinas_de_impresion en IX.
 226+ 8ED5              ;       Puntero_de_impresion en HL.
 227+ 8ED5              ;       Impacto/Dirección en BC.
 228+ 8ED5
 229+ 8ED5 CD 0C 8F     18 call Almacena_disparo
 230+ 8ED8 18 22            jr 6F                                               ; RET.
 231+ 8EDA
 232+ 8EDA              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EDA
 234+ 8EDA 28 11        3 jr z,5F
 235+ 8EDC
 236+ 8EDC              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EDC              ;
 238+ 8EDC              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EDC              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EDC              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EDC              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EDC
 243+ 8EDC              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EDC              ;	   ""        ""       "f9", B="1"
 245+ 8EDC              ;	   ""        ""       "fb", B="2"
 246+ 8EDC              ; 	   ""        ""       "fb", B="3"
 247+ 8EDC
 248+ 8EDC 2A 8E 89     	ld hl,(Posicion_actual)
 249+ 8EDF CD DD 95     	call NextScan
 250+ 8EE2
 251+ 8EE2              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EE2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EE2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EE2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EE2
 256+ 8EE2 CD 04 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EE5
 258+ 8EE5              ; 	No se produce impacto. B="$80"
 259+ 8EE5              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EE5
 261+ 8EE5 01 80 80         ld bc,$8080
 262+ 8EE8
 263+ 8EE8              ; 	LLegados a este punto tendremos:
 264+ 8EE8              ;
 265+ 8EE8              ;       Puntero_objeto_disparo en IY.
 266+ 8EE8              ;       Rutinas_de_impresion en IX.
 267+ 8EE8              ;       Puntero_de_impresion en HL.
 268+ 8EE8              ;       Impacto/Dirección en BC.
 269+ 8EE8
 270+ 8EE8 CD 0C 8F         call Almacena_disparo
 271+ 8EEB 18 0F            jr 6F                                           ; RET.
 272+ 8EED
 273+ 8EED              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EED              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EED              ;
 276+ 8EED              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EED              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EED              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EED              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EED
 281+ 8EED 2A 8E 89     5 ld hl,(Posicion_actual)
 282+ 8EF0 CD DD 95     	call NextScan
 283+ 8EF3
 284+ 8EF3              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EF3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EF3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EF3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EF3
 289+ 8EF3 CD FD 8E         call Ajusta_disparo_parte_derecha
 290+ 8EF6
 291+ 8EF6              ; 	No se produce impacto. B="$80"
 292+ 8EF6              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EF6
 294+ 8EF6 01 80 80     15 ld bc,$8080
 295+ 8EF9
 296+ 8EF9              ; 	LLegados a este punto tendremos:
 297+ 8EF9              ;
 298+ 8EF9              ;       Puntero_objeto_disparo en IY.
 299+ 8EF9              ;       Rutinas_de_impresion en IX.
 300+ 8EF9              ;       Puntero_de_impresion en HL.
 301+ 8EF9              ;       Impacto/Dirección en BC.
 302+ 8EF9
 303+ 8EF9 CD 0C 8F         call Almacena_disparo
 304+ 8EFC
 305+ 8EFC C9           6 ret
 306+ 8EFD
 307+ 8EFD              ; ----------------------------------------------------------------
 308+ 8EFD              ;
 309+ 8EFD              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8EFD              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8EFD              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8EFD
 313+ 8EFD 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8EFE FE 02            cp 2
 315+ 8F00 38 01            jr c,1F
 316+ 8F02 23               inc hl
 317+ 8F03 C9           1 ret
 318+ 8F04
 319+ 8F04 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F05 FE 01        	cp 1
 321+ 8F07 20 01        	jr nz,1F
 322+ 8F09 2B           	dec hl
 323+ 8F0A 2B           1 dec hl
 324+ 8F0B C9               ret
 325+ 8F0C
 326+ 8F0C              ; ----------------------------------------------------------------
 327+ 8F0C              ;
 328+ 8F0C              ;   25/02/23
 329+ 8F0C              ;
 330+ 8F0C              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F0C              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F0C              ;
 333+ 8F0C              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F0C              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F0C
 336+ 8F0C              Almacena_disparo
 337+ 8F0C
 338+ 8F0C E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F0D F1               pop af
 340+ 8F0E 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F0F
 342+ 8F0F 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F10 E6 01            and 1
 344+ 8F12 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F14              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F14              ; 	Dispara AMADEUS.
 347+ 8F14
 348+ 8F14              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F14              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F14              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F14              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F14
 353+ 8F14 C5               push bc
 354+ 8F15 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F18 2A E6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F1B A7               and a
 357+ 8F1C ED 42            sbc hl,bc
 358+ 8F1E CC BB 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F21 C1               pop bc
 360+ 8F22 28 54            jr z,4F
 361+ 8F24
 362+ 8F24 2A E6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F27 23               inc hl
 364+ 8F28 23               inc hl
 365+ 8F29 22 E6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F2C              ;                                                   ; _ Disparo_(+1).
 367+ 8F2C 18 18            jr 2F
 368+ 8F2E
 369+ 8F2E              ; Dispara una entidad.
 370+ 8F2E
 371+ 8F2E C5           1 push bc
 372+ 8F2F 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F32 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F35 A7               and a
 375+ 8F36 ED 42            sbc hl,bc
 376+ 8F38 CC B4 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F3B C1               pop bc
 378+ 8F3C 28 3A            jr z,4F
 379+ 8F3E
 380+ 8F3E 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F41 23               inc hl
 382+ 8F42 23               inc hl
 383+ 8F43 22 E4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F46              ;                                                   ; _ Disparo_(+1).
 385+ 8F46 CD F2 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F49              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F49              ;
 388+ 8F49              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F49              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F49              ;                                                     Puntero_de_impresion en HL.
 391+ 8F49              ;                                                     Impacto/Dirección en BC.
 392+ 8F49
 393+ 8F49 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F4A 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F4B 23               inc hl                                          ; _ al siguiente.
 396+ 8F4C A7               and a
 397+ 8F4D 20 C0            jr nz,3B
 398+ 8F4F
 399+ 8F4F 08               ex af,af
 400+ 8F50 ED 73 DB 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F54 F9               ld sp,hl
 402+ 8F55
 403+ 8F55 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F57 F5               push af                                         ; Puntero de impresión.
 405+ 8F58 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F5A C5               push bc                                         ; Control.
 407+ 8F5B
 408+ 8F5B ED 7B DB 89      ld sp,(Stack)
 409+ 8F5F
 410+ 8F5F              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F5F
 412+ 8F5F 21 CA 89     	ld hl,Ctrl_1
 413+ 8F62 CB C6        	set 0,(hl)
 414+ 8F64
 415+ 8F64 DD E5        	push ix
 416+ 8F66 E1               pop hl
 417+ 8F67 F5               push af
 418+ 8F68 DD E1            pop ix
 419+ 8F6A
 420+ 8F6A CD A0 7F     	call Guarda_foto_registros
 421+ 8F6D
 422+ 8F6D 21 CA 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F70 CB 86        	res 0,(hl)
 424+ 8F72
 425+ 8F72              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F72              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F72
 428+ 8F72 CD BB 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F75 CD B4 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F78
 431+ 8F78 C9           4 ret
 432+ 8F79
 433+ 8F79              ; ----------------------------------------------------------------
 434+ 8F79              ;
 435+ 8F79              ;   4/3/23
 436+ 8F79              ;
 437+ 8F79              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F79              ;   _ al generarse el disparo.
 439+ 8F79              ;
 440+ 8F79              ;       "$80" ..... No se produce colisión.
 441+ 8F79              ;       "$81" ..... Se produce colisión.
 442+ 8F79
 443+ 8F79              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F79              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F79
 446+ 8F79
 447+ 8F79 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F7B E5               push hl                                        ; Puntero de impresión.
 449+ 8F7C
 450+ 8F7C 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F7E CD 9A 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F81
 453+ 8F81 7B               ld a,e
 454+ 8F82 E6 01            and 1
 455+ 8F84 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F86
 457+ 8F86 E1               pop hl
 458+ 8F87 E5               push hl
 459+ 8F88 CD DD 95         call NextScan
 460+ 8F8B
 461+ 8F8B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F8C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F8E 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F90              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F90 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F92 CD 9A 8F         call Bucle_2
 467+ 8F95
 468+ 8F95 43           2 ld b,e
 469+ 8F96 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F97 FD E1            pop iy
 471+ 8F99 C9               ret
 472+ 8F9A
 473+ 8F9A               ; ---------- ----------
 474+ 8F9A
 475+ 8F9A 06 02        Bucle_2 ld b,2
 476+ 8F9C FD 7E 00     2 ld a,(iy)
 477+ 8F9F A6               and (hl)
 478+ 8FA0 28 02            jr z,1F
 479+ 8FA2 1E 81            ld e,$81
 480+ 8FA4 23           1 inc hl
 481+ 8FA5 FD 23            inc iy
 482+ 8FA7 10 F3            djnz 2B
 483+ 8FA9 C9               ret
 484+ 8FAA
 485+ 8FAA              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FAA              ;
 487+ 8FAA              ;   11/04/23
 488+ 8FAA              ;
 489+ 8FAA              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FAA              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FAA              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FAA              ;
 493+ 8FAA              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FAA
 495+ 8FAA              Compara_coordenadas_X
 496+ 8FAA
 497+ 8FAA              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FAA              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FAA
 500+ 8FAA              ; Preparamos registros:
 501+ 8FAA
 502+ 8FAA 21 92 89         ld hl,Filas+6
 503+ 8FAD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FAE 23               inc hl
 505+ 8FAF 23               inc hl
 506+ 8FB0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FB1 43               ld b,e
 508+ 8FB2 21 A0 89         ld hl,Filas+20
 509+ 8FB5 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FB6 21 F0 89         ld hl,Coordenadas_X_Entidad
 511+ 8FB9 CD CA 91         call Guarda_coordenadas_X
 512+ 8FBC
 513+ 8FBC              ; Preparamos registros:
 514+ 8FBC
 515+ 8FBC 21 82 85         ld hl,Amadeus_db+6
 516+ 8FBF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FC0 23               inc hl
 518+ 8FC1 23               inc hl
 519+ 8FC2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FC3 7B               ld a,e
 521+ 8FC4 08               ex af,af'
 522+ 8FC5 21 90 85         ld hl,Amadeus_db+20
 523+ 8FC8 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FC9 21 ED 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FCC CD CA 91         call Guarda_coordenadas_X
 526+ 8FCF
 527+ 8FCF              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FCF              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FCF
 530+ 8FCF 04               inc b
 531+ 8FD0 05               dec b
 532+ 8FD1 28 04            jr z,1F
 533+ 8FD3 06 03            ld b,3
 534+ 8FD5 18 02            jr 2F
 535+ 8FD7 06 02        1 ld b,2
 536+ 8FD9 08           2 ex af,af'
 537+ 8FDA 3C               inc a
 538+ 8FDB 3D               dec a
 539+ 8FDC 28 04            jr z,5F
 540+ 8FDE 0E 03            ld c,3
 541+ 8FE0 18 02            jr 6F
 542+ 8FE2 0E 02        5 ld c,2
 543+ 8FE4 79           6 ld a,c
 544+ 8FE5 08               ex af,af'
 545+ 8FE6 11 F0 89         ld de,Coordenadas_X_Entidad
 546+ 8FE9 1A           4 ld a,(de)
 547+ 8FEA 21 ED 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FED BE           3 cp (hl)
 549+ 8FEE 28 0E            jr z,7F
 550+ 8FF0 23               inc hl
 551+ 8FF1 0D               dec c
 552+ 8FF2 20 F9            jr nz,3B
 553+ 8FF4 13               inc de
 554+ 8FF5 08               ex af,af'
 555+ 8FF6 4F               ld c,a
 556+ 8FF7 08               ex af,af'
 557+ 8FF8 10 EF            djnz 4B
 558+ 8FFA
 559+ 8FFA              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8FFA
 561+ 8FFA CD 09 92     8 call Limpia_Coordenadas_X
 562+ 8FFD C9               ret
 563+ 8FFE
 564+ 8FFE              7
 565+ 8FFE 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9000 32 A5 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9003 21 E8 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9006 CB D6            set 2,(hl)
 569+ 9008 18 F0            jr 8B
 570+ 900A
 571+ 900A              ; -----------------------------------------------------------------------
 572+ 900A              ;
 573+ 900A              ;   17/04/23
 574+ 900A              ;
 575+ 900A
 576+ 900A              Detecta_colision_nave_entidad
 577+ 900A
 578+ 900A              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 900A
 580+ 900A 2A 8E 89         ld hl,(Posicion_actual)
 581+ 900D CD 42 95         call Calcula_puntero_de_impresion
 582+ 9010
 583+ 9010              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9010              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9010
 586+ 9010 DD E5            push ix
 587+ 9012 E1               pop hl
 588+ 9013 E5               push hl
 589+ 9014
 590+ 9014              ; ----- ----- -----
 591+ 9014 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9016 06 0A            ld b,10
 593+ 9018 CD 48 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 901B 7B               ld a,e
 595+ 901C FE 05            cp 5
 596+ 901E 38 0E            jr c,3F
 597+ 9020
 598+ 9020              ; LLegados a este punto:
 599+ 9020              ;
 600+ 9020              ;   HAY COLISIÓN !!!!!.
 601+ 9020              ;
 602+ 9020              ;   .db (Impacto) de Amadeus a "1".
 603+ 9020              ;   SET el bit3 de (Impacto2).
 604+ 9020              ;
 605+ 9020              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9020
 607+ 9020 21 95 85         ld hl,Amadeus_db+25
 608+ 9023 36 01            ld (hl),1
 609+ 9025 21 E8 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 9028 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 902A CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 902C 18 18            jr 1F
 613+ 902E
 614+ 902E              ; -----
 615+ 902E
 616+ 902E E1           3 pop hl
 617+ 902F CD DD 95         call NextScan
 618+ 9032 E5               push hl
 619+ 9033 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9034 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9036 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9038 30 0C            jr nc,1F
 623+ 903A              ;                                                  ; _ 2º scanline si esto es así.
 624+ 903A 10 DC            djnz 2B
 625+ 903C
 626+ 903C              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 903C
 628+ 903C              ; LLegados a este punto:
 629+ 903C              ;
 630+ 903C              ;   NO HAY COLISIÓN !!!!!.
 631+ 903C              ;
 632+ 903C              ;   .db (Impacto) de Amadeus a "0".
 633+ 903C              ;   RES el bit2 de (Impacto2).
 634+ 903C              ;
 635+ 903C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 903C              ;   Lo colocamos a "0".
 637+ 903C
 638+ 903C 21 E8 89         ld hl,Impacto2
 639+ 903F CB 96            res 2,(hl)
 640+ 9041 2A E9 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9044 36 00            ld (hl),0
 642+ 9046
 643+ 9046 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9047 C9               ret
 645+ 9048
 646+ 9048               ; ---------- ----------
 647+ 9048
 648+ 9048 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9049 3A 8D 89         ld a,(Columns)
 650+ 904C 47               ld b,a
 651+ 904D FD 7E 00     2 ld a,(iy)
 652+ 9050 BE               cp (hl)
 653+ 9051 28 01            jr z,1F
 654+ 9053
 655+ 9053 1C               inc e
 656+ 9054
 657+ 9054 23           1 inc hl
 658+ 9055 FD 23            inc iy
 659+ 9057 10 F4            djnz 2B
 660+ 9059 C1               pop bc
 661+ 905A C9               ret
 662+ 905B
 663+ 905B              ; -------------------------------------------------------------------------------------------------------------
 664+ 905B              ;
 665+ 905B              ;   13/03/23
 666+ 905B              ;
 667+ 905B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 905B              ;
 669+ 905B              ;   DESTRUYE: HL,BC,DE y A.
 670+ 905B
 671+ 905B 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 905E 7E               ld a,(hl)
 673+ 905F A7               and a
 674+ 9060 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9061
 676+ 9061 44               ld b,h
 677+ 9062 4D               ld c,l
 678+ 9063 2A E1 89         ld hl,(Stack_snapshot_disparos)
 679+ 9066 E5               push hl
 680+ 9067 A7               and a
 681+ 9068 ED 42            sbc hl,bc
 682+ 906A E5               push hl
 683+ 906B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 906C
 685+ 906C E1               pop hl
 686+ 906D 54               ld d,h
 687+ 906E 5D               ld e,l
 688+ 906F 1B               dec de
 689+ 9070 ED B8            lddr                                                ; Limpiamos.
 690+ 9072
 691+ 9072 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9075 22 E1 89         ld (Stack_snapshot_disparos),hl
 693+ 9078
 694+ 9078 C9               ret
 695+ 9079
 696+ 9079              ; -------------------------------------------------------------------------------------------------------------
 697+ 9079              ;
 698+ 9079              ;   28/03/23
 699+ 9079              ;
 700+ 9079
 701+ 9079 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 907C 2A E6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 907F
 704+ 907F CD F2 8C     2 call Extrae_address
 705+ 9082 7E               ld a,(hl)
 706+ 9083 A7               and a
 707+ 9084 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 9086
 709+ 9086              ; ----- ----- ----- ----- ----- -----
 710+ 9086
 711+ 9086 C5               push bc
 712+ 9087 CD 43 91         call foto_disparo_a_borrar
 713+ 908A
 714+ 908A              ; Existe colisión con este disparo???
 715+ 908A
 716+ 908A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 908B 7E               ld a,(hl)
 718+ 908C 2B               dec hl
 719+ 908D E6 01            and 1
 720+ 908F 28 1D            jr z,9F
 721+ 9091
 722+ 9091              ;   En este punto:
 723+ 9091              ;
 724+ 9091              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9091              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9091              ;   _con la entidad).
 727+ 9091              ;
 728+ 9091              ;   Disparo_2A defw 0                                ; Control.
 729+ 9091              ;    defw 0                                          ; Puntero objeto.
 730+ 9091              ;    defw 0                                          ; Puntero de impresión.
 731+ 9091              ;    defw 0                                          ; Rutina de impresión.
 732+ 9091
 733+ 9091 E5               push hl
 734+ 9092
 735+ 9092 06 04            ld b,4
 736+ 9094 23           19 inc hl
 737+ 9095 10 FD            djnz 19B
 738+ 9097
 739+ 9097 CD F2 8C         call Extrae_address
 740+ 909A CD 34 9C         call Genera_coordenadas_disparo
 741+ 909D
 742+ 909D              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 909D
 744+ 909D 21 EB 89         ld hl,Coordenadas_disparo_certero
 745+ 90A0 72               ld (hl),d
 746+ 90A1 23               inc hl
 747+ 90A2 73               ld (hl),e
 748+ 90A3
 749+ 90A3              ; Elimino el disparo de la base de datos.
 750+ 90A3
 751+ 90A3 E1               pop hl
 752+ 90A4 CD BF 91         call Elimina_disparo_de_base_de_datos
 753+ 90A7 21 E8 89         ld hl,Impacto2
 754+ 90AA CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90AC
 756+ 90AC 18 06            jr 11F
 757+ 90AE
 758+ 90AE CD 6C 91     9 call Mueve_disparo
 759+ 90B1 CD 43 91         call foto_disparo_a_borrar
 760+ 90B4
 761+ 90B4 C1           11 pop bc
 762+ 90B5 18 04            jr 7F
 763+ 90B7
 764+ 90B7              ; ----- ----- ----- ----- ----- -----
 765+ 90B7
 766+ 90B7 ED 42        1 sbc hl,bc
 767+ 90B9 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90BB 2A E6 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90BE 23               inc hl
 770+ 90BF 23               inc hl
 771+ 90C0 22 E6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90C3 18 BA            jr 2B
 773+ 90C5 CD BB 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90C8
 775+ 90C8 01 62 85         ld bc,Disparo_11
 776+ 90CB 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90CE
 778+ 90CE CD F2 8C     5 call Extrae_address
 779+ 90D1 7E               ld a,(hl)
 780+ 90D2 A7               and a
 781+ 90D3 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90D5
 783+ 90D5              ; ----- ----- ----- ----- ----- -----
 784+ 90D5
 785+ 90D5 C5               push bc
 786+ 90D6 CD 43 91         call foto_disparo_a_borrar
 787+ 90D9
 788+ 90D9              ; Existe colisión con este disparo???
 789+ 90D9
 790+ 90D9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90DA 7E               ld a,(hl)
 792+ 90DB 2B               dec hl
 793+ 90DC E6 01            and 1
 794+ 90DE 28 48            jr z,10F
 795+ 90E0
 796+ 90E0              ; La colisión se produce con Amadeus???
 797+ 90E0              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90E0
 799+ 90E0 E5               push hl
 800+ 90E1
 801+ 90E1 06 04            ld b,4
 802+ 90E3 23           16 inc hl
 803+ 90E4 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90E6 CD F2 8C         call Extrae_address
 805+ 90E9 CD 34 9C         call Genera_coordenadas_disparo
 806+ 90EC
 807+ 90EC 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90ED FE 16            cp $16
 809+ 90EF 38 22            jr c,15F
 810+ 90F1
 811+ 90F1              ; (Colisiones en filas 16 y 17).
 812+ 90F1
 813+ 90F1 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90F2
 815+ 90F2              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90F2
 817+ 90F2 21 82 85         ld hl,Amadeus_db+6
 818+ 90F5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90F6 23               inc hl
 820+ 90F7 23               inc hl
 821+ 90F8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90F9 21 90 85         ld hl,Amadeus_db+20
 823+ 90FC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 90FD 21 ED 89         ld hl,Coordenadas_X_Amadeus
 825+ 9100 CD CA 91         call Guarda_coordenadas_X
 826+ 9103
 827+ 9103 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9104
 829+ 9104              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9104
 831+ 9104 06 03            ld b,3
 832+ 9106 21 ED 89         ld hl,Coordenadas_X_Amadeus
 833+ 9109 7E           18 ld a,(hl)
 834+ 910A BA               cp d
 835+ 910B 20 03            jr nz,17F
 836+ 910D
 837+ 910D              ; Colisión Amadeus !!!!!!!!!!
 838+ 910D
 839+ 910D E1               pop hl
 840+ 910E 18 09            jr 14F
 841+ 9110
 842+ 9110 23           17 inc hl
 843+ 9111 10 F6            djnz 18B
 844+ 9113
 845+ 9113              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9113              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9113
 848+ 9113 E1           15 pop hl
 849+ 9114 23               inc hl
 850+ 9115 35               dec (hl)
 851+ 9116 2B               dec hl
 852+ 9117 18 0F            jr 10F
 853+ 9119
 854+ 9119              ; -----------------------debug
 855+ 9119
 856+ 9119              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9119              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9119
 859+ 9119 E5           14 push hl
 860+ 911A CD BF 91         call Elimina_disparo_de_base_de_datos
 861+ 911D 21 E8 89         ld hl,Impacto2
 862+ 9120 CB CE            set 1,(hl)
 863+ 9122 CD 09 92         call Limpia_Coordenadas_X
 864+ 9125
 865+ 9125 E1               pop hl
 866+ 9126 18 06            jr 12F
 867+ 9128
 868+ 9128 CD 6C 91     10 call Mueve_disparo
 869+ 912B CD 43 91         call foto_disparo_a_borrar
 870+ 912E C1           12 pop bc
 871+ 912F
 872+ 912F 18 04            jr 8F
 873+ 9131
 874+ 9131              ; ----- ----- ----- ----- ----- -----
 875+ 9131
 876+ 9131 ED 42        4 sbc hl,bc
 877+ 9133 28 0A            jr z,6F
 878+ 9135
 879+ 9135 2A E4 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9138 23               inc hl
 881+ 9139 23               inc hl
 882+ 913A 22 E4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 913D 18 8F            jr 5B
 884+ 913F
 885+ 913F CD B4 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9142 C9               ret
 887+ 9143
 888+ 9143              ; ------------------------------------------------------------------
 889+ 9143
 890+ 9143              foto_disparo_a_borrar
 891+ 9143
 892+ 9143 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9144 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9145 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9146
 896+ 9146 E5               push hl
 897+ 9147 23               inc hl
 898+ 9148 23               inc hl
 899+ 9149 ED 73 DB 89      ld (Stack),sp
 900+ 914D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 914E FD E1            pop iy
 902+ 9150 DD E1            pop ix
 903+ 9152 E1               pop hl
 904+ 9153 ED 7B DB 89      ld sp,(Stack)
 905+ 9157 3A CA 89         ld a,(Ctrl_1)
 906+ 915A CB C7            set 0,a
 907+ 915C 32 CA 89         ld (Ctrl_1),a
 908+ 915F CD A0 7F         call Guarda_foto_registros
 909+ 9162 3A CA 89         ld a,(Ctrl_1)
 910+ 9165 CB 87            res 0,a
 911+ 9167 32 CA 89         ld (Ctrl_1),a
 912+ 916A E1               pop hl
 913+ 916B C9               ret
 914+ 916C
 915+ 916C E5           Mueve_disparo push hl
 916+ 916D 7E               ld a,(hl)
 917+ 916E 06 04            ld b,4
 918+ 9170 23           1 inc hl
 919+ 9171 10 FD            djnz 1B
 920+ 9173
 921+ 9173              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9173
 923+ 9173 CD F2 8C         call Extrae_address
 924+ 9176
 925+ 9176 E6 01            and 1
 926+ 9178 28 2B            jr z,2F
 927+ 917A
 928+ 917A              ; Disparo hacia arriba, (Amadeus).
 929+ 917A
 930+ 917A              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 917A              ; _ de la dificultad.
 932+ 917A
 933+ 917A CD EC 95         call PreviousScan
 934+ 917D CD EC 95         call PreviousScan
 935+ 9180 CD EC 95         call PreviousScan
 936+ 9183
 937+ 9183              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9183
 939+ 9183 7C               ld a,h
 940+ 9184 FE 40            cp $40
 941+ 9186 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 9188
 943+ 9188              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 9188
 945+ 9188 EB               ex de,hl
 946+ 9189 06 04            ld b,4
 947+ 918B 2B           6 dec hl
 948+ 918C 10 FD            djnz 6B
 949+ 918E
 950+ 918E CD BF 91         call Elimina_disparo_de_base_de_datos
 951+ 9191 E1               pop hl
 952+ 9192 18 10            jr 7F
 953+ 9194
 954+ 9194              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9194
 956+ 9194 D5           3 push de
 957+ 9195 C5               push bc
 958+ 9196
 959+ 9196 CD 79 8F         call Comprueba_Colision
 960+ 9199
 961+ 9199              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 9199
 963+ 9199 78               ld a,b
 964+ 919A
 965+ 919A C1               pop bc
 966+ 919B D1               pop de
 967+ 919C
 968+ 919C EB               ex de,hl
 969+ 919D
 970+ 919D 73               ld (hl),e
 971+ 919E 23               inc hl
 972+ 919F 72               ld (hl),d
 973+ 91A0
 974+ 91A0 E1           4 pop hl
 975+ 91A1 23               inc hl
 976+ 91A2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 91A3 2B               dec hl
 978+ 91A4 C9           7 ret
 979+ 91A5
 980+ 91A5              ; Disparo hacia abajo, (Entidad).
 981+ 91A5
 982+ 91A5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 91A5              ; _ de la dificultad.
 984+ 91A5
 985+ 91A5 CD DD 95     2 call NextScan
 986+ 91A8 CD DD 95         call NextScan
 987+ 91AB CD DD 95         call NextScan
 988+ 91AE
 989+ 91AE              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91AE
 991+ 91AE 7C               ld a,h
 992+ 91AF FE 58            cp $58
 993+ 91B1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91B3
 995+ 91B3 EB               ex de,hl
 996+ 91B4 06 04            ld b,4
 997+ 91B6 2B           5 dec hl
 998+ 91B7 10 FD            djnz 5B
 999+ 91B9
1000+ 91B9 CD BF 91         call Elimina_disparo_de_base_de_datos
1001+ 91BC E1               pop hl
1002+ 91BD 18 E5            jr 7B
1003+ 91BF
1004+ 91BF              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91BF
1006+ 91BF 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91C2 AF               xor a
1008+ 91C3 77               ld (hl),a
1009+ 91C4 54               ld d,h
1010+ 91C5 5D               ld e,l
1011+ 91C6 13               inc de
1012+ 91C7 ED B0            ldir
1013+ 91C9 C9               ret
1014+ 91CA
1015+ 91CA              ; -----------------------------------------------------------------
1016+ 91CA              ;
1017+ 91CA              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91CA              ;
1019+ 91CA              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91CA              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91CA              ;
1022+ 91CA              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91CA              ;
1024+ 91CA              ;   INPUTS:
1025+ 91CA              ;
1026+ 91CA              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91CA              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91CA              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91CA
1030+ 91CA              ;   MODIFICA: A, HL, DE y C
1031+ 91CA
1032+ 91CA 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91CB 79               ld a,c
1034+ 91CC E6 01            and 1
1035+ 91CE 20 03            jr nz,1F
1036+ 91D0 14               inc d
1037+ 91D1 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91D3
1039+ 91D3              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91D3              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91D3
1042+ 91D3 15           1 dec d
1043+ 91D4 23           2 inc hl
1044+ 91D5 72               ld (hl),d
1045+ 91D6
1046+ 91D6 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91D7 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91D8 C8               ret z
1049+ 91D9
1050+ 91D9 AF               xor a
1051+ 91DA 5F               ld e,a
1052+ 91DB 18 ED            jr Guarda_coordenadas_X
1053+ 91DD
1054+ 91DD              ; -----------------------------------------------------------------
1055+ 91DD              ;
1056+ 91DD              ;   12/04/23
1057+ 91DD              ;
1058+ 91DD
1059+ 91DD 3A E8 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91E0 A7               and a
1061+ 91E1 C8               ret z
1062+ 91E2
1063+ 91E2 FE 04            cp 4
1064+ 91E4 20 09            jr nz,1F
1065+ 91E6
1066+ 91E6
1067+ 91E6              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91E6
1069+ 91E6 CD 0A 90         call Detecta_colision_nave_entidad
1070+ 91E9
1071+ 91E9 21 E8 89         ld hl,Impacto2
1072+ 91EC CB 5E            bit 3,(hl)
1073+ 91EE C0               ret nz                                               ; Existe colisión, RET.
1074+ 91EF
1075+ 91EF              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91EF              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91EF
1078+ 91EF 21 E8 89     1 ld hl,Impacto2
1079+ 91F2 CB 4E            bit 1,(hl)
1080+ 91F4 28 07            jr z,2F
1081+ 91F6
1082+ 91F6 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91F9 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 91FB 18 0B            jr 3F
1085+ 91FD
1086+ 91FD 21 E8 89     2 ld hl,Impacto2
1087+ 9200 CB 46            bit 0,(hl)
1088+ 9202 C8               ret z
1089+ 9203
1090+ 9203              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 9203
1092+ 9203 21 CA 89         ld hl,Ctrl_1
1093+ 9206 CB D6            set 2,(hl)
1094+ 9208
1095+ 9208 C9           3 ret
1096+ 9209
1097+ 9209              ; -----------------------------------------------------------------
1098+ 9209              ;
1099+ 9209              ;   16/04/23
1100+ 9209              ;
1101+ 9209
1102+ 9209 AF           Limpia_Coordenadas_X xor a
1103+ 920A 06 06            ld b,6
1104+ 920C 21 ED 89         ld hl,Coordenadas_X_Amadeus
1105+ 920F 77           1 ld (hl),a
1106+ 9210 23               inc hl
1107+ 9211 10 FC            djnz 1B
1108+ 9213 C9               ret
1109+ 9214
1110+ 9214              ; -----------------------------------------------------------------
1111+ 9214              ;
1112+ 9214              ;   25/04/23
1113+ 9214              ;
1114+ 9214
1115+ 9214              Determina_resultado_comparativa
1116+ 9214
1117+ 9214              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9214              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9214              ;
1120+ 9214              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9214              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9214              ;
1123+ 9214              ;   SBC HL,DE
1124+ 9214
1125+ 9214              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1126+ 9214              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1127+ 9214
1128+ 9214              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1129+ 9214              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1130+ 9214
1131+ 9214
1132+ 9214 3A A0 89         ld a,(Cuad_objeto)
1133+ 9217 FE 02            cp 2
1134+ 9219 28 26            jr z,2F
1135+ 921B 38 24            jr c,2F
1136+ 921D
1137+ 921D              ; Cuadrantes 3º y 4º
1138+ 921D
1139+ 921D E6 01            and 1
1140+ 921F 28 10            jr z,4F
1141+ 9221
1142+ 9221              ; Cuadrante 3º
1143+ 9221
1144+ 9221 7C               ld a,h
1145+ 9222 06 00            ld b,0
1146+ 9224
1147+ 9224 CD AF 92         call Compara_cositas_H3
1148+ 9227
1149+ 9227 04               inc b
1150+ 9228 05               dec b
1151+ 9229 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1152+ 922A
1153+ 922A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1154+ 922B 06 00            ld b,0
1155+ 922D
1156+ 922D CD C1 92         call Compara_cositas_L3
1157+ 9230 C9               ret
1158+ 9231
1159+ 9231              ; Cuadrante 4º
1160+ 9231
1161+ 9231 7C           4 ld a,h
1162+ 9232 06 00            ld b,0
1163+ 9234
1164+ 9234 CD D3 92         call Compara_cositas_H4
1165+ 9237
1166+ 9237 04               inc b
1167+ 9238 05               dec b
1168+ 9239 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1169+ 923A
1170+ 923A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1171+ 923B 06 00            ld b,0
1172+ 923D
1173+ 923D CD E5 92         call Compara_cositas_L4
1174+ 9240 C9               ret
1175+ 9241
1176+ 9241              ; Cuadrantes 1º y 2º.
1177+ 9241
1178+ 9241 28 10        2 jr z,3F
1179+ 9243
1180+ 9243              ; 1er Cuadrante
1181+ 9243
1182+ 9243 7C               ld a,h
1183+ 9244 06 00            ld b,0
1184+ 9246
1185+ 9246 CD 87 92         call Compara_cositas_H1
1186+ 9249
1187+ 9249 04               inc b
1188+ 924A 05               dec b
1189+ 924B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1190+ 924C
1191+ 924C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1192+ 924D 06 00            ld b,0
1193+ 924F
1194+ 924F CD 9D 92         call Compara_cositas_L1
1195+ 9252 C9               ret
1196+ 9253
1197+ 9253
1198+ 9253              ; 2º Cuadrante
1199+ 9253
1200+ 9253 7C           3 ld a,h
1201+ 9254 06 00            ld b,0
1202+ 9256
1203+ 9256 CD 63 92         call Compara_cositas_H2
1204+ 9259
1205+ 9259 04               inc b
1206+ 925A 05               dec b
1207+ 925B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1208+ 925C
1209+ 925C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1210+ 925D 06 00            ld b,0
1211+ 925F
1212+ 925F CD 75 92         call Compara_cositas_L2
1213+ 9262 C9               ret
1214+ 9263
1215+ 9263 A7           Compara_cositas_H2 and a
1216+ 9264 28 0D            jr z,1F
1217+ 9266              ;    cp $fd
1218+ 9266              ;    jr z,1F
1219+ 9266              ;    cp $fe
1220+ 9266              ;    jr z,1F
1221+ 9266 FE FF            cp $ff
1222+ 9268 28 09            jr z,1F
1223+ 926A FE 01            cp $01
1224+ 926C 28 05            jr z,1F
1225+ 926E FE 02            cp $02
1226+ 9270 28 01            jr z,1F
1227+ 9272 C0               ret nz
1228+ 9273 04           1 inc b
1229+ 9274 C9               ret
1230+ 9275
1231+ 9275 A7           Compara_cositas_L2 and a
1232+ 9276 28 0D            jr z,1F
1233+ 9278              ;    cp $fd
1234+ 9278              ;    jr z,1F
1235+ 9278 FE FE            cp $fe
1236+ 927A 28 09            jr z,1F
1237+ 927C FE FF            cp $ff
1238+ 927E 28 05            jr z,1F
1239+ 9280 FE 01            cp $01
1240+ 9282 28 01            jr z,1F
1241+ 9284              ;    cp $02
1242+ 9284              ;    jr z,1F
1243+ 9284 C0               ret nz
1244+ 9285 04           1 inc b
1245+ 9286 C9               ret
1246+ 9287
1247+ 9287 A7           Compara_cositas_H1 and a
1248+ 9288 28 11            jr z,1F
1249+ 928A              ;    cp $fd
1250+ 928A              ;    jr z,1F
1251+ 928A              ;    cp $fe
1252+ 928A              ;    jr z,1F
1253+ 928A FE FF            cp $ff
1254+ 928C 28 0D            jr z,1F
1255+ 928E FE 01            cp $01
1256+ 9290 28 09            jr z,1F
1257+ 9292 FE 02            cp $02
1258+ 9294 28 05            jr z,1F
1259+ 9296 FE 03            cp $03
1260+ 9298 28 01            jr z,1F
1261+ 929A C0               ret nz
1262+ 929B 04           1 inc b
1263+ 929C C9               ret
1264+ 929D
1265+ 929D A7           Compara_cositas_L1 and a
1266+ 929E 28 0D            jr z,1F
1267+ 92A0              ;    cp $fd
1268+ 92A0              ;    jr z,1F
1269+ 92A0              ;    cp $fe
1270+ 92A0              ;    jr z,1F
1271+ 92A0              ;    cp $ff
1272+ 92A0              ;    jr z,1F
1273+ 92A0 FE 01            cp $01
1274+ 92A2 28 09            jr z,1F
1275+ 92A4 FE 02            cp $02
1276+ 92A6 28 05            jr z,1F
1277+ 92A8 FE 03            cp $03
1278+ 92AA 28 01            jr z,1F
1279+ 92AC C0               ret nz
1280+ 92AD 04           1 inc b
1281+ 92AE C9               ret
1282+ 92AF
1283+ 92AF A7           Compara_cositas_H3 and a
1284+ 92B0 28 0D            jr z,1F
1285+ 92B2              ;    cp $fd
1286+ 92B2              ;    jr z,1F
1287+ 92B2 FE FE            cp $fe
1288+ 92B4 28 09            jr z,1F
1289+ 92B6 FE FF            cp $ff
1290+ 92B8 28 05            jr z,1F
1291+ 92BA FE 01            cp $01
1292+ 92BC 28 01            jr z,1F
1293+ 92BE              ;    cp $02
1294+ 92BE              ;    jr z,1F
1295+ 92BE              ;    cp $03
1296+ 92BE              ;    jr z,1F
1297+ 92BE C0               ret nz
1298+ 92BF 04           1 inc b
1299+ 92C0 C9               ret
1300+ 92C1
1301+ 92C1 A7           Compara_cositas_L3 and a
1302+ 92C2 28 0D            jr z,1F
1303+ 92C4              ;    cp $fd
1304+ 92C4              ;    jr z,1F
1305+ 92C4              ;    cp $fe
1306+ 92C4              ;    jr z,1F
1307+ 92C4              ;    cp $ff
1308+ 92C4              ;    jr z,1F
1309+ 92C4 FE 01            cp $01
1310+ 92C6 28 09            jr z,1F
1311+ 92C8 FE 02            cp $02
1312+ 92CA 28 05            jr z,1F
1313+ 92CC FE 03            cp $03
1314+ 92CE 28 01            jr z,1F
1315+ 92D0 C0               ret nz
1316+ 92D1 04           1 inc b
1317+ 92D2 C9               ret
1318+ 92D3
1319+ 92D3 A7           Compara_cositas_H4 and a
1320+ 92D4 28 0D            jr z,1F
1321+ 92D6 FE FD            cp $fd
1322+ 92D8 28 09            jr z,1F
1323+ 92DA FE FE            cp $fe
1324+ 92DC 28 05            jr z,1F
1325+ 92DE FE FF            cp $ff
1326+ 92E0 28 01            jr z,1F
1327+ 92E2              ;    cp $01
1328+ 92E2              ;    jr z,1F
1329+ 92E2              ;    cp $02
1330+ 92E2              ;    jr z,1F
1331+ 92E2              ;    cp $03
1332+ 92E2              ;    jr z,1F
1333+ 92E2 C0               ret nz
1334+ 92E3 04           1 inc b
1335+ 92E4 C9               ret
1336+ 92E5
1337+ 92E5 A7           Compara_cositas_L4 and a
1338+ 92E6 28 0D            jr z,1F
1339+ 92E8              ;    cp $fd
1340+ 92E8              ;    jr z,1F
1341+ 92E8 FE FE            cp $fe
1342+ 92EA 28 09            jr z,1F
1343+ 92EC FE FF            cp $ff
1344+ 92EE 28 05            jr z,1F
1345+ 92F0 FE 01            cp $01
1346+ 92F2 28 01            jr z,1F
1347+ 92F4              ;    cp $02
1348+ 92F4              ;    jr z,1F
1349+ 92F4              ;    cp $03
1350+ 92F4              ;    jr z,1F
1351+ 92F4 C0               ret nz
1352+ 92F5 04           1 inc b
1353+ 92F6 C9               ret
# file closed: Disparo.asm
1239  92F7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92F7              ; ******************************************************************************************************************************************************************************************
   2+ 92F7              ;
   3+ 92F7              ; 01/23
   4+ 92F7              ;
   5+ 92F7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92F7
   7+ 92F7 CD D1 95     Draw call Prepara_draw
   8+ 92FA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92FB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92FC 28 05        	jr z,2F
  11+ 92FE
  12+ 92FE 3A A0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9301 18 0C        	jr 1F
  14+ 9303 2A 9E 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9306 22 8E 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9309 CD 98 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 930C              ;													; _la esquina superior izquierda de la pantalla.
  18+ 930C CD 57 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 930F 3A BA 89     1 ld a,(Ctrl_0)
  20+ 9312 CB 6F        	bit 5,a
  21+ 9314 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9316
  23+ 9316 CD 2E 93     	call Comprueba_limite_horizontal
  24+ 9319 CD BE 93     	call Comprueba_limite_vertical
  25+ 931C
  26+ 931C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 931C
  28+ 931C CD 0B 95     3 call calcula_CColumnass
  29+ 931F CD 42 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9322 CD 97 95     	call Define_rutina_de_impresion
  31+ 9325
  32+ 9325 3A BA 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9328 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 932A 32 BA 89     	ld (Ctrl_0),a
  35+ 932D
  36+ 932D C9           	ret
  37+ 932E
  38+ 932E              ; *******************************************************************************************************************************************************************************************
  39+ 932E              ;	21/01/23
  40+ 932E              ;
  41+ 932E              ; 	Comprueba_limite_horizontal.
  42+ 932E              ;
  43+ 932E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 932E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 932E              ;
  46+ 932E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 932E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 932E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 932E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 932E
  51+ 932E
  52+ 932E
  53+ 932E 3A BA 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9331 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9333 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9335 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9337 32 BA 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 933A 18 09            jr 6F
  59+ 933C CB 5F        1 bit 3,a
  60+ 933E 28 0A            jr z,2F
  61+ 9340 E6 F7            and $f7
  62+ 9342 32 BA 89         ld (Ctrl_0),a
  63+ 9345 CD 98 94     6 call Inicializacion
  64+ 9348 18 5B            jr 5F
  65+ 934A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 934B
  67+ 934B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 934B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 934B
  70+ 934B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 934C 2A C5 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 934F CD 9D 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9352 67           	ld h,a
  74+ 9353 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9354 CD 9D 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9357 67           	ld h,a
  77+ 9358 A7           	and a
  78+ 9359 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 935B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 935C 3A A0 89     	ld a,(Cuad_objeto)
  81+ 935F FE 02        	cp 2
  82+ 9361 38 1E        	jr c,3F
  83+ 9363 28 1C        	jr z,3F
  84+ 9365 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9366 28 23            jr z,7F
  86+ 9368 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 936A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 936C E1           	pop hl
  89+ 936D
  90+ 936D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 936D              ; _para indicar con E="2" en caso necesario.
  92+ 936D
  93+ 936D E5               push hl
  94+ 936E C5               push bc
  95+ 936F CD 9D 98     	call calcula_tercio
  96+ 9372 FE 01        	cp 1
  97+ 9374 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9376 CD A6 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9379 28 26            jr z,9F
 100+ 937B 38 24            jr c,9F
 101+ 937D 1E 00        11 ld e,0
 102+ 937F 18 22            jr 8F
 103+ 9381 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9382 28 07        	jr z, 7F
 105+ 9384 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9386 1E 00         	ld e,0
 107+ 9388 E1           	pop hl
 108+ 9389 18 04        	jr 4F
 109+ 938B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 938D 18 15            jr 10F
 111+ 938F
 112+ 938F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 938F              ; _para indicar con E="2" en caso necesario.
 114+ 938F
 115+ 938F E5           4 push hl
 116+ 9390 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9391 CD 9D 98     	call calcula_tercio
 118+ 9394 FE 01        	cp 1
 119+ 9396 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9398 CD A6 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 939B 28 04            jr z,9F
 122+ 939D 30 02            jr nc,9F
 123+ 939F 18 02        	jr 8F
 124+ 93A1 1E 02        9 ld e,2
 125+ 93A3 C1           8 pop bc
 126+ 93A4 E1           10 pop hl
 127+ 93A5 C9           5 ret
 128+ 93A6
 129+ 93A6              ; --------------------
 130+ 93A6              ;
 131+ 93A6              ; 25/08/22
 132+ 93A6
 133+ 93A6 CD 9D 98     Comprueba_centro call calcula_tercio
 134+ 93A9 67               ld h,a
 135+ 93AA 08           	ex af,af
 136+ 93AB FE 02        	cp 2
 137+ 93AD 38 07        	jr c,1F
 138+ 93AF 28 05        	jr z,1F
 139+ 93B1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93B4 18 03        	jr 2F
 141+ 93B6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93B9 08           2 ex af,af
 143+ 93BA A7               and a
 144+ 93BB ED 42            sbc hl,bc
 145+ 93BD C9               ret
 146+ 93BE
 147+ 93BE              ; *********************************************************************************************************************************************************************************************
 148+ 93BE              ;
 149+ 93BE              ;   16/8/22
 150+ 93BE              ;
 151+ 93BE              ;	Comprueba_limite_vertical
 152+ 93BE              ;
 153+ 93BE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93BE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93BE              ;
 156+ 93BE
 157+ 93BE 2A 8E 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93C1 7D           	ld a,l
 159+ 93C2 E6 1F        	and $1F
 160+ 93C4 57           	ld d,a
 161+ 93C5 3A C7 89     	ld a,(Limite_vertical)
 162+ 93C8 BA           	cp d 											; Límite - Posición.
 163+ 93C9 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93CA 3A A0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93CD CB 47        	bit 0,a
 166+ 93CF 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93D1
 168+ 93D1              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93D1
 170+ 93D1 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93D2 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93D4
 173+ 93D4              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93D4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93D4
 176+ 93D4 3A 92 89         ld a,(Coordenada_X)
 177+ 93D7 16 0F            ld d,Centro_izquierda
 178+ 93D9 A7               and a
 179+ 93DA 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93DB 28 1E            jr z,3F
 181+ 93DD 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93DF              ;                                                    ; _salimos sin modificar nada.
 183+ 93DF 18 0E            jr 2F
 184+ 93E1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 93E2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 93E4
 187+ 93E4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 93E4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 93E4
 190+ 93E4 3A 92 89         ld a,(Coordenada_X)
 191+ 93E7 16 10            ld d,Centro_derecha
 192+ 93E9 A7               and a
 193+ 93EA 92               sub d
 194+ 93EB 28 0E            jr z,3F
 195+ 93ED 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 93EF              ;                                                    ; _salimos sin modificar nada.
 197+ 93EF CB 43        2 bit 0,e
 198+ 93F1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 93F3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 93F4 CD 88 94         call Modificaccionne
 201+ 93F7 C1           	pop bc
 202+ 93F8 CD 98 94         call Inicializacion
 203+ 93FB C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 93FC
 205+ 93FC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 93FC
 207+ 93FC C5           4 push bc
 208+ 93FD 01 8D 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9400 0A           	ld a,(bc)
 210+ 9401 3D           	dec a
 211+ 9402 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9403 7D           	ld a,l
 213+ 9404 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9405 CB 47        	bit 0,a
 215+ 9407 28 03        	jr z,5F
 216+ 9409 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 940A 18 2E        	jr 7F
 218+ 940C
 219+ 940C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 940C
 221+ 940C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 940D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 940E 3A BA 89     	ld a,(Ctrl_0)
 224+ 9411 CB 4F        	bit 1,a
 225+ 9413 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9415 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9416
 228+ 9416              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9416
 230+ 9416 1C               inc e
 231+ 9417 1D               dec e
 232+ 9418 20 07            jr nz,12F
 233+ 941A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 941B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 941C 22 8E 89     	ld (Posicion_actual),hl
 236+ 941F 18 44        13 jr 9F
 237+ 9421 CB 43        12 bit 0,e
 238+ 9423 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9425              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9425 C1           	pop bc
 241+ 9426 18 D3        	jr 3B
 242+ 9428 80           14 add b
 243+ 9429 6F               ld l,a
 244+ 942A 22 8E 89     	ld (Posicion_actual),hl
 245+ 942D CD 88 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9430 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9432 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9434 32 BA 89         ld (Ctrl_0),a
 249+ 9437 F1           	pop af
 250+ 9438 18 2B        	jr 9F
 251+ 943A
 252+ 943A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 943A
 254+ 943A F5           7 push af
 255+ 943B 3A BA 89     	ld a,(Ctrl_0)
 256+ 943E CB 47        	bit 0,a
 257+ 9440 20 1D        	jr nz,8F
 258+ 9442 F1           	pop af
 259+ 9443
 260+ 9443              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9443
 262+ 9443 1C           	inc e
 263+ 9444 1D               dec e
 264+ 9445 20 07            jr nz,10F
 265+ 9447 90           	sub b
 266+ 9448 6F               ld l,a
 267+ 9449 22 8E 89     	ld (Posicion_actual),hl
 268+ 944C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 944E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 944E CB 43        10 bit 0,e
 271+ 9450 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9452              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9452 C1           	pop bc
 274+ 9453 18 A6        	jr 3B
 275+ 9455 90           16 sub b
 276+ 9456 6F               ld l,a
 277+ 9457 22 8E 89     	ld (Posicion_actual),hl
 278+ 945A CD 88 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 945D 18 06            jr 9F
 280+ 945F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9461 32 BA 89         ld (Ctrl_0),a
 282+ 9464 F1           	pop af
 283+ 9465 C1           9 pop bc
 284+ 9466 1E 00        	ld e,0
 285+ 9468 CD 98 94         call Inicializacion
 286+ 946B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 946C 08           	ex af,af
 288+ 946D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 946E 18 8B            jr 3B
 290+ 9470
 291+ 9470              ; --------------------
 292+ 9470
 293+ 9470 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9472 CD EC 95     1 call PreviousScan
 295+ 9475 10 FB            djnz 1B
 296+ 9477 22 8E 89     	ld (Posicion_actual),hl
 297+ 947A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 947B C9           	ret
 299+ 947C
 300+ 947C              ; --------------------
 301+ 947C
 302+ 947C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 947E CD DD 95     1 call NextScan
 304+ 9481 10 FB            djnz 1B
 305+ 9483 22 8E 89     	ld (Posicion_actual),hl
 306+ 9486 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9487 C9           	ret
 308+ 9488
 309+ 9488              ; --------------------
 310+ 9488              ;
 311+ 9488              ;	22/01/23
 312+ 9488              ;
 313+ 9488              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9488              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9488              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9488
 317+ 9488
 318+ 9488              Modificaccionne
 319+ 9488
 320+ 9488 3A A0 89     	ld a,(Cuad_objeto)
 321+ 948B FE 02        	cp 2
 322+ 948D CC 70 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9490 DC 70 94         call c,Modifica_Pos_actual
 324+ 9493 C8           	ret z
 325+ 9494 CD 7C 94         call Modifica_Pos_actual2
 326+ 9497 C9               ret
 327+ 9498
 328+ 9498              ; *************************************************************************************************************************************************************************************************
 329+ 9498              ;
 330+ 9498              ;	13/8/22
 331+ 9498              ;
 332+ 9498              ;	Inicializacion
 333+ 9498              ;
 334+ 9498              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9498              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9498              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9498              ;
 338+ 9498              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9498              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9498              ;	_ desaparece/aparece.
 341+ 9498
 342+ 9498              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9498              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9498              ;
 345+ 9498              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9498              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9498              ; 		   [E] ="0"
 348+ 9498
 349+ 9498              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9498
 351+ 9498 CD 9D 98     Inicializacion call calcula_tercio
 352+ 949B 28 36        	jr z,primit
 353+ 949D E6 02        	and 2
 354+ 949F 20 07        	jr nz,segmit
 355+ 94A1 7D           	ld a,l
 356+ 94A2 FE 7F        	cp $7f
 357+ 94A4 38 2D        	jr c,primit
 358+ 94A6 28 2B        	jr z,primit
 359+ 94A8 CD 05 95     segmit call column
 360+ 94AB 38 13        	jr c,tercuad
 361+ 94AD 3E 04        cuarcuad ld a,4
 362+ 94AF 32 A0 89     	ld (Cuad_objeto),a
 363+ 94B2 21 20 48     	ld hl,$4820
 364+ 94B5 22 C5 89     	ld (Limite_horizontal),hl
 365+ 94B8 21 C7 89     	ld hl,Limite_vertical
 366+ 94BB 36 0D        	ld (hl),$0d
 367+ 94BD 08           	ex af,af
 368+ 94BE 18 3C        	jr 1F
 369+ 94C0              tercuad
 370+ 94C0 3E 03        	ld a,3
 371+ 94C2 32 A0 89     	ld (Cuad_objeto),a
 372+ 94C5 21 20 48     	ld hl,$4820
 373+ 94C8 22 C5 89     	ld (Limite_horizontal),hl
 374+ 94CB 21 C7 89     	ld hl,Limite_vertical
 375+ 94CE 36 12        	ld (hl),$12
 376+ 94D0 08           	ex af,af
 377+ 94D1 18 29        	jr 1F
 378+ 94D3 CD 05 95     primit call column
 379+ 94D6 38 13        	jr c, primcuad
 380+ 94D8              segcuad
 381+ 94D8 3E 02        	ld a,2
 382+ 94DA 32 A0 89     	ld (Cuad_objeto),a
 383+ 94DD 21 C0 4F     	ld hl,$4fc0
 384+ 94E0 22 C5 89     	ld (Limite_horizontal),hl
 385+ 94E3 21 C7 89     	ld hl,Limite_vertical
 386+ 94E6 36 0D        	ld (hl),$0d
 387+ 94E8 08           	ex af,af
 388+ 94E9 18 11        	jr 1F
 389+ 94EB              primcuad
 390+ 94EB 3E 01        	ld a,1
 391+ 94ED 32 A0 89     	ld (Cuad_objeto),a
 392+ 94F0 21 C0 4F     	ld hl,$4fc0
 393+ 94F3 22 C5 89     	ld (Limite_horizontal),hl
 394+ 94F6 21 C7 89     	ld hl,Limite_vertical
 395+ 94F9 36 12        	ld (hl),$12
 396+ 94FB 08           	ex af,af
 397+ 94FC CD 09 9C     1 call Genera_coordenadas
 398+ 94FF 21 BA 89     	ld hl,Ctrl_0
 399+ 9502 CB EE        	set 5,(hl)
 400+ 9504 C9           	ret
 401+ 9505
 402+ 9505              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9505
 404+ 9505              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9505              ;
 406+ 9505              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9505
 408+ 9505 7D           column ld a,l
 409+ 9506 E6 1F        	and $1f
 410+ 9508 FE 10         	cp $10
 411+ 950A C9            	ret
 412+ 950B
 413+ 950B              ; --------------------------------------------------------------------------------------------------------------------
 414+ 950B              ;
 415+ 950B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 950B              ;
 417+ 950B              ; 14/12/22
 418+ 950B              ;
 419+ 950B              ;	Modifica: A y BC.
 420+ 950B
 421+ 950B 3A A0 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 950E E6 01        	and 1
 423+ 9510 28 17        	jr z,1F
 424+ 9512
 425+ 9512              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9512
 427+ 9512 3A 92 89     	ld a,(Coordenada_X)
 428+ 9515 47           	ld b,a
 429+ 9516 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9517 79           	ld a,c
 431+ 9518 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9519 38 08        	jr c,2F
 433+ 951B 47           	ld b,a
 434+ 951C 79           	ld a,c
 435+ 951D 90           	sub b
 436+ 951E 32 C4 89     	ld (Columnas),a
 437+ 9521 18 1B        	jr 4F
 438+ 9523 79           2 ld a,c
 439+ 9524 32 C4 89     	ld (Columnas),a
 440+ 9527 18 15        	jr 4F
 441+ 9529
 442+ 9529              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9529
 444+ 9529 3A 92 89     1 ld a,(Coordenada_X)
 445+ 952C 81           	add c
 446+ 952D 3D           	dec a
 447+ 952E D6 1F        	sub $1f
 448+ 9530 38 08        	jr c,3F
 449+ 9532 47           	ld b,a
 450+ 9533 79           	ld a,c
 451+ 9534 90           	sub b
 452+ 9535 32 C4 89     	ld (Columnas),a
 453+ 9538 18 04        	jr 4F
 454+ 953A 79           3 ld a,c
 455+ 953B 32 C4 89     	ld (Columnas),a
 456+ 953E D9           4 exx
 457+ 953F 4F           	ld c,a
 458+ 9540 D9           	exx
 459+ 9541 C9            ret
 460+ 9542
 461+ 9542              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9542              ;
 463+ 9542              ; 7/1/23
 464+ 9542              ;
 465+ 9542              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9542              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9542              ;
 468+ 9542              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9542              ;	DESTRUYE: HL,B Y A.
 470+ 9542
 471+ 9542 3A A0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9545 FE 02        	cp 2
 473+ 9547 38 18        	jr c,1F
 474+ 9549 28 16        	jr z,1F
 475+ 954B E6 01        	and 1
 476+ 954D 28 0D        	jr z,3F
 477+ 954F
 478+ 954F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 954F
 480+ 954F CD 8B 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9552
 482+ 9552 7D           9 ld a,l
 483+ 9553 E6 1F        	and $1f
 484+ 9555 28 2A        	jr z,7F
 485+ 9557 2B           	dec hl
 486+ 9558 10 F8        	djnz 9B
 487+ 955A 18 25        	jr 7F
 488+ 955C
 489+ 955C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 955C
 491+ 955C 2A 8E 89     3 ld hl,(Posicion_actual)
 492+ 955F 18 20        	jr 7F
 493+ 9561
 494+ 9561 28 14        1 jr z,2F
 495+ 9563
 496+ 9563              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9563
 498+ 9563 CD 8B 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9566
 500+ 9566 7D           4 ld a,l
 501+ 9567 E6 1F        	and $1f
 502+ 9569 28 03        	jr z,6F
 503+ 956B 2B           	dec hl
 504+ 956C 10 F8        	djnz 4B
 505+ 956E 06 0F        6 ld b,15
 506+ 9570 CD EC 95     5 call PreviousScan
 507+ 9573 10 FB        	djnz 5B
 508+ 9575 18 0A        	jr 7F
 509+ 9577
 510+ 9577              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 9577
 512+ 9577 CD 8B 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 957A 06 0F        	ld b,15
 514+ 957C CD EC 95     8 call PreviousScan
 515+ 957F 10 FB        	djnz 8B
 516+ 9581
 517+ 9581 E5           7 push hl
 518+ 9582 DD E1        	pop ix
 519+ 9584
 520+ 9584 2A 90 89     	ld hl,(Puntero_objeto)
 521+ 9587 E5           	push hl
 522+ 9588 FD E1        	pop iy
 523+ 958A
 524+ 958A C9           	ret
 525+ 958B
 526+ 958B              ; --------------------------------------------------------------------------------------------------------------------
 527+ 958B              ;
 528+ 958B              ;	2/1/23
 529+ 958B              ;
 530+ 958B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 958B              ;
 532+ 958B              ;	Tras esta rutina tenemos:
 533+ 958B              ;
 534+ 958B              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 958B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 958B              ;
 537+ 958B              ;	DESTRUYE!!!!! HL,B y A.
 538+ 958B
 539+ 958B 2A 8E 89     Operandos ld hl,(Posicion_actual)
 540+ 958E 3A C4 89     	ld a,(Columnas)
 541+ 9591 3D           	dec a
 542+ 9592 20 01        	jr nz,1F
 543+ 9594 3C           	inc a
 544+ 9595 47           1 ld b,a
 545+ 9596 C9           	ret
 546+ 9597
 547+ 9597              ; --------------------------------------------------------------------------------------------------------------------
 548+ 9597              ;
 549+ 9597              ;	3/1/23
 550+ 9597              ;
 551+ 9597              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 9597              ;
 553+ 9597              ;	Destruye: A,B,HL y DE.
 554+ 9597
 555+ 9597              Define_rutina_de_impresion
 556+ 9597
 557+ 9597 3A 8D 89     	ld a,(Columns)
 558+ 959A 47           	ld b,a
 559+ 959B 3A C4 89     	ld a,(Columnas)
 560+ 959E B8           	cp b
 561+ 959F 20 0D        	jr nz,2f
 562+ 95A1
 563+ 95A1              ;	La entidad se imprime entera.
 564+ 95A1
 565+ 95A1 21 6D 96     	ld hl, Indice_entidades_completas
 566+ 95A4 E6 01        	and 1
 567+ 95A6 28 02        	jr z,1F
 568+ 95A8
 569+ 95A8 23           	inc hl
 570+ 95A9 23           	inc hl
 571+ 95AA
 572+ 95AA CD F2 8C     1 call Extrae_address
 573+ 95AD C9           	ret		;	ret
 574+ 95AE
 575+ 95AE              ;	La entidad no se imprime entera en pantalla.
 576+ 95AE
 577+ 95AE 3A A0 89     2 ld a,(Cuad_objeto)
 578+ 95B1 E6 01        	and 1
 579+ 95B3 28 17        	jr z,3F
 580+ 95B5
 581+ 95B5              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95B5
 583+ 95B5 21 71 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95B8 3A 8D 89     4 ld a,(Columns)
 585+ 95BB E6 01        	and 1
 586+ 95BD 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95BF
 588+ 95BF 23           	inc hl
 589+ 95C0 23           	inc hl
 590+ 95C1
 591+ 95C1 3A C4 89     	ld a,(Columnas)
 592+ 95C4 E6 01        	and 1
 593+ 95C6 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95C8
 595+ 95C8 23           	inc hl
 596+ 95C9 23           	inc hl
 597+ 95CA
 598+ 95CA 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95CC
 600+ 95CC 21 77 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95CF 18 E7        	jr 4B
 602+ 95D1
 603+ 95D1              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95D1              ;
 605+ 95D1              ;	Prepara_draw
 606+ 95D1              ;
 607+ 95D1              ;	Es una rutina de carga.
 608+ 95D1              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95D1              ;
 610+ 95D1              ;	FUNCIONAMIENTO:
 611+ 95D1              ;
 612+ 95D1              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95D1              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95D1              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95D1              ;
 616+ 95D1              ;	DESTRUYE:
 617+ 95D1              ;
 618+ 95D1              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95D1
 620+ 95D1 21 8C 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95D4 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95D5 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95D6 4E           	ld c,(hl)
 624+ 95D7 2A 8E 89     	ld hl,(Posicion_actual)
 625+ 95DA 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95DC C9           	ret
 627+ 95DD
 628+ 95DD              ;----------------------------------------------------------------------------------------------------------------
 629+ 95DD              ;
 630+ 95DD              ;	5/08/22
 631+ 95DD              ;
 632+ 95DD              ;   NextScan.
 633+ 95DD              ;
 634+ 95DD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95DD              ;
 636+ 95DD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95DD              ;
 638+ 95DD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95DD              ;
 640+ 95DD              ;       DESTRUIDOS: AF y HL !!!
 641+ 95DD              ;
 642+ 95DD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95DD              ;
 644+ 95DD
 645+ 95DD 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95DE 7C               ld a,h
 647+ 95DF E6 07            and 7
 648+ 95E1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 95E2
 650+ 95E2 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 95E3 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 95E5 6F               ld l,a
 653+ 95E6 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 95E7
 655+ 95E7 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 95E8 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 95EA 67               ld h,a
 658+ 95EB C9               ret
 659+ 95EC
 660+ 95EC              ;----------------------------------------------------------------------------------------------------------------
 661+ 95EC              ;
 662+ 95EC              ;	5/08/22
 663+ 95EC              ;
 664+ 95EC              ;   PreviousScan.
 665+ 95EC              ;
 666+ 95EC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 95EC              ;
 668+ 95EC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 95EC              ;
 670+ 95EC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 95EC              ;
 672+ 95EC              ;       DESTRUIDOS: AF y HL !!!
 673+ 95EC              ;
 674+ 95EC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 95EC              ;
 676+ 95EC
 677+ 95EC 7C           PreviousScan ld a,h
 678+ 95ED 25               dec h               ; Dec H.
 679+ 95EE E6 07            and 7
 680+ 95F0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 95F1
 682+ 95F1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 95F2 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 95F4 6F               ld l,a
 685+ 95F5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 95F6
 687+ 95F6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 95F7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 95F9 67               ld h,a
 690+ 95FA C9               ret
 691+ 95FB
 692+ 95FB              ; -----------------------------------------------------------------------------------
 693+ 95FB              ;
 694+ 95FB              ;	28/2/23
 695+ 95FB              ;
 696+ 95FB              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 95FB              ;	Extrae fotos de Album_de_fotos.
 698+ 95FB
 699+ 95FB 3A D6 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 95FE A7           	and a
 701+ 95FF C8           	ret z
 702+ 9600 ED 73 DB 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9604 31 00 70     	ld sp,Album_de_fotos
 704+ 9607
 705+ 9607 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9609 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 960A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 960B
 709+ 960B ED 73 DD 89  	ld (Stack_2),sp
 710+ 960F ED 7B DB 89  	ld sp,(Stack)
 711+ 9613
 712+ 9613              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9613
 714+ 9613 3E CD        	ld a,$cd
 715+ 9615 32 1D 96     	ld (Imprime),a
 716+ 9618 EB           	ex de,hl
 717+ 9619 22 1E 96     	ld (Imprime+1),hl
 718+ 961C EB           	ex de,hl
 719+ 961D
 720+ 961D              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 961D
 722+ 961D 00 00 00     Imprime db 0,0,0
 723+ 9620
 724+ 9620 3A D6 89     	ld a,(Numero_de_malotes)
 725+ 9623 3D           	dec a
 726+ 9624 28 09        	jr z,1F
 727+ 9626 32 D6 89      	ld (Numero_de_malotes),a
 728+ 9629
 729+ 9629 ED 7B DD 89   	ld sp,(Stack_2)
 730+ 962D 18 D8        	jr 2B
 731+ 962F
 732+ 962F AF           1 xor a
 733+ 9630 32 DD 89     	ld (Stack_2),a
 734+ 9633 C9           	ret
 735+ 9634
 736+ 9634              ; -----------------------------------------------------------------------------------
 737+ 9634              ;
 738+ 9634              ;	28/2/23
 739+ 9634              ;
 740+ 9634              ;	Pinta los disparos generados.
 741+ 9634
 742+ 9634              Extrae_foto_disparos
 743+ 9634
 744+ 9634 3A E3 89     	ld a,(Numero_de_disparotes)
 745+ 9637 A7           	and a
 746+ 9638 C8           	ret z
 747+ 9639 ED 73 DB 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 963D 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9640
 750+ 9640 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9642 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9643 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9644
 754+ 9644 ED 73 DD 89  	ld (Stack_2),sp
 755+ 9648 ED 7B DB 89  	ld sp,(Stack)
 756+ 964C
 757+ 964C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 964C
 759+ 964C 3E CD        	ld a,$cd
 760+ 964E 32 56 96     	ld (Imprime2),a
 761+ 9651 EB           	ex de,hl
 762+ 9652 22 57 96     	ld (Imprime2+1),hl
 763+ 9655 EB           	ex de,hl
 764+ 9656
 765+ 9656              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9656
 767+ 9656 00 00 00     Imprime2 db 0,0,0
 768+ 9659
 769+ 9659 3A E3 89     	ld a,(Numero_de_disparotes)
 770+ 965C 3D           	dec a
 771+ 965D 28 09        	jr z,1F
 772+ 965F 32 E3 89      	ld (Numero_de_disparotes),a
 773+ 9662
 774+ 9662 ED 7B DD 89  	ld sp,(Stack_2)
 775+ 9666 18 D8        	jr 2B
 776+ 9668
 777+ 9668 AF           1 xor a
 778+ 9669 32 DD 89     	ld (Stack_2),a
 779+ 966C C9           	ret
 780+ 966D
# file closed: Draw_XOR.asm
1240  966D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 966D              ;   índices de Rutinas de impresión.
   2+ 966D
   3+ 966D 7D 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 966F AA 96            defw Pinta_Amadeus_3x2
   5+ 9671
   6+ 9671 00 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9673 A0 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9675 54 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9677
  10+ 9677 2A 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9679 2E 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 967B E2 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 967D
  14+ 967D
  15+ 967D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 967D              ;
  17+ 967D              ;   12/12/22
  18+ 967D              ;
  19+ 967D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 967D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 967D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 967D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 967D              ;
  24+ 967D              ;   Modifica: DE y HL.
  25+ 967D
  26+ 967D ED 73 DB 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9681 FD F9        	ld sp,iy
  28+ 9683 06 10            ld b,16
  29+ 9685 D1           1 pop de
  30+ 9686 7B               ld a,e
  31+ 9687 AE               xor (hl)
  32+ 9688 77           	ld (hl),a
  33+ 9689 23           	inc hl
  34+ 968A 7A               ld a,d
  35+ 968B AE               xor (hl)
  36+ 968C 77           	ld (hl),a
  37+ 968D 2B           	dec hl
  38+ 968E 24           	inc h
  39+ 968F 7C               ld a,h
  40+ 9690 E6 07            and 7
  41+ 9692 20 0A            jr nz,2F
  42+ 9694 7D               ld a,l
  43+ 9695 C6 20            add a,$20
  44+ 9697 6F               ld l,a
  45+ 9698 38 04            jr c,2F
  46+ 969A 7C               ld a,h
  47+ 969B D6 08            sub 8
  48+ 969D 67               ld h,a
  49+ 969E 7C           2 ld a,h
  50+ 969F FE 58            cp $58
  51+ 96A1 28 02            jr z,3F
  52+ 96A3 10 E0            djnz 1B
  53+ 96A5 ED 7B DB 89  3 ld sp,(Stack)
  54+ 96A9 C9           	ret
  55+ 96AA
  56+ 96AA ED 73 DB 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96AE FD F9        	ld sp,iy
  58+ 96B0 06 08            ld b,8
  59+ 96B2 D1           1 pop de
  60+ 96B3 7B               ld a,e
  61+ 96B4 AE               xor (hl)
  62+ 96B5 77           	ld (hl),a
  63+ 96B6 23           	inc hl
  64+ 96B7 7A               ld a,d
  65+ 96B8 AE               xor (hl)
  66+ 96B9 77           	ld (hl),a
  67+ 96BA 23           	inc hl
  68+ 96BB D1           	pop de
  69+ 96BC 7B               ld a,e
  70+ 96BD AE               xor (hl)
  71+ 96BE 77           	ld (hl),a
  72+ 96BF 2B           	dec hl
  73+ 96C0 2B           	dec hl
  74+ 96C1 24           	inc h
  75+ 96C2 7C               ld a,h
  76+ 96C3 E6 07            and 7
  77+ 96C5 20 0A            jr nz,2F
  78+ 96C7 7D               ld a,l
  79+ 96C8 C6 20            add a,$20
  80+ 96CA 6F               ld l,a
  81+ 96CB 38 04            jr c,2F
  82+ 96CD 7C               ld a,h
  83+ 96CE D6 08            sub 8
  84+ 96D0 67               ld h,a
  85+ 96D1 7C           2 ld a,h
  86+ 96D2 FE 58            cp $58
  87+ 96D4 28 25            jr z,4F
  88+ 96D6 7A               ld a,d
  89+ 96D7 AE               xor (hl)
  90+ 96D8 77               ld (hl),a
  91+ 96D9 D1           	pop de
  92+ 96DA 23           	inc hl
  93+ 96DB 7B               ld a,e
  94+ 96DC AE               xor (hl)
  95+ 96DD 77           	ld (hl),a
  96+ 96DE 23           	inc hl
  97+ 96DF 7A               ld a,d
  98+ 96E0 AE               xor (hl)
  99+ 96E1 77           	ld (hl),a
 100+ 96E2 2B           	dec hl
 101+ 96E3 2B           	dec hl
 102+ 96E4 24           	inc h
 103+ 96E5 7C               ld a,h
 104+ 96E6 E6 07            and 7
 105+ 96E8 20 0A            jr nz,3F
 106+ 96EA 7D               ld a,l
 107+ 96EB C6 20            add a,$20
 108+ 96ED 6F               ld l,a
 109+ 96EE 38 04            jr c,3F
 110+ 96F0 7C               ld a,h
 111+ 96F1 D6 08            sub 8
 112+ 96F3 67               ld h,a
 113+ 96F4 7C           3 ld a,h
 114+ 96F5 FE 58            cp $58
 115+ 96F7 28 02            jr z,4F
 116+ 96F9 10 B7            djnz 1B
 117+ 96FB ED 7B DB 89  4 ld sp,(Stack)
 118+ 96FF C9           	ret
 119+ 9700
 120+ 9700              ; ---------------------------------------------------
 121+ 9700
 122+ 9700 ED 73 DB 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9704 FD F9        	ld sp,iy
 124+ 9706
 125+ 9706              ; >>>
 126+ 9706
 127+ 9706 06 10            ld b,16
 128+ 9708 D1           1 pop de
 129+ 9709 7A           	ld a,d
 130+ 970A AE           	xor (hl)
 131+ 970B 77           	ld (hl),a
 132+ 970C 24           	inc h
 133+ 970D 7C               ld a,h
 134+ 970E E6 07            and 7
 135+ 9710 20 0C            jr nz,2F
 136+ 9712 7D               ld a,l
 137+ 9713 C6 20            add a,$20
 138+ 9715 6F               ld l,a
 139+ 9716 38 06            jr c,2F
 140+ 9718 7C               ld a,h
 141+ 9719 D6 08            sub 8
 142+ 971B 67               ld h,a
 143+ 971C 18 00            jr 2F
 144+ 971E 7C           2 ld a,h
 145+ 971F FE 58            cp $58
 146+ 9721 28 02            jr z,3F
 147+ 9723 10 E3            djnz 1B
 148+ 9725 ED 7B DB 89  3 ld sp,(Stack)
 149+ 9729 C9           	ret
 150+ 972A
 151+ 972A ED 73 DB 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 972E FD F9        	ld sp,iy
 153+ 9730
 154+ 9730              ; >>>
 155+ 9730
 156+ 9730 06 10            ld b,16
 157+ 9732 D1           1 pop de
 158+ 9733 7B           	ld a,e
 159+ 9734 AE           	xor (hl)
 160+ 9735 77           	ld (hl),a
 161+ 9736 24           	inc h
 162+ 9737 7C               ld a,h
 163+ 9738 E6 07            and 7
 164+ 973A 20 0C            jr nz,2F
 165+ 973C 7D               ld a,l
 166+ 973D C6 20            add a,$20
 167+ 973F 6F               ld l,a
 168+ 9740 38 06            jr c,2F
 169+ 9742 7C               ld a,h
 170+ 9743 D6 08            sub 8
 171+ 9745 67               ld h,a
 172+ 9746 18 00            jr 2F
 173+ 9748 7C           2 ld a,h
 174+ 9749 FE 58            cp $58
 175+ 974B 28 02            jr z,3F
 176+ 974D 10 E3            djnz 1B
 177+ 974F ED 7B DB 89  3 ld sp,(Stack)
 178+ 9753 C9           	ret
 179+ 9754
 180+ 9754              ; ---------------------------------------------------
 181+ 9754
 182+ 9754 ED 73 DB 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9758 FD F9        	ld sp,iy
 184+ 975A 06 08            ld b,8
 185+ 975C D1           1 pop de
 186+ 975D 7A           	ld a,d
 187+ 975E AE           	xor (hl)
 188+ 975F 77           	ld (hl),a
 189+ 9760 23           	inc hl
 190+ 9761 D1           	pop de
 191+ 9762 7B           	ld a,e
 192+ 9763 AE           	xor (hl)
 193+ 9764 77           	ld (hl),a
 194+ 9765 2B           	dec hl
 195+ 9766 24            	inc h
 196+ 9767 7C               ld a,h
 197+ 9768 E6 07            and 7
 198+ 976A 20 0A            jr nz,2F
 199+ 976C 7D               ld a,l
 200+ 976D C6 20            add a,$20
 201+ 976F 6F               ld l,a
 202+ 9770 38 04            jr c,2F
 203+ 9772 7C               ld a,h
 204+ 9773 D6 08            sub 8
 205+ 9775 67               ld h,a
 206+ 9776 7C           2 ld a,h
 207+ 9777 FE 58            cp $58
 208+ 9779 28 20            jr z,4F
 209+ 977B D1               pop de
 210+ 977C 7B           	ld a,e
 211+ 977D AE           	xor (hl)
 212+ 977E 77           	ld (hl),a
 213+ 977F 23           	inc hl
 214+ 9780 7A           	ld a,d
 215+ 9781 AE           	xor (hl)
 216+ 9782 77           	ld (hl),a
 217+ 9783 2B           	dec hl
 218+ 9784 24           	inc h
 219+ 9785 7C               ld a,h
 220+ 9786 E6 07            and 7
 221+ 9788 20 0A            jr nz,3F
 222+ 978A 7D               ld a,l
 223+ 978B C6 20            add a,$20
 224+ 978D 6F               ld l,a
 225+ 978E 38 04            jr c,3F
 226+ 9790 7C               ld a,h
 227+ 9791 D6 08            sub 8
 228+ 9793 67               ld h,a
 229+ 9794 7C           3 ld a,h
 230+ 9795 FE 58            cp $58
 231+ 9797 28 02            jr z,4F
 232+ 9799 10 C1            djnz 1B
 233+ 979B ED 7B DB 89  4 ld sp,(Stack)
 234+ 979F C9           	ret
 235+ 97A0
 236+ 97A0 ED 73 DB 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97A4 FD F9        	ld sp,iy
 238+ 97A6 06 08            ld b,8
 239+ 97A8 D1           1 pop de
 240+ 97A9 D1           	pop de
 241+ 97AA 7B           	ld a,e
 242+ 97AB AE           	xor (hl)
 243+ 97AC 77           	ld (hl),a
 244+ 97AD 24            	inc h
 245+ 97AE 7C               ld a,h
 246+ 97AF E6 07            and 7
 247+ 97B1 20 0A            jr nz,2F
 248+ 97B3 7D               ld a,l
 249+ 97B4 C6 20            add a,$20
 250+ 97B6 6F               ld l,a
 251+ 97B7 38 04            jr c,2F
 252+ 97B9 7C               ld a,h
 253+ 97BA D6 08            sub 8
 254+ 97BC 67               ld h,a
 255+ 97BD 7C           2 ld a,h
 256+ 97BE FE 58            cp $58
 257+ 97C0 28 1B            jr z,4F
 258+ 97C2 D1               pop de
 259+ 97C3 7A           	ld a,d
 260+ 97C4 AE           	xor (hl)
 261+ 97C5 77           	ld (hl),a
 262+ 97C6 24           	inc h
 263+ 97C7 7C               ld a,h
 264+ 97C8 E6 07            and 7
 265+ 97CA 20 0A            jr nz,3F
 266+ 97CC 7D               ld a,l
 267+ 97CD C6 20            add a,$20
 268+ 97CF 6F               ld l,a
 269+ 97D0 38 04            jr c,3F
 270+ 97D2 7C               ld a,h
 271+ 97D3 D6 08            sub 8
 272+ 97D5 67               ld h,a
 273+ 97D6 7C           3 ld a,h
 274+ 97D7 FE 58            cp $58
 275+ 97D9 28 02            jr z,4F
 276+ 97DB 10 CB            djnz 1B
 277+ 97DD ED 7B DB 89  4 ld sp,(Stack)
 278+ 97E1 C9           	ret
 279+ 97E2
 280+ 97E2 ED 73 DB 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97E6 FD F9        	ld sp,iy
 282+ 97E8 06 08            ld b,8
 283+ 97EA D1           1 pop de
 284+ 97EB 7B           	ld a,e
 285+ 97EC AE           	xor (hl)
 286+ 97ED 77           	ld (hl),a
 287+ 97EE 23           	inc hl
 288+ 97EF 7A           	ld a,d
 289+ 97F0 AE           	xor (hl)
 290+ 97F1 77           	ld (hl),a
 291+ 97F2 2B           	dec hl
 292+ 97F3 24             	inc h
 293+ 97F4 7C               ld a,h
 294+ 97F5 E6 07            and 7
 295+ 97F7 20 0A            jr nz,2F
 296+ 97F9 7D               ld a,l
 297+ 97FA C6 20            add a,$20
 298+ 97FC 6F               ld l,a
 299+ 97FD 38 04            jr c,2F
 300+ 97FF 7C               ld a,h
 301+ 9800 D6 08            sub 8
 302+ 9802 67               ld h,a
 303+ 9803 7C           2 ld a,h
 304+ 9804 FE 58            cp $58
 305+ 9806 28 21            jr z,4F
 306+ 9808 D1               pop de
 307+ 9809 7A           	ld a,d
 308+ 980A AE           	xor (hl)
 309+ 980B 77           	ld (hl),a
 310+ 980C 23           	inc hl
 311+ 980D D1               pop de
 312+ 980E 7B           	ld a,e
 313+ 980F AE           	xor (hl)
 314+ 9810 77           	ld (hl),a
 315+ 9811 2B           	dec hl
 316+ 9812 24           	inc h
 317+ 9813 7C               ld a,h
 318+ 9814 E6 07            and 7
 319+ 9816 20 0A            jr nz,3F
 320+ 9818 7D               ld a,l
 321+ 9819 C6 20            add a,$20
 322+ 981B 6F               ld l,a
 323+ 981C 38 04            jr c,3F
 324+ 981E 7C               ld a,h
 325+ 981F D6 08            sub 8
 326+ 9821 67               ld h,a
 327+ 9822 7C           3 ld a,h
 328+ 9823 FE 58            cp $58
 329+ 9825 28 02            jr z,4F
 330+ 9827 10 C1            djnz 1B
 331+ 9829 ED 7B DB 89  4 ld sp,(Stack)
 332+ 982D C9           	ret
 333+ 982E
 334+ 982E ED 73 DB 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9832 FD F9        	ld sp,iy
 336+ 9834 06 08            ld b,8
 337+ 9836 D1           1 pop de
 338+ 9837 7B           	ld a,e
 339+ 9838 AE           	xor (hl)
 340+ 9839 77           	ld (hl),a
 341+ 983A 24            	inc h
 342+ 983B 7C               ld a,h
 343+ 983C E6 07            and 7
 344+ 983E 20 0A            jr nz,2F
 345+ 9840 7D               ld a,l
 346+ 9841 C6 20            add a,$20
 347+ 9843 6F               ld l,a
 348+ 9844 38 04            jr c,2F
 349+ 9846 7C               ld a,h
 350+ 9847 D6 08            sub 8
 351+ 9849 67               ld h,a
 352+ 984A 7C           2 ld a,h
 353+ 984B FE 58            cp $58
 354+ 984D 28 1C            jr z,4F
 355+ 984F D1               pop de
 356+ 9850 7A           	ld a,d
 357+ 9851 AE           	xor (hl)
 358+ 9852 77           	ld (hl),a
 359+ 9853 24           	inc h
 360+ 9854 7C               ld a,h
 361+ 9855 E6 07            and 7
 362+ 9857 20 0A            jr nz,3F
 363+ 9859 7D               ld a,l
 364+ 985A C6 20            add a,$20
 365+ 985C 6F               ld l,a
 366+ 985D 38 04            jr c,3F
 367+ 985F 7C               ld a,h
 368+ 9860 D6 08            sub 8
 369+ 9862 67               ld h,a
 370+ 9863 7C           3 ld a,h
 371+ 9864 FE 58            cp $58
 372+ 9866 28 03            jr z,4F
 373+ 9868 D1               pop de
 374+ 9869 10 CB            djnz 1B
 375+ 986B ED 7B DB 89  4 ld sp,(Stack)
 376+ 986F C9           	ret
 377+ 9870
 378+ 9870              ; ---------------------------------------------------
 379+ 9870              ;
 380+ 9870              ;   27/02/23
 381+ 9870              ;
 382+ 9870              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9870              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9870              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9870
 386+ 9870 ED 73 DB 89  Pinta_Disparo ld (Stack),sp
 387+ 9874 FD F9            ld sp,iy
 388+ 9876 06 02            ld b,2
 389+ 9878 D1           1 pop de
 390+ 9879 7B               ld a,e
 391+ 987A AE               xor (hl)
 392+ 987B 77               ld (hl),a
 393+ 987C 23               inc hl
 394+ 987D 7A               ld a,d
 395+ 987E AE               xor (hl)
 396+ 987F 77               ld (hl),a
 397+ 9880 2B               dec hl
 398+ 9881
 399+ 9881 24               inc h
 400+ 9882 7C               ld a,h
 401+ 9883 E6 07            and 7
 402+ 9885 20 0A            jr nz,2F
 403+ 9887 7D               ld a,l
 404+ 9888 C6 20            add a,$20
 405+ 988A 6F               ld l,a
 406+ 988B 38 04            jr c,2F
 407+ 988D 7C               ld a,h
 408+ 988E D6 08            sub 8
 409+ 9890 67               ld h,a
 410+ 9891 7C           2 ld a,h
 411+ 9892 FE 58            cp $58
 412+ 9894 28 02            jr z,3F
 413+ 9896
 414+ 9896 10 E0            djnz 1B
 415+ 9898 ED 7B DB 89  3 ld sp,(Stack)
 416+ 989C C9               ret
 417+ 989D
# file closed: Rutinas_de_impresion_sprites.asm
1241  989D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 989D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 989D              ;
   3+ 989D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 989D              ;
   5+ 989D              ; *****************************************************************************************************************************************************************************************
   6+ 989D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 989D
   8+ 989D 7C           calcula_tercio ld a,h
   9+ 989E E6 18        	and $18
  10+ 98A0 CB 2F        	sra a
  11+ 98A2 CB 2F        	sra a
  12+ 98A4 CB 2F        	sra a
  13+ 98A6 C9           	ret
  14+ 98A7
# file closed: calcula_tercio.asm
1242  98A7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98A7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98A7              ;
   3+ 98A7              ;
   4+ 98A7              ;	CLS.
   5+ 98A7              ;
   6+ 98A7              ;	Limpia la pantalla y define sus atributos.
   7+ 98A7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98A7              ;
   9+ 98A7              ;	COLORES: 0 ..... NEGRO
  10+ 98A7              ;    		 1 ..... AZUL
  11+ 98A7              ; 			 2 ..... ROJO
  12+ 98A7              ;			 3 ..... MAGENTA
  13+ 98A7              ; 			 4 ..... VERDE
  14+ 98A7              ; 			 5 ..... CIAN
  15+ 98A7              ;			 6 ..... AMARILLO
  16+ 98A7              ; 			 7 ..... BLANCO
  17+ 98A7              ;
  18+ 98A7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98A7              ;
  20+ 98A7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98A7
  22+ 98A7
  23+ 98A7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98AA 11 01 40     	LD DE,$4001
  25+ 98AD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98B0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98B2 ED B0        	LDIR
  28+ 98B4 01 FF 02     	LD BC,767
  29+ 98B7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98B8 ED B0        	LDIR
  31+ 98BA C9           	ret
  32+ 98BB
# file closed: Cls.asm
1243  98BB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98BB              ; ******************************************************************************************************************************************************************************************
   2+ 98BB              ;
   3+ 98BB              ;   20/05/23
   4+ 98BB              ;
   5+ 98BB              ;	Recompone_posicion_inicio
   6+ 98BB              ;
   7+ 98BB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98BB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98BB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98BB              ;	_ a una u otra rutina.
  11+ 98BB
  12+ 98BB              Recompone_posicion_inicio
  13+ 98BB
  14+ 98BB 2A 9E 89     	ld hl,(Posicion_inicio)
  15+ 98BE 7D           	ld a,l
  16+ 98BF E6 1F        	and $1f
  17+ 98C1 28 16        	jr z,1F
  18+ 98C3
  19+ 98C3 FE 1F        	cp $1f
  20+ 98C5 28 0D        	jr z,3F
  21+ 98C7
  22+ 98C7 21 C8 89     	ld hl,Ctrl_2
  23+ 98CA CB C6        	set 0,(hl)
  24+ 98CC 2A 90 89     	ld hl,(Puntero_objeto)
  25+ 98CF 22 CB 89     	ld (Repone_puntero_objeto),hl
  26+ 98D2 18 08        	jr 2F
  27+ 98D4
  28+ 98D4 CD 75 9A     3 call Mov_left
  29+ 98D7 18 03        	jr 2F
  30+ 98D9
  31+ 98D9 CD 57 99     1 call Mov_right
  32+ 98DC 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98DF 22 90 89     	ld (Puntero_objeto),hl
  34+ 98E2 C9           	ret
  35+ 98E3
  36+ 98E3              ; ******************************************************************************************************************************************************************************************
  37+ 98E3              ;
  38+ 98E3              ;   27/05/23
  39+ 98E3              ;
  40+ 98E3              ;	Mov_down
  41+ 98E3              ;
  42+ 98E3              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98E3              ;
  44+ 98E3              ;
  45+ 98E3              Mov_down
  46+ 98E3
  47+ 98E3 CD 45 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98E6              ;																	; _ repone (Puntero_objeto).
  49+ 98E6 21 BA 89     	ld hl,Ctrl_0
  50+ 98E9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98EB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98EB              ; 																	; _ en el caso de que no lo haya.
  53+ 98EB 3A A4 89     	ld a,(Vel_down)
  54+ 98EE 47           	ld b,a
  55+ 98EF 2A 8E 89         ld hl,(Posicion_actual)
  56+ 98F2 CD 9D 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98F5 E6 02        	and 2
  58+ 98F7 28 0F        	jr z,1F
  59+ 98F9
  60+ 98F9              ; Nos encontramos en el último tercio de pantalla.
  61+ 98F9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98F9
  63+ 98F9 7C           	ld a,h
  64+ 98FA FE 57        	cp $57
  65+ 98FC 20 0A        	jr nz,1F
  66+ 98FE 7D           	ld a,l
  67+ 98FF C6 20        	add $20
  68+ 9901 30 05        	jr nc,1F
  69+ 9903
  70+ 9903              ; ------------------------------
  71+ 9903 CD F3 9B     	call Reaparece_arriba
  72+ 9906              ;	call Reinicio
  73+ 9906              ; ------------------------------
  74+ 9906
  75+ 9906 18 08        	jr 3F
  76+ 9908 CD DD 95     1 call NextScan
  77+ 990B 22 8E 89     	ld (Posicion_actual),hl
  78+ 990E 10 E2            djnz 2B
  79+ 9910 CD 09 9C     3 call Genera_coordenadas
  80+ 9913 C9           	ret
  81+ 9914
  82+ 9914              ; ******************************************************************************************************************************************************************************************
  83+ 9914              ;
  84+ 9914              ;   27/05/23
  85+ 9914              ;
  86+ 9914              ;	Mov_up
  87+ 9914              ;
  88+ 9914              ; 	Mueve el Sprite hacia arriba.
  89+ 9914              ;
  90+ 9914              ;
  91+ 9914              Mov_up
  92+ 9914
  93+ 9914 CD 45 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9917              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9917 21 BA 89     	ld hl,Ctrl_0
  96+ 991A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 991C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 991C              ; 																		; _ en el caso de que no lo haya.
  99+ 991C 3A A3 89     	ld a,(Vel_up)
 100+ 991F 47           	ld b,a
 101+ 9920 2A 8E 89     	ld hl,(Posicion_actual)
 102+ 9923 CD 9D 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9926 A7           	and a
 104+ 9927 20 10        	jr nz,1F
 105+ 9929
 106+ 9929              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9929              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9929
 109+ 9929 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 992A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 992C 20 0B            jr nz,1F
 112+ 992E 7D               ld a,l
 113+ 992F D6 20            sub $20
 114+ 9931 30 06            jr nc,1F
 115+ 9933 25               dec h
 116+ 9934
 117+ 9934              ; -----------------------------
 118+ 9934 CD E3 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9937              ;	call Reinicio
 120+ 9937              ; -----------------------------
 121+ 9937
 122+ 9937 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9939 CD EC 95     1 call PreviousScan
 124+ 993C 22 8E 89     	ld (Posicion_actual),hl
 125+ 993F 10 E2            djnz 3B
 126+ 9941 CD 09 9C     2 call Genera_coordenadas
 127+ 9944 C9           	ret
 128+ 9945
 129+ 9945              ; -----------------------------
 130+ 9945              ;
 131+ 9945              ;	27/5/23
 132+ 9945              ;
 133+ 9945              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9945              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9945              ;
 136+ 9945              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9945              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9945              ;
 139+ 9945              ;	Modifica: A y (Puntero_objeto).
 140+ 9945
 141+ 9945 3A C8 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9948 CB 47        	bit 0,a
 143+ 994A C8           	ret z
 144+ 994B CB 87        	res 0,a
 145+ 994D 32 C8 89     	ld (Ctrl_2),a
 146+ 9950 2A CB 89     	ld hl,(Repone_puntero_objeto)
 147+ 9953 22 90 89     	ld (Puntero_objeto),hl
 148+ 9956 C9           	ret
 149+ 9957
 150+ 9957              ; ******************************************************************************************************************************************************************************************
 151+ 9957              ;
 152+ 9957              ;	19/10/22
 153+ 9957              ;
 154+ 9957              ;	Mov_right.
 155+ 9957              ;
 156+ 9957              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9957              ;
 158+ 9957
 159+ 9957 21 BA 89     Mov_right ld hl,Ctrl_0
 160+ 995A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 995C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 995C              ; 																	; _ en el caso de que no lo haya.
 163+ 995C 3A BA 89     	ld a,(Ctrl_0)
 164+ 995F CB 77        	bit 6,a
 165+ 9961 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9963
 167+ 9963 CD 91 9B     	call Stop_Amadeus_right
 168+ 9966 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9967 18 4D        	jr 8F
 170+ 9969
 171+ 9969 3A 92 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 996C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 996E 20 46        	jr nz,8F
 174+ 9970
 175+ 9970 3A 94 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9973 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9974 28 40        	jr z,8F
 178+ 9976
 179+ 9976              ; ---------- ---------- ----------
 180+ 9976              ;
 181+ 9976              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 9976
 183+ 9976 3A A2 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 9979 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 997B 28 11        	jr z,1F
 186+ 997D 38 06        	jr c,6F
 187+ 997F FE 04        	cp 4
 188+ 9981 28 14        	jr z,7F
 189+ 9983 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 9985
 191+ 9985              ; ---------- ---------- ----------
 192+ 9985              ;
 193+ 9985              ; Perfiles de velocidad
 194+ 9985              ;
 195+ 9985
 196+ 9985 3A 94 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 9988 FE FE        	cp $fe
 198+ 998A 20 2A        	jr nz,8F
 199+ 998C 18 10        	jr 3F
 200+ 998E 3A 94 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 9991 FE FD        	cp $fd
 202+ 9993 20 21        	jr nz,8F
 203+ 9995 18 07        	jr 3F
 204+ 9997 3A 94 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 999A FE FB        	cp $fb
 206+ 999C 20 18        	jr nz,8F
 207+ 999E
 208+ 999E              ; ---------- ---------- ----------
 209+ 999E
 210+ 999E              3
 211+ 999E CD D1 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99A1              ;	call Reinicio
 213+ 99A1
 214+ 99A1              ; ---------- ---------- ----------
 215+ 99A1              ;
 216+ 99A1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99A1
 218+ 99A1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99A3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99A4 CD BD 99     	call DESPLZ_DER
 221+ 99A7 C1           	pop bc
 222+ 99A8 10 F9        	djnz 5B
 223+ 99AA 2A 8E 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99AD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99AE 22 8E 89     	ld (Posicion_actual),hl
 226+ 99B1 CD 09 9C     	call Genera_coordenadas
 227+ 99B4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99B6
 229+ 99B6              ; ---------- ---------- ----------
 230+ 99B6
 231+ 99B6 2A 8E 89     8 ld hl,(Posicion_actual)
 232+ 99B9 CD BD 99     	call DESPLZ_DER
 233+ 99BC C9           2 ret
 234+ 99BD
 235+ 99BD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99BD              ;
 237+ 99BD              ;	22/9/22
 238+ 99BD              ;
 239+ 99BD
 240+ 99BD CD CC 99     DESPLZ_DER call Desplaza_derecha
 241+ 99C0 CD 18 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99C3 CD 41 9A         call Ciclo_completo
 243+ 99C6 21 BA 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99C9 CB FE        	set 7,(hl)
 245+ 99CB C9           	ret
 246+ 99CC
 247+ 99CC              ; ******************************************************************************************************************************************************************************************
 248+ 99CC              ;	15/02/23
 249+ 99CC              ;
 250+ 99CC
 251+ 99CC 3A A2 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99CF 47           	ld b,a
 253+ 99D0 2A 9A 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99D3 23           1 inc hl
 255+ 99D4 23           	inc hl
 256+ 99D5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99D7 22 9A 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99DA CD F2 8C     	call Extrae_address
 259+ 99DD 22 90 89     	ld (Puntero_objeto),hl
 260+ 99E0
 261+ 99E0              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99E0
 263+ 99E0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99E0              ; Cuántos movimientos hemos hecho ??
 265+ 99E0              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99E0
 267+ 99E0 2A 96 89     7 ld hl,(Indice_Sprite_der)
 268+ 99E3 EB           	ex de,hl
 269+ 99E4 A7           	and a
 270+ 99E5 ED 52        	sbc hl,de
 271+ 99E7 CB 3D        	srl l
 272+ 99E9 3E 08        6 ld a,8
 273+ 99EB 95           	sub l
 274+ 99EC 30 1E        	jr nc,3F
 275+ 99EE
 276+ 99EE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 99EE              ; B="0".
 278+ 99EE
 279+ 99EE 04           4 inc b
 280+ 99EF 3C           	inc a
 281+ 99F0 20 FC        	jr nz,4B
 282+ 99F2 78           	ld a,b
 283+ 99F3 08           	ex af,af
 284+ 99F4 2A 96 89     	ld hl,(Indice_Sprite_der)
 285+ 99F7 23           5 inc hl
 286+ 99F8 23           	inc hl
 287+ 99F9 10 FC        	djnz 5B
 288+ 99FB 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 289+ 99FE CD F2 8C     	call Extrae_address
 290+ 9A01 22 90 89     	ld (Puntero_objeto),hl
 291+ 9A04
 292+ 9A04              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A04              ; _(Posicion_actual).
 294+ 9A04
 295+ 9A04 21 8E 89     	ld hl,Posicion_actual
 296+ 9A07 34           	inc (hl)
 297+ 9A08 08               ex af,af
 298+ 9A09 6F           	ld l,a
 299+ 9A0A 18 DD        	jr 6B
 300+ 9A0C
 301+ 9A0C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A0C
 303+ 9A0C 47           3 ld b,a
 304+ 9A0D 2A 98 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A10 23           2 inc hl
 306+ 9A11 23           	inc hl
 307+ 9A12 10 FC        	djnz 2B
 308+ 9A14 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A17 C9           8 ret
 310+ 9A18
 311+ 9A18              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A18              ;
 313+ 9A18              ;	24/7/22
 314+ 9A18              ;
 315+ 9A18              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A18              ;
 317+ 9A18              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A18              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A18              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A18
 321+ 9A18 3A 94 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A1B A7           	and a
 323+ 9A1C 20 1F        	jr nz,1F
 324+ 9A1E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A20 32 94 89         ld (CTRL_DESPLZ),a
 326+ 9A23
 327+ 9A23 21 8D 89     	ld hl,Columns
 328+ 9A26 34           	inc (hl)
 329+ 9A27 3A A0 89     	ld a,(Cuad_objeto)
 330+ 9A2A E6 01        	and 1
 331+ 9A2C 28 0F        	jr z,1F
 332+ 9A2E 2A 8E 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A31 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A32 22 8E 89     	ld (Posicion_actual),hl
 335+ 9A35 CD 09 9C     	call Genera_coordenadas
 336+ 9A38 CD 9D 9B     	call Inc_CTRL_DESPLZ
 337+ 9A3B 18 03        	jr 2F
 338+ 9A3D CD 9D 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A40 C9           2 ret
 340+ 9A41
 341+ 9A41              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A41              ;
 343+ 9A41              ;	24/7/22
 344+ 9A41              ;
 345+ 9A41              ;	Ciclo_completo.
 346+ 9A41              ;
 347+ 9A41              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A41              ;
 349+ 9A41              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A41              ; 	Decrementamos (Columns).
 351+ 9A41              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A41              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A41
 354+ 9A41
 355+ 9A41 3A 94 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A44 FE FF        	cp $ff
 357+ 9A46 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A48 E6 F0        	and $f0
 359+ 9A4A 20 28        	jr nz,3F
 360+ 9A4C
 361+ 9A4C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A4C
 363+ 9A4C 3A 94 89     	ld a,(CTRL_DESPLZ)
 364+ 9A4F 47           	ld b,a
 365+ 9A50 3E F8        	ld a,$f8
 366+ 9A52 80           	add b
 367+ 9A53 32 94 89     	ld (CTRL_DESPLZ),a
 368+ 9A56 18 1C        	jr 3F
 369+ 9A58 21 8D 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A5B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A5C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A5D 32 94 89     	ld (CTRL_DESPLZ),a
 373+ 9A60 3A A0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A63 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A65 20 0A        	jr nz,2F
 376+ 9A67 2A 8E 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A6A 23           	inc hl
 378+ 9A6B 22 8E 89     	ld (Posicion_actual),hl
 379+ 9A6E CD 09 9C     	call Genera_coordenadas
 380+ 9A71
 381+ 9A71              ; Inicia el puntero de Sprite.
 382+ 9A71
 383+ 9A71 CD 09 8D     2 call Inicia_puntero_objeto_der
 384+ 9A74 C9           3 ret
 385+ 9A75
 386+ 9A75              ; ******************************************************************************************************************************************************************************************
 387+ 9A75              ;
 388+ 9A75              ;	15/02/23
 389+ 9A75              ;
 390+ 9A75              ;	Mov_left.
 391+ 9A75              ;
 392+ 9A75              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A75              ;
 394+ 9A75 21 BA 89     Mov_left ld hl,Ctrl_0
 395+ 9A78 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A7A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A7A              ; 																	; _ en el caso de que no lo haya.
 398+ 9A7A 3A BA 89     	ld a,(Ctrl_0)
 399+ 9A7D CB 77        	bit 6,a
 400+ 9A7F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A81
 402+ 9A81 CD 97 9B     	call Stop_Amadeus_left
 403+ 9A84 C8           	ret z
 404+ 9A85 20 4A        	jr nz,8F
 405+ 9A87
 406+ 9A87 3A 92 89     11 ld a,(Coordenada_X)
 407+ 9A8A A7           	and a
 408+ 9A8B 20 44        	jr nz,8F
 409+ 9A8D
 410+ 9A8D 3A 94 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9A90 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9A91 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9A93
 414+ 9A93              ; ---------- ---------- ----------
 415+ 9A93
 416+ 9A93 3A A1 89     	ld a,(Vel_left)
 417+ 9A96 FE 02        	cp 2
 418+ 9A98 28 0F        	jr z,1F
 419+ 9A9A 38 04        	jr c,6F
 420+ 9A9C FE 04        	cp 4
 421+ 9A9E 28 12        	jr z,7F
 422+ 9AA0
 423+ 9AA0              ; ---------- ---------- ----------
 424+ 9AA0
 425+ 9AA0 3A 94 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AA3 FE F8        	cp $f8
 427+ 9AA5 20 2A        	jr nz,8F
 428+ 9AA7 18 10        	jr 4F
 429+ 9AA9 3A 94 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AAC FE F9        	cp $f9
 431+ 9AAE 20 21        	jr nz,8F
 432+ 9AB0 18 07        	jr 4F
 433+ 9AB2 3A 94 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AB5 FE FB        	cp $fb
 435+ 9AB7 20 18        	jr nz,8F
 436+ 9AB9
 437+ 9AB9              ; ---------- ---------- ----------
 438+ 9AB9
 439+ 9AB9              4
 440+ 9AB9 CD BF 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9ABC              ;	call Reinicio
 442+ 9ABC
 443+ 9ABC              ; ---------- ---------- ----------
 444+ 9ABC
 445+ 9ABC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9ABE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9ABF
 448+ 9ABF              ;	ld hl,(Indice_Sprite_izq)
 449+ 9ABF              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9ABF
 451+ 9ABF CD D8 9A     	call DESPLZ_IZQ
 452+ 9AC2 C1           	pop bc
 453+ 9AC3 10 F9        	djnz 5B
 454+ 9AC5 2A 8E 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9AC8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9AC9 22 8E 89     	ld (Posicion_actual),hl
 457+ 9ACC CD 09 9C     	call Genera_coordenadas
 458+ 9ACF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AD1
 460+ 9AD1              ; ---------- ---------- ----------
 461+ 9AD1
 462+ 9AD1              ; Movemos, no hay recolocación.
 463+ 9AD1
 464+ 9AD1 2A 8E 89     8 ld hl,(Posicion_actual)
 465+ 9AD4 CD D8 9A     	call DESPLZ_IZQ
 466+ 9AD7 C9           2 ret
 467+ 9AD8
 468+ 9AD8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9AD8              ;
 470+ 9AD8              ;	22/9/22
 471+ 9AD8
 472+ 9AD8              DESPLZ_IZQ
 473+ 9AD8
 474+ 9AD8 CD E7 9A     	call Desplaza_izquierda
 475+ 9ADB CD 33 9B         call modifica_parametros_1er_DESPLZ
 476+ 9ADE CD 5B 9B     	call Ciclo_completo_2
 477+ 9AE1 21 BA 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9AE4 CB BE        	res 7,(hl)
 479+ 9AE6 C9           	ret
 480+ 9AE7
 481+ 9AE7              Desplaza_izquierda
 482+ 9AE7
 483+ 9AE7 3A A1 89     	ld a,(Vel_left)
 484+ 9AEA 47           	ld b,a
 485+ 9AEB 2A 9C 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9AEE 23           1 inc hl
 487+ 9AEF 23           	inc hl
 488+ 9AF0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9AF2 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9AF5 CD F2 8C     	call Extrae_address
 491+ 9AF8 22 90 89     	ld (Puntero_objeto),hl
 492+ 9AFB
 493+ 9AFB              ; Modifica (Puntero_DESPLZ_der).
 494+ 9AFB
 495+ 9AFB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9AFB              ; Cuántos movimientos hemos hecho ??
 497+ 9AFB              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9AFB
 499+ 9AFB 2A 98 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9AFE EB           	ex de,hl
 501+ 9AFF A7           	and a
 502+ 9B00 ED 52        	sbc hl,de
 503+ 9B02 CB 3D        	srl l
 504+ 9B04 3E 08        6 ld a,8
 505+ 9B06 95           	sub l
 506+ 9B07 30 1E        	jr nc,3F
 507+ 9B09
 508+ 9B09              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B09              ; B="0".
 510+ 9B09
 511+ 9B09 04           4 inc b
 512+ 9B0A 3C           	inc a
 513+ 9B0B 20 FC        	jr nz,4B
 514+ 9B0D 78           	ld a,b
 515+ 9B0E 08           	ex af,af
 516+ 9B0F 2A 98 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B12 23           5 inc hl
 518+ 9B13 23           	inc hl
 519+ 9B14 10 FC        	djnz 5B
 520+ 9B16 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B19 CD F2 8C     	call Extrae_address
 522+ 9B1C 22 90 89     	ld (Puntero_objeto),hl
 523+ 9B1F
 524+ 9B1F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B1F              ; _(Posicion_actual).
 526+ 9B1F
 527+ 9B1F 21 8E 89     	ld hl,Posicion_actual
 528+ 9B22 35           	dec (hl)
 529+ 9B23 08           	ex af,af
 530+ 9B24 6F           	ld l,a
 531+ 9B25 18 DD        	jr 6B
 532+ 9B27
 533+ 9B27              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B27
 535+ 9B27 47           3 ld b,a
 536+ 9B28 2A 96 89     	ld hl,(Indice_Sprite_der)
 537+ 9B2B 23           2 inc hl
 538+ 9B2C 23           	inc hl
 539+ 9B2D 10 FC        	djnz 2B
 540+ 9B2F 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B32 C9           8 ret
 542+ 9B33
 543+ 9B33              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B33              ;
 545+ 9B33              ;	modifica_parametros_1er_DESPLZ
 546+ 9B33              ;
 547+ 9B33              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B33              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B33              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B33
 551+ 9B33 3A 94 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B36 A7           	and a
 553+ 9B37 20 1E        	jr nz,1F
 554+ 9B39 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B3A 32 94 89         ld (CTRL_DESPLZ),a
 556+ 9B3D 21 8D 89     	ld hl,Columns
 557+ 9B40 34           	inc (hl)
 558+ 9B41 3A A0 89     	ld a,(Cuad_objeto)
 559+ 9B44 E6 01        	and 1
 560+ 9B46 20 0F        	jr nz,1F
 561+ 9B48 2A 8E 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B4B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B4C 22 8E 89     	ld (Posicion_actual),hl
 564+ 9B4F CD 09 9C     	call Genera_coordenadas
 565+ 9B52 CD AE 9B     	call Dec_CTRL_DESPLZ
 566+ 9B55 18 03        	jr 2F
 567+ 9B57 CD AE 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B5A C9           2 ret
 569+ 9B5B
 570+ 9B5B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B5B
 572+ 9B5B 3A 94 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B5E FE F7        	cp $f7
 574+ 9B60 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B62 30 2C        	jr nc,3F
 576+ 9B64
 577+ 9B64              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B64
 579+ 9B64 06 00        	ld b,0
 580+ 9B66 04           4 inc b
 581+ 9B67 3C           	inc a
 582+ 9B68 FE F7        	cp $f7
 583+ 9B6A 20 FA        	jr nz,4B
 584+ 9B6C 3E FF        	ld a,$ff
 585+ 9B6E 90           	sub b
 586+ 9B6F 32 94 89     	ld (CTRL_DESPLZ),a
 587+ 9B72 18 1C        	jr 3F
 588+ 9B74
 589+ 9B74              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B74
 591+ 9B74 21 8D 89     1 ld hl,Columns
 592+ 9B77 35           	dec (hl)
 593+ 9B78 AF           	xor a
 594+ 9B79 32 94 89     	ld (CTRL_DESPLZ),a
 595+ 9B7C 3A A0 89     	ld a,(Cuad_objeto)
 596+ 9B7F E6 01        	and 1
 597+ 9B81 28 0A        	jr z,2F
 598+ 9B83 2A 8E 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9B86 2B           	dec hl
 600+ 9B87 22 8E 89     	ld (Posicion_actual),hl
 601+ 9B8A CD 09 9C     	call Genera_coordenadas
 602+ 9B8D
 603+ 9B8D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9B8D
 605+ 9B8D CD 1C 8D     2 call Inicia_puntero_objeto_izq
 606+ 9B90 C9           3 ret
 607+ 9B91
 608+ 9B91              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9B91              ;
 610+ 9B91              ;	19/10/22
 611+ 9B91              ;
 612+ 9B91              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9B91              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9B91
 615+ 9B91 3A 92 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9B94 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9B96 C9           	ret
 618+ 9B97
 619+ 9B97              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9B97              ;
 621+ 9B97              ;	19/10/22
 622+ 9B97              ;
 623+ 9B97              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9B97              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9B97
 626+ 9B97 3A 92 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9B9A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9B9C C9           	ret
 629+ 9B9D
 630+ 9B9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9B9D              ;
 632+ 9B9D              ;	24/7/22
 633+ 9B9D              ;
 634+ 9B9D              ;	Inc_CTRL_DESPLZ
 635+ 9B9D              ;
 636+ 9B9D              ;
 637+ 9B9D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9B9D
 639+ 9B9D 21 94 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BA0 3A A2 89     	ld a,(Vel_right)
 641+ 9BA3 A7           	and a
 642+ 9BA4 28 06        	jr z,1F
 643+ 9BA6 47           	ld b,a
 644+ 9BA7 34           3 inc (hl)
 645+ 9BA8 10 FD        	djnz 3B
 646+ 9BAA 18 01        	jr 2F
 647+ 9BAC 34           1 inc (hl)
 648+ 9BAD C9           2 ret
 649+ 9BAE
 650+ 9BAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BAE              ;
 652+ 9BAE              ;	5/2/23
 653+ 9BAE              ;
 654+ 9BAE              ;	Dec_CTRL_DESPLZ
 655+ 9BAE              ;
 656+ 9BAE              ;
 657+ 9BAE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BAE
 659+ 9BAE 21 94 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BB1 3A A1 89     	ld a,(Vel_left)
 661+ 9BB4 A7           	and a
 662+ 9BB5 28 06        	jr z,1F
 663+ 9BB7 47           	ld b,a
 664+ 9BB8 35           3 dec (hl)
 665+ 9BB9 10 FD        	djnz 3B
 666+ 9BBB 18 01        	jr 2F
 667+ 9BBD 35           1 dec (hl)
 668+ 9BBE C9           2 ret
 669+ 9BBF
 670+ 9BBF              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BBF
 672+ 9BBF 2A 8E 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BC2 01 1F 00     	ld bc,31
 674+ 9BC5 A7           	and a
 675+ 9BC6 ED 4A        	adc hl,bc
 676+ 9BC8 22 8E 89     	ld (Posicion_actual),hl
 677+ 9BCB 21 BA 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BCE CB C6        	set 0,(hl)
 679+ 9BD0 C9           	ret
 680+ 9BD1
 681+ 9BD1              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BD1
 683+ 9BD1 2A 8E 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BD4 01 1F 00     	ld bc,31
 685+ 9BD7 A7           	and a
 686+ 9BD8 ED 42        	sbc hl,bc
 687+ 9BDA 22 8E 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BDD 21 BA 89     	ld hl,Ctrl_0
 689+ 9BE0 CB CE        	set 1,(hl)
 690+ 9BE2 C9           	ret
 691+ 9BE3
 692+ 9BE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9BE3
 694+ 9BE3 24           Reaparece_abajo inc h
 695+ 9BE4 01 E0 17     	ld bc,$17e0
 696+ 9BE7 A7           	and a
 697+ 9BE8 ED 4A        	adc hl,bc
 698+ 9BEA 22 8E 89     	ld (Posicion_actual),hl
 699+ 9BED 21 BA 89     	ld hl,Ctrl_0
 700+ 9BF0 CB D6        	set 2,(hl)
 701+ 9BF2 C9           	ret
 702+ 9BF3
 703+ 9BF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9BF3
 705+ 9BF3 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9BF6 A7           	and a
 707+ 9BF7 ED 42        	sbc hl,bc
 708+ 9BF9 22 8E 89     	ld (Posicion_actual),hl
 709+ 9BFC 21 BA 89     	ld hl,Ctrl_0
 710+ 9BFF CB DE        	set 3,(hl)
 711+ 9C01 C9           	ret
 712+ 9C02
 713+ 9C02              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C02
 715+ 9C02 2A 9E 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C05 22 8E 89     	ld (Posicion_actual),hl
 717+ 9C08 C9           	ret
# file closed: Direcciones.asm
1244  9C09              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C09              ; ------------------------------------------------------------------------
   2+ 9C09              ;
   3+ 9C09              ;	02/04/23
   4+ 9C09              ;
   5+ 9C09              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C09              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C09              ;
   8+ 9C09              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C09              ;
  10+ 9C09              ;	Modifica: A,BC y DE.
  11+ 9C09
  12+ 9C09 C5           Genera_coordenadas push bc
  13+ 9C0A E5           	push hl
  14+ 9C0B D5           	push de
  15+ 9C0C
  16+ 9C0C 2A 8E 89     	ld hl,(Posicion_actual)
  17+ 9C0F
  18+ 9C0F 7D           	ld a,l
  19+ 9C10 E6 1F        	and $1f
  20+ 9C12 32 92 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C15
  22+ 9C15 CD 9D 98     	call calcula_tercio
  23+ 9C18 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C19
  25+ 9C19 1E 00        	ld e,0
  26+ 9C1B 7D           	ld a,l
  27+ 9C1C E6 E0        	and $e0
  28+ 9C1E 28 01        	jr z,1F
  29+ 9C20 04           	inc b
  30+ 9C21
  31+ 9C21 04           1 inc b
  32+ 9C22 05           	dec b
  33+ 9C23 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C25              ;														; _ , salimos.
  35+ 9C25 1C           3 inc e
  36+ 9C26 D6 20        	sub 32
  37+ 9C28 20 FB        	jr nz,3B
  38+ 9C2A 10 F5        	djnz 1B
  39+ 9C2C
  40+ 9C2C 7B           2 ld a,e
  41+ 9C2D 32 93 89     	ld (Coordenada_y),a
  42+ 9C30
  43+ 9C30 D1           	pop de
  44+ 9C31 E1           	pop hl
  45+ 9C32 C1           	pop bc
  46+ 9C33
  47+ 9C33 C9           	ret
  48+ 9C34
  49+ 9C34              ; ------------------------------------------------------------------------
  50+ 9C34              ;	28/05/23
  51+ 9C34              ;
  52+ 9C34              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C34              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C34              ;
  55+ 9C34              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C34              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C34              ;
  58+ 9C34              ;		DE="$120d"
  59+ 9C34              ;
  60+ 9C34              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C34              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C34              ;
  63+ 9C34              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C34
  65+ 9C34              ;	Modifica: A,BC y DE.
  66+ 9C34
  67+ 9C34
  68+ 9C34              Genera_coordenadas_disparo
  69+ 9C34
  70+ 9C34              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C34
  72+ 9C34 7D           	ld a,l
  73+ 9C35 E6 1F        	and $1f
  74+ 9C37 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C38 CD 9D 98     	call calcula_tercio
  76+ 9C3B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C3C 1E 00        	ld e,0
  78+ 9C3E 7D           	ld a,l
  79+ 9C3F E6 E0        	and $e0
  80+ 9C41 28 01        	jr z,1F
  81+ 9C43 04           	inc b
  82+ 9C44 1C           1 inc e
  83+ 9C45 D6 20        	sub 32
  84+ 9C47 20 FB        	jr nz,1B
  85+ 9C49 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C4B C9           	ret
  87+ 9C4C
# file closed: Genera_coordenadas.asm
1245  9C4C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C4C
   2+ 9C4C
   3+ 9C4C              ;   11/8/22
   4+ 9C4C              ;
   5+ 9C4C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C4C              ;
   7+ 9C4C              ;   Mov_obj.asm
   8+ 9C4C              ;
   9+ 9C4C              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C4C              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C4C              ;
  12+ 9C4C              ;   Codificación:
  13+ 9C4C              ;
  14+ 9C4C              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C4C
  16+ 9C4C              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C4C
  18+ 9C4C 02 40 00     Arriba db 2,%01000000,0
  19+ 9C4F 02 80 00     Abajo db 2,%10000000,0
  20+ 9C52 02 20 00     Derecha db 2,%00100000,0
  21+ 9C55 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C58 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C5C 60 42 60 40
  22+ 9C60 63
  23+ 9C61 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C65 22 A3 80 A0
  24+ 9C69 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C6D 84 A0 83 A0
  25+ 9C71 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C75 80 A3 22 A0
  26+ 9C79 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C7D 40 60 42 60
  27+ 9C81 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9C85
  29+ 9C85 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9C89 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9C8D 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9C91 84 00
  32+ 9C93 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9C97 84 00
  33+ 9C99 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9C9D 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CA1 1F 1F 1F 1F
  35+ 9CA5 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CA9 1F 1F 1F 1F
  35+ 9CAD 1F
  36+ 9CAE 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CB2 2F 2F 2F 2F
  36+ 9CB6 2F 2F
  37+ 9CB8 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CBC 2F 2F 00
  38+ 9CBF
  39+ 9CBF              ; ----- ----- ----- ----- -----
  40+ 9CBF
  41+ 9CBF 9D 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CC1 99 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CC3 55 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CC5 52 9C        Indice_mov_Derecha defw Derecha
  45+ 9CC7 4F 9C        Indice_mov_Abajo defw Abajo
  46+ 9CC9 4C 9C        Indice_mov_Arriba defw Arriba
  47+ 9CCB 89 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CCD 8D 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CCF 85 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CD1 93 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CD3 58 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CD5              ; ----- ----- ----- ----- -----
  53+ 9CD5
  54+ 9CD5 3A C1 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CD8 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CD9 28 02            jr z,1F
  57+ 9CDB 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CDD 3A C2 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CE0 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9CE2 32 C2 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9CE5              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9CE5 2A BF 89         ld hl,(Puntero_mov)
  63+ 9CE8 7E               ld a,(hl)
  64+ 9CE9 32 C1 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9CEC 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9CED 22 BF 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9CF0
  68+ 9CF0 3A C3 89     Decoder ld a,(Repetimos_db)
  69+ 9CF3 A7               and a
  70+ 9CF4 20 0C            jr nz,12F
  71+ 9CF6 2A BF 89         ld hl,(Puntero_mov)
  72+ 9CF9 7E               ld a,(hl)
  73+ 9CFA A7               and a
  74+ 9CFB 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9CFD E6 0F            and $0f
  76+ 9CFF 32 C3 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D02              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D02 2A BF 89     12 ld hl,(Puntero_mov)
  79+ 9D05 CB 7E            bit 7,(hl)
  80+ 9D07 28 03            jr z,2F
  81+ 9D09 CD E3 98         call Mov_down
  82+ 9D0C 2A BF 89     2 ld hl, (Puntero_mov)
  83+ 9D0F CB 76            bit 6,(hl)
  84+ 9D11 28 03            jr z,3F
  85+ 9D13 CD 14 99         call Mov_up
  86+ 9D16 2A BF 89     3 ld hl, (Puntero_mov)
  87+ 9D19 CB 6E            bit 5,(hl)
  88+ 9D1B 28 03            jr z,4F
  89+ 9D1D CD 57 99         call Mov_right
  90+ 9D20 2A BF 89     4 ld hl, (Puntero_mov)
  91+ 9D23 CB 66            bit 4,(hl)
  92+ 9D25 28 03            jr z,5F
  93+ 9D27 CD 75 9A         call Mov_left
  94+ 9D2A
  95+ 9D2A              ; ---------- --------- --------- ---------- ----------
  96+ 9D2A
  97+ 9D2A 3A C3 89     5 ld a,(Repetimos_db)
  98+ 9D2D A7               and a
  99+ 9D2E 28 07            jr z,6F
 100+ 9D30 3D               dec a
 101+ 9D31 32 C3 89         ld (Repetimos_db),a
 102+ 9D34 28 01            jr z,6f
 103+ 9D36 C9           11 ret
 104+ 9D37 21 C1 89     6 ld hl,Contador_db_mov
 105+ 9D3A 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D3B 2A BF 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D3E 23               inc hl
 108+ 9D3F 22 BF 89         ld (Puntero_mov),hl
 109+ 9D42 18 F2            jr 11B
 110+ 9D44 2A BD 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D47 3A C2 89         ld a,(Incrementa_puntero)
 112+ 9D4A 47               ld b,a
 113+ 9D4B 23           8 inc hl
 114+ 9D4C 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D4E 5E               ld e,(hl)
 116+ 9D4F 23               inc hl
 117+ 9D50 56               ld d,(hl)
 118+ 9D51 EB               ex de,hl
 119+ 9D52 22 BF 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D55 18 DF            jr 11B
 121+ 9D57
 122+ 9D57              ; ---------- --------- --------- ---------- ----------
 123+ 9D57              ;
 124+ 9D57              ;   11/8/22
 125+ 9D57              ;
 126+ 9D57              ;   Prepara_Puntero_mov
 127+ 9D57
 128+ 9D57 E5           Prepara_Puntero_mov push hl
 129+ 9D58 D5               push de
 130+ 9D59 2A BD 89         ld hl,(Puntero_indice_mov)
 131+ 9D5C 5E               ld e,(hl)
 132+ 9D5D 23               inc hl
 133+ 9D5E 56               ld d,(hl)
 134+ 9D5F EB               ex de,hl
 135+ 9D60 22 BF 89         ld (Puntero_mov),hl
 136+ 9D63 D1               pop de
 137+ 9D64 E1               pop hl
 138+ 9D65 C9               ret
 139+ 9D66
 140+ 9D66              ; ---------- --------- --------- ---------- ----------
 141+ 9D66              ;
 142+ 9D66              ;   11/8/22
 143+ 9D66              ;
 144+ 9D66              ;   Reinicia_el_movimiento
 145+ 9D66
 146+ 9D66 CD 57 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D69 AF               xor a
 148+ 9D6A 32 C1 89         ld (Contador_db_mov),a
 149+ 9D6D 32 C2 89         ld (Incrementa_puntero),a
 150+ 9D70 C3 D5 9C         jp Movimiento
 151+ 9D73 C9               ret
 152+ 9D74              ; ---------- --------- --------- ---------- ----------
 153+ 9D74
 154+ 9D74
 155+ 9D74
 156+ 9D74
 157+ 9D74
 158+ 9D74
 159+ 9D74
 160+ 9D74
 161+ 9D74
 162+ 9D74
 163+ 9D74
 164+ 9D74
 165+ 9D74
 166+ 9D74
 167+ 9D74
 168+ 9D74
 169+ 9D74
 170+ 9D74
# file closed: Patrones_de_mov.asm
1246  9D74              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D74              ;
   3+ 9D74              ;	3/1/23
   4+ 9D74              ;
   5+ 9D74              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D74
   7+ 9D74              ;	ADC HL,SP	LD (addr),SP
   8+ 9D74              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D74              ;	ADD IX,SP	LD SP,nn
  10+ 9D74              ; 	ADD IY,SP	LD SP,HL
  11+ 9D74              ;				LD SP,IX
  12+ 9D74              ;	DEC SP		LD SP,IY
  13+ 9D74
  14+ 9D74              ;	EX (SP),HL
  15+ 9D74              ;	EX (SP),IX
  16+ 9D74              ;	EX (SP),IY
  17+ 9D74
  18+ 9D74              ;	INC SP
  19+ 9D74
  20+ 9D74
  21+ 9D74                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 DB 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A CA 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E1 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A DF 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E1 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 DF 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B DB 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1247  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1248  7FE6
1249  7FE6              	SAVESNA "Pruebas.sna", START
1250  7FE6
1251  7FE6
1252  7FE6
1253  7FE6
# file closed: Banco_de_pruebas.asm
