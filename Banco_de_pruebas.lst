# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 24 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 0D A0     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 4C 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 14 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 4A 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 4A 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 4D 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 24 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_inicial_de_entidades db $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F1 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 36 89        	defw Disparo_2
  40+ 8927 3B 89        	defw Disparo_3
  41+ 8929 40 89        	defw Disparo_4
  42+ 892B 45 89        	defw Disparo_5
  43+ 892D 4A 89        	defw Disparo_6
  44+ 892F 4F 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00           	db 0											; Control.
  49+ 8936
  50+ 8936 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8938 00 00        	defw 0											; Puntero de impresión.
  52+ 893A 00           	db 0											; Control.
  53+ 893B
  54+ 893B 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893D 00 00        	defw 0											; Puntero de impresión.
  56+ 893F 00           	db 0											; Control.
  57+ 8940
  58+ 8940 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8942 00 00        	defw 0											; Puntero de impresión.
  60+ 8944 00           	db 0											; Control.
  61+ 8945
  62+ 8945 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 8947 00 00        	defw 0											; Puntero de impresión.
  64+ 8949 00           	db 0											; Control.
  65+ 894A
  66+ 894A 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 894C 00 00        	defw 0											; Puntero de impresión.
  68+ 894E 00           	db 0											; Control.
  69+ 894F
  70+ 894F 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8951 00 00        	defw 0											; Puntero de impresión.
  72+ 8953 00           	db 0											; Control.
  73+ 8954
  74+ 8954              ; -------------------------------------------------------------------------------------
  75+ 8954              ;
  76+ 8954              ;	Índice de cajas de entidades.
  77+ 8954              ;
  78+ 8954              ;	18/1/24
  79+ 8954              ;
  80+ 8954
  81+ 8954              Indice_de_cajas_de_entidades
  82+ 8954
  83+ 8954 72 89        	defw Caja_1
  84+ 8956 7E 89        	defw Caja_2
  85+ 8958 8A 89        	defw Caja_3
  86+ 895A 96 89        	defw Caja_4
  87+ 895C A2 89        	defw Caja_5
  88+ 895E AE 89        	defw Caja_6
  89+ 8960 BA 89        	defw Caja_7
  90+ 8962
  91+ 8962 00 00        	defw 0
  92+ 8964 00 00        	defw 0
  93+ 8966
  94+ 8966              ; -------------------------
  95+ 8966
  96+ 8966              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8966
  98+ 8966              ;	db 0
  99+ 8966
 100+ 8966              ; ---------- ---------- ---------- ---------- ----------
 101+ 8966              ;
 102+ 8966              ;	28/05/24
 103+ 8966              ;
 104+ 8966              ; 	Cada caja tiene 14 bytes !!!
 105+ 8966              ;
 106+ 8966              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8966
 108+ 8966 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8967 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8969 00           	db 0												; (Contador_de_vueltas).
 111+ 896A 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 896B 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 896D 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 896F 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8971 00           	db 0												; (Velocidad).
 116+ 8972
 117+ 8972              ; ---------- ---------- ---------- ---------- ----------
 118+ 8972              ;
 119+ 8972              ;	22/01/24
 120+ 8972              ;
 121+ 8972              ; 	Cada caja tiene 12 bytes !!!
 122+ 8972
 123+ 8972 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8975 00           	db 0												; (Contador_de_vueltas).
 125+ 8976 00           	db 0												; (Impacto).
 126+ 8977 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8979 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 897B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 897D 00           	db 0												; (Velocidad).
 130+ 897E
 131+ 897E              ; ---------- ---------- ---------- ---------- ----------
 132+ 897E
 133+ 897E 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8981 00           	db 0 												; (Contador_de_vueltas).
 135+ 8982 00           	db 0												; (Impacto).
 136+ 8983 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8985 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8987 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8989 00           	db 0												; (Velocidad).
 140+ 898A
 141+ 898A              ; ---------- ---------- ---------- ---------- ----------
 142+ 898A
 143+ 898A 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 898D 00           	db 0 												; (Contador_de_vueltas).
 145+ 898E 00           	db 0												; (Impacto).
 146+ 898F 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8991 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 8993 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 8995 00           	db 0												; (Velocidad).
 150+ 8996
 151+ 8996              ; ---------- ---------- ---------- ---------- ----------
 152+ 8996
 153+ 8996 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 8999 00           	db 0 												; (Contador_de_vueltas).
 155+ 899A 00           	db 0												; (Impacto).
 156+ 899B 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 899D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 899F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A1 00           	db 0												; (Velocidad).
 160+ 89A2
 161+ 89A2              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A2
 163+ 89A2 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89A5 00           	db 0 												; (Contador_de_vueltas).
 165+ 89A6 00           	db 0												; (Impacto).
 166+ 89A7 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89A9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89AB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89AD 00           	db 0												; (Velocidad).
 170+ 89AE
 171+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 172+ 89AE
 173+ 89AE 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B1 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B2 00           	db 0												; (Impacto).
 176+ 89B3 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89B5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89B7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89B9 00           	db 0												; (Velocidad).
 180+ 89BA
 181+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 182+ 89BA
 183+ 89BA 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89BD 00           	db 0 												; (Contador_de_vueltas).
 185+ 89BE 00           	db 0												; (Impacto).
 186+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89C5 00           	db 0												; (Velocidad).
 190+ 89C6
 191+ 89C6              ; -------------------------------------------------------------------------------------
 192+ 89C6              ;
 193+ 89C6              ;	11/1/24
 194+ 89C6              ;
 195+ 89C6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89C6              ;
 197+ 89C6              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89C6              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89C6              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89C6              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89C6
 202+ 89C6              Indice_de_definiciones_de_entidades
 203+ 89C6
 204+ 89C6 CA 89        	defw Entidad_1
 205+ 89C8 D7 89        	defw Entidad_2
 206+ 89CA
 207+ 89CA              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89CA
 209+ 89CA              ;	BADSAT, (Satélite malvado).
 210+ 89CA
 211+ 89CA 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89CD 01           	db 1												; (Contador_de_vueltas).
 213+ 89CE 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D0 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D2 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89D4 01           	db 1												; (Cuad_objeto).
 217+ 89D5 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89D7
 219+ 89D7 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89DA 01           	db 1												; (Contador_de_vueltas).
 221+ 89DB 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89DD 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89DF 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E1 01           	db 1												; (Cuad_objeto).
 225+ 89E2 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89E4
 227+ 89E4              ; -------------------------------------------------------------------------------------
 228+ 89E4              ;
 229+ 89E4              ;	28/05/24
 230+ 89E4              ;
 231+ 89E4              ;	Definición de Amadeus.
 232+ 89E4              ;
 233+ 89E4              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89E4              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89E4
 236+ 89E4 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89E7 00           	db 0												; (Contador_de_vueltas).
 238+ 89E8 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89EA D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89EC C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89EE 03           	db 3												; (Cuad_objeto).
 242+ 89EF 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F1
   2+ 89F1
   3+ 89F1              ;   07/07/23
   4+ 89F1              ;
   5+ 89F1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F1              ;
   7+ 89F1              ;   Codificación:
   8+ 89F1              ;
   9+ 89F1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F1              ;
  11+ 89F1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F1              ;
  13+ 89F1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F1              ;
  15+ 89F1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F1              ;
  17+ 89F1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F1              ;                               ..... %01000010 Vel_up 4
  19+ 89F1              ;                                               Vel_down 2
  20+ 89F1              ;                               ..... $42
  21+ 89F1              ;
  22+ 89F1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F1              ;
  24+ 89F1              ;                               ..... %01000010 Vel_left 4
  25+ 89F1              ;                                               Vel_right 2
  26+ 89F1              ;                               ..... $42
  27+ 89F1              ;
  28+ 89F1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F1              ;
  30+ 89F1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F1              ;
  32+ 89F1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F1              ;
  34+ 89F1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F1              ;                                     $53
  36+ 89F1              ;
  37+ 89F1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F1              ;
  39+ 89F1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F1              ;
  42+ 89F1              ;                       Arriba ..... $81
  43+ 89F1              ;                       Arriba - izquierda ..... $a1
  44+ 89F1              ;                       Arriba - derecha ..... $91
  45+ 89F1              ;
  46+ 89F1              ;                       Abajo ..... $41
  47+ 89F1              ;                       Abajo - izquierda ..... $61
  48+ 89F1              ;                       Abajo - derecha ..... $51
  49+ 89F1              ;
  50+ 89F1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F1              ;
  52+ 89F1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F1              ;
  56+ 89F1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F1              ;
  61+ 89F1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F1              ;
  65+ 89F1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F1
  70+ 89F1              ; ----- ----- ----- ----- -----
  71+ 89F1
  72+ 89F1 1D 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89F3 25 8A            defw F_1
  74+ 89F5 2F 8A            defw F_2
  75+ 89F7 39 8A            defw Codo_abajo_derecha
  76+ 89F9 6D 8A            defw Derecha_y_subiendo
  77+ 89FB 77 8A            defw Derecha_y_subiendo_1
  78+ 89FD 81 8A            defw F_3
  79+ 89FF 8B 8A            defw F_4
  80+ 8A01 95 8A            defw Derecha_y_bajando
  81+ 8A03 9F 8A            defw Derecha_y_bajando_1
  82+ 8A05 A9 8A            defw Derecha_y_bajando_2
  83+ 8A07 B3 8A            defw Codo_derecha_abajo
  84+ 8A09 E3 8A            defw Codo_abajo_izq.
  85+ 8A0B 17 8B            defw Izquierda_y_subiendo
  86+ 8A0D 21 8B            defw Izquierda_y_subiendo_1
  87+ 8A0F 2B 8B            defw F_5
  88+ 8A11 35 8B            defw F_6
  89+ 8A13 3F 8B            defw Izquierda_y_bajando
  90+ 8A15 49 8B            defw Izquierda_y_bajando_1
  91+ 8A17 53 8B            defw Izquierda_y_bajando_2
  92+ 8A19 5D 8B            defw Codo_izquierda_abajo
  93+ 8A1B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A1D
  95+ 8A1D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A21 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A25
  98+ 8A25 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A29 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A2D 08 00
 100+ 8A2F
 101+ 8A2F 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A33 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A37 0F FE
 103+ 8A39
 104+ 8A39 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A3D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A41 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A45 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A4D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A55 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A59 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A5D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A61 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A65 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A69 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A6D
 118+ 8A6D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A71 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A75 06 00
 120+ 8A77
 121+ 8A77 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A7B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A7F 02 00
 123+ 8A81
 124+ 8A81 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A85 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A89 04 00
 126+ 8A8B
 127+ 8A8B 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A8F 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A93 08 00
 129+ 8A95
 130+ 8A95 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8A99 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8A9D 02 00
 132+ 8A9F
 133+ 8A9F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AA3 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AA7 06 00
 135+ 8AA9
 136+ 8AA9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB1 06 00
 138+ 8AB3
 139+ 8AB3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AB3
 141+ 8AB3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AB7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8ABB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ABF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AC3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AC7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8ACB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ACF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AD7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8ADB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8ADF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AE3
 154+ 8AE3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AE7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AEB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AEF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AF3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AF7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8AFB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8AFF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B03 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B07 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B0B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B0F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B13 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B17
 168+ 8B17 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B1B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B1F 06 00
 170+ 8B21
 171+ 8B21 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B29 02 00
 173+ 8B2B
 174+ 8B2B 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B2F 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B33 04 00
 176+ 8B35
 177+ 8B35 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B39 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B3D 08 00
 179+ 8B3F
 180+ 8B3F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B43 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B47 02 00
 182+ 8B49
 183+ 8B49 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B4D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B51 06 00
 185+ 8B53
 186+ 8B53 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B5B 06 00
 188+ 8B5D
 189+ 8B5D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B61 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B65 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B69 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B6D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B71 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B75 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B79 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B7D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B81 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B85 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B89 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B8D
 202+ 8B8D
 203+ 8B8D
 204+ 8B8D
 205+ 8B8D
 206+ 8B8D
 207+ 8B8D
 208+ 8B8D
 209+ 8B8D
 210+ 8B8D
# file closed: Patrones_de_mov.asm
 143  8B8D              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B8D              ; 19/1/24
   2+ 8B8D
   3+ 8B8D              Indice_de_niveles
   4+ 8B8D
   5+ 8B8D 95 8B        	defw Nivel_1
   6+ 8B8F A0 8B        	defw Nivel_2
   7+ 8B91
   8+ 8B91              ;	...
   9+ 8B91              ;	...
  10+ 8B91              ;	+ Niveles ...
  11+ 8B91
  12+ 8B91 00 00        	defw 0
  13+ 8B93 00 00        	defw 0
  14+ 8B95
  15+ 8B95 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B96 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8B9A 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8B9E 01 01
  18+ 8BA0
  19+ 8BA0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA1 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA5 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BA9 01 02
  22+ 8BAB 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BAF 01 02
  23+ 8BB1
# file closed: Niveles.asm
 144  8BB1
 145  8BB1              ; --------------------------------------------------------------------------------
 146  8BB1              ;
 147  8BB1              ; 12/05/24
 148  8BB1              ;
 149  8BB1              ; Parámetros DRAW.
 150  8BB1              ;
 151  8BB1
 152  8BB1              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB1
 154  8BB1 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BB2              ;															- Patrón de movimiento.
 156  8BB2 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BB3 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BB4
 159  8BB4 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BB5              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BB5
 162  8BB5              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BB5              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BB5              ; Ejemplos.
 165  8BB5
 166  8BB5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BB5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BB5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BB5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BB5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BB5
 172  8BB5 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BB6              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BB6              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BB6
 176  8BB6 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BB8              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BB8
 179  8BB8 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BBA
 181  8BBA              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BBA
 183  8BBA 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BBC              ;														; _palabras que componen el "movimiento_masticado".
 185  8BBC
 186  8BBC              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BBC
 188  8BBC 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BBD              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BBD              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BBD              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BBD              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BBD
 194  8BBD 00           Ctrl_2 db 0
 195  8BBE              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BBE              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BBE              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BBE              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BBE              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BBE              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BBE              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BBE              ;
 203  8BBE              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BBE              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BBE              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BBE              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BBE              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BBE              ;														BIT 4, ???
 209  8BBE              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BBE
 211  8BBE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BBF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BBF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BBF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BBF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BBF              ;
 217  8BBF              ; 														DESCRIPCIÖN:
 218  8BBF              ;
 219  8BBF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BBF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BBF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BBF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BBF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BBF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BBF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BBF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BBF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BBF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BBF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BBF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BBF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BBF              ;
 233  8BBF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BBF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BBF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BBF
 237  8BBF              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BBF
 239  8BBF 00           Filas db 0												; Filas. [DRAW]
 240  8BC0 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC1 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BC3 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BC5
 244  8BC5              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BC5
 246  8BC5 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BC6              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BC6              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BC6
 250  8BC6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BC6
 252  8BC6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BC6              ;
 254  8BC6              ;	COLORES: 0 ..... NEGRO
 255  8BC6              ;    		 1 ..... AZUL
 256  8BC6              ; 			 2 ..... ROJO
 257  8BC6              ;			 3 ..... MAGENTA
 258  8BC6              ; 			 4 ..... VERDE
 259  8BC6              ; 			 5 ..... CIAN
 260  8BC6              ;			 6 ..... AMARILLO
 261  8BC6              ; 			 7 ..... BLANCO
 262  8BC6
 263  8BC6 00 00        Indice_Sprite_der defw 0
 264  8BC8 00 00        Indice_Sprite_izq defw 0
 265  8BCA 00 00        Puntero_DESPLZ_der defw 0
 266  8BCC 00 00        Puntero_DESPLZ_izq defw 0
 267  8BCE
 268  8BCE 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD1 00           Columnas db 0
 271  8BD2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BD4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BD4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD5
 275  8BD5              ; variables de control general.
 276  8BD5
 277  8BD5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BD6
 279  8BD6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BD6
 281  8BD6              Perfiles_de_velocidad
 282  8BD6
 283  8BD6 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BD7 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BD8 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BD9 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BDA
 288  8BDA              ; Contadores de 16 bits.
 289  8BDA
 290  8BDA 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BE2
 295  8BE2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BE2
 297  8BE2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BE4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BE6 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BE8              ;
 301  8BE8              ;
 302  8BE8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BE9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BE9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BE9 00           Incrementa_puntero_backup db 0
 306  8BEA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BEB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BEB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BEC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BED 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BEE              ;
 312  8BEE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BEE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BEE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BEE              ;
 316  8BEE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BEE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BEE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BEE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BEE              ;
 321  8BEE              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BEE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BEE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BEE
 325  8BEE 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BEF
 327  8BEF              ;														DESCRIPCIÓN:
 328  8BEF              ;
 329  8BEF              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BEF              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BEF              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BEF              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BEF              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BEF              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BEF
 336  8BEF              ;														BIT 3, Recarga de nueva oleada.
 337  8BEF              ;														BIT 4, Recarga de nueva oleada.
 338  8BEF              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BEF              ;														BIT 6, **** Frame completo.
 340  8BEF              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BEF
 342  8BEF 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF1              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF1              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF1              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF1
 347  8BF1              ; Gestión de ENTIDADES y CAJAS.
 348  8BF1
 349  8BF1 00 00        Puntero_store_caja defw 0
 350  8BF3 00 00        Puntero_restore_caja defw 0
 351  8BF5 00 00        Indice_restore_caja defw 0
 352  8BF7 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BF8 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8BF9 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8BFA
 356  8BFA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8BFC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8BFE              ;														; _ puntero (Indice_entidades).
 359  8BFE
 360  8BFE              ;---------------------------------------------------------------------------------------------------------------
 361  8BFE              ;
 362  8BFE              ;	11/09/24
 363  8BFE              ;
 364  8BFE              ;	Álbumes.
 365  8BFE
 366  8BFE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C00              ;														; _variable para almacenar lo posición del puntero_
 368  8C00              ; 														; _de pila, SP.
 369  8C00 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C02              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C02
 372  8C02              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C02
 374  8C02 00 00        Album_de_pintado defw 0
 375  8C04 00 00        Album_de_borrado defw 0
 376  8C06 00 00        Album_de_pintado_Amadeus defw 0
 377  8C08 00 00        Album_de_borrado_Amadeus defw 0
 378  8C0A 00 00        Album_de_pintado_disparos defw 0
 379  8C0C 00 00        Album_de_borrado_disparos defw 0
 380  8C0E
 381  8C0E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C10 00           Num_de_bytes_album_de_disparos db 0
 383  8C11 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C12
 385  8C12 00           Numero_de_disparos_de_entidades db 0
 386  8C13
 387  8C13 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C14 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C15
 390  8C15 00 00        Puntero_rancio_disparos_album defw 0
 391  8C17
 392  8C17 00 00        Techo_Scanlines_album defw 0
 393  8C19 00 00        Techo_Scanlines_album_2 defw 0
 394  8C1B 00           Switch db 0
 395  8C1C 00 00        Techo defw 0
 396  8C1E 00 00        Scanlines_album_SP defw 0
 397  8C20 00 89        India_SP defw Tabla_de_pintado
 398  8C22 03 89        India_2_SP defw Tabla_de_pintado+3
 399  8C24
 400  8C24 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  8C25              ;
 402  8C25              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  8C25              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  8C25              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  8C25              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  8C25              ;																Habilita el borrado/pintado de sprites.
 407  8C25              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  8C25              ;																_ a la baja.
 409  8C25              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  8C25              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 411  8C25              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 412  8C25              ; 																_ el último frame de la explosión de nuestra nave.
 413  8C25              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 414  8C25              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 415  8C25
 416  8C25 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  8C26              ;
 418  8C26              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  8C26              ;
 420  8C26              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  8C26              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  8C26              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  8C26              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  8C26              ;
 425  8C26              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  8C26              ;															_ masticados ya generados.
 427  8C26              ;
 428  8C26              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  8C26              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  8C26              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  8C26              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  8C26
 433  8C26 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 434  8C27              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 435  8C27              ; Gestión de Disparos.
 436  8C27
 437  8C27 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 438  8C29
 439  8C29 00           Impacto2 db 0											; Byte de control de impactos.
 440  8C2A
 441  8C2A              ;
 442  8C2A              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 443  8C2A              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 444  8C2A              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 445  8C2A              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 446  8C2A
 447  8C2A
 448  8C2A
 449  8C2A
 450  8C2A
 451  8C2A
 452  8C2A
 453  8C2A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 454  8C2C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 455  8C2C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 456  8C2C
 457  8C2C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 458  8C2E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 459  8C2E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C31              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 461  8C31 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C34              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 463  8C34
 464  8C34              ;---------------------------------------------------------------------------------------------------------------
 465  8C34
 466  8C34              ; Relojes y temporizaciones.
 467  8C34
 468  8C34 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 469  8C35 05           Clock_explosion_Amadeus db 5
 470  8C36 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 471  8C37
 472  8C37 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 473  8C39 F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 474  8C3B 00           DB_RND_disparos db 0
 475  8C3C
 476  8C3C 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 477  8C3E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  8C3F              ;														; Repite la oleada de entidades.
 479  8C3F 90           CLOCK_disparo_entidad_MASTER db $90						; Reloj, decreciente.
 480  8C40 90           CLOCK_disparo_entidad db $90
 481  8C41
 482  8C41              ;---------------------------------------------------------------------------------------------------------------
 483  8C41
 484  8C41              ; Gestión de NIVELES.
 485  8C41
 486  8C41 00           Nivel db 0												; Nivel actual del juego.
 487  8C42 00 00        Puntero_indice_NIVELES defw 0
 488  8C44 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 489  8C46              ; 														; _ que definen el NIVEL.
 490  8C46
 491  8C46              ; ---------------------------------------------------------------------------------------------------------------
 492  8C46
 493  8C46              ; Temporizaciones Shield.
 494  8C46
 495  8C46 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 496  8C4A 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 497  8C4C 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 498  8C4D 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 499  8C4E 00           Shield_3 db 0
 500  8C4F
 501  8C4F 06           Lives db 6
 502  8C50
 503  8C50              ; 	INICIO  *************************************************************************************************************************************************************************
 504  8C50              ;
 505  8C50              ;	5/1/24
 506  8C50
 507  8C50              START
 508  8C50
 509  8C50 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  8C53 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 511  8C55 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  8C57 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  8C59 F3           	DI
 514  8C5A
 515  8C5A              ; Limpiamos pantalla.
 516  8C5A
 517  8C5A 3E 07        	ld a,%00000111
 518  8C5C CD B1 94     	call Cls
 519  8C5F CD 09 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 520  8C62
 521  8C62              ; INICIALIZACIÓN.
 522  8C62
 523  8C62 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 524  8C64 CD 56 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 525  8C67 CD A0 8E     	call Extrae_numero_aleatorio_y_avanza
 526  8C6A
 527  8C6A 6F           	ld l,a
 528  8C6B 26 00        	ld h,0
 529  8C6D 22 3C 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 530  8C70
 531  8C70              ;	Inicializa 1er Nivel.
 532  8C70
 533  8C70 21 8D 8B     	ld hl,Indice_de_niveles
 534  8C73 22 42 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 535  8C76 CD 86 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 536  8C79              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 537  8C79              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 538  8C79              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 539  8C79
 540  8C79              ;	Inicia los álbumes de líneas.
 541  8C79
 542  8C79 CD 59 90     	call Inicia_albumes_de_lineas
 543  8C7C              ;
 544  8C7C CD 69 90     	call Inicia_albumes_de_lineas_Amadeus
 545  8C7F CD 76 90     	call Inicia_albumes_de_disparos
 546  8C82
 547  8C82 CD 9F 90     	call Inicia_Puntero_Disparo_Entidades
 548  8C85
 549  8C85 CD CB 92     4 call Inicia_Entidades
 550  8C88 CD 2E 93     	call Inicia_Amadeus
 551  8C8B
 552  8C8B              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 553  8C8B              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 554  8C8B              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 555  8C8B
 556  8C8B 11 66 89     	ld de,Amadeus_BOX
 557  8C8E CD 81 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 558  8C91 CD 71 93     	call Limpiamos_bandeja_DRAW
 559  8C94
 560  8C94              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 561  8C94
 562  8C94 06 3C        	ld b,60
 563  8C96 CD 53 9D     2 call Amadeus_a_izquierda
 564  8C99 10 FB        	djnz 2B
 565  8C9B
 566  8C9B CD 37 90     	call Genera_datos_de_impresion_Amadeus
 567  8C9E
 568  8C9E              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 569  8C9E
 570  8C9E CD 89 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 571  8CA1              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 572  8CA1
 573  8CA1              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 574  8CA1              ; (Esto se dá cuando se inicia una nueva oleada).
 575  8CA1
 576  8CA1              ;	ld a,(Ctrl_1)
 577  8CA1              ;	bit 3,a
 578  8CA1              ;	jr nz,5F											 ; Loop
 579  8CA1
 580  8CA1              ;	ld de,Amadeus_db
 581  8CA1              ;	call Store_Amadeus
 582  8CA1
 583  8CA1              ; 	INICIA DISPAROS !!!!!
 584  8CA1
 585  8CA1              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 586  8CA1
 587  8CA1              ;5 call Inicia_punteros_de_cajas
 588  8CA1              ;	call Restore_entidad
 589  8CA1
 590  8CA1              ;	ld a,(Ctrl_1)
 591  8CA1              ;	bit 3,a
 592  8CA1              ;	jr z,6F
 593  8CA1
 594  8CA1              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 595  8CA1
 596  8CA1              ;	ld hl,Ctrl_1
 597  8CA1              ;	res 3,(hl)
 598  8CA1              ;	jr Main
 599  8CA1
 600  8CA1              ; Damos por concluida la construcción del FRAME.
 601  8CA1              ;
 602  8CA1
 603  8CA1 CD 14 91     	call Inicia_Shield
 604  8CA4
 605  8CA4
 606  8CA4 2A 1E 8C     6 ld hl,(Scanlines_album_SP)
 607  8CA7 22 17 8C     	ld (Techo_Scanlines_album),hl
 608  8CAA
 609  8CAA 2A 04 8C     	ld hl,(Album_de_borrado)
 610  8CAD 22 1E 8C     	ld (Scanlines_album_SP),hl
 611  8CB0
 612  8CB0 21 00 89     	ld hl,Tabla_de_pintado
 613  8CB3 22 20 8C     	ld (India_SP),hl
 614  8CB6
 615  8CB6 21 24 8C     	ld hl,Ctrl_3
 616  8CB9 CB C6        	set 0,(hl) 											; Indica Frame completo.
 617  8CBB CB D6        	set 2,(hl)
 618  8CBD CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 619  8CBF
 620  8CBF FB           	ei 													; Ha de apuntar a $5c3a.
 621  8CC0
 622  8CC0 76           	halt
 623  8CC1
 624  8CC1              ; ------------------------------------
 625  8CC1
 626  8CC1              Main
 627  8CC1              ;
 628  8CC1              ; 22/08/24
 629  8CC1
 630  8CC1              ; Gestión de disparos.
 631  8CC1
 632  8CC1 CD 5F 9F     	call Limpia_album_de_borrado_disparos
 633  8CC4 CD 87 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 634  8CC7 CD 9B 9F     	call Motor_Disparos
 635  8CCA
 636  8CCA              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 637  8CCA              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 638  8CCA              ; Este hecho lo indica el bit2 de (Impacto2).
 639  8CCA
 640  8CCA CD 59 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 641  8CCD
 642  8CCD              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 643  8CCD
 644  8CCD 21 40 8C     	ld hl,CLOCK_disparo_entidad
 645  8CD0 35           	dec (hl)
 646  8CD1 CC CA 8D     	call z,Autoriza_disparo_de_entidades
 647  8CD4
 648  8CD4 2A 3C 8C     	ld hl,(Clock_next_entity)
 649  8CD7 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CDB A7           	and a
 651  8CDC ED 42        	sbc hl,bc
 652  8CDE 20 16        	jr nz,1F
 653  8CE0
 654  8CE0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CE0              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CE0
 657  8CE0 3A F8 8B     	ld a,(Numero_parcial_de_entidades)
 658  8CE3 47           	ld b,a
 659  8CE4 3A F9 8B     	ld a,(Entidades_en_curso)
 660  8CE7 B8           	cp b
 661  8CE8 28 0C        	jr z,1F
 662  8CEA 30 0A        	jr nc,1F
 663  8CEC
 664  8CEC 3C           	inc a
 665  8CED 32 F9 8B     	ld (Entidades_en_curso),a
 666  8CF0
 667  8CF0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CF0
 669  8CF0 CD A0 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CF3 CD BC 8E     	call Define_Clock_next_entity
 671  8CF6
 672  8CF6 3A F9 8B     1 ld a,(Entidades_en_curso)
 673  8CF9 A7           	and a
 674  8CFA CA 78 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 675  8CFD 47           	ld b,a												; No hay entidades que gestionar.
 676  8CFE
 677  8CFE              ; ( Código que ejecutamos con cada entidad: ).
 678  8CFE
 679  8CFE              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 680  8CFE              ;
 681  8CFE              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 682  8CFE
 683  8CFE 21 00 89     	ld hl,Tabla_de_pintado
 684  8D01 22 20 8C     	ld (India_SP),hl
 685  8D04
 686  8D04 21 24 8C     	ld hl,Ctrl_3
 687  8D07 CB D6        	set 2,(hl)
 688  8D09 CD 5C 8E     	call Change
 689  8D0C
 690  8D0C C5           2 push bc 												; Nº de entidades en curso.
 691  8D0D
 692  8D0D CD E1 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 693  8D10 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 694  8D14
 695  8D14              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 696  8D14
 697  8D14              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 698  8D14              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 699  8D14
 700  8D14 3A 29 8C     	ld a,(Impacto2)
 701  8D17 CB 5F        	bit 3,a
 702  8D19 C4 25 9F     	call nz,Compara_con_coordenadas_de_disparo
 703  8D1C
 704  8D1C 3A B5 8B     	ld a,(Impacto)
 705  8D1F CB 4F        	bit 1,a
 706  8D21 C4 F1 91     	call nz,Genera_explosion
 707  8D24 20 31        	jr nz,Gestiona_siguiente_entidad
 708  8D26
 709  8D26 3A B5 8B     	ld a,(Impacto)
 710  8D29 A7           	and a
 711  8D2A 28 0C        	jr z,3F
 712  8D2C
 713  8D2C              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D2C
 715  8D2C              ; 5/7/24
 716  8D2C              ; Nota importante:
 717  8D2C              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D2C              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D2C              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D2C
 721  8D2C 3A 6A 89     	ld a,(Impacto_Amadeus)
 722  8D2F A7           	and a
 723  8D30 C4 F1 91     	call nz,Genera_explosion
 724  8D33 20 22        	jr nz,Gestiona_siguiente_entidad
 725  8D35
 726  8D35              ; Falsa colisión !!!
 727  8D35
 728  8D35 32 B5 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8D38
 730  8D38              ; -------------------------------------------
 731  8D38
 732  8D38 CD 00 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8D3B CD 3C 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8D3E CD F0 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 735  8D41 CD F1 94     	call Genera_datos_de_impresion
 736  8D44 CD 94 93     	call Decrementa_Contador_de_mov_masticados
 737  8D47
 738  8D47              ; -------------------------------------------
 739  8D47
 740  8D47              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 741  8D47
 742  8D47 2A B6 8B     	ld hl,(Puntero_de_impresion)
 743  8D4A CD C5 94     	call Genera_coordenadas
 744  8D4D
 745  8D4D              ; TODO: Generamos disparo ???
 746  8D4D
 747  8D4D 3A 14 8C     	ld a,(Permiso_de_disparo_Entidades)
 748  8D50 A7           	and a
 749  8D51 C4 EC 8D     	call nz,Entidad_genera_disparo_si_procede
 750  8D54
 751  8D54 CD D7 A0     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 752  8D57
 753  8D57              Gestiona_siguiente_entidad
 754  8D57
 755  8D57 CD 66 93      	call Store_Restore_cajas
 756  8D5A C1           	pop bc
 757  8D5B 10 AF        	djnz 2B
 758  8D5D
 759  8D5D              ; Hemos gestionado todas las entidades.
 760  8D5D
 761  8D5D AF           	xor a
 762  8D5E 32 14 8C     	ld (Permiso_de_disparo_Entidades),a							; Volvemos a deshabilitar el permiso de disparo para las entidades hasta que (CLOCK_disparo_entidad) llegue a "0".
 763  8D61
 764  8D61              ; ----- ----- -----
 765  8D61
 766  8D61 CD 14 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 767  8D64 CD 2B 8F     	call Ordena_tabla_de_impresion
 768  8D67 CD 89 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 769  8D6A
 770  8D6A              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 771  8D6A              ; Hemos gestionado todas las unidades.
 772  8D6A              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 773  8D6A
 774  8D6A              ;	ld hl,Ctrl_1
 775  8D6A              ;	res 2,(hl)
 776  8D6A
 777  8D6A CD D1 8E     	call Borra_diferencia
 778  8D6D
 779  8D6D 3A 24 8C     	ld a,(Ctrl_3)
 780  8D70 CB 5F        	bit 3,a
 781  8D72 20 04        	jr nz,Gestion_de_Amadeus
 782  8D74
 783  8D74 EB           	ex de,hl
 784  8D75 71           	ld (hl),c
 785  8D76 2C           	inc l
 786  8D77 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 787  8D78
 788  8D78
 789  8D78              ;! GESTIONA AMADEUS !!!!!!!!!!
 790  8D78
 791  8D78              Gestion_de_Amadeus
 792  8D78
 793  8D78 21 24 8C     	ld hl,Ctrl_3
 794  8D7B CB 76        	bit 6,(hl)
 795  8D7D 28 13        	jr z,Amadeus_vivo
 796  8D7F
 797  8D7F              ; Amadeus ha sido destruido.
 798  8D7F              ; Decrementa (Temp_new_live).
 799  8D7F
 800  8D7F 21 36 8C     	ld hl,Temp_new_live
 801  8D82 35           	dec (hl)
 802  8D83 20 26        	jr nz,End_frame
 803  8D85
 804  8D85              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 805  8D85
 806  8D85 21 4F 8C     	ld hl,Lives
 807  8D88 35           	dec (hl)
 808  8D89
 809  8D89              ;! Fin del juego
 810  8D89
 811  8D89 F3           	di
 812  8D8A 28 FE        	jr z,$
 813  8D8C FB           	ei
 814  8D8D
 815  8D8D              ; Nueva nave.
 816  8D8D
 817  8D8D CD 02 8E     	call Reinicia_Amadeus
 818  8D90 18 19        	jr End_frame
 819  8D92
 820  8D92              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 821  8D92
 822  8D92              Amadeus_vivo
 823  8D92
 824  8D92 3A 6A 89     	ld a,(Impacto_Amadeus)
 825  8D95 A7           	and a
 826  8D96 C4 21 92     	call nz, Genera_explosion_Amadeus
 827  8D99 20 10        	jr nz, End_frame
 828  8D9B
 829  8D9B CD CE 91     	call Teclado
 830  8D9E
 831  8D9E 21 24 8C     	ld hl,Ctrl_3
 832  8DA1 CB 6E        	bit 5,(hl)
 833  8DA3 28 06        	jr z,End_frame
 834  8DA5
 835  8DA5              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 836  8DA5
 837  8DA5 CD 77 8E     	call Change_Amadeus
 838  8DA8 CD 37 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 839  8DAB
 840  8DAB              End_frame
 841  8DAB
 842  8DAB              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 843  8DAB              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 844  8DAB
 845  8DAB CD 3E A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 846  8DAE CD 75 9F     	call Calcula_bytes_pintado_disparos
 847  8DB1 CD 82 9F     	call Limpia_album_de_pintado_disparos
 848  8DB4
 849  8DB4              ; ------------ ------------- --------------
 850  8DB4
 851  8DB4 2A 04 8C     	ld hl,(Album_de_borrado)
 852  8DB7 22 1E 8C     	ld (Scanlines_album_SP),hl
 853  8DBA
 854  8DBA 21 24 8C     	ld hl,Ctrl_3
 855  8DBD CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8DBF CB 9E        	res 3,(hl)
 857  8DC1 CB A6        	res 4,(hl)
 858  8DC3
 859  8DC3 AF           	xor a
 860  8DC4 D3 FE        	out ($fe),a
 861  8DC6
 862  8DC6 76           	halt
 863  8DC7
 864  8DC7              ; ----------------------------------------
 865  8DC7
 866  8DC7              ;	ld a,(Ctrl_1) 										; Existe Loop?
 867  8DC7              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 868  8DC7 CA C1 8C     	jp z,Main
 869  8DCA
 870  8DCA              ;------------------------------------------
 871  8DCA              ;
 872  8DCA              ;	14/09/24
 873  8DCA
 874  8DCA              Autoriza_disparo_de_entidades
 875  8DCA
 876  8DCA 3E 01        	ld a,1
 877  8DCC 32 14 8C     	ld (Permiso_de_disparo_Entidades),a
 878  8DCF
 879  8DCF 3A 3F 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 880  8DD2 32 40 8C     	ld (CLOCK_disparo_entidad),a
 881  8DD5
 882  8DD5 2A 39 8C     	ld hl,(RND_SP_Disparos)
 883  8DD8
 884  8DD8 7E           2 ld a,(hl)
 885  8DD9 A7           	and a
 886  8DDA 28 08        	jr z,1F
 887  8DDC
 888  8DDC 32 3B 8C     	ld (DB_RND_disparos),a
 889  8DDF 23           	inc hl
 890  8DE0 22 39 8C     	ld (RND_SP_Disparos),hl
 891  8DE3
 892  8DE3 C9           	ret
 893  8DE4
 894  8DE4 21 F6 88     1	ld hl,Numeros_aleatorios
 895  8DE7 22 39 8C     	ld (RND_SP_Disparos),hl
 896  8DEA 18 EC        	jr 2B
 897  8DEC
 898  8DEC              ;------------------------------------------
 899  8DEC              ;
 900  8DEC              ;	14/09/24
 901  8DEC              ;
 902  8DEC              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 903  8DEC
 904  8DEC              Entidad_genera_disparo_si_procede
 905  8DEC
 906  8DEC 3A F9 8B     	ld a,(Entidades_en_curso)
 907  8DEF A7           	and a
 908  8DF0 C8           	ret z
 909  8DF1
 910  8DF1 3A 3B 8C     	ld a,(DB_RND_disparos)
 911  8DF4 CB 4F        	bit 1,a
 912  8DF6 F5           	push af											; Guardamos FLAGS.
 913  8DF7
 914  8DF7 17           	rla
 915  8DF8 17           	rla
 916  8DF9
 917  8DF9 32 3B 8C     	ld (DB_RND_disparos),a
 918  8DFC
 919  8DFC F1           	pop af
 920  8DFD C4 00 9F     	call nz,Genera_disparo_de_entidad_maldosa
 921  8E00
 922  8E00 C9           	ret
 923  8E01
 924  8E01
 925  8E01              ; RECARGA DE NUEVA OLEADA.
 926  8E01
 927  8E01              ;	ld a,(Contador_de_frames)
 928  8E01              ;	ld b,a
 929  8E01              ;	ld a,(Activa_recarga_cajas)
 930  8E01              ;	cp b
 931  8E01              ;	jr z,20F
 932  8E01
 933  8E01              ;	ld hl,Ctrl_1
 934  8E01              ;	set 4,(hl)
 935  8E01              ;	jp Main
 936  8E01
 937  8E01              ;20 ld hl,Ctrl_1
 938  8E01              ;	res 4,(hl)
 939  8E01
 940  8E01              ;	ld a,(Contador_de_frames)
 941  8E01
 942  8E01              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 943  8E01              ;! _ IMPREDECIBLE !!!!
 944  8E01
 945  8E01              ;	add 10
 946  8E01              ;	ld (Clock_next_entity),a
 947  8E01
 948  8E01              ;	jp 4B
 949  8E01
 950  8E01 C9           	ret
 951  8E02
 952  8E02              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 953  8E02              ;
 954  8E02              ;	16/11/23
 955  8E02
 956  8E02              ;;Gestiona_Amadeus
 957  8E02
 958  8E02              ;! Activa/desactiva impacto con Amadeus.
 959  8E02
 960  8E02              ;	ld a,(Impacto)
 961  8E02              ;	and a
 962  8E02              ;	jr nz,2F
 963  8E02
 964  8E02              ;;	call Mov_Amadeus
 965  8E02
 966  8E02              ;;2 ld a,(Ctrl_0)
 967  8E02              ;;	bit 4,a
 968  8E02              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 969  8E02
 970  8E02              ;;	call Guarda_foto_entidad_a_pintar
 971  8E02              ;;	call Guarda_datos_de_borrado_Amadeus
 972  8E02
 973  8E02              ;;1 ld hl,Ctrl_0
 974  8E02              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 975  8E02
 976  8E02              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 977  8E02
 978  8E02              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 979  8E02
 980  8E02              ;	call Calcula_numero_de_disparotes
 981  8E02
 982  8E02              ;;	ret
 983  8E02
 984  8E02              ; -----------------------------
 985  8E02              ;
 986  8E02              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 987  8E02              ;
 988  8E02              ;	INPUTS: B a de estar a "0".
 989  8E02
 990  8E02              ;Prepara_Borra_sprites
 991  8E02
 992  8E02              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 993  8E02              ;	ld a,l
 994  8E02              ;	ret z
 995  8E02
 996  8E02              ;	srl a
 997  8E02
 998  8E02              ;2 sub 16
 999  8E02              ;	jr z,1F
1000  8E02              ;	inc b
1001  8E02              ;	jr 2B
1002  8E02
1003  8E02              ;1 inc b
1004  8E02
1005  8E02              ;	exx
1006  8E02              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1007  8E02              ;	exx
1008  8E02
1009  8E02              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1010  8E02              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1011  8E02
1012  8E02              ;	ret
1013  8E02
1014  8E02              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1015  8E02              ;
1016  8E02              ;	24/07/24
1017  8E02
1018  8E02              Reinicia_Amadeus
1019  8E02
1020  8E02              ;	Reinicia posición y estado.
1021  8E02
1022  8E02 21 CF 50     	ld hl,$50cf
1023  8E05 22 6B 89     	ld (p.imp.amadeus),hl
1024  8E08 21 F0 E0     	ld hl,$e0f0
1025  8E0B 22 6D 89     	ld (Pamm_Amadeus),hl
1026  8E0E 21 3D 00     	ld hl,$003d
1027  8E11 22 6F 89     	ld (Comm_Amadeus),hl
1028  8E14
1029  8E14              ;	limpiamos el álbum de borrado.
1030  8E14
1031  8E14 2A 08 8C     	ld hl,(Album_de_borrado_Amadeus)
1032  8E17
1033  8E17 AF           	xor a
1034  8E18 77           	ld (hl),a
1035  8E19
1036  8E19 E5           	push hl
1037  8E1A D1           	pop de
1038  8E1B 13           	inc de
1039  8E1C
1040  8E1C 01 23 00     	ld bc,35
1041  8E1F ED B0        	ldir
1042  8E21
1043  8E21 CD 37 90     	call Genera_datos_de_impresion_Amadeus
1044  8E24
1045  8E24              ;	Reinicia temporizaciones.
1046  8E24
1047  8E24 CD 14 91     	call Inicia_Shield
1048  8E27
1049  8E27 3E 5A        	ld a,90
1050  8E29 32 4C 8C     	ld (Shield),a
1051  8E2C
1052  8E2C 3E 64        	ld a,100
1053  8E2E 32 36 8C     	ld (Temp_new_live),a
1054  8E31
1055  8E31              ; 	Restauramos el FLAG: Amadeus vivo.
1056  8E31
1057  8E31 21 24 8C     	ld hl,Ctrl_3
1058  8E34 CB B6        	res 6,(hl)
1059  8E36
1060  8E36              ;	Fuerza la impresión de la nave en el siguiente frame.
1061  8E36
1062  8E36 21 24 8C      	ld hl,Ctrl_3
1063  8E39 CB EE        	set 5,(hl)
1064  8E3B
1065  8E3B C9           	ret
1066  8E3C
1067  8E3C              ; --------------------------------------------------------------------------------------------------------------
1068  8E3C              ;
1069  8E3C              ;	12/05/24
1070  8E3C
1071  8E3C 3A BC 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1072  8E3F CB 27        	sla a
1073  8E41 32 BC 8B     	ld (Velocidad),a
1074  8E44 E6 10        	and $10
1075  8E46 C8           	ret z
1076  8E47
1077  8E47              ; Restaura (Velocidad) a razón del nº de vueltas.
1078  8E47
1079  8E47 3A B4 8B     	ld a,(Contador_de_vueltas)
1080  8E4A CB 2F        	sra a
1081  8E4C CB 2F        	sra a
1082  8E4E 32 BC 8B     	ld (Velocidad),a
1083  8E51
1084  8E51 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1085  8E54 23           	inc hl
1086  8E55 23           	inc hl
1087  8E56 23           	inc hl
1088  8E57 23           	inc hl
1089  8E58 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1090  8E5B
1091  8E5B C9           	ret
1092  8E5C
1093  8E5C              ; --------------------------------------------------------------------------------------------------------------
1094  8E5C              ;
1095  8E5C              ;	25/08/24
1096  8E5C
1097  8E5C              Change
1098  8E5C
1099  8E5C 3A 1B 8C     	ld a,(Switch)
1100  8E5F EE 01        	xor 1
1101  8E61 32 1B 8C     	ld (Switch),a
1102  8E64 2A 02 8C     	ld hl,(Album_de_pintado)
1103  8E67 ED 5B 04 8C  	ld de,(Album_de_borrado)
1104  8E6B EB           	ex de,hl
1105  8E6C 22 02 8C     	ld (Album_de_pintado),hl
1106  8E6F 22 1E 8C     	ld (Scanlines_album_SP),hl
1107  8E72 ED 53 04 8C  	ld (Album_de_borrado),de
1108  8E76 C9           	ret
1109  8E77
1110  8E77              Change_Amadeus
1111  8E77
1112  8E77 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
1113  8E7A ED 5B 08 8C  	ld de,(Album_de_borrado_Amadeus)
1114  8E7E EB           	ex de,hl
1115  8E7F 22 06 8C     	ld (Album_de_pintado_Amadeus),hl
1116  8E82 ED 53 08 8C  	ld (Album_de_borrado_Amadeus),de
1117  8E86 C9           	ret
1118  8E87
1119  8E87              Change_Disparos
1120  8E87
1121  8E87 2A 0A 8C     	ld hl,(Album_de_pintado_disparos)
1122  8E8A ED 5B 0C 8C  	ld de,(Album_de_borrado_disparos)
1123  8E8E EB           	ex de,hl
1124  8E8F 22 0A 8C     	ld (Album_de_pintado_disparos),hl
1125  8E92 ED 53 0C 8C  	ld (Album_de_borrado_disparos),de
1126  8E96 22 0E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1127  8E99
1128  8E99 3A 10 8C     	ld a,(Num_de_bytes_album_de_disparos)
1129  8E9C 32 11 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1130  8E9F
1131  8E9F C9           	ret
1132  8EA0
1133  8EA0              ; ------------------------------------
1134  8EA0              ;
1135  8EA0              ; 1/05/24
1136  8EA0
1137  8EA0              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1138  8EA0              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1139  8EA0
1140  8EA0              ;	DESTRUYE: HL,DE,A
1141  8EA0              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1142  8EA0
1143  8EA0              ;	Variables implicadas: (RND_SP).
1144  8EA0
1145  8EA0              Extrae_numero_aleatorio_y_avanza
1146  8EA0
1147  8EA0 21 00 89     	ld hl,Tabla_de_pintado
1148  8EA3 EB           	ex de,hl
1149  8EA4 2A 37 8C     	ld hl,(RND_SP)
1150  8EA7 EB           	ex de,hl
1151  8EA8 A7           	and a
1152  8EA9 ED 52        	sbc hl,de
1153  8EAB
1154  8EAB 2A 37 8C     	ld hl,(RND_SP)
1155  8EAE 20 06        	jr nz,1F
1156  8EB0
1157  8EB0              ; Sitúa HL al principio de la tabla de nº aleatorios.
1158  8EB0
1159  8EB0 21 F6 88     	ld hl,Numeros_aleatorios
1160  8EB3 22 37 8C     	ld (RND_SP),HL
1161  8EB6
1162  8EB6              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1163  8EB6
1164  8EB6 7E           1 ld a,(hl)
1165  8EB7 23           	inc hl
1166  8EB8 22 37 8C     	ld (RND_SP),hl
1167  8EBB C9           	ret
1168  8EBC
1169  8EBC              ; ------------------------------------
1170  8EBC              ;
1171  8EBC              ; 1/05/24
1172  8EBC
1173  8EBC              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1174  8EBC              ; (1 a 4 segundos).
1175  8EBC              ; Actualizamos (Clock_next_entity) con A.
1176  8EBC
1177  8EBC              ;	DESTRUYE: A y B.
1178  8EBC              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1179  8EBC              ;			 Actualiza (Clock_next_entity) con A.
1180  8EBC
1181  8EBC              ;	Variables implicadas: (Clock_next_entity).
1182  8EBC
1183  8EBC              ; Notas:
1184  8EBC
1185  8EBC              ; 	$32 1 seg.
1186  8EBC              ; 	$64 2 seg.
1187  8EBC              ; 	$96 3 seg.
1188  8EBC              ; 	$c8 4 seg.
1189  8EBC              ; 	$fa 5 seg.
1190  8EBC
1191  8EBC              ; $ffff 1310,7 seg, 22 minutos.
1192  8EBC
1193  8EBC              ;	$0100  5 seg. aproximadamente.
1194  8EBC              ;	$0200 10 seg. aproximadamente.
1195  8EBC              ;	$0300 15 seg. aproximadamente.
1196  8EBC              ;	$0400 20 seg. aproximadamente.
1197  8EBC              ;	$0500 25 seg. aproximadamente.
1198  8EBC              ;	$0600 30 seg. aproximadamente.
1199  8EBC
1200  8EBC              Define_Clock_next_entity
1201  8EBC
1202  8EBC FE 34        	cp $34
1203  8EBE 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1204  8EC0
1205  8EC0              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1206  8EC0
1207  8EC0 4F           3 ld c,a
1208  8EC1 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1209  8EC3 2A 78 5C     	ld hl,(FRAMES)
1210  8EC6 A7           	and a
1211  8EC7 ED 4A        	adc hl,bc
1212  8EC9 22 3C 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1213  8ECC C9           	ret
1214  8ECD
1215  8ECD 3E 34        1 ld a,$34
1216  8ECF 18 EF        	jr 3B
1217  8ED1
1218  8ED1              ; ------------------------------------
1219  8ED1              ;
1220  8ED1              ; 18/03/24
1221  8ED1
1222  8ED1              Borra_diferencia
1223  8ED1
1224  8ED1 ED 4B 1E 8C  	ld bc,(Scanlines_album_SP)
1225  8ED5
1226  8ED5 3A 1B 8C     	ld a,(Switch)
1227  8ED8 A7           	and a
1228  8ED9 28 08        	jr z,2F
1229  8EDB
1230  8EDB 2A 19 8C     	ld hl,(Techo_Scanlines_album_2)
1231  8EDE 11 19 8C     	ld de,Techo_Scanlines_album_2
1232  8EE1 18 06        	jr 3F
1233  8EE3
1234  8EE3 2A 17 8C     2 ld hl,(Techo_Scanlines_album)
1235  8EE6 11 17 8C     	ld de,Techo_Scanlines_album
1236  8EE9
1237  8EE9              ; Diferencia.
1238  8EE9
1239  8EE9 ED 42        3 sbc hl,bc
1240  8EEB
1241  8EEB C8           	ret z
1242  8EEC D8           	ret c
1243  8EED
1244  8EED              ; Nuevo techo, (más bajo que el anterior).
1245  8EED              ; Fijamos nuevo techo y borramos bytes sobrantes.
1246  8EED
1247  8EED EB           	ex de,hl
1248  8EEE
1249  8EEE 71           	ld (hl),c
1250  8EEF 2C           	inc l
1251  8EF0 70           	ld (hl),b
1252  8EF1
1253  8EF1 AF           	xor a
1254  8EF2 43           	ld b,e
1255  8EF3
1256  8EF3 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1257  8EF6
1258  8EF6 77           1 ld (hl),a
1259  8EF7 23           	inc hl
1260  8EF8 10 FC        	djnz 1B
1261  8EFA
1262  8EFA              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1263  8EFA
1264  8EFA 21 24 8C     	ld hl,Ctrl_3
1265  8EFD CB DE        	set 3,(hl)
1266  8EFF
1267  8EFF C9           	ret
1268  8F00
1269  8F00              ; --------------------------------------------------------------------------------------------------------------
1270  8F00              ;
1271  8F00              ;	26/3/24
1272  8F00
1273  8F00              Recauda_informacion_de_entidad_en_curso
1274  8F00
1275  8F00              ; Almacena la Coordenada Y de la entidad en curso.
1276  8F00
1277  8F00              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1278  8F00
1279  8F00 3A B3 8B     	ld a,(Coordenada_y)
1280  8F03 2A 20 8C     	ld hl,(India_SP)
1281  8F06 77           	ld (hl),a
1282  8F07 2C           	inc l
1283  8F08
1284  8F08              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1285  8F08
1286  8F08 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
1287  8F0C
1288  8F0C 73           	ld (hl),e
1289  8F0D 2C           	inc l
1290  8F0E 72           	ld (hl),d
1291  8F0F 2C           	inc l
1292  8F10
1293  8F10 22 20 8C     	ld (India_SP),hl
1294  8F13
1295  8F13 C9           	ret
1296  8F14
1297  8F14              ; --------------------------------------------------------------------------------------------------------------
1298  8F14              ;
1299  8F14              ;	27/03/24
1300  8F14              ;
1301  8F14
1302  8F14              Inicializa_India_y_limpia_Tabla_de_impresion
1303  8F14
1304  8F14 2A 20 8C     	ld hl,(India_SP)
1305  8F17 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1306  8F1A
1307  8F1A 79           	ld a,c
1308  8F1B 95           	sub l
1309  8F1C 28 06        	jr z,2F
1310  8F1E 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1311  8F1F              ;														; _ y pasamos a inicializar (India_SP).
1312  8F1F AF           	xor a
1313  8F20
1314  8F20 77           1 ld (hl),a
1315  8F21 2C           	inc l
1316  8F22 10 FC        	djnz 1B												; Limpia Tabla.
1317  8F24
1318  8F24 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1319  8F27 22 20 8C     	ld (India_SP),hl
1320  8F2A
1321  8F2A C9           	ret
1322  8F2B
1323  8F2B              ; --------------------------------------------------------------------------------------------------------------
1324  8F2B              ;
1325  8F2B              ;	31/3/24
1326  8F2B
1327  8F2B              Ordena_tabla_de_impresion
1328  8F2B
1329  8F2B              ; 5794 T/states.
1330  8F2B              ; 6278 T/states.
1331  8F2B              ; 5310 T/states.
1332  8F2B
1333  8F2B              ; Inicializamos punteros (India_SP) e (India_2_SP).
1334  8F2B              ; Inicializamos contador de comparaciones, [C].
1335  8F2B              ; Cargamos los registros A y B para efectuar comparación.
1336  8F2B
1337  8F2B FD 2E 00     	ld iyl,0
1338  8F2E
1339  8F2E 3A F9 8B     	ld a,(Entidades_en_curso)
1340  8F31 FE 04        	cp 4 	;	4
1341  8F33 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1342  8F34
1343  8F34 3D           	dec a
1344  8F35 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1345  8F36 51           	ld d,c 										; Copia de respaldo.
1346  8F37
1347  8F37 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1348  8F38
1349  8F38 21 03 89     	ld hl,Tabla_de_pintado+3
1350  8F3B 46           	ld b,(hl)
1351  8F3C 22 22 8C     	ld (India_2_SP),hl
1352  8F3F
1353  8F3F B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1354  8F40 DC 68 8F     	call c, Avanza_India_2_SP
1355  8F43 CC 68 8F     	call z, Avanza_India_2_SP
1356  8F46
1357  8F46 FD 2D        	dec iyl
1358  8F48 28 18        	jr z,2F
1359  8F4A
1360  8F4A
1361  8F4A              ; --------------------------------------------------------------------------------------------------------------
1362  8F4A              ;
1363  8F4A              ;	7/4/24
1364  8F4A
1365  8F4A              Trueque
1366  8F4A
1367  8F4A              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1368  8F4A              ;  			A contiene en nº de fila de (India_SP).
1369  8F4A              ;			HL contiene (India_2_SP).
1370  8F4A
1371  8F4A D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1372  8F4B E5           	push hl										; Preservo (India_2_SP).
1373  8F4C
1374  8F4C ED 5B 20 8C  	ld de,(India_SP)
1375  8F50 EB           	ex de,hl
1376  8F51 70           	ld (hl),b
1377  8F52 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1378  8F53
1379  8F53 CD 94 8F     	call Intercambia_1_byte
1380  8F56 CD 94 8F     	call Intercambia_1_byte
1381  8F59
1382  8F59
1383  8F59              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1384  8F59              ; Recuperamos (India_2_SP) en HL.
1385  8F59
1386  8F59 2A 20 8C     	ld hl,(India_SP)
1387  8F5C 7E           	ld a,(hl)
1388  8F5D
1389  8F5D E1           	pop hl
1390  8F5E D1           	pop de
1391  8F5F
1392  8F5F              ; --------------------------------------------------------------------------------------------------------------
1393  8F5F
1394  8F5F CD 68 8F     	call Avanza_India_2_SP
1395  8F62
1396  8F62 14           2 inc d
1397  8F63 15           	dec d
1398  8F64 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1399  8F65 18 D8        	jr 1B
1400  8F67
1401  8F67 C9           	ret
1402  8F68
1403  8F68              ; ----- ----- ----- ----- -----
1404  8F68
1405  8F68              Avanza_India_2_SP
1406  8F68
1407  8F68 0D           	dec c
1408  8F69 28 0A        	jr z,Avanza_punteros_indios
1409  8F6B
1410  8F6B FD 2C        	inc iyl
1411  8F6D
1412  8F6D 2C           	inc l
1413  8F6E 2C           	inc l
1414  8F6F 2C           	inc l
1415  8F70
1416  8F70 46           	ld b,(hl)
1417  8F71 22 22 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1418  8F74
1419  8F74 C9           	ret
1420  8F75
1421  8F75              ; ----- ----- ----- ----- -----
1422  8F75
1423  8F75              Avanza_punteros_indios
1424  8F75
1425  8F75 15           	dec d
1426  8F76 28 15        	jr z,Prepara_salida
1427  8F78
1428  8F78 4A           	ld c,d
1429  8F79
1430  8F79 2A 20 8C     	ld hl,(India_SP)
1431  8F7C 2C           	inc l
1432  8F7D 2C           	inc l
1433  8F7E 2C           	inc l
1434  8F7F 7E           	ld a,(hl)
1435  8F80 22 20 8C     	ld (India_SP),hl
1436  8F83
1437  8F83 2C           	inc l
1438  8F84 2C           	inc l
1439  8F85 2C           	inc l
1440  8F86 46           	ld b,(hl)
1441  8F87 22 22 8C     	ld (India_2_SP),hl
1442  8F8A
1443  8F8A FD 2C        	inc iyl
1444  8F8C
1445  8F8C C9           	ret
1446  8F8D
1447  8F8D              Prepara_salida
1448  8F8D
1449  8F8D 21 00 89     	ld hl,Tabla_de_pintado
1450  8F90 22 20 8C     	ld (India_SP),hl
1451  8F93 C9           	ret
1452  8F94
1453  8F94
1454  8F94 2C           Intercambia_1_byte inc l
1455  8F95 1C           	inc e
1456  8F96 46           	ld b,(hl)
1457  8F97 1A           	ld a,(de)
1458  8F98 EB           	ex de,hl
1459  8F99 70           	ld (hl),b
1460  8F9A 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1461  8F9B C9           	ret
1462  8F9C
1463  8F9C              ; -----------------------------------------------------------------------------------
1464  8F9C              ;
1465  8F9C              ;	20/01/24
1466  8F9C              ;
1467  8F9C              ;
1468  8F9C
1469  8F9C              Construye_movimientos_masticados_entidad
1470  8F9C
1471  8F9C 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1472  8F9F E5           	push hl
1473  8FA0 CD E3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1474  8FA3              ;															; _ el (Contador_de_mov_masticados).
1475  8FA3 CD AC 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1476  8FA6              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1477  8FA6 CD D9 99     	call Recompone_posicion_inicio
1478  8FA9
1479  8FA9 CD 09 97     1 call Draw
1480  8FAC CD C8 8F     	call Guarda_movimiento_masticado
1481  8FAF
1482  8FAF CD 86 9D     	call Movimiento
1483  8FB2
1484  8FB2 3A 24 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1485  8FB5 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1486  8FB7 28 F0        	jr z,1B
1487  8FB9
1488  8FB9              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1489  8FB9              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1490  8FB9
1491  8FB9 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1492  8FBA 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1493  8FBD
1494  8FBD              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1495  8FBD
1496  8FBD CD EA 9E     	call Situa_en_contador_general_de_mov_masticados
1497  8FC0
1498  8FC0              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1499  8FC0              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1500  8FC0
1501  8FC0 ED 4B BA 8B  	ld bc,(Contador_de_mov_masticados)
1502  8FC4
1503  8FC4 71           	ld (hl),c
1504  8FC5 23           	inc hl
1505  8FC6 70           	ld (hl),b
1506  8FC7
1507  8FC7 C9           	ret
1508  8FC8
1509  8FC8              ; -----------------------------------------------------------------------------------
1510  8FC8              ;
1511  8FC8              ;	28/12/23
1512  8FC8              ;
1513  8FC8              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1514  8FC8              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1515  8FC8
1516  8FC8              Guarda_movimiento_masticado
1517  8FC8
1518  8FC8 ED 73 FE 8B  	ld (Stack),sp
1519  8FCC ED 7B B8 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1520  8FD0
1521  8FD0 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1522  8FD2 FD E5            push iy 												; Pushea Puntero_objeto.
1523  8FD4
1524  8FD4 ED 7B FE 8B      ld sp,(Stack)
1525  8FD8
1526  8FD8 2A BA 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1527  8FDB 23           	inc hl
1528  8FDC 22 BA 8B     	ld (Contador_de_mov_masticados),hl
1529  8FDF
1530  8FDF CD E3 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1531  8FE2              ;															; _ el (Contador_de_mov_masticados).
1532  8FE2 C9               ret
1533  8FE3
1534  8FE3              ; --------------------------------------------------------------------------------------------------------------
1535  8FE3              ;
1536  8FE3              ;	12/1/24
1537  8FE3              ;
1538  8FE3              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1539  8FE3
1540  8FE3              Actualiza_Puntero_de_almacen_de_mov_masticados
1541  8FE3
1542  8FE3 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1543  8FE6 01 04 00     	ld bc,4
1544  8FE9 A7           	and a
1545  8FEA ED 4A        	adc hl,bc
1546  8FEC 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1547  8FEF C9           	ret
1548  8FF0
1549  8FF0              ; --------------------------------------------------------------------------------------------------------------
1550  8FF0              ;
1551  8FF0              ;	24/03/24
1552  8FF0              ;
1553  8FF0              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1554  8FF0              ;
1555  8FF0              ;	IX contiene el puntero de impresión.
1556  8FF0              ;	DE contiene (Puntero_objeto).
1557  8FF0
1558  8FF0
1559  8FF0              Cargamos_registros_con_mov_masticado
1560  8FF0
1561  8FF0 ED 73 FE 8B  	ld (Stack),sp
1562  8FF4 ED 7B B8 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1563  8FF8
1564  8FF8 D1           	pop de 															; DE contiene Puntero_objeto
1565  8FF9 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1566  8FFB
1567  8FFB ED 73 B8 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1568  8FFF ED 7B FE 8B  	ld sp,(Stack)
1569  9003
1570  9003 7B           	ld a,e
1571  9004 82           	add d															; Comprueba si ya no hay datos en el almacén.
1572  9005
1573  9005 CC 9C 93     	call z,Reinicia_entidad_maliciosa
1574  9008
1575  9008 C9           	ret
1576  9009
1577  9009              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1578  9009              ;
1579  9009              ;	22/7/24
1580  9009
1581  9009              Cargamos_registros_con_explosion
1582  9009
1583  9009
1584  9009 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1585  900C CD A6 90     	call Extrae_address
1586  900F
1587  900F 5D           	ld e,l
1588  9010 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1589  9011
1590  9011 DD 2A B6 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1591  9015
1592  9015 C9           	ret
1593  9016
1594  9016
1595  9016              Cargamos_registros_con_explosion_Amadeus
1596  9016
1597  9016 2A 6D 89     	ld hl,(Pamm_Amadeus)
1598  9019 CD A6 90     	call Extrae_address
1599  901C
1600  901C 5D           	ld e,l
1601  901D 54           	ld d,h
1602  901E
1603  901E DD 2A 6B 89  	ld ix,(p.imp.amadeus)
1604  9022
1605  9022 C9           	ret
1606  9023
1607  9023              ; --------------------------------------------------------------------------------------------------------------
1608  9023              ;
1609  9023              ;	17/06/24
1610  9023              ;
1611  9023              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1612  9023              ;
1613  9023              ;	IX contiene el puntero de impresión.
1614  9023              ;	DE contiene (Puntero_objeto).
1615  9023
1616  9023
1617  9023              Cargamos_registros_con_mov_masticado_Amadeus
1618  9023
1619  9023 ED 73 FE 8B  	ld (Stack),sp
1620  9027 ED 7B 6D 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1621  902B D1           	pop de 															; DE contiene Puntero_objeto
1622  902C DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1623  902E DD 22 6B 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1624  9032 ED 7B FE 8B  	ld sp,(Stack)
1625  9036 C9           	ret
1626  9037
1627  9037              ; ---------------------------------------------------------------------------------------------------------------------
1628  9037              ;
1629  9037              ;	18/6/24
1630  9037              ;
1631  9037              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1632  9037
1633  9037              Genera_datos_de_impresion_Amadeus
1634  9037
1635  9037 3A 6A 89     	ld a,(Impacto_Amadeus)
1636  903A A7           	and a
1637  903B 20 03        	jr nz,1F
1638  903D
1639  903D              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1640  903D              ; _apuntando a la correspondiente explosión.
1641  903D
1642  903D CD 23 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1643  9040
1644  9040 DD 7D        1 ld a,ixl
1645  9042 E6 1F        	and $1f
1646  9044 32 67 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1647  9047
1648  9047 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1649  904A E5           	push hl
1650  904B
1651  904B 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
1652  904E 22 1E 8C     	ld (Scanlines_album_SP),hl
1653  9051
1654  9051 CD F1 94     	call Genera_datos_de_impresion
1655  9054
1656  9054 E1           	pop hl
1657  9055 22 1E 8C     	ld (Scanlines_album_SP),hl
1658  9058
1659  9058 C9           	ret
1660  9059
1661  9059              ; ---------------------------------------------------------------------------------------------------------------------
1662  9059              ;
1663  9059              ;	13/03/24
1664  9059              ;
1665  9059              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1666  9059
1667  9059              Inicia_albumes_de_lineas
1668  9059
1669  9059 21 00 80     	ld hl,Scanlines_album
1670  905C 22 02 8C     	ld (Album_de_pintado),hl
1671  905F 22 1E 8C     	ld (Scanlines_album_SP),hl
1672  9062
1673  9062 21 1A 81     	ld hl,Scanlines_album_2
1674  9065 22 04 8C     	ld (Album_de_borrado),hl
1675  9068
1676  9068 C9           	ret
1677  9069
1678  9069              Inicia_albumes_de_lineas_Amadeus
1679  9069
1680  9069 21 34 82     	ld hl,Amadeus_scanlines_album
1681  906C 22 06 8C     	ld (Album_de_pintado_Amadeus),hl
1682  906F 21 58 82     	ld hl,Amadeus_scanlines_album_2
1683  9072 22 08 8C     	ld (Album_de_borrado_Amadeus),hl
1684  9075
1685  9075 C9           	ret
1686  9076
1687  9076              Inicia_albumes_de_disparos
1688  9076
1689  9076 21 7C 82     	ld hl,Disparos_scanlines_album
1690  9079 22 0A 8C     	ld (Album_de_pintado_disparos),hl
1691  907C 21 B8 82     	ld hl,Disparos_scanlines_album_2
1692  907F 22 0C 8C     	ld (Album_de_borrado_disparos),hl
1693  9082
1694  9082 21 7C 82     	ld hl,Disparos_scanlines_album
1695  9085 22 0E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1696  9088
1697  9088 C9           	ret
1698  9089
1699  9089              ; ---------------------------------------------------------------------------------------------------------------------
1700  9089              ;
1701  9089              ; 8/1/23
1702  9089              ;
1703  9089              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1704  9089              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1705  9089              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1706  9089
1707  9089              ; Destruye HL y DE !!!!!
1708  9089
1709  9089              Inicia_punteros_de_cajas
1710  9089
1711  9089 21 54 89     	ld hl,Indice_de_cajas_de_entidades
1712  908C CD A6 90         call Extrae_address
1713  908F 22 F1 8B         ld (Puntero_store_caja),hl
1714  9092 21 56 89     	ld hl,Indice_de_cajas_de_entidades+2
1715  9095 22 F5 8B     	ld (Indice_restore_caja),hl
1716  9098 CD A6 90     	call Extrae_address
1717  909B 22 F3 8B     	ld (Puntero_restore_caja),hl
1718  909E C9               ret
1719  909F
1720  909F              ; *************************************************************************************************************************************************************
1721  909F              ;
1722  909F              ; 8/1/23
1723  909F              ;
1724  909F              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1725  909F
1726  909F 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1727  90A2 22 27 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1728  90A5 C9           	ret
1729  90A6
1730  90A6              ; *************************************************************************************************************************************************************
1731  90A6              ;
1732  90A6              ; 20/10/22
1733  90A6              ;
1734  90A6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1735  90A6              ;
1736  90A6              ; Destruye el puntero y DE !!!!!
1737  90A6
1738  90A6 5E           Extrae_address ld e,(hl)
1739  90A7 23           	inc hl
1740  90A8 56           	ld d,(hl)
1741  90A9 2B           	dec hl
1742  90AA EB           	ex de,hl
1743  90AB C9           	ret
1744  90AC
1745  90AC              ; *************************************************************************************************************************************************************
1746  90AC              ;
1747  90AC              ;	20/1/24
1748  90AC              ;
1749  90AC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1750  90AC              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1751  90AC              ;
1752  90AC              ;   Destruye HL y BC !!!!!,
1753  90AC              ;
1754  90AC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1755  90AC              ;					"0" ..... Izquierda.
1756  90AC
1757  90AC              Inicia_Puntero_objeto
1758  90AC
1759  90AC 3A D0 8B     	ld a,(Cuad_objeto)
1760  90AF E6 01        	and 1
1761  90B1 F5           	push af
1762  90B2 CC CE 90     	call z,Inicia_puntero_objeto_izq
1763  90B5 F1           	pop af
1764  90B6 C8           	ret z
1765  90B7 CD BB 90     	call Inicia_puntero_objeto_der
1766  90BA C9           	ret
1767  90BB
1768  90BB              ; Arrancamos desde la parte izquierda de la pantalla.
1769  90BB              ; Iniciamos (Indice_Sprite_der).
1770  90BB
1771  90BB 2A C6 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1772  90BE 22 CA 8B     	ld (Puntero_DESPLZ_der),hl
1773  90C1 CD A6 90     	call Extrae_address
1774  90C4 22 C3 8B     	ld (Puntero_objeto),hl
1775  90C7
1776  90C7 2A C8 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1777  90CA 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
1778  90CD C9           	ret
1779  90CE
1780  90CE              ; Arrancamos desde la parte derecha de la pantalla.
1781  90CE              ; Iniciamos (Indice_Sprite_izq).
1782  90CE
1783  90CE 2A C8 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1784  90D1 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
1785  90D4 CD A6 90     	call Extrae_address
1786  90D7 22 C3 8B     	ld (Puntero_objeto),hl
1787  90DA
1788  90DA 2A C6 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1789  90DD 22 CA 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1790  90E0 C9           	ret
1791  90E1
1792  90E1              ; **************************************************************************************************
1793  90E1              ;
1794  90E1              ;	06/07/24
1795  90E1              ;
1796  90E1              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1797  90E1
1798  90E1              Restore_entidad
1799  90E1
1800  90E1 2A F1 8B     	ld hl,(Puntero_store_caja)
1801  90E4 7E           	ld a,(hl)
1802  90E5 A7           	and a
1803  90E6 CC F4 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1804  90E9 28 F6        	jr z,Restore_entidad
1805  90EB
1806  90EB 11 B1 8B     	ld de,Bandeja_DRAW
1807  90EE 01 0C 00     	ld bc,12
1808  90F1 ED B0        	ldir
1809  90F3 C9           	ret
1810  90F4
1811  90F4              ; **************************************************************************************************
1812  90F4              ;
1813  90F4              ;	08/05/23
1814  90F4              ;
1815  90F4              ;	Incrementamos los dos punteros de entidades. (+1).
1816  90F4
1817  90F4              Incrementa_punteros_de_cajas
1818  90F4
1819  90F4 2A F3 8B     	ld hl,(Puntero_restore_caja)
1820  90F7 22 F1 8B     	ld (Puntero_store_caja),hl
1821  90FA 2A F5 8B     	ld hl,(Indice_restore_caja)
1822  90FD 23           	inc hl
1823  90FE 23           	inc hl
1824  90FF 22 F5 8B     	ld (Indice_restore_caja),hl
1825  9102 CD A6 90         call Extrae_address
1826  9105 22 F3 8B         ld (Puntero_restore_caja),hl
1827  9108 C9               ret
1828  9109
1829  9109              ; -----------------------------------------------------------
1830  9109
1831  9109              ; Teclado.
1832  9109
1833  9109 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1834  910B DB FE        	in a,($fe)
1835  910D E6 01        	and $01
1836  910F 28 02        	jr z,1f
1837  9111 18 F6        	jr Pulsa_ENTER
1838  9113 C9           1 ret
1839  9114
1840  9114              ; **************************************************************************************************
1841  9114              ;
1842  9114              ; Temporización.
1843  9114
1844  9114              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1845  9114              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1846  9114              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1847  9114              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1848  9114
1849  9114              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1850  9114              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1851  9114              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1852  9114
1853  9114              ; A partir de $4f61 no hace falta DELAY.
1854  9114
1855  9114              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1856  9114
1857  9114              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1858  9114              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1859  9114              ;	LD A,B
1860  9114              ;	AND A
1861  9114              ;	JR NZ,wait
1862  9114              ;	RET
1863  9114
1864  9114              ; ---------------------------------------------------------------------------------------------------------------
1865  9114              ;
1866  9114              ;	13/07/24
1867  9114              ;
1868  9114
1869  9114              Inicia_Shield
1870  9114
1871  9114 21 46 8C     	ld hl,Datos_Shield
1872  9117 22 4A 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1873  911A
1874  911A 7E           	ld a,(hl)
1875  911B 32 4D 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1876  911E
1877  911E 3E 01        	ld a,1
1878  9120 32 4E 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1879  9123
1880  9123 C9           	ret
1881  9124
1882  9124              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1883  9124              ;
1884  9124              ;	4/6/24
1885  9124              ;
1886  9124              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1887  9124              ;
1888  9124              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1889  9124              ;
1890  9124
1891  9124              Actualiza_pantalla
1892  9124
1893  9124 3E 02        	ld a,2
1894  9126 D3 FE        	out ($fe),a
1895  9128
1896  9128 3A 24 8C     	ld a,(Ctrl_3)
1897  912B CB 57        	bit 2,a
1898  912D 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1899  912F
1900  912F              Borrando_entidades
1901  912F
1902  912F 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1903  9132 CD A6 90     	call Extrae_address
1904  9135 24           	inc h
1905  9136 25           	dec h
1906  9137 28 05        	jr z,Pintando_entidades
1907  9139 CD E6 95     	call Pinta_Sprites
1908  913C 18 F1        	jr Borrando_entidades
1909  913E
1910  913E              Pintando_entidades
1911  913E
1912  913E 2A 20 8C     	ld hl,(India_SP)
1913  9141 2C           	inc l
1914  9142 CD A6 90     	call Extrae_address
1915  9145 24           	inc h
1916  9146 25           	dec h
1917  9147 28 0E        	jr z,Ejecuta_escudo
1918  9149 1C           	inc e
1919  914A 1C           	inc e
1920  914B ED 53 20 8C  	ld (India_SP),de
1921  914F CD A6 90     	call Extrae_address
1922  9152 CD E6 95     	call Pinta_Sprites
1923  9155 18 E7        	jr Pintando_entidades
1924  9157
1925  9157              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1926  9157
1927  9157              Ejecuta_escudo
1928  9157
1929  9157 3A 4C 8C     	ld a,(Shield)
1930  915A A7           	and a
1931  915B 20 2F        	jr nz,Aplica_Shield
1932  915D
1933  915D              Borrando_Amadeus
1934  915D
1935  915D 21 24 8C     	ld hl,Ctrl_3
1936  9160 CB 6E        	bit 5,(hl)
1937  9162 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1938  9164
1939  9164 2A 08 8C     	ld hl,(Album_de_borrado_Amadeus)
1940  9167 CD A6 90     	call Extrae_address
1941  916A 24           	inc h
1942  916B 25           	dec h
1943  916C 28 03        	jr z,Pintando_Amadeus
1944  916E CD E6 95     	call Pinta_Sprites
1945  9171
1946  9171              Pintando_Amadeus
1947  9171
1948  9171 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
1949  9174 CD A6 90     	call Extrae_address
1950  9177 24           	inc h
1951  9178 25           	dec h
1952  9179 28 03        	jr z,1F
1953  917B CD E6 95     	call Pinta_Sprites
1954  917E
1955  917E              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1956  917E
1957  917E 21 24 8C     1 ld hl,Ctrl_3
1958  9181 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1959  9183 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1960  9185 CB AE        	res 5,(hl)
1961  9187
1962  9187 3E 01        	ld a,1												; Borde azul.
1963  9189 D3 FE        	out ($fe),a
1964  918B
1965  918B C9           	ret
1966  918C
1967  918C              Aplica_Shield
1968  918C
1969  918C              ;	Bit 1 "1" (Shield_3) Sólo borra.
1970  918C              ;		  "0"     ""     Borra/Pinta.
1971  918C              ;	Bit 2    ""  RET.	 No borra, no pinta.
1972  918C
1973  918C 21 4E 8C     	ld hl,Shield_3
1974  918F
1975  918F CB 5E        	bit 3,(hl)
1976  9191 20 DE        	jr nz,Pintando_Amadeus
1977  9193
1978  9193 CB 56        	bit 2,(hl)
1979  9195 20 E7        	jr nz,1B
1980  9197
1981  9197 CB 4E        	bit 1,(hl)
1982  9199 C4 A0 91     	call nz,Borra_Amadeus_shield
1983  919C
1984  919C 28 BF        	jr z,Borrando_Amadeus
1985  919E 18 DE        	jr 1B
1986  91A0
1987  91A0              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1988  91A0
1989  91A0              Borra_Amadeus_shield
1990  91A0
1991  91A0 3A 24 8C     	ld a,(Ctrl_3)
1992  91A3 CB 6F        	bit 5,a
1993  91A5 28 08        	jr z,1F
1994  91A7
1995  91A7 2A 08 8C     	ld hl,(Album_de_borrado_Amadeus)
1996  91AA CD A6 90     	call Extrae_address
1997  91AD 18 06        	jr 2F
1998  91AF
1999  91AF 2A 06 8C     1 ld hl,(Album_de_pintado_Amadeus)
2000  91B2 CD A6 90     	call Extrae_address
2001  91B5
2002  91B5 CD E6 95     2 call Pinta_Sprites
2003  91B8
2004  91B8 AF           	xor a
2005  91B9 3C           	inc a											; Asegura NZ en la salida de la rutina.
2006  91BA
2007  91BA C9           	ret
2008  91BB
2009  91BB              Pinta_Amadeus_shield
2010  91BB
2011  91BB 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
2012  91BE CD A6 90     	call Extrae_address
2013  91C1 CD E6 95     	call Pinta_Sprites
2014  91C4
2015  91C4 AF           	xor a
2016  91C5 3C           	inc a											; Asegura NZ en la salida de la rutina.
2017  91C6
2018  91C6 C9           	ret
2019  91C7
2020  91C7              Borra_Pinta_Amadeus_shield
2021  91C7
2022  91C7 CD A0 91     	call Borra_Amadeus_shield
2023  91CA CD BB 91     	call Pinta_Amadeus_shield
2024  91CD C9           	ret
2025  91CE
2026  91CE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2027  91CE              ;
2028  91CE              ;	19/6/24
2029  91CE              ;
2030  91CE
2031  91CE              Teclado
2032  91CE
2033  91CE              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2034  91CE
2035  91CE 3E F7        	ld a,$f7												; "5" para disparar.
2036  91D0 DB FE        	in a,($fe)
2037  91D2 E6 10        	and $10
2038  91D4
2039  91D4 CC 61 A0     	call z,Genera_disparo_Amadeus
2040  91D7
2041  91D7 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2042  91D9 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2043  91DB E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2044  91DD CC 53 9D         call z,Amadeus_a_izquierda
2045  91E0
2046  91E0 3E F7        	ld a,$f7
2047  91E2 DB FE        	in a,($fe)
2048  91E4 E6 01        	and $01
2049  91E6 C8           	ret z
2050  91E7
2051  91E7 3E F7        	ld a,$f7
2052  91E9 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2053  91EB E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2054  91ED CC 6B 9D     	call z,Amadeus_a_derecha
2055  91F0
2056  91F0 C9           	ret
2057  91F1
2058  91F1              ; ------------------------------------------------------------------------------------------------------------------------
2059  91F1              ;
2060  91F1              ;	06/07/24
2061  91F1              ;
2062  91F1
2063  91F1              Genera_explosion
2064  91F1
2065  91F1 21 34 8C     	ld hl,Clock_explosion
2066  91F4 35           	dec (hl)
2067  91F5 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2068  91F7
2069  91F7              Borra_entidad_colisionada
2070  91F7
2071  91F7 CD 00 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2072  91FA CD 09 90     	call Cargamos_registros_con_explosion
2073  91FD CD F1 94     	call Genera_datos_de_impresion
2074  9200
2075  9200 AF           	xor a
2076  9201 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2077  9202
2078  9202 C9           	ret
2079  9203
2080  9203              Siguiente_frame_explosion
2081  9203
2082  9203 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2083  9205
2084  9205              ; Avanza Frame de explosión.
2085  9205
2086  9205 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2087  9208 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2088  920B
2089  920B 79           	ld a,c
2090  920C 95           	sub l
2091  920D 20 0B        	jr nz,1F
2092  920F
2093  920F              ; Fín de la entidad !!!!!!!!!!!!!
2094  920F
2095  920F 21 F8 8B     	ld hl,Numero_parcial_de_entidades
2096  9212 35           	dec (hl)
2097  9213 23           	inc hl
2098  9214 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2099  9215
2100  9215 CD 71 93     	call Limpiamos_bandeja_DRAW
2101  9218 18 DD        	jr Borra_entidad_colisionada
2102  921A
2103  921A 23           1 inc hl
2104  921B 23           	inc hl
2105  921C 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2106  921F 18 D6        	jr Borra_entidad_colisionada
2107  9221
2108  9221              ; ----- ----- ----- ----- -----
2109  9221
2110  9221              Genera_explosion_Amadeus
2111  9221
2112  9221 21 35 8C     	ld hl,Clock_explosion_Amadeus
2113  9224 35           	dec (hl)
2114  9225 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2115  9227
2116  9227              Borra_Amadeus_impactado
2117  9227
2118  9227 CD 77 8E     	call Change_Amadeus
2119  922A CD 16 90     	call Cargamos_registros_con_explosion_Amadeus
2120  922D CD 37 90     	call Genera_datos_de_impresion_Amadeus
2121  9230
2122  9230 21 24 8C     	ld hl,Ctrl_3
2123  9233 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2124  9235
2125  9235 AF           	xor a
2126  9236 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2127  9237
2128  9237 C9           	ret
2129  9238
2130  9238              Siguiente_frame_explosion_Amadeus
2131  9238
2132  9238 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2133  923A
2134  923A              ; Avanza Frame de explosión.
2135  923A
2136  923A 2A 6D 89     	ld hl,(Pamm_Amadeus)
2137  923D 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2138  9240
2139  9240 79           	ld a,c
2140  9241 95           	sub l
2141  9242 20 0B        	jr nz,1F
2142  9244
2143  9244              ; Fín de Amadeus !!!!!!!!!!!!!
2144  9244              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2145  9244
2146  9244 AF           	xor a
2147  9245 32 6A 89     	ld (Impacto_Amadeus),a
2148  9248 21 24 8C     	ld hl,Ctrl_3
2149  924B CB F6        	set 6,(hl)
2150  924D
2151  924D 18 D8        	jr Borra_Amadeus_impactado
2152  924F
2153  924F 23           1 inc hl
2154  9250 23           	inc hl
2155  9251 22 6D 89     	ld (Pamm_Amadeus),hl
2156  9254 18 D1        	jr Borra_Amadeus_impactado
2157  9256
2158  9256              ; ---------------------------------------------------------------
2159  9256
2160  9256              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9256              ; ******************************************************************************************************************************************************************************************
   2+ 9256              ;
   3+ 9256              ;   21/04/24
   4+ 9256              ;
   5+ 9256              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9256              ;   (XOR) bit a bit.
   7+ 9256              ;
   8+ 9256              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9256
  10+ 9256              Derivando_RND
  11+ 9256
  12+ 9256 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9259
  14+ 9259 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 925B C5               push bc
  16+ 925C              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 925C 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 925F              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 925F
  20+ 925F A7           6 and a                                 ; Carry a "0".
  21+ 9260 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9262 30 02            jr nc,1F
  23+ 9264
  24+ 9264 CB C1            set 0,c
  25+ 9266
  26+ 9266 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9267 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9269 5F               ld e,a
  29+ 926A
  30+ 926A 7A               ld a,d
  31+ 926B E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 926D 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 926F
  34+ 926F CB 3F            srl a
  35+ 9271
  36+ 9271 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9272
  38+ 9272 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9273 28 04            jr z,4F
  40+ 9275
  41+ 9275 CB FF            set 7,a
  42+ 9277 18 02            jr 5F
  43+ 9279
  44+ 9279 CB BF        4 res 7,a
  45+ 927B
  46+ 927B CB 21        5 sla c
  47+ 927D 10 E0            djnz 6B
  48+ 927F
  49+ 927F 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9280
  51+ 9280 77               ld (hl),a
  52+ 9281 23               inc hl
  53+ 9282 C1               pop bc
  54+ 9283 10 D4            djnz 3B
  55+ 9285
  56+ 9285 C9               ret
  57+ 9286
  58+ 9286
  59+ 9286
# file closed: RND_Derivando.asm
2161  9286              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9286              ;---------------------------------------------------------------------------------------------------------------
   2+ 9286              ;
   3+ 9286              ;   8/3/24
   4+ 9286              ;
   5+ 9286              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9286              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9286              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9286              ;	_ de la 1ª entidad del Nivel.
   9+ 9286              ;
  10+ 9286              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9286
  12+ 9286              ;	MODIFICA: HL,DE y A.
  13+ 9286              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9286
  15+ 9286              Inicializa_Nivel
  16+ 9286
  17+ 9286 2A 42 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9289 CD A6 90     	call Extrae_address
  19+ 928C 7E           	ld a,(hl)
  20+ 928D 32 F7 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9290 23           	inc hl
  22+ 9291 CD 9E 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9294 22 44 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9297 CD A7 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 929A
  26+ 929A CD B8 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 929D C9           	ret
  28+ 929E
  29+ 929E              ; ----------------------
  30+ 929E
  31+ 929E 11 D6 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A1 01 04 00     	ld bc,4
  33+ 92A4 ED B0        	ldir
  34+ 92A6 C9           	ret
  35+ 92A7
  36+ 92A7 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92A8 CD 42 94         call Calcula_salto_en_BC
  38+ 92AB 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92AE A7               and a
  40+ 92AF ED 4A            adc hl,bc
  41+ 92B1 CD A6 90         call Extrae_address
  42+ 92B4 22 E2 8B         ld (Puntero_indice_mov),hl
  43+ 92B7 C9               ret
  44+ 92B8
  45+ 92B8 3A B1 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92BB CD 42 94     	call Calcula_salto_en_BC
  47+ 92BE 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C1 A7               and a
  49+ 92C2 ED 4A            adc hl,bc
  50+ 92C4 CD A6 90         call Extrae_address
  51+ 92C7 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92CA C9           	ret
  53+ 92CB
  54+ 92CB              ;---------------------------------------------------------------------------------------------------------------
  55+ 92CB              ;
  56+ 92CB              ;   5/1/24
  57+ 92CB              ;
  58+ 92CB              ;	Destruye A,BC,HL,DE
  59+ 92CB
  60+ 92CB              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92CB              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92CB
  63+ 92CB              Inicia_Entidades
  64+ 92CB
  65+ 92CB              ; Preparamos los punteros de las cajas de entidades:
  66+ 92CB
  67+ 92CB CD 89 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92CE              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92CE CD 8A 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D1
  71+ 92D1 2A 44 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92D4
  73+ 92D4 22 44 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92D7
  75+ 92D7 CD F0 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92DA
  77+ 92DA 2A 44 8C     	ld hl,(Datos_de_nivel)
  78+ 92DD
  79+ 92DD              ; En este punto:
  80+ 92DD              ;
  81+ 92DD              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92DD              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92DD
  84+ 92DD C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92DE
  86+ 92DE 7E           	ld a,(hl)
  87+ 92DF CD 5C 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92E2
  89+ 92E2 CD 54 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92E5
  91+ 92E5              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92E5
  93+ 92E5 CD 12 94     	call Busca_mov_masticados_segun_tipo
  94+ 92E8
  95+ 92E8 A7           	and a
  96+ 92E9 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92EB
  98+ 92EB              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92EB
 100+ 92EB              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92EB              ;	_ de este tipo de entidad.
 102+ 92EB
 103+ 92EB CD EA 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92EE CD F7 9E     	call Transfiere_datos_de_contadores
 105+ 92F1
 106+ 92F1 18 06        	jr 4F
 107+ 92F3
 108+ 92F3 CD 9C 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92F6
 110+ 92F6              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92F6              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92F6              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92F6              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92F6              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92F6
 116+ 92F6 CD D0 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92F9              ;																; _ Mov_masticados ya generados.
 118+ 92F9
 119+ 92F9 CD F0 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92FC
 121+ 92FC DD E5        	push ix
 122+ 92FE E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92FF
 124+ 92FF D5           	push de
 125+ 9300 CD C5 94     	call Genera_coordenadas
 126+ 9303
 127+ 9303 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 128+ 9307 CD 00 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 930A D1           	pop de
 130+ 930B
 131+ 930B CD F1 94     	call Genera_datos_de_impresion
 132+ 930E              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 930E              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 930E              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 930E              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 930E
 137+ 930E CD 94 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9311
 139+ 9311              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9311
 141+ 9311 ED 5B F1 8B  	ld de,(Puntero_store_caja)
 142+ 9315 CD 81 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9318
 144+ 9318 CD 71 93     	call Limpiamos_bandeja_DRAW
 145+ 931B CD F4 90     	call Incrementa_punteros_de_cajas
 146+ 931E
 147+ 931E              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 931E              ; _ entidad del Nivel.
 149+ 931E
 150+ 931E 3A 25 8C     	ld a,(Ctrl_4)
 151+ 9321 E6 F0        	and $f0
 152+ 9323 32 25 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9326
 154+ 9326              ; Siguiente entidad del Nivel.
 155+ 9326
 156+ 9326 2A 44 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9329 23           	inc hl 														; _ entidad del Nivel.
 158+ 932A
 159+ 932A C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 932B
 161+ 932B 10 A7        	djnz 2B
 162+ 932D
 163+ 932D C9           	ret
 164+ 932E
 165+ 932E              ; -------------------------------------------------------------------------------------------------------------------
 166+ 932E              ;
 167+ 932E              ;	27/5/24
 168+ 932E              ;
 169+ 932E              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 932E              ;
 171+ 932E
 172+ 932E              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 932E              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 932E
 175+ 932E 21 E4 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9331 CD 54 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9334
 178+ 9334
 179+ 9334              Construye_movimientos_masticados_Amadeus
 180+ 9334
 181+ 9334 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9337 CD E3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 933A              ;															; _ el (Contador_de_mov_masticados).
 184+ 933A CD AC 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 933D              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 933D
 187+ 933D              ; Generamos movimientos masticados de Amadeus.
 188+ 933D
 189+ 933D 06 79        	ld b,121												; $0079, 121d.
 190+ 933F
 191+ 933F C5           1 push bc
 192+ 9340 CD 09 97     	call Draw
 193+ 9343 CD C8 8F     	call Guarda_movimiento_masticado
 194+ 9346
 195+ 9346 CD 7D 9A     	call Mov_right
 196+ 9349 CD 7D 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 934C
 198+ 934C C1           	pop bc
 199+ 934D 10 F0        	djnz 1B
 200+ 934F
 201+ 934F              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 934F
 203+ 934F              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 934F              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 934F
 206+ 934F 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9352 01 08 00     	ld bc,8
 208+ 9355 A7           	and a
 209+ 9356 ED 42        	sbc hl,bc
 210+ 9358 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 935B
 212+ 935B C9           	ret
 213+ 935C
 214+ 935C              ; ---------------------------------------------------------------------
 215+ 935C              ;
 216+ 935C              ;	10/02/24
 217+ 935C              ;
 218+ 935C              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 935C              ;
 220+ 935C              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 935C
 222+ 935C              Definicion_segun_tipo
 223+ 935C
 224+ 935C CD 42 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 935F 21 C6 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9362 CD 4A 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9365 C9           	ret
 228+ 9366
 229+ 9366              ; ---------------------------------------------------------------------
 230+ 9366              ;
 231+ 9366              ;	6/7/24
 232+ 9366
 233+ 9366
 234+ 9366              Store_Restore_cajas
 235+ 9366
 236+ 9366 ED 5B F1 8B  	ld de,(Puntero_store_caja)
 237+ 936A CD 81 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 936D CD F4 90     	call Incrementa_punteros_de_cajas
 239+ 9370 C9           	ret
 240+ 9371
 241+ 9371              ; ---------------------------------------------------------------------
 242+ 9371              ;
 243+ 9371              ;	23/6/24
 244+ 9371              ;
 245+ 9371              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9371              ;
 247+ 9371              ;	MODIFY: HL
 248+ 9371
 249+ 9371              Limpiamos_bandeja_DRAW
 250+ 9371
 251+ 9371 ED 73 FE 8B  	ld (Stack),sp
 252+ 9375 31 D6 8B     	ld sp,Vel_left
 253+ 9378
 254+ 9378 AF           	xor a
 255+ 9379 67           	ld h,a
 256+ 937A 6F           	ld l,a
 257+ 937B
 258+ 937B E5           	push hl
 259+ 937C E5           	push hl
 260+ 937D E5           	push hl
 261+ 937E E5           	push hl
 262+ 937F E5           	push hl
 263+ 9380 E5           	push hl
 264+ 9381 E5           	push hl
 265+ 9382 E5           	push hl
 266+ 9383 E5           	push hl
 267+ 9384 E5           	push hl
 268+ 9385 E5           	push hl
 269+ 9386 E5           	push hl
 270+ 9387 E5           	push hl
 271+ 9388 E5           	push hl
 272+ 9389 E5           	push hl
 273+ 938A E5           	push hl
 274+ 938B E5           	push hl
 275+ 938C E5           	push hl
 276+ 938D
 277+ 938D 33           	inc sp
 278+ 938E
 279+ 938E E5           	push hl
 280+ 938F ED 7B FE 8B  	ld sp,(Stack)
 281+ 9393
 282+ 9393 C9           	ret
 283+ 9394
 284+ 9394              ; ---------------------------------------------------------------------
 285+ 9394              ;
 286+ 9394              ;	24/03/24
 287+ 9394
 288+ 9394 2A BA 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9397 2B           	dec hl
 290+ 9398 22 BA 8B     	ld (Contador_de_mov_masticados),hl
 291+ 939B C9           	ret
 292+ 939C
 293+ 939C              ; ---------------------------------------------------------------------
 294+ 939C              ;
 295+ 939C              ;	8/5/24
 296+ 939C
 297+ 939C              Reinicia_entidad_maliciosa
 298+ 939C
 299+ 939C              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 939C
 301+ 939C CD EA 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 939F CD F7 9E     	call Transfiere_datos_de_contadores
 303+ 93A2
 304+ 93A2              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93A2
 306+ 93A2 3A B1 8B     	ld a,(Tipo)
 307+ 93A5 CD 5C 93     	call Definicion_segun_tipo
 308+ 93A8
 309+ 93A8 E5           	push hl
 310+ 93A9 DD E1        	pop ix
 311+ 93AB
 312+ 93AB DD 6E 0B     	ld l,(ix+11)
 313+ 93AE DD 66 0C     	ld h,(ix+12)
 314+ 93B1
 315+ 93B1 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93B4
 317+ 93B4 CD F0 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93B7
 319+ 93B7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93B7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93B7              ; Ejemplos.
 322+ 93B7
 323+ 93B7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93B7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93B7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93B7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93B7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93B7
 329+ 93B7 21 B4 8B     	ld hl,Contador_de_vueltas
 330+ 93BA CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93BC
 332+ 93BC 7E           	ld a,(hl)
 333+ 93BD CB 2F        	sra a
 334+ 93BF CB 2F        	sra a
 335+ 93C1
 336+ 93C1 32 BC 8B     	ld (Velocidad),a
 337+ 93C4
 338+ 93C4 3E 40        	ld a,$40
 339+ 93C6 BE           	cp (hl)
 340+ 93C7 C0           	ret nz
 341+ 93C8
 342+ 93C8              ; Límitador.
 343+ 93C8
 344+ 93C8              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93C8
 346+ 93C8 CB 2E        	sra (hl)
 347+ 93CA 21 BC 8B     	ld hl,Velocidad
 348+ 93CD CB 2E        	sra (hl)
 349+ 93CF
 350+ 93CF C9           	ret
 351+ 93D0
 352+ 93D0              ; ---------------------------------------------------------------------
 353+ 93D0              ;
 354+ 93D0              ;	22/01/24
 355+ 93D0
 356+ 93D0 21 25 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93D3 CB 46        	bit 0,(hl)
 358+ 93D5 20 0D        	jr nz,1F
 359+ 93D7 CB 4E        	bit 1,(hl)
 360+ 93D9 20 0C        	jr nz,2F
 361+ 93DB CB 56        	bit 2,(hl)
 362+ 93DD 20 0B        	jr nz,3F
 363+ 93DF CB 5E        	bit 3,(hl)
 364+ 93E1 20 0A        	jr nz,4F
 365+ 93E3 C9           	ret
 366+ 93E4
 367+ 93E4 CB E6        1 set 4,(hl)
 368+ 93E6 C9           	ret
 369+ 93E7 CB EE        2 set 5,(hl)
 370+ 93E9 C9           	ret
 371+ 93EA CB F6        3 set 6,(hl)
 372+ 93EC C9           	ret
 373+ 93ED CB FE        4 set 7,(hl)
 374+ 93EF C9           	ret
 375+ 93F0
 376+ 93F0              ; ---------------------------------------------------------------------
 377+ 93F0              ;
 378+ 93F0              ;	23/01/24
 379+ 93F0              ;
 380+ 93F0              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F0              ;
 382+ 93F0              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F0              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F0              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F0              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F0
 387+ 93F0              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F0
 389+ 93F0 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F1 3D           	dec a
 391+ 93F2 20 06        	jr nz,1F
 392+ 93F4
 393+ 93F4              ; --- Tipo_1
 394+ 93F4
 395+ 93F4 21 25 8C     	ld hl,Ctrl_4
 396+ 93F7 CB C6        	set 0,(hl)
 397+ 93F9 C9           	ret
 398+ 93FA
 399+ 93FA 3D           1 dec a
 400+ 93FB 20 06        	jr nz,2F
 401+ 93FD
 402+ 93FD              ; --- Tipo_2
 403+ 93FD
 404+ 93FD 21 25 8C     	ld hl,Ctrl_4
 405+ 9400 CB CE        	set 1,(hl)
 406+ 9402 C9           	ret
 407+ 9403
 408+ 9403 3D           2 dec a
 409+ 9404 20 06        	jr nz,3F
 410+ 9406
 411+ 9406              ; --- Tipo_3
 412+ 9406
 413+ 9406 21 25 8C     	ld hl,Ctrl_4
 414+ 9409 CB D6        	set 2,(hl)
 415+ 940B C9           	ret
 416+ 940C
 417+ 940C              ; --- Tipo_3
 418+ 940C
 419+ 940C 21 25 8C     3 ld hl,Ctrl_4
 420+ 940F CB D6        	set 2,(hl)
 421+ 9411 C9           	ret
 422+ 9412
 423+ 9412              ; ---------------------------------------------------------------------
 424+ 9412              ;
 425+ 9412              ;	22/01/24
 426+ 9412
 427+ 9412 21 25 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9415 CB 46        	bit 0,(hl)
 429+ 9417 20 0E        	jr nz,1F
 430+ 9419
 431+ 9419 CB 4E        	bit 1,(hl)
 432+ 941B 20 10        	jr nz,2F
 433+ 941D
 434+ 941D CB 56        	bit 2,(hl)
 435+ 941F 20 12        	jr nz,3F
 436+ 9421
 437+ 9421 CB 5E        	bit 3,(hl)
 438+ 9423 20 14        	jr nz,4F
 439+ 9425 18 19        	jr 6F
 440+ 9427
 441+ 9427              ; Entidad_de_Tipo_1.
 442+ 9427
 443+ 9427 CB 66        1 bit 4,(hl)
 444+ 9429 28 15        	jr z,6F
 445+ 942B 18 10        	jr 5F
 446+ 942D
 447+ 942D              ; Entidad_de_Tipo_2.
 448+ 942D
 449+ 942D CB 6E        2 bit 5,(hl)
 450+ 942F 28 0F        	jr z,6F
 451+ 9431 18 0A        	jr 5F
 452+ 9433
 453+ 9433              ; Entidad_de_Tipo_3.
 454+ 9433
 455+ 9433 CB 76        3 bit 6,(hl)
 456+ 9435 28 09        	jr z,6F
 457+ 9437 18 04        	jr 5F
 458+ 9439
 459+ 9439              ; Entidad_de_Tipo_4.
 460+ 9439
 461+ 9439 CB 7E        4 bit 7,(hl)
 462+ 943B 28 03        	jr z,6F
 463+ 943D
 464+ 943D              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 943D
 466+ 943D AF           5 xor a
 467+ 943E 3C           	inc a
 468+ 943F C9           	ret
 469+ 9440
 470+ 9440              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9440
 472+ 9440 AF           6 xor a
 473+ 9441 C9           	ret
 474+ 9442
 475+ 9442              ;	------------------------------------------------------------------------------------
 476+ 9442              ;
 477+ 9442              ;	12/01/24
 478+ 9442              ;
 479+ 9442              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9442              ;
 481+ 9442              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9442              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9442
 484+ 9442 CB 27        Calcula_salto_en_BC sla a
 485+ 9444 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9446 4F           	ld c,a
 487+ 9447 06 00        	ld b,0
 488+ 9449 C9           	ret
 489+ 944A
 490+ 944A              ; ------------------------------------------------------------------
 491+ 944A              ;
 492+ 944A              ;	19/1/24
 493+ 944A              ;
 494+ 944A              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 944A              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 944A
 497+ 944A A7           Situa_en_datos_de_definicion and a
 498+ 944B ED 4A        	adc hl,bc
 499+ 944D CD A6 90     	call Extrae_address
 500+ 9450 22 FC 8B         ld (Datos_de_entidad),hl
 501+ 9453 C9           	ret
 502+ 9454
 503+ 9454              ; ------------------------------------------------------------------
 504+ 9454
 505+ 9454              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9454              ; 	inc de
 507+ 9454              ; 	inc de
 508+ 9454              ; 	ex de,hl
 509+ 9454              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9454              ; 	ret
 511+ 9454
 512+ 9454              ; ----------------------------------------------------------------------------------------------------------
 513+ 9454              ;
 514+ 9454              ;	24/6/24
 515+ 9454              ;
 516+ 9454              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9454              ;	_ de entidad.
 518+ 9454              ;
 519+ 9454              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9454              ;
 521+ 9454              ;
 522+ 9454              ;	MODIFICA: HL,DE y BC
 523+ 9454
 524+ 9454
 525+ 9454              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9454
 527+ 9454 11 B1 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9457 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9458 12           	ld (de),a
 530+ 9459 23           	inc hl
 531+ 945A              ;
 532+ 945A 11 BF 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 945D 01 02 00     	ld bc,2
 534+ 9460 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9462              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9462 11 B4 8B     	ld de,Contador_de_vueltas
 537+ 9465 7E           	ld a,(hl)
 538+ 9466 12           	ld (de),a
 539+ 9467 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9468
 541+ 9468 11 C6 8B     	ld de,Indice_Sprite_der
 542+ 946B 01 04 00     	ld bc,4
 543+ 946E ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9470
 545+ 9470 11 CE 8B     	ld de,Posicion_inicio
 546+ 9473 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9476 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9478
 549+ 9478 11 B8 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 947B 01 02 00     	ld bc,2
 551+ 947E ED B0        	ldir
 552+ 9480
 553+ 9480 C9           	ret
 554+ 9481
 555+ 9481              ; ----------------------------------------------------------------------------------------------------------
 556+ 9481              ;
 557+ 9481              ;	1/8/24
 558+ 9481              ;
 559+ 9481
 560+ 9481              Parametros_de_bandeja_DRAW_a_caja
 561+ 9481
 562+ 9481 21 B1 8B     	ld hl,Bandeja_DRAW
 563+ 9484 01 0C 00     	ld bc,12
 564+ 9487 ED B0        	ldir
 565+ 9489 C9           	ret
 566+ 948A
 567+ 948A              ;---------------------------------------------------------------------------------------------------------------
 568+ 948A              ;
 569+ 948A              ;	5/1/24
 570+ 948A              ;
 571+ 948A              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 948A              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 948A              ;
 574+ 948A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 948A              ;
 576+ 948A              ;	(Numero_parcial_de_entidades)="7".
 577+ 948A              ;
 578+ 948A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 948A              ;
 580+ 948A              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 948A              ;
 582+ 948A              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 948A              ;	MODIFICA: A y B.
 584+ 948A              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 948A
 586+ 948A              Inicializa_Numero_parcial_de_entidades
 587+ 948A
 588+ 948A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 948A
 590+ 948A 3A F7 8B     	ld a,(Numero_de_entidades)
 591+ 948D A7           	and a
 592+ 948E
 593+ 948E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 948E              ;	jr z,$
 595+ 948E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 948E
 597+ 948E 20 03        	jr nz,3F
 598+ 9490
 599+ 9490              ; ---------- ---------- ----------
 600+ 9490
 601+ 9490              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9490              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9490
 604+ 9490 CD 86 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9493
 606+ 9493              ; ---------- ---------- ----------
 607+ 9493
 608+ 9493 3A F7 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9496 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9498 38 08        	jr c,1F
 611+ 949A
 612+ 949A              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 949A              ; Actualizamos variables.
 614+ 949A
 615+ 949A 3E 07        	ld a,7
 616+ 949C 32 F8 8B     	ld (Numero_parcial_de_entidades),a
 617+ 949F 47           	ld b,a
 618+ 94A0 18 04        	jr 2F
 619+ 94A2
 620+ 94A2              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94A2              ; (Numero_de_entidades)="0".
 622+ 94A2
 623+ 94A2 32 F8 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94A5 47           	ld b,a
 625+ 94A6 C9           2 ret
 626+ 94A7
# file closed: Rutinas_de_inicio_y_niveles.asm
2162  94A7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94A7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94A7              ;
   3+ 94A7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94A7              ;
   5+ 94A7              ; *****************************************************************************************************************************************************************************************
   6+ 94A7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94A7
   8+ 94A7 7C           calcula_tercio ld a,h
   9+ 94A8 E6 18        	and $18
  10+ 94AA CB 2F        	sra a
  11+ 94AC CB 2F        	sra a
  12+ 94AE CB 2F        	sra a
  13+ 94B0 C9           	ret
  14+ 94B1
# file closed: calcula_tercio.asm
2163  94B1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B1              ;
   3+ 94B1              ;
   4+ 94B1              ;	CLS.
   5+ 94B1              ;
   6+ 94B1              ;	Limpia la pantalla y define sus atributos.
   7+ 94B1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B1              ;
   9+ 94B1              ;	COLORES: 0 ..... NEGRO
  10+ 94B1              ;    		 1 ..... AZUL
  11+ 94B1              ; 			 2 ..... ROJO
  12+ 94B1              ;			 3 ..... MAGENTA
  13+ 94B1              ; 			 4 ..... VERDE
  14+ 94B1              ; 			 5 ..... CIAN
  15+ 94B1              ;			 6 ..... AMARILLO
  16+ 94B1              ; 			 7 ..... BLANCO
  17+ 94B1              ;
  18+ 94B1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B1              ;
  20+ 94B1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B1
  22+ 94B1
  23+ 94B1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94B4 11 01 40     	LD DE,$4001
  25+ 94B7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94BA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94BC ED B0        	LDIR
  28+ 94BE 01 FF 02     	LD BC,767
  29+ 94C1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94C2 ED B0        	LDIR
  31+ 94C4 C9           	ret
  32+ 94C5
# file closed: Cls.asm
2164  94C5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94C5              ; ------------------------------------------------------------------------
   2+ 94C5              ;
   3+ 94C5              ;	30/1/24
   4+ 94C5              ;
   5+ 94C5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94C5              ;	Fila superior "0", Columna izquierda "0".
   7+ 94C5              ;
   8+ 94C5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94C5              ;
  10+ 94C5              ;	Modifica: A,BC y DE.
  11+ 94C5
  12+ 94C5 7D           Genera_coordenadas ld a,l
  13+ 94C6 E6 1F        	and $1f
  14+ 94C8 32 B2 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94CB
  16+ 94CB 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94CC FE 40        	cp $40
  18+ 94CE 38 1C        	jr c,4F
  19+ 94D0
  20+ 94D0 CD A7 94     	call calcula_tercio
  21+ 94D3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94D4
  23+ 94D4 1E 00        	ld e,0
  24+ 94D6 7D           	ld a,l
  25+ 94D7 E6 E0        	and $e0
  26+ 94D9 28 01        	jr z,1F
  27+ 94DB 04           	inc b
  28+ 94DC
  29+ 94DC 04           1 inc b
  30+ 94DD 05           	dec b
  31+ 94DE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E0              ;														; _ , salimos.
  33+ 94E0 1C           3 inc e
  34+ 94E1 D6 20        	sub 32
  35+ 94E3 20 FB        	jr nz,3B
  36+ 94E5 10 F5        	djnz 1B
  37+ 94E7
  38+ 94E7 7B           2 ld a,e
  39+ 94E8 32 B3 8B     	ld (Coordenada_y),a
  40+ 94EB C9           	ret
  41+ 94EC
  42+ 94EC AF           4 xor a
  43+ 94ED 32 B3 8B     	ld (Coordenada_y),a
  44+ 94F0 C9           	ret
  45+ 94F1
# file closed: Genera_coordenadas.asm
2165  94F1              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F1              ;
   3+ 94F1              ;	11/03/24
   4+ 94F1              ;
   5+ 94F1              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F1              ;   DE contiene Puntero_objeto.
   7+ 94F1              ;   IX contiene el Puntero de impresión.
   8+ 94F1
   9+ 94F1              Genera_datos_de_impresion
  10+ 94F1
  11+ 94F1 ED 73 FE 8B      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94F5
  13+ 94F5 31 B8 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94F8 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94FA
  16+ 94FA 2A 1E 8C         ld hl,(Scanlines_album_SP)
  17+ 94FD
  18+ 94FD 3E 05            ld a,5
  19+ 94FF 85               add l
  20+ 9500 6F               ld l,a
  21+ 9501
  22+ 9501 F9               ld sp,hl
  23+ 9502 22 1E 8C         ld (Scanlines_album_SP),hl
  24+ 9505
  25+ 9505 21 00 00         ld hl,0
  26+ 9508
  27+ 9508 DD E5            push ix
  28+ 950A 3B               dec sp
  29+ 950B ED 7A            adc hl,sp
  30+ 950D D5               push de
  31+ 950E
  32+ 950E              ; Recuperamos SP.
  33+ 950E
  34+ 950E ED 7B FE 8B      ld sp,(Stack)
  35+ 9512
  36+ 9512 E5               push hl
  37+ 9513 F1               pop af
  38+ 9514 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9515
  40+ 9515              ; Tenemos el encabezado listo.
  41+ 9515              ; Preparamos registros para generar los scanlines.
  42+ 9515
  43+ 9515 DD E5            push ix
  44+ 9517 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9518
  46+ 9518 ED 5B 1E 8C      ld de,(Scanlines_album_SP)
  47+ 951C
  48+ 951C              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 951C              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 951C
  51+ 951C 7C               ld a,h
  52+ 951D FE 50            cp $50
  53+ 951F 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9521
  55+ 9521 20 05            jr nz,2F
  56+ 9523
  57+ 9523 7D               ld a,l
  58+ 9524 FE E0            cp $e0
  59+ 9526 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9528
  61+ 9528 7D           2 ld a,l
  62+ 9529 FE C0            cp $c0
  63+ 952B D2 BD 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 952E
  65+ 952E              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 952E
  67+ 952E CD BB 99         call NextScan
  68+ 9531 EB               ex de,hl
  69+ 9532
  70+ 9532 73               ld (hl),e
  71+ 9533 23               inc hl
  72+ 9534 72               ld (hl),d
  73+ 9535 23               inc hl
  74+ 9536
  75+ 9536 EB               ex de,hl
  76+ 9537
  77+ 9537 CD BB 99         call NextScan
  78+ 953A EB               ex de,hl
  79+ 953B
  80+ 953B 73               ld (hl),e
  81+ 953C 23               inc hl
  82+ 953D 72               ld (hl),d
  83+ 953E 23               inc hl
  84+ 953F
  85+ 953F EB               ex de,hl
  86+ 9540
  87+ 9540 CD BB 99         call NextScan
  88+ 9543 EB               ex de,hl
  89+ 9544
  90+ 9544 73               ld (hl),e
  91+ 9545 23               inc hl
  92+ 9546 72               ld (hl),d
  93+ 9547 23               inc hl
  94+ 9548
  95+ 9548 EB               ex de,hl
  96+ 9549
  97+ 9549 CD BB 99         call NextScan
  98+ 954C EB               ex de,hl
  99+ 954D
 100+ 954D 73               ld (hl),e
 101+ 954E 23               inc hl
 102+ 954F 72               ld (hl),d
 103+ 9550 23               inc hl
 104+ 9551
 105+ 9551 EB               ex de,hl
 106+ 9552
 107+ 9552 CD BB 99         call NextScan
 108+ 9555 EB               ex de,hl
 109+ 9556
 110+ 9556 73               ld (hl),e
 111+ 9557 23               inc hl
 112+ 9558 72               ld (hl),d
 113+ 9559 23               inc hl
 114+ 955A
 115+ 955A EB               ex de,hl
 116+ 955B
 117+ 955B CD BB 99         call NextScan
 118+ 955E EB               ex de,hl
 119+ 955F
 120+ 955F 73               ld (hl),e
 121+ 9560 23               inc hl
 122+ 9561 72               ld (hl),d
 123+ 9562 23               inc hl
 124+ 9563
 125+ 9563 EB               ex de,hl
 126+ 9564
 127+ 9564 CD BB 99         call NextScan
 128+ 9567 EB               ex de,hl
 129+ 9568
 130+ 9568 73               ld (hl),e
 131+ 9569 23               inc hl
 132+ 956A 72               ld (hl),d
 133+ 956B 23               inc hl
 134+ 956C
 135+ 956C EB               ex de,hl
 136+ 956D
 137+ 956D CD BB 99         call NextScan
 138+ 9570 EB               ex de,hl
 139+ 9571
 140+ 9571 73               ld (hl),e
 141+ 9572 23               inc hl
 142+ 9573 72               ld (hl),d
 143+ 9574 23               inc hl
 144+ 9575
 145+ 9575 EB               ex de,hl
 146+ 9576
 147+ 9576 CD BB 99         call NextScan
 148+ 9579 EB               ex de,hl
 149+ 957A
 150+ 957A 73               ld (hl),e
 151+ 957B 23               inc hl
 152+ 957C 72               ld (hl),d
 153+ 957D 23               inc hl
 154+ 957E
 155+ 957E EB               ex de,hl
 156+ 957F
 157+ 957F CD BB 99         call NextScan
 158+ 9582 EB               ex de,hl
 159+ 9583
 160+ 9583 73               ld (hl),e
 161+ 9584 23               inc hl
 162+ 9585 72               ld (hl),d
 163+ 9586 23               inc hl
 164+ 9587
 165+ 9587 EB               ex de,hl
 166+ 9588
 167+ 9588 CD BB 99         call NextScan
 168+ 958B EB               ex de,hl
 169+ 958C
 170+ 958C 73               ld (hl),e
 171+ 958D 23               inc hl
 172+ 958E 72               ld (hl),d
 173+ 958F 23               inc hl
 174+ 9590
 175+ 9590 EB               ex de,hl
 176+ 9591
 177+ 9591 CD BB 99         call NextScan
 178+ 9594 EB               ex de,hl
 179+ 9595
 180+ 9595 73               ld (hl),e
 181+ 9596 23               inc hl
 182+ 9597 72               ld (hl),d
 183+ 9598 23               inc hl
 184+ 9599
 185+ 9599 EB               ex de,hl
 186+ 959A
 187+ 959A CD BB 99         call NextScan
 188+ 959D EB               ex de,hl
 189+ 959E
 190+ 959E 73               ld (hl),e
 191+ 959F 23               inc hl
 192+ 95A0 72               ld (hl),d
 193+ 95A1 23               inc hl
 194+ 95A2
 195+ 95A2 EB               ex de,hl
 196+ 95A3
 197+ 95A3 CD BB 99         call NextScan
 198+ 95A6 EB               ex de,hl
 199+ 95A7
 200+ 95A7 73               ld (hl),e
 201+ 95A8 23               inc hl
 202+ 95A9 72               ld (hl),d
 203+ 95AA 23               inc hl
 204+ 95AB
 205+ 95AB EB               ex de,hl
 206+ 95AC
 207+ 95AC CD BB 99         call NextScan
 208+ 95AF EB               ex de,hl
 209+ 95B0
 210+ 95B0 73               ld (hl),e
 211+ 95B1 23               inc hl
 212+ 95B2 72               ld (hl),d
 213+ 95B3 23               inc hl
 214+ 95B4
 215+ 95B4              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 95B4
 217+ 95B4 22 1E 8C         ld (Scanlines_album_SP),hl
 218+ 95B7
 219+ 95B7              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 95B7
 221+ 95B7 08               ex af,af
 222+ 95B8
 223+ 95B8 F5               push af
 224+ 95B9 E1               pop hl
 225+ 95BA
 226+ 95BA 36 10            ld (hl),16
 227+ 95BC
 228+ 95BC C9               ret
 229+ 95BD
 230+ 95BD              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95BD
 232+ 95BD              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95BD
 234+ 95BD 3E 57            ld a,$57
 235+ 95BF 94               sub h
 236+ 95C0 47               ld b,a
 237+ 95C1
 238+ 95C1 3E DF            ld a,$df
 239+ 95C3 BD               cp l
 240+ 95C4 38 04            jr c,1F
 241+ 95C6
 242+ 95C6 3E 08            ld a,8
 243+ 95C8 80               add b
 244+ 95C9 47               ld b,a
 245+ 95CA
 246+ 95CA              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95CA              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95CA
 249+ 95CA 48           1 ld c,b
 250+ 95CB 0C               inc c
 251+ 95CC
 252+ 95CC 04               inc b
 253+ 95CD 05               dec b
 254+ 95CE 20 02            jr nz,3F
 255+ 95D0
 256+ 95D0 18 0B            jr 6F
 257+ 95D2
 258+ 95D2 CD BB 99     3 call NextScan
 259+ 95D5 EB               ex de,hl
 260+ 95D6
 261+ 95D6 73               ld (hl),e
 262+ 95D7 23               inc hl
 263+ 95D8 72               ld (hl),d
 264+ 95D9 23               inc hl
 265+ 95DA
 266+ 95DA EB               ex de,hl
 267+ 95DB 10 F5            djnz 3B
 268+ 95DD
 269+ 95DD ED 53 1E 8C  6 ld (Scanlines_album_SP),de
 270+ 95E1
 271+ 95E1 08           5 ex af,af
 272+ 95E2 F5               push af
 273+ 95E3 E1               pop hl
 274+ 95E4
 275+ 95E4 71               ld (hl),c
 276+ 95E5
 277+ 95E5 C9               ret
 278+ 95E6
# file closed: Genera_datos_de_impresion.asm
2166  95E6              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E6              ; -----------------------------------------------------------------------------
   2+ 95E6              ;
   3+ 95E6              ;   11/03/24
   4+ 95E6              ;
   5+ 95E6
   6+ 95E6              Pinta_Sprites
   7+ 95E6
   8+ 95E6              ;    ld hl,(Scanlines_album_SP)
   9+ 95E6              ;    call Extrae_address
  10+ 95E6
  11+ 95E6              ;    inc h
  12+ 95E6              ;    dec h
  13+ 95E6              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E6
  15+ 95E6 ED 73 FE 8B      ld (Stack),sp
  16+ 95EA
  17+ 95EA EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95EB              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95EB 2C               inc l
  20+ 95EC 2C               inc l
  21+ 95ED
  22+ 95ED 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95EE
  24+ 95EE 2C               inc l
  25+ 95EF F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95F0
  27+ 95F0              ;   Seleccionamos rutina de impresión:
  28+ 95F0
  29+ 95F0 3E 10            ld a,16
  30+ 95F2 B8               cp b
  31+ 95F3 C2 EF 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F6
  33+ 95F6              ;   Rutinas:
  34+ 95F6
  35+ 95F6              Pinta_rapido    ;   1520 t/states.
  36+ 95F6
  37+ 95F6 E1               pop hl
  38+ 95F7
  39+ 95F7 1A               ld a,(de)
  40+ 95F8 AE               xor (hl)
  41+ 95F9 77               ld (hl),a
  42+ 95FA 2C               inc l
  43+ 95FB 1C               inc e
  44+ 95FC 1A               ld a,(de)
  45+ 95FD AE               xor (hl)
  46+ 95FE 77               ld (hl),a
  47+ 95FF 2C               inc l
  48+ 9600 1C               inc e
  49+ 9601 1A               ld a,(de)
  50+ 9602 AE               xor (hl)
  51+ 9603 77               ld (hl),a
  52+ 9604 13               inc de
  53+ 9605
  54+ 9605 E1               pop hl
  55+ 9606
  56+ 9606 1A               ld a,(de)
  57+ 9607 AE               xor (hl)
  58+ 9608 77               ld (hl),a
  59+ 9609 2C               inc l
  60+ 960A 1C               inc e
  61+ 960B 1A               ld a,(de)
  62+ 960C AE               xor (hl)
  63+ 960D 77               ld (hl),a
  64+ 960E 2C               inc l
  65+ 960F 1C               inc e
  66+ 9610 1A               ld a,(de)
  67+ 9611 AE               xor (hl)
  68+ 9612 77               ld (hl),a
  69+ 9613 13               inc de
  70+ 9614
  71+ 9614 E1               pop hl
  72+ 9615
  73+ 9615 1A               ld a,(de)
  74+ 9616 AE               xor (hl)
  75+ 9617 77               ld (hl),a
  76+ 9618 2C               inc l
  77+ 9619 1C               inc e
  78+ 961A 1A               ld a,(de)
  79+ 961B AE               xor (hl)
  80+ 961C 77               ld (hl),a
  81+ 961D 2C               inc l
  82+ 961E 1C               inc e
  83+ 961F 1A               ld a,(de)
  84+ 9620 AE               xor (hl)
  85+ 9621 77               ld (hl),a
  86+ 9622 13               inc de
  87+ 9623
  88+ 9623 E1               pop hl
  89+ 9624
  90+ 9624 1A               ld a,(de)
  91+ 9625 AE               xor (hl)
  92+ 9626 77               ld (hl),a
  93+ 9627 2C               inc l
  94+ 9628 1C               inc e
  95+ 9629 1A               ld a,(de)
  96+ 962A AE               xor (hl)
  97+ 962B 77               ld (hl),a
  98+ 962C 2C               inc l
  99+ 962D 1C               inc e
 100+ 962E 1A               ld a,(de)
 101+ 962F AE               xor (hl)
 102+ 9630 77               ld (hl),a
 103+ 9631 13               inc de
 104+ 9632
 105+ 9632 E1               pop hl
 106+ 9633
 107+ 9633 1A               ld a,(de)
 108+ 9634 AE               xor (hl)
 109+ 9635 77               ld (hl),a
 110+ 9636 2C               inc l
 111+ 9637 1C               inc e
 112+ 9638 1A               ld a,(de)
 113+ 9639 AE               xor (hl)
 114+ 963A 77               ld (hl),a
 115+ 963B 2C               inc l
 116+ 963C 1C               inc e
 117+ 963D 1A               ld a,(de)
 118+ 963E AE               xor (hl)
 119+ 963F 77               ld (hl),a
 120+ 9640 13               inc de
 121+ 9641
 122+ 9641 E1               pop hl
 123+ 9642
 124+ 9642 1A               ld a,(de)
 125+ 9643 AE               xor (hl)
 126+ 9644 77               ld (hl),a
 127+ 9645 2C               inc l
 128+ 9646 1C               inc e
 129+ 9647 1A               ld a,(de)
 130+ 9648 AE               xor (hl)
 131+ 9649 77               ld (hl),a
 132+ 964A 2C               inc l
 133+ 964B 1C               inc e
 134+ 964C 1A               ld a,(de)
 135+ 964D AE               xor (hl)
 136+ 964E 77               ld (hl),a
 137+ 964F 13               inc de
 138+ 9650
 139+ 9650 E1               pop hl
 140+ 9651
 141+ 9651 1A               ld a,(de)
 142+ 9652 AE               xor (hl)
 143+ 9653 77               ld (hl),a
 144+ 9654 2C               inc l
 145+ 9655 1C               inc e
 146+ 9656 1A               ld a,(de)
 147+ 9657 AE               xor (hl)
 148+ 9658 77               ld (hl),a
 149+ 9659 2C               inc l
 150+ 965A 1C               inc e
 151+ 965B 1A               ld a,(de)
 152+ 965C AE               xor (hl)
 153+ 965D 77               ld (hl),a
 154+ 965E 13               inc de
 155+ 965F
 156+ 965F E1               pop hl
 157+ 9660
 158+ 9660 1A               ld a,(de)
 159+ 9661 AE               xor (hl)
 160+ 9662 77               ld (hl),a
 161+ 9663 2C               inc l
 162+ 9664 1C               inc e
 163+ 9665 1A               ld a,(de)
 164+ 9666 AE               xor (hl)
 165+ 9667 77               ld (hl),a
 166+ 9668 2C               inc l
 167+ 9669 1C               inc e
 168+ 966A 1A               ld a,(de)
 169+ 966B AE               xor (hl)
 170+ 966C 77               ld (hl),a
 171+ 966D 13               inc de
 172+ 966E
 173+ 966E E1               pop hl
 174+ 966F
 175+ 966F 1A               ld a,(de)
 176+ 9670 AE               xor (hl)
 177+ 9671 77               ld (hl),a
 178+ 9672 2C               inc l
 179+ 9673 1C               inc e
 180+ 9674 1A               ld a,(de)
 181+ 9675 AE               xor (hl)
 182+ 9676 77               ld (hl),a
 183+ 9677 2C               inc l
 184+ 9678 1C               inc e
 185+ 9679 1A               ld a,(de)
 186+ 967A AE               xor (hl)
 187+ 967B 77               ld (hl),a
 188+ 967C 13               inc de
 189+ 967D
 190+ 967D E1               pop hl
 191+ 967E
 192+ 967E 1A               ld a,(de)
 193+ 967F AE               xor (hl)
 194+ 9680 77               ld (hl),a
 195+ 9681 2C               inc l
 196+ 9682 1C               inc e
 197+ 9683 1A               ld a,(de)
 198+ 9684 AE               xor (hl)
 199+ 9685 77               ld (hl),a
 200+ 9686 2C               inc l
 201+ 9687 1C               inc e
 202+ 9688 1A               ld a,(de)
 203+ 9689 AE               xor (hl)
 204+ 968A 77               ld (hl),a
 205+ 968B 13               inc de
 206+ 968C
 207+ 968C E1               pop hl
 208+ 968D
 209+ 968D 1A               ld a,(de)
 210+ 968E AE               xor (hl)
 211+ 968F 77               ld (hl),a
 212+ 9690 2C               inc l
 213+ 9691 1C               inc e
 214+ 9692 1A               ld a,(de)
 215+ 9693 AE               xor (hl)
 216+ 9694 77               ld (hl),a
 217+ 9695 2C               inc l
 218+ 9696 1C               inc e
 219+ 9697 1A               ld a,(de)
 220+ 9698 AE               xor (hl)
 221+ 9699 77               ld (hl),a
 222+ 969A 13               inc de
 223+ 969B
 224+ 969B E1               pop hl
 225+ 969C
 226+ 969C 1A               ld a,(de)
 227+ 969D AE               xor (hl)
 228+ 969E 77               ld (hl),a
 229+ 969F 2C               inc l
 230+ 96A0 1C               inc e
 231+ 96A1 1A               ld a,(de)
 232+ 96A2 AE               xor (hl)
 233+ 96A3 77               ld (hl),a
 234+ 96A4 2C               inc l
 235+ 96A5 1C               inc e
 236+ 96A6 1A               ld a,(de)
 237+ 96A7 AE               xor (hl)
 238+ 96A8 77               ld (hl),a
 239+ 96A9 13               inc de
 240+ 96AA
 241+ 96AA E1               pop hl
 242+ 96AB
 243+ 96AB 1A               ld a,(de)
 244+ 96AC AE               xor (hl)
 245+ 96AD 77               ld (hl),a
 246+ 96AE 2C               inc l
 247+ 96AF 1C               inc e
 248+ 96B0 1A               ld a,(de)
 249+ 96B1 AE               xor (hl)
 250+ 96B2 77               ld (hl),a
 251+ 96B3 2C               inc l
 252+ 96B4 1C               inc e
 253+ 96B5 1A               ld a,(de)
 254+ 96B6 AE               xor (hl)
 255+ 96B7 77               ld (hl),a
 256+ 96B8 13               inc de
 257+ 96B9
 258+ 96B9 E1               pop hl
 259+ 96BA
 260+ 96BA 1A               ld a,(de)
 261+ 96BB AE               xor (hl)
 262+ 96BC 77               ld (hl),a
 263+ 96BD 2C               inc l
 264+ 96BE 1C               inc e
 265+ 96BF 1A               ld a,(de)
 266+ 96C0 AE               xor (hl)
 267+ 96C1 77               ld (hl),a
 268+ 96C2 2C               inc l
 269+ 96C3 1C               inc e
 270+ 96C4 1A               ld a,(de)
 271+ 96C5 AE               xor (hl)
 272+ 96C6 77               ld (hl),a
 273+ 96C7 13               inc de
 274+ 96C8
 275+ 96C8 E1               pop hl
 276+ 96C9
 277+ 96C9 1A               ld a,(de)
 278+ 96CA AE               xor (hl)
 279+ 96CB 77               ld (hl),a
 280+ 96CC 2C               inc l
 281+ 96CD 1C               inc e
 282+ 96CE 1A               ld a,(de)
 283+ 96CF AE               xor (hl)
 284+ 96D0 77               ld (hl),a
 285+ 96D1 2C               inc l
 286+ 96D2 1C               inc e
 287+ 96D3 1A               ld a,(de)
 288+ 96D4 AE               xor (hl)
 289+ 96D5 77               ld (hl),a
 290+ 96D6 13               inc de
 291+ 96D7
 292+ 96D7 E1               pop hl
 293+ 96D8
 294+ 96D8 1A               ld a,(de)
 295+ 96D9 AE               xor (hl)
 296+ 96DA 77               ld (hl),a
 297+ 96DB 2C               inc l
 298+ 96DC 1C               inc e
 299+ 96DD 1A               ld a,(de)
 300+ 96DE AE               xor (hl)
 301+ 96DF 77               ld (hl),a
 302+ 96E0 2C               inc l
 303+ 96E1 1C               inc e
 304+ 96E2 1A               ld a,(de)
 305+ 96E3 AE               xor (hl)
 306+ 96E4 77               ld (hl),a
 307+ 96E5 13               inc de
 308+ 96E6
 309+ 96E6 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 310+ 96EA ED 7B FE 8B      ld sp,(Stack)
 311+ 96EE C9               ret
 312+ 96EF
 313+ 96EF              Pinta_lento
 314+ 96EF
 315+ 96EF E1           1 pop hl
 316+ 96F0
 317+ 96F0 1A               ld a,(de)
 318+ 96F1 AE               xor (hl)
 319+ 96F2 77               ld (hl),a
 320+ 96F3 2C               inc l
 321+ 96F4 1C               inc e
 322+ 96F5 1A               ld a,(de)
 323+ 96F6 AE               xor (hl)
 324+ 96F7 77               ld (hl),a
 325+ 96F8 2C               inc l
 326+ 96F9 1C               inc e
 327+ 96FA 1A               ld a,(de)
 328+ 96FB AE               xor (hl)
 329+ 96FC 77               ld (hl),a
 330+ 96FD 13               inc de
 331+ 96FE
 332+ 96FE 10 EF            djnz 1B
 333+ 9700
 334+ 9700 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 335+ 9704 ED 7B FE 8B      ld sp,(Stack)
 336+ 9708 C9               ret
# file closed: Pinta_Sprites.asm
2167  9709              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9709              ; ******************************************************************************************************************************************************************************************
   2+ 9709              ;
   3+ 9709              ; 26/06/23
   4+ 9709              ;
   5+ 9709              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9709
   7+ 9709              Draw
   8+ 9709
   9+ 9709 CD AF 99     	call Prepara_draw
  10+ 970C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 970D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 970E 28 05        	jr z,2F
  13+ 9710
  14+ 9710 3A D0 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9713 18 0C        	jr 1F
  16+ 9715
  17+ 9715 2A CE 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9718 22 C1 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 971B CD A7 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 971E              ;													; _la esquina superior izquierda de la pantalla.
  21+ 971E
  22+ 971E CD 4E 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9721
  24+ 9721 3A BE 8B     1 ld a,(Ctrl_0)
  25+ 9724 CB 6F        	bit 5,a
  26+ 9726 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9728
  28+ 9728 CD 3D 97     	call Comprueba_limite_horizontal
  29+ 972B CD CD 97     	call Comprueba_limite_vertical
  30+ 972E
  31+ 972E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 972E              ; -----------------------
  33+ 972E              ; -----------------------
  34+ 972E              ; -----------------------
  35+ 972E
  36+ 972E CD 23 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9731 CD 5A 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9734
  39+ 9734 3A BE 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9737 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9739 32 BE 8B     	ld (Ctrl_0),a
  42+ 973C
  43+ 973C C9           	ret
  44+ 973D
  45+ 973D              ; *******************************************************************************************************************************************************************************************
  46+ 973D              ;	21/01/23
  47+ 973D              ;
  48+ 973D              ; 	Comprueba_limite_horizontal.
  49+ 973D              ;
  50+ 973D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 973D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 973D              ;
  53+ 973D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 973D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 973D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 973D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 973D
  58+ 973D
  59+ 973D
  60+ 973D 3A BE 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9740 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9742 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9744 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9746 32 BE 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9749 18 09            jr 6F
  66+ 974B CB 5F        1 bit 3,a
  67+ 974D 28 0A            jr z,2F
  68+ 974F E6 F7            and $f7
  69+ 9751 32 BE 8B         ld (Ctrl_0),a
  70+ 9754 CD A7 98     6 call Inicializacion
  71+ 9757 18 5B            jr 5F
  72+ 9759 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 975A
  74+ 975A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 975A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 975A
  77+ 975A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 975B 2A D2 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 975E CD A7 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9761 67           	ld h,a
  81+ 9762 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9763 CD A7 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9766 67           	ld h,a
  84+ 9767 A7           	and a
  85+ 9768 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 976A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 976B 3A D0 8B     	ld a,(Cuad_objeto)
  88+ 976E FE 02        	cp 2
  89+ 9770 38 1E        	jr c,3F
  90+ 9772 28 1C        	jr z,3F
  91+ 9774 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9775 28 23            jr z,7F
  93+ 9777 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9779 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 977B E1           	pop hl
  96+ 977C
  97+ 977C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 977C              ; _para indicar con E="2" en caso necesario.
  99+ 977C
 100+ 977C E5               push hl
 101+ 977D C5               push bc
 102+ 977E CD A7 94     	call calcula_tercio
 103+ 9781 FE 01        	cp 1
 104+ 9783 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9785 CD B5 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9788 28 26            jr z,9F
 107+ 978A 38 24            jr c,9F
 108+ 978C 1E 00        11 ld e,0
 109+ 978E 18 22            jr 8F
 110+ 9790 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9791 28 07        	jr z, 7F
 112+ 9793 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9795 1E 00         	ld e,0
 114+ 9797 E1           	pop hl
 115+ 9798 18 04        	jr 4F
 116+ 979A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 979C 18 15            jr 10F
 118+ 979E
 119+ 979E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 979E              ; _para indicar con E="2" en caso necesario.
 121+ 979E
 122+ 979E E5           4 push hl
 123+ 979F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97A0 CD A7 94     	call calcula_tercio
 125+ 97A3 FE 01        	cp 1
 126+ 97A5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A7 CD B5 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97AA 28 04            jr z,9F
 129+ 97AC 30 02            jr nc,9F
 130+ 97AE 18 02        	jr 8F
 131+ 97B0 1E 02        9 ld e,2
 132+ 97B2 C1           8 pop bc
 133+ 97B3 E1           10 pop hl
 134+ 97B4 C9           5 ret
 135+ 97B5
 136+ 97B5              ; --------------------
 137+ 97B5              ;
 138+ 97B5              ; 25/08/22
 139+ 97B5
 140+ 97B5 CD A7 94     Comprueba_centro call calcula_tercio
 141+ 97B8 67               ld h,a
 142+ 97B9 08           	ex af,af
 143+ 97BA FE 02        	cp 2
 144+ 97BC 38 07        	jr c,1F
 145+ 97BE 28 05        	jr z,1F
 146+ 97C0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97C3 18 03        	jr 2F
 148+ 97C5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C8 08           2 ex af,af
 150+ 97C9 A7               and a
 151+ 97CA ED 42            sbc hl,bc
 152+ 97CC C9               ret
 153+ 97CD
 154+ 97CD              ; *********************************************************************************************************************************************************************************************
 155+ 97CD              ;
 156+ 97CD              ;   16/8/22
 157+ 97CD              ;
 158+ 97CD              ;	Comprueba_limite_vertical
 159+ 97CD              ;
 160+ 97CD              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97CD              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97CD              ;
 163+ 97CD
 164+ 97CD 2A C1 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97D0 7D           	ld a,l
 166+ 97D1 E6 1F        	and $1F
 167+ 97D3 57           	ld d,a
 168+ 97D4 3A D4 8B     	ld a,(Limite_vertical)
 169+ 97D7 BA           	cp d 											; Límite - Posición.
 170+ 97D8 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97D9 3A D0 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97DC CB 47        	bit 0,a
 173+ 97DE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97E0
 175+ 97E0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97E0
 177+ 97E0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97E3
 180+ 97E3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97E3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97E3
 183+ 97E3 3A B2 8B         ld a,(Coordenada_X)
 184+ 97E6 16 0F            ld d,Centro_izquierda
 185+ 97E8 A7               and a
 186+ 97E9 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97EA 28 1E            jr z,3F
 188+ 97EC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97EE              ;                                                    ; _salimos sin modificar nada.
 190+ 97EE 18 0E            jr 2F
 191+ 97F0 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F1 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97F3
 194+ 97F3              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97F3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97F3
 197+ 97F3 3A B2 8B         ld a,(Coordenada_X)
 198+ 97F6 16 10            ld d,Centro_derecha
 199+ 97F8 A7               and a
 200+ 97F9 92               sub d
 201+ 97FA 28 0E            jr z,3F
 202+ 97FC 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97FE              ;                                                    ; _salimos sin modificar nada.
 204+ 97FE CB 43        2 bit 0,e
 205+ 9800 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9802 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9803 CD 97 98         call Modificaccionne
 208+ 9806 C1           	pop bc
 209+ 9807 CD A7 98         call Inicializacion
 210+ 980A C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 980B
 212+ 980B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 980B
 214+ 980B C5           4 push bc
 215+ 980C 01 C0 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 980F 0A           	ld a,(bc)
 217+ 9810 3D           	dec a
 218+ 9811 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9812 7D           	ld a,l
 220+ 9813 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9814 CB 47        	bit 0,a
 222+ 9816 28 03        	jr z,5F
 223+ 9818 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9819 18 2E        	jr 7F
 225+ 981B
 226+ 981B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 981B
 228+ 981B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 981C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 981D 3A BE 8B     	ld a,(Ctrl_0)
 231+ 9820 CB 4F        	bit 1,a
 232+ 9822 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9824 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9825
 235+ 9825              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9825
 237+ 9825 1C               inc e
 238+ 9826 1D               dec e
 239+ 9827 20 07            jr nz,12F
 240+ 9829 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 982A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 982B 22 C1 8B     	ld (Posicion_actual),hl
 243+ 982E 18 44        13 jr 9F
 244+ 9830 CB 43        12 bit 0,e
 245+ 9832 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9834              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9834 C1           	pop bc
 248+ 9835 18 D3        	jr 3B
 249+ 9837 80           14 add b
 250+ 9838 6F               ld l,a
 251+ 9839 22 C1 8B     	ld (Posicion_actual),hl
 252+ 983C CD 97 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 983F 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9841 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9843 32 BE 8B         ld (Ctrl_0),a
 256+ 9846 F1           	pop af
 257+ 9847 18 2B        	jr 9F
 258+ 9849
 259+ 9849              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9849
 261+ 9849 F5           7 push af
 262+ 984A 3A BE 8B     	ld a,(Ctrl_0)
 263+ 984D CB 47        	bit 0,a
 264+ 984F 20 1D        	jr nz,8F
 265+ 9851 F1           	pop af
 266+ 9852
 267+ 9852              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9852
 269+ 9852 1C           	inc e
 270+ 9853 1D               dec e
 271+ 9854 20 07            jr nz,10F
 272+ 9856 90           	sub b
 273+ 9857 6F               ld l,a
 274+ 9858 22 C1 8B     	ld (Posicion_actual),hl
 275+ 985B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 985D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 985D CB 43        10 bit 0,e
 278+ 985F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9861              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9861 C1           	pop bc
 281+ 9862 18 A6        	jr 3B
 282+ 9864 90           16 sub b
 283+ 9865 6F               ld l,a
 284+ 9866 22 C1 8B     	ld (Posicion_actual),hl
 285+ 9869 CD 97 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 986C 18 06            jr 9F
 287+ 986E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9870 32 BE 8B         ld (Ctrl_0),a
 289+ 9873 F1           	pop af
 290+ 9874 C1           9 pop bc
 291+ 9875 1E 00        	ld e,0
 292+ 9877 CD A7 98         call Inicializacion
 293+ 987A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 987B 08           	ex af,af
 295+ 987C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 987D 18 8B            jr 3B
 297+ 987F
 298+ 987F              ; --------------------
 299+ 987F
 300+ 987F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9881 CD CA 99     1 call PreviousScan
 302+ 9884 10 FB            djnz 1B
 303+ 9886 22 C1 8B     	ld (Posicion_actual),hl
 304+ 9889 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 988A C9           	ret
 306+ 988B
 307+ 988B              ; --------------------
 308+ 988B
 309+ 988B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 988D CD BB 99     1 call NextScan
 311+ 9890 10 FB            djnz 1B
 312+ 9892 22 C1 8B     	ld (Posicion_actual),hl
 313+ 9895 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9896 C9           	ret
 315+ 9897
 316+ 9897              ; --------------------
 317+ 9897              ;
 318+ 9897              ;	22/01/23
 319+ 9897              ;
 320+ 9897              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9897              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9897              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9897
 324+ 9897
 325+ 9897              Modificaccionne
 326+ 9897
 327+ 9897 3A D0 8B     	ld a,(Cuad_objeto)
 328+ 989A FE 02        	cp 2
 329+ 989C CC 7F 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 989F DC 7F 98         call c,Modifica_Pos_actual
 331+ 98A2 C8           	ret z
 332+ 98A3 CD 8B 98         call Modifica_Pos_actual2
 333+ 98A6 C9               ret
 334+ 98A7
 335+ 98A7              ; *************************************************************************************************************************************************************************************************
 336+ 98A7              ;
 337+ 98A7              ;	13/8/22
 338+ 98A7              ;
 339+ 98A7              ;	Inicializacion
 340+ 98A7              ;
 341+ 98A7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A7              ;
 345+ 98A7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A7              ;	_ desaparece/aparece.
 348+ 98A7
 349+ 98A7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A7              ;
 352+ 98A7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A7              ; 		   [E] ="0"
 355+ 98A7
 356+ 98A7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A7
 358+ 98A7 CD A7 94     Inicializacion call calcula_tercio
 359+ 98AA 28 36        	jr z,primit
 360+ 98AC E6 02        	and 2
 361+ 98AE 20 07        	jr nz,segmit
 362+ 98B0 7D           	ld a,l
 363+ 98B1 FE 7F        	cp $7f
 364+ 98B3 38 2D        	jr c,primit
 365+ 98B5 28 2B        	jr z,primit
 366+ 98B7 CD 1D 99     segmit call column
 367+ 98BA 38 13        	jr c,tercuad
 368+ 98BC 3E 04        cuarcuad ld a,4
 369+ 98BE 32 D0 8B     	ld (Cuad_objeto),a
 370+ 98C1 21 20 48     	ld hl,$4820
 371+ 98C4 22 D2 8B     	ld (Limite_horizontal),hl
 372+ 98C7 21 D4 8B     	ld hl,Limite_vertical
 373+ 98CA 36 0D        	ld (hl),$0d
 374+ 98CC 08           	ex af,af
 375+ 98CD 18 3C        	jr 1F
 376+ 98CF              tercuad
 377+ 98CF 3E 03        	ld a,3
 378+ 98D1 32 D0 8B     	ld (Cuad_objeto),a
 379+ 98D4 21 20 48     	ld hl,$4820
 380+ 98D7 22 D2 8B     	ld (Limite_horizontal),hl
 381+ 98DA 21 D4 8B     	ld hl,Limite_vertical
 382+ 98DD 36 12        	ld (hl),$12
 383+ 98DF 08           	ex af,af
 384+ 98E0 18 29        	jr 1F
 385+ 98E2 CD 1D 99     primit call column
 386+ 98E5 38 13        	jr c, primcuad
 387+ 98E7              segcuad
 388+ 98E7 3E 02        	ld a,2
 389+ 98E9 32 D0 8B     	ld (Cuad_objeto),a
 390+ 98EC 21 C0 4F     	ld hl,$4fc0
 391+ 98EF 22 D2 8B     	ld (Limite_horizontal),hl
 392+ 98F2 21 D4 8B     	ld hl,Limite_vertical
 393+ 98F5 36 0D        	ld (hl),$0d
 394+ 98F7 08           	ex af,af
 395+ 98F8 18 11        	jr 1F
 396+ 98FA              primcuad
 397+ 98FA 3E 01        	ld a,1
 398+ 98FC 32 D0 8B     	ld (Cuad_objeto),a
 399+ 98FF 21 C0 4F     	ld hl,$4fc0
 400+ 9902 22 D2 8B     	ld (Limite_horizontal),hl
 401+ 9905 21 D4 8B     	ld hl,Limite_vertical
 402+ 9908 36 12        	ld (hl),$12
 403+ 990A 08           	ex af,af
 404+ 990B
 405+ 990B C5           1 push bc
 406+ 990C E5           	push hl
 407+ 990D D5           	push de
 408+ 990E
 409+ 990E 2A C1 8B     	ld hl,(Posicion_actual)
 410+ 9911 CD C5 94     	call Genera_coordenadas
 411+ 9914
 412+ 9914 D1           	pop de
 413+ 9915 E1           	pop hl
 414+ 9916 C1           	pop bc
 415+ 9917
 416+ 9917 21 BE 8B     	ld hl,Ctrl_0
 417+ 991A CB EE        	set 5,(hl)
 418+ 991C C9           	ret
 419+ 991D
 420+ 991D              ; ------------------------------------------------------------------------------------------------------------------
 421+ 991D
 422+ 991D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 991D              ;
 424+ 991D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 991D
 426+ 991D 7D           column ld a,l
 427+ 991E E6 1F        	and $1f
 428+ 9920 FE 10         	cp $10
 429+ 9922 C9            	ret
 430+ 9923
 431+ 9923              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9923              ;
 433+ 9923              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9923              ;
 435+ 9923              ; 14/12/22
 436+ 9923              ;
 437+ 9923              ;	Modifica: A y BC.
 438+ 9923
 439+ 9923 3A D0 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9926 E6 01        	and 1
 441+ 9928 28 17        	jr z,1F
 442+ 992A
 443+ 992A              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 992A
 445+ 992A 3A B2 8B     	ld a,(Coordenada_X)
 446+ 992D 47           	ld b,a
 447+ 992E 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 992F 79           	ld a,c
 449+ 9930 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9931 38 08        	jr c,2F
 451+ 9933 47           	ld b,a
 452+ 9934 79           	ld a,c
 453+ 9935 90           	sub b
 454+ 9936 32 D1 8B     	ld (Columnas),a
 455+ 9939 18 1B        	jr 4F
 456+ 993B 79           2 ld a,c
 457+ 993C 32 D1 8B     	ld (Columnas),a
 458+ 993F 18 15        	jr 4F
 459+ 9941
 460+ 9941              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9941
 462+ 9941 3A B2 8B     1 ld a,(Coordenada_X)
 463+ 9944 81           	add c
 464+ 9945 3D           	dec a
 465+ 9946 D6 1F        	sub $1f
 466+ 9948 38 08        	jr c,3F
 467+ 994A 47           	ld b,a
 468+ 994B 79           	ld a,c
 469+ 994C 90           	sub b
 470+ 994D 32 D1 8B     	ld (Columnas),a
 471+ 9950 18 04        	jr 4F
 472+ 9952 79           3 ld a,c
 473+ 9953 32 D1 8B     	ld (Columnas),a
 474+ 9956 D9           4 exx
 475+ 9957 4F           	ld c,a
 476+ 9958 D9           	exx
 477+ 9959 C9            ret
 478+ 995A
 479+ 995A              ; --------------------------------------------------------------------------------------------------------------------
 480+ 995A              ;
 481+ 995A              ;   19/7/23
 482+ 995A              ;
 483+ 995A              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 995A              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 995A              ;
 486+ 995A              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 995A              ;			HL e IY Contienen (Puntero_objeto).
 488+ 995A              ;
 489+ 995A              ;	DESTRUYE: HL,B Y A.
 490+ 995A
 491+ 995A 3A D0 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 995D FE 02        	cp 2
 493+ 995F 38 18        	jr c,1F
 494+ 9961 28 16        	jr z,1F
 495+ 9963 E6 01        	and 1
 496+ 9965 28 0D        	jr z,3F
 497+ 9967
 498+ 9967              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9967
 500+ 9967 CD A3 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 996A
 502+ 996A 7D           9 ld a,l
 503+ 996B E6 1F        	and $1f
 504+ 996D 28 2A        	jr z,7F
 505+ 996F 2B           	dec hl
 506+ 9970 10 F8        	djnz 9B
 507+ 9972 18 25        	jr 7F
 508+ 9974
 509+ 9974              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9974
 511+ 9974 2A C1 8B     3 ld hl,(Posicion_actual)
 512+ 9977 18 20        	jr 7F
 513+ 9979
 514+ 9979 28 14        1 jr z,2F
 515+ 997B
 516+ 997B              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 997B
 518+ 997B CD A3 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 997E
 520+ 997E 7D           4 ld a,l
 521+ 997F E6 1F        	and $1f
 522+ 9981 28 03        	jr z,6F
 523+ 9983 2B           	dec hl
 524+ 9984 10 F8        	djnz 4B
 525+ 9986 06 0F        6 ld b,15
 526+ 9988 CD CA 99     5 call PreviousScan
 527+ 998B 10 FB        	djnz 5B
 528+ 998D 18 0A        	jr 7F
 529+ 998F
 530+ 998F              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 998F
 532+ 998F CD A3 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9992 06 0F        	ld b,15
 534+ 9994 CD CA 99     8 call PreviousScan
 535+ 9997 10 FB        	djnz 8B
 536+ 9999
 537+ 9999 E5           7 push hl
 538+ 999A DD E1        	pop ix
 539+ 999C
 540+ 999C 2A C3 8B     	ld hl,(Puntero_objeto)
 541+ 999F E5           	push hl
 542+ 99A0 FD E1        	pop iy
 543+ 99A2
 544+ 99A2 C9           	ret
 545+ 99A3
 546+ 99A3              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99A3              ;
 548+ 99A3              ;	2/1/23
 549+ 99A3              ;
 550+ 99A3              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99A3              ;
 552+ 99A3              ;	Tras esta rutina tenemos:
 553+ 99A3              ;
 554+ 99A3              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99A3              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99A3              ;
 557+ 99A3              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99A3
 559+ 99A3 2A C1 8B     Operandos ld hl,(Posicion_actual)
 560+ 99A6 3A D1 8B     	ld a,(Columnas)
 561+ 99A9 3D           	dec a
 562+ 99AA 20 01        	jr nz,1F
 563+ 99AC 3C           	inc a
 564+ 99AD 47           1 ld b,a
 565+ 99AE C9           	ret
 566+ 99AF
 567+ 99AF              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99AF              ;
 569+ 99AF              ;	Prepara_draw
 570+ 99AF              ;
 571+ 99AF              ;	Es una rutina de carga.
 572+ 99AF              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99AF              ;
 574+ 99AF              ;	FUNCIONAMIENTO:
 575+ 99AF              ;
 576+ 99AF              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99AF              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99AF              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99AF              ;
 580+ 99AF              ;	DESTRUYE:
 581+ 99AF              ;
 582+ 99AF              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99AF
 584+ 99AF 21 BF 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99B2 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99B3 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99B4 4E           	ld c,(hl)
 588+ 99B5 2A C1 8B     	ld hl,(Posicion_actual)
 589+ 99B8 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99BA C9           	ret
 591+ 99BB
 592+ 99BB              ;----------------------------------------------------------------------------------------------------------------
 593+ 99BB              ;
 594+ 99BB              ;	5/08/22
 595+ 99BB              ;
 596+ 99BB              ;   NextScan.
 597+ 99BB              ;
 598+ 99BB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99BB              ;
 600+ 99BB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99BB              ;
 602+ 99BB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99BB              ;
 604+ 99BB              ;       DESTRUIDOS: AF y HL !!!
 605+ 99BB              ;
 606+ 99BB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99BB              ;
 608+ 99BB
 609+ 99BB 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99BC 7C               ld a,h
 611+ 99BD E6 07            and 7
 612+ 99BF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99C0
 614+ 99C0 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C1 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99C3 6F               ld l,a
 617+ 99C4 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C5
 619+ 99C5 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C6 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C8 67               ld h,a
 622+ 99C9 C9               ret
 623+ 99CA
 624+ 99CA              ;----------------------------------------------------------------------------------------------------------------
 625+ 99CA              ;
 626+ 99CA              ;	5/08/22
 627+ 99CA              ;
 628+ 99CA              ;   PreviousScan.
 629+ 99CA              ;
 630+ 99CA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99CA              ;
 632+ 99CA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99CA              ;
 634+ 99CA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99CA              ;
 636+ 99CA              ;       DESTRUIDOS: AF y HL !!!
 637+ 99CA              ;
 638+ 99CA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99CA              ;
 640+ 99CA
 641+ 99CA 7C           PreviousScan ld a,h
 642+ 99CB 25               dec h               ; Dec H.
 643+ 99CC E6 07            and 7
 644+ 99CE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99CF
 646+ 99CF 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99D0 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99D2 6F               ld l,a
 649+ 99D3 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99D4
 651+ 99D4 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D5 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D7 67               ld h,a
 654+ 99D8 C9               ret
 655+ 99D9
 656+ 99D9
 657+ 99D9
 658+ 99D9
 659+ 99D9
 660+ 99D9
 661+ 99D9
 662+ 99D9
 663+ 99D9
 664+ 99D9
 665+ 99D9
 666+ 99D9
# file closed: Draw_XOR.asm
2168  99D9              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D9
   2+ 99D9              ; ******************************************************************************************************************************************************************************************
   3+ 99D9              ;
   4+ 99D9              ;   20/05/23
   5+ 99D9              ;
   6+ 99D9              ;	Recompone_posicion_inicio
   7+ 99D9              ;
   8+ 99D9              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99D9              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99D9              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99D9              ;	_ a una u otra rutina.
  12+ 99D9
  13+ 99D9              Recompone_posicion_inicio
  14+ 99D9
  15+ 99D9 2A CE 8B     	ld hl,(Posicion_inicio)
  16+ 99DC 7D           	ld a,l
  17+ 99DD E6 1F        	and $1f
  18+ 99DF 28 16        	jr z,1F
  19+ 99E1
  20+ 99E1 FE 1F        	cp $1f
  21+ 99E3 28 0D        	jr z,3F
  22+ 99E5
  23+ 99E5 21 BD 8B     	ld hl,Ctrl_2
  24+ 99E8 CB C6        	set 0,(hl)
  25+ 99EA 2A C3 8B     	ld hl,(Puntero_objeto)
  26+ 99ED 22 EF 8B     	ld (Repone_puntero_objeto),hl
  27+ 99F0 18 08        	jr 2F
  28+ 99F2
  29+ 99F2 CD A0 9B     3 call Mov_left
  30+ 99F5 18 03        	jr 2F
  31+ 99F7
  32+ 99F7 CD 7D 9A     1 call Mov_right
  33+ 99FA 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99FD 22 C3 8B     	ld (Puntero_objeto),hl
  35+ 9A00 C9           	ret
  36+ 9A01
  37+ 9A01              ; ******************************************************************************************************************************************************************************************
  38+ 9A01              ;
  39+ 9A01              ;   27/05/23
  40+ 9A01              ;
  41+ 9A01              ;	Mov_down
  42+ 9A01              ;
  43+ 9A01              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A01              ;
  45+ 9A01              ;
  46+ 9A01              Mov_down
  47+ 9A01
  48+ 9A01 CD 6B 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A04              ;																	; _ repone (Puntero_objeto).
  50+ 9A04 21 BE 8B     	ld hl,Ctrl_0
  51+ 9A07 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A09              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A09              ; 																	; _ en el caso de que no lo haya.
  54+ 9A09 3A D9 8B     	ld a,(Vel_down)
  55+ 9A0C 47           	ld b,a
  56+ 9A0D 2A C1 8B         ld hl,(Posicion_actual)
  57+ 9A10 CD A7 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A13 E6 02        	and 2
  59+ 9A15 28 17        	jr z,1F
  60+ 9A17
  61+ 9A17              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A17              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A17
  64+ 9A17 7C           	ld a,h
  65+ 9A18 FE 57        	cp $57
  66+ 9A1A 20 12        	jr nz,1F
  67+ 9A1C
  68+ 9A1C 7D           	ld a,l
  69+ 9A1D C6 20        	add $20
  70+ 9A1F 30 0D        	jr nc,1F
  71+ 9A21
  72+ 9A21              ; ------------------------------
  73+ 9A21              ;
  74+ 9A21              ;	12/01/24
  75+ 9A21
  76+ 9A21              ;	call Reaparece_arriba
  77+ 9A21 CD 2D 9D     	call Reinicio
  78+ 9A24
  79+ 9A24              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A24
  81+ 9A24 3A 24 8C     	ld a,(Ctrl_3)
  82+ 9A27 CB CF        	set 1,a
  83+ 9A29 32 24 8C     	ld (Ctrl_3),a
  84+ 9A2C
  85+ 9A2C 18 08        	jr 3F
  86+ 9A2E              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A2E              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A2E              ; ------------------------------
  89+ 9A2E
  90+ 9A2E CD BB 99     1 call NextScan
  91+ 9A31 22 C1 8B     	ld (Posicion_actual),hl
  92+ 9A34 10 DA            djnz 2B
  93+ 9A36 CD C5 94     3 call Genera_coordenadas
  94+ 9A39 C9           	ret
  95+ 9A3A
  96+ 9A3A              ; ******************************************************************************************************************************************************************************************
  97+ 9A3A              ;
  98+ 9A3A              ;   27/05/23
  99+ 9A3A              ;
 100+ 9A3A              ;	Mov_up
 101+ 9A3A              ;
 102+ 9A3A              ; 	Mueve el Sprite hacia arriba.
 103+ 9A3A              ;
 104+ 9A3A              ;
 105+ 9A3A              Mov_up
 106+ 9A3A
 107+ 9A3A CD 6B 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A3D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A3D 21 BE 8B     	ld hl,Ctrl_0
 110+ 9A40 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A42              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A42              ; 																		; _ en el caso de que no lo haya.
 113+ 9A42 3A D8 8B     	ld a,(Vel_up)
 114+ 9A45 47           	ld b,a
 115+ 9A46 2A C1 8B     	ld hl,(Posicion_actual)
 116+ 9A49 CD A7 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A4C A7           	and a
 118+ 9A4D 20 10        	jr nz,1F
 119+ 9A4F
 120+ 9A4F              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A4F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A4F
 123+ 9A4F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A50 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A52 20 0B            jr nz,1F
 126+ 9A54 7D               ld a,l
 127+ 9A55 D6 20            sub $20
 128+ 9A57 30 06            jr nc,1F
 129+ 9A59 25               dec h
 130+ 9A5A
 131+ 9A5A              ; -----------------------------
 132+ 9A5A CD 0E 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A5D              ;	call Reinicio
 134+ 9A5D              ; -----------------------------
 135+ 9A5D
 136+ 9A5D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A5F CD CA 99     1 call PreviousScan
 138+ 9A62 22 C1 8B     	ld (Posicion_actual),hl
 139+ 9A65 10 E2            djnz 3B
 140+ 9A67 CD C5 94     2 call Genera_coordenadas
 141+ 9A6A C9           	ret
 142+ 9A6B
 143+ 9A6B              ; -----------------------------
 144+ 9A6B              ;
 145+ 9A6B              ;	27/5/23
 146+ 9A6B              ;
 147+ 9A6B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A6B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A6B              ;
 150+ 9A6B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A6B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A6B              ;
 153+ 9A6B              ;	Modifica: A y (Puntero_objeto).
 154+ 9A6B
 155+ 9A6B 3A BD 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A6E CB 47        	bit 0,a
 157+ 9A70 C8           	ret z
 158+ 9A71 CB 87        	res 0,a
 159+ 9A73 32 BD 8B     	ld (Ctrl_2),a
 160+ 9A76 2A EF 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A79 22 C3 8B     	ld (Puntero_objeto),hl
 162+ 9A7C C9           	ret
 163+ 9A7D
 164+ 9A7D              ; ******************************************************************************************************************************************************************************************
 165+ 9A7D              ;
 166+ 9A7D              ;	19/10/22
 167+ 9A7D              ;
 168+ 9A7D              ;	Mov_right.
 169+ 9A7D              ;
 170+ 9A7D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A7D              ;
 172+ 9A7D
 173+ 9A7D 3A BE 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A80 CB 77        	bit 6,a
 175+ 9A82 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A84
 177+ 9A84 CD BC 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A87 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A88
 180+ 9A88 21 BE 8B     	ld hl,Ctrl_0
 181+ 9A8B CB E6        	set 4,(hl)
 182+ 9A8D 18 52        	jr 8F
 183+ 9A8F
 184+ 9A8F 21 BE 8B     10 ld hl,Ctrl_0
 185+ 9A92 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A94              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A94              ; 																	; _ en el caso de que no lo haya.
 188+ 9A94 3A B2 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A97 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A99 20 46        	jr nz,8F
 191+ 9A9B
 192+ 9A9B 3A C5 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A9E A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A9F 28 40        	jr z,8F
 195+ 9AA1
 196+ 9AA1              ; ---------- ---------- ----------
 197+ 9AA1              ;
 198+ 9AA1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA1
 200+ 9AA1 3A D7 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AA4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA6 28 11        	jr z,1F
 203+ 9AA8 38 06        	jr c,6F
 204+ 9AAA FE 04        	cp 4
 205+ 9AAC 28 14        	jr z,7F
 206+ 9AAE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AB0
 208+ 9AB0              ; ---------- ---------- ----------
 209+ 9AB0              ;
 210+ 9AB0              ; Perfiles de velocidad
 211+ 9AB0              ;
 212+ 9AB0
 213+ 9AB0 3A C5 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AB3 FE FE        	cp $fe
 215+ 9AB5 20 2A        	jr nz,8F
 216+ 9AB7 18 10        	jr 3F
 217+ 9AB9 3A C5 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ABC FE FD        	cp $fd
 219+ 9ABE 20 21        	jr nz,8F
 220+ 9AC0 18 07        	jr 3F
 221+ 9AC2 3A C5 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC5 FE FB        	cp $fb
 223+ 9AC7 20 18        	jr nz,8F
 224+ 9AC9
 225+ 9AC9              ; ---------- ---------- ----------
 226+ 9AC9
 227+ 9AC9              3
 228+ 9AC9 CD FC 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ACC              ;	call Reinicio
 230+ 9ACC
 231+ 9ACC              ; ---------- ---------- ----------
 232+ 9ACC              ;
 233+ 9ACC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ACC
 235+ 9ACC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ACE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ACF CD E8 9A     	call DESPLZ_DER
 238+ 9AD2 C1           	pop bc
 239+ 9AD3 10 F9        	djnz 5B
 240+ 9AD5 2A C1 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AD9 22 C1 8B     	ld (Posicion_actual),hl
 243+ 9ADC CD C5 94     	call Genera_coordenadas
 244+ 9ADF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE1
 246+ 9AE1              ; ---------- ---------- ----------
 247+ 9AE1
 248+ 9AE1 2A C1 8B     8 ld hl,(Posicion_actual)
 249+ 9AE4 CD E8 9A     	call DESPLZ_DER
 250+ 9AE7 C9           2 ret
 251+ 9AE8
 252+ 9AE8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE8              ;
 254+ 9AE8              ;	22/9/22
 255+ 9AE8              ;
 256+ 9AE8
 257+ 9AE8 CD F7 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AEB CD 43 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AEE CD 6C 9B         call Ciclo_completo
 260+ 9AF1 21 BE 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AF4 CB FE        	set 7,(hl)
 262+ 9AF6 C9           	ret
 263+ 9AF7
 264+ 9AF7              ; ******************************************************************************************************************************************************************************************
 265+ 9AF7              ;	15/02/23
 266+ 9AF7              ;
 267+ 9AF7
 268+ 9AF7 3A D7 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AFA 47           	ld b,a
 270+ 9AFB 2A CA 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AFE 23           1 inc hl
 272+ 9AFF 23           	inc hl
 273+ 9B00 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B02 22 CA 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B05 CD A6 90     	call Extrae_address
 276+ 9B08 22 C3 8B     	ld (Puntero_objeto),hl
 277+ 9B0B
 278+ 9B0B              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B0B
 280+ 9B0B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B0B              ; Cuántos movimientos hemos hecho ??
 282+ 9B0B              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B0B
 284+ 9B0B 2A C6 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B0E EB           	ex de,hl
 286+ 9B0F A7           	and a
 287+ 9B10 ED 52        	sbc hl,de
 288+ 9B12 CB 3D        	srl l
 289+ 9B14 3E 08        6 ld a,8
 290+ 9B16 95           	sub l
 291+ 9B17 30 1E        	jr nc,3F
 292+ 9B19
 293+ 9B19              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B19              ; B="0".
 295+ 9B19
 296+ 9B19 04           4 inc b
 297+ 9B1A 3C           	inc a
 298+ 9B1B 20 FC        	jr nz,4B
 299+ 9B1D 78           	ld a,b
 300+ 9B1E 08           	ex af,af
 301+ 9B1F 2A C6 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B22 23           5 inc hl
 303+ 9B23 23           	inc hl
 304+ 9B24 10 FC        	djnz 5B
 305+ 9B26 22 CA 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B29 CD A6 90     	call Extrae_address
 307+ 9B2C 22 C3 8B     	ld (Puntero_objeto),hl
 308+ 9B2F
 309+ 9B2F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B2F              ; _(Posicion_actual).
 311+ 9B2F
 312+ 9B2F 21 C1 8B     	ld hl,Posicion_actual
 313+ 9B32 34           	inc (hl)
 314+ 9B33 08               ex af,af
 315+ 9B34 6F           	ld l,a
 316+ 9B35 18 DD        	jr 6B
 317+ 9B37
 318+ 9B37              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B37
 320+ 9B37 47           3 ld b,a
 321+ 9B38 2A C8 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B3B 23           2 inc hl
 323+ 9B3C 23           	inc hl
 324+ 9B3D 10 FC        	djnz 2B
 325+ 9B3F 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B42 C9           8 ret
 327+ 9B43
 328+ 9B43              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B43              ;
 330+ 9B43              ;	24/7/22
 331+ 9B43              ;
 332+ 9B43              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B43              ;
 334+ 9B43              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B43              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B43              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B43
 338+ 9B43 3A C5 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B46 A7           	and a
 340+ 9B47 20 1F        	jr nz,1F
 341+ 9B49 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B4B 32 C5 8B         ld (CTRL_DESPLZ),a
 343+ 9B4E
 344+ 9B4E 21 C0 8B     	ld hl,Columns
 345+ 9B51 34           	inc (hl)
 346+ 9B52 3A D0 8B     	ld a,(Cuad_objeto)
 347+ 9B55 E6 01        	and 1
 348+ 9B57 28 0F        	jr z,1F
 349+ 9B59 2A C1 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B5C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B5D 22 C1 8B     	ld (Posicion_actual),hl
 352+ 9B60 CD C5 94     	call Genera_coordenadas
 353+ 9B63 CD C8 9C     	call Inc_CTRL_DESPLZ
 354+ 9B66 18 03        	jr 2F
 355+ 9B68 CD C8 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B6B C9           2 ret
 357+ 9B6C
 358+ 9B6C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B6C              ;
 360+ 9B6C              ;	24/7/22
 361+ 9B6C              ;
 362+ 9B6C              ;	Ciclo_completo.
 363+ 9B6C              ;
 364+ 9B6C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B6C              ;
 366+ 9B6C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B6C              ; 	Decrementamos (Columns).
 368+ 9B6C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B6C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B6C
 371+ 9B6C
 372+ 9B6C 3A C5 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B6F FE FF        	cp $ff
 374+ 9B71 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B73 E6 F0        	and $f0
 376+ 9B75 20 28        	jr nz,3F
 377+ 9B77
 378+ 9B77              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B77
 380+ 9B77 3A C5 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B7A 47           	ld b,a
 382+ 9B7B 3E F8        	ld a,$f8
 383+ 9B7D 80           	add b
 384+ 9B7E 32 C5 8B     	ld (CTRL_DESPLZ),a
 385+ 9B81 18 1C        	jr 3F
 386+ 9B83 21 C0 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B86 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B87 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B88 32 C5 8B     	ld (CTRL_DESPLZ),a
 390+ 9B8B 3A D0 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B8E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B90 20 0A        	jr nz,2F
 393+ 9B92 2A C1 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B95 23           	inc hl
 395+ 9B96 22 C1 8B     	ld (Posicion_actual),hl
 396+ 9B99 CD C5 94     	call Genera_coordenadas
 397+ 9B9C
 398+ 9B9C              ; Inicia el puntero de Sprite.
 399+ 9B9C
 400+ 9B9C CD BB 90     2 call Inicia_puntero_objeto_der
 401+ 9B9F C9           3 ret
 402+ 9BA0
 403+ 9BA0              ; ******************************************************************************************************************************************************************************************
 404+ 9BA0              ;
 405+ 9BA0              ;	15/02/23
 406+ 9BA0              ;
 407+ 9BA0              ;	Mov_left.
 408+ 9BA0              ;
 409+ 9BA0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BA0              ;
 411+ 9BA0              Mov_left
 412+ 9BA0
 413+ 9BA0 21 BE 8B     	ld hl,Ctrl_0
 414+ 9BA3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA5              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA5 3A BE 8B     	ld a,(Ctrl_0)
 418+ 9BA8 CB 77        	bit 6,a
 419+ 9BAA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BAC
 421+ 9BAC CD C2 9C     	call Stop_Amadeus_left
 422+ 9BAF C8           	ret z
 423+ 9BB0 20 4A        	jr nz,8F
 424+ 9BB2
 425+ 9BB2 3A B2 8B     11 ld a,(Coordenada_X)
 426+ 9BB5 A7           	and a
 427+ 9BB6 20 44        	jr nz,8F
 428+ 9BB8
 429+ 9BB8 3A C5 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BBB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BBC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BBE
 433+ 9BBE              ; ---------- ---------- ----------
 434+ 9BBE
 435+ 9BBE 3A D6 8B     	ld a,(Vel_left)
 436+ 9BC1 FE 02        	cp 2
 437+ 9BC3 28 0F        	jr z,1F
 438+ 9BC5 38 04        	jr c,6F
 439+ 9BC7 FE 04        	cp 4
 440+ 9BC9 28 12        	jr z,7F
 441+ 9BCB
 442+ 9BCB              ; ---------- ---------- ----------
 443+ 9BCB
 444+ 9BCB 3A C5 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BCE FE F8        	cp $f8
 446+ 9BD0 20 2A        	jr nz,8F
 447+ 9BD2 18 10        	jr 4F
 448+ 9BD4 3A C5 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BD7 FE F9        	cp $f9
 450+ 9BD9 20 21        	jr nz,8F
 451+ 9BDB 18 07        	jr 4F
 452+ 9BDD 3A C5 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BE0 FE FB        	cp $fb
 454+ 9BE2 20 18        	jr nz,8F
 455+ 9BE4
 456+ 9BE4              ; ---------- ---------- ----------
 457+ 9BE4
 458+ 9BE4              4
 459+ 9BE4 CD EA 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE7              ;	call Reinicio
 461+ 9BE7
 462+ 9BE7              ; ---------- ---------- ----------
 463+ 9BE7
 464+ 9BE7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BE9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BEA
 467+ 9BEA              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BEA              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BEA
 470+ 9BEA CD 03 9C     	call DESPLZ_IZQ
 471+ 9BED C1           	pop bc
 472+ 9BEE 10 F9        	djnz 5B
 473+ 9BF0 2A C1 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BF3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BF4 22 C1 8B     	ld (Posicion_actual),hl
 476+ 9BF7 CD C5 94     	call Genera_coordenadas
 477+ 9BFA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BFC
 479+ 9BFC              ; ---------- ---------- ----------
 480+ 9BFC
 481+ 9BFC              ; Movemos, no hay recolocación.
 482+ 9BFC
 483+ 9BFC 2A C1 8B     8 ld hl,(Posicion_actual)
 484+ 9BFF CD 03 9C     	call DESPLZ_IZQ
 485+ 9C02 C9           2 ret
 486+ 9C03
 487+ 9C03              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C03              ;
 489+ 9C03              ;	22/9/22
 490+ 9C03
 491+ 9C03              DESPLZ_IZQ
 492+ 9C03
 493+ 9C03 CD 12 9C     	call Desplaza_izquierda
 494+ 9C06 CD 5E 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C09 CD 86 9C     	call Ciclo_completo_2
 496+ 9C0C 21 BE 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C0F CB BE        	res 7,(hl)
 498+ 9C11 C9           	ret
 499+ 9C12
 500+ 9C12              Desplaza_izquierda
 501+ 9C12
 502+ 9C12 3A D6 8B     	ld a,(Vel_left)
 503+ 9C15 47           	ld b,a
 504+ 9C16 2A CC 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C19 23           1 inc hl
 506+ 9C1A 23           	inc hl
 507+ 9C1B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C1D 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C20 CD A6 90     	call Extrae_address
 510+ 9C23 22 C3 8B     	ld (Puntero_objeto),hl
 511+ 9C26
 512+ 9C26              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C26
 514+ 9C26              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C26              ; Cuántos movimientos hemos hecho ??
 516+ 9C26              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C26
 518+ 9C26 2A C8 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C29 EB           	ex de,hl
 520+ 9C2A A7           	and a
 521+ 9C2B ED 52        	sbc hl,de
 522+ 9C2D CB 3D        	srl l
 523+ 9C2F 3E 08        6 ld a,8
 524+ 9C31 95           	sub l
 525+ 9C32 30 1E        	jr nc,3F
 526+ 9C34
 527+ 9C34              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C34              ; B="0".
 529+ 9C34
 530+ 9C34 04           4 inc b
 531+ 9C35 3C           	inc a
 532+ 9C36 20 FC        	jr nz,4B
 533+ 9C38 78           	ld a,b
 534+ 9C39 08           	ex af,af
 535+ 9C3A 2A C8 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C3D 23           5 inc hl
 537+ 9C3E 23           	inc hl
 538+ 9C3F 10 FC        	djnz 5B
 539+ 9C41 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C44 CD A6 90     	call Extrae_address
 541+ 9C47 22 C3 8B     	ld (Puntero_objeto),hl
 542+ 9C4A
 543+ 9C4A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C4A              ; _(Posicion_actual).
 545+ 9C4A
 546+ 9C4A 21 C1 8B     	ld hl,Posicion_actual
 547+ 9C4D 35           	dec (hl)
 548+ 9C4E 08           	ex af,af
 549+ 9C4F 6F           	ld l,a
 550+ 9C50 18 DD        	jr 6B
 551+ 9C52
 552+ 9C52              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C52
 554+ 9C52 47           3 ld b,a
 555+ 9C53 2A C6 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C56 23           2 inc hl
 557+ 9C57 23           	inc hl
 558+ 9C58 10 FC        	djnz 2B
 559+ 9C5A 22 CA 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C5D C9           8 ret
 561+ 9C5E
 562+ 9C5E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C5E              ;
 564+ 9C5E              ;	modifica_parametros_1er_DESPLZ
 565+ 9C5E              ;
 566+ 9C5E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C5E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C5E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C5E
 570+ 9C5E 3A C5 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C61 A7           	and a
 572+ 9C62 20 1E        	jr nz,1F
 573+ 9C64 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C65 32 C5 8B         ld (CTRL_DESPLZ),a
 575+ 9C68 21 C0 8B     	ld hl,Columns
 576+ 9C6B 34           	inc (hl)
 577+ 9C6C 3A D0 8B     	ld a,(Cuad_objeto)
 578+ 9C6F E6 01        	and 1
 579+ 9C71 20 0F        	jr nz,1F
 580+ 9C73 2A C1 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C76 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C77 22 C1 8B     	ld (Posicion_actual),hl
 583+ 9C7A CD C5 94     	call Genera_coordenadas
 584+ 9C7D CD D9 9C     	call Dec_CTRL_DESPLZ
 585+ 9C80 18 03        	jr 2F
 586+ 9C82 CD D9 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C85 C9           2 ret
 588+ 9C86
 589+ 9C86              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C86
 591+ 9C86 3A C5 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C89 FE F7        	cp $f7
 593+ 9C8B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C8D 30 2C        	jr nc,3F
 595+ 9C8F
 596+ 9C8F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C8F
 598+ 9C8F 06 00        	ld b,0
 599+ 9C91 04           4 inc b
 600+ 9C92 3C           	inc a
 601+ 9C93 FE F7        	cp $f7
 602+ 9C95 20 FA        	jr nz,4B
 603+ 9C97 3E FF        	ld a,$ff
 604+ 9C99 90           	sub b
 605+ 9C9A 32 C5 8B     	ld (CTRL_DESPLZ),a
 606+ 9C9D 18 1C        	jr 3F
 607+ 9C9F
 608+ 9C9F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C9F
 610+ 9C9F 21 C0 8B     1 ld hl,Columns
 611+ 9CA2 35           	dec (hl)
 612+ 9CA3 AF           	xor a
 613+ 9CA4 32 C5 8B     	ld (CTRL_DESPLZ),a
 614+ 9CA7 3A D0 8B     	ld a,(Cuad_objeto)
 615+ 9CAA E6 01        	and 1
 616+ 9CAC 28 0A        	jr z,2F
 617+ 9CAE 2A C1 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB1 2B           	dec hl
 619+ 9CB2 22 C1 8B     	ld (Posicion_actual),hl
 620+ 9CB5 CD C5 94     	call Genera_coordenadas
 621+ 9CB8
 622+ 9CB8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB8
 624+ 9CB8 CD CE 90     2 call Inicia_puntero_objeto_izq
 625+ 9CBB C9           3 ret
 626+ 9CBC
 627+ 9CBC              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CBC              ;
 629+ 9CBC              ;	19/10/22
 630+ 9CBC              ;
 631+ 9CBC              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CBC              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CBC
 634+ 9CBC 3A B2 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CBF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC1 C9           	ret
 637+ 9CC2
 638+ 9CC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CC2              ;
 640+ 9CC2              ;	19/10/22
 641+ 9CC2              ;
 642+ 9CC2              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CC2              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CC2
 645+ 9CC2 3A B2 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC7 C9           	ret
 648+ 9CC8
 649+ 9CC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC8              ;
 651+ 9CC8              ;	24/7/22
 652+ 9CC8              ;
 653+ 9CC8              ;	Inc_CTRL_DESPLZ
 654+ 9CC8              ;
 655+ 9CC8              ;
 656+ 9CC8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC8
 658+ 9CC8 21 C5 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CCB 3A D7 8B     	ld a,(Vel_right)
 660+ 9CCE A7           	and a
 661+ 9CCF 28 06        	jr z,1F
 662+ 9CD1 47           	ld b,a
 663+ 9CD2 34           3 inc (hl)
 664+ 9CD3 10 FD        	djnz 3B
 665+ 9CD5 18 01        	jr 2F
 666+ 9CD7 34           1 inc (hl)
 667+ 9CD8 C9           2 ret
 668+ 9CD9
 669+ 9CD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CD9              ;
 671+ 9CD9              ;	5/2/23
 672+ 9CD9              ;
 673+ 9CD9              ;	Dec_CTRL_DESPLZ
 674+ 9CD9              ;
 675+ 9CD9              ;
 676+ 9CD9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CD9
 678+ 9CD9 21 C5 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CDC 3A D6 8B     	ld a,(Vel_left)
 680+ 9CDF A7           	and a
 681+ 9CE0 28 06        	jr z,1F
 682+ 9CE2 47           	ld b,a
 683+ 9CE3 35           3 dec (hl)
 684+ 9CE4 10 FD        	djnz 3B
 685+ 9CE6 18 01        	jr 2F
 686+ 9CE8 35           1 dec (hl)
 687+ 9CE9 C9           2 ret
 688+ 9CEA
 689+ 9CEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CEA
 691+ 9CEA 2A C1 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CED 01 1F 00     	ld bc,31
 693+ 9CF0 A7           	and a
 694+ 9CF1 ED 4A        	adc hl,bc
 695+ 9CF3 22 C1 8B     	ld (Posicion_actual),hl
 696+ 9CF6 21 BE 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CF9 CB C6        	set 0,(hl)
 698+ 9CFB C9           	ret
 699+ 9CFC
 700+ 9CFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CFC
 702+ 9CFC 2A C1 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CFF 01 1F 00     	ld bc,31
 704+ 9D02 A7           	and a
 705+ 9D03 ED 42        	sbc hl,bc
 706+ 9D05 22 C1 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D08 21 BE 8B     	ld hl,Ctrl_0
 708+ 9D0B CB CE        	set 1,(hl)
 709+ 9D0D C9           	ret
 710+ 9D0E
 711+ 9D0E              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D0E
 713+ 9D0E 24           Reaparece_abajo inc h
 714+ 9D0F 01 E0 17     	ld bc,$17e0
 715+ 9D12 A7           	and a
 716+ 9D13 ED 4A        	adc hl,bc
 717+ 9D15 22 C1 8B     	ld (Posicion_actual),hl
 718+ 9D18 21 BE 8B     	ld hl,Ctrl_0
 719+ 9D1B CB D6        	set 2,(hl)
 720+ 9D1D C9           	ret
 721+ 9D1E
 722+ 9D1E              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D1E
 724+ 9D1E 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D21 A7           	and a
 726+ 9D22 ED 42        	sbc hl,bc
 727+ 9D24 22 C1 8B     	ld (Posicion_actual),hl
 728+ 9D27 21 BE 8B     	ld hl,Ctrl_0
 729+ 9D2A CB DE        	set 3,(hl)
 730+ 9D2C C9           	ret
 731+ 9D2D
 732+ 9D2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D2D              ;
 734+ 9D2D              ;	15/07/23
 735+ 9D2D
 736+ 9D2D              Reinicio
 737+ 9D2D
 738+ 9D2D              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D2D
 740+ 9D2D AF           	xor a
 741+ 9D2E 21 E6 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D31 CD 4F 9D     	call Limpia_contenido_hl
 743+ 9D34
 744+ 9D34 21 C1 8B     	ld hl,Posicion_actual
 745+ 9D37 CD 4F 9D     	call Limpia_contenido_hl
 746+ 9D3A
 747+ 9D3A CD A7 92     	call Inicializa_Puntero_indice_mov
 748+ 9D3D CD 4E 9E     	call Inicia_Puntero_mov
 749+ 9D40
 750+ 9D40 21 E8 8B     	ld hl,Incrementa_puntero
 751+ 9D43 06 05        	ld b,5
 752+ 9D45 77           1 ld (hl),a
 753+ 9D46 23           	inc hl
 754+ 9D47 10 FC        	djnz 1B
 755+ 9D49
 756+ 9D49 21 BD 8B     	ld hl,Ctrl_2
 757+ 9D4C CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D4E
 759+ 9D4E C9           	ret
 760+ 9D4F
 761+ 9D4F 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D50 23           	inc hl
 763+ 9D51 77           	ld (hl),a
 764+ 9D52 C9           	ret
 765+ 9D53
 766+ 9D53              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D53              ;
 768+ 9D53              ;	18/6/24
 769+ 9D53              ;
 770+ 9D53
 771+ 9D53              Amadeus_a_izquierda
 772+ 9D53
 773+ 9D53              ;	Actualiza contador de movimientos.
 774+ 9D53
 775+ 9D53 21 6F 89     	ld hl,Comm_Amadeus
 776+ 9D56 35           	dec (hl)
 777+ 9D57 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D59
 779+ 9D59 2A 6D 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D5C 2B           	dec hl
 781+ 9D5D 2B           	dec hl
 782+ 9D5E 2B           	dec hl
 783+ 9D5F 2B           	dec hl
 784+ 9D60 22 6D 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D63
 786+ 9D63 21 24 8C     	ld hl,Ctrl_3
 787+ 9D66 CB EE        	set 5,(hl)
 788+ 9D68
 789+ 9D68 C9           	ret
 790+ 9D69
 791+ 9D69 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D6A C9           	ret
 793+ 9D6B
 794+ 9D6B
 795+ 9D6B              Amadeus_a_derecha
 796+ 9D6B
 797+ 9D6B              ;	Actualiza contador de movimientos.
 798+ 9D6B
 799+ 9D6B 21 6F 89     	ld hl,Comm_Amadeus
 800+ 9D6E 34           	inc (hl)
 801+ 9D6F 3E 7A        	ld a,$7a
 802+ 9D71 BE           	cp (hl)
 803+ 9D72 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D74
 805+ 9D74 2A 6D 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D77 23           	inc hl
 807+ 9D78 23           	inc hl
 808+ 9D79 23           	inc hl
 809+ 9D7A 23           	inc hl
 810+ 9D7B 22 6D 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D7E
 812+ 9D7E 21 24 8C     	ld hl,Ctrl_3
 813+ 9D81 CB EE        	set 5,(hl)
 814+ 9D83 C9           	ret
 815+ 9D84
 816+ 9D84 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D85 C9           	ret
# file closed: Direcciones.asm
2169  9D86              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D86              ; ----- ----- ----- ----- -----
   2+ 9D86              ;
   3+ 9D86              ;   28/12/23
   4+ 9D86
   5+ 9D86              Movimiento
   6+ 9D86
   7+ 9D86              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D86
   9+ 9D86 3A BD 8B         ld a,(Ctrl_2)
  10+ 9D89 CB 57            bit 2,a
  11+ 9D8B 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D8D
  13+ 9D8D 2A E4 8B         ld hl,(Puntero_mov)
  14+ 9D90 7E               ld a,(hl)
  15+ 9D91
  16+ 9D91              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D91
  18+ 9D91              Inicia_desplazamiento.
  19+ 9D91
  20+ 9D91              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D91
  22+ 9D91 CD 84 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D94
  24+ 9D94              ; Iniciamos (Repetimos_mov).
  25+ 9D94
  26+ 9D94 7E               ld a,(hl)
  27+ 9D95 E6 0F            and $0f
  28+ 9D97 32 EA 8B         ld (Repetimos_desplazamiento),a
  29+ 9D9A 32 EB 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D9D
  31+ 9D9D              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D9D
  33+ 9D9D 23               inc hl
  34+ 9D9E 7E               ld a,(hl)
  35+ 9D9F 32 ED 8B         ld (Cola_de_desplazamiento),a
  36+ 9DA2 2B               dec hl
  37+ 9DA3
  38+ 9DA3 21 BD 8B         ld hl,Ctrl_2
  39+ 9DA6 CB D6            set 2,(hl)
  40+ 9DA8
  41+ 9DA8              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA8              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA8
  44+ 9DA8              Desplazamiento_iniciado
  45+ 9DA8
  46+ 9DA8 CD 58 9E         call Aplica_desplazamiento
  47+ 9DAB
  48+ 9DAB              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DAB
  50+ 9DAB 3A 24 8C         ld a,(Ctrl_3)
  51+ 9DAE CB 4F            bit 1,a
  52+ 9DB0 C0               ret nz
  53+ 9DB1
  54+ 9DB1 21 EA 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DB4 35               dec (hl)
  56+ 9DB5 C0               ret nz
  57+ 9DB6
  58+ 9DB6              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB6              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB6              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB6
  62+ 9DB6 3A ED 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DB9 A7               and a
  64+ 9DBA CC AD 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DBD 28 30            jr z,Reinicia_el_movimiento
  66+ 9DBF
  67+ 9DBF FE FF            cp $ff
  68+ 9DC1 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DC3
  70+ 9DC3 FE FE            cp $fe
  71+ 9DC5 CC 32 9E         call z,Fijamos_bucle
  72+ 9DC8 28 25            jr z,Reinicia_el_movimiento
  73+ 9DCA
  74+ 9DCA FE FD            cp $fd
  75+ 9DCC 20 11            jr nz,1F
  76+ 9DCE
  77+ 9DCE              ; ---
  78+ 9DCE              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DCE
  80+ 9DCE 3A BD 8B         ld a,(Ctrl_2)
  81+ 9DD1 CB 5F            bit 3,a
  82+ 9DD3 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD5
  84+ 9DD5              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD5
  86+ 9DD5 21 BD 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD8 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DDA
  89+ 9DDA CD 43 9E         call Inicia_Repetimos_movimiento
  90+ 9DDD 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DDF              ; ---
  92+ 9DDF
  93+ 9DDF FE 01        1 cp 1
  94+ 9DE1 CA 1C 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DE4
  96+ 9DE4 3D               dec a
  97+ 9DE5 32 ED 8B         ld (Cola_de_desplazamiento),a
  98+ 9DE8
  99+ 9DE8 3A EB 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DEB 32 EA 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DEE              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DEE C9               ret
 103+ 9DEF
 104+ 9DEF              Reinicia_el_movimiento
 105+ 9DEF
 106+ 9DEF 3A BD 8B         ld a,(Ctrl_2)
 107+ 9DF2 CB 5F            bit 3,a
 108+ 9DF4 28 1B            jr z,2F
 109+ 9DF6
 110+ 9DF6              ; (Cola_de_desplazamiento)="254".
 111+ 9DF6
 112+ 9DF6 21 EC 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DF9 35               dec (hl)
 114+ 9DFA 20 15            jr nz,2F
 115+ 9DFC
 116+ 9DFC              ; Fin de las repeticiones del último movimiento.
 117+ 9DFC
 118+ 9DFC 21 BD 8B         ld hl,Ctrl_2
 119+ 9DFF CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E01
 121+ 9E01 2A E4 8B         ld hl,(Puntero_mov)
 122+ 9E04 23               inc hl
 123+ 9E05 23               inc hl
 124+ 9E06 23               inc hl
 125+ 9E07 22 E4 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E0A              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E0A 7E               ld a,(hl)
 128+ 9E0B 32 ED 8B         ld (Cola_de_desplazamiento),a
 129+ 9E0E
 130+ 9E0E C3 B6 9D         jp Cola
 131+ 9E11
 132+ 9E11 CD 4E 9E     2 call Inicia_Puntero_mov
 133+ 9E14
 134+ 9E14 21 BD 8B         ld hl,Ctrl_2
 135+ 9E17 CB 96            res 2,(hl)
 136+ 9E19
 137+ 9E19 C3 86 9D         jp Movimiento
 138+ 9E1C
 139+ 9E1C              Siguiente_desplazamiento
 140+ 9E1C
 141+ 9E1C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E1C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E1C
 144+ 9E1C 21 BD 8B         ld hl,Ctrl_2
 145+ 9E1F CB 96            res 2,(hl)
 146+ 9E21
 147+ 9E21 2A E4 8B         ld hl,(Puntero_mov)
 148+ 9E24 23               inc hl
 149+ 9E25 23               inc hl
 150+ 9E26 22 E4 8B         ld (Puntero_mov),hl
 151+ 9E29
 152+ 9E29 7E               ld a,(hl)
 153+ 9E2A A7               and a
 154+ 9E2B CC AD 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E2E CA EF 9D         jp z,Reinicia_el_movimiento
 156+ 9E31
 157+ 9E31 C9               ret
 158+ 9E32
 159+ 9E32              ; Subrutinas -----------------------------------------
 160+ 9E32              ; ---------- --------- --------- ---------- ----------
 161+ 9E32              ;
 162+ 9E32              ;   24/07/23
 163+ 9E32              ;
 164+ 9E32              ;   Fijamos_bucle
 165+ 9E32              ;
 166+ 9E32              ;
 167+ 9E32
 168+ 9E32              Fijamos_bucle
 169+ 9E32
 170+ 9E32 3A E8 8B         ld a,(Incrementa_puntero)
 171+ 9E35 3C               inc a
 172+ 9E36 32 E9 8B         ld (Incrementa_puntero_backup),a
 173+ 9E39
 174+ 9E39 CD AD 9E         call Incrementa_Puntero_indice_mov
 175+ 9E3C 2A E2 8B         ld hl,(Puntero_indice_mov)
 176+ 9E3F 22 E6 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E42 C9               ret
 178+ 9E43
 179+ 9E43              ; ---------- --------- --------- ---------- ----------
 180+ 9E43              ;
 181+ 9E43              ;   07/7/23
 182+ 9E43              ;
 183+ 9E43              ;   Inicia_Repetimos_movimiento
 184+ 9E43              ;
 185+ 9E43              ;
 186+ 9E43
 187+ 9E43              Inicia_Repetimos_movimiento
 188+ 9E43
 189+ 9E43              ; Iniciamos (Repetimos_movimiento).
 190+ 9E43
 191+ 9E43 DD 2A E4 8B      ld ix,(Puntero_mov)
 192+ 9E47 DD 7E 02         ld a,(ix+2)
 193+ 9E4A 32 EC 8B         ld (Repetimos_movimiento),a
 194+ 9E4D
 195+ 9E4D C9               ret
 196+ 9E4E
 197+ 9E4E              ; ---------- --------- --------- ---------- ----------
 198+ 9E4E              ;
 199+ 9E4E              ;   26/6/23
 200+ 9E4E              ;
 201+ 9E4E              ;   Inicia_Puntero_mov
 202+ 9E4E              ;
 203+ 9E4E              ;
 204+ 9E4E
 205+ 9E4E 2A E2 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E51 CD A6 90         call Extrae_address
 207+ 9E54 22 E4 8B         ld (Puntero_mov),hl
 208+ 9E57 C9               ret
 209+ 9E58
 210+ 9E58              ; ---------- --------- --------- ---------- ----------
 211+ 9E58              ;
 212+ 9E58              ;   27/06/23
 213+ 9E58              ;
 214+ 9E58              ;   Aplica_movimiento.
 215+ 9E58
 216+ 9E58              Aplica_desplazamiento
 217+ 9E58
 218+ 9E58              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E58
 220+ 9E58 2A E4 8B         ld hl, (Puntero_mov)
 221+ 9E5B
 222+ 9E5B 7E               ld a,(hl)
 223+ 9E5C E6 F0            and $f0
 224+ 9E5E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E5F
 226+ 9E5F CB 7E            bit 7,(hl)
 227+ 9E61 28 03            jr z,1F
 228+ 9E63 CD 3A 9A         call Mov_up
 229+ 9E66 2A E4 8B     1 ld hl, (Puntero_mov)
 230+ 9E69 CB 76            bit 6,(hl)
 231+ 9E6B 28 03            jr z,2F
 232+ 9E6D CD 01 9A         call Mov_down
 233+ 9E70
 234+ 9E70              ; Se ha aplicado reinicio ???
 235+ 9E70              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E70
 237+ 9E70              ;    ld a,(Ctrl_3)
 238+ 9E70              ;    bit 1,a
 239+ 9E70              ;    ret nz
 240+ 9E70
 241+ 9E70 2A E4 8B     2 ld hl, (Puntero_mov)
 242+ 9E73 CB 6E            bit 5,(hl)
 243+ 9E75 28 03            jr z,3F
 244+ 9E77 CD A0 9B         call Mov_left
 245+ 9E7A 2A E4 8B     3 ld hl, (Puntero_mov)
 246+ 9E7D CB 66            bit 4,(hl)
 247+ 9E7F C8               ret z
 248+ 9E80 CD 7D 9A         call Mov_right
 249+ 9E83 C9               ret
 250+ 9E84
 251+ 9E84              ; ---------- --------- --------- ---------- ----------
 252+ 9E84              ;
 253+ 9E84              ;   26/06/23
 254+ 9E84              ;
 255+ 9E84              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E84
 257+ 9E84              Ajusta_velocidad_desplazamiento
 258+ 9E84
 259+ 9E84              ; 1er byte de la cadena de movimiento.
 260+ 9E84              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E84
 262+ 9E84 CD A2 9E         call Extrae_nibble_alto
 263+ 9E87
 264+ 9E87 32 D8 8B         ld (Vel_up),a
 265+ 9E8A 79               ld a,c
 266+ 9E8B E6 0F            and $0f
 267+ 9E8D 32 D9 8B         ld (Vel_down),a
 268+ 9E90
 269+ 9E90              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E90              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E90
 272+ 9E90 23               inc hl
 273+ 9E91 CD A2 9E         call Extrae_nibble_alto
 274+ 9E94
 275+ 9E94 32 D6 8B         ld (Vel_left),a
 276+ 9E97 79               ld a,c
 277+ 9E98 E6 0F            and $0f
 278+ 9E9A 32 D7 8B         ld (Vel_right),a
 279+ 9E9D
 280+ 9E9D              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E9D
 282+ 9E9D 23               inc hl
 283+ 9E9E 22 E4 8B         ld (Puntero_mov),hl
 284+ 9EA1 C9               ret
 285+ 9EA2
 286+ 9EA2 06 04        Extrae_nibble_alto ld b,4
 287+ 9EA4 7E               ld a,(hl)
 288+ 9EA5 4F               ld c,a
 289+ 9EA6 E6 F0            and $f0
 290+ 9EA8 CB 3F        1 srl a
 291+ 9EAA 10 FC            djnz 1B
 292+ 9EAC C9               ret
 293+ 9EAD
 294+ 9EAD              ; ---------- --------- --------- ---------- ----------
 295+ 9EAD              ;
 296+ 9EAD              ;   5/7/23
 297+ 9EAD              ;
 298+ 9EAD              ;   Incrementa_Puntero_indice_mov
 299+ 9EAD
 300+ 9EAD              Incrementa_Puntero_indice_mov
 301+ 9EAD
 302+ 9EAD 21 E8 8B         ld hl,Incrementa_puntero
 303+ 9EB0 34               inc (hl)
 304+ 9EB1
 305+ 9EB1 2A E2 8B         ld hl,(Puntero_indice_mov)
 306+ 9EB4 01 02 00         ld bc,2
 307+ 9EB7 A7               and a
 308+ 9EB8 09               add hl,bc
 309+ 9EB9 22 E2 8B         ld (Puntero_indice_mov),hl
 310+ 9EBC
 311+ 9EBC 7E               ld a,(hl)
 312+ 9EBD A7               and a
 313+ 9EBE
 314+ 9EBE              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EBE
 316+ 9EBE              ;    jr z,$
 317+ 9EBE
 318+ 9EBE              ;! Reinicia el Patrón de movimiento.
 319+ 9EBE
 320+ 9EBE CC C3 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC1
 322+ 9EC1 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EC2
 324+ 9EC2 C9               ret
 325+ 9EC3
 326+ 9EC3              ; ---------- --------- --------- ---------- ----------
 327+ 9EC3              ;
 328+ 9EC3              ;   15/01/24
 329+ 9EC3              ;
 330+ 9EC3              ;   Inicializa_Puntero_indice_mov
 331+ 9EC3
 332+ 9EC3              Inicializa_Puntero_indice_mov_2
 333+ 9EC3
 334+ 9EC3              ; Existe etiqueta de bucle principal???
 335+ 9EC3
 336+ 9EC3 2A E6 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC6 24               inc h
 338+ 9EC7 25               dec h
 339+ 9EC8 28 05            jr z,2F
 340+ 9ECA
 341+ 9ECA 22 E2 8B         ld (Puntero_indice_mov),hl
 342+ 9ECD 18 14            jr 3F
 343+ 9ECF
 344+ 9ECF              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ECF
 346+ 9ECF 3A E8 8B     2 ld a,(Incrementa_puntero)
 347+ 9ED2 47               ld b,a
 348+ 9ED3
 349+ 9ED3 2A E2 8B         ld hl,(Puntero_indice_mov)
 350+ 9ED6 2B           1 dec hl
 351+ 9ED7 2B               dec hl
 352+ 9ED8 10 FC            djnz 1B
 353+ 9EDA 22 E2 8B         ld (Puntero_indice_mov),hl
 354+ 9EDD
 355+ 9EDD AF               xor a
 356+ 9EDE 32 E8 8B         ld (Incrementa_puntero),a
 357+ 9EE1 18 06            jr 4F
 358+ 9EE3
 359+ 9EE3 3A E9 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE6 32 E8 8B         ld (Incrementa_puntero),a
 361+ 9EE9 C9           4 ret
 362+ 9EEA
 363+ 9EEA              ; ----------------------------------------------------------------------
 364+ 9EEA              ;
 365+ 9EEA              ;   30/01/24
 366+ 9EEA              ;
 367+ 9EEA              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EEA
 369+ 9EEA 3A B1 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EED CD 42 94         call Calcula_salto_en_BC
 371+ 9EF0 21 DA 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EF3 A7               and a
 373+ 9EF4 ED 4A            adc hl,bc
 374+ 9EF6 C9               ret
 375+ 9EF7
 376+ 9EF7              ; ----------------------------------------------------------------------
 377+ 9EF7              ;
 378+ 9EF7              ;   30/01/24
 379+ 9EF7              ;
 380+ 9EF7              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF7              ;
 382+ 9EF7              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF7
 384+ 9EF7 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF8 23               inc hl
 386+ 9EF9 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EFA 69               ld l,c
 388+ 9EFB 60               ld h,b
 389+ 9EFC 22 BA 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EFF C9               ret
 391+ 9F00
# file closed: Movimiento.asm
2170  9F00              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F00              ; --------------------------------------------------------------------------------------
   2+ 9F00              ;
   3+ 9F00              ;   14/09/24
   4+ 9F00              ;
   5+ 9F00
   6+ 9F00              Genera_disparo_de_entidad_maldosa
   7+ 9F00
   8+ 9F00              ;   Estructura de un disparo de entidades.
   9+ 9F00
  10+ 9F00              ;   Disparo_1 defw 0								; Puntero objeto.
  11+ 9F00              ; 	defw 0											; Puntero de impresión.
  12+ 9F00              ;	db 0											; Control.
  13+ 9F00
  14+ 9F00              ;*  Exclusiones.
  15+ 9F00
  16+ 9F00              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
  17+ 9F00
  18+ 9F00 3A B3 8B         ld a,(Coordenada_y)
  19+ 9F03 A7               and a
  20+ 9F04 C8               ret z
  21+ 9F05
  22+ 9F05 3D               dec a
  23+ 9F06 C8               ret z
  24+ 9F07
  25+ 9F07 FE 0D            cp 13
  26+ 9F09 D0               ret nc
  27+ 9F0A
  28+ 9F0A              Define_puntero_objeto_disparo_de_entidades
  29+ 9F0A
  30+ 9F0A              ;   En este punto el registro B siempre está a "0" y HL apunta al puntero de impresión de la entidad.
  31+ 9F0A              ;   El disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) con cualquier_
  32+ 9F0A              ;   _ posición de cualquier entidad.
  33+ 9F0A              ;
  34+ 9F0A              ;   (Puntero_objeto) = "$00,$18"
  35+ 9F0A
  36+ 9F0A 7D               ld a,l
  37+ 9F0B C6 40            add $40
  38+ 9F0D
  39+ 9F0D 6F               ld l,a
  40+ 9F0E
  41+ 9F0E 4D               ld c,l
  42+ 9F0F 44               ld b,h
  43+ 9F10
  44+ 9F10              ;   Puntero de impresión del disparo en BC , (1 scanline libre entre la entidad y el disparo).
  45+ 9F10
  46+ 9F10              ;    di
  47+ 9F10              ;    jr $
  48+ 9F10              ;    ei
  49+ 9F10
  50+ 9F10               ;
  51+ 9F10 C9               ret
  52+ 9F11
  53+ 9F11 2C               inc l
  54+ 9F12
  55+ 9F12
  56+ 9F12
  57+ 9F12
  58+ 9F12 3E 80            ld a,$80
  59+ 9F14 BE               cp (hl)
  60+ 9F15 28 7F            jr z,1F
  61+ 9F17
  62+ 9F17 04               inc b
  63+ 9F18
  64+ 9F18 3E 60            ld a,$60
  65+ 9F1A BE               cp (hl)
  66+ 9F1B 28 79            jr z,1F
  67+ 9F1D
  68+ 9F1D
  69+ 9F1D 04               inc b
  70+ 9F1E
  71+ 9F1E 3E 18            ld a,$18
  72+ 9F20 BE               cp (hl)
  73+ 9F21 28 73            jr z,1F
  74+ 9F23
  75+ 9F23 04               inc b
  76+ 9F24
  77+ 9F24              ;   Calcula el Puntero_de_impresión del disparo.
  78+ 9F24
  79+ 9F24              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
  80+ 9F24
  81+ 9F24              ;1 call PreviousScan
  82+ 9F24
  83+ 9F24              ;    ld a,b
  84+ 9F24              ;    srl a
  85+ 9F24              ;    jr z,4F
  86+ 9F24
  87+ 9F24              ; --- Guarda el puntero_de_impresión del disparo en la pila.
  88+ 9F24              ;    push hl
  89+ 9F24              ;    jr 5F
  90+ 9F24              ;4 dec l
  91+ 9F24              ;    push hl
  92+ 9F24              ; ---
  93+ 9F24
  94+ 9F24              ;   Calcula el Puntero_objeto del disparo.
  95+ 9F24
  96+ 9F24              ;5 ld hl,Indice_disparo
  97+ 9F24              ;    inc b
  98+ 9F24              ;    dec b
  99+ 9F24              ;    jr z,2F
 100+ 9F24
 101+ 9F24              ;   Nos desplazamos por el índice de disparos.
 102+ 9F24
 103+ 9F24              ;3 inc l
 104+ 9F24              ;    inc l
 105+ 9F24              ;    djnz 3B
 106+ 9F24
 107+ 9F24              ; --- Guarda el Puntero_objeto del disparo en la pila.
 108+ 9F24              ;2 call Extrae_address
 109+ 9F24              ;    push hl
 110+ 9F24              ; ---
 111+ 9F24
 112+ 9F24              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 113+ 9F24              ; HL en el 1er .db de la caja.
 114+ 9F24
 115+ 9F24              ;    ld hl,Disparo_Amad
 116+ 9F24
 117+ 9F24              ;    ld b,2
 118+ 9F24
 119+ 9F24              ;6 pop de
 120+ 9F24              ;    ld (hl),e
 121+ 9F24              ;    inc hl
 122+ 9F24              ;    ld (hl),d
 123+ 9F24              ;    inc hl
 124+ 9F24
 125+ 9F24              ;    djnz 6B
 126+ 9F24
 127+ 9F24 C9               ret
 128+ 9F25
 129+ 9F25              ; --------------------------------------------------------------------------------------
 130+ 9F25              ;
 131+ 9F25              ;   31/08/24
 132+ 9F25              ;
 133+ 9F25
 134+ 9F25              Compara_con_coordenadas_de_disparo
 135+ 9F25
 136+ 9F25 3A B3 8B         ld a,(Coordenada_y)
 137+ 9F28 47               ld b,a
 138+ 9F29 3A 2C 8C         ld a,(Coordenadas_disparo_certero)
 139+ 9F2C 90               sub b
 140+ 9F2D
 141+ 9F2D              ; A = "0" ok
 142+ 9F2D              ; A = "1" ok
 143+ 9F2D
 144+ 9F2D 28 08            jr z,Comprueba_coordenada_X
 145+ 9F2F 3D               dec a
 146+ 9F30 28 05            jr z,Comprueba_coordenada_X
 147+ 9F32
 148+ 9F32              ; A = "$ff" ok
 149+ 9F32
 150+ 9F32 FE FE            cp $fe
 151+ 9F34 28 01            jr z,Comprueba_coordenada_X
 152+ 9F36
 153+ 9F36 C9               ret
 154+ 9F37
 155+ 9F37              Comprueba_coordenada_X
 156+ 9F37
 157+ 9F37 3A B2 8B         ld a,(Coordenada_X)
 158+ 9F3A 47               ld b,a
 159+ 9F3B 21 2D 8C         ld hl,Coordenadas_disparo_certero+1
 160+ 9F3E 7E               ld a,(hl)
 161+ 9F3F 90               sub b
 162+ 9F40
 163+ 9F40              ; A = "0" ok
 164+ 9F40              ; A = "1" ok
 165+ 9F40
 166+ 9F40 28 09            jr z,Activa_Impacto_en_entidad
 167+ 9F42 3D               dec a
 168+ 9F43 28 06            jr z,Activa_Impacto_en_entidad
 169+ 9F45
 170+ 9F45              ; A = "2" ok
 171+ 9F45
 172+ 9F45 3D               dec a
 173+ 9F46 28 03            jr z,Activa_Impacto_en_entidad
 174+ 9F48
 175+ 9F48              ; A = "$ff"
 176+ 9F48
 177+ 9F48 FE FD            cp $fd
 178+ 9F4A C0               ret nz
 179+ 9F4B
 180+ 9F4B              Activa_Impacto_en_entidad
 181+ 9F4B
 182+ 9F4B              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 183+ 9F4B
 184+ 9F4B 3E 02            ld a,2
 185+ 9F4D 32 B5 8B         ld (Impacto),a
 186+ 9F50
 187+ 9F50              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 188+ 9F50
 189+ 9F50 11 C0 87         ld de,Indice_Explosion_entidades
 190+ 9F53 21 B8 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 191+ 9F56
 192+ 9F56 73               ld (hl),e
 193+ 9F57 23               inc hl
 194+ 9F58 72               ld (hl),d
 195+ 9F59
 196+ 9F59              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 197+ 9F59
 198+ 9F59 21 29 8C         ld hl,Impacto2
 199+ 9F5C CB 9E            res 3,(hl)
 200+ 9F5E
 201+ 9F5E C9               ret
 202+ 9F5F
 203+ 9F5F              ; --------------------------------------------------------------------------------------
 204+ 9F5F              ;
 205+ 9F5F              ;   11/09/24
 206+ 9F5F              ;
 207+ 9F5F
 208+ 9F5F              Limpia_album_de_borrado_disparos
 209+ 9F5F
 210+ 9F5F 21 26 8C         ld hl,Ctrl_5
 211+ 9F62 CB 46            bit 0,(hl)
 212+ 9F64 C8               ret z
 213+ 9F65 CB 86            res 0,(hl)
 214+ 9F67
 215+ 9F67              Limpiando
 216+ 9F67
 217+ 9F67 AF               xor a
 218+ 9F68 2A 0C 8C         ld hl,(Album_de_borrado_disparos)
 219+ 9F6B 77               ld (hl),a
 220+ 9F6C 5D               ld e,l
 221+ 9F6D 54               ld d,h
 222+ 9F6E 1C               inc e                                           ; DE = HL+1
 223+ 9F6F 01 3A 00         ld bc,$003a
 224+ 9F72 ED B0            ldir
 225+ 9F74
 226+ 9F74 C9               ret
 227+ 9F75
 228+ 9F75
 229+ 9F75              ; --------------------------------------------------------------------------------------
 230+ 9F75              ;
 231+ 9F75              ;   26/08/24
 232+ 9F75              ;
 233+ 9F75
 234+ 9F75              Calcula_bytes_pintado_disparos
 235+ 9F75
 236+ 9F75 2A 0A 8C         ld hl,(Album_de_pintado_disparos)
 237+ 9F78 45               ld b,l
 238+ 9F79 2A 0E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 239+ 9F7C 7D               ld a,l
 240+ 9F7D
 241+ 9F7D 90               sub b
 242+ 9F7E 32 10 8C         ld (Num_de_bytes_album_de_disparos),a
 243+ 9F81
 244+ 9F81 C9               ret
 245+ 9F82
 246+ 9F82              ; --------------------------------------------------------------------------------------
 247+ 9F82              ;
 248+ 9F82              ;   11/09/24
 249+ 9F82              ;
 250+ 9F82              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 251+ 9F82              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 252+ 9F82              ;   _disparos que el álbum del FRAME actual).
 253+ 9F82
 254+ 9F82              Limpia_album_de_pintado_disparos
 255+ 9F82
 256+ 9F82              ;*   Exclusiones.
 257+ 9F82
 258+ 9F82 3A 11 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 259+ 9F85 A7               and a
 260+ 9F86 C8               ret z
 261+ 9F87
 262+ 9F87              ; -----
 263+ 9F87
 264+ 9F87 3A 10 8C         ld a,(Num_de_bytes_album_de_disparos)
 265+ 9F8A 47               ld b,a
 266+ 9F8B 3A 11 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 267+ 9F8E
 268+ 9F8E 90               sub b
 269+ 9F8F
 270+ 9F8F C8               ret z
 271+ 9F90 D8               ret c
 272+ 9F91
 273+ 9F91 2A 0E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 274+ 9F94 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 275+ 9F95 AF               xor a                                                               ; "0".
 276+ 9F96
 277+ 9F96 77           1 ld (hl),a
 278+ 9F97 2C               inc l
 279+ 9F98 10 FC            djnz 1B
 280+ 9F9A
 281+ 9F9A C9               ret
 282+ 9F9B
 283+ 9F9B              ; --------------------------------------------------------------------------------------
 284+ 9F9B              ;
 285+ 9F9B              ;   27/08/24
 286+ 9F9B              ;
 287+ 9F9B
 288+ 9F9B              Motor_Disparos
 289+ 9F9B
 290+ 9F9B              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 291+ 9F9B
 292+ 9F9B 21 20 89         ld hl,Disparo_Amad+1
 293+ 9F9E
 294+ 9F9E 34               inc (hl)
 295+ 9F9F 35               dec (hl)
 296+ 9FA0
 297+ 9FA0 28 06            jr z,2F
 298+ 9FA2
 299+ 9FA2              ;   Esta caja contiene un disparo.
 300+ 9FA2
 301+ 9FA2 CD C4 9F         call Consulta_Impacto
 302+ 9FA5 CC DD 9F         call z,Mueve_disparo_Amadeus
 303+ 9FA8
 304+ 9FA8              ; Disparos de entidades.
 305+ 9FA8
 306+ 9FA8 3A 12 8C     2 ld a,(Numero_de_disparos_de_entidades)
 307+ 9FAB A7               and a
 308+ 9FAC C8               ret z
 309+ 9FAD
 310+ 9FAD 06 07            ld b,7                                                               ; Contador de disparos.
 311+ 9FAF 21 23 89         ld hl,Indice_de_disparos_entidades
 312+ 9FB2
 313+ 9FB2 CD A6 90     4 call Extrae_address
 314+ 9FB5 13               inc de
 315+ 9FB6 13               inc de
 316+ 9FB7 ED 53 15 8C      ld (Puntero_rancio_disparos_album),de
 317+ 9FBB
 318+ 9FBB 23               inc hl
 319+ 9FBC
 320+ 9FBC 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 321+ 9FBD 35               dec (hl)
 322+ 9FBE 28 00            jr z,3F
 323+ 9FC0
 324+ 9FC0 EB           3 ex de,hl
 325+ 9FC1 10 EF            djnz 4B
 326+ 9FC3
 327+ 9FC3 C9               ret
 328+ 9FC4
 329+ 9FC4              ; ----------------------
 330+ 9FC4              ;
 331+ 9FC4              ;
 332+ 9FC4              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 333+ 9FC4              ;
 334+ 9FC4              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 335+ 9FC4
 336+ 9FC4
 337+ 9FC4              Consulta_Impacto
 338+ 9FC4
 339+ 9FC4              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 340+ 9FC4              ;   _sea lo más coherente posible.
 341+ 9FC4
 342+ 9FC4 E5               push hl
 343+ 9FC5 2B               dec hl
 344+ 9FC6 CD BE A0         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 345+ 9FC9 E1               pop hl
 346+ 9FCA 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 347+ 9FCB
 348+ 9FCB C8               ret z
 349+ 9FCC
 350+ 9FCC 3A 29 8C         ld a,(Impacto2)
 351+ 9FCF CB DF            set 3,a
 352+ 9FD1 32 29 8C         ld (Impacto2),a
 353+ 9FD4
 354+ 9FD4 E5               push hl
 355+ 9FD5 CD AB A0         call Genera_coordenadas_de_disparo_Amadeus
 356+ 9FD8 E1               pop hl
 357+ 9FD9 CD F6 9F         call Elimina_disparo
 358+ 9FDC
 359+ 9FDC C9               ret
 360+ 9FDD
 361+ 9FDD              ; ----------------------
 362+ 9FDD              ;
 363+ 9FDD              ;
 364+ 9FDD              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 365+ 9FDD
 366+ 9FDD              Mueve_disparo_Amadeus
 367+ 9FDD
 368+ 9FDD CD A6 90         call Extrae_address
 369+ 9FE0
 370+ 9FE0 CD CA 99         call PreviousScan
 371+ 9FE3 CD CA 99         call PreviousScan
 372+ 9FE6 CD CA 99         call PreviousScan
 373+ 9FE9 CD CA 99         call PreviousScan
 374+ 9FEC
 375+ 9FEC              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 376+ 9FEC
 377+ 9FEC 7C               ld a,h
 378+ 9FED D6 40            sub $40
 379+ 9FEF EB               ex de,hl
 380+ 9FF0 38 04            jr c,Elimina_disparo
 381+ 9FF2
 382+ 9FF2               ; Introduce nuevo puntero_de_impresión en la caja.
 383+ 9FF2
 384+ 9FF2 73               ld (hl),e
 385+ 9FF3 23               inc hl
 386+ 9FF4 72               ld (hl),d
 387+ 9FF5
 388+ 9FF5 C9               ret
 389+ 9FF6
 390+ 9FF6              ; ----------------------
 391+ 9FF6              ;
 392+ 9FF6              ;   11/9/24
 393+ 9FF6
 394+ 9FF6              Elimina_disparo
 395+ 9FF6
 396+ 9FF6              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 397+ 9FF6              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 398+ 9FF6
 399+ 9FF6              ;   Disparo_1A defw 0									; Puntero objeto.
 400+ 9FF6              ;   	defw 0											; Puntero de impresión.
 401+ 9FF6
 402+ 9FF6 2B               dec hl
 403+ 9FF7 2B               dec hl
 404+ 9FF8
 405+ 9FF8 AF               xor a
 406+ 9FF9 77               ld (hl),a
 407+ 9FFA 23               inc hl
 408+ 9FFB 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 409+ 9FFC
 410+ 9FFC 23               inc hl
 411+ 9FFD 77               ld (hl),a
 412+ 9FFE 23               inc hl
 413+ 9FFF 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 414+ A000
 415+ A000 3E 01            ld a,1
 416+ A002 32 13 8C         ld (Permiso_de_disparo_Amadeus),a
 417+ A005
 418+ A005 21 26 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 419+ A008 CB C6            set 0,(hl)
 420+ A00A
 421+ A00A AF               xor a
 422+ A00B 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 423+ A00C
 424+ A00C C9               ret
 425+ A00D
 426+ A00D              ; --------------------------------------------------------------------------------------
 427+ A00D              ;
 428+ A00D              ;   21/8/24
 429+ A00D              ;
 430+ A00D
 431+ A00D              Pinta_disparos
 432+ A00D
 433+ A00D ED 73 FE 8B      ld (Stack),sp
 434+ A011 06 02            ld b,2
 435+ A013
 436+ A013 ED 7B 0C 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 437+ A017
 438+ A017 D1           2 pop de
 439+ A018
 440+ A018 14               inc d
 441+ A019 15               dec d
 442+ A01A
 443+ A01A 28 1B            jr z,1F
 444+ A01C
 445+ A01C              Imprime_scanlines_de_disparo
 446+ A01C
 447+ A01C E1               pop hl
 448+ A01D
 449+ A01D              ; Puntero objeto en DE.
 450+ A01D              ; Puntero_de_impresión en HL.
 451+ A01D
 452+ A01D              ; 1er scanline.
 453+ A01D
 454+ A01D 1A               ld a,(de)
 455+ A01E AE               xor (hl)
 456+ A01F 77               ld (hl),a
 457+ A020
 458+ A020 13               inc de
 459+ A021 2C               inc l
 460+ A022
 461+ A022 1A               ld a,(de)
 462+ A023 AE               xor (hl)
 463+ A024 77               ld (hl),a
 464+ A025
 465+ A025              ; 2º scanline.
 466+ A025
 467+ A025 E1               pop hl
 468+ A026 1B               dec de
 469+ A027
 470+ A027 1A               ld a,(de)
 471+ A028 AE               xor (hl)
 472+ A029 77               ld (hl),a
 473+ A02A
 474+ A02A 13               inc de
 475+ A02B 2C               inc l
 476+ A02C
 477+ A02C 1A               ld a,(de)
 478+ A02D AE               xor (hl)
 479+ A02E 77               ld (hl),a
 480+ A02F
 481+ A02F              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 482+ A02F
 483+ A02F 18 E6            jr 2B
 484+ A031
 485+ A031 ED 7B 0A 8C  3 ld sp,(Album_de_pintado_disparos)
 486+ A035 18 E0            jr 2B
 487+ A037
 488+ A037 10 F8        1 djnz 3B
 489+ A039 ED 7B FE 8B      ld sp,(Stack)
 490+ A03D C9               ret
 491+ A03E
 492+ A03E              ; --------------------------------------------------------------------------------------
 493+ A03E              ;
 494+ A03E              ;   14/09/24
 495+ A03E              ;
 496+ A03E              ;   Modifica: HL y DE.
 497+ A03E
 498+ A03E
 499+ A03E              Genera_datos_de_impresion_disparos_Amadeus
 500+ A03E
 501+ A03E ED 73 FE 8B      ld (Stack),sp
 502+ A042 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 503+ A045 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 504+ A046
 505+ A046 14               inc d                                                     ;? Salimos si no hay disparo.
 506+ A047 15               dec d
 507+ A048
 508+ A048 28 12            jr z,Salida
 509+ A04A
 510+ A04A              Genera_scanlines_de_disparo_Amadeus
 511+ A04A
 512+ A04A E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 513+ A04B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 514+ A04B ED 7B 0E 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 515+ A04F
 516+ A04F C1               pop bc
 517+ A050 C1               pop bc
 518+ A051 C1               pop bc
 519+ A052
 520+ A052 ED 73 0E 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 521+ A056
 522+ A056 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 523+ A057 CD CA 99         call PreviousScan
 524+ A05A E5               push hl                                                   ;? Sube 1er scanline al álbum.
 525+ A05B D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 526+ A05C
 527+ A05C              Salida
 528+ A05C
 529+ A05C ED 7B FE 8B      ld sp,(Stack)
 530+ A060 C9               ret
 531+ A061
 532+ A061              ; --------------------------------------------------------------------------------------
 533+ A061              ;
 534+ A061              ;   12/09/24
 535+ A061              ;
 536+ A061
 537+ A061              Genera_disparo_Amadeus
 538+ A061
 539+ A061              ;*  Exclusiones.
 540+ A061
 541+ A061 3A 13 8C         ld a,(Permiso_de_disparo_Amadeus)
 542+ A064 A7               and a
 543+ A065 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 544+ A066
 545+ A066 3D               dec a
 546+ A067 32 13 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 547+ A06A
 548+ A06A              Define_puntero_objeto_disparo
 549+ A06A
 550+ A06A              ;   Inicializamos contador.
 551+ A06A
 552+ A06A 06 00            ld b,0
 553+ A06C
 554+ A06C 2A 6B 89         ld hl,(p.imp.amadeus)
 555+ A06F 2C               inc l
 556+ A070
 557+ A070 3E 80            ld a,$80
 558+ A072 BE               cp (hl)
 559+ A073 28 0D            jr z,1F
 560+ A075
 561+ A075 04               inc b
 562+ A076
 563+ A076 3E 60            ld a,$60
 564+ A078 BE               cp (hl)
 565+ A079 28 07            jr z,1F
 566+ A07B
 567+ A07B
 568+ A07B 04               inc b
 569+ A07C
 570+ A07C 3E 18            ld a,$18
 571+ A07E BE               cp (hl)
 572+ A07F 28 01            jr z,1F
 573+ A081
 574+ A081 04               inc b
 575+ A082
 576+ A082              ;   Calcula el Puntero_de_impresión del disparo.
 577+ A082
 578+ A082              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 579+ A082
 580+ A082 CD CA 99     1 call PreviousScan
 581+ A085
 582+ A085 78               ld a,b
 583+ A086 CB 3F            srl a
 584+ A088 28 03            jr z,4F
 585+ A08A
 586+ A08A              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 587+ A08A E5               push hl
 588+ A08B 18 02            jr 5F
 589+ A08D 2D           4 dec l
 590+ A08E E5               push hl
 591+ A08F              ; ---
 592+ A08F
 593+ A08F              ;   Calcula el Puntero_objeto del disparo.
 594+ A08F
 595+ A08F 21 72 83     5 ld hl,Indice_disparo_Amadeus
 596+ A092 04               inc b
 597+ A093 05               dec b
 598+ A094 28 04            jr z,2F
 599+ A096
 600+ A096              ;   Nos desplazamos por el índice de disparos.
 601+ A096
 602+ A096 2C           3 inc l
 603+ A097 2C               inc l
 604+ A098 10 FC            djnz 3B
 605+ A09A
 606+ A09A              ; --- Guarda el Puntero_objeto del disparo en la pila.
 607+ A09A CD A6 90     2 call Extrae_address
 608+ A09D E5               push hl
 609+ A09E              ; ---
 610+ A09E
 611+ A09E              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 612+ A09E              ; HL en el 1er .db de la caja.
 613+ A09E
 614+ A09E 21 1F 89         ld hl,Disparo_Amad
 615+ A0A1
 616+ A0A1 06 02            ld b,2
 617+ A0A3
 618+ A0A3 D1           6 pop de
 619+ A0A4 73               ld (hl),e
 620+ A0A5 23               inc hl
 621+ A0A6 72               ld (hl),d
 622+ A0A7 23               inc hl
 623+ A0A8
 624+ A0A8 10 F9            djnz 6B
 625+ A0AA
 626+ A0AA C9               ret
 627+ A0AB
 628+ A0AB              Genera_coordenadas_de_disparo_Amadeus
 629+ A0AB
 630+ A0AB              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 631+ A0AB              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 632+ A0AB              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 633+ A0AB
 634+ A0AB CD A6 90         call Extrae_address
 635+ A0AE CD C5 94         call Genera_coordenadas
 636+ A0B1
 637+ A0B1 3D               dec a
 638+ A0B2
 639+ A0B2 21 2C 8C         ld hl,Coordenadas_disparo_certero
 640+ A0B5 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 641+ A0B6 23               inc hl
 642+ A0B7 3A B2 8B         ld a,(Coordenada_X)
 643+ A0BA 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 644+ A0BB
 645+ A0BB AF               xor a
 646+ A0BC 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 647+ A0BD
 648+ A0BD C9               ret
 649+ A0BE
 650+ A0BE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 651+ A0BE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 652+ A0BE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 653+ A0BE
 654+ A0BE              ; ----------------------------------------------
 655+ A0BE              ;
 656+ A0BE              ;   27/08/24
 657+ A0BE              ;
 658+ A0BE              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 659+ A0BE              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 660+ A0BE
 661+ A0BE              Detecta_impacto_en_disparo_de_Amadeus
 662+ A0BE
 663+ A0BE              Extraccion_de_datos
 664+ A0BE
 665+ A0BE 13               inc de
 666+ A0BF 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 667+ A0C0
 668+ A0C0 5E               ld e,(hl)
 669+ A0C1 23               inc hl
 670+ A0C2 56               ld d,(hl)
 671+ A0C3
 672+ A0C3 23               inc hl
 673+ A0C4
 674+ A0C4 4E               ld c,(hl)
 675+ A0C5 23               inc hl
 676+ A0C6 46               ld b,(hl)
 677+ A0C7
 678+ A0C7 C5               push bc
 679+ A0C8 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 680+ A0C9
 681+ A0C9              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 682+ A0C9
 683+ A0C9 CD CA 99         call PreviousScan
 684+ A0CC CD CA 99         call PreviousScan
 685+ A0CF
 686+ A0CF              Detecta_impacto_
 687+ A0CF
 688+ A0CF 1A               ld a,(de)
 689+ A0D0 A6               and (hl)
 690+ A0D1 C0               ret nz
 691+ A0D2
 692+ A0D2 13               inc de
 693+ A0D3 23               inc hl
 694+ A0D4
 695+ A0D4 1A               ld a,(de)
 696+ A0D5 A6               and (hl)
 697+ A0D6 C9               ret
 698+ A0D7
 699+ A0D7              ; -------------------------------------------------------------------------------------------------------------
 700+ A0D7              ;
 701+ A0D7              ;   8/8/24
 702+ A0D7              ;
 703+ A0D7              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 704+ A0D7              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 705+ A0D7              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 706+ A0D7              ;
 707+ A0D7              ;   MODIFICA: HL,DE,BC y A.
 708+ A0D7              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 709+ A0D7              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 710+ A0D7
 711+ A0D7              Colision_Entidad_Amadeus
 712+ A0D7
 713+ A0D7              ; Posible contacto de entidad con Amadeus. ?????
 714+ A0D7
 715+ A0D7              ; Exclusiones:
 716+ A0D7
 717+ A0D7 3A 4C 8C         ld a,(Shield)
 718+ A0DA A7               and a
 719+ A0DB C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 720+ A0DC
 721+ A0DC 21 24 8C         ld hl,Ctrl_3
 722+ A0DF CB 76            bit 6,(hl)
 723+ A0E1 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 724+ A0E2
 725+ A0E2 21 29 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 726+ A0E5 CB 56            bit 2,(hl)
 727+ A0E7 C0               ret nz
 728+ A0E8
 729+ A0E8 3A B3 8B     	ld a,(Coordenada_y)
 730+ A0EB FE 14        	cp $14
 731+ A0ED D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 732+ A0EE
 733+ A0EE 3A 6A 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 734+ A0F1 A7               and a
 735+ A0F2 C0               ret nz
 736+ A0F3
 737+ A0F3              Genera_coordenadas_X
 738+ A0F3
 739+ A0F3              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 740+ A0F3              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 741+ A0F3
 742+ A0F3              ;   Limpiamos almacenes.
 743+ A0F3
 744+ A0F3              ;    call Limpia_Coordenadas_X
 745+ A0F3
 746+ A0F3              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 747+ A0F3
 748+ A0F3 21 2E 8C         ld hl,Coordenadas_X_Entidad
 749+ A0F6 3A B2 8B         ld a,(Coordenada_X)
 750+ A0F9 CD 1B A1         call Guarda_coordenadas_X
 751+ A0FC
 752+ A0FC              ;   Almacenamos las coordenadas X de Amadeus.
 753+ A0FC
 754+ A0FC 3A 67 89         ld a,(CX_Amadeus)
 755+ A0FF CD 1B A1         call Guarda_coordenadas_X
 756+ A102 CD 2F A1         call Compara_coordenadas_X
 757+ A105 C0               ret nz
 758+ A106
 759+ A106 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 760+ A108 32 B5 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 761+ A10B
 762+ A10B 2A F1 8B         ld hl,(Puntero_store_caja)
 763+ A10E 2C               inc l
 764+ A10F 2C               inc l
 765+ A110 2C               inc l
 766+ A111 2C               inc l
 767+ A112 22 2A 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 768+ A115
 769+ A115 21 29 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 770+ A118 CB D6            set 2,(hl)
 771+ A11A
 772+ A11A C9               ret
 773+ A11B
 774+ A11B               ; ----- ----- ----- ----- -----
 775+ A11B
 776+ A11B 77           Guarda_coordenadas_X ld (hl),a
 777+ A11C 3C               inc a
 778+ A11D 2C               inc l
 779+ A11E 77               ld (hl),a
 780+ A11F 3C               inc a
 781+ A120 2C               inc l
 782+ A121 77               ld (hl),a
 783+ A122 2C               inc l
 784+ A123 C9               ret
 785+ A124
 786+ A124 AF           Limpia_Coordenadas_X xor a
 787+ A125 06 06            ld b,6
 788+ A127 21 31 8C         ld hl,Coordenadas_X_Amadeus
 789+ A12A 77           1 ld (hl),a
 790+ A12B 23               inc hl
 791+ A12C 10 FC            djnz 1B
 792+ A12E C9               ret
 793+ A12F
 794+ A12F              ; ----- ----- ----- ----- -----
 795+ A12F
 796+ A12F              Compara_coordenadas_X
 797+ A12F
 798+ A12F DD 21 2E 8C      ld ix,Coordenadas_X_Entidad
 799+ A133 DD 7E 00         ld a,(ix+0)
 800+ A136 CD 44 A1         call Comparando
 801+ A139 C8               ret z
 802+ A13A
 803+ A13A 3C               inc a
 804+ A13B CD 53 A1         call Comparando_1
 805+ A13E C8               ret z
 806+ A13F
 807+ A13F 3C               inc a
 808+ A140 CD 53 A1         call Comparando_1
 809+ A143 C9               ret
 810+ A144
 811+ A144              ; ----- ----- ----- ----- -----
 812+ A144              ;
 813+ A144              ;   4/12/23
 814+ A144              ;
 815+ A144              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 816+ A144
 817+ A144              Comparando
 818+ A144
 819+ A144 DD 2C            inc ixl
 820+ A146 DD 2C            inc ixl
 821+ A148 DD 2C            inc ixl
 822+ A14A
 823+ A14A DD 46 00         ld b,(ix+0)
 824+ A14D DD 4E 01         ld c,(ix+1)
 825+ A150 DD 56 02         ld d,(ix+2)
 826+ A153
 827+ A153 B8           Comparando_1 cp b
 828+ A154 C8               ret z
 829+ A155 B9               cp c
 830+ A156 C8               ret z
 831+ A157 BA               cp d
 832+ A158 C9               ret
 833+ A159
 834+ A159              ; -----------------------------------------------------------------------
 835+ A159              ;
 836+ A159              ;   04/7/24
 837+ A159              ;
 838+ A159
 839+ A159              Detecta_colision_nave_entidad
 840+ A159
 841+ A159              ; Exclusiones:
 842+ A159
 843+ A159              ; Salimos de la rutina si no hay advertencia de posible colisión.
 844+ A159
 845+ A159 21 29 8C     	ld hl,Impacto2
 846+ A15C CB 56        	bit 2,(hl)
 847+ A15E C8           	ret z
 848+ A15F
 849+ A15F              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 850+ A15F
 851+ A15F 2A 6D 89         ld hl,(Pamm_Amadeus)
 852+ A162 CD A6 90         call Extrae_address
 853+ A165 54               ld d,h
 854+ A166 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 855+ A167
 856+ A167 2A 6B 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 857+ A16A 06 10            ld b,16                                        ; Contador de scanlines en B.
 858+ A16C FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 859+ A16F
 860+ A16F C5           1 push bc
 861+ A170 06 03            ld b,3
 862+ A172 E5               push hl
 863+ A173
 864+ A173              ; .db
 865+ A173
 866+ A173 1A           3 ld a,(de)
 867+ A174 A7               and a
 868+ A175 20 03            jr nz,4F
 869+ A177
 870+ A177 2C               inc l
 871+ A178 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 872+ A17A
 873+ A17A ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 874+ A17C 28 04            jr z,2F
 875+ A17E
 876+ A17E              ; Impacto.
 877+ A17E FD 2D            dec iyl
 878+ A180 28 22            jr z,5F
 879+ A182
 880+ A182 1C           2 inc e
 881+ A183 10 EE            djnz 3B
 882+ A185
 883+ A185 E1               pop hl
 884+ A186
 885+ A186              ; Hay salto de línea en el puntero de impresión ???
 886+ A186
 887+ A186 7C               ld a,h
 888+ A187 D6 57            sub $57
 889+ A189 20 0A            jr nz,6F
 890+ A18B
 891+ A18B              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 892+ A18B
 893+ A18B 2A 6B 89         ld hl,(p.imp.amadeus)
 894+ A18E 3E 20            ld a,$20
 895+ A190 A7               and a
 896+ A191 85               add l
 897+ A192 6F               ld l,a
 898+ A193 18 01            jr 7F
 899+ A195
 900+ A195 24           6 inc h
 901+ A196
 902+ A196 C1           7 pop bc
 903+ A197 10 D6            djnz 1B
 904+ A199
 905+ A199              ;   Fin de la comparativa.
 906+ A199
 907+ A199              ;   NO HAY COLISIÓN !!!!!.
 908+ A199              ;
 909+ A199              ;   .db (Impacto) de Amadeus a "0".
 910+ A199              ;   RES el bit2 de (Impacto2).
 911+ A199              ;
 912+ A199              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 913+ A199              ;   Lo colocamos a "0".
 914+ A199
 915+ A199 21 29 8C         ld hl,Impacto2
 916+ A19C CB 96            res 2,(hl)
 917+ A19E 2A 2A 8C         ld hl,(Entidad_sospechosa_de_colision)
 918+ A1A1 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 919+ A1A3 C9               ret
 920+ A1A4
 921+ A1A4              ;   COLISIÓN !!!!!.
 922+ A1A4              ;
 923+ A1A4              ;   .db (Impacto) de Amadeus a "1".
 924+ A1A4              ;   SET el bit3 de (Impacto2).
 925+ A1A4              ;
 926+ A1A4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 927+ A1A4
 928+ A1A4 E1           5 pop hl
 929+ A1A5 C1               pop bc
 930+ A1A6
 931+ A1A6 21 6A 89         ld hl,Impacto_Amadeus
 932+ A1A9 36 01            ld (hl),1
 933+ A1AB 21 29 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 934+ A1AE CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 935+ A1B0
 936+ A1B0 11 C0 87         ld de,Indice_Explosion_entidades
 937+ A1B3 2A 2A 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 938+ A1B6
 939+ A1B6 23               inc hl
 940+ A1B7 23               inc hl
 941+ A1B8 23               inc hl
 942+ A1B9
 943+ A1B9 73               ld (hl),e
 944+ A1BA 23               inc hl
 945+ A1BB 72               ld (hl),d
 946+ A1BC
 947+ A1BC              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 948+ A1BC
 949+ A1BC 11 60 88         ld de,Indice_Explosion_Amadeus
 950+ A1BF 21 6D 89         ld hl,Pamm_Amadeus
 951+ A1C2
 952+ A1C2 73               ld (hl),e
 953+ A1C3 23               inc hl
 954+ A1C4 72               ld (hl),d
 955+ A1C5
 956+ A1C5 C9               ret
 957+ A1C6
 958+ A1C6
 959+ A1C6
# file closed: Disparo.asm
2171  A1C6
2172  A1C6              	SAVESNA "Pruebas.sna", START
2173  A1C6
2174  A1C6
2175  A1C6
2176  A1C6
# file closed: Banco_de_pruebas.asm
